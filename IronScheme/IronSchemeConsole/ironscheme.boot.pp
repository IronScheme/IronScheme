;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$find$5597$1&dy4A
     g$find$5708$1&dy4A
     (case-lambda
       ((g$proc$5619$1&dy4A g$l$5620$1&dy4A)
        (if (null? g$l$5620$1&dy4A)
          '#f
          ((case-lambda
             ((g$e$5621$1&dy4A g$r$5622$1&dy4A g$proc$5623$1&dy4A)
              (if (g$proc$5623$1&dy4A g$e$5621$1&dy4A)
                g$e$5621$1&dy4A
                (g$find$5597$1&dy4A g$proc$5623$1&dy4A g$r$5622$1&dy4A))))
           (car g$l$5620$1&dy4A)
           (cdr g$l$5620$1&dy4A)
           g$proc$5619$1&dy4A)))))
   (g$partition$5598$1&dy4A
     g$partition$5709$1&dy4A
     (case-lambda
       ((g$proc$5624$1&dy4A g$l$5625$1&dy4A)
        ((letrec ((g$f$5626$1&dy4A
                    (case-lambda
                      ((g$l$5627$1&dy4A g$a$5628$1&dy4A g$b$5629$1&dy4A)
                       (if (null? g$l$5627$1&dy4A)
                         (values
                           (reverse! g$a$5628$1&dy4A)
                           (reverse! g$b$5629$1&dy4A))
                         ((case-lambda
                            ((g$e$5630$1&dy4A)
                             (if (g$proc$5624$1&dy4A g$e$5630$1&dy4A)
                               (g$f$5626$1&dy4A
                                 (cdr g$l$5627$1&dy4A)
                                 (cons g$e$5630$1&dy4A g$a$5628$1&dy4A)
                                 g$b$5629$1&dy4A)
                               (g$f$5626$1&dy4A
                                 (cdr g$l$5627$1&dy4A)
                                 g$a$5628$1&dy4A
                                 (cons g$e$5630$1&dy4A g$b$5629$1&dy4A)))))
                          (car g$l$5627$1&dy4A)))))))
           g$f$5626$1&dy4A)
         g$l$5625$1&dy4A
         '()
         '()))))
   (g$remp$5599$1&dy4A
     g$remp$5710$1&dy4A
     (case-lambda
       ((g$proc$5631$1&dy4A g$l$5632$1&dy4A)
        ((letrec ((g$f$5633$1&dy4A
                    (case-lambda
                      ((g$l$5634$1&dy4A g$a$5635$1&dy4A)
                       (if (null? g$l$5634$1&dy4A)
                         (reverse! g$a$5635$1&dy4A)
                         ((case-lambda
                            ((g$e$5636$1&dy4A)
                             (if (g$proc$5631$1&dy4A g$e$5636$1&dy4A)
                               (g$f$5633$1&dy4A
                                 (cdr g$l$5634$1&dy4A)
                                 g$a$5635$1&dy4A)
                               (g$f$5633$1&dy4A
                                 (cdr g$l$5634$1&dy4A)
                                 (cons g$e$5636$1&dy4A g$a$5635$1&dy4A)))))
                          (car g$l$5634$1&dy4A)))))))
           g$f$5633$1&dy4A)
         g$l$5632$1&dy4A
         '()))))
   (g$filter$5600$1&dy4A
     g$filter$5711$1&dy4A
     (case-lambda
       ((g$proc$5637$1&dy4A g$l$5638$1&dy4A)
        ((letrec ((g$f$5639$1&dy4A
                    (case-lambda
                      ((g$l$5640$1&dy4A g$a$5641$1&dy4A)
                       (if (null? g$l$5640$1&dy4A)
                         (reverse! g$a$5641$1&dy4A)
                         ((case-lambda
                            ((g$e$5642$1&dy4A)
                             (if (g$proc$5637$1&dy4A g$e$5642$1&dy4A)
                               (g$f$5639$1&dy4A
                                 (cdr g$l$5640$1&dy4A)
                                 (cons g$e$5642$1&dy4A g$a$5641$1&dy4A))
                               (g$f$5639$1&dy4A
                                 (cdr g$l$5640$1&dy4A)
                                 g$a$5641$1&dy4A))))
                          (car g$l$5640$1&dy4A)))))))
           g$f$5639$1&dy4A)
         g$l$5638$1&dy4A
         '()))))
   (g$assq$5601$1&dy4A
     g$assq$5712$1&dy4A
     (case-lambda
       ((g$obj$5643$1&dy4A g$lst$5644$1&dy4A)
        (if (null? g$lst$5644$1&dy4A)
          '#f
          ((case-lambda
             ((g$obj$5645$1&dy4A g$t$5646$1&dy4A g$r$5647$1&dy4A)
              (if (eq? g$obj$5645$1&dy4A (car g$t$5646$1&dy4A))
                g$t$5646$1&dy4A
                (g$assq$5601$1&dy4A g$obj$5645$1&dy4A g$r$5647$1&dy4A))))
           g$obj$5643$1&dy4A
           (car g$lst$5644$1&dy4A)
           (cdr g$lst$5644$1&dy4A))))))
   (g$assv$5602$1&dy4A
     g$assv$5713$1&dy4A
     (case-lambda
       ((g$obj$5648$1&dy4A g$lst$5649$1&dy4A)
        (if (null? g$lst$5649$1&dy4A)
          '#f
          ((case-lambda
             ((g$obj$5650$1&dy4A g$t$5651$1&dy4A g$r$5652$1&dy4A)
              (if (eqv? g$obj$5650$1&dy4A (car g$t$5651$1&dy4A))
                g$t$5651$1&dy4A
                (g$assv$5602$1&dy4A g$obj$5650$1&dy4A g$r$5652$1&dy4A))))
           g$obj$5648$1&dy4A
           (car g$lst$5649$1&dy4A)
           (cdr g$lst$5649$1&dy4A))))))
   (g$assoc$5603$1&dy4A
     g$assoc$5714$1&dy4A
     (case-lambda
       ((g$obj$5653$1&dy4A g$lst$5654$1&dy4A)
        (if (null? g$lst$5654$1&dy4A)
          '#f
          ((case-lambda
             ((g$obj$5655$1&dy4A g$t$5656$1&dy4A g$r$5657$1&dy4A)
              (if (equal? g$obj$5655$1&dy4A (car g$t$5656$1&dy4A))
                g$t$5656$1&dy4A
                (g$assoc$5603$1&dy4A g$obj$5655$1&dy4A g$r$5657$1&dy4A))))
           g$obj$5653$1&dy4A
           (car g$lst$5654$1&dy4A)
           (cdr g$lst$5654$1&dy4A))))))
   (g$assp$5604$1&dy4A
     g$assp$5715$1&dy4A
     (case-lambda
       ((g$p?$5658$1&dy4A g$lst$5659$1&dy4A)
        (if (null? g$lst$5659$1&dy4A)
          '#f
          ((case-lambda
             ((g$p?$5660$1&dy4A g$t$5661$1&dy4A g$r$5662$1&dy4A)
              (if (g$p?$5660$1&dy4A (car g$t$5661$1&dy4A))
                g$t$5661$1&dy4A
                (g$assp$5604$1&dy4A g$p?$5660$1&dy4A g$r$5662$1&dy4A))))
           g$p?$5658$1&dy4A
           (car g$lst$5659$1&dy4A)
           (cdr g$lst$5659$1&dy4A))))))
   (g$memq$5605$1&dy4A
     g$memq$5716$1&dy4A
     (case-lambda
       ((g$obj$5663$1&dy4A g$lst$5664$1&dy4A)
        (if (null? g$lst$5664$1&dy4A)
          '#f
          (if (eq? g$obj$5663$1&dy4A (car g$lst$5664$1&dy4A))
            g$lst$5664$1&dy4A
            (g$memq$5605$1&dy4A g$obj$5663$1&dy4A (cdr g$lst$5664$1&dy4A)))))))
   (g$memv$5606$1&dy4A
     g$memv$5717$1&dy4A
     (case-lambda
       ((g$obj$5665$1&dy4A g$lst$5666$1&dy4A)
        (if (null? g$lst$5666$1&dy4A)
          '#f
          (if (eqv? g$obj$5665$1&dy4A (car g$lst$5666$1&dy4A))
            g$lst$5666$1&dy4A
            (g$memv$5606$1&dy4A g$obj$5665$1&dy4A (cdr g$lst$5666$1&dy4A)))))))
   (g$member$5607$1&dy4A
     g$member$5718$1&dy4A
     (case-lambda
       ((g$obj$5667$1&dy4A g$lst$5668$1&dy4A)
        (if (null? g$lst$5668$1&dy4A)
          '#f
          (if (equal? g$obj$5667$1&dy4A (car g$lst$5668$1&dy4A))
            g$lst$5668$1&dy4A
            (g$member$5607$1&dy4A
              g$obj$5667$1&dy4A
              (cdr g$lst$5668$1&dy4A)))))))
   (g$memp$5608$1&dy4A
     g$memp$5719$1&dy4A
     (case-lambda
       ((g$p?$5669$1&dy4A g$lst$5670$1&dy4A)
        (if (null? g$lst$5670$1&dy4A)
          '#f
          (if (g$p?$5669$1&dy4A (car g$lst$5670$1&dy4A))
            g$lst$5670$1&dy4A
            (g$memp$5608$1&dy4A g$p?$5669$1&dy4A (cdr g$lst$5670$1&dy4A)))))))
   (g$all-empty?$5609$1&dy4A
     g$all-empty?$5720$1&dy4A
     (case-lambda
       ((g$ls$5671$1&dy4A)
        ((case-lambda
           ((g$t$5672$1&dy4A)
            (if g$t$5672$1&dy4A
              g$t$5672$1&dy4A
              (begin
                '#f
                (if (null? (car g$ls$5671$1&dy4A))
                  (begin '#f (g$all-empty?$5609$1&dy4A (cdr g$ls$5671$1&dy4A)))
                  '#f)))))
         (null? g$ls$5671$1&dy4A)))))
   (g$split$5610$1&dy4A
     g$split$5721$1&dy4A
     (case-lambda
       ((g$ls$5673$1&dy4A)
        (if (null? g$ls$5673$1&dy4A)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5610$1&dy4A (cdr g$ls$5673$1&dy4A))))
            (case-lambda
              ((g$cars$5674$1&dy4A g$cdrs$5675$1&dy4A)
               ((case-lambda
                  ((g$a$5676$1&dy4A)
                   (values
                     (cons (car g$a$5676$1&dy4A) g$cars$5674$1&dy4A)
                     (cons (cdr g$a$5676$1&dy4A) g$cdrs$5675$1&dy4A))))
                (car g$ls$5673$1&dy4A)))))))))
   (g$for-all$5611$1&dy4A
     g$for-all$5722$1&dy4A
     (case-lambda
       ((g$f$5677$1&dy4A . g$args$5678$1&dy4A)
        (if (g$all-empty?$5609$1&dy4A g$args$5678$1&dy4A)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5610$1&dy4A g$args$5678$1&dy4A)))
            (case-lambda
              ((g$cars$5679$1&dy4A g$cdrs$5680$1&dy4A)
               (if (g$all-empty?$5609$1&dy4A g$cdrs$5680$1&dy4A)
                 (apply g$f$5677$1&dy4A g$cars$5679$1&dy4A)
                 (if (apply g$f$5677$1&dy4A g$cars$5679$1&dy4A)
                   (begin
                     '#f
                     (apply
                       g$for-all$5611$1&dy4A
                       g$f$5677$1&dy4A
                       g$cdrs$5680$1&dy4A))
                   '#f)))))))))
   (g$exists$5612$1&dy4A
     g$exists$5723$1&dy4A
     (case-lambda
       ((g$f$5681$1&dy4A . g$args$5682$1&dy4A)
        (if (g$all-empty?$5609$1&dy4A g$args$5682$1&dy4A)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5610$1&dy4A g$args$5682$1&dy4A)))
            (case-lambda
              ((g$cars$5683$1&dy4A g$cdrs$5684$1&dy4A)
               ((case-lambda
                  ((g$t$5685$1&dy4A)
                   (if g$t$5685$1&dy4A
                     g$t$5685$1&dy4A
                     (begin
                       '#f
                       (apply
                         g$exists$5612$1&dy4A
                         g$f$5681$1&dy4A
                         g$cdrs$5684$1&dy4A)))))
                (apply g$f$5681$1&dy4A g$cars$5683$1&dy4A)))))))))
   (g$cons*$5613$1&dy4A
     g$cons*$5724$1&dy4A
     (case-lambda
       ((g$a$5686$1&dy4A . g$rest$5687$1&dy4A)
        ((letrec ((g$f$5688$1&dy4A
                    (case-lambda
                      ((g$a$5689$1&dy4A g$rest$5690$1&dy4A)
                       (if (null? g$rest$5690$1&dy4A)
                         g$a$5689$1&dy4A
                         (cons
                           g$a$5689$1&dy4A
                           (g$f$5688$1&dy4A
                             (car g$rest$5690$1&dy4A)
                             (cdr g$rest$5690$1&dy4A))))))))
           g$f$5688$1&dy4A)
         g$a$5686$1&dy4A
         g$rest$5687$1&dy4A))))
   (g$fold-left$5614$1&dy4A
     g$fold-left$5725$1&dy4A
     (case-lambda
       ((g$combine$5691$1&dy4A
          g$nil$5692$1&dy4A
          g$list1$5693$1&dy4A
          .
          g$lists$5694$1&dy4A)
        (if (null? g$list1$5693$1&dy4A)
          g$nil$5692$1&dy4A
          (apply
            g$fold-left$5614$1&dy4A
            (g$cons*$5613$1&dy4A
              g$combine$5691$1&dy4A
              (apply
                g$combine$5691$1&dy4A
                (g$cons*$5613$1&dy4A
                  g$nil$5692$1&dy4A
                  (car g$list1$5693$1&dy4A)
                  (map car g$lists$5694$1&dy4A)))
              (cdr g$list1$5693$1&dy4A)
              (map cdr g$lists$5694$1&dy4A)))))))
   (g$fold-right$5615$1&dy4A
     g$fold-right$5726$1&dy4A
     (case-lambda
       ((g$combine$5695$1&dy4A
          g$nil$5696$1&dy4A
          g$list1$5697$1&dy4A
          .
          g$lists$5698$1&dy4A)
        (if (null? g$list1$5697$1&dy4A)
          g$nil$5696$1&dy4A
          (apply
            g$combine$5695$1&dy4A
            (append
              (list (car g$list1$5697$1&dy4A))
              (map car g$lists$5698$1&dy4A)
              (list
                (apply
                  g$fold-right$5615$1&dy4A
                  (g$cons*$5613$1&dy4A
                    g$combine$5695$1&dy4A
                    g$nil$5696$1&dy4A
                    (cdr g$list1$5697$1&dy4A)
                    (map cdr g$lists$5698$1&dy4A))))))))))
   (g$remove$5616$1&dy4A
     g$remove$5727$1&dy4A
     (case-lambda
       ((g$obj$5699$1&dy4A g$list$5700$1&dy4A)
        (g$remp$5599$1&dy4A
          (case-lambda
            ((g$x$5701$1&dy4A) (equal? g$obj$5699$1&dy4A g$x$5701$1&dy4A)))
          g$list$5700$1&dy4A))))
   (g$remv$5617$1&dy4A
     g$remv$5728$1&dy4A
     (case-lambda
       ((g$obj$5702$1&dy4A g$list$5703$1&dy4A)
        (g$remp$5599$1&dy4A
          (case-lambda
            ((g$x$5704$1&dy4A) (eqv? g$obj$5702$1&dy4A g$x$5704$1&dy4A)))
          g$list$5703$1&dy4A))))
   (g$remq$5618$1&dy4A
     g$remq$5729$1&dy4A
     (case-lambda
       ((g$obj$5705$1&dy4A g$list$5706$1&dy4A)
        (g$remp$5599$1&dy4A
          (case-lambda
            ((g$x$5707$1&dy4A) (eq? g$obj$5705$1&dy4A g$x$5707$1&dy4A)))
          g$list$5706$1&dy4A)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5730$1&dy4A
     g$caar$5885$1&dy4A
     (case-lambda ((g$x$5785$1&dy4A) (car (car g$x$5785$1&dy4A)))))
   (g$cadr$5731$1&dy4A
     g$cadr$5886$1&dy4A
     (case-lambda ((g$x$5786$1&dy4A) (car (cdr g$x$5786$1&dy4A)))))
   (g$cdar$5732$1&dy4A
     g$cdar$5887$1&dy4A
     (case-lambda ((g$x$5787$1&dy4A) (cdr (car g$x$5787$1&dy4A)))))
   (g$cddr$5733$1&dy4A
     g$cddr$5888$1&dy4A
     (case-lambda ((g$x$5788$1&dy4A) (cdr (cdr g$x$5788$1&dy4A)))))
   (g$caaar$5734$1&dy4A
     g$caaar$5889$1&dy4A
     (case-lambda
       ((g$x$5789$1&dy4A) (g$caar$5730$1&dy4A (car g$x$5789$1&dy4A)))))
   (g$caadr$5735$1&dy4A
     g$caadr$5890$1&dy4A
     (case-lambda
       ((g$x$5790$1&dy4A) (g$caar$5730$1&dy4A (cdr g$x$5790$1&dy4A)))))
   (g$cadar$5736$1&dy4A
     g$cadar$5891$1&dy4A
     (case-lambda
       ((g$x$5791$1&dy4A) (g$cadr$5731$1&dy4A (car g$x$5791$1&dy4A)))))
   (g$caddr$5737$1&dy4A
     g$caddr$5892$1&dy4A
     (case-lambda
       ((g$x$5792$1&dy4A) (g$cadr$5731$1&dy4A (cdr g$x$5792$1&dy4A)))))
   (g$cdaar$5738$1&dy4A
     g$cdaar$5893$1&dy4A
     (case-lambda
       ((g$x$5793$1&dy4A) (g$cdar$5732$1&dy4A (car g$x$5793$1&dy4A)))))
   (g$cdadr$5739$1&dy4A
     g$cdadr$5894$1&dy4A
     (case-lambda
       ((g$x$5794$1&dy4A) (g$cdar$5732$1&dy4A (cdr g$x$5794$1&dy4A)))))
   (g$cddar$5740$1&dy4A
     g$cddar$5895$1&dy4A
     (case-lambda
       ((g$x$5795$1&dy4A) (g$cddr$5733$1&dy4A (car g$x$5795$1&dy4A)))))
   (g$cdddr$5741$1&dy4A
     g$cdddr$5896$1&dy4A
     (case-lambda
       ((g$x$5796$1&dy4A) (g$cddr$5733$1&dy4A (cdr g$x$5796$1&dy4A)))))
   (g$caaaar$5742$1&dy4A
     g$caaaar$5897$1&dy4A
     (case-lambda
       ((g$x$5797$1&dy4A) (g$caaar$5734$1&dy4A (car g$x$5797$1&dy4A)))))
   (g$caaadr$5743$1&dy4A
     g$caaadr$5898$1&dy4A
     (case-lambda
       ((g$x$5798$1&dy4A) (g$caaar$5734$1&dy4A (cdr g$x$5798$1&dy4A)))))
   (g$caadar$5744$1&dy4A
     g$caadar$5899$1&dy4A
     (case-lambda
       ((g$x$5799$1&dy4A) (g$caadr$5735$1&dy4A (car g$x$5799$1&dy4A)))))
   (g$caaddr$5745$1&dy4A
     g$caaddr$5900$1&dy4A
     (case-lambda
       ((g$x$5800$1&dy4A) (g$caadr$5735$1&dy4A (cdr g$x$5800$1&dy4A)))))
   (g$cadaar$5746$1&dy4A
     g$cadaar$5901$1&dy4A
     (case-lambda
       ((g$x$5801$1&dy4A) (g$cadar$5736$1&dy4A (car g$x$5801$1&dy4A)))))
   (g$cadadr$5747$1&dy4A
     g$cadadr$5902$1&dy4A
     (case-lambda
       ((g$x$5802$1&dy4A) (g$cadar$5736$1&dy4A (cdr g$x$5802$1&dy4A)))))
   (g$caddar$5748$1&dy4A
     g$caddar$5903$1&dy4A
     (case-lambda
       ((g$x$5803$1&dy4A) (g$caddr$5737$1&dy4A (car g$x$5803$1&dy4A)))))
   (g$cadddr$5749$1&dy4A
     g$cadddr$5904$1&dy4A
     (case-lambda
       ((g$x$5804$1&dy4A) (g$caddr$5737$1&dy4A (cdr g$x$5804$1&dy4A)))))
   (g$cdaaar$5750$1&dy4A
     g$cdaaar$5905$1&dy4A
     (case-lambda
       ((g$x$5805$1&dy4A) (g$cdaar$5738$1&dy4A (car g$x$5805$1&dy4A)))))
   (g$cdaadr$5751$1&dy4A
     g$cdaadr$5906$1&dy4A
     (case-lambda
       ((g$x$5806$1&dy4A) (g$cdaar$5738$1&dy4A (cdr g$x$5806$1&dy4A)))))
   (g$cdadar$5752$1&dy4A
     g$cdadar$5907$1&dy4A
     (case-lambda
       ((g$x$5807$1&dy4A) (g$cdadr$5739$1&dy4A (car g$x$5807$1&dy4A)))))
   (g$cdaddr$5753$1&dy4A
     g$cdaddr$5908$1&dy4A
     (case-lambda
       ((g$x$5808$1&dy4A) (g$cdadr$5739$1&dy4A (cdr g$x$5808$1&dy4A)))))
   (g$cddaar$5754$1&dy4A
     g$cddaar$5909$1&dy4A
     (case-lambda
       ((g$x$5809$1&dy4A) (g$cddar$5740$1&dy4A (car g$x$5809$1&dy4A)))))
   (g$cddadr$5755$1&dy4A
     g$cddadr$5910$1&dy4A
     (case-lambda
       ((g$x$5810$1&dy4A) (g$cddar$5740$1&dy4A (cdr g$x$5810$1&dy4A)))))
   (g$cdddar$5756$1&dy4A
     g$cdddar$5911$1&dy4A
     (case-lambda
       ((g$x$5811$1&dy4A) (g$cdddr$5741$1&dy4A (car g$x$5811$1&dy4A)))))
   (g$cddddr$5757$1&dy4A
     g$cddddr$5912$1&dy4A
     (case-lambda
       ((g$x$5812$1&dy4A) (g$cdddr$5741$1&dy4A (cdr g$x$5812$1&dy4A)))))
   (g$string=?$5764$1&dy4A
     g$string=?$5913$1&dy4A
     (case-lambda
       ((g$a$5813$1&dy4A g$b$5814$1&dy4A . g$rest$5815$1&dy4A)
        (begin
          (if (not (string? g$a$5813$1&dy4A))
            (assertion-violation 'string=? '"not a string" g$a$5813$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5816$1&dy4A)
               (begin
                 (if (not (string? g$x$5816$1&dy4A))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5816$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5817$1&dy4A)
                     (begin
                       (set! g$a$5813$1&dy4A g$x$5816$1&dy4A)
                       g$r$5817$1&dy4A)))
                  (= (string-compare g$a$5813$1&dy4A g$x$5816$1&dy4A) '0)))))
            (cons g$b$5814$1&dy4A g$rest$5815$1&dy4A))))))
   (g$string<?$5765$1&dy4A
     g$string<?$5914$1&dy4A
     (case-lambda
       ((g$a$5818$1&dy4A g$b$5819$1&dy4A . g$rest$5820$1&dy4A)
        (begin
          (if (not (string? g$a$5818$1&dy4A))
            (assertion-violation 'string<? '"not a string" g$a$5818$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5821$1&dy4A)
               (begin
                 (if (not (string? g$x$5821$1&dy4A))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5821$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5822$1&dy4A)
                     (begin
                       (set! g$a$5818$1&dy4A g$x$5821$1&dy4A)
                       g$r$5822$1&dy4A)))
                  (< (string-compare g$a$5818$1&dy4A g$x$5821$1&dy4A) '0)))))
            (cons g$b$5819$1&dy4A g$rest$5820$1&dy4A))))))
   (g$string>?$5766$1&dy4A
     g$string>?$5915$1&dy4A
     (case-lambda
       ((g$a$5823$1&dy4A g$b$5824$1&dy4A . g$rest$5825$1&dy4A)
        (begin
          (if (not (string? g$a$5823$1&dy4A))
            (assertion-violation 'string>? '"not a string" g$a$5823$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5826$1&dy4A)
               (begin
                 (if (not (string? g$x$5826$1&dy4A))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5826$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5827$1&dy4A)
                     (begin
                       (set! g$a$5823$1&dy4A g$x$5826$1&dy4A)
                       g$r$5827$1&dy4A)))
                  (> (string-compare g$a$5823$1&dy4A g$x$5826$1&dy4A) '0)))))
            (cons g$b$5824$1&dy4A g$rest$5825$1&dy4A))))))
   (g$string<=?$5767$1&dy4A
     g$string<=?$5916$1&dy4A
     (case-lambda
       ((g$a$5828$1&dy4A g$b$5829$1&dy4A . g$rest$5830$1&dy4A)
        (begin
          (if (not (string? g$a$5828$1&dy4A))
            (assertion-violation 'string<=? '"not a string" g$a$5828$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5831$1&dy4A)
               (begin
                 (if (not (string? g$x$5831$1&dy4A))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5831$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5832$1&dy4A)
                     (begin
                       (set! g$a$5828$1&dy4A g$x$5831$1&dy4A)
                       g$r$5832$1&dy4A)))
                  (<= (string-compare g$a$5828$1&dy4A g$x$5831$1&dy4A) '0)))))
            (cons g$b$5829$1&dy4A g$rest$5830$1&dy4A))))))
   (g$string>=?$5768$1&dy4A
     g$string>=?$5917$1&dy4A
     (case-lambda
       ((g$a$5833$1&dy4A g$b$5834$1&dy4A . g$rest$5835$1&dy4A)
        (begin
          (if (not (string? g$a$5833$1&dy4A))
            (assertion-violation 'string>=? '"not a string" g$a$5833$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5836$1&dy4A)
               (begin
                 (if (not (string? g$x$5836$1&dy4A))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5836$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5837$1&dy4A)
                     (begin
                       (set! g$a$5833$1&dy4A g$x$5836$1&dy4A)
                       g$r$5837$1&dy4A)))
                  (>= (string-compare g$a$5833$1&dy4A g$x$5836$1&dy4A) '0)))))
            (cons g$b$5834$1&dy4A g$rest$5835$1&dy4A))))))
   (g$symbol=?$5769$1&dy4A
     g$symbol=?$5918$1&dy4A
     (case-lambda
       ((g$a$5838$1&dy4A g$b$5839$1&dy4A . g$rest$5840$1&dy4A)
        (begin
          (if (not (symbol? g$a$5838$1&dy4A))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5838$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5841$1&dy4A)
               (begin
                 (if (not (symbol? g$x$5841$1&dy4A))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5841$1&dy4A)
                   (void))
                 (eq? g$a$5838$1&dy4A g$x$5841$1&dy4A))))
            (cons g$b$5839$1&dy4A g$rest$5840$1&dy4A))))))
   (g$boolean=?$5770$1&dy4A
     g$boolean=?$5919$1&dy4A
     (case-lambda
       ((g$a$5842$1&dy4A g$b$5843$1&dy4A . g$rest$5844$1&dy4A)
        (begin
          (if (not (boolean? g$a$5842$1&dy4A))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5842$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5845$1&dy4A)
               (begin
                 (if (not (boolean? g$x$5845$1&dy4A))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5845$1&dy4A)
                   (void))
                 (eq? g$a$5842$1&dy4A g$x$5845$1&dy4A))))
            (cons g$b$5843$1&dy4A g$rest$5844$1&dy4A))))))
   (g$char=?$5777$1&dy4A
     g$char=?$5920$1&dy4A
     (case-lambda
       ((g$a$5846$1&dy4A g$b$5847$1&dy4A . g$rest$5848$1&dy4A)
        (begin
          (if (not (char? g$a$5846$1&dy4A))
            (assertion-violation 'char=? '"not a char" g$a$5846$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5849$1&dy4A)
               (begin
                 (if (not (char? g$x$5849$1&dy4A))
                   (assertion-violation 'char=? '"not a char" g$x$5849$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5850$1&dy4A)
                     (begin
                       (set! g$a$5846$1&dy4A g$x$5849$1&dy4A)
                       g$r$5850$1&dy4A)))
                  (= (char->integer g$a$5846$1&dy4A)
                     (char->integer g$x$5849$1&dy4A))))))
            (cons g$b$5847$1&dy4A g$rest$5848$1&dy4A))))))
   (g$char<?$5778$1&dy4A
     g$char<?$5921$1&dy4A
     (case-lambda
       ((g$a$5851$1&dy4A g$b$5852$1&dy4A . g$rest$5853$1&dy4A)
        (begin
          (if (not (char? g$a$5851$1&dy4A))
            (assertion-violation 'char<? '"not a char" g$a$5851$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5854$1&dy4A)
               (begin
                 (if (not (char? g$x$5854$1&dy4A))
                   (assertion-violation 'char<? '"not a char" g$x$5854$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5855$1&dy4A)
                     (begin
                       (set! g$a$5851$1&dy4A g$x$5854$1&dy4A)
                       g$r$5855$1&dy4A)))
                  (< (char->integer g$a$5851$1&dy4A)
                     (char->integer g$x$5854$1&dy4A))))))
            (cons g$b$5852$1&dy4A g$rest$5853$1&dy4A))))))
   (g$char>?$5779$1&dy4A
     g$char>?$5922$1&dy4A
     (case-lambda
       ((g$a$5856$1&dy4A g$b$5857$1&dy4A . g$rest$5858$1&dy4A)
        (begin
          (if (not (char? g$a$5856$1&dy4A))
            (assertion-violation 'char>? '"not a char" g$a$5856$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5859$1&dy4A)
               (begin
                 (if (not (char? g$x$5859$1&dy4A))
                   (assertion-violation 'char>? '"not a char" g$x$5859$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5860$1&dy4A)
                     (begin
                       (set! g$a$5856$1&dy4A g$x$5859$1&dy4A)
                       g$r$5860$1&dy4A)))
                  (> (char->integer g$a$5856$1&dy4A)
                     (char->integer g$x$5859$1&dy4A))))))
            (cons g$b$5857$1&dy4A g$rest$5858$1&dy4A))))))
   (g$char<=?$5780$1&dy4A
     g$char<=?$5923$1&dy4A
     (case-lambda
       ((g$a$5861$1&dy4A g$b$5862$1&dy4A . g$rest$5863$1&dy4A)
        (begin
          (if (not (char? g$a$5861$1&dy4A))
            (assertion-violation 'char<=? '"not a char" g$a$5861$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5864$1&dy4A)
               (begin
                 (if (not (char? g$x$5864$1&dy4A))
                   (assertion-violation 'char<=? '"not a char" g$x$5864$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5865$1&dy4A)
                     (begin
                       (set! g$a$5861$1&dy4A g$x$5864$1&dy4A)
                       g$r$5865$1&dy4A)))
                  (<= (char->integer g$a$5861$1&dy4A)
                      (char->integer g$x$5864$1&dy4A))))))
            (cons g$b$5862$1&dy4A g$rest$5863$1&dy4A))))))
   (g$char>=?$5781$1&dy4A
     g$char>=?$5924$1&dy4A
     (case-lambda
       ((g$a$5866$1&dy4A g$b$5867$1&dy4A . g$rest$5868$1&dy4A)
        (begin
          (if (not (char? g$a$5866$1&dy4A))
            (assertion-violation 'char>=? '"not a char" g$a$5866$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$5869$1&dy4A)
               (begin
                 (if (not (char? g$x$5869$1&dy4A))
                   (assertion-violation 'char>=? '"not a char" g$x$5869$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$5870$1&dy4A)
                     (begin
                       (set! g$a$5866$1&dy4A g$x$5869$1&dy4A)
                       g$r$5870$1&dy4A)))
                  (>= (char->integer g$a$5866$1&dy4A)
                      (char->integer g$x$5869$1&dy4A))))))
            (cons g$b$5867$1&dy4A g$rest$5868$1&dy4A))))))
   (g$rationalize$5782$1&dy4A
     g$rationalize$5925$1&dy4A
     (case-lambda
       ((g$x$5871$1&dy4A g$e$5872$1&dy4A)
        (if (if (infinite? g$x$5871$1&dy4A)
              (begin '#f (infinite? g$e$5872$1&dy4A))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5873$1&dy4A)
              (if (if (exact? g$x$5871$1&dy4A)
                    (begin '#f (exact? g$e$5872$1&dy4A))
                    '#f)
                g$r$5873$1&dy4A
                (inexact g$r$5873$1&dy4A))))
           (apply
             /
             (g$find-ratio$5783$1&dy4A g$x$5871$1&dy4A g$e$5872$1&dy4A)))))))
   (g$find-ratio$5783$1&dy4A
     g$find-ratio$5926$1&dy4A
     (case-lambda
       ((g$x$5874$1&dy4A g$e$5875$1&dy4A)
        (g$find-ratio-between$5784$1&dy4A
          (- g$x$5874$1&dy4A g$e$5875$1&dy4A)
          (+ g$x$5874$1&dy4A g$e$5875$1&dy4A)))))
   (g$find-ratio-between$5784$1&dy4A
     g$find-ratio-between$5927$1&dy4A
     (case-lambda
       ((g$x$5876$1&dy4A g$y$5877$1&dy4A)
        (letrec* ((g$sr$5878$1&dy4A
                    (case-lambda
                      ((g$x$5880$1&dy4A g$y$5881$1&dy4A)
                       ((case-lambda
                          ((g$fx$5882$1&dy4A g$fy$5883$1&dy4A)
                           (if (>= g$fx$5882$1&dy4A g$x$5880$1&dy4A)
                             (list g$fx$5882$1&dy4A '1)
                             (if (= g$fx$5882$1&dy4A g$fy$5883$1&dy4A)
                               ((case-lambda
                                  ((g$rat$5884$1&dy4A)
                                   (list
                                     (+ (g$cadr$5731$1&dy4A g$rat$5884$1&dy4A)
                                        (* g$fx$5882$1&dy4A
                                           (car g$rat$5884$1&dy4A)))
                                     (car g$rat$5884$1&dy4A))))
                                (g$sr$5878$1&dy4A
                                  (/ (- g$y$5881$1&dy4A g$fy$5883$1&dy4A))
                                  (/ (- g$x$5880$1&dy4A g$fx$5882$1&dy4A))))
                               (list (+ '1 g$fx$5882$1&dy4A) '1)))))
                        (exact (floor g$x$5880$1&dy4A))
                        (exact (floor g$y$5881$1&dy4A)))))))
          (if (< g$y$5877$1&dy4A g$x$5876$1&dy4A)
            (g$find-ratio-between$5784$1&dy4A g$y$5877$1&dy4A g$x$5876$1&dy4A)
            (if (>= g$x$5876$1&dy4A g$y$5877$1&dy4A)
              (list g$x$5876$1&dy4A '1)
              (if (positive? g$x$5876$1&dy4A)
                (g$sr$5878$1&dy4A g$x$5876$1&dy4A g$y$5877$1&dy4A)
                (if (negative? g$y$5877$1&dy4A)
                  ((case-lambda
                     ((g$rat$5879$1&dy4A)
                      (list
                        (- (car g$rat$5879$1&dy4A))
                        (g$cadr$5731$1&dy4A g$rat$5879$1&dy4A))))
                   (g$sr$5878$1&dy4A (- g$y$5877$1&dy4A) (- g$x$5876$1&dy4A)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$6123$1&dy4A g$using$6158$1&dy4A (clr-using-internal 'system))
   (g$using$6125$1&dy4A
     g$using$6159$1&dy4A
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$6126$1&dy4A
     g$make-eq-hashtable$6160$1&dy4A
     (case-lambda
       (() (g$make-eq-hashtable$6126$1&dy4A '32))
       ((g$k$6137$1&dy4A)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$6137$1&dy4A)))))
   (g$make-eqv-hashtable$6127$1&dy4A
     g$make-eqv-hashtable$6161$1&dy4A
     (case-lambda
       (() (g$make-eqv-hashtable$6127$1&dy4A '32))
       ((g$k$6138$1&dy4A) (make-hashtable eqv-hash eqv? g$k$6138$1&dy4A))))
   (g$hashtable-size$6128$1&dy4A
     g$hashtable-size$6162$1&dy4A
     (case-lambda
       ((g$ht$6139$1&dy4A)
        (clr-call-internal 'hashtable 'get_count g$ht$6139$1&dy4A))))
   (g$hashtable-ref$6129$1&dy4A
     g$hashtable-ref$6163$1&dy4A
     (case-lambda
       ((g$ht$6140$1&dy4A g$key$6141$1&dy4A g$default$6142$1&dy4A)
        (letrec* ((g$r$6143$1&dy4A
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$6140$1&dy4A
                      g$key$6141$1&dy4A)))
          (if (not (null? g$r$6143$1&dy4A))
            g$r$6143$1&dy4A
            g$default$6142$1&dy4A)))))
   (g$hashtable-set!$6130$1&dy4A
     g$hashtable-set!$6164$1&dy4A
     (case-lambda
       ((g$ht$6144$1&dy4A g$key$6145$1&dy4A g$obj$6146$1&dy4A)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$6144$1&dy4A
          g$key$6145$1&dy4A
          g$obj$6146$1&dy4A))))
   (g$hashtable-delete!$6131$1&dy4A
     g$hashtable-delete!$6165$1&dy4A
     (case-lambda
       ((g$ht$6147$1&dy4A g$key$6148$1&dy4A)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$6147$1&dy4A
          g$key$6148$1&dy4A))))
   (g$hashtable-contains?$6132$1&dy4A
     g$hashtable-contains?$6166$1&dy4A
     (case-lambda
       ((g$ht$6149$1&dy4A g$key$6150$1&dy4A)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$6149$1&dy4A
          g$key$6150$1&dy4A))))
   (g$hashtable-update!$6133$1&dy4A
     g$hashtable-update!$6167$1&dy4A
     (case-lambda
       ((g$ht$6151$1&dy4A
          g$key$6152$1&dy4A
          g$proc$6153$1&dy4A
          g$default$6154$1&dy4A)
        (g$hashtable-set!$6130$1&dy4A
          g$ht$6151$1&dy4A
          g$key$6152$1&dy4A
          (g$proc$6153$1&dy4A
            (g$hashtable-ref$6129$1&dy4A
              g$ht$6151$1&dy4A
              g$key$6152$1&dy4A
              g$default$6154$1&dy4A))))))
   (g$hashtable-clear!$6134$1&dy4A
     g$hashtable-clear!$6168$1&dy4A
     (case-lambda
       ((g$ht$6155$1&dy4A)
        (g$hashtable-clear!$6134$1&dy4A g$ht$6155$1&dy4A '32))
       ((g$ht$6156$1&dy4A g$k$6157$1&dy4A)
        (clr-call-internal 'hashtable 'clear g$ht$6156$1&dy4A))))
   (g$clear-usings$6136$1&dy4A
     g$clear-usings$6169$1&dy4A
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$6171$1&dy4A
     g$using$6178$1&dy4A
     (clr-using-internal 'system.io))
   (g$file-exists?$6172$1&dy4A
     g$file-exists?$6179$1&dy4A
     (case-lambda
       ((g$fn$6175$1&dy4A)
        (clr-call-internal 'file 'exists '() g$fn$6175$1&dy4A))))
   (g$delete-file$6173$1&dy4A
     g$delete-file$6180$1&dy4A
     (case-lambda
       ((g$fn$6176$1&dy4A)
        (clr-call-internal 'file 'delete '() g$fn$6176$1&dy4A))))
   (g$get-directory-name$6174$1&dy4A
     g$get-directory-name$6181$1&dy4A
     (case-lambda
       ((g$path$6177$1&dy4A)
        (clr-call-internal 'path 'getdirectoryname '() g$path$6177$1&dy4A)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6182$1&dy4A
     g$native-endianness$6293$1&dy4A
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6183$1&dy4A
     g$bytevector-u16-ref$6294$1&dy4A
     (case-lambda
       ((g$bytevector$6211$1&dy4A g$k$6212$1&dy4A g$endianness$6213$1&dy4A)
        (bytevector-uint-ref
          g$bytevector$6211$1&dy4A
          g$k$6212$1&dy4A
          g$endianness$6213$1&dy4A
          '2))))
   (g$bytevector-s16-ref$6184$1&dy4A
     g$bytevector-s16-ref$6295$1&dy4A
     (case-lambda
       ((g$bytevector$6214$1&dy4A g$k$6215$1&dy4A g$endianness$6216$1&dy4A)
        (bytevector-sint-ref
          g$bytevector$6214$1&dy4A
          g$k$6215$1&dy4A
          g$endianness$6216$1&dy4A
          '2))))
   (g$bytevector-u16-native-ref$6185$1&dy4A
     g$bytevector-u16-native-ref$6296$1&dy4A
     (case-lambda
       ((g$bytevector$6217$1&dy4A g$k$6218$1&dy4A)
        (bytevector-uint-ref
          g$bytevector$6217$1&dy4A
          g$k$6218$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '2))))
   (g$bytevector-s16-native-ref$6186$1&dy4A
     g$bytevector-s16-native-ref$6297$1&dy4A
     (case-lambda
       ((g$bytevector$6219$1&dy4A g$k$6220$1&dy4A)
        (bytevector-sint-ref
          g$bytevector$6219$1&dy4A
          g$k$6220$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '2))))
   (g$bytevector-u16-set!$6187$1&dy4A
     g$bytevector-u16-set!$6298$1&dy4A
     (case-lambda
       ((g$bytevector$6221$1&dy4A
          g$k$6222$1&dy4A
          g$n$6223$1&dy4A
          g$endianness$6224$1&dy4A)
        (bytevector-uint-set!
          g$bytevector$6221$1&dy4A
          g$k$6222$1&dy4A
          g$n$6223$1&dy4A
          g$endianness$6224$1&dy4A
          '2))))
   (g$bytevector-s16-set!$6188$1&dy4A
     g$bytevector-s16-set!$6299$1&dy4A
     (case-lambda
       ((g$bytevector$6225$1&dy4A
          g$k$6226$1&dy4A
          g$n$6227$1&dy4A
          g$endianness$6228$1&dy4A)
        (bytevector-sint-set!
          g$bytevector$6225$1&dy4A
          g$k$6226$1&dy4A
          g$n$6227$1&dy4A
          g$endianness$6228$1&dy4A
          '2))))
   (g$bytevector-u16-native-set!$6189$1&dy4A
     g$bytevector-u16-native-set!$6300$1&dy4A
     (case-lambda
       ((g$bytevector$6229$1&dy4A g$k$6230$1&dy4A g$n$6231$1&dy4A)
        (bytevector-uint-set!
          g$bytevector$6229$1&dy4A
          g$k$6230$1&dy4A
          g$n$6231$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '2))))
   (g$bytevector-s16-native-set!$6190$1&dy4A
     g$bytevector-s16-native-set!$6301$1&dy4A
     (case-lambda
       ((g$bytevector$6232$1&dy4A g$k$6233$1&dy4A g$n$6234$1&dy4A)
        (bytevector-sint-set!
          g$bytevector$6232$1&dy4A
          g$k$6233$1&dy4A
          g$n$6234$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '2))))
   (g$bytevector-u32-ref$6191$1&dy4A
     g$bytevector-u32-ref$6302$1&dy4A
     (case-lambda
       ((g$bytevector$6235$1&dy4A g$k$6236$1&dy4A g$endianness$6237$1&dy4A)
        (bytevector-uint-ref
          g$bytevector$6235$1&dy4A
          g$k$6236$1&dy4A
          g$endianness$6237$1&dy4A
          '4))))
   (g$bytevector-s32-ref$6192$1&dy4A
     g$bytevector-s32-ref$6303$1&dy4A
     (case-lambda
       ((g$bytevector$6238$1&dy4A g$k$6239$1&dy4A g$endianness$6240$1&dy4A)
        (bytevector-sint-ref
          g$bytevector$6238$1&dy4A
          g$k$6239$1&dy4A
          g$endianness$6240$1&dy4A
          '4))))
   (g$bytevector-u32-native-ref$6193$1&dy4A
     g$bytevector-u32-native-ref$6304$1&dy4A
     (case-lambda
       ((g$bytevector$6241$1&dy4A g$k$6242$1&dy4A)
        (bytevector-uint-ref
          g$bytevector$6241$1&dy4A
          g$k$6242$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '4))))
   (g$bytevector-s32-native-ref$6194$1&dy4A
     g$bytevector-s32-native-ref$6305$1&dy4A
     (case-lambda
       ((g$bytevector$6243$1&dy4A g$k$6244$1&dy4A)
        (bytevector-sint-ref
          g$bytevector$6243$1&dy4A
          g$k$6244$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '4))))
   (g$bytevector-u32-set!$6195$1&dy4A
     g$bytevector-u32-set!$6306$1&dy4A
     (case-lambda
       ((g$bytevector$6245$1&dy4A
          g$k$6246$1&dy4A
          g$n$6247$1&dy4A
          g$endianness$6248$1&dy4A)
        (bytevector-uint-set!
          g$bytevector$6245$1&dy4A
          g$k$6246$1&dy4A
          g$n$6247$1&dy4A
          g$endianness$6248$1&dy4A
          '4))))
   (g$bytevector-s32-set!$6196$1&dy4A
     g$bytevector-s32-set!$6307$1&dy4A
     (case-lambda
       ((g$bytevector$6249$1&dy4A
          g$k$6250$1&dy4A
          g$n$6251$1&dy4A
          g$endianness$6252$1&dy4A)
        (bytevector-sint-set!
          g$bytevector$6249$1&dy4A
          g$k$6250$1&dy4A
          g$n$6251$1&dy4A
          g$endianness$6252$1&dy4A
          '4))))
   (g$bytevector-u32-native-set!$6197$1&dy4A
     g$bytevector-u32-native-set!$6308$1&dy4A
     (case-lambda
       ((g$bytevector$6253$1&dy4A g$k$6254$1&dy4A g$n$6255$1&dy4A)
        (bytevector-uint-set!
          g$bytevector$6253$1&dy4A
          g$k$6254$1&dy4A
          g$n$6255$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '4))))
   (g$bytevector-s32-native-set!$6198$1&dy4A
     g$bytevector-s32-native-set!$6309$1&dy4A
     (case-lambda
       ((g$bytevector$6256$1&dy4A g$k$6257$1&dy4A g$n$6258$1&dy4A)
        (bytevector-sint-set!
          g$bytevector$6256$1&dy4A
          g$k$6257$1&dy4A
          g$n$6258$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '4))))
   (g$bytevector-u64-ref$6199$1&dy4A
     g$bytevector-u64-ref$6310$1&dy4A
     (case-lambda
       ((g$bytevector$6259$1&dy4A g$k$6260$1&dy4A g$endianness$6261$1&dy4A)
        (bytevector-uint-ref
          g$bytevector$6259$1&dy4A
          g$k$6260$1&dy4A
          g$endianness$6261$1&dy4A
          '8))))
   (g$bytevector-s64-ref$6200$1&dy4A
     g$bytevector-s64-ref$6311$1&dy4A
     (case-lambda
       ((g$bytevector$6262$1&dy4A g$k$6263$1&dy4A g$endianness$6264$1&dy4A)
        (bytevector-sint-ref
          g$bytevector$6262$1&dy4A
          g$k$6263$1&dy4A
          g$endianness$6264$1&dy4A
          '8))))
   (g$bytevector-u64-native-ref$6201$1&dy4A
     g$bytevector-u64-native-ref$6312$1&dy4A
     (case-lambda
       ((g$bytevector$6265$1&dy4A g$k$6266$1&dy4A)
        (bytevector-uint-ref
          g$bytevector$6265$1&dy4A
          g$k$6266$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '8))))
   (g$bytevector-s64-native-ref$6202$1&dy4A
     g$bytevector-s64-native-ref$6313$1&dy4A
     (case-lambda
       ((g$bytevector$6267$1&dy4A g$k$6268$1&dy4A)
        (bytevector-sint-ref
          g$bytevector$6267$1&dy4A
          g$k$6268$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '8))))
   (g$bytevector-u64-set!$6203$1&dy4A
     g$bytevector-u64-set!$6314$1&dy4A
     (case-lambda
       ((g$bytevector$6269$1&dy4A
          g$k$6270$1&dy4A
          g$n$6271$1&dy4A
          g$endianness$6272$1&dy4A)
        (bytevector-uint-set!
          g$bytevector$6269$1&dy4A
          g$k$6270$1&dy4A
          g$n$6271$1&dy4A
          g$endianness$6272$1&dy4A
          '8))))
   (g$bytevector-s64-set!$6204$1&dy4A
     g$bytevector-s64-set!$6315$1&dy4A
     (case-lambda
       ((g$bytevector$6273$1&dy4A
          g$k$6274$1&dy4A
          g$n$6275$1&dy4A
          g$endianness$6276$1&dy4A)
        (bytevector-sint-set!
          g$bytevector$6273$1&dy4A
          g$k$6274$1&dy4A
          g$n$6275$1&dy4A
          g$endianness$6276$1&dy4A
          '8))))
   (g$bytevector-u64-native-set!$6205$1&dy4A
     g$bytevector-u64-native-set!$6316$1&dy4A
     (case-lambda
       ((g$bytevector$6277$1&dy4A g$k$6278$1&dy4A g$n$6279$1&dy4A)
        (bytevector-uint-set!
          g$bytevector$6277$1&dy4A
          g$k$6278$1&dy4A
          g$n$6279$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '8))))
   (g$bytevector-s64-native-set!$6206$1&dy4A
     g$bytevector-s64-native-set!$6317$1&dy4A
     (case-lambda
       ((g$bytevector$6280$1&dy4A g$k$6281$1&dy4A g$n$6282$1&dy4A)
        (bytevector-sint-set!
          g$bytevector$6280$1&dy4A
          g$k$6281$1&dy4A
          g$n$6282$1&dy4A
          (g$native-endianness$6182$1&dy4A)
          '8))))
   (g$bytevector-ieee-single-native-ref$6207$1&dy4A
     g$bytevector-ieee-single-native-ref$6318$1&dy4A
     (case-lambda
       ((g$bytevector$6283$1&dy4A g$k$6284$1&dy4A)
        (if (not (zero? (mod g$k$6284$1&dy4A '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$6284$1&dy4A)
          (bytevector-ieee-single-ref
            g$bytevector$6283$1&dy4A
            g$k$6284$1&dy4A
            (g$native-endianness$6182$1&dy4A))))))
   (g$bytevector-ieee-double-native-ref$6208$1&dy4A
     g$bytevector-ieee-double-native-ref$6319$1&dy4A
     (case-lambda
       ((g$bytevector$6285$1&dy4A g$k$6286$1&dy4A)
        (if (not (zero? (mod g$k$6286$1&dy4A '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$6286$1&dy4A)
          (bytevector-ieee-double-ref
            g$bytevector$6285$1&dy4A
            g$k$6286$1&dy4A
            (g$native-endianness$6182$1&dy4A))))))
   (g$bytevector-ieee-single-native-set!$6209$1&dy4A
     g$bytevector-ieee-single-native-set!$6320$1&dy4A
     (case-lambda
       ((g$bytevector$6287$1&dy4A g$k$6288$1&dy4A g$x$6289$1&dy4A)
        (if (not (zero? (mod g$k$6288$1&dy4A '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$6288$1&dy4A)
          (bytevector-ieee-single-set!
            g$bytevector$6287$1&dy4A
            g$k$6288$1&dy4A
            g$x$6289$1&dy4A
            (g$native-endianness$6182$1&dy4A))))))
   (g$bytevector-ieee-double-native-set!$6210$1&dy4A
     g$bytevector-ieee-double-native-set!$6321$1&dy4A
     (case-lambda
       ((g$bytevector$6290$1&dy4A g$k$6291$1&dy4A g$x$6292$1&dy4A)
        (if (not (zero? (mod g$k$6291$1&dy4A '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$6291$1&dy4A)
          (bytevector-ieee-double-set!
            g$bytevector$6290$1&dy4A
            g$k$6291$1&dy4A
            g$x$6292$1&dy4A
            (g$native-endianness$6182$1&dy4A)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$7328$6322$1&dy4A
     g$7328$6417$1&dy4A
     (make-record-type-descriptor
       '&condition
       '#f
       'g$7331$1&dy4A
       '#f
       '#f
       '#()))
   (g$7330$6323$1&dy4A g$7330$6418$1&dy4A '#f)
   (g$7329$6324$1&dy4A
     g$7329$6419$1&dy4A
     (make-record-constructor-descriptor
       g$7328$6322$1&dy4A
       '#f
       g$7330$6323$1&dy4A))
   (g$&condition?$6325$1&dy4A
     g$&condition?$6420$1&dy4A
     (record-predicate g$7328$6322$1&dy4A))
   (g$make-&condition$6326$1&dy4A
     g$make-&condition$6421$1&dy4A
     (record-constructor g$7329$6324$1&dy4A))
   (g$&condition-rtd$6327$1&dy4A
     g$&condition-rtd$6422$1&dy4A
     g$7328$6322$1&dy4A)
   (g$&condition-rcd$6328$1&dy4A
     g$&condition-rcd$6423$1&dy4A
     g$7329$6324$1&dy4A)
   (g$7344$6329$1&dy4A
     g$7344$6424$1&dy4A
     (make-record-type-descriptor
       '&message
       g$7328$6322$1&dy4A
       'g$7347$1&dy4A
       '#f
       '#f
       '#((immutable message))))
   (g$7346$6330$1&dy4A g$7346$6425$1&dy4A '#f)
   (g$7345$6331$1&dy4A
     g$7345$6426$1&dy4A
     (make-record-constructor-descriptor
       g$7344$6329$1&dy4A
       g$7329$6324$1&dy4A
       g$7346$6330$1&dy4A))
   (g$7343$6332$1&dy4A
     g$7343$6427$1&dy4A
     (record-predicate g$7344$6329$1&dy4A))
   (g$make-message-condition$6333$1&dy4A
     g$make-message-condition$6428$1&dy4A
     (record-constructor g$7345$6331$1&dy4A))
   (g$7342$6334$1&dy4A
     g$7342$6429$1&dy4A
     (record-accessor g$7344$6329$1&dy4A '0))
   (g$message-condition?$6335$1&dy4A
     g$message-condition?$6430$1&dy4A
     (condition-predicate g$7344$6329$1&dy4A))
   (g$condition-message$6336$1&dy4A
     g$condition-message$6431$1&dy4A
     (condition-accessor g$7344$6329$1&dy4A g$7342$6334$1&dy4A))
   (g$7360$6337$1&dy4A
     g$7360$6432$1&dy4A
     (make-record-type-descriptor
       '&warning
       g$7328$6322$1&dy4A
       'g$7363$1&dy4A
       '#f
       '#f
       '#()))
   (g$7362$6338$1&dy4A g$7362$6433$1&dy4A '#f)
   (g$7361$6339$1&dy4A
     g$7361$6434$1&dy4A
     (make-record-constructor-descriptor
       g$7360$6337$1&dy4A
       g$7329$6324$1&dy4A
       g$7362$6338$1&dy4A))
   (g$7359$6340$1&dy4A
     g$7359$6435$1&dy4A
     (record-predicate g$7360$6337$1&dy4A))
   (g$make-warning$6341$1&dy4A
     g$make-warning$6436$1&dy4A
     (record-constructor g$7361$6339$1&dy4A))
   (g$warning?$6342$1&dy4A
     g$warning?$6437$1&dy4A
     (condition-predicate g$7360$6337$1&dy4A))
   (g$7374$6343$1&dy4A
     g$7374$6438$1&dy4A
     (make-record-type-descriptor
       '&serious
       g$7328$6322$1&dy4A
       'g$7377$1&dy4A
       '#f
       '#f
       '#()))
   (g$7376$6344$1&dy4A g$7376$6439$1&dy4A '#f)
   (g$7375$6345$1&dy4A
     g$7375$6440$1&dy4A
     (make-record-constructor-descriptor
       g$7374$6343$1&dy4A
       g$7329$6324$1&dy4A
       g$7376$6344$1&dy4A))
   (g$7373$6346$1&dy4A
     g$7373$6441$1&dy4A
     (record-predicate g$7374$6343$1&dy4A))
   (g$make-serious-condition$6347$1&dy4A
     g$make-serious-condition$6442$1&dy4A
     (record-constructor g$7375$6345$1&dy4A))
   (g$serious-condition?$6348$1&dy4A
     g$serious-condition?$6443$1&dy4A
     (condition-predicate g$7374$6343$1&dy4A))
   (g$7388$6349$1&dy4A
     g$7388$6444$1&dy4A
     (make-record-type-descriptor
       '&error
       g$7374$6343$1&dy4A
       'g$7391$1&dy4A
       '#f
       '#f
       '#()))
   (g$7390$6350$1&dy4A g$7390$6445$1&dy4A '#f)
   (g$7389$6351$1&dy4A
     g$7389$6446$1&dy4A
     (make-record-constructor-descriptor
       g$7388$6349$1&dy4A
       g$7375$6345$1&dy4A
       g$7390$6350$1&dy4A))
   (g$7387$6352$1&dy4A
     g$7387$6447$1&dy4A
     (record-predicate g$7388$6349$1&dy4A))
   (g$make-error$6353$1&dy4A
     g$make-error$6448$1&dy4A
     (record-constructor g$7389$6351$1&dy4A))
   (g$error?$6354$1&dy4A
     g$error?$6449$1&dy4A
     (condition-predicate g$7388$6349$1&dy4A))
   (g$7402$6355$1&dy4A
     g$7402$6450$1&dy4A
     (make-record-type-descriptor
       '&violation
       g$7374$6343$1&dy4A
       'g$7405$1&dy4A
       '#f
       '#f
       '#()))
   (g$7404$6356$1&dy4A g$7404$6451$1&dy4A '#f)
   (g$7403$6357$1&dy4A
     g$7403$6452$1&dy4A
     (make-record-constructor-descriptor
       g$7402$6355$1&dy4A
       g$7375$6345$1&dy4A
       g$7404$6356$1&dy4A))
   (g$7401$6358$1&dy4A
     g$7401$6453$1&dy4A
     (record-predicate g$7402$6355$1&dy4A))
   (g$make-violation$6359$1&dy4A
     g$make-violation$6454$1&dy4A
     (record-constructor g$7403$6357$1&dy4A))
   (g$violation?$6360$1&dy4A
     g$violation?$6455$1&dy4A
     (condition-predicate g$7402$6355$1&dy4A))
   (g$7416$6361$1&dy4A
     g$7416$6456$1&dy4A
     (make-record-type-descriptor
       '&assertion
       g$7402$6355$1&dy4A
       'g$7419$1&dy4A
       '#f
       '#f
       '#()))
   (g$7418$6362$1&dy4A g$7418$6457$1&dy4A '#f)
   (g$7417$6363$1&dy4A
     g$7417$6458$1&dy4A
     (make-record-constructor-descriptor
       g$7416$6361$1&dy4A
       g$7403$6357$1&dy4A
       g$7418$6362$1&dy4A))
   (g$7415$6364$1&dy4A
     g$7415$6459$1&dy4A
     (record-predicate g$7416$6361$1&dy4A))
   (g$make-assertion-violation$6365$1&dy4A
     g$make-assertion-violation$6460$1&dy4A
     (record-constructor g$7417$6363$1&dy4A))
   (g$assertion-violation?$6366$1&dy4A
     g$assertion-violation?$6461$1&dy4A
     (condition-predicate g$7416$6361$1&dy4A))
   (g$7431$6367$1&dy4A
     g$7431$6462$1&dy4A
     (make-record-type-descriptor
       '&irritants
       g$7328$6322$1&dy4A
       'g$7434$1&dy4A
       '#f
       '#f
       '#((immutable irritants))))
   (g$7433$6368$1&dy4A g$7433$6463$1&dy4A '#f)
   (g$7432$6369$1&dy4A
     g$7432$6464$1&dy4A
     (make-record-constructor-descriptor
       g$7431$6367$1&dy4A
       g$7329$6324$1&dy4A
       g$7433$6368$1&dy4A))
   (g$7430$6370$1&dy4A
     g$7430$6465$1&dy4A
     (record-predicate g$7431$6367$1&dy4A))
   (g$make-irritants-condition$6371$1&dy4A
     g$make-irritants-condition$6466$1&dy4A
     (record-constructor g$7432$6369$1&dy4A))
   (g$7429$6372$1&dy4A
     g$7429$6467$1&dy4A
     (record-accessor g$7431$6367$1&dy4A '0))
   (g$irritants-condition?$6373$1&dy4A
     g$irritants-condition?$6468$1&dy4A
     (condition-predicate g$7431$6367$1&dy4A))
   (g$condition-irritants$6374$1&dy4A
     g$condition-irritants$6469$1&dy4A
     (condition-accessor g$7431$6367$1&dy4A g$7429$6372$1&dy4A))
   (g$7448$6375$1&dy4A
     g$7448$6470$1&dy4A
     (make-record-type-descriptor
       '&who
       g$7328$6322$1&dy4A
       'g$7451$1&dy4A
       '#f
       '#f
       '#((immutable who))))
   (g$7450$6376$1&dy4A g$7450$6471$1&dy4A '#f)
   (g$7449$6377$1&dy4A
     g$7449$6472$1&dy4A
     (make-record-constructor-descriptor
       g$7448$6375$1&dy4A
       g$7329$6324$1&dy4A
       g$7450$6376$1&dy4A))
   (g$7447$6378$1&dy4A
     g$7447$6473$1&dy4A
     (record-predicate g$7448$6375$1&dy4A))
   (g$make-who-condition$6379$1&dy4A
     g$make-who-condition$6474$1&dy4A
     (record-constructor g$7449$6377$1&dy4A))
   (g$7446$6380$1&dy4A
     g$7446$6475$1&dy4A
     (record-accessor g$7448$6375$1&dy4A '0))
   (g$who-condition?$6381$1&dy4A
     g$who-condition?$6476$1&dy4A
     (condition-predicate g$7448$6375$1&dy4A))
   (g$condition-who$6382$1&dy4A
     g$condition-who$6477$1&dy4A
     (condition-accessor g$7448$6375$1&dy4A g$7446$6380$1&dy4A))
   (g$7464$6383$1&dy4A
     g$7464$6478$1&dy4A
     (make-record-type-descriptor
       '&non-continuable
       g$7402$6355$1&dy4A
       'g$7467$1&dy4A
       '#f
       '#f
       '#()))
   (g$7466$6384$1&dy4A g$7466$6479$1&dy4A '#f)
   (g$7465$6385$1&dy4A
     g$7465$6480$1&dy4A
     (make-record-constructor-descriptor
       g$7464$6383$1&dy4A
       g$7403$6357$1&dy4A
       g$7466$6384$1&dy4A))
   (g$7463$6386$1&dy4A
     g$7463$6481$1&dy4A
     (record-predicate g$7464$6383$1&dy4A))
   (g$make-non-continuable-violation$6387$1&dy4A
     g$make-non-continuable-violation$6482$1&dy4A
     (record-constructor g$7465$6385$1&dy4A))
   (g$non-continuable-violation?$6388$1&dy4A
     g$non-continuable-violation?$6483$1&dy4A
     (condition-predicate g$7464$6383$1&dy4A))
   (g$7478$6389$1&dy4A
     g$7478$6484$1&dy4A
     (make-record-type-descriptor
       '&implementation-restriction
       g$7402$6355$1&dy4A
       'g$7481$1&dy4A
       '#f
       '#f
       '#()))
   (g$7480$6390$1&dy4A g$7480$6485$1&dy4A '#f)
   (g$7479$6391$1&dy4A
     g$7479$6486$1&dy4A
     (make-record-constructor-descriptor
       g$7478$6389$1&dy4A
       g$7403$6357$1&dy4A
       g$7480$6390$1&dy4A))
   (g$7477$6392$1&dy4A
     g$7477$6487$1&dy4A
     (record-predicate g$7478$6389$1&dy4A))
   (g$make-implementation-restriction-violation$6393$1&dy4A
     g$make-implementation-restriction-violation$6488$1&dy4A
     (record-constructor g$7479$6391$1&dy4A))
   (g$implementation-restriction-violation?$6394$1&dy4A
     g$implementation-restriction-violation?$6489$1&dy4A
     (condition-predicate g$7478$6389$1&dy4A))
   (g$7492$6395$1&dy4A
     g$7492$6490$1&dy4A
     (make-record-type-descriptor
       '&lexical
       g$7402$6355$1&dy4A
       'g$7495$1&dy4A
       '#f
       '#f
       '#()))
   (g$7494$6396$1&dy4A g$7494$6491$1&dy4A '#f)
   (g$7493$6397$1&dy4A
     g$7493$6492$1&dy4A
     (make-record-constructor-descriptor
       g$7492$6395$1&dy4A
       g$7403$6357$1&dy4A
       g$7494$6396$1&dy4A))
   (g$7491$6398$1&dy4A
     g$7491$6493$1&dy4A
     (record-predicate g$7492$6395$1&dy4A))
   (g$make-lexical-violation$6399$1&dy4A
     g$make-lexical-violation$6494$1&dy4A
     (record-constructor g$7493$6397$1&dy4A))
   (g$lexical-violation?$6400$1&dy4A
     g$lexical-violation?$6495$1&dy4A
     (condition-predicate g$7492$6395$1&dy4A))
   (g$7508$6401$1&dy4A
     g$7508$6496$1&dy4A
     (make-record-type-descriptor
       '&syntax
       g$7402$6355$1&dy4A
       'g$7511$1&dy4A
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7510$6402$1&dy4A g$7510$6497$1&dy4A '#f)
   (g$7509$6403$1&dy4A
     g$7509$6498$1&dy4A
     (make-record-constructor-descriptor
       g$7508$6401$1&dy4A
       g$7403$6357$1&dy4A
       g$7510$6402$1&dy4A))
   (g$7507$6404$1&dy4A
     g$7507$6499$1&dy4A
     (record-predicate g$7508$6401$1&dy4A))
   (g$make-syntax-violation$6405$1&dy4A
     g$make-syntax-violation$6500$1&dy4A
     (record-constructor g$7509$6403$1&dy4A))
   (g$7505$6406$1&dy4A
     g$7505$6501$1&dy4A
     (record-accessor g$7508$6401$1&dy4A '0))
   (g$7506$6407$1&dy4A
     g$7506$6502$1&dy4A
     (record-accessor g$7508$6401$1&dy4A '1))
   (g$syntax-violation?$6408$1&dy4A
     g$syntax-violation?$6503$1&dy4A
     (condition-predicate g$7508$6401$1&dy4A))
   (g$syntax-violation-form$6409$1&dy4A
     g$syntax-violation-form$6504$1&dy4A
     (condition-accessor g$7508$6401$1&dy4A g$7505$6406$1&dy4A))
   (g$syntax-violation-subform$6410$1&dy4A
     g$syntax-violation-subform$6505$1&dy4A
     (condition-accessor g$7508$6401$1&dy4A g$7506$6407$1&dy4A))
   (g$7526$6411$1&dy4A
     g$7526$6506$1&dy4A
     (make-record-type-descriptor
       '&undefined
       g$7402$6355$1&dy4A
       'g$7529$1&dy4A
       '#f
       '#f
       '#()))
   (g$7528$6412$1&dy4A g$7528$6507$1&dy4A '#f)
   (g$7527$6413$1&dy4A
     g$7527$6508$1&dy4A
     (make-record-constructor-descriptor
       g$7526$6411$1&dy4A
       g$7403$6357$1&dy4A
       g$7528$6412$1&dy4A))
   (g$7525$6414$1&dy4A
     g$7525$6509$1&dy4A
     (record-predicate g$7526$6411$1&dy4A))
   (g$make-undefined-violation$6415$1&dy4A
     g$make-undefined-violation$6510$1&dy4A
     (record-constructor g$7527$6413$1&dy4A))
   (g$undefined-violation?$6416$1&dy4A
     g$undefined-violation?$6511$1&dy4A
     (condition-predicate g$7526$6411$1&dy4A)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6512$1&dy4A
     g$append!$6518$1&dy4A
     (case-lambda
       ((g$a$6513$1&dy4A . g$b$6514$1&dy4A)
        (if (null? g$a$6513$1&dy4A)
          g$b$6514$1&dy4A
          (if (null? g$b$6514$1&dy4A)
            g$a$6513$1&dy4A
            (begin
              ((letrec ((g$f$6515$1&dy4A
                          (case-lambda
                            ((g$a$6516$1&dy4A)
                             ((case-lambda
                                ((g$n$6517$1&dy4A)
                                 (if (null? g$n$6517$1&dy4A)
                                   (set-cdr! g$a$6516$1&dy4A g$b$6514$1&dy4A)
                                   (g$f$6515$1&dy4A g$n$6517$1&dy4A))))
                              (cdr g$a$6516$1&dy4A))))))
                 g$f$6515$1&dy4A)
               g$a$6513$1&dy4A)
              g$a$6513$1&dy4A)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6519$1&dy4A
     g$sign$6537$1&dy4A
     (case-lambda
       ((g$n$6525$1&dy4A)
        (if (> g$n$6525$1&dy4A '0) '1 (if (< g$n$6525$1&dy4A '0) '-1 '0)))))
   (g$quotient$6520$1&dy4A
     g$quotient$6538$1&dy4A
     (case-lambda
       ((g$n1$6526$1&dy4A g$n2$6527$1&dy4A)
        (begin
          (if (not (integer-valued? g$n1$6526$1&dy4A))
            (assertion-violation 'quotient '"not an integer" g$n1$6526$1&dy4A)
            (void))
          (if (not (integer-valued? g$n2$6527$1&dy4A))
            (assertion-violation 'quotient '"not an integer" g$n2$6527$1&dy4A)
            (void))
          (* (g$sign$6519$1&dy4A g$n1$6526$1&dy4A)
             (g$sign$6519$1&dy4A g$n2$6527$1&dy4A)
             (div (abs g$n1$6526$1&dy4A) (abs g$n2$6527$1&dy4A)))))))
   (g$remainder$6521$1&dy4A
     g$remainder$6539$1&dy4A
     (case-lambda
       ((g$n1$6528$1&dy4A g$n2$6529$1&dy4A)
        (begin
          (if (not (integer-valued? g$n1$6528$1&dy4A))
            (assertion-violation 'remainder '"not an integer" g$n1$6528$1&dy4A)
            (void))
          (if (not (integer-valued? g$n2$6529$1&dy4A))
            (assertion-violation 'remainder '"not an integer" g$n2$6529$1&dy4A)
            (void))
          (* (g$sign$6519$1&dy4A g$n1$6528$1&dy4A)
             (mod (abs g$n1$6528$1&dy4A) (abs g$n2$6529$1&dy4A)))))))
   (g$modulo$6522$1&dy4A
     g$modulo$6540$1&dy4A
     (case-lambda
       ((g$n1$6530$1&dy4A g$n2$6531$1&dy4A)
        (begin
          (if (not (integer-valued? g$n1$6530$1&dy4A))
            (assertion-violation 'modulo '"not an integer" g$n1$6530$1&dy4A)
            (void))
          (if (not (integer-valued? g$n2$6531$1&dy4A))
            (assertion-violation 'modulo '"not an integer" g$n2$6531$1&dy4A)
            (void))
          (* (g$sign$6519$1&dy4A g$n2$6531$1&dy4A)
             (mod (* (g$sign$6519$1&dy4A g$n2$6531$1&dy4A) g$n1$6530$1&dy4A)
                  (abs g$n2$6531$1&dy4A)))))))
   (g$make-promise$6523$1&dy4A
     g$make-promise$6541$1&dy4A
     (case-lambda
       ((g$proc$6532$1&dy4A)
        ((case-lambda
           ((g$result-ready?$6533$1&dy4A g$result$6534$1&dy4A)
            (case-lambda
              (()
               (if g$result-ready?$6533$1&dy4A
                 g$result$6534$1&dy4A
                 ((case-lambda
                    ((g$x$6535$1&dy4A)
                     (if g$result-ready?$6533$1&dy4A
                       g$result$6534$1&dy4A
                       (begin
                         (set! g$result-ready?$6533$1&dy4A '#t)
                         (set! g$result$6534$1&dy4A g$x$6535$1&dy4A)
                         g$result$6534$1&dy4A))))
                  (g$proc$6532$1&dy4A)))))))
         '#f
         '#f))))
   (g$force$6524$1&dy4A
     g$force$6542$1&dy4A
     (case-lambda ((g$object$6536$1&dy4A) (g$object$6536$1&dy4A)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6543$1&dy4A
     g$split$6569$1&dy4A
     (case-lambda
       ((g$ls$6546$1&dy4A)
        ((letrec ((g$loop$6547$1&dy4A
                    (case-lambda
                      ((g$rest$6548$1&dy4A
                         g$left$6549$1&dy4A
                         g$right$6550$1&dy4A)
                       (if (null? g$rest$6548$1&dy4A)
                         (cons g$left$6549$1&dy4A g$right$6550$1&dy4A)
                         (if (null? (cdr g$rest$6548$1&dy4A))
                           (cons
                             (cons (car g$rest$6548$1&dy4A) g$left$6549$1&dy4A)
                             g$right$6550$1&dy4A)
                           (g$loop$6547$1&dy4A
                             (g$cddr$5888$1&dy4A g$rest$6548$1&dy4A)
                             (cons (car g$rest$6548$1&dy4A) g$left$6549$1&dy4A)
                             (cons
                               (g$cadr$5886$1&dy4A g$rest$6548$1&dy4A)
                               g$right$6550$1&dy4A))))))))
           g$loop$6547$1&dy4A)
         g$ls$6546$1&dy4A
         '()
         '()))))
   (g$reverse-it$6544$1&dy4A
     g$reverse-it$6570$1&dy4A
     (case-lambda
       ((g$head$6551$1&dy4A g$tail$6552$1&dy4A)
        (if (null? g$head$6551$1&dy4A)
          g$tail$6552$1&dy4A
          ((case-lambda
             ((g$hd$6553$1&dy4A g$tl$6554$1&dy4A)
              (g$reverse-it$6544$1&dy4A
                g$tl$6554$1&dy4A
                (cons g$hd$6553$1&dy4A g$tail$6552$1&dy4A))))
           (car g$head$6551$1&dy4A)
           (cdr g$head$6551$1&dy4A))))))
   (g$list-sort$6545$1&dy4A
     g$list-sort$6571$1&dy4A
     (case-lambda
       ((g$precedes?$6555$1&dy4A g$ls$6556$1&dy4A)
        ((case-lambda
           ((g$merge$6557$1&dy4A)
            ((case-lambda
               (()
                (if (null? g$ls$6556$1&dy4A)
                  '()
                  ((letrec ((g$helper$6558$1&dy4A
                              (case-lambda
                                ((g$piece$6559$1&dy4A)
                                 (if (null? (cdr g$piece$6559$1&dy4A))
                                   g$piece$6559$1&dy4A
                                   ((case-lambda
                                      ((g$parts$6560$1&dy4A)
                                       (g$merge$6557$1&dy4A
                                         (g$helper$6558$1&dy4A
                                           (car g$parts$6560$1&dy4A))
                                         (g$helper$6558$1&dy4A
                                           (cdr g$parts$6560$1&dy4A)))))
                                    (g$split$6543$1&dy4A
                                      g$piece$6559$1&dy4A)))))))
                     g$helper$6558$1&dy4A)
                   g$ls$6556$1&dy4A)))))))
         (case-lambda
           ((g$list-1$6561$1&dy4A g$list-2$6562$1&dy4A)
            ((letrec ((g$loop$6563$1&dy4A
                        (case-lambda
                          ((g$source-1$6564$1&dy4A
                             g$source-2$6565$1&dy4A
                             g$so-far$6566$1&dy4A)
                           (if (null? g$source-1$6564$1&dy4A)
                             (g$reverse-it$6544$1&dy4A
                               g$so-far$6566$1&dy4A
                               g$source-2$6565$1&dy4A)
                             (if (null? g$source-2$6565$1&dy4A)
                               (g$reverse-it$6544$1&dy4A
                                 g$so-far$6566$1&dy4A
                                 g$source-1$6564$1&dy4A)
                               ((case-lambda
                                  ((g$car-1$6567$1&dy4A g$car-2$6568$1&dy4A)
                                   (if (g$precedes?$6555$1&dy4A
                                         g$car-2$6568$1&dy4A
                                         g$car-1$6567$1&dy4A)
                                     (g$loop$6563$1&dy4A
                                       g$source-1$6564$1&dy4A
                                       (cdr g$source-2$6565$1&dy4A)
                                       (cons
                                         g$car-2$6568$1&dy4A
                                         g$so-far$6566$1&dy4A))
                                     (g$loop$6563$1&dy4A
                                       g$source-2$6565$1&dy4A
                                       (cdr g$source-1$6564$1&dy4A)
                                       (cons
                                         g$car-1$6567$1&dy4A
                                         g$so-far$6566$1&dy4A)))))
                                (car g$source-1$6564$1&dy4A)
                                (car g$source-2$6565$1&dy4A))))))))
               g$loop$6563$1&dy4A)
             g$list-1$6561$1&dy4A
             g$list-2$6562$1&dy4A
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$6578$1&dy4A
     g$string-ci=?$6644$1&dy4A
     (case-lambda
       ((g$a$6594$1&dy4A g$b$6595$1&dy4A . g$rest$6596$1&dy4A)
        (begin
          (if (not (string? g$a$6594$1&dy4A))
            (assertion-violation 'string-ci=? '"not a string" g$a$6594$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6597$1&dy4A)
               (begin
                 (if (not (string? g$x$6597$1&dy4A))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$6597$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6598$1&dy4A)
                     (begin
                       (set! g$a$6594$1&dy4A g$x$6597$1&dy4A)
                       g$r$6598$1&dy4A)))
                  (= (string-ci-compare g$a$6594$1&dy4A g$x$6597$1&dy4A) '0)))))
            (cons g$b$6595$1&dy4A g$rest$6596$1&dy4A))))))
   (g$string-ci<?$6579$1&dy4A
     g$string-ci<?$6645$1&dy4A
     (case-lambda
       ((g$a$6599$1&dy4A g$b$6600$1&dy4A . g$rest$6601$1&dy4A)
        (begin
          (if (not (string? g$a$6599$1&dy4A))
            (assertion-violation 'string-ci<? '"not a string" g$a$6599$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6602$1&dy4A)
               (begin
                 (if (not (string? g$x$6602$1&dy4A))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$6602$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6603$1&dy4A)
                     (begin
                       (set! g$a$6599$1&dy4A g$x$6602$1&dy4A)
                       g$r$6603$1&dy4A)))
                  (< (string-ci-compare g$a$6599$1&dy4A g$x$6602$1&dy4A) '0)))))
            (cons g$b$6600$1&dy4A g$rest$6601$1&dy4A))))))
   (g$string-ci>?$6580$1&dy4A
     g$string-ci>?$6646$1&dy4A
     (case-lambda
       ((g$a$6604$1&dy4A g$b$6605$1&dy4A . g$rest$6606$1&dy4A)
        (begin
          (if (not (string? g$a$6604$1&dy4A))
            (assertion-violation 'string-ci>? '"not a string" g$a$6604$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6607$1&dy4A)
               (begin
                 (if (not (string? g$x$6607$1&dy4A))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$6607$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6608$1&dy4A)
                     (begin
                       (set! g$a$6604$1&dy4A g$x$6607$1&dy4A)
                       g$r$6608$1&dy4A)))
                  (> (string-ci-compare g$a$6604$1&dy4A g$x$6607$1&dy4A) '0)))))
            (cons g$b$6605$1&dy4A g$rest$6606$1&dy4A))))))
   (g$string-ci<=?$6581$1&dy4A
     g$string-ci<=?$6647$1&dy4A
     (case-lambda
       ((g$a$6609$1&dy4A g$b$6610$1&dy4A . g$rest$6611$1&dy4A)
        (begin
          (if (not (string? g$a$6609$1&dy4A))
            (assertion-violation 'string-ci<=? '"not a string" g$a$6609$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6612$1&dy4A)
               (begin
                 (if (not (string? g$x$6612$1&dy4A))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$6612$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6613$1&dy4A)
                     (begin
                       (set! g$a$6609$1&dy4A g$x$6612$1&dy4A)
                       g$r$6613$1&dy4A)))
                  (<= (string-ci-compare g$a$6609$1&dy4A g$x$6612$1&dy4A)
                      '0)))))
            (cons g$b$6610$1&dy4A g$rest$6611$1&dy4A))))))
   (g$string-ci>=?$6582$1&dy4A
     g$string-ci>=?$6648$1&dy4A
     (case-lambda
       ((g$a$6614$1&dy4A g$b$6615$1&dy4A . g$rest$6616$1&dy4A)
        (begin
          (if (not (string? g$a$6614$1&dy4A))
            (assertion-violation 'string-ci>=? '"not a string" g$a$6614$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6617$1&dy4A)
               (begin
                 (if (not (string? g$x$6617$1&dy4A))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$6617$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6618$1&dy4A)
                     (begin
                       (set! g$a$6614$1&dy4A g$x$6617$1&dy4A)
                       g$r$6618$1&dy4A)))
                  (>= (string-ci-compare g$a$6614$1&dy4A g$x$6617$1&dy4A)
                      '0)))))
            (cons g$b$6615$1&dy4A g$rest$6616$1&dy4A))))))
   (g$char-ci=?$6589$1&dy4A
     g$char-ci=?$6649$1&dy4A
     (case-lambda
       ((g$a$6619$1&dy4A g$b$6620$1&dy4A . g$rest$6621$1&dy4A)
        (begin
          (if (not (char? g$a$6619$1&dy4A))
            (assertion-violation 'char-ci=? '"not a char" g$a$6619$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6622$1&dy4A)
               (begin
                 (if (not (char? g$x$6622$1&dy4A))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$6622$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6623$1&dy4A)
                     (begin
                       (set! g$a$6619$1&dy4A g$x$6622$1&dy4A)
                       g$r$6623$1&dy4A)))
                  (= (char->integer (char-upcase g$a$6619$1&dy4A))
                     (char->integer (char-upcase g$x$6622$1&dy4A)))))))
            (cons g$b$6620$1&dy4A g$rest$6621$1&dy4A))))))
   (g$char-ci<?$6590$1&dy4A
     g$char-ci<?$6650$1&dy4A
     (case-lambda
       ((g$a$6624$1&dy4A g$b$6625$1&dy4A . g$rest$6626$1&dy4A)
        (begin
          (if (not (char? g$a$6624$1&dy4A))
            (assertion-violation 'char-ci<? '"not a char" g$a$6624$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6627$1&dy4A)
               (begin
                 (if (not (char? g$x$6627$1&dy4A))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$6627$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6628$1&dy4A)
                     (begin
                       (set! g$a$6624$1&dy4A g$x$6627$1&dy4A)
                       g$r$6628$1&dy4A)))
                  (< (char->integer (char-upcase g$a$6624$1&dy4A))
                     (char->integer (char-upcase g$x$6627$1&dy4A)))))))
            (cons g$b$6625$1&dy4A g$rest$6626$1&dy4A))))))
   (g$char-ci>?$6591$1&dy4A
     g$char-ci>?$6651$1&dy4A
     (case-lambda
       ((g$a$6629$1&dy4A g$b$6630$1&dy4A . g$rest$6631$1&dy4A)
        (begin
          (if (not (char? g$a$6629$1&dy4A))
            (assertion-violation 'char-ci>? '"not a char" g$a$6629$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6632$1&dy4A)
               (begin
                 (if (not (char? g$x$6632$1&dy4A))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$6632$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6633$1&dy4A)
                     (begin
                       (set! g$a$6629$1&dy4A g$x$6632$1&dy4A)
                       g$r$6633$1&dy4A)))
                  (> (char->integer (char-upcase g$a$6629$1&dy4A))
                     (char->integer (char-upcase g$x$6632$1&dy4A)))))))
            (cons g$b$6630$1&dy4A g$rest$6631$1&dy4A))))))
   (g$char-ci<=?$6592$1&dy4A
     g$char-ci<=?$6652$1&dy4A
     (case-lambda
       ((g$a$6634$1&dy4A g$b$6635$1&dy4A . g$rest$6636$1&dy4A)
        (begin
          (if (not (char? g$a$6634$1&dy4A))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6634$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6637$1&dy4A)
               (begin
                 (if (not (char? g$x$6637$1&dy4A))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$6637$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6638$1&dy4A)
                     (begin
                       (set! g$a$6634$1&dy4A g$x$6637$1&dy4A)
                       g$r$6638$1&dy4A)))
                  (<= (char->integer (char-upcase g$a$6634$1&dy4A))
                      (char->integer (char-upcase g$x$6637$1&dy4A)))))))
            (cons g$b$6635$1&dy4A g$rest$6636$1&dy4A))))))
   (g$char-ci>=?$6593$1&dy4A
     g$char-ci>=?$6653$1&dy4A
     (case-lambda
       ((g$a$6639$1&dy4A g$b$6640$1&dy4A . g$rest$6641$1&dy4A)
        (begin
          (if (not (char? g$a$6639$1&dy4A))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6639$1&dy4A)
            (void))
          (g$for-all$5722$1&dy4A
            (case-lambda
              ((g$x$6642$1&dy4A)
               (begin
                 (if (not (char? g$x$6642$1&dy4A))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$6642$1&dy4A)
                   (void))
                 ((case-lambda
                    ((g$r$6643$1&dy4A)
                     (begin
                       (set! g$a$6639$1&dy4A g$x$6642$1&dy4A)
                       g$r$6643$1&dy4A)))
                  (>= (char->integer (char-upcase g$a$6639$1&dy4A))
                      (char->integer (char-upcase g$x$6642$1&dy4A)))))))
            (cons g$b$6640$1&dy4A g$rest$6641$1&dy4A)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6654$1&dy4A
     g$bitwise-if$6701$1&dy4A
     (case-lambda
       ((g$ei1$6661$1&dy4A g$ei2$6662$1&dy4A g$ei3$6663$1&dy4A)
        (bitwise-ior
          (bitwise-and g$ei1$6661$1&dy4A g$ei2$6662$1&dy4A)
          (bitwise-and (bitwise-not g$ei1$6661$1&dy4A) g$ei3$6663$1&dy4A)))))
   (g$bitwise-copy-bit$6655$1&dy4A
     g$bitwise-copy-bit$6702$1&dy4A
     (case-lambda
       ((g$ei1$6664$1&dy4A g$ei2$6665$1&dy4A g$ei3$6666$1&dy4A)
        ((case-lambda
           ((g$mask$6667$1&dy4A)
            ((case-lambda
               (()
                (g$bitwise-if$6654$1&dy4A
                  g$mask$6667$1&dy4A
                  (g$bitwise-arithmetic-shift-left$6658$1&dy4A
                    g$ei3$6666$1&dy4A
                    g$ei2$6665$1&dy4A)
                  g$ei1$6664$1&dy4A))))))
         (g$bitwise-arithmetic-shift-left$6658$1&dy4A '1 g$ei2$6665$1&dy4A)))))
   (g$bitwise-bit-field$6656$1&dy4A
     g$bitwise-bit-field$6703$1&dy4A
     (case-lambda
       ((g$ei1$6668$1&dy4A g$ei2$6669$1&dy4A g$ei3$6670$1&dy4A)
        ((case-lambda
           ((g$mask$6671$1&dy4A)
            (g$bitwise-arithmetic-shift-right$6659$1&dy4A
              (bitwise-and g$ei1$6668$1&dy4A g$mask$6671$1&dy4A)
              g$ei2$6669$1&dy4A)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6658$1&dy4A
             '-1
             g$ei3$6670$1&dy4A))))))
   (g$bitwise-copy-bit-field$6657$1&dy4A
     g$bitwise-copy-bit-field$6704$1&dy4A
     (case-lambda
       ((g$ei1$6672$1&dy4A
          g$ei2$6673$1&dy4A
          g$ei3$6674$1&dy4A
          g$ei4$6675$1&dy4A)
        ((case-lambda
           ((g$to$6676$1&dy4A)
            ((case-lambda
               ((g$start$6677$1&dy4A)
                ((case-lambda
                   ((g$end$6678$1&dy4A)
                    ((case-lambda
                       ((g$from$6679$1&dy4A)
                        ((case-lambda
                           ((g$mask1$6680$1&dy4A)
                            ((case-lambda
                               ((g$mask2$6681$1&dy4A)
                                ((case-lambda
                                   ((g$mask$6682$1&dy4A)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6654$1&dy4A
                                          g$mask$6682$1&dy4A
                                          (g$bitwise-arithmetic-shift-left$6658$1&dy4A
                                            g$from$6679$1&dy4A
                                            g$start$6677$1&dy4A)
                                          g$to$6676$1&dy4A))))))
                                 (bitwise-and
                                   g$mask1$6680$1&dy4A
                                   g$mask2$6681$1&dy4A))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6658$1&dy4A
                                 '-1
                                 g$end$6678$1&dy4A)))))
                         (g$bitwise-arithmetic-shift-left$6658$1&dy4A
                           '-1
                           g$start$6677$1&dy4A))))
                     g$ei4$6675$1&dy4A)))
                 g$ei3$6674$1&dy4A)))
             g$ei2$6673$1&dy4A)))
         g$ei1$6672$1&dy4A))))
   (g$bitwise-arithmetic-shift-left$6658$1&dy4A
     g$bitwise-arithmetic-shift-left$6705$1&dy4A
     (case-lambda
       ((g$ei1$6683$1&dy4A g$ei2$6684$1&dy4A)
        (bitwise-arithmetic-shift g$ei1$6683$1&dy4A g$ei2$6684$1&dy4A))))
   (g$bitwise-arithmetic-shift-right$6659$1&dy4A
     g$bitwise-arithmetic-shift-right$6706$1&dy4A
     (case-lambda
       ((g$ei1$6685$1&dy4A g$ei2$6686$1&dy4A)
        (bitwise-arithmetic-shift g$ei1$6685$1&dy4A (- g$ei2$6686$1&dy4A)))))
   (g$bitwise-rotate-bit-field$6660$1&dy4A
     g$bitwise-rotate-bit-field$6707$1&dy4A
     (case-lambda
       ((g$ei1$6687$1&dy4A
          g$ei2$6688$1&dy4A
          g$ei3$6689$1&dy4A
          g$ei4$6690$1&dy4A)
        ((case-lambda
           ((g$n$6691$1&dy4A)
            ((case-lambda
               ((g$start$6692$1&dy4A)
                ((case-lambda
                   ((g$end$6693$1&dy4A)
                    ((case-lambda
                       ((g$count$6694$1&dy4A)
                        ((case-lambda
                           ((g$width$6695$1&dy4A)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6695$1&dy4A)
                                  ((case-lambda
                                     ((g$count$6696$1&dy4A)
                                      ((case-lambda
                                         ((g$field0$6697$1&dy4A)
                                          ((case-lambda
                                             ((g$field1$6698$1&dy4A)
                                              ((case-lambda
                                                 ((g$field2$6699$1&dy4A)
                                                  ((case-lambda
                                                     ((g$field$6700$1&dy4A)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6657$1&dy4A
                                                            g$n$6691$1&dy4A
                                                            g$start$6692$1&dy4A
                                                            g$end$6693$1&dy4A
                                                            g$field$6700$1&dy4A))))))
                                                   (bitwise-ior
                                                     g$field1$6698$1&dy4A
                                                     g$field2$6699$1&dy4A))))
                                               (g$bitwise-arithmetic-shift-right$6659$1&dy4A
                                                 g$field0$6697$1&dy4A
                                                 (- g$width$6695$1&dy4A
                                                    g$count$6696$1&dy4A)))))
                                           (g$bitwise-arithmetic-shift-left$6658$1&dy4A
                                             g$field0$6697$1&dy4A
                                             g$count$6696$1&dy4A))))
                                       (g$bitwise-bit-field$6656$1&dy4A
                                         g$n$6691$1&dy4A
                                         g$start$6692$1&dy4A
                                         g$end$6693$1&dy4A))))
                                   (mod g$count$6694$1&dy4A
                                        g$width$6695$1&dy4A))
                                  g$n$6691$1&dy4A))))))
                         (- g$end$6693$1&dy4A g$start$6692$1&dy4A))))
                     g$ei4$6690$1&dy4A)))
                 g$ei3$6689$1&dy4A)))
             g$ei2$6688$1&dy4A)))
         g$ei1$6687$1&dy4A)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6708$1&dy4A
     g$fxif$6755$1&dy4A
     (case-lambda
       ((g$fx1$6715$1&dy4A g$fx2$6716$1&dy4A g$fx3$6717$1&dy4A)
        (fxior
          (fxand g$fx1$6715$1&dy4A g$fx2$6716$1&dy4A)
          (fxand (fxnot g$fx1$6715$1&dy4A) g$fx3$6717$1&dy4A)))))
   (g$fxcopy-bit$6709$1&dy4A
     g$fxcopy-bit$6756$1&dy4A
     (case-lambda
       ((g$fx1$6718$1&dy4A g$fx2$6719$1&dy4A g$fx3$6720$1&dy4A)
        ((case-lambda
           ((g$mask$6721$1&dy4A)
            ((case-lambda
               (()
                (g$fxif$6708$1&dy4A
                  g$mask$6721$1&dy4A
                  (g$fxarithmetic-shift-left$6712$1&dy4A
                    g$fx3$6720$1&dy4A
                    g$fx2$6719$1&dy4A)
                  g$fx1$6718$1&dy4A))))))
         (g$fxarithmetic-shift-left$6712$1&dy4A '1 g$fx2$6719$1&dy4A)))))
   (g$fxbit-field$6710$1&dy4A
     g$fxbit-field$6757$1&dy4A
     (case-lambda
       ((g$fx1$6722$1&dy4A g$fx2$6723$1&dy4A g$fx3$6724$1&dy4A)
        ((case-lambda
           ((g$mask$6725$1&dy4A)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6713$1&dy4A
                  (fxand g$fx1$6722$1&dy4A g$mask$6725$1&dy4A)
                  g$fx2$6723$1&dy4A))))))
         (fxnot
           (g$fxarithmetic-shift-left$6712$1&dy4A '-1 g$fx3$6724$1&dy4A))))))
   (g$fxcopy-bit-field$6711$1&dy4A
     g$fxcopy-bit-field$6758$1&dy4A
     (case-lambda
       ((g$fx1$6726$1&dy4A
          g$fx2$6727$1&dy4A
          g$fx3$6728$1&dy4A
          g$fx4$6729$1&dy4A)
        ((case-lambda
           ((g$to$6730$1&dy4A)
            ((case-lambda
               ((g$start$6731$1&dy4A)
                ((case-lambda
                   ((g$end$6732$1&dy4A)
                    ((case-lambda
                       ((g$from$6733$1&dy4A)
                        ((case-lambda
                           ((g$mask1$6734$1&dy4A)
                            ((case-lambda
                               ((g$mask2$6735$1&dy4A)
                                ((case-lambda
                                   ((g$mask$6736$1&dy4A)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6708$1&dy4A
                                          g$mask$6736$1&dy4A
                                          (g$fxarithmetic-shift-left$6712$1&dy4A
                                            g$from$6733$1&dy4A
                                            g$start$6731$1&dy4A)
                                          g$to$6730$1&dy4A))))))
                                 (fxand
                                   g$mask1$6734$1&dy4A
                                   g$mask2$6735$1&dy4A))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6712$1&dy4A
                                 '-1
                                 g$end$6732$1&dy4A)))))
                         (g$fxarithmetic-shift-left$6712$1&dy4A
                           '-1
                           g$start$6731$1&dy4A))))
                     g$fx4$6729$1&dy4A)))
                 g$fx3$6728$1&dy4A)))
             g$fx2$6727$1&dy4A)))
         g$fx1$6726$1&dy4A))))
   (g$fxarithmetic-shift-left$6712$1&dy4A
     g$fxarithmetic-shift-left$6759$1&dy4A
     (case-lambda
       ((g$fx1$6737$1&dy4A g$fx2$6738$1&dy4A)
        (fxarithmetic-shift g$fx1$6737$1&dy4A g$fx2$6738$1&dy4A))))
   (g$fxarithmetic-shift-right$6713$1&dy4A
     g$fxarithmetic-shift-right$6760$1&dy4A
     (case-lambda
       ((g$fx1$6739$1&dy4A g$fx2$6740$1&dy4A)
        (fxarithmetic-shift g$fx1$6739$1&dy4A (- g$fx2$6740$1&dy4A)))))
   (g$fxrotate-bit-field$6714$1&dy4A
     g$fxrotate-bit-field$6761$1&dy4A
     (case-lambda
       ((g$fx1$6741$1&dy4A
          g$fx2$6742$1&dy4A
          g$fx3$6743$1&dy4A
          g$fx4$6744$1&dy4A)
        ((case-lambda
           ((g$n$6745$1&dy4A)
            ((case-lambda
               ((g$start$6746$1&dy4A)
                ((case-lambda
                   ((g$end$6747$1&dy4A)
                    ((case-lambda
                       ((g$count$6748$1&dy4A)
                        ((case-lambda
                           ((g$width$6749$1&dy4A)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6749$1&dy4A)
                                  ((case-lambda
                                     ((g$count$6750$1&dy4A)
                                      ((case-lambda
                                         ((g$field0$6751$1&dy4A)
                                          ((case-lambda
                                             ((g$field1$6752$1&dy4A)
                                              ((case-lambda
                                                 ((g$field2$6753$1&dy4A)
                                                  ((case-lambda
                                                     ((g$field$6754$1&dy4A)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6711$1&dy4A
                                                            g$n$6745$1&dy4A
                                                            g$start$6746$1&dy4A
                                                            g$end$6747$1&dy4A
                                                            g$field$6754$1&dy4A))))))
                                                   (fxior
                                                     g$field1$6752$1&dy4A
                                                     g$field2$6753$1&dy4A))))
                                               (g$fxarithmetic-shift-right$6713$1&dy4A
                                                 g$field0$6751$1&dy4A
                                                 (- g$width$6749$1&dy4A
                                                    g$count$6750$1&dy4A)))))
                                           (g$fxarithmetic-shift-left$6712$1&dy4A
                                             g$field0$6751$1&dy4A
                                             g$count$6750$1&dy4A))))
                                       (g$fxbit-field$6710$1&dy4A
                                         g$n$6745$1&dy4A
                                         g$start$6746$1&dy4A
                                         g$end$6747$1&dy4A))))
                                   (mod g$count$6748$1&dy4A
                                        g$width$6749$1&dy4A))
                                  g$n$6745$1&dy4A))))))
                         (- g$end$6747$1&dy4A g$start$6746$1&dy4A))))
                     g$fx4$6744$1&dy4A)))
                 g$fx3$6743$1&dy4A)))
             g$fx2$6742$1&dy4A)))
         g$fx1$6741$1&dy4A)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7824$6762$1&dy4A
     g$7824$6774$1&dy4A
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7827$1&dy4A
       '#f
       '#f
       '#()))
   (g$7826$6763$1&dy4A g$7826$6775$1&dy4A '#f)
   (g$7825$6764$1&dy4A
     g$7825$6776$1&dy4A
     (make-record-constructor-descriptor
       g$7824$6762$1&dy4A
       &implementation-restriction-rcd
       g$7826$6763$1&dy4A))
   (g$7823$6765$1&dy4A
     g$7823$6777$1&dy4A
     (record-predicate g$7824$6762$1&dy4A))
   (g$make-no-infinities-violation$6766$1&dy4A
     g$make-no-infinities-violation$6778$1&dy4A
     (record-constructor g$7825$6764$1&dy4A))
   (g$no-infinities-violation?$6767$1&dy4A
     g$no-infinities-violation?$6779$1&dy4A
     (condition-predicate g$7824$6762$1&dy4A))
   (g$7838$6768$1&dy4A
     g$7838$6780$1&dy4A
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7841$1&dy4A
       '#f
       '#f
       '#()))
   (g$7840$6769$1&dy4A g$7840$6781$1&dy4A '#f)
   (g$7839$6770$1&dy4A
     g$7839$6782$1&dy4A
     (make-record-constructor-descriptor
       g$7838$6768$1&dy4A
       &implementation-restriction-rcd
       g$7840$6769$1&dy4A))
   (g$7837$6771$1&dy4A
     g$7837$6783$1&dy4A
     (record-predicate g$7838$6768$1&dy4A))
   (g$make-no-nans-violation$6772$1&dy4A
     g$make-no-nans-violation$6784$1&dy4A
     (record-constructor g$7839$6770$1&dy4A))
   (g$no-nans-violation?$6773$1&dy4A
     g$no-nans-violation?$6785$1&dy4A
     (condition-predicate g$7838$6768$1&dy4A)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7853$6786$1&dy4A
     g$7853$6866$1&dy4A
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7856$1&dy4A
       '#f
       '#f
       '#()))
   (g$7855$6787$1&dy4A g$7855$6867$1&dy4A '#f)
   (g$7854$6788$1&dy4A
     g$7854$6868$1&dy4A
     (make-record-constructor-descriptor
       g$7853$6786$1&dy4A
       &error-rcd
       g$7855$6787$1&dy4A))
   (g$7852$6789$1&dy4A
     g$7852$6869$1&dy4A
     (record-predicate g$7853$6786$1&dy4A))
   (g$make-i/o-error$6790$1&dy4A
     g$make-i/o-error$6870$1&dy4A
     (record-constructor g$7854$6788$1&dy4A))
   (g$i/o-error?$6791$1&dy4A
     g$i/o-error?$6871$1&dy4A
     (condition-predicate g$7853$6786$1&dy4A))
   (g$7867$6792$1&dy4A
     g$7867$6872$1&dy4A
     (make-record-type-descriptor
       '&i/o-read
       g$7853$6786$1&dy4A
       'g$7870$1&dy4A
       '#f
       '#f
       '#()))
   (g$7869$6793$1&dy4A g$7869$6873$1&dy4A '#f)
   (g$7868$6794$1&dy4A
     g$7868$6874$1&dy4A
     (make-record-constructor-descriptor
       g$7867$6792$1&dy4A
       g$7854$6788$1&dy4A
       g$7869$6793$1&dy4A))
   (g$7866$6795$1&dy4A
     g$7866$6875$1&dy4A
     (record-predicate g$7867$6792$1&dy4A))
   (g$make-i/o-read-error$6796$1&dy4A
     g$make-i/o-read-error$6876$1&dy4A
     (record-constructor g$7868$6794$1&dy4A))
   (g$i/o-read-error?$6797$1&dy4A
     g$i/o-read-error?$6877$1&dy4A
     (condition-predicate g$7867$6792$1&dy4A))
   (g$7881$6798$1&dy4A
     g$7881$6878$1&dy4A
     (make-record-type-descriptor
       '&i/o-write
       g$7853$6786$1&dy4A
       'g$7884$1&dy4A
       '#f
       '#f
       '#()))
   (g$7883$6799$1&dy4A g$7883$6879$1&dy4A '#f)
   (g$7882$6800$1&dy4A
     g$7882$6880$1&dy4A
     (make-record-constructor-descriptor
       g$7881$6798$1&dy4A
       g$7854$6788$1&dy4A
       g$7883$6799$1&dy4A))
   (g$7880$6801$1&dy4A
     g$7880$6881$1&dy4A
     (record-predicate g$7881$6798$1&dy4A))
   (g$make-i/o-write-error$6802$1&dy4A
     g$make-i/o-write-error$6882$1&dy4A
     (record-constructor g$7882$6800$1&dy4A))
   (g$i/o-write-error?$6803$1&dy4A
     g$i/o-write-error?$6883$1&dy4A
     (condition-predicate g$7881$6798$1&dy4A))
   (g$7896$6804$1&dy4A
     g$7896$6884$1&dy4A
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7853$6786$1&dy4A
       'g$7899$1&dy4A
       '#f
       '#f
       '#((immutable position))))
   (g$7898$6805$1&dy4A g$7898$6885$1&dy4A '#f)
   (g$7897$6806$1&dy4A
     g$7897$6886$1&dy4A
     (make-record-constructor-descriptor
       g$7896$6804$1&dy4A
       g$7854$6788$1&dy4A
       g$7898$6805$1&dy4A))
   (g$7895$6807$1&dy4A
     g$7895$6887$1&dy4A
     (record-predicate g$7896$6804$1&dy4A))
   (g$make-i/o-invalid-position-error$6808$1&dy4A
     g$make-i/o-invalid-position-error$6888$1&dy4A
     (record-constructor g$7897$6806$1&dy4A))
   (g$7894$6809$1&dy4A
     g$7894$6889$1&dy4A
     (record-accessor g$7896$6804$1&dy4A '0))
   (g$i/o-invalid-position-error?$6810$1&dy4A
     g$i/o-invalid-position-error?$6890$1&dy4A
     (condition-predicate g$7896$6804$1&dy4A))
   (g$i/o-error-position$6811$1&dy4A
     g$i/o-error-position$6891$1&dy4A
     (condition-accessor g$7896$6804$1&dy4A g$7894$6809$1&dy4A))
   (g$7913$6812$1&dy4A
     g$7913$6892$1&dy4A
     (make-record-type-descriptor
       '&i/o-filename
       g$7853$6786$1&dy4A
       'g$7916$1&dy4A
       '#f
       '#f
       '#((immutable filename))))
   (g$7915$6813$1&dy4A g$7915$6893$1&dy4A '#f)
   (g$7914$6814$1&dy4A
     g$7914$6894$1&dy4A
     (make-record-constructor-descriptor
       g$7913$6812$1&dy4A
       g$7854$6788$1&dy4A
       g$7915$6813$1&dy4A))
   (g$7912$6815$1&dy4A
     g$7912$6895$1&dy4A
     (record-predicate g$7913$6812$1&dy4A))
   (g$make-i/o-filename-error$6816$1&dy4A
     g$make-i/o-filename-error$6896$1&dy4A
     (record-constructor g$7914$6814$1&dy4A))
   (g$7911$6817$1&dy4A
     g$7911$6897$1&dy4A
     (record-accessor g$7913$6812$1&dy4A '0))
   (g$i/o-filename-error?$6818$1&dy4A
     g$i/o-filename-error?$6898$1&dy4A
     (condition-predicate g$7913$6812$1&dy4A))
   (g$i/o-error-filename$6819$1&dy4A
     g$i/o-error-filename$6899$1&dy4A
     (condition-accessor g$7913$6812$1&dy4A g$7911$6817$1&dy4A))
   (g$7929$6820$1&dy4A
     g$7929$6900$1&dy4A
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7913$6812$1&dy4A
       'g$7932$1&dy4A
       '#f
       '#f
       '#()))
   (g$7931$6821$1&dy4A g$7931$6901$1&dy4A '#f)
   (g$7930$6822$1&dy4A
     g$7930$6902$1&dy4A
     (make-record-constructor-descriptor
       g$7929$6820$1&dy4A
       g$7914$6814$1&dy4A
       g$7931$6821$1&dy4A))
   (g$7928$6823$1&dy4A
     g$7928$6903$1&dy4A
     (record-predicate g$7929$6820$1&dy4A))
   (g$make-i/o-file-protection-error$6824$1&dy4A
     g$make-i/o-file-protection-error$6904$1&dy4A
     (record-constructor g$7930$6822$1&dy4A))
   (g$i/o-file-protection-error?$6825$1&dy4A
     g$i/o-file-protection-error?$6905$1&dy4A
     (condition-predicate g$7929$6820$1&dy4A))
   (g$7943$6826$1&dy4A
     g$7943$6906$1&dy4A
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7929$6820$1&dy4A
       'g$7946$1&dy4A
       '#f
       '#f
       '#()))
   (g$7945$6827$1&dy4A g$7945$6907$1&dy4A '#f)
   (g$7944$6828$1&dy4A
     g$7944$6908$1&dy4A
     (make-record-constructor-descriptor
       g$7943$6826$1&dy4A
       g$7930$6822$1&dy4A
       g$7945$6827$1&dy4A))
   (g$7942$6829$1&dy4A
     g$7942$6909$1&dy4A
     (record-predicate g$7943$6826$1&dy4A))
   (g$make-i/o-file-is-read-only-error$6830$1&dy4A
     g$make-i/o-file-is-read-only-error$6910$1&dy4A
     (record-constructor g$7944$6828$1&dy4A))
   (g$i/o-file-is-read-only-error?$6831$1&dy4A
     g$i/o-file-is-read-only-error?$6911$1&dy4A
     (condition-predicate g$7943$6826$1&dy4A))
   (g$7957$6832$1&dy4A
     g$7957$6912$1&dy4A
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7913$6812$1&dy4A
       'g$7960$1&dy4A
       '#f
       '#f
       '#()))
   (g$7959$6833$1&dy4A g$7959$6913$1&dy4A '#f)
   (g$7958$6834$1&dy4A
     g$7958$6914$1&dy4A
     (make-record-constructor-descriptor
       g$7957$6832$1&dy4A
       g$7914$6814$1&dy4A
       g$7959$6833$1&dy4A))
   (g$7956$6835$1&dy4A
     g$7956$6915$1&dy4A
     (record-predicate g$7957$6832$1&dy4A))
   (g$make-i/o-file-already-exists-error$6836$1&dy4A
     g$make-i/o-file-already-exists-error$6916$1&dy4A
     (record-constructor g$7958$6834$1&dy4A))
   (g$i/o-file-already-exists-error?$6837$1&dy4A
     g$i/o-file-already-exists-error?$6917$1&dy4A
     (condition-predicate g$7957$6832$1&dy4A))
   (g$7971$6838$1&dy4A
     g$7971$6918$1&dy4A
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7913$6812$1&dy4A
       'g$7974$1&dy4A
       '#f
       '#f
       '#()))
   (g$7973$6839$1&dy4A g$7973$6919$1&dy4A '#f)
   (g$7972$6840$1&dy4A
     g$7972$6920$1&dy4A
     (make-record-constructor-descriptor
       g$7971$6838$1&dy4A
       g$7914$6814$1&dy4A
       g$7973$6839$1&dy4A))
   (g$7970$6841$1&dy4A
     g$7970$6921$1&dy4A
     (record-predicate g$7971$6838$1&dy4A))
   (g$make-i/o-file-does-not-exist-error$6842$1&dy4A
     g$make-i/o-file-does-not-exist-error$6922$1&dy4A
     (record-constructor g$7972$6840$1&dy4A))
   (g$i/o-file-does-not-exist-error?$6843$1&dy4A
     g$i/o-file-does-not-exist-error?$6923$1&dy4A
     (condition-predicate g$7971$6838$1&dy4A))
   (g$7986$6844$1&dy4A
     g$7986$6924$1&dy4A
     (make-record-type-descriptor
       '&i/o-port
       g$7853$6786$1&dy4A
       'g$7989$1&dy4A
       '#f
       '#f
       '#((immutable port))))
   (g$7988$6845$1&dy4A g$7988$6925$1&dy4A '#f)
   (g$7987$6846$1&dy4A
     g$7987$6926$1&dy4A
     (make-record-constructor-descriptor
       g$7986$6844$1&dy4A
       g$7854$6788$1&dy4A
       g$7988$6845$1&dy4A))
   (g$7985$6847$1&dy4A
     g$7985$6927$1&dy4A
     (record-predicate g$7986$6844$1&dy4A))
   (g$make-i/o-port-error$6848$1&dy4A
     g$make-i/o-port-error$6928$1&dy4A
     (record-constructor g$7987$6846$1&dy4A))
   (g$7984$6849$1&dy4A
     g$7984$6929$1&dy4A
     (record-accessor g$7986$6844$1&dy4A '0))
   (g$i/o-port-error?$6850$1&dy4A
     g$i/o-port-error?$6930$1&dy4A
     (condition-predicate g$7986$6844$1&dy4A))
   (g$i/o-error-port$6851$1&dy4A
     g$i/o-error-port$6931$1&dy4A
     (condition-accessor g$7986$6844$1&dy4A g$7984$6849$1&dy4A))
   (g$8002$6852$1&dy4A
     g$8002$6932$1&dy4A
     (make-record-type-descriptor
       '&i/o-decoding
       g$7986$6844$1&dy4A
       'g$8005$1&dy4A
       '#f
       '#f
       '#()))
   (g$8004$6853$1&dy4A g$8004$6933$1&dy4A '#f)
   (g$8003$6854$1&dy4A
     g$8003$6934$1&dy4A
     (make-record-constructor-descriptor
       g$8002$6852$1&dy4A
       g$7987$6846$1&dy4A
       g$8004$6853$1&dy4A))
   (g$8001$6855$1&dy4A
     g$8001$6935$1&dy4A
     (record-predicate g$8002$6852$1&dy4A))
   (g$make-i/o-decoding-error$6856$1&dy4A
     g$make-i/o-decoding-error$6936$1&dy4A
     (record-constructor g$8003$6854$1&dy4A))
   (g$i/o-decoding-error?$6857$1&dy4A
     g$i/o-decoding-error?$6937$1&dy4A
     (condition-predicate g$8002$6852$1&dy4A))
   (g$8017$6858$1&dy4A
     g$8017$6938$1&dy4A
     (make-record-type-descriptor
       '&i/o-encoding
       g$7986$6844$1&dy4A
       'g$8020$1&dy4A
       '#f
       '#f
       '#((immutable char))))
   (g$8019$6859$1&dy4A g$8019$6939$1&dy4A '#f)
   (g$8018$6860$1&dy4A
     g$8018$6940$1&dy4A
     (make-record-constructor-descriptor
       g$8017$6858$1&dy4A
       g$7987$6846$1&dy4A
       g$8019$6859$1&dy4A))
   (g$8016$6861$1&dy4A
     g$8016$6941$1&dy4A
     (record-predicate g$8017$6858$1&dy4A))
   (g$make-i/o-encoding-error$6862$1&dy4A
     g$make-i/o-encoding-error$6942$1&dy4A
     (record-constructor g$8018$6860$1&dy4A))
   (g$8015$6863$1&dy4A
     g$8015$6943$1&dy4A
     (record-accessor g$8017$6858$1&dy4A '0))
   (g$i/o-encoding-error?$6864$1&dy4A
     g$i/o-encoding-error?$6944$1&dy4A
     (condition-predicate g$8017$6858$1&dy4A))
   (g$i/o-encoding-error-char$6865$1&dy4A
     g$i/o-encoding-error-char$6945$1&dy4A
     (condition-accessor g$8017$6858$1&dy4A g$8015$6863$1&dy4A)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6946$1&dy4A
     g$get-output-string$6957$1&dy4A
     (case-lambda
       ((g$port$6951$1&dy4A)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6951$1&dy4A))))
   (g$open-output-string$6947$1&dy4A
     g$open-output-string$6958$1&dy4A
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6948$1&dy4A
     g$open-string-output-port$6959$1&dy4A
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6952$1&dy4A)
            (values
              g$p$6952$1&dy4A
              (case-lambda
                (() (g$get-output-string$6946$1&dy4A g$p$6952$1&dy4A))))))
         (g$open-output-string$6947$1&dy4A)))))
   (g$port?$6949$1&dy4A
     g$port?$6960$1&dy4A
     (case-lambda
       ((g$obj$6953$1&dy4A)
        ((case-lambda
           ((g$t$6954$1&dy4A)
            (if g$t$6954$1&dy4A
              g$t$6954$1&dy4A
              (begin '#f (binary-port? g$obj$6953$1&dy4A)))))
         (textual-port? g$obj$6953$1&dy4A)))))
   (g$call-with-string-output-port$6950$1&dy4A
     g$call-with-string-output-port$6961$1&dy4A
     (case-lambda
       ((g$proc$6955$1&dy4A)
        ((case-lambda
           ((g$p$6956$1&dy4A)
            (begin
              (call-with-port g$p$6956$1&dy4A g$proc$6955$1&dy4A)
              (g$get-output-string$6946$1&dy4A g$p$6956$1&dy4A))))
         (g$open-output-string$6947$1&dy4A))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6968$1&dy4A
     g$with-input-from-file$6994$1&dy4A
     (case-lambda
       ((g$filename$6972$1&dy4A g$thunk$6973$1&dy4A)
        ((case-lambda
           ((g$current-input-port$6976$1&dy4A g$t$6977$1&dy4A)
            ((case-lambda
               ((g$swap$6978$1&dy4A)
                (dynamic-wind
                  g$swap$6978$1&dy4A
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6973$1&dy4A)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6978$1&dy4A)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6979$1&dy4A)
                    (begin
                      (g$current-input-port$6976$1&dy4A g$t$6977$1&dy4A)
                      (set! g$t$6977$1&dy4A g$t$6979$1&dy4A))))
                 (g$current-input-port$6976$1&dy4A)))))))
         current-input-port
         (open-input-file g$filename$6972$1&dy4A)))))
   (g$with-output-to-file$6969$1&dy4A
     g$with-output-to-file$6995$1&dy4A
     (case-lambda
       ((g$filename$6980$1&dy4A g$thunk$6981$1&dy4A)
        ((case-lambda
           ((g$current-output-port$6984$1&dy4A g$t$6985$1&dy4A)
            ((case-lambda
               ((g$swap$6986$1&dy4A)
                (dynamic-wind
                  g$swap$6986$1&dy4A
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6981$1&dy4A)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6986$1&dy4A)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6987$1&dy4A)
                    (begin
                      (g$current-output-port$6984$1&dy4A g$t$6985$1&dy4A)
                      (set! g$t$6985$1&dy4A g$t$6987$1&dy4A))))
                 (g$current-output-port$6984$1&dy4A)))))))
         current-output-port
         (open-output-file g$filename$6980$1&dy4A)))))
   (g$call-with-input-file$6970$1&dy4A
     g$call-with-input-file$6996$1&dy4A
     (case-lambda
       ((g$filename$6988$1&dy4A g$proc$6989$1&dy4A)
        ((case-lambda
           ((g$p$6990$1&dy4A)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6989$1&dy4A g$p$6990$1&dy4A)))
              (case-lambda (() (close-input-port g$p$6990$1&dy4A))))))
         (open-input-file g$filename$6988$1&dy4A)))))
   (g$call-with-output-file$6971$1&dy4A
     g$call-with-output-file$6997$1&dy4A
     (case-lambda
       ((g$filename$6991$1&dy4A g$proc$6992$1&dy4A)
        ((case-lambda
           ((g$p$6993$1&dy4A)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6992$1&dy4A g$p$6993$1&dy4A)))
              (case-lambda (() (close-output-port g$p$6993$1&dy4A))))))
         (open-output-file g$filename$6991$1&dy4A))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8087$6998$1&dy4A
     g$8087$7107$1&dy4A
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8089$6999$1&dy4A g$8089$7108$1&dy4A '#f)
   (g$8088$7000$1&dy4A
     g$8088$7109$1&dy4A
     (make-record-constructor-descriptor
       g$8087$6998$1&dy4A
       '#f
       g$8089$6999$1&dy4A))
   (g$enum?$7001$1&dy4A
     g$enum?$7110$1&dy4A
     (record-predicate g$8087$6998$1&dy4A))
   (g$make-enum$7002$1&dy4A
     g$make-enum$7111$1&dy4A
     (record-constructor g$8088$7000$1&dy4A))
   (g$enum-value$7003$1&dy4A
     g$enum-value$7112$1&dy4A
     (record-accessor g$8087$6998$1&dy4A '0))
   (g$enum-info$7004$1&dy4A
     g$enum-info$7113$1&dy4A
     (record-accessor g$8087$6998$1&dy4A '1))
   (g$8100$7005$1&dy4A
     g$8100$7114$1&dy4A
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8102$7006$1&dy4A g$8102$7115$1&dy4A '#f)
   (g$8101$7007$1&dy4A
     g$8101$7116$1&dy4A
     (make-record-constructor-descriptor
       g$8100$7005$1&dy4A
       '#f
       g$8102$7006$1&dy4A))
   (g$enum-universe?$7008$1&dy4A
     g$enum-universe?$7117$1&dy4A
     (record-predicate g$8100$7005$1&dy4A))
   (g$make-enum-universe$7009$1&dy4A
     g$make-enum-universe$7118$1&dy4A
     (record-constructor g$8101$7007$1&dy4A))
   (g$enum-universe-id$7010$1&dy4A
     g$enum-universe-id$7119$1&dy4A
     (record-accessor g$8100$7005$1&dy4A '0))
   (g$enum-universe-symbols$7011$1&dy4A
     g$enum-universe-symbols$7120$1&dy4A
     (record-accessor g$8100$7005$1&dy4A '1))
   (g$enum-universe-mapping$7012$1&dy4A
     g$enum-universe-mapping$7121$1&dy4A
     (record-accessor g$8100$7005$1&dy4A '2))
   (g$enum-universe-value$7013$1&dy4A
     g$enum-universe-value$7122$1&dy4A
     (record-accessor g$8100$7005$1&dy4A '3))
   (g$enum-type=?$7014$1&dy4A
     g$enum-type=?$7123$1&dy4A
     (case-lambda
       ((g$enumset1$7036$1&dy4A g$enumset2$7037$1&dy4A)
        (eq? (g$enum-universe-id$7010$1&dy4A
               (g$enum-info$7004$1&dy4A g$enumset1$7036$1&dy4A))
             (g$enum-universe-id$7010$1&dy4A
               (g$enum-info$7004$1&dy4A g$enumset2$7037$1&dy4A))))))
   (g$get-symbols$7015$1&dy4A
     g$get-symbols$7124$1&dy4A
     (case-lambda
       ((g$enumset$7038$1&dy4A)
        (g$enum-universe-symbols$7011$1&dy4A
          (g$enum-info$7004$1&dy4A g$enumset$7038$1&dy4A)))))
   (g$get-value$7016$1&dy4A
     g$get-value$7125$1&dy4A
     (case-lambda
       ((g$enumset$7039$1&dy4A g$s$7040$1&dy4A)
        (g$hashtable-ref$6163$1&dy4A
          (g$enum-universe-mapping$7012$1&dy4A
            (g$enum-info$7004$1&dy4A g$enumset$7039$1&dy4A))
          g$s$7040$1&dy4A
          '#f))))
   (g$assert-enum$7017$1&dy4A
     g$assert-enum$7126$1&dy4A
     (case-lambda
       ((g$who$7041$1&dy4A g$enumset$7042$1&dy4A)
        (if (not (g$enum?$7001$1&dy4A g$enumset$7042$1&dy4A))
          (assertion-violation
            g$who$7041$1&dy4A
            '"not an enumeration"
            g$enumset$7042$1&dy4A)
          (void)))))
   (g$make-info$7018$1&dy4A
     g$make-info$7127$1&dy4A
     (case-lambda
       ((g$symbols$7043$1&dy4A)
        ((case-lambda
           ((g$ht$7044$1&dy4A)
            ((letrec ((g$f$7045$1&dy4A
                        (case-lambda
                          ((g$s$7046$1&dy4A g$a$7047$1&dy4A g$mask$7048$1&dy4A)
                           (if (null? g$s$7046$1&dy4A)
                             (values
                               (reverse! g$a$7047$1&dy4A)
                               g$ht$7044$1&dy4A
                               (- g$mask$7048$1&dy4A '1))
                             ((case-lambda
                                ((g$n$7049$1&dy4A)
                                 (if (symbol? g$n$7049$1&dy4A)
                                   (if (g$hashtable-contains?$6166$1&dy4A
                                         g$ht$7044$1&dy4A
                                         g$n$7049$1&dy4A)
                                     (g$f$7045$1&dy4A
                                       (cdr g$s$7046$1&dy4A)
                                       g$a$7047$1&dy4A
                                       g$mask$7048$1&dy4A)
                                     (begin
                                       (g$hashtable-set!$6164$1&dy4A
                                         g$ht$7044$1&dy4A
                                         g$n$7049$1&dy4A
                                         g$mask$7048$1&dy4A)
                                       (g$f$7045$1&dy4A
                                         (cdr g$s$7046$1&dy4A)
                                         (cons g$n$7049$1&dy4A g$a$7047$1&dy4A)
                                         (g$bitwise-arithmetic-shift-left$6705$1&dy4A
                                           g$mask$7048$1&dy4A
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$7049$1&dy4A))))
                              (car g$s$7046$1&dy4A)))))))
               g$f$7045$1&dy4A)
             g$symbols$7043$1&dy4A
             '()
             '1)))
         (g$make-eq-hashtable$6160$1&dy4A)))))
   (g$make-name$7019$1&dy4A
     g$make-name$7128$1&dy4A
     (case-lambda
       ((g$symbols$7050$1&dy4A)
        (string->symbol (g$format$7167$1&dy4A '"~a" g$symbols$7050$1&dy4A)))))
   (g$make-enumeration$7020$1&dy4A
     g$make-enumeration$7129$1&dy4A
     (case-lambda
       ((g$symbols$7051$1&dy4A)
        (call-with-values
          (case-lambda (() (g$make-info$7018$1&dy4A g$symbols$7051$1&dy4A)))
          (case-lambda
            ((g$s$7055$1&dy4A g$mapping$7056$1&dy4A g$mask$7057$1&dy4A)
             ((case-lambda
                ((g$mask$7058$1&dy4A g$mapping$7059$1&dy4A g$s$7060$1&dy4A)
                 (g$make-enum$7002$1&dy4A
                   g$mask$7058$1&dy4A
                   (g$make-enum-universe$7009$1&dy4A
                     (g$make-name$7019$1&dy4A g$s$7060$1&dy4A)
                     g$s$7060$1&dy4A
                     g$mapping$7059$1&dy4A
                     g$mask$7058$1&dy4A))))
              g$mask$7057$1&dy4A
              g$mapping$7056$1&dy4A
              g$s$7055$1&dy4A)))))))
   (g$enum-set-universe$7021$1&dy4A
     g$enum-set-universe$7130$1&dy4A
     (case-lambda
       ((g$enumset$7061$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A 'enum-set-universe g$enumset$7061$1&dy4A)
          ((case-lambda
             ((g$ei$7062$1&dy4A)
              (g$make-enum$7002$1&dy4A
                (g$enum-universe-value$7013$1&dy4A g$ei$7062$1&dy4A)
                g$ei$7062$1&dy4A)))
           (g$enum-info$7004$1&dy4A g$enumset$7061$1&dy4A))))))
   (g$enum-set-indexer$7022$1&dy4A
     g$enum-set-indexer$7131$1&dy4A
     (case-lambda
       ((g$enumset$7063$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A 'enum-set-indexer g$enumset$7063$1&dy4A)
          (case-lambda
            ((g$symbol$7064$1&dy4A)
             (begin
               (if (not (symbol? g$symbol$7064$1&dy4A))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$7064$1&dy4A)
                 (void))
               ((case-lambda
                  ((g$v$7065$1&dy4A)
                   (if g$v$7065$1&dy4A
                     (- (bitwise-length g$v$7065$1&dy4A) '1)
                     '#f)))
                (g$get-value$7016$1&dy4A
                  g$enumset$7063$1&dy4A
                  g$symbol$7064$1&dy4A)))))))))
   (g$enum-set-constructor$7023$1&dy4A
     g$enum-set-constructor$7132$1&dy4A
     (case-lambda
       ((g$enumset$7066$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A
            'enum-set-constructor
            g$enumset$7066$1&dy4A)
          (case-lambda
            ((g$symbols$7067$1&dy4A)
             ((letrec ((g$f$7068$1&dy4A
                         (case-lambda
                           ((g$v$7069$1&dy4A g$s$7070$1&dy4A)
                            (if (null? g$s$7070$1&dy4A)
                              (g$make-enum$7002$1&dy4A
                                g$v$7069$1&dy4A
                                (g$enum-info$7004$1&dy4A g$enumset$7066$1&dy4A))
                              ((case-lambda
                                 ((g$n$7071$1&dy4A)
                                  (if (symbol? g$n$7071$1&dy4A)
                                    ((case-lambda
                                       ((g$v*$7072$1&dy4A)
                                        (if g$v*$7072$1&dy4A
                                          (g$f$7068$1&dy4A
                                            (bitwise-ior
                                              g$v$7069$1&dy4A
                                              g$v*$7072$1&dy4A)
                                            (cdr g$s$7070$1&dy4A))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$7071$1&dy4A))))
                                     (g$get-value$7016$1&dy4A
                                       g$enumset$7066$1&dy4A
                                       g$n$7071$1&dy4A))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$7071$1&dy4A))))
                               (car g$s$7070$1&dy4A)))))))
                g$f$7068$1&dy4A)
              '0
              g$symbols$7067$1&dy4A)))))))
   (g$enum-set->list$7024$1&dy4A
     g$enum-set->list$7133$1&dy4A
     (case-lambda
       ((g$enumset$7073$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A 'enum-set->list g$enumset$7073$1&dy4A)
          ((case-lambda
             ((g$value$7074$1&dy4A)
              ((letrec ((g$f$7075$1&dy4A
                          (case-lambda
                            ((g$s$7076$1&dy4A g$l$7077$1&dy4A)
                             (if (null? g$s$7076$1&dy4A)
                               (reverse! g$l$7077$1&dy4A)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$7016$1&dy4A
                                         g$enumset$7073$1&dy4A
                                         (car g$s$7076$1&dy4A))
                                       g$value$7074$1&dy4A))
                                 (g$f$7075$1&dy4A
                                   (cdr g$s$7076$1&dy4A)
                                   g$l$7077$1&dy4A)
                                 (g$f$7075$1&dy4A
                                   (cdr g$s$7076$1&dy4A)
                                   (cons
                                     (car g$s$7076$1&dy4A)
                                     g$l$7077$1&dy4A))))))))
                 g$f$7075$1&dy4A)
               (g$get-symbols$7015$1&dy4A g$enumset$7073$1&dy4A)
               '())))
           (g$enum-value$7003$1&dy4A g$enumset$7073$1&dy4A))))))
   (g$enum-set-member?$7025$1&dy4A
     g$enum-set-member?$7134$1&dy4A
     (case-lambda
       ((g$symbol$7078$1&dy4A g$enumset$7079$1&dy4A)
        (begin
          (if (not (symbol? g$symbol$7078$1&dy4A))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$7078$1&dy4A)
            (void))
          (g$assert-enum$7017$1&dy4A 'enum-set-member? g$enumset$7079$1&dy4A)
          ((case-lambda
             ((g$v$7080$1&dy4A)
              (if g$v$7080$1&dy4A
                (not (zero?
                       (bitwise-and
                         g$v$7080$1&dy4A
                         (g$enum-value$7003$1&dy4A g$enumset$7079$1&dy4A))))
                '#f)))
           (g$get-value$7016$1&dy4A
             g$enumset$7079$1&dy4A
             g$symbol$7078$1&dy4A))))))
   (g$enum-set-subset?$7026$1&dy4A
     g$enum-set-subset?$7135$1&dy4A
     (case-lambda
       ((g$enumset1$7081$1&dy4A g$enumset2$7082$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A 'enum-set-subset? g$enumset1$7081$1&dy4A)
          (g$assert-enum$7017$1&dy4A 'enum-set-subset? g$enumset2$7082$1&dy4A)
          ((case-lambda
             ((g$v1$7083$1&dy4A g$v2$7084$1&dy4A)
              (if (g$enum-type=?$7014$1&dy4A
                    g$enumset1$7081$1&dy4A
                    g$enumset2$7082$1&dy4A)
                (= (bitwise-and g$v1$7083$1&dy4A g$v2$7084$1&dy4A)
                   g$v1$7083$1&dy4A)
                ((letrec ((g$f$7085$1&dy4A
                            (case-lambda
                              ((g$s$7086$1&dy4A)
                               (if (null? g$s$7086$1&dy4A)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$7087$1&dy4A g$v2*$7088$1&dy4A)
                                     (if g$v2*$7088$1&dy4A
                                       ((case-lambda
                                          ((g$has1$7089$1&dy4A
                                             g$has2$7090$1&dy4A)
                                           (if (if g$has1$7089$1&dy4A
                                                 (begin
                                                   '#f
                                                   (not g$has2$7090$1&dy4A))
                                                 '#f)
                                             '#f
                                             (g$f$7085$1&dy4A
                                               (cdr g$s$7086$1&dy4A)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$7083$1&dy4A
                                                 g$v1*$7087$1&dy4A)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$7084$1&dy4A
                                                 g$v2*$7088$1&dy4A))))
                                       '#f)))
                                  (g$get-value$7016$1&dy4A
                                    g$enumset1$7081$1&dy4A
                                    (car g$s$7086$1&dy4A))
                                  (g$get-value$7016$1&dy4A
                                    g$enumset2$7082$1&dy4A
                                    (car g$s$7086$1&dy4A))))))))
                   g$f$7085$1&dy4A)
                 (g$get-symbols$7015$1&dy4A g$enumset1$7081$1&dy4A)))))
           (g$enum-value$7003$1&dy4A g$enumset1$7081$1&dy4A)
           (g$enum-value$7003$1&dy4A g$enumset2$7082$1&dy4A))))))
   (g$enum-set=?$7027$1&dy4A
     g$enum-set=?$7136$1&dy4A
     (case-lambda
       ((g$enumset1$7091$1&dy4A g$enumset2$7092$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A 'enum-set=? g$enumset1$7091$1&dy4A)
          (g$assert-enum$7017$1&dy4A 'enum-set=? g$enumset2$7092$1&dy4A)
          (if (g$enum-set-subset?$7026$1&dy4A
                g$enumset1$7091$1&dy4A
                g$enumset2$7092$1&dy4A)
            (begin
              '#f
              (g$enum-set-subset?$7026$1&dy4A
                g$enumset2$7092$1&dy4A
                g$enumset1$7091$1&dy4A))
            '#f)))))
   (g$enum-set-union$7028$1&dy4A
     g$enum-set-union$7137$1&dy4A
     (case-lambda
       ((g$enumset1$7093$1&dy4A g$enumset2$7094$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A 'enum-set-union g$enumset1$7093$1&dy4A)
          (g$assert-enum$7017$1&dy4A 'enum-set-union g$enumset2$7094$1&dy4A)
          (if (g$enum-type=?$7014$1&dy4A
                g$enumset1$7093$1&dy4A
                g$enumset2$7094$1&dy4A)
            (g$make-enum$7002$1&dy4A
              (bitwise-ior
                (g$enum-value$7003$1&dy4A g$enumset1$7093$1&dy4A)
                (g$enum-value$7003$1&dy4A g$enumset2$7094$1&dy4A))
              (g$enum-info$7004$1&dy4A g$enumset1$7093$1&dy4A))
            '#f)))))
   (g$enum-set-intersection$7029$1&dy4A
     g$enum-set-intersection$7138$1&dy4A
     (case-lambda
       ((g$enumset1$7095$1&dy4A g$enumset2$7096$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A
            'enum-set-intersection
            g$enumset1$7095$1&dy4A)
          (g$assert-enum$7017$1&dy4A
            'enum-set-intersection
            g$enumset2$7096$1&dy4A)
          (if (g$enum-type=?$7014$1&dy4A
                g$enumset1$7095$1&dy4A
                g$enumset2$7096$1&dy4A)
            (g$make-enum$7002$1&dy4A
              (bitwise-and
                (g$enum-value$7003$1&dy4A g$enumset1$7095$1&dy4A)
                (g$enum-value$7003$1&dy4A g$enumset2$7096$1&dy4A))
              (g$enum-info$7004$1&dy4A g$enumset1$7095$1&dy4A))
            '#f)))))
   (g$enum-set-difference$7030$1&dy4A
     g$enum-set-difference$7139$1&dy4A
     (case-lambda
       ((g$enumset1$7097$1&dy4A g$enumset2$7098$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A
            'enum-set-difference
            g$enumset1$7097$1&dy4A)
          (g$assert-enum$7017$1&dy4A
            'enum-set-difference
            g$enumset2$7098$1&dy4A)
          (if (g$enum-type=?$7014$1&dy4A
                g$enumset1$7097$1&dy4A
                g$enumset2$7098$1&dy4A)
            (g$make-enum$7002$1&dy4A
              (bitwise-and
                (g$enum-value$7003$1&dy4A g$enumset1$7097$1&dy4A)
                (bitwise-not (g$enum-value$7003$1&dy4A g$enumset2$7098$1&dy4A)))
              (g$enum-info$7004$1&dy4A g$enumset1$7097$1&dy4A))
            '#f)))))
   (g$enum-set-complement$7031$1&dy4A
     g$enum-set-complement$7140$1&dy4A
     (case-lambda
       ((g$enumset$7099$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A 'enum-set-complement g$enumset$7099$1&dy4A)
          (g$make-enum$7002$1&dy4A
            (bitwise-not (g$enum-value$7003$1&dy4A g$enumset$7099$1&dy4A))
            (g$enum-info$7004$1&dy4A g$enumset$7099$1&dy4A))))))
   (g$enum-set-projection$7032$1&dy4A
     g$enum-set-projection$7141$1&dy4A
     (case-lambda
       ((g$enumset1$7100$1&dy4A g$enumset2$7101$1&dy4A)
        (begin
          (g$assert-enum$7017$1&dy4A
            'enum-set-projection
            g$enumset1$7100$1&dy4A)
          (g$assert-enum$7017$1&dy4A
            'enum-set-projection
            g$enumset2$7101$1&dy4A)
          ((case-lambda
             ((g$v1$7102$1&dy4A)
              ((letrec ((g$f$7103$1&dy4A
                          (case-lambda
                            ((g$s$7104$1&dy4A g$v$7105$1&dy4A)
                             (if (null? g$s$7104$1&dy4A)
                               (g$make-enum$7002$1&dy4A
                                 g$v$7105$1&dy4A
                                 (g$enum-info$7004$1&dy4A
                                   g$enumset2$7101$1&dy4A))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$7102$1&dy4A
                                       (g$get-value$7016$1&dy4A
                                         g$enumset1$7100$1&dy4A
                                         (car g$s$7104$1&dy4A))))
                                 (g$f$7103$1&dy4A
                                   (cdr g$s$7104$1&dy4A)
                                   g$v$7105$1&dy4A)
                                 ((case-lambda
                                    ((g$v2$7106$1&dy4A)
                                     (if g$v2$7106$1&dy4A
                                       (g$f$7103$1&dy4A
                                         (cdr g$s$7104$1&dy4A)
                                         (bitwise-ior
                                           g$v$7105$1&dy4A
                                           g$v2$7106$1&dy4A))
                                       (g$f$7103$1&dy4A
                                         (cdr g$s$7104$1&dy4A)
                                         g$v$7105$1&dy4A))))
                                  (g$get-value$7016$1&dy4A
                                    g$enumset2$7101$1&dy4A
                                    (car g$s$7104$1&dy4A)))))))))
                 g$f$7103$1&dy4A)
               (g$get-symbols$7015$1&dy4A g$enumset1$7100$1&dy4A)
               '0)))
           (g$enum-value$7003$1&dy4A g$enumset1$7100$1&dy4A)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$7033$1&dy4A g$p$7034$1&dy4A g$wr$7035$1&dy4A)
       (g$fprintf$7166$1&dy4A
         g$p$7034$1&dy4A
         '"#[enum-set ~a]"
         (g$enum-set->list$7024$1&dy4A g$x$7033$1&dy4A))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$7142$1&dy4A
     g$dofmt$7164$1&dy4A
     (case-lambda
       ((g$p$7146$1&dy4A g$cntl$7147$1&dy4A g$args$7148$1&dy4A)
        ((case-lambda
           ((g$nmax$7149$1&dy4A)
            ((letrec ((g$loop$7150$1&dy4A
                        (case-lambda
                          ((g$n$7151$1&dy4A g$a$7152$1&dy4A)
                           (if (fx<=? g$n$7151$1&dy4A g$nmax$7149$1&dy4A)
                             ((case-lambda
                                ((g$c$7153$1&dy4A)
                                 (if (if (g$char=?$5920$1&dy4A
                                           g$c$7153$1&dy4A
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$7151$1&dy4A
                                           g$nmax$7149$1&dy4A))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$7154$1&dy4A)
                                       (if (g$memv$5717$1&dy4A
                                             g$t$7154$1&dy4A
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$7152$1&dy4A)
                                             g$p$7146$1&dy4A)
                                           (g$loop$7150$1&dy4A
                                             (fx+ g$n$7151$1&dy4A '2)
                                             (cdr g$a$7152$1&dy4A)))
                                         (if (g$memv$5717$1&dy4A
                                               g$t$7154$1&dy4A
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$7152$1&dy4A)
                                               g$p$7146$1&dy4A)
                                             (g$loop$7150$1&dy4A
                                               (fx+ g$n$7151$1&dy4A '2)
                                               (cdr g$a$7152$1&dy4A)))
                                           (if (g$memv$5717$1&dy4A
                                                 g$t$7154$1&dy4A
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$7152$1&dy4A)
                                                   '2)
                                                 g$p$7146$1&dy4A)
                                               (g$loop$7150$1&dy4A
                                                 (fx+ g$n$7151$1&dy4A '2)
                                                 (cdr g$a$7152$1&dy4A)))
                                             (if (g$memv$5717$1&dy4A
                                                   g$t$7154$1&dy4A
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$7152$1&dy4A)
                                                     '8)
                                                   g$p$7146$1&dy4A)
                                                 (g$loop$7150$1&dy4A
                                                   (fx+ g$n$7151$1&dy4A '2)
                                                   (cdr g$a$7152$1&dy4A)))
                                               (if (g$memv$5717$1&dy4A
                                                     g$t$7154$1&dy4A
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$7152$1&dy4A)
                                                       '16)
                                                     g$p$7146$1&dy4A)
                                                   (g$loop$7150$1&dy4A
                                                     (fx+ g$n$7151$1&dy4A '2)
                                                     (cdr g$a$7152$1&dy4A)))
                                                 (if (g$memv$5717$1&dy4A
                                                       g$t$7154$1&dy4A
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$7152$1&dy4A)
                                                         '10)
                                                       g$p$7146$1&dy4A)
                                                     (g$loop$7150$1&dy4A
                                                       (fx+ g$n$7151$1&dy4A '2)
                                                       (cdr g$a$7152$1&dy4A)))
                                                   (if (g$memv$5717$1&dy4A
                                                         g$t$7154$1&dy4A
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$7146$1&dy4A)
                                                       (g$loop$7150$1&dy4A
                                                         (fx+ g$n$7151$1&dy4A
                                                              '2)
                                                         g$a$7152$1&dy4A))
                                                     (begin
                                                       (write-char
                                                         g$c$7153$1&dy4A
                                                         g$p$7146$1&dy4A)
                                                       (g$loop$7150$1&dy4A
                                                         (fx+ g$n$7151$1&dy4A
                                                              '1)
                                                         g$a$7152$1&dy4A)))))))))))
                                    (string-ref
                                      g$cntl$7147$1&dy4A
                                      (fx+ g$n$7151$1&dy4A '1)))
                                   (begin
                                     (write-char
                                       g$c$7153$1&dy4A
                                       g$p$7146$1&dy4A)
                                     (g$loop$7150$1&dy4A
                                       (fx+ g$n$7151$1&dy4A '1)
                                       g$a$7152$1&dy4A)))))
                              (string-ref g$cntl$7147$1&dy4A g$n$7151$1&dy4A))
                             (void))))))
               g$loop$7150$1&dy4A)
             '0
             g$args$7148$1&dy4A)))
         (fx- (string-length g$cntl$7147$1&dy4A) '1)))))
   (g$printf$7143$1&dy4A
     g$printf$7165$1&dy4A
     (case-lambda
       ((g$control$7155$1&dy4A . g$args$7156$1&dy4A)
        (g$dofmt$7142$1&dy4A
          (current-output-port)
          g$control$7155$1&dy4A
          g$args$7156$1&dy4A))))
   (g$fprintf$7144$1&dy4A
     g$fprintf$7166$1&dy4A
     (case-lambda
       ((g$p$7157$1&dy4A g$control$7158$1&dy4A . g$args$7159$1&dy4A)
        (g$dofmt$7142$1&dy4A
          g$p$7157$1&dy4A
          g$control$7158$1&dy4A
          g$args$7159$1&dy4A))))
   (g$format$7145$1&dy4A
     g$format$7167$1&dy4A
     (case-lambda
       ((g$control$7160$1&dy4A . g$args$7161$1&dy4A)
        (call-with-values
          g$open-string-output-port$6959$1&dy4A
          (case-lambda
            ((g$p$7162$1&dy4A g$c$7163$1&dy4A)
             (begin
               (g$dofmt$7142$1&dy4A
                 g$p$7162$1&dy4A
                 g$control$7160$1&dy4A
                 g$args$7161$1&dy4A)
               (g$c$7163$1&dy4A)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$7168$1&dy4A
     g$make-traced-macro$7171$1&dy4A
     (case-lambda
       ((g$name$7169$1&dy4A g$x$7170$1&dy4A)
        (if (procedure? g$x$7170$1&dy4A)
          (make-traced-procedure
            g$name$7169$1&dy4A
            g$x$7170$1&dy4A
            g$syntax->datum$11882$1&dy4A)
          (if (g$variable-transformer?$11705$1&dy4A g$x$7170$1&dy4A)
            (g$make-variable-transformer$11704$1&dy4A
              (make-traced-procedure
                g$name$7169$1&dy4A
                (g$variable-transformer-procedure$11706$1&dy4A g$x$7170$1&dy4A)
                g$syntax->datum$11882$1&dy4A))
            g$x$7170$1&dy4A))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$7172$1&dy4A
     g$library-version-mismatch-warning$7268$1&dy4A
     (case-lambda
       ((g$name$7245$1&dy4A g$depname$7246$1&dy4A g$filename$7247$1&dy4A)
        (g$fprintf$7166$1&dy4A
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$7245$1&dy4A
          g$depname$7246$1&dy4A
          g$filename$7247$1&dy4A))))
   (g$file-locator-resolution-error$7173$1&dy4A
     g$file-locator-resolution-error$7269$1&dy4A
     (case-lambda
       ((g$libname$7248$1&dy4A g$failed-list$7249$1&dy4A)
        (letrec* ((g$8332$7250$1&dy4A
                    (make-record-type-descriptor
                      '&library-resolution
                      &condition-rtd
                      'g$8335$1&dy4A
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8334$7251$1&dy4A '#f)
                  (g$8333$7252$1&dy4A
                    (make-record-constructor-descriptor
                      g$8332$7250$1&dy4A
                      &condition-rcd
                      g$8334$7251$1&dy4A))
                  (g$8331$7253$1&dy4A (record-predicate g$8332$7250$1&dy4A))
                  (g$make-library-resolution-condition$7254$1&dy4A
                    (record-constructor g$8333$7252$1&dy4A))
                  (g$8329$7255$1&dy4A (record-accessor g$8332$7250$1&dy4A '0))
                  (g$8330$7256$1&dy4A (record-accessor g$8332$7250$1&dy4A '1))
                  (g$library-resolution-condition?$7257$1&dy4A
                    (condition-predicate g$8332$7250$1&dy4A))
                  (g$condition-library$7258$1&dy4A
                    (condition-accessor g$8332$7250$1&dy4A g$8329$7255$1&dy4A))
                  (g$condition-files$7259$1&dy4A
                    (condition-accessor g$8332$7250$1&dy4A g$8330$7256$1&dy4A)))
          (raise
            (condition
              (g$make-error$6448$1&dy4A)
              (g$make-who-condition$6474$1&dy4A 'expander)
              (g$make-message-condition$6428$1&dy4A
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$7254$1&dy4A
                g$libname$7248$1&dy4A
                g$failed-list$7249$1&dy4A)))))))
   (g$read-library-source-file$7174$1&dy4A
     g$read-library-source-file$7270$1&dy4A
     (case-lambda
       ((g$file-name$7260$1&dy4A)
        (g$with-input-from-file$6994$1&dy4A
          g$file-name$7260$1&dy4A
          read-annotated))))
   (g$make-parameter$7175$1&dy4A
     g$make-parameter$7271$1&dy4A
     (case-lambda
       ((g$x$7261$1&dy4A)
        (g$make-parameter$7175$1&dy4A
          g$x$7261$1&dy4A
          (case-lambda ((g$x$7262$1&dy4A) g$x$7262$1&dy4A))))
       ((g$x$7263$1&dy4A g$fender$7264$1&dy4A)
        (begin
          (if (not (procedure? g$fender$7264$1&dy4A))
            (g$assertion-error$11875$1&dy4A
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(89,8) - (89,36)"))
            (void))
          ((case-lambda
             ((g$x$7265$1&dy4A)
              (case-lambda
                (() g$x$7265$1&dy4A)
                ((g$v$7266$1&dy4A)
                 (set! g$x$7265$1&dy4A
                   (g$fender$7264$1&dy4A g$v$7266$1&dy4A))))))
           (g$fender$7264$1&dy4A g$x$7263$1&dy4A))))))
   (g$file-options-constructor$7243$1&dy4A
     g$file-options-constructor$7272$1&dy4A
     (g$make-parameter$7175$1&dy4A '#f))
   (g$file-options-spec$7244$1&dy4A
     g$file-options-spec$7273$1&dy4A
     (case-lambda
       ((g$x$7267$1&dy4A)
        ((g$file-options-constructor$7243$1&dy4A) g$x$7267$1&dy4A)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7469$1&dy4A
     g$current-primitive-locations$7514$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (case-lambda ((g$x$7475$1&dy4A) '#f))
       (case-lambda
         ((g$p$7476$1&dy4A)
          (begin
            (if (not (procedure? g$p$7476$1&dy4A))
              (g$assertion-error$11875$1&dy4A
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7476$1&dy4A)))))
   (g$mutable?$7470$1&dy4A
     g$mutable?$7515$1&dy4A
     (case-lambda
       ((g$x$7477$1&dy4A)
        (letrec* ((g$simple?$7478$1&dy4A
                    (case-lambda
                      ((g$x$7479$1&dy4A)
                       ((case-lambda
                          ((g$t$7480$1&dy4A)
                           (if g$t$7480$1&dy4A
                             g$t$7480$1&dy4A
                             ((case-lambda
                                ((g$t$7481$1&dy4A)
                                 (if g$t$7481$1&dy4A
                                   g$t$7481$1&dy4A
                                   ((case-lambda
                                      ((g$t$7482$1&dy4A)
                                       (if g$t$7482$1&dy4A
                                         g$t$7482$1&dy4A
                                         ((case-lambda
                                            ((g$t$7483$1&dy4A)
                                             (if g$t$7483$1&dy4A
                                               g$t$7483$1&dy4A
                                               ((case-lambda
                                                  ((g$t$7484$1&dy4A)
                                                   (if g$t$7484$1&dy4A
                                                     g$t$7484$1&dy4A
                                                     ((case-lambda
                                                        ((g$t$7485$1&dy4A)
                                                         (if g$t$7485$1&dy4A
                                                           g$t$7485$1&dy4A
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7479$1&dy4A)))))
                                                      (bytevector?
                                                        g$x$7479$1&dy4A)))))
                                                (string? g$x$7479$1&dy4A)))))
                                          (boolean? g$x$7479$1&dy4A)))))
                                    (symbol? g$x$7479$1&dy4A)))))
                              (char? g$x$7479$1&dy4A)))))
                        (null? g$x$7479$1&dy4A))))))
          (not (g$simple?$7478$1&dy4A g$x$7477$1&dy4A))))))
   (g$rewriter$7471$1&dy4A
     g$rewriter$7516$1&dy4A
     (case-lambda
       ((g$quote-hack?$7486$1&dy4A)
        (letrec* ((g$f$7487$1&dy4A
                    (case-lambda
                      ((g$x$7488$1&dy4A)
                       (if (pair? g$x$7488$1&dy4A)
                         ((case-lambda
                            ((g$t$7489$1&dy4A)
                             (if (g$memv$5717$1&dy4A g$t$7489$1&dy4A '(quote))
                               (if (if g$quote-hack?$7486$1&dy4A
                                     (begin
                                       '#f
                                       (g$mutable?$7470$1&dy4A
                                         (g$cadr$5886$1&dy4A g$x$7488$1&dy4A)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7490$1&dy4A)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7490$1&dy4A
                                         (g$cadr$5886$1&dy4A g$x$7488$1&dy4A))
                                       g$g$7490$1&dy4A)))
                                  (gensym))
                                 g$x$7488$1&dy4A)
                               (if (g$memv$5717$1&dy4A
                                     g$t$7489$1&dy4A
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$7491$1&dy4A)
                                           (cons
                                             (car g$x$7491$1&dy4A)
                                             (map g$f$7487$1&dy4A
                                                  (cdr g$x$7491$1&dy4A)))))
                                        (cdr g$x$7488$1&dy4A)))
                                 (if (g$memv$5717$1&dy4A
                                       g$t$7489$1&dy4A
                                       '(lambda))
                                   (g$cons*$5724$1&dy4A
                                     'lambda
                                     (g$cadr$5886$1&dy4A g$x$7488$1&dy4A)
                                     (map g$f$7487$1&dy4A
                                          (g$cddr$5888$1&dy4A g$x$7488$1&dy4A)))
                                   (if (g$memv$5717$1&dy4A
                                         g$t$7489$1&dy4A
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$7492$1&dy4A
                                           g$body*$7493$1&dy4A)
                                         ((case-lambda
                                            ((g$lhs*$7494$1&dy4A
                                               g$rhs*$7495$1&dy4A)
                                             (g$cons*$5724$1&dy4A
                                               'letrec
                                               (map list
                                                    g$lhs*$7494$1&dy4A
                                                    (map g$f$7487$1&dy4A
                                                         g$rhs*$7495$1&dy4A))
                                               (map g$f$7487$1&dy4A
                                                    g$body*$7493$1&dy4A))))
                                          (map car g$bindings$7492$1&dy4A)
                                          (map g$cadr$5886$1&dy4A
                                               g$bindings$7492$1&dy4A))))
                                      (g$cadr$5886$1&dy4A g$x$7488$1&dy4A)
                                      (g$cddr$5888$1&dy4A g$x$7488$1&dy4A))
                                     (if (g$memv$5717$1&dy4A
                                           g$t$7489$1&dy4A
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$7496$1&dy4A
                                             g$body*$7497$1&dy4A)
                                           ((case-lambda
                                              ((g$lhs*$7498$1&dy4A
                                                 g$rhs*$7499$1&dy4A)
                                               (g$cons*$5724$1&dy4A
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$7498$1&dy4A
                                                      (map g$f$7487$1&dy4A
                                                           g$rhs*$7499$1&dy4A))
                                                 (map g$f$7487$1&dy4A
                                                      g$body*$7497$1&dy4A))))
                                            (map car g$bindings$7496$1&dy4A)
                                            (map g$cadr$5886$1&dy4A
                                                 g$bindings$7496$1&dy4A))))
                                        (g$cadr$5886$1&dy4A g$x$7488$1&dy4A)
                                        (g$cddr$5888$1&dy4A g$x$7488$1&dy4A))
                                       (if (g$memv$5717$1&dy4A
                                             g$t$7489$1&dy4A
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$7500$1&dy4A
                                               g$x$7501$1&dy4A)
                                             ((case-lambda
                                                ((g$bindings$7502$1&dy4A
                                                   g$body*$7503$1&dy4A)
                                                 ((case-lambda
                                                    ((g$lhs*$7504$1&dy4A
                                                       g$lhs**$7505$1&dy4A
                                                       g$rhs*$7506$1&dy4A)
                                                     (g$cons*$5724$1&dy4A
                                                       'library-letrec*
                                                       g$name$7500$1&dy4A
                                                       (map list
                                                            g$lhs*$7504$1&dy4A
                                                            g$lhs**$7505$1&dy4A
                                                            (map g$f$7487$1&dy4A
                                                                 g$rhs*$7506$1&dy4A))
                                                       (map g$f$7487$1&dy4A
                                                            g$body*$7503$1&dy4A))))
                                                  (map car
                                                       g$bindings$7502$1&dy4A)
                                                  (map g$cadr$5886$1&dy4A
                                                       g$bindings$7502$1&dy4A)
                                                  (map g$caddr$5892$1&dy4A
                                                       g$bindings$7502$1&dy4A))))
                                              (g$cadr$5886$1&dy4A
                                                g$x$7501$1&dy4A)
                                              (g$cddr$5888$1&dy4A
                                                g$x$7501$1&dy4A))))
                                          (g$cadr$5886$1&dy4A g$x$7488$1&dy4A)
                                          (cdr g$x$7488$1&dy4A))
                                         (if (g$memv$5717$1&dy4A
                                               g$t$7489$1&dy4A
                                               '(begin))
                                           (cons
                                             'begin
                                             (map g$f$7487$1&dy4A
                                                  (cdr g$x$7488$1&dy4A)))
                                           (if (g$memv$5717$1&dy4A
                                                 g$t$7489$1&dy4A
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5886$1&dy4A
                                                 g$x$7488$1&dy4A)
                                               (g$f$7487$1&dy4A
                                                 (g$caddr$5892$1&dy4A
                                                   g$x$7488$1&dy4A)))
                                             (if (g$memv$5717$1&dy4A
                                                   g$t$7489$1&dy4A
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$7507$1&dy4A)
                                                   ((case-lambda
                                                      ((g$t$7508$1&dy4A)
                                                       (if g$t$7508$1&dy4A
                                                         ((case-lambda
                                                            ((g$loc$7509$1&dy4A)
                                                             g$loc$7509$1&dy4A))
                                                          g$t$7508$1&dy4A)
                                                         g$op$7507$1&dy4A)))
                                                    ((g$current-primitive-locations$7469$1&dy4A)
                                                     g$op$7507$1&dy4A))))
                                                (g$cadr$5886$1&dy4A
                                                  g$x$7488$1&dy4A))
                                               (if (g$memv$5717$1&dy4A
                                                     g$t$7489$1&dy4A
                                                     '(define))
                                                 g$x$7488$1&dy4A
                                                 (if (list? g$x$7488$1&dy4A)
                                                   (map g$f$7487$1&dy4A
                                                        g$x$7488$1&dy4A)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7488$1&dy4A
                                                     (list?
                                                       g$x$7488$1&dy4A)))))))))))))))
                          (car g$x$7488$1&dy4A))
                         g$x$7488$1&dy4A)))))
          g$f$7487$1&dy4A))))
   (g$expanded->core$7472$1&dy4A
     g$expanded->core$7517$1&dy4A
     (case-lambda
       ((g$x$7510$1&dy4A) ((g$rewriter$7471$1&dy4A '#t) g$x$7510$1&dy4A))))
   (g$compile-core-expr$7473$1&dy4A
     g$compile-core-expr$7518$1&dy4A
     (case-lambda
       ((g$x$7511$1&dy4A) ((g$rewriter$7471$1&dy4A '#f) g$x$7511$1&dy4A))))
   (g$compile-core-expr-to-port$7474$1&dy4A
     g$compile-core-expr-to-port$7519$1&dy4A
     (case-lambda
       ((g$x$7512$1&dy4A g$p$7513$1&dy4A)
        (g$pretty-print$7468$1&dy4A
          ((g$rewriter$7471$1&dy4A '#f) g$x$7512$1&dy4A)
          g$p$7513$1&dy4A)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7558$1&dy4A
     g$make-collection$7753$1&dy4A
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7619$1&dy4A)
            (letrec* ((g$set-cons$7620$1&dy4A
                        (case-lambda
                          ((g$x$7622$1&dy4A g$ls$7623$1&dy4A)
                           (if (g$memq$5716$1&dy4A
                                 g$x$7622$1&dy4A
                                 g$ls$7623$1&dy4A)
                             g$ls$7623$1&dy4A
                             (cons g$x$7622$1&dy4A g$ls$7623$1&dy4A))))))
              (case-lambda
                (() g$set$7619$1&dy4A)
                ((g$x$7621$1&dy4A)
                 (set! g$set$7619$1&dy4A
                   (g$set-cons$7620$1&dy4A
                     g$x$7621$1&dy4A
                     g$set$7619$1&dy4A)))))))
         '()))))
   (g$current-library-collection$7559$1&dy4A
     g$current-library-collection$7754$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (g$make-collection$7558$1&dy4A)
       (case-lambda
         ((g$x$7624$1&dy4A)
          (begin
            (if (not (procedure? g$x$7624$1&dy4A))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7624$1&dy4A)
              (void))
            g$x$7624$1&dy4A)))))
   (g$8648$7560$1&dy4A
     g$8648$7755$1&dy4A
     (make-record-type-descriptor
       'library
       '#f
       'g$8651$1&dy4A
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8650$7561$1&dy4A g$8650$7756$1&dy4A '#f)
   (g$8649$7562$1&dy4A
     g$8649$7757$1&dy4A
     (make-record-constructor-descriptor
       g$8648$7560$1&dy4A
       '#f
       g$8650$7561$1&dy4A))
   (g$library?$7563$1&dy4A
     g$library?$7758$1&dy4A
     (record-predicate g$8648$7560$1&dy4A))
   (g$make-library$7564$1&dy4A
     g$make-library$7759$1&dy4A
     (record-constructor g$8649$7562$1&dy4A))
   (g$library-id$7565$1&dy4A
     g$library-id$7760$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '0))
   (g$library-name$7566$1&dy4A
     g$library-name$7761$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '1))
   (g$library-version$7567$1&dy4A
     g$library-version$7762$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '2))
   (g$library-imp*$7568$1&dy4A
     g$library-imp*$7763$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '3))
   (g$library-vis*$7569$1&dy4A
     g$library-vis*$7764$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '4))
   (g$library-inv*$7570$1&dy4A
     g$library-inv*$7765$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '5))
   (g$library-subst$7571$1&dy4A
     g$library-subst$7766$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '6))
   (g$library-env$7572$1&dy4A
     g$library-env$7767$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '7))
   (g$library-visit-state$7573$1&dy4A
     g$library-visit-state$7768$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '8))
   (g$library-invoke-state$7574$1&dy4A
     g$library-invoke-state$7769$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '9))
   (g$library-visit-code$7575$1&dy4A
     g$library-visit-code$7770$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '10))
   (g$library-invoke-code$7576$1&dy4A
     g$library-invoke-code$7771$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '11))
   (g$library-visible?$7577$1&dy4A
     g$library-visible?$7772$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '12))
   (g$library-source-file-name$7578$1&dy4A
     g$library-source-file-name$7773$1&dy4A
     (record-accessor g$8648$7560$1&dy4A '13))
   (g$set-library-id!$7579$1&dy4A
     g$set-library-id!$7774$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '0))
   (g$set-library-name!$7580$1&dy4A
     g$set-library-name!$7775$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '1))
   (g$set-library-version!$7581$1&dy4A
     g$set-library-version!$7776$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '2))
   (g$set-library-imp*!$7582$1&dy4A
     g$set-library-imp*!$7777$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '3))
   (g$set-library-vis*!$7583$1&dy4A
     g$set-library-vis*!$7778$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '4))
   (g$set-library-inv*!$7584$1&dy4A
     g$set-library-inv*!$7779$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '5))
   (g$set-library-subst!$7585$1&dy4A
     g$set-library-subst!$7780$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '6))
   (g$set-library-env!$7586$1&dy4A
     g$set-library-env!$7781$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '7))
   (g$set-library-visit-state!$7587$1&dy4A
     g$set-library-visit-state!$7782$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '8))
   (g$set-library-invoke-state!$7588$1&dy4A
     g$set-library-invoke-state!$7783$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '9))
   (g$set-library-visit-code!$7589$1&dy4A
     g$set-library-visit-code!$7784$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '10))
   (g$set-library-invoke-code!$7590$1&dy4A
     g$set-library-invoke-code!$7785$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '11))
   (g$set-library-visible?!$7591$1&dy4A
     g$set-library-visible?!$7786$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '12))
   (g$set-library-source-file-name!$7592$1&dy4A
     g$set-library-source-file-name!$7787$1&dy4A
     (record-mutator g$8648$7560$1&dy4A '13))
   (g$rp$7593$1&dy4A
     g$rp$7788$1&dy4A
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7625$1&dy4A g$p$7626$1&dy4A g$wr$7627$1&dy4A)
          (begin
            (if (not (g$library?$7563$1&dy4A g$x$7625$1&dy4A))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$7167$1&dy4A
                '"#<library ~s>"
                (if (null? (g$library-version$7567$1&dy4A g$x$7625$1&dy4A))
                  (g$library-name$7566$1&dy4A g$x$7625$1&dy4A)
                  (append
                    (g$library-name$7566$1&dy4A g$x$7625$1&dy4A)
                    (list (g$library-version$7567$1&dy4A g$x$7625$1&dy4A)))))
              g$p$7626$1&dy4A))))))
   (g$find-dependencies$7594$1&dy4A
     g$find-dependencies$7789$1&dy4A
     (case-lambda
       ((g$ls$7628$1&dy4A)
        (if (null? g$ls$7628$1&dy4A)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7595$1&dy4A
     g$find-library-by$7790$1&dy4A
     (case-lambda
       ((g$pred$7629$1&dy4A)
        ((letrec ((g$f$7630$1&dy4A
                    (case-lambda
                      ((g$ls$7631$1&dy4A)
                       (if (null? g$ls$7631$1&dy4A)
                         '#f
                         (if (g$pred$7629$1&dy4A (car g$ls$7631$1&dy4A))
                           (car g$ls$7631$1&dy4A)
                           (g$f$7630$1&dy4A (cdr g$ls$7631$1&dy4A))))))))
           g$f$7630$1&dy4A)
         ((g$current-library-collection$7559$1&dy4A))))))
   (g$library-path$7596$1&dy4A
     g$library-path$7791$1&dy4A
     (g$make-parameter$7271$1&dy4A
       '(".")
       (case-lambda
         ((g$x$7632$1&dy4A)
          (if (if (list? g$x$7632$1&dy4A)
                (begin '#f (g$for-all$5722$1&dy4A string? g$x$7632$1&dy4A))
                '#f)
            (map (case-lambda ((g$x$7633$1&dy4A) g$x$7633$1&dy4A))
                 g$x$7632$1&dy4A)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7632$1&dy4A))))))
   (g$library-extensions$7597$1&dy4A
     g$library-extensions$7792$1&dy4A
     (g$make-parameter$7271$1&dy4A
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7634$1&dy4A)
          (if (if (list? g$x$7634$1&dy4A)
                (begin '#f (g$for-all$5722$1&dy4A string? g$x$7634$1&dy4A))
                '#f)
            (map (case-lambda ((g$x$7635$1&dy4A) g$x$7635$1&dy4A))
                 g$x$7634$1&dy4A)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7634$1&dy4A))))))
   (g$library-name->file-name$7598$1&dy4A
     g$library-name->file-name$7793$1&dy4A
     (case-lambda
       ((g$x$7636$1&dy4A)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6959$1&dy4A)))
          (case-lambda
            ((g$p$7639$1&dy4A g$extract$7640$1&dy4A)
             ((case-lambda
                ((g$extract$7641$1&dy4A g$p$7642$1&dy4A)
                 (letrec* ((g$display-hex$7643$1&dy4A
                             (case-lambda
                               ((g$n$7651$1&dy4A)
                                (if (<= '0 g$n$7651$1&dy4A '9)
                                  (display g$n$7651$1&dy4A g$p$7642$1&dy4A)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7651$1&dy4A '10)))
                                    g$p$7642$1&dy4A))))))
                   (begin
                     ((letrec ((g$f$7644$1&dy4A
                                 (case-lambda
                                   ((g$ls$7645$1&dy4A)
                                    (if (not (null? g$ls$7645$1&dy4A))
                                      (begin
                                        (display '"/" g$p$7642$1&dy4A)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7646$1&dy4A)
                                             (if ((case-lambda
                                                    ((g$t$7647$1&dy4A)
                                                     (if g$t$7647$1&dy4A
                                                       g$t$7647$1&dy4A
                                                       ((case-lambda
                                                          ((g$t$7648$1&dy4A)
                                                           (if g$t$7648$1&dy4A
                                                             g$t$7648$1&dy4A
                                                             ((case-lambda
                                                                ((g$t$7649$1&dy4A)
                                                                 (if g$t$7649$1&dy4A
                                                                   g$t$7649$1&dy4A
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5717$1&dy4A
                                                                       g$c$7646$1&dy4A
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5923$1&dy4A
                                                                '#\0
                                                                g$c$7646$1&dy4A
                                                                '#\9)))))
                                                        (g$char<=?$5923$1&dy4A
                                                          '#\A
                                                          g$c$7646$1&dy4A
                                                          '#\Z)))))
                                                  (g$char<=?$5923$1&dy4A
                                                    '#\a
                                                    g$c$7646$1&dy4A
                                                    '#\z))
                                               (display
                                                 g$c$7646$1&dy4A
                                                 g$p$7642$1&dy4A)
                                               (begin
                                                 (display '"%" g$p$7642$1&dy4A)
                                                 ((case-lambda
                                                    ((g$n$7650$1&dy4A)
                                                     (begin
                                                       (g$display-hex$7643$1&dy4A
                                                         (g$quotient$6538$1&dy4A
                                                           g$n$7650$1&dy4A
                                                           '16))
                                                       (g$display-hex$7643$1&dy4A
                                                         (g$remainder$6539$1&dy4A
                                                           g$n$7650$1&dy4A
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7646$1&dy4A))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7645$1&dy4A))))
                                        (g$f$7644$1&dy4A
                                          (cdr g$ls$7645$1&dy4A)))
                                      (void))))))
                        g$f$7644$1&dy4A)
                      g$x$7636$1&dy4A)
                     (g$extract$7641$1&dy4A)))))
              g$extract$7640$1&dy4A
              g$p$7639$1&dy4A)))))))
   (g$file-locator$7599$1&dy4A
     g$file-locator$7794$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (case-lambda
         ((g$x$7652$1&dy4A)
          ((case-lambda
             ((g$str$7653$1&dy4A)
              ((letrec ((g$f$7654$1&dy4A
                          (case-lambda
                            ((g$ls$7655$1&dy4A
                               g$exts$7656$1&dy4A
                               g$failed-list$7657$1&dy4A)
                             (if (null? g$ls$7655$1&dy4A)
                               (g$file-locator-resolution-error$7269$1&dy4A
                                 g$x$7652$1&dy4A
                                 (reverse g$failed-list$7657$1&dy4A))
                               (if (null? g$exts$7656$1&dy4A)
                                 (g$f$7654$1&dy4A
                                   (cdr g$ls$7655$1&dy4A)
                                   (g$library-extensions$7597$1&dy4A)
                                   g$failed-list$7657$1&dy4A)
                                 ((case-lambda
                                    ((g$name$7658$1&dy4A)
                                     (if (g$file-exists?$6179$1&dy4A
                                           g$name$7658$1&dy4A)
                                       g$name$7658$1&dy4A
                                       (g$f$7654$1&dy4A
                                         g$ls$7655$1&dy4A
                                         (cdr g$exts$7656$1&dy4A)
                                         (cons
                                           g$name$7658$1&dy4A
                                           g$failed-list$7657$1&dy4A)))))
                                  (string-append
                                    (car g$ls$7655$1&dy4A)
                                    g$str$7653$1&dy4A
                                    (car g$exts$7656$1&dy4A)))))))))
                 g$f$7654$1&dy4A)
               (g$library-path$7596$1&dy4A)
               (g$library-extensions$7597$1&dy4A)
               '())))
           (g$library-name->file-name$7598$1&dy4A g$x$7652$1&dy4A))))
       (case-lambda
         ((g$f$7659$1&dy4A)
          (if (procedure? g$f$7659$1&dy4A)
            g$f$7659$1&dy4A
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7659$1&dy4A))))))
   (g$serialize-all$7600$1&dy4A
     g$serialize-all$7795$1&dy4A
     (case-lambda
       ((g$serialize$7660$1&dy4A g$compile$7661$1&dy4A)
        (letrec* ((g$library-desc$7662$1&dy4A
                    (case-lambda
                      ((g$x$7664$1&dy4A)
                       (list
                         (g$library-id$7565$1&dy4A g$x$7664$1&dy4A)
                         (g$library-name$7566$1&dy4A g$x$7664$1&dy4A))))))
          (for-each
            (case-lambda
              ((g$x$7663$1&dy4A)
               (if (g$library-source-file-name$7578$1&dy4A g$x$7663$1&dy4A)
                 (g$serialize$7660$1&dy4A
                   (g$library-source-file-name$7578$1&dy4A g$x$7663$1&dy4A)
                   (list
                     (g$library-id$7565$1&dy4A g$x$7663$1&dy4A)
                     (g$library-name$7566$1&dy4A g$x$7663$1&dy4A)
                     (g$library-version$7567$1&dy4A g$x$7663$1&dy4A)
                     (map g$library-desc$7662$1&dy4A
                          (g$library-imp*$7568$1&dy4A g$x$7663$1&dy4A))
                     (map g$library-desc$7662$1&dy4A
                          (g$library-vis*$7569$1&dy4A g$x$7663$1&dy4A))
                     (map g$library-desc$7662$1&dy4A
                          (g$library-inv*$7570$1&dy4A g$x$7663$1&dy4A))
                     (g$library-subst$7571$1&dy4A g$x$7663$1&dy4A)
                     (g$library-env$7572$1&dy4A g$x$7663$1&dy4A)
                     (g$compile$7661$1&dy4A
                       (g$library-visit-code$7575$1&dy4A g$x$7663$1&dy4A))
                     (g$compile$7661$1&dy4A
                       (g$library-invoke-code$7576$1&dy4A g$x$7663$1&dy4A))
                     (g$library-visible?$7577$1&dy4A g$x$7663$1&dy4A)))
                 (void))))
            ((g$current-library-collection$7559$1&dy4A)))))))
   (g$current-precompiled-library-loader$7601$1&dy4A
     g$current-precompiled-library-loader$7796$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (case-lambda ((g$filename$7665$1&dy4A g$sk$7666$1&dy4A) '#f))))
   (g$try-load-from-file$7602$1&dy4A
     g$try-load-from-file$7797$1&dy4A
     (case-lambda
       ((g$filename$7667$1&dy4A)
        ((g$current-precompiled-library-loader$7601$1&dy4A)
         g$filename$7667$1&dy4A
         (case-lambda
           ((g$id$7668$1&dy4A
              g$name$7669$1&dy4A
              g$ver$7670$1&dy4A
              g$imp*$7671$1&dy4A
              g$vis*$7672$1&dy4A
              g$inv*$7673$1&dy4A
              g$exp-subst$7674$1&dy4A
              g$exp-env$7675$1&dy4A
              g$visit-proc$7676$1&dy4A
              g$invoke-proc$7677$1&dy4A
              g$visible?$7678$1&dy4A)
            ((letrec ((g$f$7679$1&dy4A
                        (case-lambda
                          ((g$deps$7680$1&dy4A)
                           (if (null? g$deps$7680$1&dy4A)
                             (begin
                               (g$install-library$7612$1&dy4A
                                 g$id$7668$1&dy4A
                                 g$name$7669$1&dy4A
                                 g$ver$7670$1&dy4A
                                 g$imp*$7671$1&dy4A
                                 g$vis*$7672$1&dy4A
                                 g$inv*$7673$1&dy4A
                                 g$exp-subst$7674$1&dy4A
                                 g$exp-env$7675$1&dy4A
                                 g$visit-proc$7676$1&dy4A
                                 g$invoke-proc$7677$1&dy4A
                                 '#f
                                 '#f
                                 g$visible?$7678$1&dy4A
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7681$1&dy4A)
                                 ((case-lambda
                                    ((g$label$7682$1&dy4A g$dname$7683$1&dy4A)
                                     ((case-lambda
                                        ((g$l$7684$1&dy4A)
                                         (if (if (g$library?$7563$1&dy4A
                                                   g$l$7684$1&dy4A)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7682$1&dy4A
                                                      (g$library-id$7565$1&dy4A
                                                        g$l$7684$1&dy4A)))
                                               '#f)
                                           (g$f$7679$1&dy4A
                                             (cdr g$deps$7680$1&dy4A))
                                           (begin
                                             (g$library-version-mismatch-warning$7268$1&dy4A
                                               g$name$7669$1&dy4A
                                               g$dname$7683$1&dy4A
                                               g$filename$7667$1&dy4A)
                                             '#f))))
                                      (g$find-library-by-name$7607$1&dy4A
                                        g$dname$7683$1&dy4A))))
                                  (car g$d$7681$1&dy4A)
                                  (g$cadr$5886$1&dy4A g$d$7681$1&dy4A))))
                              (car g$deps$7680$1&dy4A)))))))
               g$f$7679$1&dy4A)
             (append g$imp*$7671$1&dy4A g$vis*$7672$1&dy4A g$inv*$7673$1&dy4A)))
           (g$others$7685$1&dy4A '#f))))))
   (g$library-loader$7603$1&dy4A
     g$library-loader$7798$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (case-lambda
         ((g$x$7686$1&dy4A)
          ((case-lambda
             ((g$file-name$7687$1&dy4A)
              (if (not g$file-name$7687$1&dy4A)
                (assertion-violation '#f '"cannot file library" g$x$7686$1&dy4A)
                ((case-lambda
                   ((g$t$7688$1&dy4A)
                    (if g$t$7688$1&dy4A
                      g$t$7688$1&dy4A
                      (begin
                        '#f
                        ((g$current-library-expander$7604$1&dy4A)
                         (g$read-library-source-file$7270$1&dy4A
                           g$file-name$7687$1&dy4A)
                         g$file-name$7687$1&dy4A
                         (case-lambda
                           ((g$name$7689$1&dy4A)
                            (if (not (equal?
                                       g$name$7689$1&dy4A
                                       g$x$7686$1&dy4A))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6959$1&dy4A)))
                                  (case-lambda
                                    ((g$p$7692$1&dy4A g$e$7693$1&dy4A)
                                     ((case-lambda
                                        ((g$e$7694$1&dy4A g$p$7695$1&dy4A)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7695$1&dy4A)
                                           (write
                                             g$x$7686$1&dy4A
                                             g$p$7695$1&dy4A)
                                           (display
                                             '" in file "
                                             g$p$7695$1&dy4A)
                                           (display
                                             g$file-name$7687$1&dy4A
                                             g$p$7695$1&dy4A)
                                           (display '", found " g$p$7695$1&dy4A)
                                           (write
                                             g$name$7689$1&dy4A
                                             g$p$7695$1&dy4A)
                                           (display '" instead" g$p$7695$1&dy4A)
                                           (g$e$7694$1&dy4A))))
                                      g$e$7693$1&dy4A
                                      g$p$7692$1&dy4A)))))
                              (void)))))))))
                 (g$try-load-from-file$7602$1&dy4A g$file-name$7687$1&dy4A)))))
           ((g$file-locator$7599$1&dy4A) g$x$7686$1&dy4A))))
       (case-lambda
         ((g$f$7696$1&dy4A)
          (if (procedure? g$f$7696$1&dy4A)
            g$f$7696$1&dy4A
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7696$1&dy4A))))))
   (g$current-library-expander$7604$1&dy4A
     g$current-library-expander$7799$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (case-lambda
         ((g$x$7697$1&dy4A)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7698$1&dy4A)
          (if (procedure? g$f$7698$1&dy4A)
            g$f$7698$1&dy4A
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7698$1&dy4A))))))
   (g$external-pending-libraries$7605$1&dy4A
     g$external-pending-libraries$7800$1&dy4A
     (g$make-parameter$7271$1&dy4A '()))
   (g$find-external-library$7606$1&dy4A
     g$find-external-library$7801$1&dy4A
     (case-lambda
       ((g$name$7699$1&dy4A)
        (begin
          (if (g$member$5718$1&dy4A
                g$name$7699$1&dy4A
                (g$external-pending-libraries$7605$1&dy4A))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7699$1&dy4A)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7702$1&dy4A
                g$external-pending-libraries$7703$1&dy4A)
              ((case-lambda
                 ((g$swap$7704$1&dy4A)
                  (dynamic-wind
                    g$swap$7704$1&dy4A
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7603$1&dy4A) g$name$7699$1&dy4A)
                         ((case-lambda
                            ((g$t$7705$1&dy4A)
                             (if g$t$7705$1&dy4A
                               g$t$7705$1&dy4A
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7699$1&dy4A)))))
                          (g$find-library-by$7595$1&dy4A
                            (case-lambda
                              ((g$x$7706$1&dy4A)
                               (equal?
                                 (g$library-name$7566$1&dy4A g$x$7706$1&dy4A)
                                 g$name$7699$1&dy4A))))))))
                    g$swap$7704$1&dy4A)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7707$1&dy4A)
                      (begin
                        (g$external-pending-libraries$7702$1&dy4A
                          g$external-pending-libraries$7703$1&dy4A)
                        (set! g$external-pending-libraries$7703$1&dy4A
                          g$t$7707$1&dy4A))))
                   (g$external-pending-libraries$7702$1&dy4A)))))))
           g$external-pending-libraries$7605$1&dy4A
           (cons
             g$name$7699$1&dy4A
             (g$external-pending-libraries$7605$1&dy4A)))))))
   (g$find-library-by-name$7607$1&dy4A
     g$find-library-by-name$7802$1&dy4A
     (case-lambda
       ((g$name$7708$1&dy4A)
        ((case-lambda
           ((g$t$7709$1&dy4A)
            (if g$t$7709$1&dy4A
              g$t$7709$1&dy4A
              (begin
                '#f
                (g$find-external-library$7606$1&dy4A g$name$7708$1&dy4A)))))
         (g$find-library-by$7595$1&dy4A
           (case-lambda
             ((g$x$7710$1&dy4A)
              (equal?
                (g$library-name$7566$1&dy4A g$x$7710$1&dy4A)
                g$name$7708$1&dy4A))))))))
   (g$library-exists?$7608$1&dy4A
     g$library-exists?$7803$1&dy4A
     (case-lambda
       ((g$name$7711$1&dy4A)
        (if (g$find-library-by$7595$1&dy4A
              (case-lambda
                ((g$x$7712$1&dy4A)
                 (equal?
                   (g$library-name$7566$1&dy4A g$x$7712$1&dy4A)
                   g$name$7711$1&dy4A))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7609$1&dy4A
     g$find-library-by-spec/die$7804$1&dy4A
     (case-lambda
       ((g$spec$7713$1&dy4A)
        ((case-lambda
           ((g$id$7714$1&dy4A)
            ((case-lambda
               ((g$t$7715$1&dy4A)
                (if g$t$7715$1&dy4A
                  g$t$7715$1&dy4A
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7713$1&dy4A)))))
             (g$find-library-by$7595$1&dy4A
               (case-lambda
                 ((g$x$7716$1&dy4A)
                  (eq? g$id$7714$1&dy4A
                       (g$library-id$7565$1&dy4A g$x$7716$1&dy4A))))))))
         (car g$spec$7713$1&dy4A)))))
   (g$label->binding-table$7610$1&dy4A
     g$label->binding-table$7805$1&dy4A
     (g$make-eq-hashtable$6160$1&dy4A))
   (g$install-library-record$7611$1&dy4A
     g$install-library-record$7806$1&dy4A
     (case-lambda
       ((g$lib$7717$1&dy4A)
        (begin
          ((case-lambda
             ((g$exp-env$7718$1&dy4A)
              (for-each
                (case-lambda
                  ((g$x$7719$1&dy4A)
                   ((case-lambda
                      ((g$label$7720$1&dy4A g$binding$7721$1&dy4A)
                       ((case-lambda
                          ((g$binding$7722$1&dy4A)
                           (g$hashtable-set!$6164$1&dy4A
                             g$label->binding-table$7610$1&dy4A
                             g$label$7720$1&dy4A
                             g$binding$7722$1&dy4A)))
                        ((case-lambda
                           ((g$t$7723$1&dy4A)
                            (if (g$memv$5717$1&dy4A g$t$7723$1&dy4A '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7717$1&dy4A
                                  (cdr g$binding$7721$1&dy4A)))
                              (if (g$memv$5717$1&dy4A
                                    g$t$7723$1&dy4A
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7717$1&dy4A
                                    (cdr g$binding$7721$1&dy4A)))
                                (if (g$memv$5717$1&dy4A
                                      g$t$7723$1&dy4A
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7717$1&dy4A
                                      (cdr g$binding$7721$1&dy4A)))
                                  g$binding$7721$1&dy4A)))))
                         (car g$binding$7721$1&dy4A)))))
                    (car g$x$7719$1&dy4A)
                    (cdr g$x$7719$1&dy4A))))
                g$exp-env$7718$1&dy4A)))
           (g$library-env$7572$1&dy4A g$lib$7717$1&dy4A))
          ((g$current-library-collection$7559$1&dy4A) g$lib$7717$1&dy4A)))))
   (g$install-library$7612$1&dy4A
     g$install-library$7807$1&dy4A
     (case-lambda
       ((g$id$7724$1&dy4A
          g$name$7725$1&dy4A
          g$ver$7726$1&dy4A
          g$imp*$7727$1&dy4A
          g$vis*$7728$1&dy4A
          g$inv*$7729$1&dy4A
          g$exp-subst$7730$1&dy4A
          g$exp-env$7731$1&dy4A
          g$visit-proc$7732$1&dy4A
          g$invoke-proc$7733$1&dy4A
          g$visit-code$7734$1&dy4A
          g$invoke-code$7735$1&dy4A
          g$visible?$7736$1&dy4A
          g$source-file-name$7737$1&dy4A)
        ((case-lambda
           ((g$imp-lib*$7738$1&dy4A
              g$vis-lib*$7739$1&dy4A
              g$inv-lib*$7740$1&dy4A)
            (begin
              (if (not (if (symbol? g$id$7724$1&dy4A)
                         (if (list? g$name$7725$1&dy4A)
                           (begin '#f (list? g$ver$7726$1&dy4A))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7724$1&dy4A
                  g$name$7725$1&dy4A
                  g$ver$7726$1&dy4A)
                (void))
              (if (g$library-exists?$7608$1&dy4A g$name$7725$1&dy4A)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7725$1&dy4A)
                (void))
              ((case-lambda
                 ((g$lib$7741$1&dy4A)
                  (g$install-library-record$7611$1&dy4A g$lib$7741$1&dy4A)))
               (g$make-library$7564$1&dy4A
                 g$id$7724$1&dy4A
                 g$name$7725$1&dy4A
                 g$ver$7726$1&dy4A
                 g$imp-lib*$7738$1&dy4A
                 g$vis-lib*$7739$1&dy4A
                 g$inv-lib*$7740$1&dy4A
                 g$exp-subst$7730$1&dy4A
                 g$exp-env$7731$1&dy4A
                 g$visit-proc$7732$1&dy4A
                 g$invoke-proc$7733$1&dy4A
                 g$visit-code$7734$1&dy4A
                 g$invoke-code$7735$1&dy4A
                 g$visible?$7736$1&dy4A
                 g$source-file-name$7737$1&dy4A)))))
         (map g$find-library-by-spec/die$7609$1&dy4A g$imp*$7727$1&dy4A)
         (map g$find-library-by-spec/die$7609$1&dy4A g$vis*$7728$1&dy4A)
         (map g$find-library-by-spec/die$7609$1&dy4A g$inv*$7729$1&dy4A)))))
   (g$imported-label->binding$7613$1&dy4A
     g$imported-label->binding$7808$1&dy4A
     (case-lambda
       ((g$lab$7742$1&dy4A)
        (g$hashtable-ref$6163$1&dy4A
          g$label->binding-table$7610$1&dy4A
          g$lab$7742$1&dy4A
          '#f))))
   (g$invoke-library$7614$1&dy4A
     g$invoke-library$7809$1&dy4A
     (case-lambda
       ((g$lib$7743$1&dy4A)
        ((case-lambda
           ((g$invoke$7744$1&dy4A)
            (if (procedure? g$invoke$7744$1&dy4A)
              (begin
                (g$set-library-invoke-state!$7588$1&dy4A
                  g$lib$7743$1&dy4A
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7743$1&dy4A))))
                (for-each
                  g$invoke-library$7614$1&dy4A
                  (g$library-inv*$7570$1&dy4A g$lib$7743$1&dy4A))
                (g$set-library-invoke-state!$7588$1&dy4A
                  g$lib$7743$1&dy4A
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7743$1&dy4A))))
                (g$invoke$7744$1&dy4A)
                (g$set-library-invoke-state!$7588$1&dy4A g$lib$7743$1&dy4A '#t))
              (void))))
         (g$library-invoke-state$7574$1&dy4A g$lib$7743$1&dy4A)))))
   (g$visit-library$7615$1&dy4A
     g$visit-library$7810$1&dy4A
     (case-lambda
       ((g$lib$7745$1&dy4A)
        ((case-lambda
           ((g$visit$7746$1&dy4A)
            (if (procedure? g$visit$7746$1&dy4A)
              (begin
                (g$set-library-visit-state!$7587$1&dy4A
                  g$lib$7745$1&dy4A
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7745$1&dy4A))))
                (for-each
                  g$invoke-library$7614$1&dy4A
                  (g$library-vis*$7569$1&dy4A g$lib$7745$1&dy4A))
                (g$set-library-visit-state!$7587$1&dy4A
                  g$lib$7745$1&dy4A
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7745$1&dy4A))))
                (g$visit$7746$1&dy4A)
                (g$set-library-visit-state!$7587$1&dy4A g$lib$7745$1&dy4A '#t))
              (void))))
         (g$library-visit-state$7573$1&dy4A g$lib$7745$1&dy4A)))))
   (g$invoke-library-by-spec$7616$1&dy4A
     g$invoke-library-by-spec$7811$1&dy4A
     (case-lambda
       ((g$spec$7747$1&dy4A)
        (g$invoke-library$7614$1&dy4A
          (g$find-library-by-spec/die$7609$1&dy4A g$spec$7747$1&dy4A)))))
   (g$installed-libraries$7617$1&dy4A
     g$installed-libraries$7812$1&dy4A
     (case-lambda
       ((g$all?$7748$1&dy4A)
        ((letrec ((g$f$7749$1&dy4A
                    (case-lambda
                      ((g$ls$7750$1&dy4A)
                       (if (null? g$ls$7750$1&dy4A)
                         '()
                         (if ((case-lambda
                                ((g$t$7751$1&dy4A)
                                 (if g$t$7751$1&dy4A
                                   g$t$7751$1&dy4A
                                   (begin
                                     '#f
                                     (g$library-visible?$7577$1&dy4A
                                       (car g$ls$7750$1&dy4A))))))
                              g$all?$7748$1&dy4A)
                           (cons
                             (car g$ls$7750$1&dy4A)
                             (g$f$7749$1&dy4A (cdr g$ls$7750$1&dy4A)))
                           (g$f$7749$1&dy4A (cdr g$ls$7750$1&dy4A))))))))
           g$f$7749$1&dy4A)
         ((g$current-library-collection$7559$1&dy4A))))
       (() (g$installed-libraries$7617$1&dy4A '#f))))
   (g$library-spec$7618$1&dy4A
     g$library-spec$7813$1&dy4A
     (case-lambda
       ((g$x$7752$1&dy4A)
        (begin
          (if (not (g$library?$7563$1&dy4A g$x$7752$1&dy4A))
            (assertion-violation 'library-spec '"not a library" g$x$7752$1&dy4A)
            (void))
          (list
            (g$library-id$7565$1&dy4A g$x$7752$1&dy4A)
            (g$library-name$7566$1&dy4A g$x$7752$1&dy4A)
            (g$library-version$7567$1&dy4A g$x$7752$1&dy4A)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7814$1&dy4A
     g$build-global-define$7924$1&dy4A
     (case-lambda ((g$x$7895$1&dy4A) (g$build-void$7891$1&dy4A))))
   (g$build-lambda$7863$1&dy4A
     g$build-lambda$7925$1&dy4A
     (case-lambda
       ((g$ae$7896$1&dy4A g$vars$7897$1&dy4A g$exp$7898$1&dy4A)
        (list 'case-lambda (list g$vars$7897$1&dy4A g$exp$7898$1&dy4A)))))
   (g$build-case-lambda$7864$1&dy4A
     g$build-case-lambda$7926$1&dy4A
     (case-lambda
       ((g$ae$7899$1&dy4A g$vars*$7900$1&dy4A g$exp*$7901$1&dy4A)
        (cons 'case-lambda (map list g$vars*$7900$1&dy4A g$exp*$7901$1&dy4A)))))
   (g$build-let$7865$1&dy4A
     g$build-let$7927$1&dy4A
     (case-lambda
       ((g$ae$7902$1&dy4A
          g$lhs*$7903$1&dy4A
          g$rhs*$7904$1&dy4A
          g$body$7905$1&dy4A)
        (cons
          (g$build-lambda$7863$1&dy4A
            g$ae$7902$1&dy4A
            g$lhs*$7903$1&dy4A
            g$body$7905$1&dy4A)
          g$rhs*$7904$1&dy4A))))
   (g$build-sequence$7890$1&dy4A
     g$build-sequence$7928$1&dy4A
     (case-lambda
       ((g$ae$7906$1&dy4A g$exps$7907$1&dy4A)
        ((letrec ((g$loop$7908$1&dy4A
                    (case-lambda
                      ((g$exps$7909$1&dy4A)
                       (if (null? (cdr g$exps$7909$1&dy4A))
                         (car g$exps$7909$1&dy4A)
                         (if (equal?
                               (car g$exps$7909$1&dy4A)
                               (g$build-void$7891$1&dy4A))
                           (g$loop$7908$1&dy4A (cdr g$exps$7909$1&dy4A))
                           (cons 'begin g$exps$7909$1&dy4A)))))))
           g$loop$7908$1&dy4A)
         g$exps$7907$1&dy4A))))
   (g$build-void$7891$1&dy4A
     g$build-void$7929$1&dy4A
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7892$1&dy4A
     g$build-letrec$7930$1&dy4A
     (case-lambda
       ((g$ae$7910$1&dy4A
          g$vars$7911$1&dy4A
          g$val-exps$7912$1&dy4A
          g$body-exp$7913$1&dy4A)
        (if (null? g$vars$7911$1&dy4A)
          g$body-exp$7913$1&dy4A
          (list
            'letrec
            (map list g$vars$7911$1&dy4A g$val-exps$7912$1&dy4A)
            g$body-exp$7913$1&dy4A)))))
   (g$build-letrec*$7893$1&dy4A
     g$build-letrec*$7931$1&dy4A
     (case-lambda
       ((g$ae$7914$1&dy4A
          g$vars$7915$1&dy4A
          g$val-exps$7916$1&dy4A
          g$body-exp$7917$1&dy4A)
        (if (null? g$vars$7915$1&dy4A)
          g$body-exp$7917$1&dy4A
          (list
            'letrec*
            (map list g$vars$7915$1&dy4A g$val-exps$7916$1&dy4A)
            g$body-exp$7917$1&dy4A)))))
   (g$build-library-letrec*$7894$1&dy4A
     g$build-library-letrec*$7932$1&dy4A
     (case-lambda
       ((g$ae$7918$1&dy4A
          g$name$7919$1&dy4A
          g$vars$7920$1&dy4A
          g$locs$7921$1&dy4A
          g$val-exps$7922$1&dy4A
          g$body-exp$7923$1&dy4A)
        (list
          'library-letrec*
          g$name$7919$1&dy4A
          (map list
               g$vars$7920$1&dy4A
               g$locs$7921$1&dy4A
               g$val-exps$7922$1&dy4A)
          g$body-exp$7923$1&dy4A)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7933$1&dy4A
     g$set-cons$11617$1&dy4A
     (case-lambda
       ((g$x$8396$1&dy4A g$ls$8397$1&dy4A)
        (if (g$memq$5716$1&dy4A g$x$8396$1&dy4A g$ls$8397$1&dy4A)
          g$ls$8397$1&dy4A
          (cons g$x$8396$1&dy4A g$ls$8397$1&dy4A)))))
   (g$set-union$7934$1&dy4A
     g$set-union$11618$1&dy4A
     (case-lambda
       ((g$ls1$8398$1&dy4A g$ls2$8399$1&dy4A)
        (if (null? g$ls1$8398$1&dy4A)
          g$ls2$8399$1&dy4A
          (if (g$memq$5716$1&dy4A (car g$ls1$8398$1&dy4A) g$ls2$8399$1&dy4A)
            (g$set-union$7934$1&dy4A (cdr g$ls1$8398$1&dy4A) g$ls2$8399$1&dy4A)
            (cons
              (car g$ls1$8398$1&dy4A)
              (g$set-union$7934$1&dy4A
                (cdr g$ls1$8398$1&dy4A)
                g$ls2$8399$1&dy4A)))))))
   (g$top-mark*$7936$1&dy4A g$top-mark*$11619$1&dy4A '(top))
   (g$top-marked?$7937$1&dy4A
     g$top-marked?$11620$1&dy4A
     (case-lambda
       ((g$m*$8400$1&dy4A) (g$memq$5716$1&dy4A 'top g$m*$8400$1&dy4A))))
   (g$gen-lexical$7938$1&dy4A
     g$gen-lexical$11621$1&dy4A
     (case-lambda
       ((g$sym$8401$1&dy4A)
        (if (symbol? g$sym$8401$1&dy4A)
          (gensym g$sym$8401$1&dy4A)
          (if (g$stx?$7971$1&dy4A g$sym$8401$1&dy4A)
            (g$gen-lexical$7938$1&dy4A
              (g$id->sym$8000$1&dy4A g$sym$8401$1&dy4A))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8401$1&dy4A))))))
   (g$gen-global$7939$1&dy4A
     g$gen-global$11622$1&dy4A
     (case-lambda
       ((g$x$8402$1&dy4A) (g$gen-lexical$7938$1&dy4A g$x$8402$1&dy4A))))
   (g$gen-label$7940$1&dy4A
     g$gen-label$11623$1&dy4A
     (case-lambda ((g$_$8403$1&dy4A) (gensym))))
   (g$gen-top-level-label$7941$1&dy4A
     g$gen-top-level-label$11624$1&dy4A
     (case-lambda
       ((g$id$8404$1&dy4A g$rib$8405$1&dy4A)
        (letrec* ((g$find$8406$1&dy4A
                    (case-lambda
                      ((g$sym$8412$1&dy4A
                         g$mark*$8413$1&dy4A
                         g$sym*$8414$1&dy4A
                         g$mark**$8415$1&dy4A
                         g$label*$8416$1&dy4A)
                       (if (pair? g$sym*$8414$1&dy4A)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8412$1&dy4A
                                        (car g$sym*$8414$1&dy4A))
                                 (begin
                                   '#f
                                   (g$same-marks?$8001$1&dy4A
                                     g$mark*$8413$1&dy4A
                                     (car g$mark**$8415$1&dy4A)))
                                 '#f)
                             (car g$label*$8416$1&dy4A)
                             (g$find$8406$1&dy4A
                               g$sym$8412$1&dy4A
                               g$mark*$8413$1&dy4A
                               (cdr g$sym*$8414$1&dy4A)
                               (cdr g$mark**$8415$1&dy4A)
                               (cdr g$label*$8416$1&dy4A))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8407$1&dy4A g$mark*$8408$1&dy4A)
              ((case-lambda
                 ((g$sym*$8409$1&dy4A)
                  ((case-lambda
                     ((g$t$8410$1&dy4A)
                      (if g$t$8410$1&dy4A
                        ((case-lambda
                           ((g$label$8411$1&dy4A)
                            (if (g$imported-label->binding$7808$1&dy4A
                                  g$label$8411$1&dy4A)
                              (gensym)
                              g$label$8411$1&dy4A)))
                         g$t$8410$1&dy4A)
                        (gensym))))
                   (if (g$memq$5716$1&dy4A
                         g$sym$8407$1&dy4A
                         (g$rib-sym*$7949$1&dy4A g$rib$8405$1&dy4A))
                     (begin
                       '#f
                       (g$find$8406$1&dy4A
                         g$sym$8407$1&dy4A
                         g$mark*$8408$1&dy4A
                         g$sym*$8409$1&dy4A
                         (g$rib-mark**$7950$1&dy4A g$rib$8405$1&dy4A)
                         (g$rib-label*$7951$1&dy4A g$rib$8405$1&dy4A)))
                     '#f))))
               (g$rib-sym*$7949$1&dy4A g$rib$8405$1&dy4A))))
           (g$id->sym$8000$1&dy4A g$id$8404$1&dy4A)
           (g$stx-mark*$7974$1&dy4A g$id$8404$1&dy4A))))))
   (g$gen-define-label+loc$7942$1&dy4A
     g$gen-define-label+loc$11625$1&dy4A
     (case-lambda
       ((g$id$8417$1&dy4A g$rib$8418$1&dy4A)
        ((case-lambda
           ((g$t$8419$1&dy4A)
            (if g$t$8419$1&dy4A
              ((case-lambda
                 ((g$env$8420$1&dy4A)
                  ((case-lambda
                     ((g$label$8421$1&dy4A g$locs$8422$1&dy4A)
                      (values
                        g$label$8421$1&dy4A
                        ((case-lambda
                           ((g$t$8423$1&dy4A)
                            (if g$t$8423$1&dy4A
                              (cdr g$t$8423$1&dy4A)
                              ((case-lambda
                                 ((g$loc$8424$1&dy4A)
                                  (begin
                                    (g$set-interaction-env-locs!$8360$1&dy4A
                                      g$env$8420$1&dy4A
                                      (cons
                                        (cons
                                          g$label$8421$1&dy4A
                                          g$loc$8424$1&dy4A)
                                        g$locs$8422$1&dy4A))
                                    g$loc$8424$1&dy4A)))
                               (g$gen-lexical$7938$1&dy4A g$id$8417$1&dy4A)))))
                         (g$assq$5712$1&dy4A
                           g$label$8421$1&dy4A
                           g$locs$8422$1&dy4A)))))
                   (g$gen-top-level-label$7941$1&dy4A
                     g$id$8417$1&dy4A
                     g$rib$8418$1&dy4A)
                   (g$interaction-env-locs$8357$1&dy4A g$env$8420$1&dy4A))))
               g$t$8419$1&dy4A)
              (values (gensym) (g$gen-lexical$7938$1&dy4A g$id$8417$1&dy4A)))))
         (g$top-level-context$8395$1&dy4A)))))
   (g$gen-define-label$7943$1&dy4A
     g$gen-define-label$11626$1&dy4A
     (case-lambda
       ((g$id$8425$1&dy4A g$rib$8426$1&dy4A)
        (if (g$top-level-context$8395$1&dy4A)
          (g$gen-top-level-label$7941$1&dy4A g$id$8425$1&dy4A g$rib$8426$1&dy4A)
          (gensym)))))
   (g$9032$7944$1&dy4A
     g$9032$11627$1&dy4A
     (make-record-type-descriptor
       'rib
       '#f
       'g$9035$1&dy4A
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9034$7945$1&dy4A g$9034$11628$1&dy4A '#f)
   (g$9033$7946$1&dy4A
     g$9033$11629$1&dy4A
     (make-record-constructor-descriptor
       g$9032$7944$1&dy4A
       '#f
       g$9034$7945$1&dy4A))
   (g$rib?$7947$1&dy4A
     g$rib?$11630$1&dy4A
     (record-predicate g$9032$7944$1&dy4A))
   (g$make-rib$7948$1&dy4A
     g$make-rib$11631$1&dy4A
     (record-constructor g$9033$7946$1&dy4A))
   (g$rib-sym*$7949$1&dy4A
     g$rib-sym*$11632$1&dy4A
     (record-accessor g$9032$7944$1&dy4A '0))
   (g$rib-mark**$7950$1&dy4A
     g$rib-mark**$11633$1&dy4A
     (record-accessor g$9032$7944$1&dy4A '1))
   (g$rib-label*$7951$1&dy4A
     g$rib-label*$11634$1&dy4A
     (record-accessor g$9032$7944$1&dy4A '2))
   (g$rib-sealed/freq$7952$1&dy4A
     g$rib-sealed/freq$11635$1&dy4A
     (record-accessor g$9032$7944$1&dy4A '3))
   (g$rib-cache$7953$1&dy4A
     g$rib-cache$11636$1&dy4A
     (record-accessor g$9032$7944$1&dy4A '4))
   (g$set-rib-sym*!$7954$1&dy4A
     g$set-rib-sym*!$11637$1&dy4A
     (record-mutator g$9032$7944$1&dy4A '0))
   (g$set-rib-mark**!$7955$1&dy4A
     g$set-rib-mark**!$11638$1&dy4A
     (record-mutator g$9032$7944$1&dy4A '1))
   (g$set-rib-label*!$7956$1&dy4A
     g$set-rib-label*!$11639$1&dy4A
     (record-mutator g$9032$7944$1&dy4A '2))
   (g$set-rib-sealed/freq!$7957$1&dy4A
     g$set-rib-sealed/freq!$11640$1&dy4A
     (record-mutator g$9032$7944$1&dy4A '3))
   (g$set-rib-cache!$7958$1&dy4A
     g$set-rib-cache!$11641$1&dy4A
     (record-mutator g$9032$7944$1&dy4A '4))
   (g$make-empty-rib$7959$1&dy4A
     g$make-empty-rib$11642$1&dy4A
     (case-lambda (() (g$make-rib$7948$1&dy4A '() '() '() '#f '#f))))
   (g$make-cache-rib$7960$1&dy4A
     g$make-cache-rib$11643$1&dy4A
     (case-lambda
       (()
        (g$make-rib$7948$1&dy4A
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$6160$1&dy4A)))))
   (g$find-label$7961$1&dy4A
     g$find-label$11644$1&dy4A
     (case-lambda
       ((g$rib$8427$1&dy4A g$sym$8428$1&dy4A g$mark*$8429$1&dy4A)
        ((case-lambda
           ((g$ht$8430$1&dy4A)
            (if g$ht$8430$1&dy4A
              (begin
                '#f
                ((case-lambda
                   ((g$cv$8431$1&dy4A)
                    ((case-lambda
                       ((g$t$8432$1&dy4A)
                        (if g$t$8432$1&dy4A (cdr g$t$8432$1&dy4A) '#f)))
                     (if g$cv$8431$1&dy4A
                       (begin
                         '#f
                         (g$assp$5715$1&dy4A
                           (case-lambda
                             ((g$m$8433$1&dy4A)
                              (g$same-marks?$8001$1&dy4A
                                g$mark*$8429$1&dy4A
                                g$m$8433$1&dy4A)))
                           g$cv$8431$1&dy4A))
                       '#f))))
                 (g$hashtable-ref$6163$1&dy4A
                   g$ht$8430$1&dy4A
                   g$sym$8428$1&dy4A
                   '#f)))
              '#f)))
         (g$rib-cache$7953$1&dy4A g$rib$8427$1&dy4A)))))
   (g$extend-rib!$7962$1&dy4A
     g$extend-rib!$11645$1&dy4A
     (case-lambda
       ((g$rib$8434$1&dy4A g$id$8435$1&dy4A g$label$8436$1&dy4A)
        (letrec* ((g$find$8437$1&dy4A
                    (case-lambda
                      ((g$sym$8446$1&dy4A
                         g$mark*$8447$1&dy4A
                         g$sym*$8448$1&dy4A
                         g$mark**$8449$1&dy4A
                         g$label*$8450$1&dy4A)
                       (if (pair? g$sym*$8448$1&dy4A)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8446$1&dy4A
                                        (car g$sym*$8448$1&dy4A))
                                 (begin
                                   '#f
                                   (g$same-marks?$8001$1&dy4A
                                     g$mark*$8447$1&dy4A
                                     (car g$mark**$8449$1&dy4A)))
                                 '#f)
                             g$label*$8450$1&dy4A
                             (g$find$8437$1&dy4A
                               g$sym$8446$1&dy4A
                               g$mark*$8447$1&dy4A
                               (cdr g$sym*$8448$1&dy4A)
                               (cdr g$mark**$8449$1&dy4A)
                               (cdr g$label*$8450$1&dy4A))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7952$1&dy4A g$rib$8434$1&dy4A)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8434$1&dy4A)
              (void))
            ((case-lambda
               ((g$sym$8438$1&dy4A g$mark*$8439$1&dy4A)
                ((case-lambda
                   ((g$sym*$8440$1&dy4A)
                    ((case-lambda
                       ((g$t$8441$1&dy4A)
                        (if g$t$8441$1&dy4A
                          ((case-lambda
                             ((g$p$8442$1&dy4A)
                              (if (not (eq? g$label$8436$1&dy4A
                                            g$p$8442$1&dy4A))
                                (g$syntax-violation$8388$1&dy4A
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$8435$1&dy4A)
                                (void))))
                           g$t$8441$1&dy4A)
                          ((case-lambda
                             ((g$t$8443$1&dy4A)
                              (if g$t$8443$1&dy4A
                                ((case-lambda
                                   ((g$p$8444$1&dy4A)
                                    (if (not (eq? g$label$8436$1&dy4A
                                                  (car g$p$8444$1&dy4A)))
                                      (if (g$top-level-context$8395$1&dy4A)
                                        (set-car!
                                          g$p$8444$1&dy4A
                                          g$label$8436$1&dy4A)
                                        (g$syntax-violation$8388$1&dy4A
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$8435$1&dy4A))
                                      (void))))
                                 g$t$8443$1&dy4A)
                                (begin
                                  (if (g$rib-cache$7953$1&dy4A
                                        g$rib$8434$1&dy4A)
                                    (g$hashtable-update!$6167$1&dy4A
                                      (g$rib-cache$7953$1&dy4A
                                        g$rib$8434$1&dy4A)
                                      g$sym$8438$1&dy4A
                                      (case-lambda
                                        ((g$e$8445$1&dy4A)
                                         (cons
                                           (cons
                                             g$mark*$8439$1&dy4A
                                             g$label$8436$1&dy4A)
                                           g$e$8445$1&dy4A)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$7954$1&dy4A
                                    g$rib$8434$1&dy4A
                                    (cons g$sym$8438$1&dy4A g$sym*$8440$1&dy4A))
                                  (g$set-rib-mark**!$7955$1&dy4A
                                    g$rib$8434$1&dy4A
                                    (cons
                                      g$mark*$8439$1&dy4A
                                      (g$rib-mark**$7950$1&dy4A
                                        g$rib$8434$1&dy4A)))
                                  (g$set-rib-label*!$7956$1&dy4A
                                    g$rib$8434$1&dy4A
                                    (cons
                                      g$label$8436$1&dy4A
                                      (g$rib-label*$7951$1&dy4A
                                        g$rib$8434$1&dy4A)))))))
                           (if (g$memq$5716$1&dy4A
                                 g$sym$8438$1&dy4A
                                 (g$rib-sym*$7949$1&dy4A g$rib$8434$1&dy4A))
                             (begin
                               '#f
                               (g$find$8437$1&dy4A
                                 g$sym$8438$1&dy4A
                                 g$mark*$8439$1&dy4A
                                 g$sym*$8440$1&dy4A
                                 (g$rib-mark**$7950$1&dy4A g$rib$8434$1&dy4A)
                                 (g$rib-label*$7951$1&dy4A g$rib$8434$1&dy4A)))
                             '#f)))))
                     (g$find-label$7961$1&dy4A
                       g$rib$8434$1&dy4A
                       g$sym$8438$1&dy4A
                       g$mark*$8439$1&dy4A))))
                 (g$rib-sym*$7949$1&dy4A g$rib$8434$1&dy4A))))
             (g$id->sym$8000$1&dy4A g$id$8435$1&dy4A)
             (g$stx-mark*$7974$1&dy4A g$id$8435$1&dy4A)))))))
   (g$extend-rib/nc!$7963$1&dy4A
     g$extend-rib/nc!$11646$1&dy4A
     (case-lambda
       ((g$rib$8451$1&dy4A g$id$8452$1&dy4A g$label$8453$1&dy4A)
        ((case-lambda
           ((g$sym$8454$1&dy4A g$mark*$8455$1&dy4A)
            ((case-lambda
               ((g$sym*$8456$1&dy4A)
                (begin
                  (if (g$rib-cache$7953$1&dy4A g$rib$8451$1&dy4A)
                    (g$hashtable-update!$6167$1&dy4A
                      (g$rib-cache$7953$1&dy4A g$rib$8451$1&dy4A)
                      g$sym$8454$1&dy4A
                      (case-lambda
                        ((g$e$8457$1&dy4A)
                         (cons
                           (cons g$mark*$8455$1&dy4A g$label$8453$1&dy4A)
                           g$e$8457$1&dy4A)))
                      '())
                    (void))
                  (g$set-rib-sym*!$7954$1&dy4A
                    g$rib$8451$1&dy4A
                    (cons g$sym$8454$1&dy4A g$sym*$8456$1&dy4A))
                  (g$set-rib-mark**!$7955$1&dy4A
                    g$rib$8451$1&dy4A
                    (cons
                      g$mark*$8455$1&dy4A
                      (g$rib-mark**$7950$1&dy4A g$rib$8451$1&dy4A)))
                  (g$set-rib-label*!$7956$1&dy4A
                    g$rib$8451$1&dy4A
                    (cons
                      g$label$8453$1&dy4A
                      (g$rib-label*$7951$1&dy4A g$rib$8451$1&dy4A))))))
             (g$rib-sym*$7949$1&dy4A g$rib$8451$1&dy4A))))
         (g$id->sym$8000$1&dy4A g$id$8452$1&dy4A)
         (g$stx-mark*$7974$1&dy4A g$id$8452$1&dy4A)))))
   (g$make-rib-map$7964$1&dy4A
     g$make-rib-map$11647$1&dy4A
     (case-lambda
       ((g$sym*$8458$1&dy4A)
        ((case-lambda
           ((g$ht$8459$1&dy4A)
            ((letrec ((g$f$8460$1&dy4A
                        (case-lambda
                          ((g$i$8461$1&dy4A g$sym*$8462$1&dy4A)
                           (if (null? g$sym*$8462$1&dy4A)
                             g$ht$8459$1&dy4A
                             (begin
                               (g$hashtable-update!$6167$1&dy4A
                                 g$ht$8459$1&dy4A
                                 (car g$sym*$8462$1&dy4A)
                                 (case-lambda
                                   ((g$x$8463$1&dy4A)
                                    (cons g$i$8461$1&dy4A g$x$8463$1&dy4A)))
                                 '())
                               (g$f$8460$1&dy4A
                                 (+ g$i$8461$1&dy4A '1)
                                 (cdr g$sym*$8462$1&dy4A))))))))
               g$f$8460$1&dy4A)
             '0
             g$sym*$8458$1&dy4A)))
         (g$make-eq-hashtable$6160$1&dy4A)))))
   (g$seal-rib!$7965$1&dy4A
     g$seal-rib!$11648$1&dy4A
     (case-lambda
       ((g$rib$8464$1&dy4A)
        ((case-lambda
           ((g$sym*$8465$1&dy4A)
            (if (not (null? g$sym*$8465$1&dy4A))
              (begin
                (g$set-rib-sym*!$7954$1&dy4A
                  g$rib$8464$1&dy4A
                  (list->vector g$sym*$8465$1&dy4A))
                (g$set-rib-mark**!$7955$1&dy4A
                  g$rib$8464$1&dy4A
                  (list->vector (g$rib-mark**$7950$1&dy4A g$rib$8464$1&dy4A)))
                (g$set-rib-label*!$7956$1&dy4A
                  g$rib$8464$1&dy4A
                  (list->vector (g$rib-label*$7951$1&dy4A g$rib$8464$1&dy4A)))
                (g$set-rib-sealed/freq!$7957$1&dy4A
                  g$rib$8464$1&dy4A
                  (g$make-rib-map$7964$1&dy4A g$sym*$8465$1&dy4A)))
              (void))))
         (g$rib-sym*$7949$1&dy4A g$rib$8464$1&dy4A)))))
   (g$unseal-rib!$7966$1&dy4A
     g$unseal-rib!$11649$1&dy4A
     (case-lambda
       ((g$rib$8466$1&dy4A)
        (if (g$rib-sealed/freq$7952$1&dy4A g$rib$8466$1&dy4A)
          (begin
            (g$set-rib-sealed/freq!$7957$1&dy4A g$rib$8466$1&dy4A '#f)
            (g$set-rib-sym*!$7954$1&dy4A
              g$rib$8466$1&dy4A
              (vector->list (g$rib-sym*$7949$1&dy4A g$rib$8466$1&dy4A)))
            (g$set-rib-mark**!$7955$1&dy4A
              g$rib$8466$1&dy4A
              (vector->list (g$rib-mark**$7950$1&dy4A g$rib$8466$1&dy4A)))
            (g$set-rib-label*!$7956$1&dy4A
              g$rib$8466$1&dy4A
              (vector->list (g$rib-label*$7951$1&dy4A g$rib$8466$1&dy4A))))
          (void)))))
   (g$make-full-rib$7967$1&dy4A
     g$make-full-rib$11650$1&dy4A
     (case-lambda
       ((g$id*$8467$1&dy4A g$label*$8468$1&dy4A)
        ((case-lambda
           ((g$r$8469$1&dy4A)
            (begin (g$seal-rib!$7965$1&dy4A g$r$8469$1&dy4A) g$r$8469$1&dy4A)))
         (g$make-rib$7948$1&dy4A
           (map g$id->sym$8000$1&dy4A g$id*$8467$1&dy4A)
           (map g$stx-mark*$7974$1&dy4A g$id*$8467$1&dy4A)
           g$label*$8468$1&dy4A
           '#f
           '#f)))))
   (g$9063$7968$1&dy4A
     g$9063$11651$1&dy4A
     (make-record-type-descriptor
       'stx
       '#f
       'g$9066$1&dy4A
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$9065$7969$1&dy4A g$9065$11652$1&dy4A '#f)
   (g$9064$7970$1&dy4A
     g$9064$11653$1&dy4A
     (make-record-constructor-descriptor
       g$9063$7968$1&dy4A
       '#f
       g$9065$7969$1&dy4A))
   (g$stx?$7971$1&dy4A
     g$stx?$11654$1&dy4A
     (record-predicate g$9063$7968$1&dy4A))
   (g$make-stx$7972$1&dy4A
     g$make-stx$11655$1&dy4A
     (record-constructor g$9064$7970$1&dy4A))
   (g$stx-expr$7973$1&dy4A
     g$stx-expr$11656$1&dy4A
     (record-accessor g$9063$7968$1&dy4A '0))
   (g$stx-mark*$7974$1&dy4A
     g$stx-mark*$11657$1&dy4A
     (record-accessor g$9063$7968$1&dy4A '1))
   (g$stx-subst*$7975$1&dy4A
     g$stx-subst*$11658$1&dy4A
     (record-accessor g$9063$7968$1&dy4A '2))
   (g$stx-ae*$7976$1&dy4A
     g$stx-ae*$11659$1&dy4A
     (record-accessor g$9063$7968$1&dy4A '3))
   (g$set-stx-expr!$7977$1&dy4A
     g$set-stx-expr!$11660$1&dy4A
     (record-mutator g$9063$7968$1&dy4A '0))
   (g$set-stx-mark*!$7978$1&dy4A
     g$set-stx-mark*!$11661$1&dy4A
     (record-mutator g$9063$7968$1&dy4A '1))
   (g$set-stx-subst*!$7979$1&dy4A
     g$set-stx-subst*!$11662$1&dy4A
     (record-mutator g$9063$7968$1&dy4A '2))
   (g$set-stx-ae*!$7980$1&dy4A
     g$set-stx-ae*!$11663$1&dy4A
     (record-mutator g$9063$7968$1&dy4A '3))
   (g$rp$7981$1&dy4A
     g$rp$11664$1&dy4A
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8470$1&dy4A g$p$8471$1&dy4A g$wr$8472$1&dy4A)
          (begin
            (display '"#<syntax " g$p$8471$1&dy4A)
            (write (g$stx->datum$8010$1&dy4A g$x$8470$1&dy4A) g$p$8471$1&dy4A)
            ((case-lambda
               ((g$expr$8473$1&dy4A)
                (if (annotation? g$expr$8473$1&dy4A)
                  ((case-lambda
                     ((g$src$8474$1&dy4A)
                      (if (pair? g$src$8474$1&dy4A)
                        (begin
                          (display '" (" g$p$8471$1&dy4A)
                          (display (cdr g$src$8474$1&dy4A) g$p$8471$1&dy4A)
                          (display '" of " g$p$8471$1&dy4A)
                          (display (car g$src$8474$1&dy4A) g$p$8471$1&dy4A)
                          (display '")" g$p$8471$1&dy4A))
                        (void))))
                   (annotation-source g$expr$8473$1&dy4A))
                  (void))))
             (g$stx-expr$7973$1&dy4A g$x$8470$1&dy4A))
            (display '">" g$p$8471$1&dy4A))))))
   (g$datum->stx$7982$1&dy4A
     g$datum->stx$11665$1&dy4A
     (case-lambda
       ((g$id$8475$1&dy4A g$datum$8476$1&dy4A)
        (g$make-stx$7972$1&dy4A
          g$datum$8476$1&dy4A
          (g$stx-mark*$7974$1&dy4A g$id$8475$1&dy4A)
          (g$stx-subst*$7975$1&dy4A g$id$8475$1&dy4A)
          (g$stx-ae*$7976$1&dy4A g$id$8475$1&dy4A)))))
   (g$gen-mark$7983$1&dy4A
     g$gen-mark$11666$1&dy4A
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7984$1&dy4A g$anti-mark$11667$1&dy4A '#f)
   (g$anti-mark?$7985$1&dy4A g$anti-mark?$11668$1&dy4A not)
   (g$join-wraps$7986$1&dy4A
     g$join-wraps$11669$1&dy4A
     (case-lambda
       ((g$m1*$8477$1&dy4A
          g$s1*$8478$1&dy4A
          g$ae1*$8479$1&dy4A
          g$e$8480$1&dy4A)
        (letrec* ((g$cancel$8481$1&dy4A
                    (case-lambda
                      ((g$ls1$8485$1&dy4A g$ls2$8486$1&dy4A)
                       ((letrec ((g$f$8487$1&dy4A
                                   (case-lambda
                                     ((g$x$8488$1&dy4A g$ls1$8489$1&dy4A)
                                      (if (null? g$ls1$8489$1&dy4A)
                                        (cdr g$ls2$8486$1&dy4A)
                                        (cons
                                          g$x$8488$1&dy4A
                                          (g$f$8487$1&dy4A
                                            (car g$ls1$8489$1&dy4A)
                                            (cdr g$ls1$8489$1&dy4A))))))))
                          g$f$8487$1&dy4A)
                        (car g$ls1$8485$1&dy4A)
                        (cdr g$ls1$8485$1&dy4A))))))
          ((case-lambda
             ((g$m2*$8482$1&dy4A g$s2*$8483$1&dy4A g$ae2*$8484$1&dy4A)
              (if (if (not (null? g$m1*$8477$1&dy4A))
                    (if (not (null? g$m2*$8482$1&dy4A))
                      (begin
                        '#f
                        (g$anti-mark?$7985$1&dy4A (car g$m2*$8482$1&dy4A)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8481$1&dy4A g$m1*$8477$1&dy4A g$m2*$8482$1&dy4A)
                  (g$cancel$8481$1&dy4A g$s1*$8478$1&dy4A g$s2*$8483$1&dy4A)
                  (g$cancel$8481$1&dy4A g$ae1*$8479$1&dy4A g$ae2*$8484$1&dy4A))
                (values
                  (append g$m1*$8477$1&dy4A g$m2*$8482$1&dy4A)
                  (append g$s1*$8478$1&dy4A g$s2*$8483$1&dy4A)
                  (append g$ae1*$8479$1&dy4A g$ae2*$8484$1&dy4A)))))
           (g$stx-mark*$7974$1&dy4A g$e$8480$1&dy4A)
           (g$stx-subst*$7975$1&dy4A g$e$8480$1&dy4A)
           (g$stx-ae*$7976$1&dy4A g$e$8480$1&dy4A))))))
   (g$mkstx$7987$1&dy4A
     g$mkstx$11670$1&dy4A
     (case-lambda
       ((g$e$8490$1&dy4A g$m*$8491$1&dy4A g$s*$8492$1&dy4A g$ae*$8493$1&dy4A)
        (if (if (g$stx?$7971$1&dy4A g$e$8490$1&dy4A)
              (begin '#f (not (g$top-marked?$7937$1&dy4A g$m*$8491$1&dy4A)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7986$1&dy4A
                 g$m*$8491$1&dy4A
                 g$s*$8492$1&dy4A
                 g$ae*$8493$1&dy4A
                 g$e$8490$1&dy4A)))
            (case-lambda
              ((g$m*$8497$1&dy4A g$s*$8498$1&dy4A g$ae*$8499$1&dy4A)
               ((case-lambda
                  ((g$ae*$8500$1&dy4A g$s*$8501$1&dy4A g$m*$8502$1&dy4A)
                   (g$make-stx$7972$1&dy4A
                     (g$stx-expr$7973$1&dy4A g$e$8490$1&dy4A)
                     g$m*$8502$1&dy4A
                     g$s*$8501$1&dy4A
                     g$ae*$8500$1&dy4A)))
                g$ae*$8499$1&dy4A
                g$s*$8498$1&dy4A
                g$m*$8497$1&dy4A))))
          (g$make-stx$7972$1&dy4A
            g$e$8490$1&dy4A
            g$m*$8491$1&dy4A
            g$s*$8492$1&dy4A
            g$ae*$8493$1&dy4A)))))
   (g$add-mark$7988$1&dy4A
     g$add-mark$11671$1&dy4A
     (case-lambda
       ((g$m$8503$1&dy4A g$e$8504$1&dy4A g$ae$8505$1&dy4A)
        (g$mkstx$7987$1&dy4A
          g$e$8504$1&dy4A
          (list g$m$8503$1&dy4A)
          '(shift)
          (list g$ae$8505$1&dy4A)))))
   (g$add-subst$7989$1&dy4A
     g$add-subst$11672$1&dy4A
     (case-lambda
       ((g$subst$8506$1&dy4A g$e$8507$1&dy4A)
        (g$mkstx$7987$1&dy4A
          g$e$8507$1&dy4A
          '()
          (list g$subst$8506$1&dy4A)
          '()))))
   (g$syntax-kind?$7990$1&dy4A
     g$syntax-kind?$11673$1&dy4A
     (case-lambda
       ((g$x$8508$1&dy4A g$p?$8509$1&dy4A)
        (if (g$stx?$7971$1&dy4A g$x$8508$1&dy4A)
          (g$syntax-kind?$7990$1&dy4A
            (g$stx-expr$7973$1&dy4A g$x$8508$1&dy4A)
            g$p?$8509$1&dy4A)
          (if (annotation? g$x$8508$1&dy4A)
            (g$syntax-kind?$7990$1&dy4A
              (annotation-expression g$x$8508$1&dy4A)
              g$p?$8509$1&dy4A)
            (g$p?$8509$1&dy4A g$x$8508$1&dy4A))))))
   (g$syntax-vector->list$7991$1&dy4A
     g$syntax-vector->list$11674$1&dy4A
     (case-lambda
       ((g$x$8510$1&dy4A)
        (if (g$stx?$7971$1&dy4A g$x$8510$1&dy4A)
          ((case-lambda
             ((g$ls$8511$1&dy4A
                g$m*$8512$1&dy4A
                g$s*$8513$1&dy4A
                g$ae*$8514$1&dy4A)
              (map (case-lambda
                     ((g$x$8515$1&dy4A)
                      (g$mkstx$7987$1&dy4A
                        g$x$8515$1&dy4A
                        g$m*$8512$1&dy4A
                        g$s*$8513$1&dy4A
                        g$ae*$8514$1&dy4A)))
                   g$ls$8511$1&dy4A)))
           (g$syntax-vector->list$7991$1&dy4A
             (g$stx-expr$7973$1&dy4A g$x$8510$1&dy4A))
           (g$stx-mark*$7974$1&dy4A g$x$8510$1&dy4A)
           (g$stx-subst*$7975$1&dy4A g$x$8510$1&dy4A)
           (g$stx-ae*$7976$1&dy4A g$x$8510$1&dy4A))
          (if (annotation? g$x$8510$1&dy4A)
            (g$syntax-vector->list$7991$1&dy4A
              (annotation-expression g$x$8510$1&dy4A))
            (if (vector? g$x$8510$1&dy4A)
              (vector->list g$x$8510$1&dy4A)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8510$1&dy4A)))))))
   (g$syntax-pair?$7992$1&dy4A
     g$syntax-pair?$11675$1&dy4A
     (case-lambda
       ((g$x$8516$1&dy4A) (g$syntax-kind?$7990$1&dy4A g$x$8516$1&dy4A pair?))))
   (g$syntax-vector?$7993$1&dy4A
     g$syntax-vector?$11676$1&dy4A
     (case-lambda
       ((g$x$8517$1&dy4A)
        (g$syntax-kind?$7990$1&dy4A g$x$8517$1&dy4A vector?))))
   (g$syntax-null?$7994$1&dy4A
     g$syntax-null?$11677$1&dy4A
     (case-lambda
       ((g$x$8518$1&dy4A) (g$syntax-kind?$7990$1&dy4A g$x$8518$1&dy4A null?))))
   (g$syntax-list?$7995$1&dy4A
     g$syntax-list?$11678$1&dy4A
     (case-lambda
       ((g$x$8519$1&dy4A)
        ((case-lambda
           ((g$t$8520$1&dy4A)
            (if g$t$8520$1&dy4A
              g$t$8520$1&dy4A
              (begin
                '#f
                (if (g$syntax-pair?$7992$1&dy4A g$x$8519$1&dy4A)
                  (begin
                    '#f
                    (g$syntax-list?$7995$1&dy4A
                      (g$syntax-cdr$7997$1&dy4A g$x$8519$1&dy4A)))
                  '#f)))))
         (g$syntax-null?$7994$1&dy4A g$x$8519$1&dy4A)))))
   (g$syntax-car$7996$1&dy4A
     g$syntax-car$11679$1&dy4A
     (case-lambda
       ((g$x$8521$1&dy4A)
        (if (g$stx?$7971$1&dy4A g$x$8521$1&dy4A)
          (g$mkstx$7987$1&dy4A
            (g$syntax-car$7996$1&dy4A (g$stx-expr$7973$1&dy4A g$x$8521$1&dy4A))
            (g$stx-mark*$7974$1&dy4A g$x$8521$1&dy4A)
            (g$stx-subst*$7975$1&dy4A g$x$8521$1&dy4A)
            (g$stx-ae*$7976$1&dy4A g$x$8521$1&dy4A))
          (if (annotation? g$x$8521$1&dy4A)
            (g$syntax-car$7996$1&dy4A (annotation-expression g$x$8521$1&dy4A))
            (if (pair? g$x$8521$1&dy4A)
              (car g$x$8521$1&dy4A)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8521$1&dy4A)))))))
   (g$syntax-cdr$7997$1&dy4A
     g$syntax-cdr$11680$1&dy4A
     (case-lambda
       ((g$x$8522$1&dy4A)
        (if (g$stx?$7971$1&dy4A g$x$8522$1&dy4A)
          (g$mkstx$7987$1&dy4A
            (g$syntax-cdr$7997$1&dy4A (g$stx-expr$7973$1&dy4A g$x$8522$1&dy4A))
            (g$stx-mark*$7974$1&dy4A g$x$8522$1&dy4A)
            (g$stx-subst*$7975$1&dy4A g$x$8522$1&dy4A)
            (g$stx-ae*$7976$1&dy4A g$x$8522$1&dy4A))
          (if (annotation? g$x$8522$1&dy4A)
            (g$syntax-cdr$7997$1&dy4A (annotation-expression g$x$8522$1&dy4A))
            (if (pair? g$x$8522$1&dy4A)
              (cdr g$x$8522$1&dy4A)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8522$1&dy4A)))))))
   (g$syntax->list$7998$1&dy4A
     g$syntax->list$11681$1&dy4A
     (case-lambda
       ((g$x$8523$1&dy4A)
        (if (g$syntax-pair?$7992$1&dy4A g$x$8523$1&dy4A)
          (cons
            (g$syntax-car$7996$1&dy4A g$x$8523$1&dy4A)
            (g$syntax->list$7998$1&dy4A
              (g$syntax-cdr$7997$1&dy4A g$x$8523$1&dy4A)))
          (if (g$syntax-null?$7994$1&dy4A g$x$8523$1&dy4A)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8523$1&dy4A))))))
   (g$id?$7999$1&dy4A
     g$id?$11682$1&dy4A
     (case-lambda
       ((g$x$8524$1&dy4A)
        (if (g$stx?$7971$1&dy4A g$x$8524$1&dy4A)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8525$1&dy4A)
                (symbol?
                  (if (annotation? g$expr$8525$1&dy4A)
                    (annotation-stripped g$expr$8525$1&dy4A)
                    g$expr$8525$1&dy4A))))
             (g$stx-expr$7973$1&dy4A g$x$8524$1&dy4A)))
          '#f))))
   (g$id->sym$8000$1&dy4A
     g$id->sym$11683$1&dy4A
     (case-lambda
       ((g$x$8526$1&dy4A)
        (begin
          (if (not (g$stx?$7971$1&dy4A g$x$8526$1&dy4A))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8526$1&dy4A)
            (void))
          ((case-lambda
             ((g$expr$8527$1&dy4A)
              ((case-lambda
                 ((g$sym$8528$1&dy4A)
                  (if (symbol? g$sym$8528$1&dy4A)
                    g$sym$8528$1&dy4A
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8526$1&dy4A))))
               (if (annotation? g$expr$8527$1&dy4A)
                 (annotation-stripped g$expr$8527$1&dy4A)
                 g$expr$8527$1&dy4A))))
           (g$stx-expr$7973$1&dy4A g$x$8526$1&dy4A))))))
   (g$same-marks?$8001$1&dy4A
     g$same-marks?$11684$1&dy4A
     (case-lambda
       ((g$x$8529$1&dy4A g$y$8530$1&dy4A)
        ((case-lambda
           ((g$t$8531$1&dy4A)
            (if g$t$8531$1&dy4A
              g$t$8531$1&dy4A
              (begin
                '#f
                (if (pair? g$x$8529$1&dy4A)
                  (if (pair? g$y$8530$1&dy4A)
                    (if (eq? (car g$x$8529$1&dy4A) (car g$y$8530$1&dy4A))
                      (begin
                        '#f
                        (g$same-marks?$8001$1&dy4A
                          (cdr g$x$8529$1&dy4A)
                          (cdr g$y$8530$1&dy4A)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8529$1&dy4A)
           (begin '#f (null? g$y$8530$1&dy4A))
           '#f)))))
   (g$bound-id=?$8002$1&dy4A
     g$bound-id=?$11685$1&dy4A
     (case-lambda
       ((g$x$8532$1&dy4A g$y$8533$1&dy4A)
        (if (eq? (g$id->sym$8000$1&dy4A g$x$8532$1&dy4A)
                 (g$id->sym$8000$1&dy4A g$y$8533$1&dy4A))
          (begin
            '#f
            (g$same-marks?$8001$1&dy4A
              (g$stx-mark*$7974$1&dy4A g$x$8532$1&dy4A)
              (g$stx-mark*$7974$1&dy4A g$y$8533$1&dy4A)))
          '#f))))
   (g$free-id=?$8003$1&dy4A
     g$free-id=?$11686$1&dy4A
     (case-lambda
       ((g$i$8534$1&dy4A g$j$8535$1&dy4A)
        ((case-lambda
           ((g$t0$8536$1&dy4A g$t1$8537$1&dy4A)
            (if ((case-lambda
                   ((g$t$8538$1&dy4A)
                    (if g$t$8538$1&dy4A
                      g$t$8538$1&dy4A
                      (begin '#f g$t1$8537$1&dy4A))))
                 g$t0$8536$1&dy4A)
              (eq? g$t0$8536$1&dy4A g$t1$8537$1&dy4A)
              (eq? (g$id->sym$8000$1&dy4A g$i$8534$1&dy4A)
                   (g$id->sym$8000$1&dy4A g$j$8535$1&dy4A)))))
         (g$id->real-label$8013$1&dy4A g$i$8534$1&dy4A)
         (g$id->real-label$8013$1&dy4A g$j$8535$1&dy4A)))))
   (g$valid-bound-ids?$8004$1&dy4A
     g$valid-bound-ids?$11687$1&dy4A
     (case-lambda
       ((g$id*$8539$1&dy4A)
        (if (g$for-all$5722$1&dy4A g$id?$7999$1&dy4A g$id*$8539$1&dy4A)
          (begin '#f (g$distinct-bound-ids?$8005$1&dy4A g$id*$8539$1&dy4A))
          '#f))))
   (g$distinct-bound-ids?$8005$1&dy4A
     g$distinct-bound-ids?$11688$1&dy4A
     (case-lambda
       ((g$id*$8540$1&dy4A)
        ((case-lambda
           ((g$t$8541$1&dy4A)
            (if g$t$8541$1&dy4A
              g$t$8541$1&dy4A
              (begin
                '#f
                (if (not (g$bound-id-member?$8006$1&dy4A
                           (car g$id*$8540$1&dy4A)
                           (cdr g$id*$8540$1&dy4A)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$8005$1&dy4A (cdr g$id*$8540$1&dy4A)))
                  '#f)))))
         (null? g$id*$8540$1&dy4A)))))
   (g$bound-id-member?$8006$1&dy4A
     g$bound-id-member?$11689$1&dy4A
     (case-lambda
       ((g$id$8542$1&dy4A g$id*$8543$1&dy4A)
        (if (pair? g$id*$8543$1&dy4A)
          (begin
            '#f
            ((case-lambda
               ((g$t$8544$1&dy4A)
                (if g$t$8544$1&dy4A
                  g$t$8544$1&dy4A
                  (begin
                    '#f
                    (g$bound-id-member?$8006$1&dy4A
                      g$id$8542$1&dy4A
                      (cdr g$id*$8543$1&dy4A))))))
             (g$bound-id=?$8002$1&dy4A
               g$id$8542$1&dy4A
               (car g$id*$8543$1&dy4A))))
          '#f))))
   (g$self-evaluating?$8007$1&dy4A
     g$self-evaluating?$11690$1&dy4A
     (case-lambda
       ((g$x$8545$1&dy4A)
        ((case-lambda
           ((g$t$8546$1&dy4A)
            (if g$t$8546$1&dy4A
              g$t$8546$1&dy4A
              ((case-lambda
                 ((g$t$8547$1&dy4A)
                  (if g$t$8547$1&dy4A
                    g$t$8547$1&dy4A
                    ((case-lambda
                       ((g$t$8548$1&dy4A)
                        (if g$t$8548$1&dy4A
                          g$t$8548$1&dy4A
                          ((case-lambda
                             ((g$t$8549$1&dy4A)
                              (if g$t$8549$1&dy4A
                                g$t$8549$1&dy4A
                                (begin '#f (bytevector? g$x$8545$1&dy4A)))))
                           (boolean? g$x$8545$1&dy4A)))))
                     (char? g$x$8545$1&dy4A)))))
               (string? g$x$8545$1&dy4A)))))
         (number? g$x$8545$1&dy4A)))))
   (g$strip-annotations$8008$1&dy4A
     g$strip-annotations$11691$1&dy4A
     (case-lambda
       ((g$x$8550$1&dy4A)
        (if (pair? g$x$8550$1&dy4A)
          (cons
            (g$strip-annotations$8008$1&dy4A (car g$x$8550$1&dy4A))
            (g$strip-annotations$8008$1&dy4A (cdr g$x$8550$1&dy4A)))
          (if (vector? g$x$8550$1&dy4A)
            (vector-map g$strip-annotations$8008$1&dy4A g$x$8550$1&dy4A)
            (if (annotation? g$x$8550$1&dy4A)
              (annotation-stripped g$x$8550$1&dy4A)
              g$x$8550$1&dy4A))))))
   (g$strip$8009$1&dy4A
     g$strip$11692$1&dy4A
     (case-lambda
       ((g$x$8551$1&dy4A g$m*$8552$1&dy4A)
        (if (g$top-marked?$7937$1&dy4A g$m*$8552$1&dy4A)
          (if ((case-lambda
                 ((g$t$8553$1&dy4A)
                  (if g$t$8553$1&dy4A
                    g$t$8553$1&dy4A
                    ((case-lambda
                       ((g$t$8554$1&dy4A)
                        (if g$t$8554$1&dy4A
                          g$t$8554$1&dy4A
                          (begin
                            '#f
                            (if (vector? g$x$8551$1&dy4A)
                              (if (> (vector-length g$x$8551$1&dy4A) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8551$1&dy4A '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8551$1&dy4A)
                       (begin '#f (annotation? (car g$x$8551$1&dy4A)))
                       '#f)))))
               (annotation? g$x$8551$1&dy4A))
            (g$strip-annotations$8008$1&dy4A g$x$8551$1&dy4A)
            g$x$8551$1&dy4A)
          ((letrec ((g$f$8555$1&dy4A
                      (case-lambda
                        ((g$x$8556$1&dy4A)
                         (if (g$stx?$7971$1&dy4A g$x$8556$1&dy4A)
                           (g$strip$8009$1&dy4A
                             (g$stx-expr$7973$1&dy4A g$x$8556$1&dy4A)
                             (g$stx-mark*$7974$1&dy4A g$x$8556$1&dy4A))
                           (if (annotation? g$x$8556$1&dy4A)
                             (annotation-stripped g$x$8556$1&dy4A)
                             (if (pair? g$x$8556$1&dy4A)
                               ((case-lambda
                                  ((g$a$8557$1&dy4A g$d$8558$1&dy4A)
                                   (if (if (eq? g$a$8557$1&dy4A
                                                (car g$x$8556$1&dy4A))
                                         (begin
                                           '#f
                                           (eq? g$d$8558$1&dy4A
                                                (cdr g$x$8556$1&dy4A)))
                                         '#f)
                                     g$x$8556$1&dy4A
                                     (cons g$a$8557$1&dy4A g$d$8558$1&dy4A))))
                                (g$f$8555$1&dy4A (car g$x$8556$1&dy4A))
                                (g$f$8555$1&dy4A (cdr g$x$8556$1&dy4A)))
                               (if (vector? g$x$8556$1&dy4A)
                                 ((case-lambda
                                    ((g$old$8559$1&dy4A)
                                     ((case-lambda
                                        ((g$new$8560$1&dy4A)
                                         (if (g$for-all$5722$1&dy4A
                                               eq?
                                               g$old$8559$1&dy4A
                                               g$new$8560$1&dy4A)
                                           g$x$8556$1&dy4A
                                           (list->vector g$new$8560$1&dy4A))))
                                      (map g$f$8555$1&dy4A g$old$8559$1&dy4A))))
                                  (vector->list g$x$8556$1&dy4A))
                                 g$x$8556$1&dy4A))))))))
             g$f$8555$1&dy4A)
           g$x$8551$1&dy4A)))))
   (g$stx->datum$8010$1&dy4A
     g$stx->datum$11693$1&dy4A
     (case-lambda
       ((g$x$8561$1&dy4A) (g$strip$8009$1&dy4A g$x$8561$1&dy4A '()))))
   (g$same-marks*?$8011$1&dy4A
     g$same-marks*?$11694$1&dy4A
     (case-lambda
       ((g$mark*$8562$1&dy4A g$mark**$8563$1&dy4A g$si$8564$1&dy4A)
        (if (null? g$si$8564$1&dy4A)
          '#f
          (if (g$same-marks?$8001$1&dy4A
                g$mark*$8562$1&dy4A
                (vector-ref g$mark**$8563$1&dy4A (car g$si$8564$1&dy4A)))
            (car g$si$8564$1&dy4A)
            (g$same-marks*?$8011$1&dy4A
              g$mark*$8562$1&dy4A
              g$mark**$8563$1&dy4A
              (cdr g$si$8564$1&dy4A)))))))
   (g$id->label$8012$1&dy4A
     g$id->label$11695$1&dy4A
     (case-lambda
       ((g$id$8565$1&dy4A)
        ((case-lambda
           ((g$t$8566$1&dy4A)
            (if g$t$8566$1&dy4A
              g$t$8566$1&dy4A
              (begin
                '#f
                ((case-lambda
                   ((g$t$8567$1&dy4A)
                    (if g$t$8567$1&dy4A
                      ((case-lambda
                         ((g$env$8568$1&dy4A)
                          ((case-lambda
                             ((g$rib$8569$1&dy4A)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7942$1&dy4A
                                     g$id$8565$1&dy4A
                                     g$rib$8569$1&dy4A)))
                                (case-lambda
                                  ((g$lab$8572$1&dy4A g$loc_$8573$1&dy4A)
                                   ((case-lambda
                                      ((g$loc_$8574$1&dy4A g$lab$8575$1&dy4A)
                                       (begin
                                         (g$extend-rib!$7962$1&dy4A
                                           g$rib$8569$1&dy4A
                                           g$id$8565$1&dy4A
                                           g$lab$8575$1&dy4A)
                                         g$lab$8575$1&dy4A)))
                                    g$loc_$8573$1&dy4A
                                    g$lab$8572$1&dy4A))))))
                           (g$interaction-env-rib$8355$1&dy4A
                             g$env$8568$1&dy4A))))
                       g$t$8567$1&dy4A)
                      '#f)))
                 (g$top-level-context$8395$1&dy4A))))))
         (g$id->real-label$8013$1&dy4A g$id$8565$1&dy4A)))))
   (g$id->real-label$8013$1&dy4A
     g$id->real-label$11696$1&dy4A
     (case-lambda
       ((g$id$8576$1&dy4A)
        ((case-lambda
           ((g$sym$8577$1&dy4A)
            ((letrec ((g$search$8578$1&dy4A
                        (case-lambda
                          ((g$subst*$8579$1&dy4A g$mark*$8580$1&dy4A)
                           (if (null? g$subst*$8579$1&dy4A)
                             '#f
                             (if (eq? (car g$subst*$8579$1&dy4A) 'shift)
                               (g$search$8578$1&dy4A
                                 (cdr g$subst*$8579$1&dy4A)
                                 (cdr g$mark*$8580$1&dy4A))
                               ((case-lambda
                                  ((g$rib$8581$1&dy4A)
                                   ((case-lambda
                                      ((g$t$8582$1&dy4A)
                                       (if g$t$8582$1&dy4A
                                         ((case-lambda
                                            ((g$ht$8583$1&dy4A)
                                             ((case-lambda
                                                ((g$si$8584$1&dy4A)
                                                 ((case-lambda
                                                    ((g$i$8585$1&dy4A)
                                                     (if g$i$8585$1&dy4A
                                                       (vector-ref
                                                         (g$rib-label*$7951$1&dy4A
                                                           g$rib$8581$1&dy4A)
                                                         g$i$8585$1&dy4A)
                                                       (g$search$8578$1&dy4A
                                                         (cdr g$subst*$8579$1&dy4A)
                                                         g$mark*$8580$1&dy4A))))
                                                  (if g$si$8584$1&dy4A
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$8011$1&dy4A
                                                        g$mark*$8580$1&dy4A
                                                        (g$rib-mark**$7950$1&dy4A
                                                          g$rib$8581$1&dy4A)
                                                        (reverse
                                                          g$si$8584$1&dy4A)))
                                                    '#f))))
                                              (g$hashtable-ref$6163$1&dy4A
                                                g$ht$8583$1&dy4A
                                                g$sym$8577$1&dy4A
                                                '#f))))
                                          g$t$8582$1&dy4A)
                                         ((case-lambda
                                            ((g$t$8586$1&dy4A)
                                             (if g$t$8586$1&dy4A
                                               g$t$8586$1&dy4A
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$8587$1&dy4A
                                                             (case-lambda
                                                               ((g$sym*$8588$1&dy4A
                                                                  g$mark**$8589$1&dy4A
                                                                  g$label*$8590$1&dy4A)
                                                                (if (null?
                                                                      g$sym*$8588$1&dy4A)
                                                                  (g$search$8578$1&dy4A
                                                                    (cdr g$subst*$8579$1&dy4A)
                                                                    g$mark*$8580$1&dy4A)
                                                                  (if (if (eq? (car g$sym*$8588$1&dy4A)
                                                                               g$sym$8577$1&dy4A)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$8001$1&dy4A
                                                                            (car g$mark**$8589$1&dy4A)
                                                                            g$mark*$8580$1&dy4A))
                                                                        '#f)
                                                                    (car g$label*$8590$1&dy4A)
                                                                    (g$f$8587$1&dy4A
                                                                      (cdr g$sym*$8588$1&dy4A)
                                                                      (cdr g$mark**$8589$1&dy4A)
                                                                      (cdr g$label*$8590$1&dy4A))))))))
                                                    g$f$8587$1&dy4A)
                                                  (g$rib-sym*$7949$1&dy4A
                                                    g$rib$8581$1&dy4A)
                                                  (g$rib-mark**$7950$1&dy4A
                                                    g$rib$8581$1&dy4A)
                                                  (g$rib-label*$7951$1&dy4A
                                                    g$rib$8581$1&dy4A))))))
                                          (g$find-label$7961$1&dy4A
                                            g$rib$8581$1&dy4A
                                            g$sym$8577$1&dy4A
                                            g$mark*$8580$1&dy4A)))))
                                    (g$rib-sealed/freq$7952$1&dy4A
                                      g$rib$8581$1&dy4A))))
                                (car g$subst*$8579$1&dy4A))))))))
               g$search$8578$1&dy4A)
             (g$stx-subst*$7975$1&dy4A g$id$8576$1&dy4A)
             (g$stx-mark*$7974$1&dy4A g$id$8576$1&dy4A))))
         (g$id->sym$8000$1&dy4A g$id$8576$1&dy4A)))))
   (g$label->binding$8014$1&dy4A
     g$label->binding$11697$1&dy4A
     (case-lambda
       ((g$x$8591$1&dy4A g$r$8592$1&dy4A)
        ((case-lambda
           ((g$t$8593$1&dy4A)
            (if g$t$8593$1&dy4A
              ((case-lambda
                 ((g$b$8594$1&dy4A)
                  (if (if (pair? g$b$8594$1&dy4A)
                        (begin '#f (eq? (car g$b$8594$1&dy4A) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$8240$1&dy4A (cdr g$b$8594$1&dy4A)))
                    (if (if (pair? g$b$8594$1&dy4A)
                          (begin '#f (eq? (car g$b$8594$1&dy4A) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8595$1&dy4A g$loc$8596$1&dy4A)
                          (cons '$rtd (symbol-value g$loc$8596$1&dy4A))))
                       (g$cadr$5886$1&dy4A g$b$8594$1&dy4A)
                       (g$cddr$5888$1&dy4A g$b$8594$1&dy4A))
                      g$b$8594$1&dy4A))))
               g$t$8593$1&dy4A)
              ((case-lambda
                 ((g$t$8597$1&dy4A)
                  (if g$t$8597$1&dy4A
                    (cdr g$t$8597$1&dy4A)
                    ((case-lambda
                       ((g$t$8598$1&dy4A)
                        (if g$t$8598$1&dy4A
                          ((case-lambda
                             ((g$env$8599$1&dy4A)
                              ((case-lambda
                                 ((g$t$8600$1&dy4A)
                                  (if g$t$8600$1&dy4A
                                    ((case-lambda
                                       ((g$p$8601$1&dy4A)
                                        (g$cons*$5724$1&dy4A
                                          'lexical
                                          (cdr g$p$8601$1&dy4A)
                                          '#f)))
                                     g$t$8600$1&dy4A)
                                    '(displaced-lexical . #f))))
                               (g$assq$5712$1&dy4A
                                 g$x$8591$1&dy4A
                                 (g$interaction-env-locs$8357$1&dy4A
                                   g$env$8599$1&dy4A)))))
                           g$t$8598$1&dy4A)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$8395$1&dy4A)))))
               (g$assq$5712$1&dy4A g$x$8591$1&dy4A g$r$8592$1&dy4A)))))
         (g$imported-label->binding$7808$1&dy4A g$x$8591$1&dy4A)))))
   (g$make-binding$8015$1&dy4A g$make-binding$11698$1&dy4A cons)
   (g$binding-type$8016$1&dy4A g$binding-type$11699$1&dy4A car)
   (g$binding-value$8017$1&dy4A g$binding-value$11700$1&dy4A cdr)
   (g$raise-unbound-error$8018$1&dy4A
     g$raise-unbound-error$11701$1&dy4A
     (case-lambda
       ((g$id$8602$1&dy4A)
        (g$syntax-violation*$8387$1&dy4A
          '#f
          '"unbound identifier"
          g$id$8602$1&dy4A
          (g$make-undefined-violation$6510$1&dy4A)))))
   (g$syntax-type$8019$1&dy4A
     g$syntax-type$11702$1&dy4A
     (case-lambda
       ((g$e$8603$1&dy4A g$r$8604$1&dy4A)
        (if (g$id?$7999$1&dy4A g$e$8603$1&dy4A)
          ((case-lambda
             ((g$id$8605$1&dy4A)
              ((case-lambda
                 ((g$label$8606$1&dy4A)
                  ((case-lambda
                     ((g$b$8607$1&dy4A)
                      ((case-lambda
                         ((g$type$8608$1&dy4A)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$8606$1&dy4A)
                                  (g$raise-unbound-error$8018$1&dy4A
                                    g$id$8605$1&dy4A)
                                  (void))
                                ((case-lambda
                                   ((g$t$8609$1&dy4A)
                                    (if (g$memv$5717$1&dy4A
                                          g$t$8609$1&dy4A
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             export
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$8608$1&dy4A
                                        (g$binding-value$8017$1&dy4A
                                          g$b$8607$1&dy4A)
                                        g$id$8605$1&dy4A)
                                      (values 'other '#f '#f))))
                                 g$type$8608$1&dy4A)))))))
                       (g$binding-type$8016$1&dy4A g$b$8607$1&dy4A))))
                   (g$label->binding$8014$1&dy4A
                     g$label$8606$1&dy4A
                     g$r$8604$1&dy4A))))
               (g$id->label$8012$1&dy4A g$id$8605$1&dy4A))))
           g$e$8603$1&dy4A)
          (if (g$syntax-pair?$7992$1&dy4A g$e$8603$1&dy4A)
            ((case-lambda
               ((g$id$8610$1&dy4A)
                (if (g$id?$7999$1&dy4A g$id$8610$1&dy4A)
                  ((case-lambda
                     ((g$label$8611$1&dy4A)
                      ((case-lambda
                         ((g$b$8612$1&dy4A)
                          ((case-lambda
                             ((g$type$8613$1&dy4A)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$8611$1&dy4A)
                                      (g$raise-unbound-error$8018$1&dy4A
                                        g$id$8610$1&dy4A)
                                      (void))
                                    ((case-lambda
                                       ((g$t$8614$1&dy4A)
                                        (if (g$memv$5717$1&dy4A
                                              g$t$8614$1&dy4A
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 export
                                                 $core-rtd))
                                          (values
                                            g$type$8613$1&dy4A
                                            (g$binding-value$8017$1&dy4A
                                              g$b$8612$1&dy4A)
                                            g$id$8610$1&dy4A)
                                          (values 'call '#f '#f))))
                                     g$type$8613$1&dy4A)))))))
                           (g$binding-type$8016$1&dy4A g$b$8612$1&dy4A))))
                       (g$label->binding$8014$1&dy4A
                         g$label$8611$1&dy4A
                         g$r$8604$1&dy4A))))
                   (g$id->label$8012$1&dy4A g$id$8610$1&dy4A))
                  (values 'call '#f '#f))))
             (g$syntax-car$7996$1&dy4A g$e$8603$1&dy4A))
            ((case-lambda
               ((g$d$8615$1&dy4A)
                (if (g$self-evaluating?$8007$1&dy4A g$d$8615$1&dy4A)
                  (values 'constant g$d$8615$1&dy4A '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$8010$1&dy4A g$e$8603$1&dy4A)))))))
   (g$sanitize-binding$8027$1&dy4A
     g$sanitize-binding$11703$1&dy4A
     (case-lambda
       ((g$x$8616$1&dy4A g$src$8617$1&dy4A)
        (if (procedure? g$x$8616$1&dy4A)
          (g$cons*$5724$1&dy4A 'local-macro g$x$8616$1&dy4A g$src$8617$1&dy4A)
          (if (if (pair? g$x$8616$1&dy4A)
                (if (eq? (car g$x$8616$1&dy4A) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8616$1&dy4A)))
                  '#f)
                '#f)
            (g$cons*$5724$1&dy4A
              'local-macro!
              (cdr g$x$8616$1&dy4A)
              g$src$8617$1&dy4A)
            (if (if (pair? g$x$8616$1&dy4A)
                  (begin '#f (eq? (car g$x$8616$1&dy4A) '$rtd))
                  '#f)
              g$x$8616$1&dy4A
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8616$1&dy4A)))))))
   (g$make-variable-transformer$8028$1&dy4A
     g$make-variable-transformer$11704$1&dy4A
     (case-lambda
       ((g$x$8618$1&dy4A)
        (if (procedure? g$x$8618$1&dy4A)
          (cons 'macro! g$x$8618$1&dy4A)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8618$1&dy4A)))))
   (g$variable-transformer?$8029$1&dy4A
     g$variable-transformer?$11705$1&dy4A
     (case-lambda
       ((g$x$8619$1&dy4A)
        (if (pair? g$x$8619$1&dy4A)
          (if (eq? (car g$x$8619$1&dy4A) 'macro!)
            (begin '#f (procedure? (cdr g$x$8619$1&dy4A)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$8030$1&dy4A
     g$variable-transformer-procedure$11706$1&dy4A
     (case-lambda
       ((g$x$8620$1&dy4A)
        (if (g$variable-transformer?$8029$1&dy4A g$x$8620$1&dy4A)
          (cdr g$x$8620$1&dy4A)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8620$1&dy4A)))))
   (g$make-eval-transformer$8031$1&dy4A
     g$make-eval-transformer$11707$1&dy4A
     (case-lambda
       ((g$x$8621$1&dy4A)
        (g$sanitize-binding$8027$1&dy4A
          (eval-core (g$expanded->core$7517$1&dy4A g$x$8621$1&dy4A))
          g$x$8621$1&dy4A))))
   (g$parse-define$8217$1&dy4A
     g$parse-define$11708$1&dy4A
     (case-lambda
       ((g$x$8622$1&dy4A)
        ((case-lambda
           ((g$t$8623$1&dy4A)
            ((case-lambda
               ((g$ls/false$8624$1&dy4A)
                (if (if g$ls/false$8624$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8625$1&dy4A
                               g$fmls$8626$1&dy4A
                               g$b$8627$1&dy4A
                               g$b*$8628$1&dy4A)
                             (g$id?$7999$1&dy4A g$id$8625$1&dy4A)))
                          g$ls/false$8624$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8629$1&dy4A
                         g$fmls$8630$1&dy4A
                         g$b$8631$1&dy4A
                         g$b*$8632$1&dy4A)
                       (begin
                         (g$verify-formals$8297$1&dy4A
                           g$fmls$8630$1&dy4A
                           g$x$8622$1&dy4A)
                         (values
                           g$id$8629$1&dy4A
                           (cons
                             'defun
                             (cons
                               g$fmls$8630$1&dy4A
                               (cons g$b$8631$1&dy4A g$b*$8632$1&dy4A)))))))
                    g$ls/false$8624$1&dy4A)
                  ((case-lambda
                     ((g$t$8633$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$8634$1&dy4A)
                          (if (if g$ls/false$8634$1&dy4A
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8635$1&dy4A g$val$8636$1&dy4A)
                                       (g$id?$7999$1&dy4A g$id$8635$1&dy4A)))
                                    g$ls/false$8634$1&dy4A))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8637$1&dy4A g$val$8638$1&dy4A)
                                 (values
                                   g$id$8637$1&dy4A
                                   (cons 'expr g$val$8638$1&dy4A))))
                              g$ls/false$8634$1&dy4A)
                            ((case-lambda
                               ((g$t$8639$1&dy4A)
                                ((case-lambda
                                   ((g$ls/false$8640$1&dy4A)
                                    (if (if g$ls/false$8640$1&dy4A
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8641$1&dy4A)
                                                 (g$id?$7999$1&dy4A
                                                   g$id$8641$1&dy4A)))
                                              g$ls/false$8640$1&dy4A))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8642$1&dy4A)
                                           (values
                                             g$id$8642$1&dy4A
                                             (cons
                                               'expr
                                               (g$bless$8240$1&dy4A '(void))))))
                                        g$ls/false$8640$1&dy4A)
                                      (g$syntax-violation$8388$1&dy4A
                                        '#f
                                        '"invalid syntax"
                                        g$t$8639$1&dy4A))))
                                 (g$syntax-dispatch$8277$1&dy4A
                                   g$t$8639$1&dy4A
                                   '(_ any)))))
                             g$t$8633$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$8633$1&dy4A
                         '(_ any any)))))
                   g$t$8623$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8623$1&dy4A
               '(_ (any . any) any . each-any)))))
         g$x$8622$1&dy4A))))
   (g$parse-define-syntax$8218$1&dy4A
     g$parse-define-syntax$11709$1&dy4A
     (case-lambda
       ((g$x$8643$1&dy4A)
        ((case-lambda
           ((g$t$8644$1&dy4A)
            ((case-lambda
               ((g$ls/false$8645$1&dy4A)
                (if (if g$ls/false$8645$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8646$1&dy4A g$val$8647$1&dy4A)
                             (g$id?$7999$1&dy4A g$id$8646$1&dy4A)))
                          g$ls/false$8645$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8648$1&dy4A g$val$8649$1&dy4A)
                       (values g$id$8648$1&dy4A g$val$8649$1&dy4A)))
                    g$ls/false$8645$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8644$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$8644$1&dy4A '(_ any any)))))
         g$x$8643$1&dy4A))))
   (g$scheme-stx-hashtable$8219$1&dy4A
     g$scheme-stx-hashtable$11710$1&dy4A
     (g$make-eq-hashtable$6160$1&dy4A))
   (g$scheme-stx$8220$1&dy4A
     g$scheme-stx$11711$1&dy4A
     (case-lambda
       ((g$sym$8650$1&dy4A)
        ((case-lambda
           ((g$t$8651$1&dy4A)
            (if g$t$8651$1&dy4A
              g$t$8651$1&dy4A
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8652$1&dy4A)
                    ((case-lambda
                       ((g$stx$8653$1&dy4A)
                        ((case-lambda
                           ((g$stx$8654$1&dy4A)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$6164$1&dy4A
                                    g$scheme-stx-hashtable$8219$1&dy4A
                                    g$sym$8650$1&dy4A
                                    g$stx$8654$1&dy4A)
                                  g$stx$8654$1&dy4A))))))
                         ((case-lambda
                            ((g$t$8655$1&dy4A)
                             (if g$t$8655$1&dy4A
                               ((case-lambda
                                  ((g$x$8656$1&dy4A)
                                   ((case-lambda
                                      ((g$name$8657$1&dy4A g$label$8658$1&dy4A)
                                       (g$add-subst$7989$1&dy4A
                                         (g$make-rib$7948$1&dy4A
                                           (list g$name$8657$1&dy4A)
                                           (list g$top-mark*$7936$1&dy4A)
                                           (list g$label$8658$1&dy4A)
                                           '#f
                                           '#f)
                                         g$stx$8653$1&dy4A)))
                                    (car g$x$8656$1&dy4A)
                                    (cdr g$x$8656$1&dy4A))))
                                g$t$8655$1&dy4A)
                               g$stx$8653$1&dy4A)))
                          (g$assq$5712$1&dy4A
                            g$sym$8650$1&dy4A
                            g$subst$8652$1&dy4A)))))
                     (g$make-stx$7972$1&dy4A
                       g$sym$8650$1&dy4A
                       g$top-mark*$7936$1&dy4A
                       '()
                       '()))))
                 (g$library-subst$7766$1&dy4A
                   (g$find-library-by-name$7802$1&dy4A
                     '(psyntax system $all))))))))
         (g$hashtable-ref$6163$1&dy4A
           g$scheme-stx-hashtable$8219$1&dy4A
           g$sym$8650$1&dy4A
           '#f)))))
   (g$lexical-var$8221$1&dy4A g$lexical-var$11712$1&dy4A car)
   (g$lexical-mutable?$8222$1&dy4A g$lexical-mutable?$11713$1&dy4A cdr)
   (g$set-lexical-mutable!$8223$1&dy4A
     g$set-lexical-mutable!$11714$1&dy4A
     set-cdr!)
   (g$add-lexical$8224$1&dy4A
     g$add-lexical$11715$1&dy4A
     (case-lambda
       ((g$lab$8659$1&dy4A g$lex$8660$1&dy4A g$r$8661$1&dy4A)
        (cons
          (g$cons*$5724$1&dy4A g$lab$8659$1&dy4A 'lexical g$lex$8660$1&dy4A '#f)
          g$r$8661$1&dy4A))))
   (g$add-lexicals$8225$1&dy4A
     g$add-lexicals$11716$1&dy4A
     (case-lambda
       ((g$lab*$8662$1&dy4A g$lex*$8663$1&dy4A g$r$8664$1&dy4A)
        (if (null? g$lab*$8662$1&dy4A)
          g$r$8664$1&dy4A
          (g$add-lexicals$8225$1&dy4A
            (cdr g$lab*$8662$1&dy4A)
            (cdr g$lex*$8663$1&dy4A)
            (g$add-lexical$8224$1&dy4A
              (car g$lab*$8662$1&dy4A)
              (car g$lex*$8663$1&dy4A)
              g$r$8664$1&dy4A))))))
   (g$letrec-helper$8226$1&dy4A
     g$letrec-helper$11717$1&dy4A
     (case-lambda
       ((g$e$8665$1&dy4A g$r$8666$1&dy4A g$mr$8667$1&dy4A g$build$8668$1&dy4A)
        ((case-lambda
           ((g$t$8669$1&dy4A)
            ((case-lambda
               ((g$ls/false$8670$1&dy4A)
                (if g$ls/false$8670$1&dy4A
                  (apply
                    (case-lambda
                      ((g$lhs*$8671$1&dy4A
                         g$rhs*$8672$1&dy4A
                         g$b$8673$1&dy4A
                         g$b*$8674$1&dy4A)
                       (if (not (g$valid-bound-ids?$8004$1&dy4A
                                  g$lhs*$8671$1&dy4A))
                         (g$invalid-fmls-error$8242$1&dy4A
                           g$e$8665$1&dy4A
                           g$lhs*$8671$1&dy4A)
                         ((case-lambda
                            ((g$lex*$8675$1&dy4A g$lab*$8676$1&dy4A)
                             ((case-lambda
                                ((g$rib$8677$1&dy4A g$r$8678$1&dy4A)
                                 ((case-lambda
                                    ((g$body$8679$1&dy4A g$rhs*$8680$1&dy4A)
                                     (g$build$8668$1&dy4A
                                       '#f
                                       g$lex*$8675$1&dy4A
                                       g$rhs*$8680$1&dy4A
                                       g$body$8679$1&dy4A)))
                                  (g$chi-internal$8306$1&dy4A
                                    (g$add-subst$7989$1&dy4A
                                      g$rib$8677$1&dy4A
                                      (cons g$b$8673$1&dy4A g$b*$8674$1&dy4A))
                                    g$r$8678$1&dy4A
                                    g$mr$8667$1&dy4A)
                                  (g$chi-expr*$8293$1&dy4A
                                    (map (case-lambda
                                           ((g$x$8681$1&dy4A)
                                            (g$add-subst$7989$1&dy4A
                                              g$rib$8677$1&dy4A
                                              g$x$8681$1&dy4A)))
                                         g$rhs*$8672$1&dy4A)
                                    g$r$8678$1&dy4A
                                    g$mr$8667$1&dy4A))))
                              (g$make-full-rib$7967$1&dy4A
                                g$lhs*$8671$1&dy4A
                                g$lab*$8676$1&dy4A)
                              (g$add-lexicals$8225$1&dy4A
                                g$lab*$8676$1&dy4A
                                g$lex*$8675$1&dy4A
                                g$r$8666$1&dy4A))))
                          (map g$gen-lexical$7938$1&dy4A g$lhs*$8671$1&dy4A)
                          (map g$gen-label$7940$1&dy4A g$lhs*$8671$1&dy4A)))))
                    g$ls/false$8670$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8669$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8669$1&dy4A
               '(_ #(each (any any)) any . each-any)))))
         g$e$8665$1&dy4A))))
   (g$letrec-transformer$8227$1&dy4A
     g$letrec-transformer$11718$1&dy4A
     (case-lambda
       ((g$e$8682$1&dy4A g$r$8683$1&dy4A g$mr$8684$1&dy4A)
        (g$letrec-helper$8226$1&dy4A
          g$e$8682$1&dy4A
          g$r$8683$1&dy4A
          g$mr$8684$1&dy4A
          g$build-letrec$7930$1&dy4A))))
   (g$letrec*-transformer$8228$1&dy4A
     g$letrec*-transformer$11719$1&dy4A
     (case-lambda
       ((g$e$8685$1&dy4A g$r$8686$1&dy4A g$mr$8687$1&dy4A)
        (g$letrec-helper$8226$1&dy4A
          g$e$8685$1&dy4A
          g$r$8686$1&dy4A
          g$mr$8687$1&dy4A
          g$build-letrec*$7931$1&dy4A))))
   (g$fluid-let-syntax-transformer$8229$1&dy4A
     g$fluid-let-syntax-transformer$11720$1&dy4A
     (case-lambda
       ((g$e$8688$1&dy4A g$r$8689$1&dy4A g$mr$8690$1&dy4A)
        (letrec* ((g$lookup$8691$1&dy4A
                    (case-lambda
                      ((g$x$8701$1&dy4A)
                       ((case-lambda
                          ((g$t$8702$1&dy4A)
                           (if g$t$8702$1&dy4A
                             g$t$8702$1&dy4A
                             (begin
                               '#f
                               (g$syntax-violation$8388$1&dy4A
                                 '#f
                                 '"unbound identifier"
                                 g$e$8688$1&dy4A
                                 g$x$8701$1&dy4A)))))
                        (g$id->label$8012$1&dy4A g$x$8701$1&dy4A))))))
          ((case-lambda
             ((g$t$8692$1&dy4A)
              ((case-lambda
                 ((g$ls/false$8693$1&dy4A)
                  (if g$ls/false$8693$1&dy4A
                    (apply
                      (case-lambda
                        ((g$lhs*$8694$1&dy4A
                           g$rhs*$8695$1&dy4A
                           g$b$8696$1&dy4A
                           g$b*$8697$1&dy4A)
                         (if (not (g$valid-bound-ids?$8004$1&dy4A
                                    g$lhs*$8694$1&dy4A))
                           (g$invalid-fmls-error$8242$1&dy4A
                             g$e$8688$1&dy4A
                             g$lhs*$8694$1&dy4A)
                           ((case-lambda
                              ((g$lab*$8698$1&dy4A g$rhs*$8699$1&dy4A)
                               (g$chi-internal$8306$1&dy4A
                                 (cons g$b$8696$1&dy4A g$b*$8697$1&dy4A)
                                 (append
                                   (map cons
                                        g$lab*$8698$1&dy4A
                                        g$rhs*$8699$1&dy4A)
                                   g$r$8689$1&dy4A)
                                 (append
                                   (map cons
                                        g$lab*$8698$1&dy4A
                                        g$rhs*$8699$1&dy4A)
                                   g$mr$8690$1&dy4A))))
                            (map g$lookup$8691$1&dy4A g$lhs*$8694$1&dy4A)
                            (map (case-lambda
                                   ((g$x$8700$1&dy4A)
                                    (g$make-eval-transformer$8031$1&dy4A
                                      (g$expand-transformer$8322$1&dy4A
                                        g$x$8700$1&dy4A
                                        g$mr$8690$1&dy4A))))
                                 g$rhs*$8695$1&dy4A)))))
                      g$ls/false$8693$1&dy4A)
                    (g$syntax-violation$8388$1&dy4A
                      '#f
                      '"invalid syntax"
                      g$t$8692$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$8692$1&dy4A
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8688$1&dy4A)))))
   (g$type-descriptor-transformer$8230$1&dy4A
     g$type-descriptor-transformer$11721$1&dy4A
     (case-lambda
       ((g$e$8703$1&dy4A g$r$8704$1&dy4A g$mr$8705$1&dy4A)
        ((case-lambda
           ((g$t$8706$1&dy4A)
            ((case-lambda
               ((g$ls/false$8707$1&dy4A)
                (if (if g$ls/false$8707$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8708$1&dy4A)
                             (g$id?$7999$1&dy4A g$id$8708$1&dy4A)))
                          g$ls/false$8707$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8709$1&dy4A)
                       ((case-lambda
                          ((g$lab$8710$1&dy4A)
                           ((case-lambda
                              ((g$b$8711$1&dy4A)
                               ((case-lambda
                                  ((g$type$8712$1&dy4A)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8710$1&dy4A)
                                           (g$raise-unbound-error$8018$1&dy4A
                                             g$id$8709$1&dy4A)
                                           (void))
                                         (if (not (if (eq? g$type$8712$1&dy4A
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$8017$1&dy4A
                                                               g$b$8711$1&dy4A))))
                                                    '#f))
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"not a record type"
                                             g$e$8703$1&dy4A)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$8017$1&dy4A
                                             g$b$8711$1&dy4A))))))))
                                (g$binding-type$8016$1&dy4A g$b$8711$1&dy4A))))
                            (g$label->binding$8014$1&dy4A
                              g$lab$8710$1&dy4A
                              g$r$8704$1&dy4A))))
                        (g$id->label$8012$1&dy4A g$id$8709$1&dy4A))))
                    g$ls/false$8707$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8706$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$8706$1&dy4A '(_ any)))))
         g$e$8703$1&dy4A))))
   (g$record-type-descriptor-transformer$8231$1&dy4A
     g$record-type-descriptor-transformer$11722$1&dy4A
     (case-lambda
       ((g$e$8713$1&dy4A g$r$8714$1&dy4A g$mr$8715$1&dy4A)
        ((case-lambda
           ((g$t$8716$1&dy4A)
            ((case-lambda
               ((g$ls/false$8717$1&dy4A)
                (if (if g$ls/false$8717$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8718$1&dy4A)
                             (g$id?$7999$1&dy4A g$id$8718$1&dy4A)))
                          g$ls/false$8717$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8719$1&dy4A)
                       ((case-lambda
                          ((g$lab$8720$1&dy4A)
                           ((case-lambda
                              ((g$b$8721$1&dy4A)
                               ((case-lambda
                                  ((g$type$8722$1&dy4A)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8720$1&dy4A)
                                           (g$raise-unbound-error$8018$1&dy4A
                                             g$id$8719$1&dy4A)
                                           (void))
                                         (if (not (if (eq? g$type$8722$1&dy4A
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$8017$1&dy4A
                                                          g$b$8721$1&dy4A)))
                                                    '#f))
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"not a record type"
                                             g$e$8713$1&dy4A)
                                           (void))
                                         (g$chi-expr$8295$1&dy4A
                                           (car (g$binding-value$8017$1&dy4A
                                                  g$b$8721$1&dy4A))
                                           g$r$8714$1&dy4A
                                           g$mr$8715$1&dy4A)))))))
                                (g$binding-type$8016$1&dy4A g$b$8721$1&dy4A))))
                            (g$label->binding$8014$1&dy4A
                              g$lab$8720$1&dy4A
                              g$r$8714$1&dy4A))))
                        (g$id->label$8012$1&dy4A g$id$8719$1&dy4A))))
                    g$ls/false$8717$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8716$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$8716$1&dy4A '(_ any)))))
         g$e$8713$1&dy4A))))
   (g$record-constructor-descriptor-transformer$8232$1&dy4A
     g$record-constructor-descriptor-transformer$11723$1&dy4A
     (case-lambda
       ((g$e$8723$1&dy4A g$r$8724$1&dy4A g$mr$8725$1&dy4A)
        ((case-lambda
           ((g$t$8726$1&dy4A)
            ((case-lambda
               ((g$ls/false$8727$1&dy4A)
                (if (if g$ls/false$8727$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8728$1&dy4A)
                             (g$id?$7999$1&dy4A g$id$8728$1&dy4A)))
                          g$ls/false$8727$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8729$1&dy4A)
                       ((case-lambda
                          ((g$lab$8730$1&dy4A)
                           ((case-lambda
                              ((g$b$8731$1&dy4A)
                               ((case-lambda
                                  ((g$type$8732$1&dy4A)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8730$1&dy4A)
                                           (g$raise-unbound-error$8018$1&dy4A
                                             g$id$8729$1&dy4A)
                                           (void))
                                         (if (not (if (eq? g$type$8732$1&dy4A
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$8017$1&dy4A
                                                          g$b$8731$1&dy4A)))
                                                    '#f))
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid type"
                                             g$e$8723$1&dy4A)
                                           (void))
                                         (g$chi-expr$8295$1&dy4A
                                           (g$cadr$5886$1&dy4A
                                             (g$binding-value$8017$1&dy4A
                                               g$b$8731$1&dy4A))
                                           g$r$8724$1&dy4A
                                           g$mr$8725$1&dy4A)))))))
                                (g$binding-type$8016$1&dy4A g$b$8731$1&dy4A))))
                            (g$label->binding$8014$1&dy4A
                              g$lab$8730$1&dy4A
                              g$r$8724$1&dy4A))))
                        (g$id->label$8012$1&dy4A g$id$8729$1&dy4A))))
                    g$ls/false$8727$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8726$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$8726$1&dy4A '(_ any)))))
         g$e$8723$1&dy4A))))
   (g$when-macro$8233$1&dy4A
     g$when-macro$11724$1&dy4A
     (case-lambda
       ((g$e$8733$1&dy4A)
        ((case-lambda
           ((g$t$8734$1&dy4A)
            ((case-lambda
               ((g$ls/false$8735$1&dy4A)
                (if g$ls/false$8735$1&dy4A
                  (apply
                    (case-lambda
                      ((g$test$8736$1&dy4A g$e$8737$1&dy4A g$e*$8738$1&dy4A)
                       (g$bless$8240$1&dy4A
                         (list
                           'if
                           g$test$8736$1&dy4A
                           (cons
                             'begin
                             (cons g$e$8737$1&dy4A g$e*$8738$1&dy4A))))))
                    g$ls/false$8735$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8734$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8734$1&dy4A
               '(_ any any . each-any)))))
         g$e$8733$1&dy4A))))
   (g$unless-macro$8234$1&dy4A
     g$unless-macro$11725$1&dy4A
     (case-lambda
       ((g$e$8739$1&dy4A)
        ((case-lambda
           ((g$t$8740$1&dy4A)
            ((case-lambda
               ((g$ls/false$8741$1&dy4A)
                (if g$ls/false$8741$1&dy4A
                  (apply
                    (case-lambda
                      ((g$test$8742$1&dy4A g$e$8743$1&dy4A g$e*$8744$1&dy4A)
                       (g$bless$8240$1&dy4A
                         (list
                           'if
                           (list 'not g$test$8742$1&dy4A)
                           (cons
                             'begin
                             (cons g$e$8743$1&dy4A g$e*$8744$1&dy4A))))))
                    g$ls/false$8741$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8740$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8740$1&dy4A
               '(_ any any . each-any)))))
         g$e$8739$1&dy4A))))
   (g$if-transformer$8235$1&dy4A
     g$if-transformer$11726$1&dy4A
     (case-lambda
       ((g$e$8745$1&dy4A g$r$8746$1&dy4A g$mr$8747$1&dy4A)
        ((case-lambda
           ((g$t$8748$1&dy4A)
            ((case-lambda
               ((g$ls/false$8749$1&dy4A)
                (if g$ls/false$8749$1&dy4A
                  (apply
                    (case-lambda
                      ((g$e0$8750$1&dy4A g$e1$8751$1&dy4A g$e2$8752$1&dy4A)
                       (list
                         'if
                         (g$chi-expr$8295$1&dy4A
                           g$e0$8750$1&dy4A
                           g$r$8746$1&dy4A
                           g$mr$8747$1&dy4A)
                         (g$chi-expr$8295$1&dy4A
                           g$e1$8751$1&dy4A
                           g$r$8746$1&dy4A
                           g$mr$8747$1&dy4A)
                         (g$chi-expr$8295$1&dy4A
                           g$e2$8752$1&dy4A
                           g$r$8746$1&dy4A
                           g$mr$8747$1&dy4A))))
                    g$ls/false$8749$1&dy4A)
                  ((case-lambda
                     ((g$t$8753$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$8754$1&dy4A)
                          (if g$ls/false$8754$1&dy4A
                            (apply
                              (case-lambda
                                ((g$e0$8755$1&dy4A g$e1$8756$1&dy4A)
                                 (list
                                   'if
                                   (g$chi-expr$8295$1&dy4A
                                     g$e0$8755$1&dy4A
                                     g$r$8746$1&dy4A
                                     g$mr$8747$1&dy4A)
                                   (g$chi-expr$8295$1&dy4A
                                     g$e1$8756$1&dy4A
                                     g$r$8746$1&dy4A
                                     g$mr$8747$1&dy4A)
                                   (g$build-void$7929$1&dy4A))))
                              g$ls/false$8754$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$8753$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$8753$1&dy4A
                         '(_ any any)))))
                   g$t$8748$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$8748$1&dy4A '(_ any any any)))))
         g$e$8745$1&dy4A))))
   (g$case-macro$8236$1&dy4A
     g$case-macro$11727$1&dy4A
     (case-lambda
       ((g$e$8757$1&dy4A)
        (letrec* ((g$build-last$8758$1&dy4A
                    (case-lambda
                      ((g$cls$8778$1&dy4A)
                       ((case-lambda
                          ((g$t$8779$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$8780$1&dy4A)
                               (if g$ls/false$8780$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$e$8781$1&dy4A g$e*$8782$1&dy4A)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8781$1&dy4A
                                          g$e*$8782$1&dy4A))))
                                   g$ls/false$8780$1&dy4A)
                                 ((case-lambda
                                    ((g$t$8783$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$8784$1&dy4A)
                                         (if g$ls/false$8784$1&dy4A
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8759$1&dy4A
                                                  g$cls$8778$1&dy4A
                                                  '(if #f #f))))
                                             g$ls/false$8784$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$t$8783$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$8783$1&dy4A
                                        '_))))
                                  g$t$8779$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$8779$1&dy4A
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8778$1&dy4A))))
                  (g$build-one$8759$1&dy4A
                    (case-lambda
                      ((g$cls$8771$1&dy4A g$k$8772$1&dy4A)
                       ((case-lambda
                          ((g$t$8773$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$8774$1&dy4A)
                               (if g$ls/false$8774$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$d*$8775$1&dy4A
                                        g$e$8776$1&dy4A
                                        g$e*$8777$1&dy4A)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8775$1&dy4A))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8776$1&dy4A
                                            g$e*$8777$1&dy4A))
                                        g$k$8772$1&dy4A)))
                                   g$ls/false$8774$1&dy4A)
                                 (g$syntax-violation$8388$1&dy4A
                                   '#f
                                   '"invalid syntax"
                                   g$t$8773$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$8773$1&dy4A
                              '(each-any any . each-any)))))
                        g$cls$8771$1&dy4A)))))
          ((case-lambda
             ((g$t$8760$1&dy4A)
              ((case-lambda
                 ((g$ls/false$8761$1&dy4A)
                  (if g$ls/false$8761$1&dy4A
                    (apply
                      (case-lambda
                        ((g$expr$8762$1&dy4A)
                         (g$bless$8240$1&dy4A
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8762$1&dy4A))
                               '((if #f #f)))))))
                      g$ls/false$8761$1&dy4A)
                    ((case-lambda
                       ((g$t$8763$1&dy4A)
                        ((case-lambda
                           ((g$ls/false$8764$1&dy4A)
                            (if g$ls/false$8764$1&dy4A
                              (apply
                                (case-lambda
                                  ((g$expr$8765$1&dy4A
                                     g$cls$8766$1&dy4A
                                     g$cls*$8767$1&dy4A)
                                   (g$bless$8240$1&dy4A
                                     (list
                                       'let
                                       (list (list 't g$expr$8765$1&dy4A))
                                       ((letrec ((g$f$8768$1&dy4A
                                                   (case-lambda
                                                     ((g$cls$8769$1&dy4A
                                                        g$cls*$8770$1&dy4A)
                                                      (if (null?
                                                            g$cls*$8770$1&dy4A)
                                                        (g$build-last$8758$1&dy4A
                                                          g$cls$8769$1&dy4A)
                                                        (g$build-one$8759$1&dy4A
                                                          g$cls$8769$1&dy4A
                                                          (g$f$8768$1&dy4A
                                                            (car g$cls*$8770$1&dy4A)
                                                            (cdr g$cls*$8770$1&dy4A))))))))
                                          g$f$8768$1&dy4A)
                                        g$cls$8766$1&dy4A
                                        g$cls*$8767$1&dy4A)))))
                                g$ls/false$8764$1&dy4A)
                              (g$syntax-violation$8388$1&dy4A
                                '#f
                                '"invalid syntax"
                                g$t$8763$1&dy4A))))
                         (g$syntax-dispatch$8277$1&dy4A
                           g$t$8763$1&dy4A
                           '(_ any any . each-any)))))
                     g$t$8760$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A g$t$8760$1&dy4A '(_ any)))))
           g$e$8757$1&dy4A)))))
   (g$quote-transformer$8237$1&dy4A
     g$quote-transformer$11728$1&dy4A
     (case-lambda
       ((g$e$8785$1&dy4A g$r$8786$1&dy4A g$mr$8787$1&dy4A)
        ((case-lambda
           ((g$t$8788$1&dy4A)
            ((case-lambda
               ((g$ls/false$8789$1&dy4A)
                (if g$ls/false$8789$1&dy4A
                  (apply
                    (case-lambda
                      ((g$datum$8790$1&dy4A)
                       (list
                         'quote
                         (g$stx->datum$8010$1&dy4A g$datum$8790$1&dy4A))))
                    g$ls/false$8789$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8788$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$8788$1&dy4A '(_ any)))))
         g$e$8785$1&dy4A))))
   (g$case-lambda-transformer$8238$1&dy4A
     g$case-lambda-transformer$11729$1&dy4A
     (case-lambda
       ((g$e$8791$1&dy4A g$r$8792$1&dy4A g$mr$8793$1&dy4A)
        ((case-lambda
           ((g$t$8794$1&dy4A)
            ((case-lambda
               ((g$ls/false$8795$1&dy4A)
                (if g$ls/false$8795$1&dy4A
                  (apply
                    (case-lambda
                      ((g$fmls*$8796$1&dy4A g$b*$8797$1&dy4A g$b**$8798$1&dy4A)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8299$1&dy4A
                              g$e$8791$1&dy4A
                              g$fmls*$8796$1&dy4A
                              (map cons g$b*$8797$1&dy4A g$b**$8798$1&dy4A)
                              g$r$8792$1&dy4A
                              g$mr$8793$1&dy4A)))
                         (case-lambda
                           ((g$fmls*$8801$1&dy4A g$body*$8802$1&dy4A)
                            ((case-lambda
                               ((g$body*$8803$1&dy4A g$fmls*$8804$1&dy4A)
                                (g$build-case-lambda$7926$1&dy4A
                                  '#f
                                  g$fmls*$8804$1&dy4A
                                  g$body*$8803$1&dy4A)))
                             g$body*$8802$1&dy4A
                             g$fmls*$8801$1&dy4A))))))
                    g$ls/false$8795$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8794$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8794$1&dy4A
               '(_ . #(each (any any . each-any)))))))
         g$e$8791$1&dy4A))))
   (g$lambda-transformer$8239$1&dy4A
     g$lambda-transformer$11730$1&dy4A
     (case-lambda
       ((g$e$8805$1&dy4A g$r$8806$1&dy4A g$mr$8807$1&dy4A)
        ((case-lambda
           ((g$t$8808$1&dy4A)
            ((case-lambda
               ((g$ls/false$8809$1&dy4A)
                (if g$ls/false$8809$1&dy4A
                  (apply
                    (case-lambda
                      ((g$fmls$8810$1&dy4A g$b$8811$1&dy4A g$b*$8812$1&dy4A)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8298$1&dy4A
                              g$e$8805$1&dy4A
                              g$fmls$8810$1&dy4A
                              (cons g$b$8811$1&dy4A g$b*$8812$1&dy4A)
                              g$r$8806$1&dy4A
                              g$mr$8807$1&dy4A)))
                         (case-lambda
                           ((g$fmls$8815$1&dy4A g$body$8816$1&dy4A)
                            ((case-lambda
                               ((g$body$8817$1&dy4A g$fmls$8818$1&dy4A)
                                (g$build-lambda$7925$1&dy4A
                                  '#f
                                  g$fmls$8818$1&dy4A
                                  g$body$8817$1&dy4A)))
                             g$body$8816$1&dy4A
                             g$fmls$8815$1&dy4A))))))
                    g$ls/false$8809$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8808$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8808$1&dy4A
               '(_ any any . each-any)))))
         g$e$8805$1&dy4A))))
   (g$bless$8240$1&dy4A
     g$bless$11731$1&dy4A
     (case-lambda
       ((g$x$8819$1&dy4A)
        (g$mkstx$7987$1&dy4A
          ((letrec ((g$f$8820$1&dy4A
                      (case-lambda
                        ((g$x$8821$1&dy4A)
                         (if (g$stx?$7971$1&dy4A g$x$8821$1&dy4A)
                           g$x$8821$1&dy4A
                           (if (pair? g$x$8821$1&dy4A)
                             (cons
                               (g$f$8820$1&dy4A (car g$x$8821$1&dy4A))
                               (g$f$8820$1&dy4A (cdr g$x$8821$1&dy4A)))
                             (if (symbol? g$x$8821$1&dy4A)
                               (g$scheme-stx$8220$1&dy4A g$x$8821$1&dy4A)
                               (if (vector? g$x$8821$1&dy4A)
                                 (vector-map g$f$8820$1&dy4A g$x$8821$1&dy4A)
                                 g$x$8821$1&dy4A))))))))
             g$f$8820$1&dy4A)
           g$x$8819$1&dy4A)
          '()
          '()
          '()))))
   (g$with-syntax-macro$8241$1&dy4A
     g$with-syntax-macro$11732$1&dy4A
     (case-lambda
       ((g$e$8822$1&dy4A)
        ((case-lambda
           ((g$t$8823$1&dy4A)
            ((case-lambda
               ((g$ls/false$8824$1&dy4A)
                (if g$ls/false$8824$1&dy4A
                  (apply
                    (case-lambda
                      ((g$pat*$8825$1&dy4A
                         g$expr*$8826$1&dy4A
                         g$b$8827$1&dy4A
                         g$b*$8828$1&dy4A)
                       ((case-lambda
                          ((g$idn*$8829$1&dy4A)
                           (begin
                             (g$verify-formals$8297$1&dy4A
                               (map car g$idn*$8829$1&dy4A)
                               g$e$8822$1&dy4A)
                             ((case-lambda
                                ((g$t*$8830$1&dy4A)
                                 (g$bless$8240$1&dy4A
                                   (list
                                     'let
                                     (map list
                                          g$t*$8830$1&dy4A
                                          g$expr*$8826$1&dy4A)
                                     ((letrec ((g$f$8831$1&dy4A
                                                 (case-lambda
                                                   ((g$pat*$8832$1&dy4A
                                                      g$t*$8833$1&dy4A)
                                                    (if (null?
                                                          g$pat*$8832$1&dy4A)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8827$1&dy4A
                                                            g$b*$8828$1&dy4A)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8833$1&dy4A)
                                                        '()
                                                        (list
                                                          (car g$pat*$8832$1&dy4A)
                                                          (g$f$8831$1&dy4A
                                                            (cdr g$pat*$8832$1&dy4A)
                                                            (cdr g$t*$8833$1&dy4A)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8832$1&dy4A))
                                                            (car g$t*$8833$1&dy4A)))))))))
                                        g$f$8831$1&dy4A)
                                      g$pat*$8825$1&dy4A
                                      g$t*$8830$1&dy4A)))))
                              (g$generate-temporaries$8378$1&dy4A
                                g$expr*$8826$1&dy4A)))))
                        ((letrec ((g$f$8834$1&dy4A
                                    (case-lambda
                                      ((g$pat*$8835$1&dy4A)
                                       (if (null? g$pat*$8835$1&dy4A)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$8276$1&dy4A
                                                (car g$pat*$8835$1&dy4A)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8838$1&dy4A
                                                g$idn*$8839$1&dy4A)
                                              ((case-lambda
                                                 ((g$idn*$8840$1&dy4A
                                                    g$pat$8841$1&dy4A)
                                                  (append
                                                    g$idn*$8840$1&dy4A
                                                    (g$f$8834$1&dy4A
                                                      (cdr g$pat*$8835$1&dy4A)))))
                                               g$idn*$8839$1&dy4A
                                               g$pat$8838$1&dy4A)))))))))
                           g$f$8834$1&dy4A)
                         g$pat*$8825$1&dy4A))))
                    g$ls/false$8824$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8823$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8823$1&dy4A
               '(_ #(each (any any)) any . each-any)))))
         g$e$8822$1&dy4A))))
   (g$invalid-fmls-error$8242$1&dy4A
     g$invalid-fmls-error$11733$1&dy4A
     (case-lambda
       ((g$stx$8842$1&dy4A g$fmls$8843$1&dy4A)
        ((case-lambda
           ((g$t$8844$1&dy4A)
            ((case-lambda
               ((g$ls/false$8845$1&dy4A)
                (if g$ls/false$8845$1&dy4A
                  (apply
                    (case-lambda
                      ((g$id*$8846$1&dy4A g$last$8847$1&dy4A)
                       ((letrec ((g$f$8848$1&dy4A
                                   (case-lambda
                                     ((g$id*$8849$1&dy4A)
                                      (if (null? g$id*$8849$1&dy4A)
                                        (values)
                                        (if (not (g$id?$7999$1&dy4A
                                                   (car g$id*$8849$1&dy4A)))
                                          (g$syntax-violation$8388$1&dy4A
                                            '#f
                                            '"not an identifier"
                                            g$stx$8842$1&dy4A
                                            (car g$id*$8849$1&dy4A))
                                          (begin
                                            (g$f$8848$1&dy4A
                                              (cdr g$id*$8849$1&dy4A))
                                            (if (g$bound-id-member?$8006$1&dy4A
                                                  (car g$id*$8849$1&dy4A)
                                                  (cdr g$id*$8849$1&dy4A))
                                              (g$syntax-violation$8388$1&dy4A
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8842$1&dy4A
                                                (car g$id*$8849$1&dy4A))
                                              (void)))))))))
                          g$f$8848$1&dy4A)
                        (if (g$id?$7999$1&dy4A g$last$8847$1&dy4A)
                          (cons g$last$8847$1&dy4A g$id*$8846$1&dy4A)
                          (if (g$syntax-null?$7994$1&dy4A g$last$8847$1&dy4A)
                            g$id*$8846$1&dy4A
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"not an identifier"
                              g$stx$8842$1&dy4A
                              g$last$8847$1&dy4A))))))
                    g$ls/false$8845$1&dy4A)
                  ((case-lambda
                     ((g$t$8850$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$8851$1&dy4A)
                          (if g$ls/false$8851$1&dy4A
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8388$1&dy4A
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8842$1&dy4A
                                   g$fmls$8843$1&dy4A)))
                              g$ls/false$8851$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$8850$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A g$t$8850$1&dy4A '_))))
                   g$t$8844$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8844$1&dy4A
               '#(each+ any () any)))))
         g$fmls$8843$1&dy4A))))
   (g$let-macro$8243$1&dy4A
     g$let-macro$11734$1&dy4A
     (case-lambda
       ((g$stx$8852$1&dy4A)
        ((case-lambda
           ((g$t$8853$1&dy4A)
            ((case-lambda
               ((g$ls/false$8854$1&dy4A)
                (if g$ls/false$8854$1&dy4A
                  (apply
                    (case-lambda
                      ((g$lhs*$8855$1&dy4A
                         g$rhs*$8856$1&dy4A
                         g$b$8857$1&dy4A
                         g$b*$8858$1&dy4A)
                       (if (g$valid-bound-ids?$8004$1&dy4A g$lhs*$8855$1&dy4A)
                         (g$bless$8240$1&dy4A
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8855$1&dy4A
                                 (cons g$b$8857$1&dy4A g$b*$8858$1&dy4A)))
                             g$rhs*$8856$1&dy4A))
                         (g$invalid-fmls-error$8242$1&dy4A
                           g$stx$8852$1&dy4A
                           g$lhs*$8855$1&dy4A))))
                    g$ls/false$8854$1&dy4A)
                  ((case-lambda
                     ((g$t$8859$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$8860$1&dy4A)
                          (if (if g$ls/false$8860$1&dy4A
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8861$1&dy4A
                                         g$lhs*$8862$1&dy4A
                                         g$rhs*$8863$1&dy4A
                                         g$b$8864$1&dy4A
                                         g$b*$8865$1&dy4A)
                                       (g$id?$7999$1&dy4A g$f$8861$1&dy4A)))
                                    g$ls/false$8860$1&dy4A))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8866$1&dy4A
                                   g$lhs*$8867$1&dy4A
                                   g$rhs*$8868$1&dy4A
                                   g$b$8869$1&dy4A
                                   g$b*$8870$1&dy4A)
                                 (if (g$valid-bound-ids?$8004$1&dy4A
                                       g$lhs*$8867$1&dy4A)
                                   (g$bless$8240$1&dy4A
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8866$1&dy4A
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8867$1&dy4A
                                                 (cons
                                                   g$b$8869$1&dy4A
                                                   g$b*$8870$1&dy4A)))))
                                         g$f$8866$1&dy4A)
                                       g$rhs*$8868$1&dy4A))
                                   (g$invalid-fmls-error$8242$1&dy4A
                                     g$stx$8852$1&dy4A
                                     g$lhs*$8867$1&dy4A))))
                              g$ls/false$8860$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$8859$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$8859$1&dy4A
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8853$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8853$1&dy4A
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8852$1&dy4A))))
   (g$let-values-macro$8244$1&dy4A
     g$let-values-macro$11735$1&dy4A
     (case-lambda
       ((g$stx$8871$1&dy4A)
        (letrec* ((g$rename$8872$1&dy4A
                    (case-lambda
                      ((g$x$8923$1&dy4A g$old*$8924$1&dy4A g$new*$8925$1&dy4A)
                       (begin
                         (if (not (g$id?$7999$1&dy4A g$x$8923$1&dy4A))
                           (g$syntax-violation$8388$1&dy4A
                             '#f
                             '"not an indentifier"
                             g$stx$8871$1&dy4A
                             g$x$8923$1&dy4A)
                           (void))
                         (if (g$bound-id-member?$8006$1&dy4A
                               g$x$8923$1&dy4A
                               g$old*$8924$1&dy4A)
                           (g$syntax-violation$8388$1&dy4A
                             '#f
                             '"duplicate binding"
                             g$stx$8871$1&dy4A
                             g$x$8923$1&dy4A)
                           (void))
                         ((case-lambda
                            ((g$y$8926$1&dy4A)
                             (values
                               g$y$8926$1&dy4A
                               (cons g$x$8923$1&dy4A g$old*$8924$1&dy4A)
                               (cons g$y$8926$1&dy4A g$new*$8925$1&dy4A))))
                          (gensym
                            (g$syntax->datum$8391$1&dy4A g$x$8923$1&dy4A)))))))
                  (g$rename*$8873$1&dy4A
                    (case-lambda
                      ((g$x*$8914$1&dy4A g$old*$8915$1&dy4A g$new*$8916$1&dy4A)
                       (if (null? g$x*$8914$1&dy4A)
                         (values '() g$old*$8915$1&dy4A g$new*$8916$1&dy4A)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8872$1&dy4A
                                (car g$x*$8914$1&dy4A)
                                g$old*$8915$1&dy4A
                                g$new*$8916$1&dy4A)))
                           (case-lambda
                             ((g$x$8917$1&dy4A
                                g$old*$8918$1&dy4A
                                g$new*$8919$1&dy4A)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8873$1&dy4A
                                     (cdr g$x*$8914$1&dy4A)
                                     g$old*$8918$1&dy4A
                                     g$new*$8919$1&dy4A)))
                                (case-lambda
                                  ((g$x*$8920$1&dy4A
                                     g$old*$8921$1&dy4A
                                     g$new*$8922$1&dy4A)
                                   (values
                                     (cons g$x$8917$1&dy4A g$x*$8920$1&dy4A)
                                     g$old*$8921$1&dy4A
                                     g$new*$8922$1&dy4A))))))))))))
          ((case-lambda
             ((g$t$8874$1&dy4A)
              ((case-lambda
                 ((g$ls/false$8875$1&dy4A)
                  (if g$ls/false$8875$1&dy4A
                    (apply
                      (case-lambda
                        ((g$b$8876$1&dy4A g$b*$8877$1&dy4A)
                         (g$cons*$5724$1&dy4A
                           (g$bless$8240$1&dy4A 'let)
                           '()
                           g$b$8876$1&dy4A
                           g$b*$8877$1&dy4A)))
                      g$ls/false$8875$1&dy4A)
                    ((case-lambda
                       ((g$t$8878$1&dy4A)
                        ((case-lambda
                           ((g$ls/false$8879$1&dy4A)
                            (if g$ls/false$8879$1&dy4A
                              (apply
                                (case-lambda
                                  ((g$lhs*$8880$1&dy4A
                                     g$rhs*$8881$1&dy4A
                                     g$b$8882$1&dy4A
                                     g$b*$8883$1&dy4A)
                                   (g$bless$8240$1&dy4A
                                     ((letrec ((g$f$8884$1&dy4A
                                                 (case-lambda
                                                   ((g$lhs*$8885$1&dy4A
                                                      g$rhs*$8886$1&dy4A
                                                      g$old*$8887$1&dy4A
                                                      g$new*$8888$1&dy4A)
                                                    (if (null?
                                                          g$lhs*$8885$1&dy4A)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8887$1&dy4A
                                                               g$new*$8888$1&dy4A)
                                                          (cons
                                                            g$b$8882$1&dy4A
                                                            g$b*$8883$1&dy4A)))
                                                      ((case-lambda
                                                         ((g$t$8889$1&dy4A)
                                                          ((case-lambda
                                                             ((g$ls/false$8890$1&dy4A)
                                                              (if g$ls/false$8890$1&dy4A
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8891$1&dy4A)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8873$1&dy4A
                                                                            g$x*$8891$1&dy4A
                                                                            g$old*$8887$1&dy4A
                                                                            g$new*$8888$1&dy4A)))
                                                                       (case-lambda
                                                                         ((g$y*$8895$1&dy4A
                                                                            g$old*$8896$1&dy4A
                                                                            g$new*$8897$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$new*$8898$1&dy4A
                                                                                g$old*$8899$1&dy4A
                                                                                g$y*$8900$1&dy4A)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8886$1&dy4A))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8900$1&dy4A
                                                                                  (g$f$8884$1&dy4A
                                                                                    (cdr g$lhs*$8885$1&dy4A)
                                                                                    (cdr g$rhs*$8886$1&dy4A)
                                                                                    g$old*$8899$1&dy4A
                                                                                    g$new*$8898$1&dy4A)))))
                                                                           g$new*$8897$1&dy4A
                                                                           g$old*$8896$1&dy4A
                                                                           g$y*$8895$1&dy4A))))))
                                                                  g$ls/false$8890$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$t$8901$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8902$1&dy4A)
                                                                        (if g$ls/false$8902$1&dy4A
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8903$1&dy4A
                                                                                 g$x$8904$1&dy4A)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8872$1&dy4A
                                                                                      g$x$8904$1&dy4A
                                                                                      g$old*$8887$1&dy4A
                                                                                      g$new*$8888$1&dy4A)))
                                                                                 (case-lambda
                                                                                   ((g$y$8905$1&dy4A
                                                                                      g$old*$8906$1&dy4A
                                                                                      g$new*$8907$1&dy4A)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8873$1&dy4A
                                                                                           g$x*$8903$1&dy4A
                                                                                           g$old*$8906$1&dy4A
                                                                                           g$new*$8907$1&dy4A)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8908$1&dy4A
                                                                                           g$old*$8909$1&dy4A
                                                                                           g$new*$8910$1&dy4A)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8886$1&dy4A))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8908$1&dy4A
                                                                                               g$y$8905$1&dy4A)
                                                                                             (g$f$8884$1&dy4A
                                                                                               (cdr g$lhs*$8885$1&dy4A)
                                                                                               (cdr g$rhs*$8886$1&dy4A)
                                                                                               g$old*$8909$1&dy4A
                                                                                               g$new*$8910$1&dy4A)))))))))))
                                                                            g$ls/false$8902$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$t$8911$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8912$1&dy4A)
                                                                                  (if g$ls/false$8912$1&dy4A
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8913$1&dy4A)
                                                                                         (g$syntax-violation$8388$1&dy4A
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8871$1&dy4A
                                                                                           g$others$8913$1&dy4A)))
                                                                                      g$ls/false$8912$1&dy4A)
                                                                                    (g$syntax-violation$8388$1&dy4A
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8911$1&dy4A))))
                                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                                 g$t$8911$1&dy4A
                                                                                 'any))))
                                                                           g$t$8901$1&dy4A))))
                                                                     (g$syntax-dispatch$8277$1&dy4A
                                                                       g$t$8901$1&dy4A
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8889$1&dy4A))))
                                                           (g$syntax-dispatch$8277$1&dy4A
                                                             g$t$8889$1&dy4A
                                                             'each-any))))
                                                       (car g$lhs*$8885$1&dy4A)))))))
                                        g$f$8884$1&dy4A)
                                      g$lhs*$8880$1&dy4A
                                      g$rhs*$8881$1&dy4A
                                      '()
                                      '()))))
                                g$ls/false$8879$1&dy4A)
                              (g$syntax-violation$8388$1&dy4A
                                '#f
                                '"invalid syntax"
                                g$t$8878$1&dy4A))))
                         (g$syntax-dispatch$8277$1&dy4A
                           g$t$8878$1&dy4A
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8874$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$8874$1&dy4A
                 '(_ () any . each-any)))))
           g$stx$8871$1&dy4A)))))
   (g$let*-values-macro$8245$1&dy4A
     g$let*-values-macro$11736$1&dy4A
     (case-lambda
       ((g$stx$8927$1&dy4A)
        (letrec* ((g$check$8928$1&dy4A
                    (case-lambda
                      ((g$x*$8952$1&dy4A)
                       (if (not (null? g$x*$8952$1&dy4A))
                         ((case-lambda
                            ((g$x$8953$1&dy4A)
                             (begin
                               (if (not (g$id?$7999$1&dy4A g$x$8953$1&dy4A))
                                 (g$syntax-violation$8388$1&dy4A
                                   '#f
                                   '"not an identifier"
                                   g$stx$8927$1&dy4A
                                   g$x$8953$1&dy4A)
                                 (void))
                               (g$check$8928$1&dy4A (cdr g$x*$8952$1&dy4A))
                               (if (g$bound-id-member?$8006$1&dy4A
                                     g$x$8953$1&dy4A
                                     (cdr g$x*$8952$1&dy4A))
                                 (g$syntax-violation$8388$1&dy4A
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8927$1&dy4A
                                   g$x$8953$1&dy4A)
                                 (void)))))
                          (car g$x*$8952$1&dy4A))
                         (void))))))
          ((case-lambda
             ((g$t$8929$1&dy4A)
              ((case-lambda
                 ((g$ls/false$8930$1&dy4A)
                  (if g$ls/false$8930$1&dy4A
                    (apply
                      (case-lambda
                        ((g$b$8931$1&dy4A g$b*$8932$1&dy4A)
                         (g$cons*$5724$1&dy4A
                           (g$bless$8240$1&dy4A 'let)
                           '()
                           g$b$8931$1&dy4A
                           g$b*$8932$1&dy4A)))
                      g$ls/false$8930$1&dy4A)
                    ((case-lambda
                       ((g$t$8933$1&dy4A)
                        ((case-lambda
                           ((g$ls/false$8934$1&dy4A)
                            (if g$ls/false$8934$1&dy4A
                              (apply
                                (case-lambda
                                  ((g$lhs*$8935$1&dy4A
                                     g$rhs*$8936$1&dy4A
                                     g$b$8937$1&dy4A
                                     g$b*$8938$1&dy4A)
                                   (g$bless$8240$1&dy4A
                                     ((letrec ((g$f$8939$1&dy4A
                                                 (case-lambda
                                                   ((g$lhs*$8940$1&dy4A
                                                      g$rhs*$8941$1&dy4A)
                                                    (if (null?
                                                          g$lhs*$8940$1&dy4A)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8937$1&dy4A
                                                          g$b*$8938$1&dy4A))
                                                      ((case-lambda
                                                         ((g$t$8942$1&dy4A)
                                                          ((case-lambda
                                                             ((g$ls/false$8943$1&dy4A)
                                                              (if g$ls/false$8943$1&dy4A
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8944$1&dy4A)
                                                                     (begin
                                                                       (g$check$8928$1&dy4A
                                                                         g$x*$8944$1&dy4A)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8941$1&dy4A))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8944$1&dy4A
                                                                           (g$f$8939$1&dy4A
                                                                             (cdr g$lhs*$8940$1&dy4A)
                                                                             (cdr g$rhs*$8941$1&dy4A)))))))
                                                                  g$ls/false$8943$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$t$8945$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8946$1&dy4A)
                                                                        (if g$ls/false$8946$1&dy4A
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8947$1&dy4A
                                                                                 g$x$8948$1&dy4A)
                                                                               (begin
                                                                                 (g$check$8928$1&dy4A
                                                                                   (cons
                                                                                     g$x$8948$1&dy4A
                                                                                     g$x*$8947$1&dy4A))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8941$1&dy4A))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8947$1&dy4A
                                                                                       g$x$8948$1&dy4A)
                                                                                     (g$f$8939$1&dy4A
                                                                                       (cdr g$lhs*$8940$1&dy4A)
                                                                                       (cdr g$rhs*$8941$1&dy4A)))))))
                                                                            g$ls/false$8946$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$t$8949$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8950$1&dy4A)
                                                                                  (if g$ls/false$8950$1&dy4A
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8951$1&dy4A)
                                                                                         (g$syntax-violation$8388$1&dy4A
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8927$1&dy4A
                                                                                           g$others$8951$1&dy4A)))
                                                                                      g$ls/false$8950$1&dy4A)
                                                                                    (g$syntax-violation$8388$1&dy4A
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8949$1&dy4A))))
                                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                                 g$t$8949$1&dy4A
                                                                                 'any))))
                                                                           g$t$8945$1&dy4A))))
                                                                     (g$syntax-dispatch$8277$1&dy4A
                                                                       g$t$8945$1&dy4A
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8942$1&dy4A))))
                                                           (g$syntax-dispatch$8277$1&dy4A
                                                             g$t$8942$1&dy4A
                                                             'each-any))))
                                                       (car g$lhs*$8940$1&dy4A)))))))
                                        g$f$8939$1&dy4A)
                                      g$lhs*$8935$1&dy4A
                                      g$rhs*$8936$1&dy4A))))
                                g$ls/false$8934$1&dy4A)
                              (g$syntax-violation$8388$1&dy4A
                                '#f
                                '"invalid syntax"
                                g$t$8933$1&dy4A))))
                         (g$syntax-dispatch$8277$1&dy4A
                           g$t$8933$1&dy4A
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8929$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$8929$1&dy4A
                 '(_ () any . each-any)))))
           g$stx$8927$1&dy4A)))))
   (g$trace-lambda-macro$8246$1&dy4A
     g$trace-lambda-macro$11737$1&dy4A
     (case-lambda
       ((g$stx$8954$1&dy4A)
        ((case-lambda
           ((g$t$8955$1&dy4A)
            ((case-lambda
               ((g$ls/false$8956$1&dy4A)
                (if g$ls/false$8956$1&dy4A
                  (apply
                    (case-lambda
                      ((g$who$8957$1&dy4A
                         g$fmls$8958$1&dy4A
                         g$b$8959$1&dy4A
                         g$b*$8960$1&dy4A)
                       (if (g$valid-bound-ids?$8004$1&dy4A g$fmls$8958$1&dy4A)
                         (g$bless$8240$1&dy4A
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8957$1&dy4A)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8958$1&dy4A
                                 (cons g$b$8959$1&dy4A g$b*$8960$1&dy4A)))))
                         (g$invalid-fmls-error$8242$1&dy4A
                           g$stx$8954$1&dy4A
                           g$fmls$8958$1&dy4A))))
                    g$ls/false$8956$1&dy4A)
                  ((case-lambda
                     ((g$t$8961$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$8962$1&dy4A)
                          (if g$ls/false$8962$1&dy4A
                            (apply
                              (case-lambda
                                ((g$who$8963$1&dy4A
                                   g$fmls$8964$1&dy4A
                                   g$last$8965$1&dy4A
                                   g$b$8966$1&dy4A
                                   g$b*$8967$1&dy4A)
                                 (if (g$valid-bound-ids?$8004$1&dy4A
                                       (cons
                                         g$last$8965$1&dy4A
                                         g$fmls$8964$1&dy4A))
                                   (g$bless$8240$1&dy4A
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8963$1&dy4A)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8964$1&dy4A
                                             g$last$8965$1&dy4A)
                                           (cons
                                             g$b$8966$1&dy4A
                                             g$b*$8967$1&dy4A)))))
                                   (g$invalid-fmls-error$8242$1&dy4A
                                     g$stx$8954$1&dy4A
                                     (append
                                       g$fmls$8964$1&dy4A
                                       g$last$8965$1&dy4A)))))
                              g$ls/false$8962$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$8961$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$8961$1&dy4A
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8955$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8955$1&dy4A
               '(_ any each-any any . each-any)))))
         g$stx$8954$1&dy4A))))
   (g$trace-define-macro$8247$1&dy4A
     g$trace-define-macro$11738$1&dy4A
     (case-lambda
       ((g$stx$8968$1&dy4A)
        ((case-lambda
           ((g$t$8969$1&dy4A)
            ((case-lambda
               ((g$ls/false$8970$1&dy4A)
                (if g$ls/false$8970$1&dy4A
                  (apply
                    (case-lambda
                      ((g$who$8971$1&dy4A
                         g$fmls$8972$1&dy4A
                         g$b$8973$1&dy4A
                         g$b*$8974$1&dy4A)
                       (if (g$valid-bound-ids?$8004$1&dy4A g$fmls$8972$1&dy4A)
                         (g$bless$8240$1&dy4A
                           (list
                             'define
                             g$who$8971$1&dy4A
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8971$1&dy4A)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8972$1&dy4A
                                   (cons g$b$8973$1&dy4A g$b*$8974$1&dy4A))))))
                         (g$invalid-fmls-error$8242$1&dy4A
                           g$stx$8968$1&dy4A
                           g$fmls$8972$1&dy4A))))
                    g$ls/false$8970$1&dy4A)
                  ((case-lambda
                     ((g$t$8975$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$8976$1&dy4A)
                          (if g$ls/false$8976$1&dy4A
                            (apply
                              (case-lambda
                                ((g$who$8977$1&dy4A
                                   g$fmls$8978$1&dy4A
                                   g$last$8979$1&dy4A
                                   g$b$8980$1&dy4A
                                   g$b*$8981$1&dy4A)
                                 (if (g$valid-bound-ids?$8004$1&dy4A
                                       (cons
                                         g$last$8979$1&dy4A
                                         g$fmls$8978$1&dy4A))
                                   (g$bless$8240$1&dy4A
                                     (list
                                       'define
                                       g$who$8977$1&dy4A
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8977$1&dy4A)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8978$1&dy4A
                                               g$last$8979$1&dy4A)
                                             (cons
                                               g$b$8980$1&dy4A
                                               g$b*$8981$1&dy4A))))))
                                   (g$invalid-fmls-error$8242$1&dy4A
                                     g$stx$8968$1&dy4A
                                     (append
                                       g$fmls$8978$1&dy4A
                                       g$last$8979$1&dy4A)))))
                              g$ls/false$8976$1&dy4A)
                            ((case-lambda
                               ((g$t$8982$1&dy4A)
                                ((case-lambda
                                   ((g$ls/false$8983$1&dy4A)
                                    (if g$ls/false$8983$1&dy4A
                                      (apply
                                        (case-lambda
                                          ((g$who$8984$1&dy4A
                                             g$expr$8985$1&dy4A)
                                           (if (g$id?$7999$1&dy4A
                                                 g$who$8984$1&dy4A)
                                             (g$bless$8240$1&dy4A
                                               (list
                                                 'define
                                                 g$who$8984$1&dy4A
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8985$1&dy4A))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8984$1&dy4A)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8388$1&dy4A
                                               '#f
                                               '"invalid name"
                                               g$stx$8968$1&dy4A))))
                                        g$ls/false$8983$1&dy4A)
                                      (g$syntax-violation$8388$1&dy4A
                                        '#f
                                        '"invalid syntax"
                                        g$t$8982$1&dy4A))))
                                 (g$syntax-dispatch$8277$1&dy4A
                                   g$t$8982$1&dy4A
                                   '(_ any any)))))
                             g$t$8975$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$8975$1&dy4A
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8969$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$8969$1&dy4A
               '(_ (any . each-any) any . each-any)))))
         g$stx$8968$1&dy4A))))
   (g$trace-define-syntax-macro$8248$1&dy4A
     g$trace-define-syntax-macro$11739$1&dy4A
     (case-lambda
       ((g$stx$8986$1&dy4A)
        ((case-lambda
           ((g$t$8987$1&dy4A)
            ((case-lambda
               ((g$ls/false$8988$1&dy4A)
                (if g$ls/false$8988$1&dy4A
                  (apply
                    (case-lambda
                      ((g$who$8989$1&dy4A g$expr$8990$1&dy4A)
                       (if (g$id?$7999$1&dy4A g$who$8989$1&dy4A)
                         (g$bless$8240$1&dy4A
                           (list
                             'define-syntax
                             g$who$8989$1&dy4A
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8989$1&dy4A)
                               g$expr$8990$1&dy4A)))
                         (g$syntax-violation$8388$1&dy4A
                           '#f
                           '"invalid name"
                           g$stx$8986$1&dy4A))))
                    g$ls/false$8988$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$8987$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$8987$1&dy4A '(_ any any)))))
         g$stx$8986$1&dy4A))))
   (g$trace-let/rec-syntax$8249$1&dy4A
     g$trace-let/rec-syntax$11740$1&dy4A
     (case-lambda
       ((g$who$8991$1&dy4A)
        (case-lambda
          ((g$stx$8992$1&dy4A)
           ((case-lambda
              ((g$t$8993$1&dy4A)
               ((case-lambda
                  ((g$ls/false$8994$1&dy4A)
                   (if g$ls/false$8994$1&dy4A
                     (apply
                       (case-lambda
                         ((g$lhs*$8995$1&dy4A
                            g$rhs*$8996$1&dy4A
                            g$b$8997$1&dy4A
                            g$b*$8998$1&dy4A)
                          (if (g$valid-bound-ids?$8004$1&dy4A
                                g$lhs*$8995$1&dy4A)
                            ((case-lambda
                               ((g$rhs*$8999$1&dy4A)
                                (g$bless$8240$1&dy4A
                                  (cons
                                    g$who$8991$1&dy4A
                                    (cons
                                      (map list
                                           g$lhs*$8995$1&dy4A
                                           g$rhs*$8999$1&dy4A)
                                      (cons
                                        g$b$8997$1&dy4A
                                        g$b*$8998$1&dy4A))))))
                             (map (case-lambda
                                    ((g$lhs$9000$1&dy4A g$rhs$9001$1&dy4A)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$9000$1&dy4A)
                                       g$rhs$9001$1&dy4A)))
                                  g$lhs*$8995$1&dy4A
                                  g$rhs*$8996$1&dy4A))
                            (g$invalid-fmls-error$8242$1&dy4A
                              g$stx$8992$1&dy4A
                              g$lhs*$8995$1&dy4A))))
                       g$ls/false$8994$1&dy4A)
                     (g$syntax-violation$8388$1&dy4A
                       '#f
                       '"invalid syntax"
                       g$t$8993$1&dy4A))))
                (g$syntax-dispatch$8277$1&dy4A
                  g$t$8993$1&dy4A
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8992$1&dy4A))))))
   (g$trace-let-syntax-macro$8250$1&dy4A
     g$trace-let-syntax-macro$11741$1&dy4A
     (g$trace-let/rec-syntax$8249$1&dy4A 'let-syntax))
   (g$trace-letrec-syntax-macro$8251$1&dy4A
     g$trace-letrec-syntax-macro$11742$1&dy4A
     (g$trace-let/rec-syntax$8249$1&dy4A 'letrec-syntax))
   (g$guard-macro$8252$1&dy4A
     g$guard-macro$11743$1&dy4A
     (case-lambda
       ((g$x$9002$1&dy4A)
        (letrec* ((g$gen-clauses$9003$1&dy4A
                    (case-lambda
                      ((g$con$9015$1&dy4A
                         g$outerk$9016$1&dy4A
                         g$clause*$9017$1&dy4A)
                       (letrec* ((g$f$9018$1&dy4A
                                   (case-lambda
                                     ((g$x$9046$1&dy4A g$k$9047$1&dy4A)
                                      ((case-lambda
                                         ((g$t$9048$1&dy4A)
                                          ((case-lambda
                                             ((g$ls/false$9049$1&dy4A)
                                              (if g$ls/false$9049$1&dy4A
                                                (apply
                                                  (case-lambda
                                                    ((g$e$9050$1&dy4A
                                                       g$p$9051$1&dy4A)
                                                     ((case-lambda
                                                        ((g$t$9052$1&dy4A)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$9052$1&dy4A
                                                               g$e$9050$1&dy4A))
                                                           (list
                                                             'if
                                                             g$t$9052$1&dy4A
                                                             (list
                                                               g$p$9051$1&dy4A
                                                               g$t$9052$1&dy4A)
                                                             g$k$9047$1&dy4A))))
                                                      (gensym))))
                                                  g$ls/false$9049$1&dy4A)
                                                ((case-lambda
                                                   ((g$t$9053$1&dy4A)
                                                    ((case-lambda
                                                       ((g$ls/false$9054$1&dy4A)
                                                        (if g$ls/false$9054$1&dy4A
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9055$1&dy4A)
                                                               ((case-lambda
                                                                  ((g$t$9056$1&dy4A)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$9056$1&dy4A
                                                                         g$e$9055$1&dy4A))
                                                                     (list
                                                                       'if
                                                                       g$t$9056$1&dy4A
                                                                       g$t$9056$1&dy4A
                                                                       g$k$9047$1&dy4A))))
                                                                (gensym))))
                                                            g$ls/false$9054$1&dy4A)
                                                          ((case-lambda
                                                             ((g$t$9057$1&dy4A)
                                                              ((case-lambda
                                                                 ((g$ls/false$9058$1&dy4A)
                                                                  (if g$ls/false$9058$1&dy4A
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$9059$1&dy4A
                                                                           g$v$9060$1&dy4A
                                                                           g$v*$9061$1&dy4A)
                                                                         (list
                                                                           'if
                                                                           g$e$9059$1&dy4A
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$9060$1&dy4A
                                                                               g$v*$9061$1&dy4A))
                                                                           g$k$9047$1&dy4A)))
                                                                      g$ls/false$9058$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$t$9062$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9063$1&dy4A)
                                                                            (if g$ls/false$9063$1&dy4A
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8388$1&dy4A
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$9046$1&dy4A)))
                                                                                g$ls/false$9063$1&dy4A)
                                                                              (g$syntax-violation$8388$1&dy4A
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9062$1&dy4A))))
                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                           g$t$9062$1&dy4A
                                                                           '_))))
                                                                     g$t$9057$1&dy4A))))
                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                 g$t$9057$1&dy4A
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$9053$1&dy4A))))
                                                     (g$syntax-dispatch$8277$1&dy4A
                                                       g$t$9053$1&dy4A
                                                       '(any)))))
                                                 g$t$9048$1&dy4A))))
                                           (g$syntax-dispatch$8277$1&dy4A
                                             g$t$9048$1&dy4A
                                             '(any #(scheme-id =>) any)))))
                                       g$x$9046$1&dy4A))))
                                 (g$f*$9019$1&dy4A
                                   (case-lambda
                                     ((g$x*$9026$1&dy4A)
                                      ((case-lambda
                                         ((g$t$9027$1&dy4A)
                                          ((case-lambda
                                             ((g$ls/false$9028$1&dy4A)
                                              (if g$ls/false$9028$1&dy4A
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$9015$1&dy4A)
                                                       '#t)))
                                                  g$ls/false$9028$1&dy4A)
                                                ((case-lambda
                                                   ((g$t$9029$1&dy4A)
                                                    ((case-lambda
                                                       ((g$ls/false$9030$1&dy4A)
                                                        (if g$ls/false$9030$1&dy4A
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9031$1&dy4A
                                                                 g$e*$9032$1&dy4A)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$9031$1&dy4A
                                                                     g$e*$9032$1&dy4A))
                                                                 '#f)))
                                                            g$ls/false$9030$1&dy4A)
                                                          ((case-lambda
                                                             ((g$t$9033$1&dy4A)
                                                              ((case-lambda
                                                                 ((g$ls/false$9034$1&dy4A)
                                                                  (if g$ls/false$9034$1&dy4A
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$9035$1&dy4A
                                                                           g$cls*$9036$1&dy4A)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$9019$1&dy4A
                                                                                g$cls*$9036$1&dy4A)))
                                                                           (case-lambda
                                                                             ((g$e$9039$1&dy4A
                                                                                g$g$9040$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$g$9041$1&dy4A
                                                                                    g$e$9042$1&dy4A)
                                                                                  (values
                                                                                    (g$f$9018$1&dy4A
                                                                                      g$cls$9035$1&dy4A
                                                                                      g$e$9042$1&dy4A)
                                                                                    g$g$9041$1&dy4A)))
                                                                               g$g$9040$1&dy4A
                                                                               g$e$9039$1&dy4A))))))
                                                                      g$ls/false$9034$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$t$9043$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9044$1&dy4A)
                                                                            (if g$ls/false$9044$1&dy4A
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$9045$1&dy4A)
                                                                                   (g$syntax-violation$8388$1&dy4A
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$9045$1&dy4A)))
                                                                                g$ls/false$9044$1&dy4A)
                                                                              (g$syntax-violation$8388$1&dy4A
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9043$1&dy4A))))
                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                           g$t$9043$1&dy4A
                                                                           'any))))
                                                                     g$t$9033$1&dy4A))))
                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                 g$t$9033$1&dy4A
                                                                 '(any .
                                                                       any)))))
                                                           g$t$9029$1&dy4A))))
                                                     (g$syntax-dispatch$8277$1&dy4A
                                                       g$t$9029$1&dy4A
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$9027$1&dy4A))))
                                           (g$syntax-dispatch$8277$1&dy4A
                                             g$t$9027$1&dy4A
                                             '()))))
                                       g$x*$9026$1&dy4A)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$9019$1&dy4A g$clause*$9017$1&dy4A)))
                           (case-lambda
                             ((g$code$9022$1&dy4A g$raisek$9023$1&dy4A)
                              ((case-lambda
                                 ((g$raisek$9024$1&dy4A g$code$9025$1&dy4A)
                                  (if g$raisek$9024$1&dy4A
                                    (list
                                      g$outerk$9016$1&dy4A
                                      g$code$9025$1&dy4A)
                                    g$code$9025$1&dy4A)))
                               g$raisek$9023$1&dy4A
                               g$code$9022$1&dy4A)))))))))
          ((case-lambda
             ((g$t$9004$1&dy4A)
              ((case-lambda
                 ((g$ls/false$9005$1&dy4A)
                  (if (if g$ls/false$9005$1&dy4A
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$9006$1&dy4A
                                 g$clause*$9007$1&dy4A
                                 g$b$9008$1&dy4A
                                 g$b*$9009$1&dy4A)
                               (g$id?$7999$1&dy4A g$con$9006$1&dy4A)))
                            g$ls/false$9005$1&dy4A))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$9010$1&dy4A
                           g$clause*$9011$1&dy4A
                           g$b$9012$1&dy4A
                           g$b*$9013$1&dy4A)
                         ((case-lambda
                            ((g$outerk$9014$1&dy4A)
                             (g$bless$8240$1&dy4A
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$9014$1&dy4A)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$9010$1&dy4A)
                                           (g$gen-clauses$9003$1&dy4A
                                             g$con$9010$1&dy4A
                                             g$outerk$9014$1&dy4A
                                             g$clause*$9011$1&dy4A))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$9012$1&dy4A
                                                 g$b*$9013$1&dy4A))))))))))))
                          (gensym))))
                      g$ls/false$9005$1&dy4A)
                    (g$syntax-violation$8388$1&dy4A
                      '#f
                      '"invalid syntax"
                      g$t$9004$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$9004$1&dy4A
                 '(_ (any . each-any) any . each-any)))))
           g$x$9002$1&dy4A)))))
   (g$define-enumeration-macro$8253$1&dy4A
     g$define-enumeration-macro$11744$1&dy4A
     (case-lambda
       ((g$stx$9064$1&dy4A)
        (letrec* ((g$set?$9065$1&dy4A
                    (case-lambda
                      ((g$x$9078$1&dy4A)
                       ((case-lambda
                          ((g$t$9079$1&dy4A)
                           (if g$t$9079$1&dy4A
                             g$t$9079$1&dy4A
                             (begin
                               '#f
                               (if (not (g$memq$5716$1&dy4A
                                          (car g$x$9078$1&dy4A)
                                          (cdr g$x$9078$1&dy4A)))
                                 (begin
                                   '#f
                                   (g$set?$9065$1&dy4A (cdr g$x$9078$1&dy4A)))
                                 '#f)))))
                        (null? g$x$9078$1&dy4A)))))
                  (g$remove-dups$9066$1&dy4A
                    (case-lambda
                      ((g$ls$9077$1&dy4A)
                       (if (null? g$ls$9077$1&dy4A)
                         '()
                         (cons
                           (car g$ls$9077$1&dy4A)
                           (g$remove-dups$9066$1&dy4A
                             (g$remq$5729$1&dy4A
                               (car g$ls$9077$1&dy4A)
                               (cdr g$ls$9077$1&dy4A)))))))))
          ((case-lambda
             ((g$t$9067$1&dy4A)
              ((case-lambda
                 ((g$ls/false$9068$1&dy4A)
                  (if (if g$ls/false$9068$1&dy4A
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$9069$1&dy4A
                                 g$id*$9070$1&dy4A
                                 g$maker$9071$1&dy4A)
                               (if (g$id?$7999$1&dy4A g$name$9069$1&dy4A)
                                 (if (g$id?$7999$1&dy4A g$maker$9071$1&dy4A)
                                   (begin
                                     '#f
                                     (g$for-all$5722$1&dy4A
                                       g$id?$7999$1&dy4A
                                       g$id*$9070$1&dy4A))
                                   '#f)
                                 '#f)))
                            g$ls/false$9068$1&dy4A))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$9072$1&dy4A
                           g$id*$9073$1&dy4A
                           g$maker$9074$1&dy4A)
                         ((case-lambda
                            ((g$name*$9075$1&dy4A g$mk$9076$1&dy4A)
                             (g$bless$8240$1&dy4A
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$9076$1&dy4A
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$9075$1&dy4A))))
                                 (list
                                   'define-syntax
                                   g$name$9072$1&dy4A
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$9075$1&dy4A))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$9072$1&dy4A)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$9074$1&dy4A
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9074$1&dy4A)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$9075$1&dy4A))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9074$1&dy4A)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$9076$1&dy4A
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$9066$1&dy4A
                            (g$syntax->datum$8391$1&dy4A g$id*$9073$1&dy4A))
                          (gensym))))
                      g$ls/false$9068$1&dy4A)
                    (g$syntax-violation$8388$1&dy4A
                      '#f
                      '"invalid syntax"
                      g$t$9067$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$9067$1&dy4A
                 '(_ any each-any any)))))
           g$stx$9064$1&dy4A)))))
   (g$time-macro$8254$1&dy4A
     g$time-macro$11745$1&dy4A
     (case-lambda
       ((g$stx$9080$1&dy4A)
        ((case-lambda
           ((g$t$9081$1&dy4A)
            ((case-lambda
               ((g$ls/false$9082$1&dy4A)
                (if g$ls/false$9082$1&dy4A
                  (apply
                    (case-lambda
                      ((g$expr$9083$1&dy4A)
                       ((case-lambda
                          ((g$str$9084$1&dy4A)
                           (g$bless$8240$1&dy4A
                             (list
                               'time-it
                               g$str$9084$1&dy4A
                               (list 'lambda '() g$expr$9083$1&dy4A)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6959$1&dy4A)))
                          (case-lambda
                            ((g$p$9087$1&dy4A g$e$9088$1&dy4A)
                             ((case-lambda
                                ((g$e$9089$1&dy4A g$p$9090$1&dy4A)
                                 (begin
                                   (write
                                     (g$syntax->datum$8391$1&dy4A
                                       g$expr$9083$1&dy4A)
                                     g$p$9090$1&dy4A)
                                   (g$e$9089$1&dy4A))))
                              g$e$9088$1&dy4A
                              g$p$9087$1&dy4A)))))))
                    g$ls/false$9082$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9081$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9081$1&dy4A '(_ any)))))
         g$stx$9080$1&dy4A))))
   (g$delay-macro$8255$1&dy4A
     g$delay-macro$11746$1&dy4A
     (case-lambda
       ((g$stx$9091$1&dy4A)
        ((case-lambda
           ((g$t$9092$1&dy4A)
            ((case-lambda
               ((g$ls/false$9093$1&dy4A)
                (if g$ls/false$9093$1&dy4A
                  (apply
                    (case-lambda
                      ((g$expr$9094$1&dy4A)
                       (g$bless$8240$1&dy4A
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$9094$1&dy4A)))))
                    g$ls/false$9093$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9092$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9092$1&dy4A '(_ any)))))
         g$stx$9091$1&dy4A))))
   (g$assert-macro$8256$1&dy4A
     g$assert-macro$11747$1&dy4A
     (case-lambda
       ((g$stx$9095$1&dy4A)
        ((case-lambda
           ((g$t$9096$1&dy4A)
            ((case-lambda
               ((g$ls/false$9097$1&dy4A)
                (if g$ls/false$9097$1&dy4A
                  (apply
                    (case-lambda
                      ((g$expr$9098$1&dy4A)
                       ((case-lambda
                          ((g$pos$9099$1&dy4A)
                           (g$bless$8240$1&dy4A
                             (list
                               'unless
                               g$expr$9098$1&dy4A
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$9098$1&dy4A)
                                 (list 'quote g$pos$9099$1&dy4A))))))
                        ((case-lambda
                           ((g$t$9100$1&dy4A)
                            (if g$t$9100$1&dy4A
                              g$t$9100$1&dy4A
                              (begin
                                '#f
                                (g$expression-position$8383$1&dy4A
                                  g$expr$9098$1&dy4A)))))
                         (g$expression-position$8383$1&dy4A
                           g$stx$9095$1&dy4A)))))
                    g$ls/false$9097$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9096$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9096$1&dy4A '(_ any)))))
         g$stx$9095$1&dy4A))))
   (g$endianness-macro$8257$1&dy4A
     g$endianness-macro$11748$1&dy4A
     (case-lambda
       ((g$stx$9101$1&dy4A)
        ((case-lambda
           ((g$t$9102$1&dy4A)
            ((case-lambda
               ((g$ls/false$9103$1&dy4A)
                (if g$ls/false$9103$1&dy4A
                  (apply
                    (case-lambda
                      ((g$e$9104$1&dy4A)
                       ((case-lambda
                          ((g$t$9105$1&dy4A)
                           (if (g$memv$5717$1&dy4A g$t$9105$1&dy4A '(little))
                             (g$bless$8240$1&dy4A ''little)
                             (if (g$memv$5717$1&dy4A g$t$9105$1&dy4A '(big))
                               (g$bless$8240$1&dy4A ''big)
                               (g$syntax-violation$8388$1&dy4A
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$9101$1&dy4A)))))
                        (g$syntax->datum$8391$1&dy4A g$e$9104$1&dy4A))))
                    g$ls/false$9103$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9102$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9102$1&dy4A '(_ any)))))
         g$stx$9101$1&dy4A))))
   (g$identifier-syntax-macro$8258$1&dy4A
     g$identifier-syntax-macro$11749$1&dy4A
     (case-lambda
       ((g$stx$9106$1&dy4A)
        ((case-lambda
           ((g$t$9107$1&dy4A)
            ((case-lambda
               ((g$ls/false$9108$1&dy4A)
                (if g$ls/false$9108$1&dy4A
                  (apply
                    (case-lambda
                      ((g$expr$9109$1&dy4A)
                       (g$bless$8240$1&dy4A
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$9109$1&dy4A))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$9109$1&dy4A)
                                   '(#'(e* ...))))))))))
                    g$ls/false$9108$1&dy4A)
                  ((case-lambda
                     ((g$t$9110$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$9111$1&dy4A)
                          (if (if g$ls/false$9111$1&dy4A
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$9112$1&dy4A
                                         g$expr1$9113$1&dy4A
                                         g$id2$9114$1&dy4A
                                         g$expr2$9115$1&dy4A
                                         g$expr3$9116$1&dy4A)
                                       (if (g$id?$7999$1&dy4A g$id1$9112$1&dy4A)
                                         (if (g$id?$7999$1&dy4A
                                               g$id2$9114$1&dy4A)
                                           (begin
                                             '#f
                                             (g$id?$7999$1&dy4A
                                               g$expr2$9115$1&dy4A))
                                           '#f)
                                         '#f)))
                                    g$ls/false$9111$1&dy4A))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$9117$1&dy4A
                                   g$expr1$9118$1&dy4A
                                   g$id2$9119$1&dy4A
                                   g$expr2$9120$1&dy4A
                                   g$expr3$9121$1&dy4A)
                                 (g$bless$8240$1&dy4A
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$9118$1&dy4A))
                                         (list
                                           (list 'set! 'id g$expr2$9120$1&dy4A)
                                           (list 'syntax g$expr3$9121$1&dy4A))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$9118$1&dy4A
                                               '(e* ...))))))))))
                              g$ls/false$9111$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$9110$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$9110$1&dy4A
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$9107$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9107$1&dy4A '(_ any)))))
         g$stx$9106$1&dy4A))))
   (g$do-macro$8259$1&dy4A
     g$do-macro$11750$1&dy4A
     (case-lambda
       ((g$stx$9122$1&dy4A)
        (letrec* ((g$bind$9123$1&dy4A
                    (case-lambda
                      ((g$x$9135$1&dy4A)
                       ((case-lambda
                          ((g$t$9136$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9137$1&dy4A)
                               (if g$ls/false$9137$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$x$9138$1&dy4A g$init$9139$1&dy4A)
                                      (list
                                        g$x$9138$1&dy4A
                                        g$init$9139$1&dy4A
                                        g$x$9138$1&dy4A)))
                                   g$ls/false$9137$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9140$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9141$1&dy4A)
                                         (if g$ls/false$9141$1&dy4A
                                           (apply
                                             (case-lambda
                                               ((g$x$9142$1&dy4A
                                                  g$init$9143$1&dy4A
                                                  g$step$9144$1&dy4A)
                                                (list
                                                  g$x$9142$1&dy4A
                                                  g$init$9143$1&dy4A
                                                  g$step$9144$1&dy4A)))
                                             g$ls/false$9141$1&dy4A)
                                           ((case-lambda
                                              ((g$t$9145$1&dy4A)
                                               ((case-lambda
                                                  ((g$ls/false$9146$1&dy4A)
                                                   (if g$ls/false$9146$1&dy4A
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8388$1&dy4A
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$9122$1&dy4A)))
                                                       g$ls/false$9146$1&dy4A)
                                                     (g$syntax-violation$8388$1&dy4A
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9145$1&dy4A))))
                                                (g$syntax-dispatch$8277$1&dy4A
                                                  g$t$9145$1&dy4A
                                                  '_))))
                                            g$t$9140$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9140$1&dy4A
                                        '(any any any)))))
                                  g$t$9136$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9136$1&dy4A
                              '(any any)))))
                        g$x$9135$1&dy4A)))))
          ((case-lambda
             ((g$t$9124$1&dy4A)
              ((case-lambda
                 ((g$ls/false$9125$1&dy4A)
                  (if g$ls/false$9125$1&dy4A
                    (apply
                      (case-lambda
                        ((g$binding*$9126$1&dy4A
                           g$test$9127$1&dy4A
                           g$expr*$9128$1&dy4A
                           g$command*$9129$1&dy4A)
                         ((case-lambda
                            ((g$t$9130$1&dy4A)
                             ((case-lambda
                                ((g$ls/false$9131$1&dy4A)
                                 (if g$ls/false$9131$1&dy4A
                                   (apply
                                     (case-lambda
                                       ((g$x*$9132$1&dy4A
                                          g$init*$9133$1&dy4A
                                          g$step*$9134$1&dy4A)
                                        (if (g$valid-bound-ids?$8004$1&dy4A
                                              g$x*$9132$1&dy4A)
                                          (g$bless$8240$1&dy4A
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$9132$1&dy4A
                                                    (list
                                                      'if
                                                      g$test$9127$1&dy4A
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$9128$1&dy4A))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$9129$1&dy4A
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$9134$1&dy4A))))))))
                                              (cons 'loop g$init*$9133$1&dy4A)))
                                          (g$syntax-violation$8388$1&dy4A
                                            '#f
                                            '"invalid bindings"
                                            g$stx$9122$1&dy4A))))
                                     g$ls/false$9131$1&dy4A)
                                   (g$syntax-violation$8388$1&dy4A
                                     '#f
                                     '"invalid syntax"
                                     g$t$9130$1&dy4A))))
                              (g$syntax-dispatch$8277$1&dy4A
                                g$t$9130$1&dy4A
                                '#(each (any any any))))))
                          (map g$bind$9123$1&dy4A g$binding*$9126$1&dy4A))))
                      g$ls/false$9125$1&dy4A)
                    (g$syntax-violation$8388$1&dy4A
                      '#f
                      '"invalid syntax"
                      g$t$9124$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$9124$1&dy4A
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$9122$1&dy4A)))))
   (g$let*-macro$8260$1&dy4A
     g$let*-macro$11751$1&dy4A
     (case-lambda
       ((g$stx$9147$1&dy4A)
        ((case-lambda
           ((g$t$9148$1&dy4A)
            ((case-lambda
               ((g$ls/false$9149$1&dy4A)
                (if (if g$ls/false$9149$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$9150$1&dy4A
                               g$rhs*$9151$1&dy4A
                               g$b$9152$1&dy4A
                               g$b*$9153$1&dy4A)
                             (g$for-all$5722$1&dy4A
                               g$id?$7999$1&dy4A
                               g$lhs*$9150$1&dy4A)))
                          g$ls/false$9149$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$9154$1&dy4A
                         g$rhs*$9155$1&dy4A
                         g$b$9156$1&dy4A
                         g$b*$9157$1&dy4A)
                       (g$bless$8240$1&dy4A
                         ((letrec ((g$f$9158$1&dy4A
                                     (case-lambda
                                       ((g$x*$9159$1&dy4A)
                                        (if (null? g$x*$9159$1&dy4A)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$9156$1&dy4A
                                                g$b*$9157$1&dy4A)))
                                          (list
                                            'let
                                            (list (car g$x*$9159$1&dy4A))
                                            (g$f$9158$1&dy4A
                                              (cdr g$x*$9159$1&dy4A))))))))
                            g$f$9158$1&dy4A)
                          (map list g$lhs*$9154$1&dy4A g$rhs*$9155$1&dy4A)))))
                    g$ls/false$9149$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9148$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$9148$1&dy4A
               '(_ #(each (any any)) any . each-any)))))
         g$stx$9147$1&dy4A))))
   (g$or-macro$8261$1&dy4A
     g$or-macro$11752$1&dy4A
     (case-lambda
       ((g$stx$9160$1&dy4A)
        ((case-lambda
           ((g$t$9161$1&dy4A)
            ((case-lambda
               ((g$ls/false$9162$1&dy4A)
                (if g$ls/false$9162$1&dy4A
                  (apply (case-lambda (() '#f)) g$ls/false$9162$1&dy4A)
                  ((case-lambda
                     ((g$t$9163$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$9164$1&dy4A)
                          (if g$ls/false$9164$1&dy4A
                            (apply
                              (case-lambda
                                ((g$e$9165$1&dy4A g$e*$9166$1&dy4A)
                                 (g$bless$8240$1&dy4A
                                   ((letrec ((g$f$9167$1&dy4A
                                               (case-lambda
                                                 ((g$e$9168$1&dy4A
                                                    g$e*$9169$1&dy4A)
                                                  (if (null? g$e*$9169$1&dy4A)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9168$1&dy4A)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$9168$1&dy4A))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$9167$1&dy4A
                                                          (car g$e*$9169$1&dy4A)
                                                          (cdr g$e*$9169$1&dy4A)))))))))
                                      g$f$9167$1&dy4A)
                                    g$e$9165$1&dy4A
                                    g$e*$9166$1&dy4A))))
                              g$ls/false$9164$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$9163$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$9163$1&dy4A
                         '(_ any . each-any)))))
                   g$t$9161$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9161$1&dy4A '(_)))))
         g$stx$9160$1&dy4A))))
   (g$and-macro$8262$1&dy4A
     g$and-macro$11753$1&dy4A
     (case-lambda
       ((g$stx$9170$1&dy4A)
        ((case-lambda
           ((g$t$9171$1&dy4A)
            ((case-lambda
               ((g$ls/false$9172$1&dy4A)
                (if g$ls/false$9172$1&dy4A
                  (apply (case-lambda (() '#t)) g$ls/false$9172$1&dy4A)
                  ((case-lambda
                     ((g$t$9173$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$9174$1&dy4A)
                          (if g$ls/false$9174$1&dy4A
                            (apply
                              (case-lambda
                                ((g$e$9175$1&dy4A g$e*$9176$1&dy4A)
                                 (g$bless$8240$1&dy4A
                                   ((letrec ((g$f$9177$1&dy4A
                                               (case-lambda
                                                 ((g$e$9178$1&dy4A
                                                    g$e*$9179$1&dy4A)
                                                  (if (null? g$e*$9179$1&dy4A)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9178$1&dy4A)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$9178$1&dy4A
                                                        (cons
                                                          (g$f$9177$1&dy4A
                                                            (car g$e*$9179$1&dy4A)
                                                            (cdr g$e*$9179$1&dy4A))
                                                          '(#f)))))))))
                                      g$f$9177$1&dy4A)
                                    g$e$9175$1&dy4A
                                    g$e*$9176$1&dy4A))))
                              g$ls/false$9174$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$9173$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$9173$1&dy4A
                         '(_ any . each-any)))))
                   g$t$9171$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9171$1&dy4A '(_)))))
         g$stx$9170$1&dy4A))))
   (g$cond-macro$8263$1&dy4A
     g$cond-macro$11754$1&dy4A
     (case-lambda
       ((g$stx$9180$1&dy4A)
        ((case-lambda
           ((g$t$9181$1&dy4A)
            ((case-lambda
               ((g$ls/false$9182$1&dy4A)
                (if g$ls/false$9182$1&dy4A
                  (apply
                    (case-lambda
                      ((g$cls$9183$1&dy4A g$cls*$9184$1&dy4A)
                       (g$bless$8240$1&dy4A
                         ((letrec ((g$f$9185$1&dy4A
                                     (case-lambda
                                       ((g$cls$9186$1&dy4A g$cls*$9187$1&dy4A)
                                        (if (null? g$cls*$9187$1&dy4A)
                                          ((case-lambda
                                             ((g$t$9188$1&dy4A)
                                              ((case-lambda
                                                 ((g$ls/false$9189$1&dy4A)
                                                  (if g$ls/false$9189$1&dy4A
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9190$1&dy4A
                                                           g$e*$9191$1&dy4A)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$9190$1&dy4A
                                                             g$e*$9191$1&dy4A))))
                                                      g$ls/false$9189$1&dy4A)
                                                    ((case-lambda
                                                       ((g$t$9192$1&dy4A)
                                                        ((case-lambda
                                                           ((g$ls/false$9193$1&dy4A)
                                                            (if g$ls/false$9193$1&dy4A
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9194$1&dy4A
                                                                     g$p$9195$1&dy4A)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9194$1&dy4A))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9195$1&dy4A
                                                                         '(t))))))
                                                                g$ls/false$9193$1&dy4A)
                                                              ((case-lambda
                                                                 ((g$t$9196$1&dy4A)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9197$1&dy4A)
                                                                      (if g$ls/false$9197$1&dy4A
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9198$1&dy4A)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$9198$1&dy4A
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$9197$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$t$9199$1&dy4A)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9200$1&dy4A)
                                                                                (if g$ls/false$9200$1&dy4A
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9201$1&dy4A
                                                                                         g$e*$9202$1&dy4A)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9201$1&dy4A
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9202$1&dy4A))))
                                                                                    g$ls/false$9200$1&dy4A)
                                                                                  ((case-lambda
                                                                                     ((g$t$9203$1&dy4A)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9204$1&dy4A)
                                                                                          (if g$ls/false$9204$1&dy4A
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8388$1&dy4A
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9180$1&dy4A)))
                                                                                              g$ls/false$9204$1&dy4A)
                                                                                            (g$syntax-violation$8388$1&dy4A
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9203$1&dy4A))))
                                                                                       (g$syntax-dispatch$8277$1&dy4A
                                                                                         g$t$9203$1&dy4A
                                                                                         '_))))
                                                                                   g$t$9199$1&dy4A))))
                                                                             (g$syntax-dispatch$8277$1&dy4A
                                                                               g$t$9199$1&dy4A
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9196$1&dy4A))))
                                                                   (g$syntax-dispatch$8277$1&dy4A
                                                                     g$t$9196$1&dy4A
                                                                     '(any)))))
                                                               g$t$9192$1&dy4A))))
                                                         (g$syntax-dispatch$8277$1&dy4A
                                                           g$t$9192$1&dy4A
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9188$1&dy4A))))
                                               (g$syntax-dispatch$8277$1&dy4A
                                                 g$t$9188$1&dy4A
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9186$1&dy4A)
                                          ((case-lambda
                                             ((g$t$9205$1&dy4A)
                                              ((case-lambda
                                                 ((g$ls/false$9206$1&dy4A)
                                                  (if g$ls/false$9206$1&dy4A
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9207$1&dy4A
                                                           g$e*$9208$1&dy4A)
                                                         (g$syntax-violation$8388$1&dy4A
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$9180$1&dy4A)))
                                                      g$ls/false$9206$1&dy4A)
                                                    ((case-lambda
                                                       ((g$t$9209$1&dy4A)
                                                        ((case-lambda
                                                           ((g$ls/false$9210$1&dy4A)
                                                            (if g$ls/false$9210$1&dy4A
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9211$1&dy4A
                                                                     g$p$9212$1&dy4A)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9211$1&dy4A))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9212$1&dy4A
                                                                         '(t))
                                                                       (g$f$9185$1&dy4A
                                                                         (car g$cls*$9187$1&dy4A)
                                                                         (cdr g$cls*$9187$1&dy4A))))))
                                                                g$ls/false$9210$1&dy4A)
                                                              ((case-lambda
                                                                 ((g$t$9213$1&dy4A)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9214$1&dy4A)
                                                                      (if g$ls/false$9214$1&dy4A
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9215$1&dy4A)
                                                                             (list
                                                                               'or
                                                                               g$e$9215$1&dy4A
                                                                               (g$f$9185$1&dy4A
                                                                                 (car g$cls*$9187$1&dy4A)
                                                                                 (cdr g$cls*$9187$1&dy4A)))))
                                                                          g$ls/false$9214$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$t$9216$1&dy4A)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9217$1&dy4A)
                                                                                (if g$ls/false$9217$1&dy4A
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9218$1&dy4A
                                                                                         g$e*$9219$1&dy4A)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9218$1&dy4A
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9219$1&dy4A)
                                                                                         (g$f$9185$1&dy4A
                                                                                           (car g$cls*$9187$1&dy4A)
                                                                                           (cdr g$cls*$9187$1&dy4A)))))
                                                                                    g$ls/false$9217$1&dy4A)
                                                                                  ((case-lambda
                                                                                     ((g$t$9220$1&dy4A)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9221$1&dy4A)
                                                                                          (if g$ls/false$9221$1&dy4A
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8388$1&dy4A
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9180$1&dy4A)))
                                                                                              g$ls/false$9221$1&dy4A)
                                                                                            (g$syntax-violation$8388$1&dy4A
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9220$1&dy4A))))
                                                                                       (g$syntax-dispatch$8277$1&dy4A
                                                                                         g$t$9220$1&dy4A
                                                                                         '_))))
                                                                                   g$t$9216$1&dy4A))))
                                                                             (g$syntax-dispatch$8277$1&dy4A
                                                                               g$t$9216$1&dy4A
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9213$1&dy4A))))
                                                                   (g$syntax-dispatch$8277$1&dy4A
                                                                     g$t$9213$1&dy4A
                                                                     '(any)))))
                                                               g$t$9209$1&dy4A))))
                                                         (g$syntax-dispatch$8277$1&dy4A
                                                           g$t$9209$1&dy4A
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9205$1&dy4A))))
                                               (g$syntax-dispatch$8277$1&dy4A
                                                 g$t$9205$1&dy4A
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9186$1&dy4A))))))
                            g$f$9185$1&dy4A)
                          g$cls$9183$1&dy4A
                          g$cls*$9184$1&dy4A))))
                    g$ls/false$9182$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9181$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$9181$1&dy4A
               '(_ any . each-any)))))
         g$stx$9180$1&dy4A))))
   (g$do-include$8264$1&dy4A
     g$do-include$11755$1&dy4A
     (case-lambda
       ((g$stx$9222$1&dy4A g$id$9223$1&dy4A g$filename$9224$1&dy4A)
        ((case-lambda
           ((g$filename$9225$1&dy4A)
            (begin
              (if (not (if (string? g$filename$9225$1&dy4A)
                         (begin '#f (g$id?$7999$1&dy4A g$id$9223$1&dy4A))
                         '#f))
                (g$syntax-violation$8388$1&dy4A
                  '#f
                  '"invalid syntax"
                  g$stx$9222$1&dy4A)
                (void))
              (cons
                (g$bless$8240$1&dy4A 'begin)
                (g$with-input-from-file$6994$1&dy4A
                  g$filename$9225$1&dy4A
                  (case-lambda
                    (()
                     ((letrec ((g$f$9226$1&dy4A
                                 (case-lambda
                                   ((g$ls$9227$1&dy4A)
                                    ((case-lambda
                                       ((g$x$9228$1&dy4A)
                                        (if (eof-object? g$x$9228$1&dy4A)
                                          (reverse g$ls$9227$1&dy4A)
                                          (g$f$9226$1&dy4A
                                            (cons
                                              (g$datum->stx$7982$1&dy4A
                                                g$id$9223$1&dy4A
                                                g$x$9228$1&dy4A)
                                              g$ls$9227$1&dy4A)))))
                                     (read-annotated))))))
                        g$f$9226$1&dy4A)
                      '()))))))))
         (g$stx->datum$8010$1&dy4A g$filename$9224$1&dy4A)))))
   (g$include-macro$8265$1&dy4A
     g$include-macro$11756$1&dy4A
     (case-lambda
       ((g$e$9229$1&dy4A)
        ((case-lambda
           ((g$t$9230$1&dy4A)
            ((case-lambda
               ((g$ls/false$9231$1&dy4A)
                (if g$ls/false$9231$1&dy4A
                  (apply
                    (case-lambda
                      ((g$id$9232$1&dy4A g$filename$9233$1&dy4A)
                       (g$do-include$8264$1&dy4A
                         g$e$9229$1&dy4A
                         g$id$9232$1&dy4A
                         g$filename$9233$1&dy4A)))
                    g$ls/false$9231$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9230$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9230$1&dy4A '(any any)))))
         g$e$9229$1&dy4A))))
   (g$include-into-macro$8266$1&dy4A
     g$include-into-macro$11757$1&dy4A
     (case-lambda
       ((g$e$9234$1&dy4A)
        ((case-lambda
           ((g$t$9235$1&dy4A)
            ((case-lambda
               ((g$ls/false$9236$1&dy4A)
                (if g$ls/false$9236$1&dy4A
                  (apply
                    (case-lambda
                      ((g$id$9237$1&dy4A g$filename$9238$1&dy4A)
                       (g$do-include$8264$1&dy4A
                         g$e$9234$1&dy4A
                         g$id$9237$1&dy4A
                         g$filename$9238$1&dy4A)))
                    g$ls/false$9236$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9235$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$9235$1&dy4A '(_ any any)))))
         g$e$9234$1&dy4A))))
   (g$syntax-rules-macro$8267$1&dy4A
     g$syntax-rules-macro$11758$1&dy4A
     (case-lambda
       ((g$e$9239$1&dy4A)
        ((case-lambda
           ((g$t$9240$1&dy4A)
            ((case-lambda
               ((g$ls/false$9241$1&dy4A)
                (if g$ls/false$9241$1&dy4A
                  (apply
                    (case-lambda
                      ((g$lits$9242$1&dy4A
                         g$pat*$9243$1&dy4A
                         g$tmp*$9244$1&dy4A)
                       (begin
                         (g$verify-literals$8280$1&dy4A
                           g$lits$9242$1&dy4A
                           g$e$9239$1&dy4A)
                         (g$bless$8240$1&dy4A
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$9242$1&dy4A
                                   (map (case-lambda
                                          ((g$pat$9245$1&dy4A g$tmp$9246$1&dy4A)
                                           ((case-lambda
                                              ((g$t$9247$1&dy4A)
                                               ((case-lambda
                                                  ((g$ls/false$9248$1&dy4A)
                                                   (if g$ls/false$9248$1&dy4A
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9249$1&dy4A)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$9249$1&dy4A)
                                                            (list
                                                              'syntax
                                                              g$tmp$9246$1&dy4A))))
                                                       g$ls/false$9248$1&dy4A)
                                                     ((case-lambda
                                                        ((g$t$9250$1&dy4A)
                                                         ((case-lambda
                                                            ((g$ls/false$9251$1&dy4A)
                                                             (if g$ls/false$9251$1&dy4A
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8388$1&dy4A
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$9239$1&dy4A
                                                                      g$pat$9245$1&dy4A)))
                                                                 g$ls/false$9251$1&dy4A)
                                                               (g$syntax-violation$8388$1&dy4A
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$9250$1&dy4A))))
                                                          (g$syntax-dispatch$8277$1&dy4A
                                                            g$t$9250$1&dy4A
                                                            '_))))
                                                      g$t$9247$1&dy4A))))
                                                (g$syntax-dispatch$8277$1&dy4A
                                                  g$t$9247$1&dy4A
                                                  '(_ . any)))))
                                            g$pat$9245$1&dy4A)))
                                        g$pat*$9243$1&dy4A
                                        g$tmp*$9244$1&dy4A)))))))))
                    g$ls/false$9241$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9240$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$9240$1&dy4A
               '(_ each-any . #(each (any any)))))))
         g$e$9239$1&dy4A))))
   (g$quasiquote-macro$8268$1&dy4A
     g$quasiquote-macro$11759$1&dy4A
     ((case-lambda
        (()
         (letrec* ((g$datum$9252$1&dy4A
                     (case-lambda
                       ((g$x$9383$1&dy4A)
                        (list
                          (g$scheme-stx$8220$1&dy4A 'quote)
                          (g$mkstx$7987$1&dy4A g$x$9383$1&dy4A '() '() '())))))
                   (g$quasicons*$9268$1&dy4A
                     (case-lambda
                       ((g$x$9379$1&dy4A g$y$9380$1&dy4A)
                        ((letrec ((g$f$9381$1&dy4A
                                    (case-lambda
                                      ((g$x$9382$1&dy4A)
                                       (if (null? g$x$9382$1&dy4A)
                                         g$y$9380$1&dy4A
                                         (g$quasicons$9269$1&dy4A
                                           (car g$x$9382$1&dy4A)
                                           (g$f$9381$1&dy4A
                                             (cdr g$x$9382$1&dy4A))))))))
                           g$f$9381$1&dy4A)
                         g$x$9379$1&dy4A))))
                   (g$quasicons$9269$1&dy4A
                     (case-lambda
                       ((g$x$9360$1&dy4A g$y$9361$1&dy4A)
                        ((case-lambda
                           ((g$t$9362$1&dy4A)
                            ((case-lambda
                               ((g$ls/false$9363$1&dy4A)
                                (if g$ls/false$9363$1&dy4A
                                  (apply
                                    (case-lambda
                                      ((g$dy$9364$1&dy4A)
                                       ((case-lambda
                                          ((g$t$9365$1&dy4A)
                                           ((case-lambda
                                              ((g$ls/false$9366$1&dy4A)
                                               (if g$ls/false$9366$1&dy4A
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9367$1&dy4A)
                                                      (list
                                                        (g$scheme-stx$8220$1&dy4A
                                                          'quote)
                                                        (cons
                                                          g$dx$9367$1&dy4A
                                                          g$dy$9364$1&dy4A))))
                                                   g$ls/false$9366$1&dy4A)
                                                 ((case-lambda
                                                    ((g$t$9368$1&dy4A)
                                                     ((case-lambda
                                                        ((g$ls/false$9369$1&dy4A)
                                                         (if g$ls/false$9369$1&dy4A
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9370$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9371$1&dy4A)
                                                                        (if g$ls/false$9371$1&dy4A
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$8220$1&dy4A
                                                                                   'list)
                                                                                 g$x$9360$1&dy4A)))
                                                                            g$ls/false$9371$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$t$9372$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9373$1&dy4A)
                                                                                  (if g$ls/false$9373$1&dy4A
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$8220$1&dy4A
                                                                                             'cons)
                                                                                           g$x$9360$1&dy4A
                                                                                           g$y$9361$1&dy4A)))
                                                                                      g$ls/false$9373$1&dy4A)
                                                                                    (g$syntax-violation$8388$1&dy4A
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9372$1&dy4A))))
                                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                                 g$t$9372$1&dy4A
                                                                                 '_))))
                                                                           g$t$9370$1&dy4A))))
                                                                     (g$syntax-dispatch$8277$1&dy4A
                                                                       g$t$9370$1&dy4A
                                                                       '()))))
                                                                 g$dy$9364$1&dy4A)))
                                                             g$ls/false$9369$1&dy4A)
                                                           (g$syntax-violation$8388$1&dy4A
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9368$1&dy4A))))
                                                      (g$syntax-dispatch$8277$1&dy4A
                                                        g$t$9368$1&dy4A
                                                        '_))))
                                                  g$t$9365$1&dy4A))))
                                            (g$syntax-dispatch$8277$1&dy4A
                                              g$t$9365$1&dy4A
                                              '(#(scheme-id quote) any)))))
                                        g$x$9360$1&dy4A)))
                                    g$ls/false$9363$1&dy4A)
                                  ((case-lambda
                                     ((g$t$9374$1&dy4A)
                                      ((case-lambda
                                         ((g$ls/false$9375$1&dy4A)
                                          (if g$ls/false$9375$1&dy4A
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9376$1&dy4A)
                                                 (g$cons*$5724$1&dy4A
                                                   (g$scheme-stx$8220$1&dy4A
                                                     'list)
                                                   g$x$9360$1&dy4A
                                                   g$stuff$9376$1&dy4A)))
                                              g$ls/false$9375$1&dy4A)
                                            ((case-lambda
                                               ((g$t$9377$1&dy4A)
                                                ((case-lambda
                                                   ((g$ls/false$9378$1&dy4A)
                                                    (if g$ls/false$9378$1&dy4A
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$8220$1&dy4A
                                                               'cons)
                                                             g$x$9360$1&dy4A
                                                             g$y$9361$1&dy4A)))
                                                        g$ls/false$9378$1&dy4A)
                                                      (g$syntax-violation$8388$1&dy4A
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9377$1&dy4A))))
                                                 (g$syntax-dispatch$8277$1&dy4A
                                                   g$t$9377$1&dy4A
                                                   '_))))
                                             g$t$9374$1&dy4A))))
                                       (g$syntax-dispatch$8277$1&dy4A
                                         g$t$9374$1&dy4A
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9362$1&dy4A))))
                             (g$syntax-dispatch$8277$1&dy4A
                               g$t$9362$1&dy4A
                               '(#(scheme-id quote) any)))))
                         g$y$9361$1&dy4A))))
                   (g$quasiappend$9270$1&dy4A
                     (case-lambda
                       ((g$x$9347$1&dy4A g$y$9348$1&dy4A)
                        ((case-lambda
                           ((g$ls$9349$1&dy4A)
                            (if (null? g$ls$9349$1&dy4A)
                              (list (g$scheme-stx$8220$1&dy4A 'quote) '())
                              (if (null? (cdr g$ls$9349$1&dy4A))
                                (car g$ls$9349$1&dy4A)
                                (g$cons*$5724$1&dy4A
                                  (g$scheme-stx$8220$1&dy4A 'append)
                                  g$ls$9349$1&dy4A)))))
                         ((letrec ((g$f$9350$1&dy4A
                                     (case-lambda
                                       ((g$x$9351$1&dy4A)
                                        (if (null? g$x$9351$1&dy4A)
                                          ((case-lambda
                                             ((g$t$9352$1&dy4A)
                                              ((case-lambda
                                                 ((g$ls/false$9353$1&dy4A)
                                                  (if g$ls/false$9353$1&dy4A
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9353$1&dy4A)
                                                    ((case-lambda
                                                       ((g$t$9354$1&dy4A)
                                                        ((case-lambda
                                                           ((g$ls/false$9355$1&dy4A)
                                                            (if g$ls/false$9355$1&dy4A
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9348$1&dy4A)))
                                                                g$ls/false$9355$1&dy4A)
                                                              (g$syntax-violation$8388$1&dy4A
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9354$1&dy4A))))
                                                         (g$syntax-dispatch$8277$1&dy4A
                                                           g$t$9354$1&dy4A
                                                           '_))))
                                                     g$t$9352$1&dy4A))))
                                               (g$syntax-dispatch$8277$1&dy4A
                                                 g$t$9352$1&dy4A
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9348$1&dy4A)
                                          ((case-lambda
                                             ((g$t$9356$1&dy4A)
                                              ((case-lambda
                                                 ((g$ls/false$9357$1&dy4A)
                                                  (if g$ls/false$9357$1&dy4A
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9350$1&dy4A
                                                           (cdr g$x$9351$1&dy4A))))
                                                      g$ls/false$9357$1&dy4A)
                                                    ((case-lambda
                                                       ((g$t$9358$1&dy4A)
                                                        ((case-lambda
                                                           ((g$ls/false$9359$1&dy4A)
                                                            (if g$ls/false$9359$1&dy4A
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9351$1&dy4A)
                                                                     (g$f$9350$1&dy4A
                                                                       (cdr g$x$9351$1&dy4A)))))
                                                                g$ls/false$9359$1&dy4A)
                                                              (g$syntax-violation$8388$1&dy4A
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9358$1&dy4A))))
                                                         (g$syntax-dispatch$8277$1&dy4A
                                                           g$t$9358$1&dy4A
                                                           '_))))
                                                     g$t$9356$1&dy4A))))
                                               (g$syntax-dispatch$8277$1&dy4A
                                                 g$t$9356$1&dy4A
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9351$1&dy4A)))))))
                            g$f$9350$1&dy4A)
                          g$x$9347$1&dy4A)))))
                   (g$quasivector$9271$1&dy4A
                     (case-lambda
                       ((g$x$9322$1&dy4A)
                        ((case-lambda
                           ((g$pat-x$9323$1&dy4A)
                            ((case-lambda
                               ((g$t$9324$1&dy4A)
                                ((case-lambda
                                   ((g$ls/false$9325$1&dy4A)
                                    (if g$ls/false$9325$1&dy4A
                                      (apply
                                        (case-lambda
                                          ((g$x*$9326$1&dy4A)
                                           (list
                                             (g$scheme-stx$8220$1&dy4A 'quote)
                                             (list->vector g$x*$9326$1&dy4A))))
                                        g$ls/false$9325$1&dy4A)
                                      ((case-lambda
                                         ((g$t$9327$1&dy4A)
                                          ((case-lambda
                                             ((g$ls/false$9328$1&dy4A)
                                              (if g$ls/false$9328$1&dy4A
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9329$1&dy4A
                                                                 (case-lambda
                                                                   ((g$x$9330$1&dy4A
                                                                      g$k$9331$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$t$9332$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9333$1&dy4A)
                                                                            (if g$ls/false$9333$1&dy4A
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9334$1&dy4A)
                                                                                   (g$k$9331$1&dy4A
                                                                                     (map (case-lambda
                                                                                            ((g$x$9335$1&dy4A)
                                                                                             (list
                                                                                               (g$scheme-stx$8220$1&dy4A
                                                                                                 'quote)
                                                                                               g$x$9335$1&dy4A)))
                                                                                          g$x*$9334$1&dy4A))))
                                                                                g$ls/false$9333$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$t$9336$1&dy4A)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9337$1&dy4A)
                                                                                      (if g$ls/false$9337$1&dy4A
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9338$1&dy4A)
                                                                                             (g$k$9331$1&dy4A
                                                                                               g$x*$9338$1&dy4A)))
                                                                                          g$ls/false$9337$1&dy4A)
                                                                                        ((case-lambda
                                                                                           ((g$t$9339$1&dy4A)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9340$1&dy4A)
                                                                                                (if g$ls/false$9340$1&dy4A
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9341$1&dy4A
                                                                                                         g$y$9342$1&dy4A)
                                                                                                       (g$f$9329$1&dy4A
                                                                                                         g$y$9342$1&dy4A
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9343$1&dy4A)
                                                                                                            (g$k$9331$1&dy4A
                                                                                                              (cons
                                                                                                                g$x$9341$1&dy4A
                                                                                                                g$ls$9343$1&dy4A)))))))
                                                                                                    g$ls/false$9340$1&dy4A)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9344$1&dy4A)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9345$1&dy4A)
                                                                                                          (if g$ls/false$9345$1&dy4A
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$8220$1&dy4A
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9323$1&dy4A)))
                                                                                                              g$ls/false$9345$1&dy4A)
                                                                                                            (g$syntax-violation$8388$1&dy4A
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9344$1&dy4A))))
                                                                                                       (g$syntax-dispatch$8277$1&dy4A
                                                                                                         g$t$9344$1&dy4A
                                                                                                         '_))))
                                                                                                   g$t$9339$1&dy4A))))
                                                                                             (g$syntax-dispatch$8277$1&dy4A
                                                                                               g$t$9339$1&dy4A
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9336$1&dy4A))))
                                                                                   (g$syntax-dispatch$8277$1&dy4A
                                                                                     g$t$9336$1&dy4A
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9332$1&dy4A))))
                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                           g$t$9332$1&dy4A
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9330$1&dy4A)))))
                                                        g$f$9329$1&dy4A)
                                                      g$x$9322$1&dy4A
                                                      (case-lambda
                                                        ((g$ls$9346$1&dy4A)
                                                         (g$cons*$5724$1&dy4A
                                                           (g$scheme-stx$8220$1&dy4A
                                                             'vector)
                                                           g$ls$9346$1&dy4A))))))
                                                  g$ls/false$9328$1&dy4A)
                                                (g$syntax-violation$8388$1&dy4A
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9327$1&dy4A))))
                                           (g$syntax-dispatch$8277$1&dy4A
                                             g$t$9327$1&dy4A
                                             '_))))
                                       g$t$9324$1&dy4A))))
                                 (g$syntax-dispatch$8277$1&dy4A
                                   g$t$9324$1&dy4A
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9323$1&dy4A)))
                         g$x$9322$1&dy4A))))
                   (g$vquasi$9272$1&dy4A
                     (case-lambda
                       ((g$p$9305$1&dy4A g$lev$9306$1&dy4A)
                        ((case-lambda
                           ((g$t$9307$1&dy4A)
                            ((case-lambda
                               ((g$ls/false$9308$1&dy4A)
                                (if g$ls/false$9308$1&dy4A
                                  (apply
                                    (case-lambda
                                      ((g$p$9309$1&dy4A g$q$9310$1&dy4A)
                                       ((case-lambda
                                          ((g$t$9311$1&dy4A)
                                           ((case-lambda
                                              ((g$ls/false$9312$1&dy4A)
                                               (if g$ls/false$9312$1&dy4A
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9313$1&dy4A)
                                                      (if (= g$lev$9306$1&dy4A
                                                             '0)
                                                        (g$quasicons*$9268$1&dy4A
                                                          g$p$9313$1&dy4A
                                                          (g$vquasi$9272$1&dy4A
                                                            g$q$9310$1&dy4A
                                                            g$lev$9306$1&dy4A))
                                                        (g$quasicons$9269$1&dy4A
                                                          (g$quasicons$9269$1&dy4A
                                                            (g$datum$9252$1&dy4A
                                                              'unquote)
                                                            (g$quasi$9273$1&dy4A
                                                              g$p$9313$1&dy4A
                                                              (- g$lev$9306$1&dy4A
                                                                 '1)))
                                                          (g$vquasi$9272$1&dy4A
                                                            g$q$9310$1&dy4A
                                                            g$lev$9306$1&dy4A)))))
                                                   g$ls/false$9312$1&dy4A)
                                                 ((case-lambda
                                                    ((g$t$9314$1&dy4A)
                                                     ((case-lambda
                                                        ((g$ls/false$9315$1&dy4A)
                                                         (if g$ls/false$9315$1&dy4A
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9316$1&dy4A)
                                                                (if (= g$lev$9306$1&dy4A
                                                                       '0)
                                                                  (g$quasiappend$9270$1&dy4A
                                                                    g$p$9316$1&dy4A
                                                                    (g$vquasi$9272$1&dy4A
                                                                      g$q$9310$1&dy4A
                                                                      g$lev$9306$1&dy4A))
                                                                  (g$quasicons$9269$1&dy4A
                                                                    (g$quasicons$9269$1&dy4A
                                                                      (g$datum$9252$1&dy4A
                                                                        'unquote-splicing)
                                                                      (g$quasi$9273$1&dy4A
                                                                        g$p$9316$1&dy4A
                                                                        (- g$lev$9306$1&dy4A
                                                                           '1)))
                                                                    (g$vquasi$9272$1&dy4A
                                                                      g$q$9310$1&dy4A
                                                                      g$lev$9306$1&dy4A)))))
                                                             g$ls/false$9315$1&dy4A)
                                                           ((case-lambda
                                                              ((g$t$9317$1&dy4A)
                                                               ((case-lambda
                                                                  ((g$ls/false$9318$1&dy4A)
                                                                   (if g$ls/false$9318$1&dy4A
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9319$1&dy4A)
                                                                          (g$quasicons$9269$1&dy4A
                                                                            (g$quasi$9273$1&dy4A
                                                                              g$p$9319$1&dy4A
                                                                              g$lev$9306$1&dy4A)
                                                                            (g$vquasi$9272$1&dy4A
                                                                              g$q$9310$1&dy4A
                                                                              g$lev$9306$1&dy4A))))
                                                                       g$ls/false$9318$1&dy4A)
                                                                     (g$syntax-violation$8388$1&dy4A
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9317$1&dy4A))))
                                                                (g$syntax-dispatch$8277$1&dy4A
                                                                  g$t$9317$1&dy4A
                                                                  'any))))
                                                            g$t$9314$1&dy4A))))
                                                      (g$syntax-dispatch$8277$1&dy4A
                                                        g$t$9314$1&dy4A
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9311$1&dy4A))))
                                            (g$syntax-dispatch$8277$1&dy4A
                                              g$t$9311$1&dy4A
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9309$1&dy4A)))
                                    g$ls/false$9308$1&dy4A)
                                  ((case-lambda
                                     ((g$t$9320$1&dy4A)
                                      ((case-lambda
                                         ((g$ls/false$9321$1&dy4A)
                                          (if g$ls/false$9321$1&dy4A
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$8220$1&dy4A
                                                     'quote)
                                                   '())))
                                              g$ls/false$9321$1&dy4A)
                                            (g$syntax-violation$8388$1&dy4A
                                              '#f
                                              '"invalid syntax"
                                              g$t$9320$1&dy4A))))
                                       (g$syntax-dispatch$8277$1&dy4A
                                         g$t$9320$1&dy4A
                                         '()))))
                                   g$t$9307$1&dy4A))))
                             (g$syntax-dispatch$8277$1&dy4A
                               g$t$9307$1&dy4A
                               '(any . any)))))
                         g$p$9305$1&dy4A))))
                   (g$quasi$9273$1&dy4A
                     (case-lambda
                       ((g$p$9278$1&dy4A g$lev$9279$1&dy4A)
                        ((case-lambda
                           ((g$t$9280$1&dy4A)
                            ((case-lambda
                               ((g$ls/false$9281$1&dy4A)
                                (if g$ls/false$9281$1&dy4A
                                  (apply
                                    (case-lambda
                                      ((g$p$9282$1&dy4A)
                                       (if (= g$lev$9279$1&dy4A '0)
                                         g$p$9282$1&dy4A
                                         (g$quasicons$9269$1&dy4A
                                           (g$datum$9252$1&dy4A 'unquote)
                                           (g$quasi$9273$1&dy4A
                                             (list g$p$9282$1&dy4A)
                                             (- g$lev$9279$1&dy4A '1))))))
                                    g$ls/false$9281$1&dy4A)
                                  ((case-lambda
                                     ((g$t$9283$1&dy4A)
                                      ((case-lambda
                                         ((g$ls/false$9284$1&dy4A)
                                          (if g$ls/false$9284$1&dy4A
                                            (apply
                                              (case-lambda
                                                ((g$p$9285$1&dy4A
                                                   g$q$9286$1&dy4A)
                                                 (if (= g$lev$9279$1&dy4A '0)
                                                   (g$quasicons*$9268$1&dy4A
                                                     g$p$9285$1&dy4A
                                                     (g$quasi$9273$1&dy4A
                                                       g$q$9286$1&dy4A
                                                       g$lev$9279$1&dy4A))
                                                   (g$quasicons$9269$1&dy4A
                                                     (g$quasicons$9269$1&dy4A
                                                       (g$datum$9252$1&dy4A
                                                         'unquote)
                                                       (g$quasi$9273$1&dy4A
                                                         g$p$9285$1&dy4A
                                                         (- g$lev$9279$1&dy4A
                                                            '1)))
                                                     (g$quasi$9273$1&dy4A
                                                       g$q$9286$1&dy4A
                                                       g$lev$9279$1&dy4A)))))
                                              g$ls/false$9284$1&dy4A)
                                            ((case-lambda
                                               ((g$t$9287$1&dy4A)
                                                ((case-lambda
                                                   ((g$ls/false$9288$1&dy4A)
                                                    (if g$ls/false$9288$1&dy4A
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9289$1&dy4A
                                                             g$q$9290$1&dy4A)
                                                           (if (= g$lev$9279$1&dy4A
                                                                  '0)
                                                             (g$quasiappend$9270$1&dy4A
                                                               g$p$9289$1&dy4A
                                                               (g$quasi$9273$1&dy4A
                                                                 g$q$9290$1&dy4A
                                                                 g$lev$9279$1&dy4A))
                                                             (g$quasicons$9269$1&dy4A
                                                               (g$quasicons$9269$1&dy4A
                                                                 (g$datum$9252$1&dy4A
                                                                   'unquote-splicing)
                                                                 (g$quasi$9273$1&dy4A
                                                                   g$p$9289$1&dy4A
                                                                   (- g$lev$9279$1&dy4A
                                                                      '1)))
                                                               (g$quasi$9273$1&dy4A
                                                                 g$q$9290$1&dy4A
                                                                 g$lev$9279$1&dy4A)))))
                                                        g$ls/false$9288$1&dy4A)
                                                      ((case-lambda
                                                         ((g$t$9291$1&dy4A)
                                                          ((case-lambda
                                                             ((g$ls/false$9292$1&dy4A)
                                                              (if g$ls/false$9292$1&dy4A
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9293$1&dy4A)
                                                                     (g$quasicons$9269$1&dy4A
                                                                       (g$datum$9252$1&dy4A
                                                                         'quasiquote)
                                                                       (g$quasi$9273$1&dy4A
                                                                         (list
                                                                           g$p$9293$1&dy4A)
                                                                         (+ g$lev$9279$1&dy4A
                                                                            '1)))))
                                                                  g$ls/false$9292$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$t$9294$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9295$1&dy4A)
                                                                        (if g$ls/false$9295$1&dy4A
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9296$1&dy4A
                                                                                 g$q$9297$1&dy4A)
                                                                               (g$quasicons$9269$1&dy4A
                                                                                 (g$quasi$9273$1&dy4A
                                                                                   g$p$9296$1&dy4A
                                                                                   g$lev$9279$1&dy4A)
                                                                                 (g$quasi$9273$1&dy4A
                                                                                   g$q$9297$1&dy4A
                                                                                   g$lev$9279$1&dy4A))))
                                                                            g$ls/false$9295$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$t$9298$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9299$1&dy4A)
                                                                                  (if (if g$ls/false$9299$1&dy4A
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9300$1&dy4A)
                                                                                               (not (g$stx?$7971$1&dy4A
                                                                                                      g$x$9300$1&dy4A))))
                                                                                            g$ls/false$9299$1&dy4A))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9301$1&dy4A)
                                                                                         (g$quasivector$9271$1&dy4A
                                                                                           (g$vquasi$9272$1&dy4A
                                                                                             g$x$9301$1&dy4A
                                                                                             g$lev$9279$1&dy4A))))
                                                                                      g$ls/false$9299$1&dy4A)
                                                                                    ((case-lambda
                                                                                       ((g$t$9302$1&dy4A)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9303$1&dy4A)
                                                                                            (if g$ls/false$9303$1&dy4A
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9304$1&dy4A)
                                                                                                   (list
                                                                                                     (g$scheme-stx$8220$1&dy4A
                                                                                                       'quote)
                                                                                                     g$p$9304$1&dy4A)))
                                                                                                g$ls/false$9303$1&dy4A)
                                                                                              (g$syntax-violation$8388$1&dy4A
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9302$1&dy4A))))
                                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                                           g$t$9302$1&dy4A
                                                                                           'any))))
                                                                                     g$t$9298$1&dy4A))))
                                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                                 g$t$9298$1&dy4A
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9294$1&dy4A))))
                                                                     (g$syntax-dispatch$8277$1&dy4A
                                                                       g$t$9294$1&dy4A
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9291$1&dy4A))))
                                                           (g$syntax-dispatch$8277$1&dy4A
                                                             g$t$9291$1&dy4A
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$9287$1&dy4A))))
                                                 (g$syntax-dispatch$8277$1&dy4A
                                                   g$t$9287$1&dy4A
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9283$1&dy4A))))
                                       (g$syntax-dispatch$8277$1&dy4A
                                         g$t$9283$1&dy4A
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$9280$1&dy4A))))
                             (g$syntax-dispatch$8277$1&dy4A
                               g$t$9280$1&dy4A
                               '(#(scheme-id unquote) any)))))
                         g$p$9278$1&dy4A)))))
           (case-lambda
             ((g$x$9274$1&dy4A)
              ((case-lambda
                 ((g$t$9275$1&dy4A)
                  ((case-lambda
                     ((g$ls/false$9276$1&dy4A)
                      (if g$ls/false$9276$1&dy4A
                        (apply
                          (case-lambda
                            ((g$e$9277$1&dy4A)
                             (g$quasi$9273$1&dy4A g$e$9277$1&dy4A '0)))
                          g$ls/false$9276$1&dy4A)
                        (g$syntax-violation$8388$1&dy4A
                          '#f
                          '"invalid syntax"
                          g$t$9275$1&dy4A))))
                   (g$syntax-dispatch$8277$1&dy4A g$t$9275$1&dy4A '(_ any)))))
               g$x$9274$1&dy4A))))))))
   (g$quasisyntax-macro$8269$1&dy4A
     g$quasisyntax-macro$11760$1&dy4A
     ((case-lambda
        (()
         (letrec* ((g$quasi$9384$1&dy4A
                     (case-lambda
                       ((g$p$9398$1&dy4A g$lev$9399$1&dy4A)
                        ((case-lambda
                           ((g$t$9400$1&dy4A)
                            ((case-lambda
                               ((g$ls/false$9401$1&dy4A)
                                (if g$ls/false$9401$1&dy4A
                                  (apply
                                    (case-lambda
                                      ((g$p$9402$1&dy4A)
                                       (if (= g$lev$9399$1&dy4A '0)
                                         ((case-lambda
                                            ((g$g$9403$1&dy4A)
                                             (values
                                               (list g$g$9403$1&dy4A)
                                               (list g$p$9402$1&dy4A)
                                               g$g$9403$1&dy4A)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9384$1&dy4A
                                                g$p$9402$1&dy4A
                                                (- g$lev$9399$1&dy4A '1))))
                                           (case-lambda
                                             ((g$lhs*$9407$1&dy4A
                                                g$rhs*$9408$1&dy4A
                                                g$p$9409$1&dy4A)
                                              ((case-lambda
                                                 ((g$p$9410$1&dy4A
                                                    g$rhs*$9411$1&dy4A
                                                    g$lhs*$9412$1&dy4A)
                                                  (values
                                                    g$lhs*$9412$1&dy4A
                                                    g$rhs*$9411$1&dy4A
                                                    (list
                                                      'unsyntax
                                                      g$p$9410$1&dy4A))))
                                               g$p$9409$1&dy4A
                                               g$rhs*$9408$1&dy4A
                                               g$lhs*$9407$1&dy4A)))))))
                                    g$ls/false$9401$1&dy4A)
                                  ((case-lambda
                                     ((g$t$9413$1&dy4A)
                                      ((case-lambda
                                         ((g$ls/false$9414$1&dy4A)
                                          (if (if g$ls/false$9414$1&dy4A
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9399$1&dy4A
                                                          '0)))
                                                    g$ls/false$9414$1&dy4A))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8388$1&dy4A
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9398$1&dy4A)))
                                              g$ls/false$9414$1&dy4A)
                                            ((case-lambda
                                               ((g$t$9415$1&dy4A)
                                                ((case-lambda
                                                   ((g$ls/false$9416$1&dy4A)
                                                    (if g$ls/false$9416$1&dy4A
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$9417$1&dy4A
                                                             g$q$9418$1&dy4A)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9384$1&dy4A
                                                                  g$q$9418$1&dy4A
                                                                  g$lev$9399$1&dy4A)))
                                                             (case-lambda
                                                               ((g$lhs*$9422$1&dy4A
                                                                  g$rhs*$9423$1&dy4A
                                                                  g$q$9424$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$q$9425$1&dy4A
                                                                      g$rhs*$9426$1&dy4A
                                                                      g$lhs*$9427$1&dy4A)
                                                                    (if (= g$lev$9399$1&dy4A
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$9428$1&dy4A)
                                                                          (values
                                                                            (append
                                                                              g$g*$9428$1&dy4A
                                                                              g$lhs*$9427$1&dy4A)
                                                                            (append
                                                                              g$p*$9417$1&dy4A
                                                                              g$rhs*$9426$1&dy4A)
                                                                            (append
                                                                              g$g*$9428$1&dy4A
                                                                              g$q$9425$1&dy4A))))
                                                                       (map (case-lambda
                                                                              ((g$x$9429$1&dy4A)
                                                                               (gensym)))
                                                                            g$p*$9417$1&dy4A))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9384$1&dy4A
                                                                             g$p*$9417$1&dy4A
                                                                             (- g$lev$9399$1&dy4A
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9433$1&dy4A
                                                                             g$rhs2*$9434$1&dy4A
                                                                             g$p*$9435$1&dy4A)
                                                                           ((case-lambda
                                                                              ((g$p*$9436$1&dy4A
                                                                                 g$rhs2*$9437$1&dy4A
                                                                                 g$lhs2*$9438$1&dy4A)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9438$1&dy4A
                                                                                   g$lhs*$9427$1&dy4A)
                                                                                 (append
                                                                                   g$rhs2*$9437$1&dy4A
                                                                                   g$rhs*$9426$1&dy4A)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$9436$1&dy4A)
                                                                                   g$q$9425$1&dy4A))))
                                                                            g$p*$9435$1&dy4A
                                                                            g$rhs2*$9434$1&dy4A
                                                                            g$lhs2*$9433$1&dy4A)))))))
                                                                 g$q$9424$1&dy4A
                                                                 g$rhs*$9423$1&dy4A
                                                                 g$lhs*$9422$1&dy4A))))))
                                                        g$ls/false$9416$1&dy4A)
                                                      ((case-lambda
                                                         ((g$t$9439$1&dy4A)
                                                          ((case-lambda
                                                             ((g$ls/false$9440$1&dy4A)
                                                              (if g$ls/false$9440$1&dy4A
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$9441$1&dy4A
                                                                       g$q$9442$1&dy4A)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$9384$1&dy4A
                                                                            g$q$9442$1&dy4A
                                                                            g$lev$9399$1&dy4A)))
                                                                       (case-lambda
                                                                         ((g$lhs*$9446$1&dy4A
                                                                            g$rhs*$9447$1&dy4A
                                                                            g$q$9448$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$q$9449$1&dy4A
                                                                                g$rhs*$9450$1&dy4A
                                                                                g$lhs*$9451$1&dy4A)
                                                                              (if (= g$lev$9399$1&dy4A
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9452$1&dy4A)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$9453$1&dy4A)
                                                                                                (cons
                                                                                                  g$g$9453$1&dy4A
                                                                                                  '(...))))
                                                                                             g$g*$9452$1&dy4A)
                                                                                        g$lhs*$9451$1&dy4A)
                                                                                      (append
                                                                                        g$p*$9441$1&dy4A
                                                                                        g$rhs*$9450$1&dy4A)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$9454$1&dy4A)
                                                                                                  (cons
                                                                                                    g$g$9454$1&dy4A
                                                                                                    '(...))))
                                                                                               g$g*$9452$1&dy4A))
                                                                                        g$q$9449$1&dy4A))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$9455$1&dy4A)
                                                                                         (gensym)))
                                                                                      g$p*$9441$1&dy4A))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$9384$1&dy4A
                                                                                       g$p*$9441$1&dy4A
                                                                                       (- g$lev$9399$1&dy4A
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9459$1&dy4A
                                                                                       g$rhs2*$9460$1&dy4A
                                                                                       g$p*$9461$1&dy4A)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9462$1&dy4A
                                                                                           g$rhs2*$9463$1&dy4A
                                                                                           g$lhs2*$9464$1&dy4A)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9464$1&dy4A
                                                                                             g$lhs*$9451$1&dy4A)
                                                                                           (append
                                                                                             g$rhs2*$9463$1&dy4A
                                                                                             g$rhs*$9450$1&dy4A)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9462$1&dy4A)
                                                                                             g$q$9449$1&dy4A))))
                                                                                      g$p*$9461$1&dy4A
                                                                                      g$rhs2*$9460$1&dy4A
                                                                                      g$lhs2*$9459$1&dy4A)))))))
                                                                           g$q$9448$1&dy4A
                                                                           g$rhs*$9447$1&dy4A
                                                                           g$lhs*$9446$1&dy4A))))))
                                                                  g$ls/false$9440$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$t$9465$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9466$1&dy4A)
                                                                        (if (if g$ls/false$9466$1&dy4A
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$9399$1&dy4A
                                                                                        '0)))
                                                                                  g$ls/false$9466$1&dy4A))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$8388$1&dy4A
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$9398$1&dy4A)))
                                                                            g$ls/false$9466$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$t$9467$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9468$1&dy4A)
                                                                                  (if g$ls/false$9468$1&dy4A
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9469$1&dy4A)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9384$1&dy4A
                                                                                                g$p$9469$1&dy4A
                                                                                                (+ g$lev$9399$1&dy4A
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9473$1&dy4A
                                                                                                g$rhs*$9474$1&dy4A
                                                                                                g$p$9475$1&dy4A)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9476$1&dy4A
                                                                                                    g$rhs*$9477$1&dy4A
                                                                                                    g$lhs*$9478$1&dy4A)
                                                                                                  (values
                                                                                                    g$lhs*$9478$1&dy4A
                                                                                                    g$rhs*$9477$1&dy4A
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9476$1&dy4A))))
                                                                                               g$p$9475$1&dy4A
                                                                                               g$rhs*$9474$1&dy4A
                                                                                               g$lhs*$9473$1&dy4A))))))
                                                                                      g$ls/false$9468$1&dy4A)
                                                                                    ((case-lambda
                                                                                       ((g$t$9479$1&dy4A)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9480$1&dy4A)
                                                                                            (if g$ls/false$9480$1&dy4A
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9481$1&dy4A
                                                                                                     g$q$9482$1&dy4A)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$9384$1&dy4A
                                                                                                          g$p$9481$1&dy4A
                                                                                                          g$lev$9399$1&dy4A)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9489$1&dy4A
                                                                                                          g$rhs*$9490$1&dy4A
                                                                                                          g$p$9491$1&dy4A)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$9384$1&dy4A
                                                                                                               g$q$9482$1&dy4A
                                                                                                               g$lev$9399$1&dy4A)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$9492$1&dy4A
                                                                                                               g$rhs2*$9493$1&dy4A
                                                                                                               g$q$9494$1&dy4A)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$9495$1&dy4A
                                                                                                                   g$rhs2*$9496$1&dy4A
                                                                                                                   g$lhs2*$9497$1&dy4A
                                                                                                                   g$p$9498$1&dy4A
                                                                                                                   g$rhs*$9499$1&dy4A
                                                                                                                   g$lhs*$9500$1&dy4A)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$9497$1&dy4A
                                                                                                                     g$lhs*$9500$1&dy4A)
                                                                                                                   (append
                                                                                                                     g$rhs2*$9496$1&dy4A
                                                                                                                     g$rhs*$9499$1&dy4A)
                                                                                                                   (cons
                                                                                                                     g$p$9498$1&dy4A
                                                                                                                     g$q$9495$1&dy4A))))
                                                                                                              g$q$9494$1&dy4A
                                                                                                              g$rhs2*$9493$1&dy4A
                                                                                                              g$lhs2*$9492$1&dy4A
                                                                                                              g$p$9491$1&dy4A
                                                                                                              g$rhs*$9490$1&dy4A
                                                                                                              g$lhs*$9489$1&dy4A)))))))))
                                                                                                g$ls/false$9480$1&dy4A)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9501$1&dy4A)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9502$1&dy4A)
                                                                                                      (if g$ls/false$9502$1&dy4A
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$9503$1&dy4A)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$9384$1&dy4A
                                                                                                                    g$x*$9503$1&dy4A
                                                                                                                    g$lev$9399$1&dy4A)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$9507$1&dy4A
                                                                                                                    g$rhs*$9508$1&dy4A
                                                                                                                    g$x*$9509$1&dy4A)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$9510$1&dy4A
                                                                                                                        g$rhs*$9511$1&dy4A
                                                                                                                        g$lhs*$9512$1&dy4A)
                                                                                                                      (values
                                                                                                                        g$lhs*$9512$1&dy4A
                                                                                                                        g$rhs*$9511$1&dy4A
                                                                                                                        (list->vector
                                                                                                                          g$x*$9510$1&dy4A))))
                                                                                                                   g$x*$9509$1&dy4A
                                                                                                                   g$rhs*$9508$1&dy4A
                                                                                                                   g$lhs*$9507$1&dy4A))))))
                                                                                                          g$ls/false$9502$1&dy4A)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9513$1&dy4A)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9514$1&dy4A)
                                                                                                                (if g$ls/false$9514$1&dy4A
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$9398$1&dy4A)))
                                                                                                                    g$ls/false$9514$1&dy4A)
                                                                                                                  (g$syntax-violation$8388$1&dy4A
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9513$1&dy4A))))
                                                                                                             (g$syntax-dispatch$8277$1&dy4A
                                                                                                               g$t$9513$1&dy4A
                                                                                                               '_))))
                                                                                                         g$t$9501$1&dy4A))))
                                                                                                   (g$syntax-dispatch$8277$1&dy4A
                                                                                                     g$t$9501$1&dy4A
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$9479$1&dy4A))))
                                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                                           g$t$9479$1&dy4A
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9467$1&dy4A))))
                                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                                 g$t$9467$1&dy4A
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9465$1&dy4A))))
                                                                     (g$syntax-dispatch$8277$1&dy4A
                                                                       g$t$9465$1&dy4A
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$9439$1&dy4A))))
                                                           (g$syntax-dispatch$8277$1&dy4A
                                                             g$t$9439$1&dy4A
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$9415$1&dy4A))))
                                                 (g$syntax-dispatch$8277$1&dy4A
                                                   g$t$9415$1&dy4A
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9413$1&dy4A))))
                                       (g$syntax-dispatch$8277$1&dy4A
                                         g$t$9413$1&dy4A
                                         '#(scheme-id unsyntax)))))
                                   g$t$9400$1&dy4A))))
                             (g$syntax-dispatch$8277$1&dy4A
                               g$t$9400$1&dy4A
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9398$1&dy4A)))))
           (case-lambda
             ((g$x$9385$1&dy4A)
              ((case-lambda
                 ((g$t$9386$1&dy4A)
                  ((case-lambda
                     ((g$ls/false$9387$1&dy4A)
                      (if g$ls/false$9387$1&dy4A
                        (apply
                          (case-lambda
                            ((g$e$9388$1&dy4A)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9384$1&dy4A g$e$9388$1&dy4A '0)))
                               (case-lambda
                                 ((g$lhs*$9392$1&dy4A
                                    g$rhs*$9393$1&dy4A
                                    g$v$9394$1&dy4A)
                                  ((case-lambda
                                     ((g$v$9395$1&dy4A
                                        g$rhs*$9396$1&dy4A
                                        g$lhs*$9397$1&dy4A)
                                      (g$bless$8240$1&dy4A
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9396$1&dy4A)
                                          '()
                                          (list
                                            g$lhs*$9397$1&dy4A
                                            (list 'syntax g$v$9395$1&dy4A))))))
                                   g$v$9394$1&dy4A
                                   g$rhs*$9393$1&dy4A
                                   g$lhs*$9392$1&dy4A))))))
                          g$ls/false$9387$1&dy4A)
                        (g$syntax-violation$8388$1&dy4A
                          '#f
                          '"invalid syntax"
                          g$t$9386$1&dy4A))))
                   (g$syntax-dispatch$8277$1&dy4A g$t$9386$1&dy4A '(_ any)))))
               g$x$9385$1&dy4A))))))))
   (g$define-struct-macro$8270$1&dy4A
     g$define-struct-macro$11761$1&dy4A
     (case-lambda
       ((g$stx$9515$1&dy4A)
        (g$syntax-violation$8388$1&dy4A
          '#f
          '"define-struct not supported"
          g$stx$9515$1&dy4A))))
   (g$define-record-type-macro$8271$1&dy4A
     g$define-record-type-macro$11762$1&dy4A
     (case-lambda
       ((g$x$9516$1&dy4A)
        (letrec* ((g$id$9517$1&dy4A
                    (case-lambda
                      ((g$ctxt$9769$1&dy4A . g$str*$9770$1&dy4A)
                       (g$datum->syntax$8390$1&dy4A
                         g$ctxt$9769$1&dy4A
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9771$1&dy4A)
                                     (if (symbol? g$x$9771$1&dy4A)
                                       (symbol->string g$x$9771$1&dy4A)
                                       (if (string? g$x$9771$1&dy4A)
                                         g$x$9771$1&dy4A
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9770$1&dy4A)))))))
                  (g$get-record-name$9518$1&dy4A
                    (case-lambda
                      ((g$spec$9760$1&dy4A)
                       ((case-lambda
                          ((g$t$9761$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9762$1&dy4A)
                               (if g$ls/false$9762$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$foo$9763$1&dy4A
                                        g$make-foo$9764$1&dy4A
                                        g$foo?$9765$1&dy4A)
                                      g$foo$9763$1&dy4A))
                                   g$ls/false$9762$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9766$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9767$1&dy4A)
                                         (if g$ls/false$9767$1&dy4A
                                           (apply
                                             (case-lambda
                                               ((g$foo$9768$1&dy4A)
                                                g$foo$9768$1&dy4A))
                                             g$ls/false$9767$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$t$9766$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9766$1&dy4A
                                        'any))))
                                  g$t$9761$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9761$1&dy4A
                              '(any any any)))))
                        g$spec$9760$1&dy4A))))
                  (g$get-record-constructor-name$9519$1&dy4A
                    (case-lambda
                      ((g$spec$9750$1&dy4A)
                       ((case-lambda
                          ((g$t$9751$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9752$1&dy4A)
                               (if g$ls/false$9752$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$foo$9753$1&dy4A
                                        g$make-foo$9754$1&dy4A
                                        g$foo?$9755$1&dy4A)
                                      g$make-foo$9754$1&dy4A))
                                   g$ls/false$9752$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9756$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9757$1&dy4A)
                                         (if (if g$ls/false$9757$1&dy4A
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9758$1&dy4A)
                                                      (g$id?$7999$1&dy4A
                                                        g$foo$9758$1&dy4A)))
                                                   g$ls/false$9757$1&dy4A))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9759$1&dy4A)
                                                (g$id$9517$1&dy4A
                                                  g$foo$9759$1&dy4A
                                                  '"make-"
                                                  (g$stx->datum$8010$1&dy4A
                                                    g$foo$9759$1&dy4A))))
                                             g$ls/false$9757$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$t$9756$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9756$1&dy4A
                                        'any))))
                                  g$t$9751$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9751$1&dy4A
                              '(any any any)))))
                        g$spec$9750$1&dy4A))))
                  (g$get-record-predicate-name$9520$1&dy4A
                    (case-lambda
                      ((g$spec$9740$1&dy4A)
                       ((case-lambda
                          ((g$t$9741$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9742$1&dy4A)
                               (if g$ls/false$9742$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$foo$9743$1&dy4A
                                        g$make-foo$9744$1&dy4A
                                        g$foo?$9745$1&dy4A)
                                      g$foo?$9745$1&dy4A))
                                   g$ls/false$9742$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9746$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9747$1&dy4A)
                                         (if (if g$ls/false$9747$1&dy4A
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9748$1&dy4A)
                                                      (g$id?$7999$1&dy4A
                                                        g$foo$9748$1&dy4A)))
                                                   g$ls/false$9747$1&dy4A))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9749$1&dy4A)
                                                (g$id$9517$1&dy4A
                                                  g$foo$9749$1&dy4A
                                                  (g$stx->datum$8010$1&dy4A
                                                    g$foo$9749$1&dy4A)
                                                  '"?")))
                                             g$ls/false$9747$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$t$9746$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9746$1&dy4A
                                        'any))))
                                  g$t$9741$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9741$1&dy4A
                              '(any any any)))))
                        g$spec$9740$1&dy4A))))
                  (g$get-clause$9521$1&dy4A
                    (case-lambda
                      ((g$id$9731$1&dy4A g$ls$9732$1&dy4A)
                       ((case-lambda
                          ((g$t$9733$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9734$1&dy4A)
                               (if g$ls/false$9734$1&dy4A
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9734$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9735$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9736$1&dy4A)
                                         (if g$ls/false$9736$1&dy4A
                                           (apply
                                             (case-lambda
                                               ((g$x$9737$1&dy4A
                                                  g$rest$9738$1&dy4A
                                                  g$ls$9739$1&dy4A)
                                                (if (g$free-id=?$8003$1&dy4A
                                                      (g$bless$8240$1&dy4A
                                                        g$id$9731$1&dy4A)
                                                      g$x$9737$1&dy4A)
                                                  (cons
                                                    g$x$9737$1&dy4A
                                                    g$rest$9738$1&dy4A)
                                                  (g$get-clause$9521$1&dy4A
                                                    g$id$9731$1&dy4A
                                                    g$ls$9739$1&dy4A))))
                                             g$ls/false$9736$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$t$9735$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9735$1&dy4A
                                        '((any . any) . any)))))
                                  g$t$9733$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9733$1&dy4A
                              '()))))
                        g$ls$9732$1&dy4A))))
                  (g$foo-rtd-code$9522$1&dy4A
                    (case-lambda
                      ((g$name$9690$1&dy4A
                         g$clause*$9691$1&dy4A
                         g$parent-rtd-code$9692$1&dy4A)
                       (letrec* ((g$convert-field-spec*$9693$1&dy4A
                                   (case-lambda
                                     ((g$ls$9718$1&dy4A)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9719$1&dy4A)
                                                ((case-lambda
                                                   ((g$t$9720$1&dy4A)
                                                    ((case-lambda
                                                       ((g$ls/false$9721$1&dy4A)
                                                        (if g$ls/false$9721$1&dy4A
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9722$1&dy4A
                                                                 g$rest$9723$1&dy4A)
                                                               (list
                                                                 'mutable
                                                                 g$name$9722$1&dy4A)))
                                                            g$ls/false$9721$1&dy4A)
                                                          ((case-lambda
                                                             ((g$t$9724$1&dy4A)
                                                              ((case-lambda
                                                                 ((g$ls/false$9725$1&dy4A)
                                                                  (if g$ls/false$9725$1&dy4A
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9726$1&dy4A
                                                                           g$rest$9727$1&dy4A)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9726$1&dy4A)))
                                                                      g$ls/false$9725$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$t$9728$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9729$1&dy4A)
                                                                            (if g$ls/false$9729$1&dy4A
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9730$1&dy4A)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9730$1&dy4A)))
                                                                                g$ls/false$9729$1&dy4A)
                                                                              (g$syntax-violation$8388$1&dy4A
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9728$1&dy4A))))
                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                           g$t$9728$1&dy4A
                                                                           'any))))
                                                                     g$t$9724$1&dy4A))))
                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                 g$t$9724$1&dy4A
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9720$1&dy4A))))
                                                     (g$syntax-dispatch$8277$1&dy4A
                                                       g$t$9720$1&dy4A
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9719$1&dy4A)))
                                             g$ls$9718$1&dy4A))))))
                         ((case-lambda
                            ((g$uid-code$9694$1&dy4A
                               g$sealed?$9695$1&dy4A
                               g$opaque?$9696$1&dy4A
                               g$fields$9697$1&dy4A)
                             (g$bless$8240$1&dy4A
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9690$1&dy4A)
                                 g$parent-rtd-code$9692$1&dy4A
                                 g$uid-code$9694$1&dy4A
                                 g$sealed?$9695$1&dy4A
                                 g$opaque?$9696$1&dy4A
                                 g$fields$9697$1&dy4A))))
                          ((case-lambda
                             ((g$t$9698$1&dy4A)
                              ((case-lambda
                                 ((g$ls/false$9699$1&dy4A)
                                  (if g$ls/false$9699$1&dy4A
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9699$1&dy4A)
                                    ((case-lambda
                                       ((g$t$9700$1&dy4A)
                                        ((case-lambda
                                           ((g$ls/false$9701$1&dy4A)
                                            (if g$ls/false$9701$1&dy4A
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9702$1&dy4A)
                                                   (list
                                                     'quote
                                                     g$uid$9702$1&dy4A)))
                                                g$ls/false$9701$1&dy4A)
                                              ((case-lambda
                                                 ((g$t$9703$1&dy4A)
                                                  ((case-lambda
                                                     ((g$ls/false$9704$1&dy4A)
                                                      (if g$ls/false$9704$1&dy4A
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9704$1&dy4A)
                                                        (g$syntax-violation$8388$1&dy4A
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9703$1&dy4A))))
                                                   (g$syntax-dispatch$8277$1&dy4A
                                                     g$t$9703$1&dy4A
                                                     '_))))
                                               g$t$9700$1&dy4A))))
                                         (g$syntax-dispatch$8277$1&dy4A
                                           g$t$9700$1&dy4A
                                           '(_ any)))))
                                     g$t$9698$1&dy4A))))
                               (g$syntax-dispatch$8277$1&dy4A
                                 g$t$9698$1&dy4A
                                 '(_)))))
                           (g$get-clause$9521$1&dy4A
                             'nongenerative
                             g$clause*$9691$1&dy4A))
                          ((case-lambda
                             ((g$t$9705$1&dy4A)
                              ((case-lambda
                                 ((g$ls/false$9706$1&dy4A)
                                  (if g$ls/false$9706$1&dy4A
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9706$1&dy4A)
                                    ((case-lambda
                                       ((g$t$9707$1&dy4A)
                                        ((case-lambda
                                           ((g$ls/false$9708$1&dy4A)
                                            (if g$ls/false$9708$1&dy4A
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9708$1&dy4A)
                                              (g$syntax-violation$8388$1&dy4A
                                                '#f
                                                '"invalid syntax"
                                                g$t$9707$1&dy4A))))
                                         (g$syntax-dispatch$8277$1&dy4A
                                           g$t$9707$1&dy4A
                                           '_))))
                                     g$t$9705$1&dy4A))))
                               (g$syntax-dispatch$8277$1&dy4A
                                 g$t$9705$1&dy4A
                                 '(_ #(atom #t))))))
                           (g$get-clause$9521$1&dy4A
                             'sealed
                             g$clause*$9691$1&dy4A))
                          ((case-lambda
                             ((g$t$9709$1&dy4A)
                              ((case-lambda
                                 ((g$ls/false$9710$1&dy4A)
                                  (if g$ls/false$9710$1&dy4A
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9710$1&dy4A)
                                    ((case-lambda
                                       ((g$t$9711$1&dy4A)
                                        ((case-lambda
                                           ((g$ls/false$9712$1&dy4A)
                                            (if g$ls/false$9712$1&dy4A
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9712$1&dy4A)
                                              (g$syntax-violation$8388$1&dy4A
                                                '#f
                                                '"invalid syntax"
                                                g$t$9711$1&dy4A))))
                                         (g$syntax-dispatch$8277$1&dy4A
                                           g$t$9711$1&dy4A
                                           '_))))
                                     g$t$9709$1&dy4A))))
                               (g$syntax-dispatch$8277$1&dy4A
                                 g$t$9709$1&dy4A
                                 '(_ #(atom #t))))))
                           (g$get-clause$9521$1&dy4A
                             'opaque
                             g$clause*$9691$1&dy4A))
                          ((case-lambda
                             ((g$t$9713$1&dy4A)
                              ((case-lambda
                                 ((g$ls/false$9714$1&dy4A)
                                  (if g$ls/false$9714$1&dy4A
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9715$1&dy4A)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9693$1&dy4A
                                             g$field-spec*$9715$1&dy4A))))
                                      g$ls/false$9714$1&dy4A)
                                    ((case-lambda
                                       ((g$t$9716$1&dy4A)
                                        ((case-lambda
                                           ((g$ls/false$9717$1&dy4A)
                                            (if g$ls/false$9717$1&dy4A
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9717$1&dy4A)
                                              (g$syntax-violation$8388$1&dy4A
                                                '#f
                                                '"invalid syntax"
                                                g$t$9716$1&dy4A))))
                                         (g$syntax-dispatch$8277$1&dy4A
                                           g$t$9716$1&dy4A
                                           '_))))
                                     g$t$9713$1&dy4A))))
                               (g$syntax-dispatch$8277$1&dy4A
                                 g$t$9713$1&dy4A
                                 '(_ . each-any)))))
                           (g$get-clause$9521$1&dy4A
                             'fields
                             g$clause*$9691$1&dy4A)))))))
                  (g$parent-rtd-code$9523$1&dy4A
                    (case-lambda
                      ((g$clause*$9678$1&dy4A)
                       ((case-lambda
                          ((g$t$9679$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9680$1&dy4A)
                               (if g$ls/false$9680$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$name$9681$1&dy4A)
                                      (list
                                        'record-type-descriptor
                                        g$name$9681$1&dy4A)))
                                   g$ls/false$9680$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9682$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9683$1&dy4A)
                                         (if g$ls/false$9683$1&dy4A
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9684$1&dy4A)
                                                    ((case-lambda
                                                       ((g$ls/false$9685$1&dy4A)
                                                        (if g$ls/false$9685$1&dy4A
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9686$1&dy4A
                                                                 g$rcd$9687$1&dy4A)
                                                               g$rtd$9686$1&dy4A))
                                                            g$ls/false$9685$1&dy4A)
                                                          ((case-lambda
                                                             ((g$t$9688$1&dy4A)
                                                              ((case-lambda
                                                                 ((g$ls/false$9689$1&dy4A)
                                                                  (if g$ls/false$9689$1&dy4A
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9689$1&dy4A)
                                                                    (g$syntax-violation$8388$1&dy4A
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9688$1&dy4A))))
                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                 g$t$9688$1&dy4A
                                                                 '#(atom #f)))))
                                                           g$t$9684$1&dy4A))))
                                                     (g$syntax-dispatch$8277$1&dy4A
                                                       g$t$9684$1&dy4A
                                                       '(_ any any)))))
                                                 (g$get-clause$9521$1&dy4A
                                                   'parent-rtd
                                                   g$clause*$9678$1&dy4A))))
                                             g$ls/false$9683$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$t$9682$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9682$1&dy4A
                                        '#(atom #f)))))
                                  g$t$9679$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9679$1&dy4A
                              '(_ any)))))
                        (g$get-clause$9521$1&dy4A
                          'parent
                          g$clause*$9678$1&dy4A)))))
                  (g$parent-rcd-code$9524$1&dy4A
                    (case-lambda
                      ((g$clause*$9666$1&dy4A)
                       ((case-lambda
                          ((g$t$9667$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9668$1&dy4A)
                               (if g$ls/false$9668$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$name$9669$1&dy4A)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9669$1&dy4A)))
                                   g$ls/false$9668$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9670$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9671$1&dy4A)
                                         (if g$ls/false$9671$1&dy4A
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9672$1&dy4A)
                                                    ((case-lambda
                                                       ((g$ls/false$9673$1&dy4A)
                                                        (if g$ls/false$9673$1&dy4A
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9674$1&dy4A
                                                                 g$rcd$9675$1&dy4A)
                                                               g$rcd$9675$1&dy4A))
                                                            g$ls/false$9673$1&dy4A)
                                                          ((case-lambda
                                                             ((g$t$9676$1&dy4A)
                                                              ((case-lambda
                                                                 ((g$ls/false$9677$1&dy4A)
                                                                  (if g$ls/false$9677$1&dy4A
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9677$1&dy4A)
                                                                    (g$syntax-violation$8388$1&dy4A
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9676$1&dy4A))))
                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                 g$t$9676$1&dy4A
                                                                 '#(atom #f)))))
                                                           g$t$9672$1&dy4A))))
                                                     (g$syntax-dispatch$8277$1&dy4A
                                                       g$t$9672$1&dy4A
                                                       '(_ any any)))))
                                                 (g$get-clause$9521$1&dy4A
                                                   'parent-rtd
                                                   g$clause*$9666$1&dy4A))))
                                             g$ls/false$9671$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$t$9670$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9670$1&dy4A
                                        '#(atom #f)))))
                                  g$t$9667$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9667$1&dy4A
                              '(_ any)))))
                        (g$get-clause$9521$1&dy4A
                          'parent
                          g$clause*$9666$1&dy4A)))))
                  (g$foo-rcd-code$9525$1&dy4A
                    (case-lambda
                      ((g$clause*$9662$1&dy4A
                         g$foo-rtd$9663$1&dy4A
                         g$protocol$9664$1&dy4A
                         g$parent-rcd-code$9665$1&dy4A)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9663$1&dy4A
                         g$parent-rcd-code$9665$1&dy4A
                         g$protocol$9664$1&dy4A))))
                  (g$get-protocol-code$9526$1&dy4A
                    (case-lambda
                      ((g$clause*$9656$1&dy4A)
                       ((case-lambda
                          ((g$t$9657$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9658$1&dy4A)
                               (if g$ls/false$9658$1&dy4A
                                 (apply
                                   (case-lambda
                                     ((g$expr$9659$1&dy4A) g$expr$9659$1&dy4A))
                                   g$ls/false$9658$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9660$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9661$1&dy4A)
                                         (if g$ls/false$9661$1&dy4A
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9661$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$t$9660$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9660$1&dy4A
                                        '_))))
                                  g$t$9657$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9657$1&dy4A
                              '(_ any)))))
                        (g$get-clause$9521$1&dy4A
                          'protocol
                          g$clause*$9656$1&dy4A)))))
                  (g$get-fields$9527$1&dy4A
                    (case-lambda
                      ((g$clause*$9647$1&dy4A)
                       ((case-lambda
                          ((g$t$9648$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9649$1&dy4A)
                               (if g$ls/false$9649$1&dy4A
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9649$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9650$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9651$1&dy4A)
                                         (if g$ls/false$9651$1&dy4A
                                           (apply
                                             (case-lambda
                                               ((g$f*$9652$1&dy4A)
                                                g$f*$9652$1&dy4A))
                                             g$ls/false$9651$1&dy4A)
                                           ((case-lambda
                                              ((g$t$9653$1&dy4A)
                                               ((case-lambda
                                                  ((g$ls/false$9654$1&dy4A)
                                                   (if g$ls/false$9654$1&dy4A
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9655$1&dy4A)
                                                          (g$get-fields$9527$1&dy4A
                                                            g$rest$9655$1&dy4A)))
                                                       g$ls/false$9654$1&dy4A)
                                                     (g$syntax-violation$8388$1&dy4A
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9653$1&dy4A))))
                                                (g$syntax-dispatch$8277$1&dy4A
                                                  g$t$9653$1&dy4A
                                                  '(_ . any)))))
                                            g$t$9650$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9650$1&dy4A
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9648$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9648$1&dy4A
                              '()))))
                        g$clause*$9647$1&dy4A))))
                  (g$get-mutator-indices$9528$1&dy4A
                    (case-lambda
                      ((g$fields$9635$1&dy4A)
                       ((letrec ((g$f$9636$1&dy4A
                                   (case-lambda
                                     ((g$fields$9637$1&dy4A g$i$9638$1&dy4A)
                                      ((case-lambda
                                         ((g$t$9639$1&dy4A)
                                          ((case-lambda
                                             ((g$ls/false$9640$1&dy4A)
                                              (if g$ls/false$9640$1&dy4A
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9640$1&dy4A)
                                                ((case-lambda
                                                   ((g$t$9641$1&dy4A)
                                                    ((case-lambda
                                                       ((g$ls/false$9642$1&dy4A)
                                                        (if g$ls/false$9642$1&dy4A
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9643$1&dy4A)
                                                               (cons
                                                                 g$i$9638$1&dy4A
                                                                 (g$f$9636$1&dy4A
                                                                   g$rest$9643$1&dy4A
                                                                   (+ g$i$9638$1&dy4A
                                                                      '1)))))
                                                            g$ls/false$9642$1&dy4A)
                                                          ((case-lambda
                                                             ((g$t$9644$1&dy4A)
                                                              ((case-lambda
                                                                 ((g$ls/false$9645$1&dy4A)
                                                                  (if g$ls/false$9645$1&dy4A
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9646$1&dy4A)
                                                                         (g$f$9636$1&dy4A
                                                                           g$rest$9646$1&dy4A
                                                                           (+ g$i$9638$1&dy4A
                                                                              '1))))
                                                                      g$ls/false$9645$1&dy4A)
                                                                    (g$syntax-violation$8388$1&dy4A
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9644$1&dy4A))))
                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                 g$t$9644$1&dy4A
                                                                 '(_ . any)))))
                                                           g$t$9641$1&dy4A))))
                                                     (g$syntax-dispatch$8277$1&dy4A
                                                       g$t$9641$1&dy4A
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9639$1&dy4A))))
                                           (g$syntax-dispatch$8277$1&dy4A
                                             g$t$9639$1&dy4A
                                             '()))))
                                       g$fields$9637$1&dy4A)))))
                          g$f$9636$1&dy4A)
                        g$fields$9635$1&dy4A
                        '0))))
                  (g$get-mutators$9529$1&dy4A
                    (case-lambda
                      ((g$foo$9614$1&dy4A g$fields$9615$1&dy4A)
                       (letrec* ((g$gen-name$9616$1&dy4A
                                   (case-lambda
                                     ((g$x$9634$1&dy4A)
                                      (g$datum->syntax$8390$1&dy4A
                                        g$foo$9614$1&dy4A
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8391$1&dy4A
                                                g$foo$9614$1&dy4A))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8391$1&dy4A
                                                g$x$9634$1&dy4A))
                                            '"-set!")))))))
                         ((letrec ((g$f$9617$1&dy4A
                                     (case-lambda
                                       ((g$fields$9618$1&dy4A)
                                        ((case-lambda
                                           ((g$t$9619$1&dy4A)
                                            ((case-lambda
                                               ((g$ls/false$9620$1&dy4A)
                                                (if g$ls/false$9620$1&dy4A
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9620$1&dy4A)
                                                  ((case-lambda
                                                     ((g$t$9621$1&dy4A)
                                                      ((case-lambda
                                                         ((g$ls/false$9622$1&dy4A)
                                                          (if g$ls/false$9622$1&dy4A
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9623$1&dy4A
                                                                   g$accessor$9624$1&dy4A
                                                                   g$mutator$9625$1&dy4A
                                                                   g$rest$9626$1&dy4A)
                                                                 (cons
                                                                   g$mutator$9625$1&dy4A
                                                                   (g$f$9617$1&dy4A
                                                                     g$rest$9626$1&dy4A))))
                                                              g$ls/false$9622$1&dy4A)
                                                            ((case-lambda
                                                               ((g$t$9627$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$ls/false$9628$1&dy4A)
                                                                    (if g$ls/false$9628$1&dy4A
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9629$1&dy4A
                                                                             g$rest$9630$1&dy4A)
                                                                           (cons
                                                                             (g$gen-name$9616$1&dy4A
                                                                               g$name$9629$1&dy4A)
                                                                             (g$f$9617$1&dy4A
                                                                               g$rest$9630$1&dy4A))))
                                                                        g$ls/false$9628$1&dy4A)
                                                                      ((case-lambda
                                                                         ((g$t$9631$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9632$1&dy4A)
                                                                              (if g$ls/false$9632$1&dy4A
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9633$1&dy4A)
                                                                                     (g$f$9617$1&dy4A
                                                                                       g$rest$9633$1&dy4A)))
                                                                                  g$ls/false$9632$1&dy4A)
                                                                                (g$syntax-violation$8388$1&dy4A
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9631$1&dy4A))))
                                                                           (g$syntax-dispatch$8277$1&dy4A
                                                                             g$t$9631$1&dy4A
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9627$1&dy4A))))
                                                                 (g$syntax-dispatch$8277$1&dy4A
                                                                   g$t$9627$1&dy4A
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9621$1&dy4A))))
                                                       (g$syntax-dispatch$8277$1&dy4A
                                                         g$t$9621$1&dy4A
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9619$1&dy4A))))
                                             (g$syntax-dispatch$8277$1&dy4A
                                               g$t$9619$1&dy4A
                                               '()))))
                                         g$fields$9618$1&dy4A)))))
                            g$f$9617$1&dy4A)
                          g$fields$9615$1&dy4A)))))
                  (g$get-accessors$9530$1&dy4A
                    (case-lambda
                      ((g$foo$9580$1&dy4A g$fields$9581$1&dy4A)
                       (letrec* ((g$gen-name$9582$1&dy4A
                                   (case-lambda
                                     ((g$x$9613$1&dy4A)
                                      (g$datum->syntax$8390$1&dy4A
                                        g$foo$9580$1&dy4A
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8391$1&dy4A
                                                g$foo$9580$1&dy4A))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8391$1&dy4A
                                                g$x$9613$1&dy4A)))))))))
                         (map (case-lambda
                                ((g$field$9583$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9584$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9585$1&dy4A)
                                         (if (if g$ls/false$9585$1&dy4A
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$9586$1&dy4A
                                                        g$accessor$9587$1&dy4A
                                                        g$mutator$9588$1&dy4A)
                                                      (g$id?$7999$1&dy4A
                                                        g$accessor$9587$1&dy4A)))
                                                   g$ls/false$9585$1&dy4A))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$9589$1&dy4A
                                                  g$accessor$9590$1&dy4A
                                                  g$mutator$9591$1&dy4A)
                                                g$accessor$9590$1&dy4A))
                                             g$ls/false$9585$1&dy4A)
                                           ((case-lambda
                                              ((g$t$9592$1&dy4A)
                                               ((case-lambda
                                                  ((g$ls/false$9593$1&dy4A)
                                                   (if (if g$ls/false$9593$1&dy4A
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$9594$1&dy4A
                                                                  g$accessor$9595$1&dy4A)
                                                                (g$id?$7999$1&dy4A
                                                                  g$accessor$9595$1&dy4A)))
                                                             g$ls/false$9593$1&dy4A))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$9596$1&dy4A
                                                            g$accessor$9597$1&dy4A)
                                                          g$accessor$9597$1&dy4A))
                                                       g$ls/false$9593$1&dy4A)
                                                     ((case-lambda
                                                        ((g$t$9598$1&dy4A)
                                                         ((case-lambda
                                                            ((g$ls/false$9599$1&dy4A)
                                                             (if (if g$ls/false$9599$1&dy4A
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$9600$1&dy4A)
                                                                          (g$id?$7999$1&dy4A
                                                                            g$name$9600$1&dy4A)))
                                                                       g$ls/false$9599$1&dy4A))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$9601$1&dy4A)
                                                                    (g$gen-name$9582$1&dy4A
                                                                      g$name$9601$1&dy4A)))
                                                                 g$ls/false$9599$1&dy4A)
                                                               ((case-lambda
                                                                  ((g$t$9602$1&dy4A)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9603$1&dy4A)
                                                                       (if (if g$ls/false$9603$1&dy4A
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$9604$1&dy4A)
                                                                                    (g$id?$7999$1&dy4A
                                                                                      g$name$9604$1&dy4A)))
                                                                                 g$ls/false$9603$1&dy4A))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$9605$1&dy4A)
                                                                              (g$gen-name$9582$1&dy4A
                                                                                g$name$9605$1&dy4A)))
                                                                           g$ls/false$9603$1&dy4A)
                                                                         ((case-lambda
                                                                            ((g$t$9606$1&dy4A)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9607$1&dy4A)
                                                                                 (if (if g$ls/false$9607$1&dy4A
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$9608$1&dy4A)
                                                                                              (g$id?$7999$1&dy4A
                                                                                                g$name$9608$1&dy4A)))
                                                                                           g$ls/false$9607$1&dy4A))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$9609$1&dy4A)
                                                                                        (g$gen-name$9582$1&dy4A
                                                                                          g$name$9609$1&dy4A)))
                                                                                     g$ls/false$9607$1&dy4A)
                                                                                   ((case-lambda
                                                                                      ((g$t$9610$1&dy4A)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9611$1&dy4A)
                                                                                           (if g$ls/false$9611$1&dy4A
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$9612$1&dy4A)
                                                                                                  (g$syntax-violation$8388$1&dy4A
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$9583$1&dy4A)))
                                                                                               g$ls/false$9611$1&dy4A)
                                                                                             (g$syntax-violation$8388$1&dy4A
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9610$1&dy4A))))
                                                                                        (g$syntax-dispatch$8277$1&dy4A
                                                                                          g$t$9610$1&dy4A
                                                                                          'any))))
                                                                                    g$t$9606$1&dy4A))))
                                                                              (g$syntax-dispatch$8277$1&dy4A
                                                                                g$t$9606$1&dy4A
                                                                                'any))))
                                                                          g$t$9602$1&dy4A))))
                                                                    (g$syntax-dispatch$8277$1&dy4A
                                                                      g$t$9602$1&dy4A
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$9598$1&dy4A))))
                                                          (g$syntax-dispatch$8277$1&dy4A
                                                            g$t$9598$1&dy4A
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$9592$1&dy4A))))
                                                (g$syntax-dispatch$8277$1&dy4A
                                                  g$t$9592$1&dy4A
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$9584$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9584$1&dy4A
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$9583$1&dy4A)))
                              g$fields$9581$1&dy4A)))))
                  (g$enumerate$9531$1&dy4A
                    (case-lambda
                      ((g$ls$9576$1&dy4A)
                       ((letrec ((g$f$9577$1&dy4A
                                   (case-lambda
                                     ((g$ls$9578$1&dy4A g$i$9579$1&dy4A)
                                      (if (null? g$ls$9578$1&dy4A)
                                        '()
                                        (cons
                                          g$i$9579$1&dy4A
                                          (g$f$9577$1&dy4A
                                            (cdr g$ls$9578$1&dy4A)
                                            (+ g$i$9579$1&dy4A '1))))))))
                          g$f$9577$1&dy4A)
                        g$ls$9576$1&dy4A
                        '0))))
                  (g$do-define-record$9532$1&dy4A
                    (case-lambda
                      ((g$namespec$9556$1&dy4A g$clause*$9557$1&dy4A)
                       ((case-lambda
                          ((g$foo$9558$1&dy4A)
                           ((case-lambda
                              ((g$foo-rtd$9559$1&dy4A)
                               ((case-lambda
                                  ((g$foo-rcd$9560$1&dy4A)
                                   ((case-lambda
                                      ((g$protocol$9561$1&dy4A)
                                       ((case-lambda
                                          ((g$make-foo$9562$1&dy4A)
                                           ((case-lambda
                                              ((g$fields$9563$1&dy4A)
                                               ((case-lambda
                                                  ((g$idx*$9564$1&dy4A)
                                                   ((case-lambda
                                                      ((g$foo-x*$9565$1&dy4A)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9566$1&dy4A)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9567$1&dy4A)
                                                               ((case-lambda
                                                                  ((g$foo?$9568$1&dy4A)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9569$1&dy4A)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9570$1&dy4A)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9571$1&dy4A)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$8240$1&dy4A
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$9559$1&dy4A
                                                                                           g$foo-rtd-code$9569$1&dy4A)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$9561$1&dy4A
                                                                                             g$protocol-code$9571$1&dy4A)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$9560$1&dy4A
                                                                                               g$foo-rcd-code$9570$1&dy4A)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$9558$1&dy4A
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$9559$1&dy4A)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$9560$1&dy4A)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$9568$1&dy4A
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$9559$1&dy4A))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$9562$1&dy4A
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$9560$1&dy4A))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$9572$1&dy4A
                                                                                                               g$idx$9573$1&dy4A)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$9572$1&dy4A
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$9559$1&dy4A
                                                                                                                 g$idx$9573$1&dy4A))))
                                                                                                          g$foo-x*$9565$1&dy4A
                                                                                                          g$idx*$9564$1&dy4A)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$9574$1&dy4A
                                                                                                               g$idx$9575$1&dy4A)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$9574$1&dy4A
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$9559$1&dy4A
                                                                                                                 g$idx$9575$1&dy4A))))
                                                                                                          g$set-foo-x!*$9566$1&dy4A
                                                                                                          g$set-foo-idx*$9567$1&dy4A)))))))))))))))
                                                                            (g$get-protocol-code$9526$1&dy4A
                                                                              g$clause*$9557$1&dy4A))))
                                                                        (g$foo-rcd-code$9525$1&dy4A
                                                                          g$clause*$9557$1&dy4A
                                                                          g$foo-rtd$9559$1&dy4A
                                                                          g$protocol$9561$1&dy4A
                                                                          (g$parent-rcd-code$9524$1&dy4A
                                                                            g$clause*$9557$1&dy4A)))))
                                                                    (g$foo-rtd-code$9522$1&dy4A
                                                                      g$foo$9558$1&dy4A
                                                                      g$clause*$9557$1&dy4A
                                                                      (g$parent-rtd-code$9523$1&dy4A
                                                                        g$clause*$9557$1&dy4A)))))
                                                                (g$get-record-predicate-name$9520$1&dy4A
                                                                  g$namespec$9556$1&dy4A))))
                                                            (g$get-mutator-indices$9528$1&dy4A
                                                              g$fields$9563$1&dy4A))))
                                                        (g$get-mutators$9529$1&dy4A
                                                          g$foo$9558$1&dy4A
                                                          g$fields$9563$1&dy4A))))
                                                    (g$get-accessors$9530$1&dy4A
                                                      g$foo$9558$1&dy4A
                                                      g$fields$9563$1&dy4A))))
                                                (g$enumerate$9531$1&dy4A
                                                  g$fields$9563$1&dy4A))))
                                            (g$get-fields$9527$1&dy4A
                                              g$clause*$9557$1&dy4A))))
                                        (g$get-record-constructor-name$9519$1&dy4A
                                          g$namespec$9556$1&dy4A))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9518$1&dy4A
                          g$namespec$9556$1&dy4A)))))
                  (g$verify-clauses$9533$1&dy4A
                    (case-lambda
                      ((g$x$9538$1&dy4A g$cls*$9539$1&dy4A)
                       (letrec* ((g$valid-kwds$9540$1&dy4A
                                   (map g$bless$8240$1&dy4A
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$9541$1&dy4A
                                   (case-lambda
                                     ((g$x$9553$1&dy4A g$ls$9554$1&dy4A)
                                      (if (pair? g$ls$9554$1&dy4A)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9555$1&dy4A)
                                              (if g$t$9555$1&dy4A
                                                g$t$9555$1&dy4A
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9541$1&dy4A
                                                    g$x$9553$1&dy4A
                                                    (cdr g$ls$9554$1&dy4A))))))
                                           (g$free-id=?$8003$1&dy4A
                                             g$x$9553$1&dy4A
                                             (car g$ls$9554$1&dy4A))))
                                        '#f)))))
                         ((letrec ((g$f$9542$1&dy4A
                                     (case-lambda
                                       ((g$cls*$9543$1&dy4A g$seen*$9544$1&dy4A)
                                        (if (not (null? g$cls*$9543$1&dy4A))
                                          ((case-lambda
                                             ((g$t$9545$1&dy4A)
                                              ((case-lambda
                                                 ((g$ls/false$9546$1&dy4A)
                                                  (if g$ls/false$9546$1&dy4A
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9547$1&dy4A
                                                           g$rest$9548$1&dy4A)
                                                         (if ((case-lambda
                                                                ((g$t$9549$1&dy4A)
                                                                 (if g$t$9549$1&dy4A
                                                                   g$t$9549$1&dy4A
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9541$1&dy4A
                                                                            g$kwd$9547$1&dy4A
                                                                            g$valid-kwds$9540$1&dy4A))))))
                                                              (not (g$id?$7999$1&dy4A
                                                                     g$kwd$9547$1&dy4A)))
                                                           (g$syntax-violation$8388$1&dy4A
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9547$1&dy4A)
                                                           (if (g$bound-id-member?$8006$1&dy4A
                                                                 g$kwd$9547$1&dy4A
                                                                 g$seen*$9544$1&dy4A)
                                                             (g$syntax-violation$8388$1&dy4A
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9538$1&dy4A
                                                               g$kwd$9547$1&dy4A)
                                                             (g$f$9542$1&dy4A
                                                               (cdr g$cls*$9543$1&dy4A)
                                                               (cons
                                                                 g$kwd$9547$1&dy4A
                                                                 g$seen*$9544$1&dy4A))))))
                                                      g$ls/false$9546$1&dy4A)
                                                    ((case-lambda
                                                       ((g$t$9550$1&dy4A)
                                                        ((case-lambda
                                                           ((g$ls/false$9551$1&dy4A)
                                                            (if g$ls/false$9551$1&dy4A
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9552$1&dy4A)
                                                                   (g$syntax-violation$8388$1&dy4A
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9552$1&dy4A)))
                                                                g$ls/false$9551$1&dy4A)
                                                              (g$syntax-violation$8388$1&dy4A
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9550$1&dy4A))))
                                                         (g$syntax-dispatch$8277$1&dy4A
                                                           g$t$9550$1&dy4A
                                                           'any))))
                                                     g$t$9545$1&dy4A))))
                                               (g$syntax-dispatch$8277$1&dy4A
                                                 g$t$9545$1&dy4A
                                                 '(any . any)))))
                                           (car g$cls*$9543$1&dy4A))
                                          (void))))))
                            g$f$9542$1&dy4A)
                          g$cls*$9539$1&dy4A
                          '()))))))
          ((case-lambda
             ((g$t$9534$1&dy4A)
              ((case-lambda
                 ((g$ls/false$9535$1&dy4A)
                  (if g$ls/false$9535$1&dy4A
                    (apply
                      (case-lambda
                        ((g$namespec$9536$1&dy4A g$clause*$9537$1&dy4A)
                         (begin
                           (g$verify-clauses$9533$1&dy4A
                             g$x$9516$1&dy4A
                             g$clause*$9537$1&dy4A)
                           (g$do-define-record$9532$1&dy4A
                             g$namespec$9536$1&dy4A
                             g$clause*$9537$1&dy4A))))
                      g$ls/false$9535$1&dy4A)
                    (g$syntax-violation$8388$1&dy4A
                      '#f
                      '"invalid syntax"
                      g$t$9534$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$9534$1&dy4A
                 '(_ any . each-any)))))
           g$x$9516$1&dy4A)))))
   (g$define-condition-type-macro$8272$1&dy4A
     g$define-condition-type-macro$11763$1&dy4A
     (case-lambda
       ((g$x$9772$1&dy4A)
        (letrec* ((g$mkname$9773$1&dy4A
                    (case-lambda
                      ((g$name$9796$1&dy4A g$suffix$9797$1&dy4A)
                       (g$datum->syntax$8390$1&dy4A
                         g$name$9796$1&dy4A
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8391$1&dy4A g$name$9796$1&dy4A))
                             g$suffix$9797$1&dy4A)))))))
          ((case-lambda
             ((g$t$9774$1&dy4A)
              ((case-lambda
                 ((g$ls/false$9775$1&dy4A)
                  (if (if g$ls/false$9775$1&dy4A
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9776$1&dy4A
                                 g$name$9777$1&dy4A
                                 g$super$9778$1&dy4A
                                 g$constructor$9779$1&dy4A
                                 g$predicate$9780$1&dy4A
                                 g$field*$9781$1&dy4A
                                 g$accessor*$9782$1&dy4A)
                               (if (g$id?$7999$1&dy4A g$name$9777$1&dy4A)
                                 (if (g$id?$7999$1&dy4A g$super$9778$1&dy4A)
                                   (if (g$id?$7999$1&dy4A
                                         g$constructor$9779$1&dy4A)
                                     (if (g$id?$7999$1&dy4A
                                           g$predicate$9780$1&dy4A)
                                       (if (g$for-all$5722$1&dy4A
                                             g$id?$7999$1&dy4A
                                             g$field*$9781$1&dy4A)
                                         (begin
                                           '#f
                                           (g$for-all$5722$1&dy4A
                                             g$id?$7999$1&dy4A
                                             g$accessor*$9782$1&dy4A))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9775$1&dy4A))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9783$1&dy4A
                           g$name$9784$1&dy4A
                           g$super$9785$1&dy4A
                           g$constructor$9786$1&dy4A
                           g$predicate$9787$1&dy4A
                           g$field*$9788$1&dy4A
                           g$accessor*$9789$1&dy4A)
                         ((case-lambda
                            ((g$aux-accessor*$9790$1&dy4A)
                             (g$bless$8240$1&dy4A
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9784$1&dy4A
                                         g$constructor$9786$1&dy4A
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9785$1&dy4A)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9791$1&dy4A
                                                       g$aux$9792$1&dy4A)
                                                     (list
                                                       'immutable
                                                       g$field$9791$1&dy4A
                                                       g$aux$9792$1&dy4A)))
                                                  g$field*$9788$1&dy4A
                                                  g$aux-accessor*$9790$1&dy4A))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9787$1&dy4A
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9784$1&dy4A)))
                                     (map (case-lambda
                                            ((g$accessor$9793$1&dy4A
                                               g$aux$9794$1&dy4A)
                                             (list
                                               'define
                                               g$accessor$9793$1&dy4A
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9784$1&dy4A)
                                                 g$aux$9794$1&dy4A))))
                                          g$accessor*$9789$1&dy4A
                                          g$aux-accessor*$9790$1&dy4A)))))))
                          (map (case-lambda ((g$x$9795$1&dy4A) (gensym)))
                               g$accessor*$9789$1&dy4A))))
                      g$ls/false$9775$1&dy4A)
                    (g$syntax-violation$8388$1&dy4A
                      '#f
                      '"invalid syntax"
                      g$t$9774$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$9774$1&dy4A
                 '(any any any any any . #(each (any any)))))))
           g$x$9772$1&dy4A)))))
   (g$incorrect-usage-macro$8273$1&dy4A
     g$incorrect-usage-macro$11764$1&dy4A
     (case-lambda
       ((g$e$9798$1&dy4A)
        (g$syntax-violation$8388$1&dy4A
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9798$1&dy4A))))
   (g$parameterize-macro$8274$1&dy4A
     g$parameterize-macro$11765$1&dy4A
     (case-lambda
       ((g$e$9799$1&dy4A)
        ((case-lambda
           ((g$t$9800$1&dy4A)
            ((case-lambda
               ((g$ls/false$9801$1&dy4A)
                (if g$ls/false$9801$1&dy4A
                  (apply
                    (case-lambda
                      ((g$b$9802$1&dy4A g$b*$9803$1&dy4A)
                       (g$bless$8240$1&dy4A
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$9802$1&dy4A g$b*$9803$1&dy4A))))))
                    g$ls/false$9801$1&dy4A)
                  ((case-lambda
                     ((g$t$9804$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$9805$1&dy4A)
                          (if g$ls/false$9805$1&dy4A
                            (apply
                              (case-lambda
                                ((g$olhs*$9806$1&dy4A
                                   g$orhs*$9807$1&dy4A
                                   g$b$9808$1&dy4A
                                   g$b*$9809$1&dy4A)
                                 ((case-lambda
                                    ((g$lhs*$9810$1&dy4A g$rhs*$9811$1&dy4A)
                                     (g$bless$8240$1&dy4A
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9810$1&dy4A
                                             g$rhs*$9811$1&dy4A)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9812$1&dy4A
                                                               g$rhs$9813$1&dy4A)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9812$1&dy4A)))
                                                               (list
                                                                 g$lhs$9812$1&dy4A
                                                                 g$rhs$9813$1&dy4A)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9813$1&dy4A
                                                                   '(t))))))
                                                          g$lhs*$9810$1&dy4A
                                                          g$rhs*$9811$1&dy4A)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9808$1&dy4A
                                                         g$b*$9809$1&dy4A)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9806$1&dy4A
                                           g$orhs*$9807$1&dy4A)))))
                                  (g$generate-temporaries$8378$1&dy4A
                                    g$olhs*$9806$1&dy4A)
                                  (g$generate-temporaries$8378$1&dy4A
                                    g$orhs*$9807$1&dy4A))))
                              g$ls/false$9805$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$9804$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$9804$1&dy4A
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9800$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$9800$1&dy4A
               '(_ () any . each-any)))))
         g$e$9799$1&dy4A))))
   (g$foreign-call-transformer$8275$1&dy4A
     g$foreign-call-transformer$11766$1&dy4A
     (case-lambda
       ((g$e$9814$1&dy4A g$r$9815$1&dy4A g$mr$9816$1&dy4A)
        ((case-lambda
           ((g$t$9817$1&dy4A)
            ((case-lambda
               ((g$ls/false$9818$1&dy4A)
                (if g$ls/false$9818$1&dy4A
                  (apply
                    (case-lambda
                      ((g$name$9819$1&dy4A g$arg*$9820$1&dy4A)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$8295$1&dy4A
                             g$name$9819$1&dy4A
                             g$r$9815$1&dy4A
                             g$mr$9816$1&dy4A)
                           (g$chi-expr*$8293$1&dy4A
                             g$arg*$9820$1&dy4A
                             g$r$9815$1&dy4A
                             g$mr$9816$1&dy4A)))))
                    g$ls/false$9818$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$9817$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$9817$1&dy4A
               '(_ any . each-any)))))
         g$e$9814$1&dy4A))))
   (g$convert-pattern$8276$1&dy4A
     g$convert-pattern$11767$1&dy4A
     (case-lambda
       ((g$pattern$9821$1&dy4A g$keys$9822$1&dy4A)
        (letrec* ((g$cvt*$9823$1&dy4A
                    (case-lambda
                      ((g$p*$9903$1&dy4A g$n$9904$1&dy4A g$ids$9905$1&dy4A)
                       (if (null? g$p*$9903$1&dy4A)
                         (values '() g$ids$9905$1&dy4A)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9823$1&dy4A
                                (cdr g$p*$9903$1&dy4A)
                                g$n$9904$1&dy4A
                                g$ids$9905$1&dy4A)))
                           (case-lambda
                             ((g$y$9908$1&dy4A g$ids$9909$1&dy4A)
                              ((case-lambda
                                 ((g$ids$9910$1&dy4A g$y$9911$1&dy4A)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9824$1&dy4A
                                         (car g$p*$9903$1&dy4A)
                                         g$n$9904$1&dy4A
                                         g$ids$9910$1&dy4A)))
                                    (case-lambda
                                      ((g$x$9914$1&dy4A g$ids$9915$1&dy4A)
                                       ((case-lambda
                                          ((g$ids$9916$1&dy4A g$x$9917$1&dy4A)
                                           (values
                                             (cons
                                               g$x$9917$1&dy4A
                                               g$y$9911$1&dy4A)
                                             g$ids$9916$1&dy4A)))
                                        g$ids$9915$1&dy4A
                                        g$x$9914$1&dy4A))))))
                               g$ids$9909$1&dy4A
                               g$y$9908$1&dy4A))))))))
                  (g$cvt$9824$1&dy4A
                    (case-lambda
                      ((g$p$9825$1&dy4A g$n$9826$1&dy4A g$ids$9827$1&dy4A)
                       ((case-lambda
                          ((g$t$9828$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$9829$1&dy4A)
                               (if (if g$ls/false$9829$1&dy4A
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9830$1&dy4A)
                                            (g$id?$7999$1&dy4A
                                              g$id$9830$1&dy4A)))
                                         g$ls/false$9829$1&dy4A))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9831$1&dy4A)
                                      (if (g$bound-id-member?$8006$1&dy4A
                                            g$p$9825$1&dy4A
                                            g$keys$9822$1&dy4A)
                                        (values
                                          (vector 'free-id g$p$9825$1&dy4A)
                                          g$ids$9827$1&dy4A)
                                        (if (g$free-id=?$8003$1&dy4A
                                              g$p$9825$1&dy4A
                                              (g$scheme-stx$8220$1&dy4A '_))
                                          (values '_ g$ids$9827$1&dy4A)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9825$1&dy4A
                                                g$n$9826$1&dy4A)
                                              g$ids$9827$1&dy4A))))))
                                   g$ls/false$9829$1&dy4A)
                                 ((case-lambda
                                    ((g$t$9832$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$9833$1&dy4A)
                                         (if (if g$ls/false$9833$1&dy4A
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9834$1&dy4A
                                                        g$dots$9835$1&dy4A)
                                                      (g$ellipsis?$8278$1&dy4A
                                                        g$dots$9835$1&dy4A)))
                                                   g$ls/false$9833$1&dy4A))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9836$1&dy4A
                                                  g$dots$9837$1&dy4A)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9824$1&dy4A
                                                       g$p$9836$1&dy4A
                                                       (+ g$n$9826$1&dy4A '1)
                                                       g$ids$9827$1&dy4A)))
                                                  (case-lambda
                                                    ((g$p$9840$1&dy4A
                                                       g$ids$9841$1&dy4A)
                                                     ((case-lambda
                                                        ((g$ids$9842$1&dy4A
                                                           g$p$9843$1&dy4A)
                                                         (values
                                                           (if (eq? g$p$9843$1&dy4A
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9843$1&dy4A))
                                                           g$ids$9842$1&dy4A)))
                                                      g$ids$9841$1&dy4A
                                                      g$p$9840$1&dy4A))))))
                                             g$ls/false$9833$1&dy4A)
                                           ((case-lambda
                                              ((g$t$9844$1&dy4A)
                                               ((case-lambda
                                                  ((g$ls/false$9845$1&dy4A)
                                                   (if (if g$ls/false$9845$1&dy4A
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9846$1&dy4A
                                                                  g$dots$9847$1&dy4A
                                                                  g$ys$9848$1&dy4A
                                                                  g$z$9849$1&dy4A)
                                                                (g$ellipsis?$8278$1&dy4A
                                                                  g$dots$9847$1&dy4A)))
                                                             g$ls/false$9845$1&dy4A))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9850$1&dy4A
                                                            g$dots$9851$1&dy4A
                                                            g$ys$9852$1&dy4A
                                                            g$z$9853$1&dy4A)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9824$1&dy4A
                                                                 g$z$9853$1&dy4A
                                                                 g$n$9826$1&dy4A
                                                                 g$ids$9827$1&dy4A)))
                                                            (case-lambda
                                                              ((g$z$9856$1&dy4A
                                                                 g$ids$9857$1&dy4A)
                                                               ((case-lambda
                                                                  ((g$ids$9858$1&dy4A
                                                                     g$z$9859$1&dy4A)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9823$1&dy4A
                                                                          g$ys$9852$1&dy4A
                                                                          g$n$9826$1&dy4A
                                                                          g$ids$9858$1&dy4A)))
                                                                     (case-lambda
                                                                       ((g$ys$9862$1&dy4A
                                                                          g$ids$9863$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$ids$9864$1&dy4A
                                                                              g$ys$9865$1&dy4A)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9824$1&dy4A
                                                                                   g$x$9850$1&dy4A
                                                                                   (+ g$n$9826$1&dy4A
                                                                                      '1)
                                                                                   g$ids$9864$1&dy4A)))
                                                                              (case-lambda
                                                                                ((g$x$9868$1&dy4A
                                                                                   g$ids$9869$1&dy4A)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9870$1&dy4A
                                                                                       g$x$9871$1&dy4A)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9871$1&dy4A
                                                                                         (reverse
                                                                                           g$ys$9865$1&dy4A)
                                                                                         g$z$9859$1&dy4A)
                                                                                       g$ids$9870$1&dy4A)))
                                                                                  g$ids$9869$1&dy4A
                                                                                  g$x$9868$1&dy4A))))))
                                                                         g$ids$9863$1&dy4A
                                                                         g$ys$9862$1&dy4A))))))
                                                                g$ids$9857$1&dy4A
                                                                g$z$9856$1&dy4A))))))
                                                       g$ls/false$9845$1&dy4A)
                                                     ((case-lambda
                                                        ((g$t$9872$1&dy4A)
                                                         ((case-lambda
                                                            ((g$ls/false$9873$1&dy4A)
                                                             (if g$ls/false$9873$1&dy4A
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9874$1&dy4A
                                                                      g$y$9875$1&dy4A)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9824$1&dy4A
                                                                           g$y$9875$1&dy4A
                                                                           g$n$9826$1&dy4A
                                                                           g$ids$9827$1&dy4A)))
                                                                      (case-lambda
                                                                        ((g$y$9878$1&dy4A
                                                                           g$ids$9879$1&dy4A)
                                                                         ((case-lambda
                                                                            ((g$ids$9880$1&dy4A
                                                                               g$y$9881$1&dy4A)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9824$1&dy4A
                                                                                    g$x$9874$1&dy4A
                                                                                    g$n$9826$1&dy4A
                                                                                    g$ids$9880$1&dy4A)))
                                                                               (case-lambda
                                                                                 ((g$x$9884$1&dy4A
                                                                                    g$ids$9885$1&dy4A)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9886$1&dy4A
                                                                                        g$x$9887$1&dy4A)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9887$1&dy4A
                                                                                          g$y$9881$1&dy4A)
                                                                                        g$ids$9886$1&dy4A)))
                                                                                   g$ids$9885$1&dy4A
                                                                                   g$x$9884$1&dy4A))))))
                                                                          g$ids$9879$1&dy4A
                                                                          g$y$9878$1&dy4A))))))
                                                                 g$ls/false$9873$1&dy4A)
                                                               ((case-lambda
                                                                  ((g$t$9888$1&dy4A)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9889$1&dy4A)
                                                                       (if g$ls/false$9889$1&dy4A
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9827$1&dy4A)))
                                                                           g$ls/false$9889$1&dy4A)
                                                                         ((case-lambda
                                                                            ((g$t$9890$1&dy4A)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9891$1&dy4A)
                                                                                 (if (if g$ls/false$9891$1&dy4A
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9892$1&dy4A)
                                                                                              (not (g$stx?$7971$1&dy4A
                                                                                                     g$p$9892$1&dy4A))))
                                                                                           g$ls/false$9891$1&dy4A))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9893$1&dy4A)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9824$1&dy4A
                                                                                               g$p$9893$1&dy4A
                                                                                               g$n$9826$1&dy4A
                                                                                               g$ids$9827$1&dy4A)))
                                                                                          (case-lambda
                                                                                            ((g$p$9896$1&dy4A
                                                                                               g$ids$9897$1&dy4A)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9898$1&dy4A
                                                                                                   g$p$9899$1&dy4A)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9899$1&dy4A)
                                                                                                   g$ids$9898$1&dy4A)))
                                                                                              g$ids$9897$1&dy4A
                                                                                              g$p$9896$1&dy4A))))))
                                                                                     g$ls/false$9891$1&dy4A)
                                                                                   ((case-lambda
                                                                                      ((g$t$9900$1&dy4A)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9901$1&dy4A)
                                                                                           (if g$ls/false$9901$1&dy4A
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9902$1&dy4A)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$8010$1&dy4A
                                                                                                        g$datum$9902$1&dy4A))
                                                                                                    g$ids$9827$1&dy4A)))
                                                                                               g$ls/false$9901$1&dy4A)
                                                                                             (g$syntax-violation$8388$1&dy4A
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9900$1&dy4A))))
                                                                                        (g$syntax-dispatch$8277$1&dy4A
                                                                                          g$t$9900$1&dy4A
                                                                                          'any))))
                                                                                    g$t$9890$1&dy4A))))
                                                                              (g$syntax-dispatch$8277$1&dy4A
                                                                                g$t$9890$1&dy4A
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9888$1&dy4A))))
                                                                    (g$syntax-dispatch$8277$1&dy4A
                                                                      g$t$9888$1&dy4A
                                                                      '()))))
                                                                g$t$9872$1&dy4A))))
                                                          (g$syntax-dispatch$8277$1&dy4A
                                                            g$t$9872$1&dy4A
                                                            '(any . any)))))
                                                      g$t$9844$1&dy4A))))
                                                (g$syntax-dispatch$8277$1&dy4A
                                                  g$t$9844$1&dy4A
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9832$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$9832$1&dy4A
                                        '(any any)))))
                                  g$t$9828$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$9828$1&dy4A
                              'any))))
                        g$p$9825$1&dy4A)))))
          (g$cvt$9824$1&dy4A g$pattern$9821$1&dy4A '0 '())))))
   (g$syntax-dispatch$8277$1&dy4A
     g$syntax-dispatch$11768$1&dy4A
     ((case-lambda
        (()
         (letrec* ((g$stx^$9918$1&dy4A
                     (case-lambda
                       ((g$e$10028$1&dy4A
                          g$m*$10029$1&dy4A
                          g$s*$10030$1&dy4A
                          g$ae*$10031$1&dy4A)
                        (if (if (null? g$m*$10029$1&dy4A)
                              (if (null? g$s*$10030$1&dy4A)
                                (begin '#f (null? g$ae*$10031$1&dy4A))
                                '#f)
                              '#f)
                          g$e$10028$1&dy4A
                          (g$mkstx$7987$1&dy4A
                            g$e$10028$1&dy4A
                            g$m*$10029$1&dy4A
                            g$s*$10030$1&dy4A
                            g$ae*$10031$1&dy4A)))))
                   (g$match-each$9919$1&dy4A
                     (case-lambda
                       ((g$e$10012$1&dy4A
                          g$p$10013$1&dy4A
                          g$m*$10014$1&dy4A
                          g$s*$10015$1&dy4A
                          g$ae*$10016$1&dy4A)
                        (if (pair? g$e$10012$1&dy4A)
                          ((case-lambda
                             ((g$first$10017$1&dy4A)
                              (if g$first$10017$1&dy4A
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$10018$1&dy4A)
                                      (if g$rest$10018$1&dy4A
                                        (begin
                                          '#f
                                          (cons
                                            g$first$10017$1&dy4A
                                            g$rest$10018$1&dy4A))
                                        '#f)))
                                   (g$match-each$9919$1&dy4A
                                     (cdr g$e$10012$1&dy4A)
                                     g$p$10013$1&dy4A
                                     g$m*$10014$1&dy4A
                                     g$s*$10015$1&dy4A
                                     g$ae*$10016$1&dy4A)))
                                '#f)))
                           (g$match$9925$1&dy4A
                             (car g$e$10012$1&dy4A)
                             g$p$10013$1&dy4A
                             g$m*$10014$1&dy4A
                             g$s*$10015$1&dy4A
                             g$ae*$10016$1&dy4A
                             '()))
                          (if (null? g$e$10012$1&dy4A)
                            '()
                            (if (g$stx?$7971$1&dy4A g$e$10012$1&dy4A)
                              (if (not (g$top-marked?$7937$1&dy4A
                                         g$m*$10014$1&dy4A))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$7986$1&dy4A
                                         g$m*$10014$1&dy4A
                                         g$s*$10015$1&dy4A
                                         g$ae*$10016$1&dy4A
                                         g$e$10012$1&dy4A)))
                                    (case-lambda
                                      ((g$m*$10022$1&dy4A
                                         g$s*$10023$1&dy4A
                                         g$ae*$10024$1&dy4A)
                                       ((case-lambda
                                          ((g$ae*$10025$1&dy4A
                                             g$s*$10026$1&dy4A
                                             g$m*$10027$1&dy4A)
                                           (g$match-each$9919$1&dy4A
                                             (g$stx-expr$7973$1&dy4A
                                               g$e$10012$1&dy4A)
                                             g$p$10013$1&dy4A
                                             g$m*$10027$1&dy4A
                                             g$s*$10026$1&dy4A
                                             g$ae*$10025$1&dy4A)))
                                        g$ae*$10024$1&dy4A
                                        g$s*$10023$1&dy4A
                                        g$m*$10022$1&dy4A)))))
                                '#f)
                              (if (annotation? g$e$10012$1&dy4A)
                                (g$match-each$9919$1&dy4A
                                  (annotation-expression g$e$10012$1&dy4A)
                                  g$p$10013$1&dy4A
                                  g$m*$10014$1&dy4A
                                  g$s*$10015$1&dy4A
                                  g$ae*$10016$1&dy4A)
                                '#f)))))))
                   (g$match-each+$9920$1&dy4A
                     (case-lambda
                       ((g$e$9980$1&dy4A
                          g$x-pat$9981$1&dy4A
                          g$y-pat$9982$1&dy4A
                          g$z-pat$9983$1&dy4A
                          g$m*$9984$1&dy4A
                          g$s*$9985$1&dy4A
                          g$ae*$9986$1&dy4A
                          g$r$9987$1&dy4A)
                        ((letrec ((g$f$9988$1&dy4A
                                    (case-lambda
                                      ((g$e$9989$1&dy4A
                                         g$m*$9990$1&dy4A
                                         g$s*$9991$1&dy4A
                                         g$ae*$9992$1&dy4A)
                                       (if (pair? g$e$9989$1&dy4A)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$9988$1&dy4A
                                                (cdr g$e$9989$1&dy4A)
                                                g$m*$9990$1&dy4A
                                                g$s*$9991$1&dy4A
                                                g$ae*$9992$1&dy4A)))
                                           (case-lambda
                                             ((g$xr*$9996$1&dy4A
                                                g$y-pat$9997$1&dy4A
                                                g$r$9998$1&dy4A)
                                              ((case-lambda
                                                 ((g$r$9999$1&dy4A
                                                    g$y-pat$10000$1&dy4A
                                                    g$xr*$10001$1&dy4A)
                                                  (if g$r$9999$1&dy4A
                                                    (if (null?
                                                          g$y-pat$10000$1&dy4A)
                                                      ((case-lambda
                                                         ((g$xr$10002$1&dy4A)
                                                          (if g$xr$10002$1&dy4A
                                                            (values
                                                              (cons
                                                                g$xr$10002$1&dy4A
                                                                g$xr*$10001$1&dy4A)
                                                              g$y-pat$10000$1&dy4A
                                                              g$r$9999$1&dy4A)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$9925$1&dy4A
                                                         (car g$e$9989$1&dy4A)
                                                         g$x-pat$9981$1&dy4A
                                                         g$m*$9990$1&dy4A
                                                         g$s*$9991$1&dy4A
                                                         g$ae*$9992$1&dy4A
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$10000$1&dy4A)
                                                        (g$match$9925$1&dy4A
                                                          (car g$e$9989$1&dy4A)
                                                          (car g$y-pat$10000$1&dy4A)
                                                          g$m*$9990$1&dy4A
                                                          g$s*$9991$1&dy4A
                                                          g$ae*$9992$1&dy4A
                                                          g$r$9999$1&dy4A)))
                                                    (values '#f '#f '#f))))
                                               g$r$9998$1&dy4A
                                               g$y-pat$9997$1&dy4A
                                               g$xr*$9996$1&dy4A))))
                                         (if (g$stx?$7971$1&dy4A
                                               g$e$9989$1&dy4A)
                                           (if (g$top-marked?$7937$1&dy4A
                                                 g$m*$9990$1&dy4A)
                                             (values
                                               '()
                                               g$y-pat$9982$1&dy4A
                                               (g$match$9925$1&dy4A
                                                 g$e$9989$1&dy4A
                                                 g$z-pat$9983$1&dy4A
                                                 g$m*$9990$1&dy4A
                                                 g$s*$9991$1&dy4A
                                                 g$ae*$9992$1&dy4A
                                                 g$r$9987$1&dy4A))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$7986$1&dy4A
                                                    g$m*$9990$1&dy4A
                                                    g$s*$9991$1&dy4A
                                                    g$ae*$9992$1&dy4A
                                                    g$e$9989$1&dy4A)))
                                               (case-lambda
                                                 ((g$m*$10006$1&dy4A
                                                    g$s*$10007$1&dy4A
                                                    g$ae*$10008$1&dy4A)
                                                  ((case-lambda
                                                     ((g$ae*$10009$1&dy4A
                                                        g$s*$10010$1&dy4A
                                                        g$m*$10011$1&dy4A)
                                                      (g$f$9988$1&dy4A
                                                        (g$stx-expr$7973$1&dy4A
                                                          g$e$9989$1&dy4A)
                                                        g$m*$10011$1&dy4A
                                                        g$s*$10010$1&dy4A
                                                        g$ae*$10009$1&dy4A)))
                                                   g$ae*$10008$1&dy4A
                                                   g$s*$10007$1&dy4A
                                                   g$m*$10006$1&dy4A)))))
                                           (if (annotation? g$e$9989$1&dy4A)
                                             (g$f$9988$1&dy4A
                                               (annotation-expression
                                                 g$e$9989$1&dy4A)
                                               g$m*$9990$1&dy4A
                                               g$s*$9991$1&dy4A
                                               g$ae*$9992$1&dy4A)
                                             (values
                                               '()
                                               g$y-pat$9982$1&dy4A
                                               (g$match$9925$1&dy4A
                                                 g$e$9989$1&dy4A
                                                 g$z-pat$9983$1&dy4A
                                                 g$m*$9990$1&dy4A
                                                 g$s*$9991$1&dy4A
                                                 g$ae*$9992$1&dy4A
                                                 g$r$9987$1&dy4A)))))))))
                           g$f$9988$1&dy4A)
                         g$e$9980$1&dy4A
                         g$m*$9984$1&dy4A
                         g$s*$9985$1&dy4A
                         g$ae*$9986$1&dy4A))))
                   (g$match-each-any$9921$1&dy4A
                     (case-lambda
                       ((g$e$9966$1&dy4A
                          g$m*$9967$1&dy4A
                          g$s*$9968$1&dy4A
                          g$ae*$9969$1&dy4A)
                        (if (pair? g$e$9966$1&dy4A)
                          ((case-lambda
                             ((g$l$9970$1&dy4A)
                              (if g$l$9970$1&dy4A
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$9918$1&dy4A
                                      (car g$e$9966$1&dy4A)
                                      g$m*$9967$1&dy4A
                                      g$s*$9968$1&dy4A
                                      g$ae*$9969$1&dy4A)
                                    g$l$9970$1&dy4A))
                                '#f)))
                           (g$match-each-any$9921$1&dy4A
                             (cdr g$e$9966$1&dy4A)
                             g$m*$9967$1&dy4A
                             g$s*$9968$1&dy4A
                             g$ae*$9969$1&dy4A))
                          (if (null? g$e$9966$1&dy4A)
                            '()
                            (if (g$stx?$7971$1&dy4A g$e$9966$1&dy4A)
                              (if (not (g$top-marked?$7937$1&dy4A
                                         g$m*$9967$1&dy4A))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$7986$1&dy4A
                                         g$m*$9967$1&dy4A
                                         g$s*$9968$1&dy4A
                                         g$ae*$9969$1&dy4A
                                         g$e$9966$1&dy4A)))
                                    (case-lambda
                                      ((g$m*$9974$1&dy4A
                                         g$s*$9975$1&dy4A
                                         g$ae*$9976$1&dy4A)
                                       ((case-lambda
                                          ((g$ae*$9977$1&dy4A
                                             g$s*$9978$1&dy4A
                                             g$m*$9979$1&dy4A)
                                           (g$match-each-any$9921$1&dy4A
                                             (g$stx-expr$7973$1&dy4A
                                               g$e$9966$1&dy4A)
                                             g$m*$9979$1&dy4A
                                             g$s*$9978$1&dy4A
                                             g$ae*$9977$1&dy4A)))
                                        g$ae*$9976$1&dy4A
                                        g$s*$9975$1&dy4A
                                        g$m*$9974$1&dy4A)))))
                                '#f)
                              (if (annotation? g$e$9966$1&dy4A)
                                (g$match-each-any$9921$1&dy4A
                                  (annotation-expression g$e$9966$1&dy4A)
                                  g$m*$9967$1&dy4A
                                  g$s*$9968$1&dy4A
                                  g$ae*$9969$1&dy4A)
                                '#f)))))))
                   (g$match-empty$9922$1&dy4A
                     (case-lambda
                       ((g$p$9963$1&dy4A g$r$9964$1&dy4A)
                        (if (null? g$p$9963$1&dy4A)
                          g$r$9964$1&dy4A
                          (if (eq? g$p$9963$1&dy4A '_)
                            g$r$9964$1&dy4A
                            (if (eq? g$p$9963$1&dy4A 'any)
                              (cons '() g$r$9964$1&dy4A)
                              (if (pair? g$p$9963$1&dy4A)
                                (g$match-empty$9922$1&dy4A
                                  (car g$p$9963$1&dy4A)
                                  (g$match-empty$9922$1&dy4A
                                    (cdr g$p$9963$1&dy4A)
                                    g$r$9964$1&dy4A))
                                (if (eq? g$p$9963$1&dy4A 'each-any)
                                  (cons '() g$r$9964$1&dy4A)
                                  ((case-lambda
                                     ((g$t$9965$1&dy4A)
                                      (if (g$memv$5717$1&dy4A
                                            g$t$9965$1&dy4A
                                            '(each))
                                        (g$match-empty$9922$1&dy4A
                                          (vector-ref g$p$9963$1&dy4A '1)
                                          g$r$9964$1&dy4A)
                                        (if (g$memv$5717$1&dy4A
                                              g$t$9965$1&dy4A
                                              '(each+))
                                          (g$match-empty$9922$1&dy4A
                                            (vector-ref g$p$9963$1&dy4A '1)
                                            (g$match-empty$9922$1&dy4A
                                              (reverse
                                                (vector-ref g$p$9963$1&dy4A '2))
                                              (g$match-empty$9922$1&dy4A
                                                (vector-ref g$p$9963$1&dy4A '3)
                                                g$r$9964$1&dy4A)))
                                          (if (g$memv$5717$1&dy4A
                                                g$t$9965$1&dy4A
                                                '(free-id atom))
                                            g$r$9964$1&dy4A
                                            (if (g$memv$5717$1&dy4A
                                                  g$t$9965$1&dy4A
                                                  '(scheme-id atom))
                                              g$r$9964$1&dy4A
                                              (if (g$memv$5717$1&dy4A
                                                    g$t$9965$1&dy4A
                                                    '(vector))
                                                (g$match-empty$9922$1&dy4A
                                                  (vector-ref
                                                    g$p$9963$1&dy4A
                                                    '1)
                                                  g$r$9964$1&dy4A)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$9963$1&dy4A))))))))
                                   (vector-ref g$p$9963$1&dy4A '0))))))))))
                   (g$combine$9923$1&dy4A
                     (case-lambda
                       ((g$r*$9961$1&dy4A g$r$9962$1&dy4A)
                        (if (null? (car g$r*$9961$1&dy4A))
                          g$r$9962$1&dy4A
                          (cons
                            (map car g$r*$9961$1&dy4A)
                            (g$combine$9923$1&dy4A
                              (map cdr g$r*$9961$1&dy4A)
                              g$r$9962$1&dy4A))))))
                   (g$match*$9924$1&dy4A
                     (case-lambda
                       ((g$e$9943$1&dy4A
                          g$p$9944$1&dy4A
                          g$m*$9945$1&dy4A
                          g$s*$9946$1&dy4A
                          g$ae*$9947$1&dy4A
                          g$r$9948$1&dy4A)
                        (if (null? g$p$9944$1&dy4A)
                          (if (null? g$e$9943$1&dy4A)
                            (begin '#f g$r$9948$1&dy4A)
                            '#f)
                          (if (pair? g$p$9944$1&dy4A)
                            (if (pair? g$e$9943$1&dy4A)
                              (begin
                                '#f
                                (g$match$9925$1&dy4A
                                  (car g$e$9943$1&dy4A)
                                  (car g$p$9944$1&dy4A)
                                  g$m*$9945$1&dy4A
                                  g$s*$9946$1&dy4A
                                  g$ae*$9947$1&dy4A
                                  (g$match$9925$1&dy4A
                                    (cdr g$e$9943$1&dy4A)
                                    (cdr g$p$9944$1&dy4A)
                                    g$m*$9945$1&dy4A
                                    g$s*$9946$1&dy4A
                                    g$ae*$9947$1&dy4A
                                    g$r$9948$1&dy4A)))
                              '#f)
                            (if (eq? g$p$9944$1&dy4A 'each-any)
                              ((case-lambda
                                 ((g$l$9949$1&dy4A)
                                  (if g$l$9949$1&dy4A
                                    (begin
                                      '#f
                                      (cons g$l$9949$1&dy4A g$r$9948$1&dy4A))
                                    '#f)))
                               (g$match-each-any$9921$1&dy4A
                                 g$e$9943$1&dy4A
                                 g$m*$9945$1&dy4A
                                 g$s*$9946$1&dy4A
                                 g$ae*$9947$1&dy4A))
                              ((case-lambda
                                 ((g$t$9950$1&dy4A)
                                  (if (g$memv$5717$1&dy4A
                                        g$t$9950$1&dy4A
                                        '(each))
                                    (if (null? g$e$9943$1&dy4A)
                                      (g$match-empty$9922$1&dy4A
                                        (vector-ref g$p$9944$1&dy4A '1)
                                        g$r$9948$1&dy4A)
                                      ((case-lambda
                                         ((g$r*$9951$1&dy4A)
                                          (if g$r*$9951$1&dy4A
                                            (begin
                                              '#f
                                              (g$combine$9923$1&dy4A
                                                g$r*$9951$1&dy4A
                                                g$r$9948$1&dy4A))
                                            '#f)))
                                       (g$match-each$9919$1&dy4A
                                         g$e$9943$1&dy4A
                                         (vector-ref g$p$9944$1&dy4A '1)
                                         g$m*$9945$1&dy4A
                                         g$s*$9946$1&dy4A
                                         g$ae*$9947$1&dy4A)))
                                    (if (g$memv$5717$1&dy4A
                                          g$t$9950$1&dy4A
                                          '(free-id))
                                      (if (symbol? g$e$9943$1&dy4A)
                                        (if (g$top-marked?$7937$1&dy4A
                                              g$m*$9945$1&dy4A)
                                          (if (g$free-id=?$8003$1&dy4A
                                                (g$stx^$9918$1&dy4A
                                                  g$e$9943$1&dy4A
                                                  g$m*$9945$1&dy4A
                                                  g$s*$9946$1&dy4A
                                                  g$ae*$9947$1&dy4A)
                                                (vector-ref g$p$9944$1&dy4A '1))
                                            (begin '#f g$r$9948$1&dy4A)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$5717$1&dy4A
                                            g$t$9950$1&dy4A
                                            '(scheme-id))
                                        (if (symbol? g$e$9943$1&dy4A)
                                          (if (g$top-marked?$7937$1&dy4A
                                                g$m*$9945$1&dy4A)
                                            (if (g$free-id=?$8003$1&dy4A
                                                  (g$stx^$9918$1&dy4A
                                                    g$e$9943$1&dy4A
                                                    g$m*$9945$1&dy4A
                                                    g$s*$9946$1&dy4A
                                                    g$ae*$9947$1&dy4A)
                                                  (g$scheme-stx$8220$1&dy4A
                                                    (vector-ref
                                                      g$p$9944$1&dy4A
                                                      '1)))
                                              (begin '#f g$r$9948$1&dy4A)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$5717$1&dy4A
                                              g$t$9950$1&dy4A
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$9920$1&dy4A
                                                 g$e$9943$1&dy4A
                                                 (vector-ref g$p$9944$1&dy4A '1)
                                                 (vector-ref g$p$9944$1&dy4A '2)
                                                 (vector-ref g$p$9944$1&dy4A '3)
                                                 g$m*$9945$1&dy4A
                                                 g$s*$9946$1&dy4A
                                                 g$ae*$9947$1&dy4A
                                                 g$r$9948$1&dy4A)))
                                            (case-lambda
                                              ((g$xr*$9955$1&dy4A
                                                 g$y-pat$9956$1&dy4A
                                                 g$r$9957$1&dy4A)
                                               ((case-lambda
                                                  ((g$r$9958$1&dy4A
                                                     g$y-pat$9959$1&dy4A
                                                     g$xr*$9960$1&dy4A)
                                                   (if g$r$9958$1&dy4A
                                                     (if (null?
                                                           g$y-pat$9959$1&dy4A)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$9960$1&dy4A)
                                                           (g$match-empty$9922$1&dy4A
                                                             (vector-ref
                                                               g$p$9944$1&dy4A
                                                               '1)
                                                             g$r$9958$1&dy4A)
                                                           (g$combine$9923$1&dy4A
                                                             g$xr*$9960$1&dy4A
                                                             g$r$9958$1&dy4A)))
                                                       '#f)
                                                     '#f)))
                                                g$r$9957$1&dy4A
                                                g$y-pat$9956$1&dy4A
                                                g$xr*$9955$1&dy4A))))
                                          (if (g$memv$5717$1&dy4A
                                                g$t$9950$1&dy4A
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref
                                                    g$p$9944$1&dy4A
                                                    '1)
                                                  (g$strip$8009$1&dy4A
                                                    g$e$9943$1&dy4A
                                                    g$m*$9945$1&dy4A))
                                              (begin '#f g$r$9948$1&dy4A)
                                              '#f)
                                            (if (g$memv$5717$1&dy4A
                                                  g$t$9950$1&dy4A
                                                  '(vector))
                                              (if (vector? g$e$9943$1&dy4A)
                                                (begin
                                                  '#f
                                                  (g$match$9925$1&dy4A
                                                    (vector->list
                                                      g$e$9943$1&dy4A)
                                                    (vector-ref
                                                      g$p$9944$1&dy4A
                                                      '1)
                                                    g$m*$9945$1&dy4A
                                                    g$s*$9946$1&dy4A
                                                    g$ae*$9947$1&dy4A
                                                    g$r$9948$1&dy4A))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$9944$1&dy4A)))))))))
                               (vector-ref g$p$9944$1&dy4A '0))))))))
                   (g$match$9925$1&dy4A
                     (case-lambda
                       ((g$e$9928$1&dy4A
                          g$p$9929$1&dy4A
                          g$m*$9930$1&dy4A
                          g$s*$9931$1&dy4A
                          g$ae*$9932$1&dy4A
                          g$r$9933$1&dy4A)
                        (if (not g$r$9933$1&dy4A)
                          '#f
                          (if (eq? g$p$9929$1&dy4A '_)
                            g$r$9933$1&dy4A
                            (if (eq? g$p$9929$1&dy4A 'any)
                              (cons
                                (g$stx^$9918$1&dy4A
                                  g$e$9928$1&dy4A
                                  g$m*$9930$1&dy4A
                                  g$s*$9931$1&dy4A
                                  g$ae*$9932$1&dy4A)
                                g$r$9933$1&dy4A)
                              (if (g$stx?$7971$1&dy4A g$e$9928$1&dy4A)
                                (if (not (g$top-marked?$7937$1&dy4A
                                           g$m*$9930$1&dy4A))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$7986$1&dy4A
                                           g$m*$9930$1&dy4A
                                           g$s*$9931$1&dy4A
                                           g$ae*$9932$1&dy4A
                                           g$e$9928$1&dy4A)))
                                      (case-lambda
                                        ((g$m*$9937$1&dy4A
                                           g$s*$9938$1&dy4A
                                           g$ae*$9939$1&dy4A)
                                         ((case-lambda
                                            ((g$ae*$9940$1&dy4A
                                               g$s*$9941$1&dy4A
                                               g$m*$9942$1&dy4A)
                                             (g$match$9925$1&dy4A
                                               (g$stx-expr$7973$1&dy4A
                                                 g$e$9928$1&dy4A)
                                               g$p$9929$1&dy4A
                                               g$m*$9942$1&dy4A
                                               g$s*$9941$1&dy4A
                                               g$ae*$9940$1&dy4A
                                               g$r$9933$1&dy4A)))
                                          g$ae*$9939$1&dy4A
                                          g$s*$9938$1&dy4A
                                          g$m*$9937$1&dy4A)))))
                                  '#f)
                                (if (annotation? g$e$9928$1&dy4A)
                                  (g$match$9925$1&dy4A
                                    (annotation-expression g$e$9928$1&dy4A)
                                    g$p$9929$1&dy4A
                                    g$m*$9930$1&dy4A
                                    g$s*$9931$1&dy4A
                                    g$ae*$9932$1&dy4A
                                    g$r$9933$1&dy4A)
                                  (g$match*$9924$1&dy4A
                                    g$e$9928$1&dy4A
                                    g$p$9929$1&dy4A
                                    g$m*$9930$1&dy4A
                                    g$s*$9931$1&dy4A
                                    g$ae*$9932$1&dy4A
                                    g$r$9933$1&dy4A))))))))))
           (case-lambda
             ((g$e$9926$1&dy4A g$p$9927$1&dy4A)
              (g$match$9925$1&dy4A
                g$e$9926$1&dy4A
                g$p$9927$1&dy4A
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$8278$1&dy4A
     g$ellipsis?$11769$1&dy4A
     (case-lambda
       ((g$x$10032$1&dy4A)
        (if (g$id?$7999$1&dy4A g$x$10032$1&dy4A)
          (begin
            '#f
            (g$free-id=?$8003$1&dy4A
              g$x$10032$1&dy4A
              (g$scheme-stx$8220$1&dy4A '...)))
          '#f))))
   (g$underscore?$8279$1&dy4A
     g$underscore?$11770$1&dy4A
     (case-lambda
       ((g$x$10033$1&dy4A)
        (if (g$id?$7999$1&dy4A g$x$10033$1&dy4A)
          (begin
            '#f
            (g$free-id=?$8003$1&dy4A
              g$x$10033$1&dy4A
              (g$scheme-stx$8220$1&dy4A '_)))
          '#f))))
   (g$verify-literals$8280$1&dy4A
     g$verify-literals$11771$1&dy4A
     (case-lambda
       ((g$lits$10034$1&dy4A g$expr$10035$1&dy4A)
        (for-each
          (case-lambda
            ((g$x$10036$1&dy4A)
             (if ((case-lambda
                    ((g$t$10037$1&dy4A)
                     (if g$t$10037$1&dy4A
                       g$t$10037$1&dy4A
                       ((case-lambda
                          ((g$t$10038$1&dy4A)
                           (if g$t$10038$1&dy4A
                             g$t$10038$1&dy4A
                             (begin
                               '#f
                               (g$underscore?$8279$1&dy4A g$x$10036$1&dy4A)))))
                        (g$ellipsis?$8278$1&dy4A g$x$10036$1&dy4A)))))
                  (not (g$id?$7999$1&dy4A g$x$10036$1&dy4A)))
               (g$syntax-violation$8388$1&dy4A
                 '#f
                 '"invalid literal"
                 g$expr$10035$1&dy4A
                 g$x$10036$1&dy4A)
               (void))))
          g$lits$10034$1&dy4A))))
   (g$syntax-case-transformer$8281$1&dy4A
     g$syntax-case-transformer$11772$1&dy4A
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$10039$1&dy4A
                     (case-lambda
                       ((g$pvars$10096$1&dy4A
                          g$expr$10097$1&dy4A
                          g$y$10098$1&dy4A
                          g$r$10099$1&dy4A
                          g$mr$10100$1&dy4A)
                        ((case-lambda
                           ((g$ids$10101$1&dy4A g$levels$10102$1&dy4A)
                            ((case-lambda
                               ((g$labels$10103$1&dy4A g$new-vars$10104$1&dy4A)
                                ((case-lambda
                                   ((g$body$10105$1&dy4A)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7925$1&dy4A
                                        '#f
                                        g$new-vars$10104$1&dy4A
                                        g$body$10105$1&dy4A)
                                      g$y$10098$1&dy4A)))
                                 (g$chi-expr$8295$1&dy4A
                                   (g$add-subst$7989$1&dy4A
                                     (g$make-full-rib$7967$1&dy4A
                                       g$ids$10101$1&dy4A
                                       g$labels$10103$1&dy4A)
                                     g$expr$10097$1&dy4A)
                                   (append
                                     (map (case-lambda
                                            ((g$label$10106$1&dy4A
                                               g$var$10107$1&dy4A
                                               g$level$10108$1&dy4A)
                                             (cons
                                               g$label$10106$1&dy4A
                                               (g$make-binding$8015$1&dy4A
                                                 'syntax
                                                 (cons
                                                   g$var$10107$1&dy4A
                                                   g$level$10108$1&dy4A)))))
                                          g$labels$10103$1&dy4A
                                          g$new-vars$10104$1&dy4A
                                          (map cdr g$pvars$10096$1&dy4A))
                                     g$r$10099$1&dy4A)
                                   g$mr$10100$1&dy4A))))
                             (map g$gen-label$7940$1&dy4A g$ids$10101$1&dy4A)
                             (map g$gen-lexical$7938$1&dy4A
                                  g$ids$10101$1&dy4A))))
                         (map car g$pvars$10096$1&dy4A)
                         (map cdr g$pvars$10096$1&dy4A)))))
                   (g$invalid-ids-error$10040$1&dy4A
                     (case-lambda
                       ((g$id*$10090$1&dy4A
                          g$e$10091$1&dy4A
                          g$class$10092$1&dy4A)
                        ((letrec ((g$find$10093$1&dy4A
                                    (case-lambda
                                      ((g$id*$10094$1&dy4A g$ok*$10095$1&dy4A)
                                       (if (null? g$id*$10094$1&dy4A)
                                         (g$syntax-violation$8388$1&dy4A
                                           '#f
                                           '"invalid syntax"
                                           g$e$10091$1&dy4A)
                                         (if (g$id?$7999$1&dy4A
                                               (car g$id*$10094$1&dy4A))
                                           (if (g$bound-id-member?$8006$1&dy4A
                                                 (car g$id*$10094$1&dy4A)
                                                 g$ok*$10095$1&dy4A)
                                             (g$syntax-error$8385$1&dy4A
                                               (car g$id*$10094$1&dy4A)
                                               '"duplicate "
                                               g$class$10092$1&dy4A)
                                             (g$find$10093$1&dy4A
                                               (cdr g$id*$10094$1&dy4A)
                                               (cons
                                                 (car g$id*$10094$1&dy4A)
                                                 g$ok*$10095$1&dy4A)))
                                           (g$syntax-error$8385$1&dy4A
                                             (car g$id*$10094$1&dy4A)
                                             '"invalid "
                                             g$class$10092$1&dy4A)))))))
                           g$find$10093$1&dy4A)
                         g$id*$10090$1&dy4A
                         '()))))
                   (g$gen-clause$10041$1&dy4A
                     (case-lambda
                       ((g$x$10070$1&dy4A
                          g$keys$10071$1&dy4A
                          g$clauses$10072$1&dy4A
                          g$r$10073$1&dy4A
                          g$mr$10074$1&dy4A
                          g$pat$10075$1&dy4A
                          g$fender$10076$1&dy4A
                          g$expr$10077$1&dy4A)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$8276$1&dy4A
                               g$pat$10075$1&dy4A
                               g$keys$10071$1&dy4A)))
                          (case-lambda
                            ((g$p$10080$1&dy4A g$pvars$10081$1&dy4A)
                             ((case-lambda
                                ((g$pvars$10082$1&dy4A g$p$10083$1&dy4A)
                                 (if (not (g$distinct-bound-ids?$8005$1&dy4A
                                            (map car g$pvars$10082$1&dy4A)))
                                   (g$invalid-ids-error$10040$1&dy4A
                                     (map car g$pvars$10082$1&dy4A)
                                     g$pat$10075$1&dy4A
                                     '"pattern variable")
                                   (if (not (g$for-all$5722$1&dy4A
                                              (case-lambda
                                                ((g$x$10084$1&dy4A)
                                                 (not (g$ellipsis?$8278$1&dy4A
                                                        (car g$x$10084$1&dy4A)))))
                                              g$pvars$10082$1&dy4A))
                                     (g$syntax-violation$8388$1&dy4A
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$10075$1&dy4A)
                                     ((case-lambda
                                        ((g$y$10085$1&dy4A)
                                         ((case-lambda
                                            ((g$test$10086$1&dy4A)
                                             ((case-lambda
                                                ((g$conseq$10087$1&dy4A)
                                                 ((case-lambda
                                                    ((g$altern$10088$1&dy4A)
                                                     (list
                                                       (g$build-lambda$7925$1&dy4A
                                                         '#f
                                                         (list g$y$10085$1&dy4A)
                                                         (list
                                                           'if
                                                           g$test$10086$1&dy4A
                                                           g$conseq$10087$1&dy4A
                                                           g$altern$10088$1&dy4A))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$10070$1&dy4A
                                                         (list
                                                           'quote
                                                           g$p$10083$1&dy4A)))))
                                                  (g$gen-syntax-case$10042$1&dy4A
                                                    g$x$10070$1&dy4A
                                                    g$keys$10071$1&dy4A
                                                    g$clauses$10072$1&dy4A
                                                    g$r$10073$1&dy4A
                                                    g$mr$10074$1&dy4A))))
                                              (g$build-dispatch-call$10039$1&dy4A
                                                g$pvars$10082$1&dy4A
                                                g$expr$10077$1&dy4A
                                                g$y$10085$1&dy4A
                                                g$r$10073$1&dy4A
                                                g$mr$10074$1&dy4A))))
                                          (if (eq? g$fender$10076$1&dy4A '#t)
                                            g$y$10085$1&dy4A
                                            ((case-lambda
                                               ((g$call$10089$1&dy4A)
                                                (list
                                                  'if
                                                  g$y$10085$1&dy4A
                                                  g$call$10089$1&dy4A
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$10039$1&dy4A
                                               g$pvars$10082$1&dy4A
                                               g$fender$10076$1&dy4A
                                               g$y$10085$1&dy4A
                                               g$r$10073$1&dy4A
                                               g$mr$10074$1&dy4A))))))
                                      (g$gen-lexical$7938$1&dy4A 'tmp))))))
                              g$pvars$10081$1&dy4A
                              g$p$10080$1&dy4A)))))))
                   (g$gen-syntax-case$10042$1&dy4A
                     (case-lambda
                       ((g$x$10053$1&dy4A
                          g$keys$10054$1&dy4A
                          g$clauses$10055$1&dy4A
                          g$r$10056$1&dy4A
                          g$mr$10057$1&dy4A)
                        (if (null? g$clauses$10055$1&dy4A)
                          (list '(primitive syntax-error) g$x$10053$1&dy4A)
                          ((case-lambda
                             ((g$t$10058$1&dy4A)
                              ((case-lambda
                                 ((g$ls/false$10059$1&dy4A)
                                  (if g$ls/false$10059$1&dy4A
                                    (apply
                                      (case-lambda
                                        ((g$pat$10060$1&dy4A
                                           g$expr$10061$1&dy4A)
                                         (if (if (g$id?$7999$1&dy4A
                                                   g$pat$10060$1&dy4A)
                                               (if (not (g$bound-id-member?$8006$1&dy4A
                                                          g$pat$10060$1&dy4A
                                                          g$keys$10054$1&dy4A))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$8278$1&dy4A
                                                          g$pat$10060$1&dy4A)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$8003$1&dy4A
                                                 g$pat$10060$1&dy4A
                                                 (g$scheme-stx$8220$1&dy4A '_))
                                             (g$chi-expr$8295$1&dy4A
                                               g$expr$10061$1&dy4A
                                               g$r$10056$1&dy4A
                                               g$mr$10057$1&dy4A)
                                             ((case-lambda
                                                ((g$lab$10062$1&dy4A
                                                   g$lex$10063$1&dy4A)
                                                 ((case-lambda
                                                    ((g$body$10064$1&dy4A)
                                                     (list
                                                       (g$build-lambda$7925$1&dy4A
                                                         '#f
                                                         (list
                                                           g$lex$10063$1&dy4A)
                                                         g$body$10064$1&dy4A)
                                                       g$x$10053$1&dy4A)))
                                                  (g$chi-expr$8295$1&dy4A
                                                    (g$add-subst$7989$1&dy4A
                                                      (g$make-full-rib$7967$1&dy4A
                                                        (list
                                                          g$pat$10060$1&dy4A)
                                                        (list
                                                          g$lab$10062$1&dy4A))
                                                      g$expr$10061$1&dy4A)
                                                    (cons
                                                      (cons
                                                        g$lab$10062$1&dy4A
                                                        (g$make-binding$8015$1&dy4A
                                                          'syntax
                                                          (cons
                                                            g$lex$10063$1&dy4A
                                                            '0)))
                                                      g$r$10056$1&dy4A)
                                                    g$mr$10057$1&dy4A))))
                                              (g$gen-label$7940$1&dy4A
                                                g$pat$10060$1&dy4A)
                                              (g$gen-lexical$7938$1&dy4A
                                                g$pat$10060$1&dy4A)))
                                           (g$gen-clause$10041$1&dy4A
                                             g$x$10053$1&dy4A
                                             g$keys$10054$1&dy4A
                                             (cdr g$clauses$10055$1&dy4A)
                                             g$r$10056$1&dy4A
                                             g$mr$10057$1&dy4A
                                             g$pat$10060$1&dy4A
                                             '#t
                                             g$expr$10061$1&dy4A))))
                                      g$ls/false$10059$1&dy4A)
                                    ((case-lambda
                                       ((g$t$10065$1&dy4A)
                                        ((case-lambda
                                           ((g$ls/false$10066$1&dy4A)
                                            (if g$ls/false$10066$1&dy4A
                                              (apply
                                                (case-lambda
                                                  ((g$pat$10067$1&dy4A
                                                     g$fender$10068$1&dy4A
                                                     g$expr$10069$1&dy4A)
                                                   (g$gen-clause$10041$1&dy4A
                                                     g$x$10053$1&dy4A
                                                     g$keys$10054$1&dy4A
                                                     (cdr g$clauses$10055$1&dy4A)
                                                     g$r$10056$1&dy4A
                                                     g$mr$10057$1&dy4A
                                                     g$pat$10067$1&dy4A
                                                     g$fender$10068$1&dy4A
                                                     g$expr$10069$1&dy4A)))
                                                g$ls/false$10066$1&dy4A)
                                              (g$syntax-violation$8388$1&dy4A
                                                '#f
                                                '"invalid syntax"
                                                g$t$10065$1&dy4A))))
                                         (g$syntax-dispatch$8277$1&dy4A
                                           g$t$10065$1&dy4A
                                           '(any any any)))))
                                     g$t$10058$1&dy4A))))
                               (g$syntax-dispatch$8277$1&dy4A
                                 g$t$10058$1&dy4A
                                 '(any any)))))
                           (car g$clauses$10055$1&dy4A)))))))
           (case-lambda
             ((g$e$10043$1&dy4A g$r$10044$1&dy4A g$mr$10045$1&dy4A)
              ((case-lambda
                 ((g$t$10046$1&dy4A)
                  ((case-lambda
                     ((g$ls/false$10047$1&dy4A)
                      (if g$ls/false$10047$1&dy4A
                        (apply
                          (case-lambda
                            ((g$expr$10048$1&dy4A
                               g$keys$10049$1&dy4A
                               g$clauses$10050$1&dy4A)
                             (begin
                               (g$verify-literals$8280$1&dy4A
                                 g$keys$10049$1&dy4A
                                 g$e$10043$1&dy4A)
                               ((case-lambda
                                  ((g$x$10051$1&dy4A)
                                   ((case-lambda
                                      ((g$body$10052$1&dy4A)
                                       (list
                                         (g$build-lambda$7925$1&dy4A
                                           '#f
                                           (list g$x$10051$1&dy4A)
                                           g$body$10052$1&dy4A)
                                         (g$chi-expr$8295$1&dy4A
                                           g$expr$10048$1&dy4A
                                           g$r$10044$1&dy4A
                                           g$mr$10045$1&dy4A))))
                                    (g$gen-syntax-case$10042$1&dy4A
                                      g$x$10051$1&dy4A
                                      g$keys$10049$1&dy4A
                                      g$clauses$10050$1&dy4A
                                      g$r$10044$1&dy4A
                                      g$mr$10045$1&dy4A))))
                                (g$gen-lexical$7938$1&dy4A 'tmp)))))
                          g$ls/false$10047$1&dy4A)
                        (g$syntax-violation$8388$1&dy4A
                          '#f
                          '"invalid syntax"
                          g$t$10046$1&dy4A))))
                   (g$syntax-dispatch$8277$1&dy4A
                     g$t$10046$1&dy4A
                     '(_ any each-any . each-any)))))
               g$e$10043$1&dy4A))))))))
   (g$ellipsis-map$8282$1&dy4A
     g$ellipsis-map$11773$1&dy4A
     (case-lambda
       ((g$proc$10109$1&dy4A g$ls$10110$1&dy4A . g$ls*$10111$1&dy4A)
        (letrec* ((g$who$10112$1&dy4A '...))
          (begin
            (if (not (list? g$ls$10110$1&dy4A))
              (assertion-violation
                g$who$10112$1&dy4A
                '"not a list"
                g$ls$10110$1&dy4A)
              (void))
            (if (not (null? g$ls*$10111$1&dy4A))
              ((case-lambda
                 ((g$n$10113$1&dy4A)
                  (for-each
                    (case-lambda
                      ((g$x$10114$1&dy4A)
                       (begin
                         (if (not (list? g$x$10114$1&dy4A))
                           (assertion-violation
                             g$who$10112$1&dy4A
                             '"not a list"
                             g$x$10114$1&dy4A)
                           (void))
                         (if (not (= (length g$x$10114$1&dy4A)
                                     g$n$10113$1&dy4A))
                           (assertion-violation
                             g$who$10112$1&dy4A
                             '"length mismatch"
                             g$ls$10110$1&dy4A
                             g$x$10114$1&dy4A)
                           (void)))))
                    g$ls*$10111$1&dy4A)))
               (length g$ls$10110$1&dy4A))
              (void))
            (apply
              map
              g$proc$10109$1&dy4A
              g$ls$10110$1&dy4A
              g$ls*$10111$1&dy4A))))))
   (g$syntax-transformer$8283$1&dy4A
     g$syntax-transformer$11774$1&dy4A
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$10115$1&dy4A
                     (case-lambda
                       ((g$src$10175$1&dy4A
                          g$e$10176$1&dy4A
                          g$r$10177$1&dy4A
                          g$maps$10178$1&dy4A
                          g$ellipsis?$10179$1&dy4A
                          g$vec?$10180$1&dy4A)
                        ((case-lambda
                           ((g$t$10181$1&dy4A)
                            ((case-lambda
                               ((g$ls/false$10182$1&dy4A)
                                (if (if g$ls/false$10182$1&dy4A
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$10183$1&dy4A)
                                             (g$ellipsis?$10179$1&dy4A
                                               g$dots$10183$1&dy4A)))
                                          g$ls/false$10182$1&dy4A))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$10184$1&dy4A)
                                       (g$syntax-violation$8388$1&dy4A
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$10175$1&dy4A)))
                                    g$ls/false$10182$1&dy4A)
                                  ((case-lambda
                                     ((g$t$10185$1&dy4A)
                                      ((case-lambda
                                         ((g$ls/false$10186$1&dy4A)
                                          (if (if g$ls/false$10186$1&dy4A
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$10187$1&dy4A)
                                                       (g$id?$7999$1&dy4A
                                                         g$id$10187$1&dy4A)))
                                                    g$ls/false$10186$1&dy4A))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$10188$1&dy4A)
                                                 ((case-lambda
                                                    ((g$label$10189$1&dy4A)
                                                     ((case-lambda
                                                        ((g$b$10190$1&dy4A)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$8016$1&dy4A
                                                                        g$b$10190$1&dy4A)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$10193$1&dy4A)
                                                                        (g$gen-ref$10116$1&dy4A
                                                                          g$src$10175$1&dy4A
                                                                          (car g$var.lev$10193$1&dy4A)
                                                                          (cdr g$var.lev$10193$1&dy4A)
                                                                          g$maps$10178$1&dy4A)))
                                                                     (g$binding-value$8017$1&dy4A
                                                                       g$b$10190$1&dy4A))))
                                                                 (case-lambda
                                                                   ((g$var$10194$1&dy4A
                                                                      g$maps$10195$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$maps$10196$1&dy4A
                                                                          g$var$10197$1&dy4A)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$10197$1&dy4A)
                                                                          g$maps$10196$1&dy4A)))
                                                                     g$maps$10195$1&dy4A
                                                                     g$var$10194$1&dy4A))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$10176$1&dy4A)
                                                                 g$maps$10178$1&dy4A)))))))
                                                      (g$label->binding$8014$1&dy4A
                                                        g$label$10189$1&dy4A
                                                        g$r$10177$1&dy4A))))
                                                  (g$id->label$8012$1&dy4A
                                                    g$e$10176$1&dy4A))))
                                              g$ls/false$10186$1&dy4A)
                                            ((case-lambda
                                               ((g$t$10198$1&dy4A)
                                                ((case-lambda
                                                   ((g$ls/false$10199$1&dy4A)
                                                    (if (if g$ls/false$10199$1&dy4A
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$10200$1&dy4A
                                                                   g$e$10201$1&dy4A)
                                                                 (g$ellipsis?$10179$1&dy4A
                                                                   g$dots$10200$1&dy4A)))
                                                              g$ls/false$10199$1&dy4A))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$10202$1&dy4A
                                                             g$e$10203$1&dy4A)
                                                           (if g$vec?$10180$1&dy4A
                                                             (g$syntax-violation$8388$1&dy4A
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$10175$1&dy4A)
                                                             (g$gen-syntax$10115$1&dy4A
                                                               g$src$10175$1&dy4A
                                                               g$e$10203$1&dy4A
                                                               g$r$10177$1&dy4A
                                                               g$maps$10178$1&dy4A
                                                               (case-lambda
                                                                 ((g$x$10204$1&dy4A)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$10199$1&dy4A)
                                                      ((case-lambda
                                                         ((g$t$10205$1&dy4A)
                                                          ((case-lambda
                                                             ((g$ls/false$10206$1&dy4A)
                                                              (if (if g$ls/false$10206$1&dy4A
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$10207$1&dy4A
                                                                             g$dots$10208$1&dy4A
                                                                             g$y$10209$1&dy4A)
                                                                           (g$ellipsis?$10179$1&dy4A
                                                                             g$dots$10208$1&dy4A)))
                                                                        g$ls/false$10206$1&dy4A))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$10210$1&dy4A
                                                                       g$dots$10211$1&dy4A
                                                                       g$y$10212$1&dy4A)
                                                                     ((letrec ((g$f$10213$1&dy4A
                                                                                 (case-lambda
                                                                                   ((g$y$10214$1&dy4A
                                                                                      g$k$10215$1&dy4A)
                                                                                    ((case-lambda
                                                                                       ((g$t$10216$1&dy4A)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10217$1&dy4A)
                                                                                            (if g$ls/false$10217$1&dy4A
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$10215$1&dy4A
                                                                                                     g$maps$10178$1&dy4A)))
                                                                                                g$ls/false$10217$1&dy4A)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10218$1&dy4A)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10219$1&dy4A)
                                                                                                      (if (if g$ls/false$10219$1&dy4A
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$10220$1&dy4A
                                                                                                                     g$y$10221$1&dy4A)
                                                                                                                   (g$ellipsis?$10179$1&dy4A
                                                                                                                     g$dots$10220$1&dy4A)))
                                                                                                                g$ls/false$10219$1&dy4A))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$10222$1&dy4A
                                                                                                               g$y$10223$1&dy4A)
                                                                                                             (g$f$10213$1&dy4A
                                                                                                               g$y$10223$1&dy4A
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$10224$1&dy4A)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$10215$1&dy4A
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$10224$1&dy4A))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$10227$1&dy4A
                                                                                                                         g$maps$10228$1&dy4A)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$10229$1&dy4A
                                                                                                                             g$x$10230$1&dy4A)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$10229$1&dy4A))
                                                                                                                             (g$syntax-violation$8388$1&dy4A
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$10175$1&dy4A)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$10118$1&dy4A
                                                                                                                                 g$x$10230$1&dy4A
                                                                                                                                 (car g$maps$10229$1&dy4A))
                                                                                                                               (cdr g$maps$10229$1&dy4A)))))
                                                                                                                        g$maps$10228$1&dy4A
                                                                                                                        g$x$10227$1&dy4A)))))))))
                                                                                                          g$ls/false$10219$1&dy4A)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$10231$1&dy4A)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$10232$1&dy4A)
                                                                                                                (if g$ls/false$10232$1&dy4A
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$10115$1&dy4A
                                                                                                                              g$src$10175$1&dy4A
                                                                                                                              g$y$10214$1&dy4A
                                                                                                                              g$r$10177$1&dy4A
                                                                                                                              g$maps$10178$1&dy4A
                                                                                                                              g$ellipsis?$10179$1&dy4A
                                                                                                                              g$vec?$10180$1&dy4A)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$10235$1&dy4A
                                                                                                                              g$maps$10236$1&dy4A)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$10237$1&dy4A
                                                                                                                                  g$y$10238$1&dy4A)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$10215$1&dy4A
                                                                                                                                       g$maps$10237$1&dy4A)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$10241$1&dy4A
                                                                                                                                       g$maps$10242$1&dy4A)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$10243$1&dy4A
                                                                                                                                           g$x$10244$1&dy4A)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$10117$1&dy4A
                                                                                                                                             g$x$10244$1&dy4A
                                                                                                                                             g$y$10238$1&dy4A)
                                                                                                                                           g$maps$10243$1&dy4A)))
                                                                                                                                      g$maps$10242$1&dy4A
                                                                                                                                      g$x$10241$1&dy4A))))))
                                                                                                                             g$maps$10236$1&dy4A
                                                                                                                             g$y$10235$1&dy4A))))))
                                                                                                                    g$ls/false$10232$1&dy4A)
                                                                                                                  (g$syntax-violation$8388$1&dy4A
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$10231$1&dy4A))))
                                                                                                             (g$syntax-dispatch$8277$1&dy4A
                                                                                                               g$t$10231$1&dy4A
                                                                                                               '_))))
                                                                                                         g$t$10218$1&dy4A))))
                                                                                                   (g$syntax-dispatch$8277$1&dy4A
                                                                                                     g$t$10218$1&dy4A
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$10216$1&dy4A))))
                                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                                           g$t$10216$1&dy4A
                                                                                           '()))))
                                                                                     g$y$10214$1&dy4A)))))
                                                                        g$f$10213$1&dy4A)
                                                                      g$y$10212$1&dy4A
                                                                      (case-lambda
                                                                        ((g$maps$10245$1&dy4A)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$10115$1&dy4A
                                                                                g$src$10175$1&dy4A
                                                                                g$x$10210$1&dy4A
                                                                                g$r$10177$1&dy4A
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$10245$1&dy4A)
                                                                                g$ellipsis?$10179$1&dy4A
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$10248$1&dy4A
                                                                                g$maps$10249$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$maps$10250$1&dy4A
                                                                                    g$x$10251$1&dy4A)
                                                                                  (if (null?
                                                                                        (car g$maps$10250$1&dy4A))
                                                                                    (g$syntax-violation$8388$1&dy4A
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$10175$1&dy4A)
                                                                                    (values
                                                                                      (g$gen-map$10119$1&dy4A
                                                                                        g$x$10251$1&dy4A
                                                                                        (car g$maps$10250$1&dy4A))
                                                                                      (cdr g$maps$10250$1&dy4A)))))
                                                                               g$maps$10249$1&dy4A
                                                                               g$x$10248$1&dy4A)))))))))
                                                                  g$ls/false$10206$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$t$10252$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10253$1&dy4A)
                                                                        (if g$ls/false$10253$1&dy4A
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$10254$1&dy4A
                                                                                 g$y$10255$1&dy4A)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$10115$1&dy4A
                                                                                      g$src$10175$1&dy4A
                                                                                      g$x$10254$1&dy4A
                                                                                      g$r$10177$1&dy4A
                                                                                      g$maps$10178$1&dy4A
                                                                                      g$ellipsis?$10179$1&dy4A
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$10258$1&dy4A
                                                                                      g$maps$10259$1&dy4A)
                                                                                    ((case-lambda
                                                                                       ((g$maps$10260$1&dy4A
                                                                                          g$xnew$10261$1&dy4A)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$10115$1&dy4A
                                                                                               g$src$10175$1&dy4A
                                                                                               g$y$10255$1&dy4A
                                                                                               g$r$10177$1&dy4A
                                                                                               g$maps$10260$1&dy4A
                                                                                               g$ellipsis?$10179$1&dy4A
                                                                                               g$vec?$10180$1&dy4A)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$10264$1&dy4A
                                                                                               g$maps$10265$1&dy4A)
                                                                                             ((case-lambda
                                                                                                ((g$maps$10266$1&dy4A
                                                                                                   g$ynew$10267$1&dy4A)
                                                                                                 (values
                                                                                                   (g$gen-cons$10120$1&dy4A
                                                                                                     g$e$10176$1&dy4A
                                                                                                     g$x$10254$1&dy4A
                                                                                                     g$y$10255$1&dy4A
                                                                                                     g$xnew$10261$1&dy4A
                                                                                                     g$ynew$10267$1&dy4A)
                                                                                                   g$maps$10266$1&dy4A)))
                                                                                              g$maps$10265$1&dy4A
                                                                                              g$ynew$10264$1&dy4A))))))
                                                                                     g$maps$10259$1&dy4A
                                                                                     g$xnew$10258$1&dy4A))))))
                                                                            g$ls/false$10253$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$t$10268$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10269$1&dy4A)
                                                                                  (if g$ls/false$10269$1&dy4A
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$10270$1&dy4A)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$10115$1&dy4A
                                                                                                g$src$10175$1&dy4A
                                                                                                g$ls$10270$1&dy4A
                                                                                                g$r$10177$1&dy4A
                                                                                                g$maps$10178$1&dy4A
                                                                                                g$ellipsis?$10179$1&dy4A
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$10273$1&dy4A
                                                                                                g$maps$10274$1&dy4A)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$10275$1&dy4A
                                                                                                    g$lsnew$10276$1&dy4A)
                                                                                                  (values
                                                                                                    (g$gen-vector$10121$1&dy4A
                                                                                                      g$e$10176$1&dy4A
                                                                                                      g$ls$10270$1&dy4A
                                                                                                      g$lsnew$10276$1&dy4A)
                                                                                                    g$maps$10275$1&dy4A)))
                                                                                               g$maps$10274$1&dy4A
                                                                                               g$lsnew$10273$1&dy4A))))))
                                                                                      g$ls/false$10269$1&dy4A)
                                                                                    ((case-lambda
                                                                                       ((g$t$10277$1&dy4A)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10278$1&dy4A)
                                                                                            (if g$ls/false$10278$1&dy4A
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$10176$1&dy4A)
                                                                                                     g$maps$10178$1&dy4A)))
                                                                                                g$ls/false$10278$1&dy4A)
                                                                                              (g$syntax-violation$8388$1&dy4A
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$10277$1&dy4A))))
                                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                                           g$t$10277$1&dy4A
                                                                                           '_))))
                                                                                     g$t$10268$1&dy4A))))
                                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                                 g$t$10268$1&dy4A
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$10252$1&dy4A))))
                                                                     (g$syntax-dispatch$8277$1&dy4A
                                                                       g$t$10252$1&dy4A
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$10205$1&dy4A))))
                                                           (g$syntax-dispatch$8277$1&dy4A
                                                             g$t$10205$1&dy4A
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$10198$1&dy4A))))
                                                 (g$syntax-dispatch$8277$1&dy4A
                                                   g$t$10198$1&dy4A
                                                   '(any any)))))
                                             g$t$10185$1&dy4A))))
                                       (g$syntax-dispatch$8277$1&dy4A
                                         g$t$10185$1&dy4A
                                         'any))))
                                   g$t$10181$1&dy4A))))
                             (g$syntax-dispatch$8277$1&dy4A
                               g$t$10181$1&dy4A
                               'any))))
                         g$e$10176$1&dy4A))))
                   (g$gen-ref$10116$1&dy4A
                     (case-lambda
                       ((g$src$10162$1&dy4A
                          g$var$10163$1&dy4A
                          g$level$10164$1&dy4A
                          g$maps$10165$1&dy4A)
                        (if (= g$level$10164$1&dy4A '0)
                          (values g$var$10163$1&dy4A g$maps$10165$1&dy4A)
                          (if (null? g$maps$10165$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$10162$1&dy4A)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$10116$1&dy4A
                                   g$src$10162$1&dy4A
                                   g$var$10163$1&dy4A
                                   (- g$level$10164$1&dy4A '1)
                                   (cdr g$maps$10165$1&dy4A))))
                              (case-lambda
                                ((g$outer-var$10168$1&dy4A
                                   g$outer-maps$10169$1&dy4A)
                                 ((case-lambda
                                    ((g$outer-maps$10170$1&dy4A
                                       g$outer-var$10171$1&dy4A)
                                     ((case-lambda
                                        ((g$t$10172$1&dy4A)
                                         (if g$t$10172$1&dy4A
                                           ((case-lambda
                                              ((g$b$10173$1&dy4A)
                                               (values
                                                 (cdr g$b$10173$1&dy4A)
                                                 g$maps$10165$1&dy4A)))
                                            g$t$10172$1&dy4A)
                                           ((case-lambda
                                              ((g$inner-var$10174$1&dy4A)
                                               (values
                                                 g$inner-var$10174$1&dy4A
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$10171$1&dy4A
                                                       g$inner-var$10174$1&dy4A)
                                                     (car g$maps$10165$1&dy4A))
                                                   g$outer-maps$10170$1&dy4A))))
                                            (g$gen-lexical$7938$1&dy4A 'tmp)))))
                                      (g$assq$5712$1&dy4A
                                        g$outer-var$10171$1&dy4A
                                        (car g$maps$10165$1&dy4A)))))
                                  g$outer-maps$10169$1&dy4A
                                  g$outer-var$10168$1&dy4A)))))))))
                   (g$gen-append$10117$1&dy4A
                     (case-lambda
                       ((g$x$10160$1&dy4A g$y$10161$1&dy4A)
                        (if (equal? g$y$10161$1&dy4A ''())
                          g$x$10160$1&dy4A
                          (list 'append g$x$10160$1&dy4A g$y$10161$1&dy4A)))))
                   (g$gen-mappend$10118$1&dy4A
                     (case-lambda
                       ((g$e$10158$1&dy4A g$map-env$10159$1&dy4A)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$10119$1&dy4A
                            g$e$10158$1&dy4A
                            g$map-env$10159$1&dy4A)))))
                   (g$gen-map$10119$1&dy4A
                     (case-lambda
                       ((g$e$10149$1&dy4A g$map-env$10150$1&dy4A)
                        ((case-lambda
                           ((g$formals$10151$1&dy4A g$actuals$10152$1&dy4A)
                            (if (eq? (car g$e$10149$1&dy4A) 'ref)
                              (car g$actuals$10152$1&dy4A)
                              (if (g$for-all$5722$1&dy4A
                                    (case-lambda
                                      ((g$x$10153$1&dy4A)
                                       (if (eq? (car g$x$10153$1&dy4A) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5716$1&dy4A
                                             (g$cadr$5886$1&dy4A
                                               g$x$10153$1&dy4A)
                                             g$formals$10151$1&dy4A))
                                         '#f)))
                                    (cdr g$e$10149$1&dy4A))
                                ((case-lambda
                                   ((g$args$10154$1&dy4A)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$10149$1&dy4A))
                                        g$args$10154$1&dy4A))))
                                 (map ((case-lambda
                                         ((g$r$10155$1&dy4A)
                                          (case-lambda
                                            ((g$x$10156$1&dy4A)
                                             (cdr (g$assq$5712$1&dy4A
                                                    (g$cadr$5886$1&dy4A
                                                      g$x$10156$1&dy4A)
                                                    g$r$10155$1&dy4A))))))
                                       (map cons
                                            g$formals$10151$1&dy4A
                                            g$actuals$10152$1&dy4A))
                                      (cdr g$e$10149$1&dy4A)))
                                (g$cons*$5724$1&dy4A
                                  'map
                                  (list
                                    'lambda
                                    g$formals$10151$1&dy4A
                                    g$e$10149$1&dy4A)
                                  g$actuals$10152$1&dy4A)))))
                         (map cdr g$map-env$10150$1&dy4A)
                         (map (case-lambda
                                ((g$x$10157$1&dy4A)
                                 (list 'ref (car g$x$10157$1&dy4A))))
                              g$map-env$10150$1&dy4A)))))
                   (g$gen-cons$10120$1&dy4A
                     (case-lambda
                       ((g$e$10141$1&dy4A
                          g$x$10142$1&dy4A
                          g$y$10143$1&dy4A
                          g$xnew$10144$1&dy4A
                          g$ynew$10145$1&dy4A)
                        ((case-lambda
                           ((g$t$10146$1&dy4A)
                            (if (g$memv$5717$1&dy4A g$t$10146$1&dy4A '(quote))
                              (if (eq? (car g$xnew$10144$1&dy4A) 'quote)
                                ((case-lambda
                                   ((g$xnew$10147$1&dy4A g$ynew$10148$1&dy4A)
                                    (if (if (eq? g$xnew$10147$1&dy4A
                                                 g$x$10142$1&dy4A)
                                          (begin
                                            '#f
                                            (eq? g$ynew$10148$1&dy4A
                                                 g$y$10143$1&dy4A))
                                          '#f)
                                      (list 'quote g$e$10141$1&dy4A)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$10147$1&dy4A
                                          g$ynew$10148$1&dy4A)))))
                                 (g$cadr$5886$1&dy4A g$xnew$10144$1&dy4A)
                                 (g$cadr$5886$1&dy4A g$ynew$10145$1&dy4A))
                                (if (null?
                                      (g$cadr$5886$1&dy4A g$ynew$10145$1&dy4A))
                                  (list 'list g$xnew$10144$1&dy4A)
                                  (list
                                    'cons
                                    g$xnew$10144$1&dy4A
                                    g$ynew$10145$1&dy4A)))
                              (if (g$memv$5717$1&dy4A g$t$10146$1&dy4A '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$10144$1&dy4A
                                    (cdr g$ynew$10145$1&dy4A)))
                                (list
                                  'cons
                                  g$xnew$10144$1&dy4A
                                  g$ynew$10145$1&dy4A)))))
                         (car g$ynew$10145$1&dy4A)))))
                   (g$gen-vector$10121$1&dy4A
                     (case-lambda
                       ((g$e$10138$1&dy4A
                          g$ls$10139$1&dy4A
                          g$lsnew$10140$1&dy4A)
                        (if (eq? (car g$lsnew$10140$1&dy4A) 'quote)
                          (if (eq? (g$cadr$5886$1&dy4A g$lsnew$10140$1&dy4A)
                                   g$ls$10139$1&dy4A)
                            (list 'quote g$e$10138$1&dy4A)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5886$1&dy4A g$lsnew$10140$1&dy4A))))
                          (if (eq? (car g$lsnew$10140$1&dy4A) 'list)
                            (cons 'vector (cdr g$lsnew$10140$1&dy4A))
                            (list 'list->vector g$lsnew$10140$1&dy4A))))))
                   (g$regen$10122$1&dy4A
                     (case-lambda
                       ((g$x$10135$1&dy4A)
                        ((case-lambda
                           ((g$t$10136$1&dy4A)
                            (if (g$memv$5717$1&dy4A g$t$10136$1&dy4A '(ref))
                              (g$cadr$5886$1&dy4A g$x$10135$1&dy4A)
                              (if (g$memv$5717$1&dy4A
                                    g$t$10136$1&dy4A
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5886$1&dy4A g$x$10135$1&dy4A))
                                (if (g$memv$5717$1&dy4A
                                      g$t$10136$1&dy4A
                                      '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5886$1&dy4A g$x$10135$1&dy4A))
                                  (if (g$memv$5717$1&dy4A
                                        g$t$10136$1&dy4A
                                        '(lambda))
                                    (g$build-lambda$7925$1&dy4A
                                      '#f
                                      (g$cadr$5886$1&dy4A g$x$10135$1&dy4A)
                                      (g$regen$10122$1&dy4A
                                        (g$caddr$5892$1&dy4A g$x$10135$1&dy4A)))
                                    (if (g$memv$5717$1&dy4A
                                          g$t$10136$1&dy4A
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$10137$1&dy4A)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$10137$1&dy4A)))
                                       (map g$regen$10122$1&dy4A
                                            (cdr g$x$10135$1&dy4A)))
                                      (cons
                                        (list 'primitive (car g$x$10135$1&dy4A))
                                        (map g$regen$10122$1&dy4A
                                             (cdr g$x$10135$1&dy4A))))))))))
                         (car g$x$10135$1&dy4A))))))
           (case-lambda
             ((g$e$10123$1&dy4A g$r$10124$1&dy4A g$mr$10125$1&dy4A)
              ((case-lambda
                 ((g$t$10126$1&dy4A)
                  ((case-lambda
                     ((g$ls/false$10127$1&dy4A)
                      (if g$ls/false$10127$1&dy4A
                        (apply
                          (case-lambda
                            ((g$x$10128$1&dy4A)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$10115$1&dy4A
                                    g$e$10123$1&dy4A
                                    g$x$10128$1&dy4A
                                    g$r$10124$1&dy4A
                                    '()
                                    g$ellipsis?$8278$1&dy4A
                                    '#f)))
                               (case-lambda
                                 ((g$e$10131$1&dy4A g$maps$10132$1&dy4A)
                                  ((case-lambda
                                     ((g$maps$10133$1&dy4A g$e$10134$1&dy4A)
                                      (g$regen$10122$1&dy4A g$e$10134$1&dy4A)))
                                   g$maps$10132$1&dy4A
                                   g$e$10131$1&dy4A))))))
                          g$ls/false$10127$1&dy4A)
                        (g$syntax-violation$8388$1&dy4A
                          '#f
                          '"invalid syntax"
                          g$t$10126$1&dy4A))))
                   (g$syntax-dispatch$8277$1&dy4A g$t$10126$1&dy4A '(_ any)))))
               g$e$10123$1&dy4A))))))))
   (g$core-macro-transformer$8284$1&dy4A
     g$core-macro-transformer$11775$1&dy4A
     (case-lambda
       ((g$name$10279$1&dy4A)
        ((case-lambda
           ((g$t$10280$1&dy4A)
            (if (g$memv$5717$1&dy4A g$t$10280$1&dy4A '(quote))
              g$quote-transformer$8237$1&dy4A
              (if (g$memv$5717$1&dy4A g$t$10280$1&dy4A '(lambda))
                g$lambda-transformer$8239$1&dy4A
                (if (g$memv$5717$1&dy4A g$t$10280$1&dy4A '(case-lambda))
                  g$case-lambda-transformer$8238$1&dy4A
                  (if (g$memv$5717$1&dy4A g$t$10280$1&dy4A '(letrec))
                    g$letrec-transformer$8227$1&dy4A
                    (if (g$memv$5717$1&dy4A g$t$10280$1&dy4A '(letrec*))
                      g$letrec*-transformer$8228$1&dy4A
                      (if (g$memv$5717$1&dy4A g$t$10280$1&dy4A '(if))
                        g$if-transformer$8235$1&dy4A
                        (if (g$memv$5717$1&dy4A
                              g$t$10280$1&dy4A
                              '(foreign-call))
                          g$foreign-call-transformer$8275$1&dy4A
                          (if (g$memv$5717$1&dy4A
                                g$t$10280$1&dy4A
                                '(syntax-case))
                            g$syntax-case-transformer$8281$1&dy4A
                            (if (g$memv$5717$1&dy4A g$t$10280$1&dy4A '(syntax))
                              g$syntax-transformer$8283$1&dy4A
                              (if (g$memv$5717$1&dy4A
                                    g$t$10280$1&dy4A
                                    '(type-descriptor))
                                g$type-descriptor-transformer$8230$1&dy4A
                                (if (g$memv$5717$1&dy4A
                                      g$t$10280$1&dy4A
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$8231$1&dy4A
                                  (if (g$memv$5717$1&dy4A
                                        g$t$10280$1&dy4A
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$8232$1&dy4A
                                    (if (g$memv$5717$1&dy4A
                                          g$t$10280$1&dy4A
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$8229$1&dy4A
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$10279$1&dy4A))))))))))))))))
         g$name$10279$1&dy4A))))
   (g$file-options-macro$8285$1&dy4A
     g$file-options-macro$11776$1&dy4A
     (case-lambda
       ((g$x$10281$1&dy4A)
        (letrec* ((g$valid-option?$10282$1&dy4A
                    (case-lambda
                      ((g$x$10287$1&dy4A)
                       (if (g$id?$7999$1&dy4A g$x$10287$1&dy4A)
                         (begin
                           '#f
                           (g$memq$5716$1&dy4A
                             (g$id->sym$8000$1&dy4A g$x$10287$1&dy4A)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$10283$1&dy4A)
              ((case-lambda
                 ((g$ls/false$10284$1&dy4A)
                  (if (if g$ls/false$10284$1&dy4A
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$10285$1&dy4A)
                               (if (g$for-all$5722$1&dy4A
                                     g$valid-option?$10282$1&dy4A
                                     g$opt*$10285$1&dy4A)
                                 (begin
                                   '#f
                                   (g$file-options-spec$7273$1&dy4A
                                     (map g$id->sym$8000$1&dy4A
                                          g$opt*$10285$1&dy4A)))
                                 '#f)))
                            g$ls/false$10284$1&dy4A))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$10286$1&dy4A)
                         (g$bless$8240$1&dy4A
                           (list
                             'quote
                             (g$file-options-spec$7273$1&dy4A
                               (map g$id->sym$8000$1&dy4A
                                    g$opt*$10286$1&dy4A))))))
                      g$ls/false$10284$1&dy4A)
                    (g$syntax-violation$8388$1&dy4A
                      '#f
                      '"invalid syntax"
                      g$t$10283$1&dy4A))))
               (g$syntax-dispatch$8277$1&dy4A
                 g$t$10283$1&dy4A
                 '(_ . each-any)))))
           g$x$10281$1&dy4A)))))
   (g$symbol-macro$8286$1&dy4A
     g$symbol-macro$11777$1&dy4A
     (case-lambda
       ((g$x$10288$1&dy4A g$set$10289$1&dy4A)
        ((case-lambda
           ((g$t$10290$1&dy4A)
            ((case-lambda
               ((g$ls/false$10291$1&dy4A)
                (if (if g$ls/false$10291$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10292$1&dy4A)
                             (if (g$id?$7999$1&dy4A g$name$10292$1&dy4A)
                               (begin
                                 '#f
                                 (g$memq$5716$1&dy4A
                                   (g$id->sym$8000$1&dy4A g$name$10292$1&dy4A)
                                   g$set$10289$1&dy4A))
                               '#f)))
                          g$ls/false$10291$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10293$1&dy4A)
                       (g$bless$8240$1&dy4A (list 'quote g$name$10293$1&dy4A))))
                    g$ls/false$10291$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$10290$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$10290$1&dy4A '(_ any)))))
         g$x$10288$1&dy4A))))
   (g$macro-transformer$8287$1&dy4A
     g$macro-transformer$11778$1&dy4A
     (case-lambda
       ((g$x$10294$1&dy4A)
        (if (procedure? g$x$10294$1&dy4A)
          g$x$10294$1&dy4A
          (if (symbol? g$x$10294$1&dy4A)
            ((case-lambda
               ((g$t$10295$1&dy4A)
                (if (g$memv$5717$1&dy4A g$t$10295$1&dy4A '(define-record-type))
                  g$define-record-type-macro$8271$1&dy4A
                  (if (g$memv$5717$1&dy4A g$t$10295$1&dy4A '(define-struct))
                    g$define-struct-macro$8270$1&dy4A
                    (if (g$memv$5717$1&dy4A g$t$10295$1&dy4A '(include))
                      g$include-macro$8265$1&dy4A
                      (if (g$memv$5717$1&dy4A g$t$10295$1&dy4A '(cond))
                        g$cond-macro$8263$1&dy4A
                        (if (g$memv$5717$1&dy4A g$t$10295$1&dy4A '(let))
                          g$let-macro$8243$1&dy4A
                          (if (g$memv$5717$1&dy4A g$t$10295$1&dy4A '(do))
                            g$do-macro$8259$1&dy4A
                            (if (g$memv$5717$1&dy4A g$t$10295$1&dy4A '(or))
                              g$or-macro$8261$1&dy4A
                              (if (g$memv$5717$1&dy4A g$t$10295$1&dy4A '(and))
                                g$and-macro$8262$1&dy4A
                                (if (g$memv$5717$1&dy4A
                                      g$t$10295$1&dy4A
                                      '(let*))
                                  g$let*-macro$8260$1&dy4A
                                  (if (g$memv$5717$1&dy4A
                                        g$t$10295$1&dy4A
                                        '(let-values))
                                    g$let-values-macro$8244$1&dy4A
                                    (if (g$memv$5717$1&dy4A
                                          g$t$10295$1&dy4A
                                          '(let*-values))
                                      g$let*-values-macro$8245$1&dy4A
                                      (if (g$memv$5717$1&dy4A
                                            g$t$10295$1&dy4A
                                            '(syntax-rules))
                                        g$syntax-rules-macro$8267$1&dy4A
                                        (if (g$memv$5717$1&dy4A
                                              g$t$10295$1&dy4A
                                              '(quasiquote))
                                          g$quasiquote-macro$8268$1&dy4A
                                          (if (g$memv$5717$1&dy4A
                                                g$t$10295$1&dy4A
                                                '(quasisyntax))
                                            g$quasisyntax-macro$8269$1&dy4A
                                            (if (g$memv$5717$1&dy4A
                                                  g$t$10295$1&dy4A
                                                  '(with-syntax))
                                              g$with-syntax-macro$8241$1&dy4A
                                              (if (g$memv$5717$1&dy4A
                                                    g$t$10295$1&dy4A
                                                    '(when))
                                                g$when-macro$8233$1&dy4A
                                                (if (g$memv$5717$1&dy4A
                                                      g$t$10295$1&dy4A
                                                      '(unless))
                                                  g$unless-macro$8234$1&dy4A
                                                  (if (g$memv$5717$1&dy4A
                                                        g$t$10295$1&dy4A
                                                        '(case))
                                                    g$case-macro$8236$1&dy4A
                                                    (if (g$memv$5717$1&dy4A
                                                          g$t$10295$1&dy4A
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$8258$1&dy4A
                                                      (if (g$memv$5717$1&dy4A
                                                            g$t$10295$1&dy4A
                                                            '(time))
                                                        g$time-macro$8254$1&dy4A
                                                        (if (g$memv$5717$1&dy4A
                                                              g$t$10295$1&dy4A
                                                              '(delay))
                                                          g$delay-macro$8255$1&dy4A
                                                          (if (g$memv$5717$1&dy4A
                                                                g$t$10295$1&dy4A
                                                                '(assert))
                                                            g$assert-macro$8256$1&dy4A
                                                            (if (g$memv$5717$1&dy4A
                                                                  g$t$10295$1&dy4A
                                                                  '(endianness))
                                                              g$endianness-macro$8257$1&dy4A
                                                              (if (g$memv$5717$1&dy4A
                                                                    g$t$10295$1&dy4A
                                                                    '(guard))
                                                                g$guard-macro$8252$1&dy4A
                                                                (if (g$memv$5717$1&dy4A
                                                                      g$t$10295$1&dy4A
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$8253$1&dy4A
                                                                  (if (g$memv$5717$1&dy4A
                                                                        g$t$10295$1&dy4A
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$8246$1&dy4A
                                                                    (if (g$memv$5717$1&dy4A
                                                                          g$t$10295$1&dy4A
                                                                          '(trace-define))
                                                                      g$trace-define-macro$8247$1&dy4A
                                                                      (if (g$memv$5717$1&dy4A
                                                                            g$t$10295$1&dy4A
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$8248$1&dy4A
                                                                        (if (g$memv$5717$1&dy4A
                                                                              g$t$10295$1&dy4A
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$8250$1&dy4A
                                                                          (if (g$memv$5717$1&dy4A
                                                                                g$t$10295$1&dy4A
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$8251$1&dy4A
                                                                            (if (g$memv$5717$1&dy4A
                                                                                  g$t$10295$1&dy4A
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$8272$1&dy4A
                                                                              (if (g$memv$5717$1&dy4A
                                                                                    g$t$10295$1&dy4A
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$8274$1&dy4A
                                                                                (if (g$memv$5717$1&dy4A
                                                                                      g$t$10295$1&dy4A
                                                                                      '(include-into))
                                                                                  g$include-into-macro$8266$1&dy4A
                                                                                  (if (g$memv$5717$1&dy4A
                                                                                        g$t$10295$1&dy4A
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$10296$1&dy4A)
                                                                                       (g$symbol-macro$8286$1&dy4A
                                                                                         g$x$10296$1&dy4A
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$5717$1&dy4A
                                                                                          g$t$10295$1&dy4A
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$10297$1&dy4A)
                                                                                         (g$symbol-macro$8286$1&dy4A
                                                                                           g$x$10297$1&dy4A
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$5717$1&dy4A
                                                                                            g$t$10295$1&dy4A
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$10298$1&dy4A)
                                                                                           (g$symbol-macro$8286$1&dy4A
                                                                                             g$x$10298$1&dy4A
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$5717$1&dy4A
                                                                                              g$t$10295$1&dy4A
                                                                                              '(file-options))
                                                                                          g$file-options-macro$8285$1&dy4A
                                                                                          (if (g$memv$5717$1&dy4A
                                                                                                g$t$10295$1&dy4A
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$8273$1&dy4A
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$10294$1&dy4A)))))))))))))))))))))))))))))))))))))))))
             g$x$10294$1&dy4A)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10294$1&dy4A))))))
   (g$local-macro-transformer$8288$1&dy4A
     g$local-macro-transformer$11779$1&dy4A
     (case-lambda ((g$x$10299$1&dy4A) (car g$x$10299$1&dy4A))))
   (g$do-macro-call$8289$1&dy4A
     g$do-macro-call$11780$1&dy4A
     (case-lambda
       ((g$transformer$10300$1&dy4A g$expr$10301$1&dy4A)
        ((case-lambda
           ((g$out$10302$1&dy4A)
            (begin
              ((letrec ((g$f$10303$1&dy4A
                          (case-lambda
                            ((g$x$10304$1&dy4A)
                             (if (not (g$stx?$7971$1&dy4A g$x$10304$1&dy4A))
                               (if (pair? g$x$10304$1&dy4A)
                                 (begin
                                   (g$f$10303$1&dy4A (car g$x$10304$1&dy4A))
                                   (g$f$10303$1&dy4A (cdr g$x$10304$1&dy4A)))
                                 (if (vector? g$x$10304$1&dy4A)
                                   (vector-for-each
                                     g$f$10303$1&dy4A
                                     g$x$10304$1&dy4A)
                                   (if (symbol? g$x$10304$1&dy4A)
                                     (g$syntax-violation$8388$1&dy4A
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$10301$1&dy4A
                                       g$x$10304$1&dy4A)
                                     (void))))
                               (void))))))
                 g$f$10303$1&dy4A)
               g$out$10302$1&dy4A)
              (g$add-mark$7988$1&dy4A
                (g$gen-mark$7983$1&dy4A)
                g$out$10302$1&dy4A
                g$expr$10301$1&dy4A))))
         (g$transformer$10300$1&dy4A
           (g$add-mark$7988$1&dy4A
             g$anti-mark$7984$1&dy4A
             g$expr$10301$1&dy4A
             '#f))))))
   (g$chi-macro$8290$1&dy4A
     g$chi-macro$11781$1&dy4A
     (case-lambda
       ((g$p$10305$1&dy4A g$e$10306$1&dy4A)
        (g$do-macro-call$8289$1&dy4A
          (g$macro-transformer$8287$1&dy4A g$p$10305$1&dy4A)
          g$e$10306$1&dy4A))))
   (g$chi-local-macro$8291$1&dy4A
     g$chi-local-macro$11782$1&dy4A
     (case-lambda
       ((g$p$10307$1&dy4A g$e$10308$1&dy4A)
        (g$do-macro-call$8289$1&dy4A
          (g$local-macro-transformer$8288$1&dy4A g$p$10307$1&dy4A)
          g$e$10308$1&dy4A))))
   (g$chi-global-macro$8292$1&dy4A
     g$chi-global-macro$11783$1&dy4A
     (case-lambda
       ((g$p$10309$1&dy4A g$e$10310$1&dy4A)
        ((case-lambda
           ((g$lib$10311$1&dy4A g$loc$10312$1&dy4A)
            (begin
              (g$visit-library$7810$1&dy4A g$lib$10311$1&dy4A)
              ((case-lambda
                 ((g$x$10313$1&dy4A)
                  ((case-lambda
                     ((g$transformer$10314$1&dy4A)
                      (g$do-macro-call$8289$1&dy4A
                        g$transformer$10314$1&dy4A
                        g$e$10310$1&dy4A)))
                   (if (procedure? g$x$10313$1&dy4A)
                     g$x$10313$1&dy4A
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10313$1&dy4A)))))
               (symbol-value g$loc$10312$1&dy4A)))))
         (car g$p$10309$1&dy4A)
         (cdr g$p$10309$1&dy4A)))))
   (g$chi-expr*$8293$1&dy4A
     g$chi-expr*$11784$1&dy4A
     (case-lambda
       ((g$e*$10315$1&dy4A g$r$10316$1&dy4A g$mr$10317$1&dy4A)
        (if (null? g$e*$10315$1&dy4A)
          '()
          ((case-lambda
             ((g$e$10318$1&dy4A)
              (cons
                g$e$10318$1&dy4A
                (g$chi-expr*$8293$1&dy4A
                  (cdr g$e*$10315$1&dy4A)
                  g$r$10316$1&dy4A
                  g$mr$10317$1&dy4A))))
           (g$chi-expr$8295$1&dy4A
             (car g$e*$10315$1&dy4A)
             g$r$10316$1&dy4A
             g$mr$10317$1&dy4A))))))
   (g$chi-application$8294$1&dy4A
     g$chi-application$11785$1&dy4A
     (case-lambda
       ((g$e$10319$1&dy4A g$r$10320$1&dy4A g$mr$10321$1&dy4A)
        ((case-lambda
           ((g$t$10322$1&dy4A)
            ((case-lambda
               ((g$ls/false$10323$1&dy4A)
                (if g$ls/false$10323$1&dy4A
                  (apply
                    (case-lambda
                      ((g$rator$10324$1&dy4A g$rands$10325$1&dy4A)
                       ((case-lambda
                          ((g$rator$10326$1&dy4A)
                           (cons
                             g$rator$10326$1&dy4A
                             (g$chi-expr*$8293$1&dy4A
                               g$rands$10325$1&dy4A
                               g$r$10320$1&dy4A
                               g$mr$10321$1&dy4A))))
                        (g$chi-expr$8295$1&dy4A
                          g$rator$10324$1&dy4A
                          g$r$10320$1&dy4A
                          g$mr$10321$1&dy4A))))
                    g$ls/false$10323$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$10322$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$10322$1&dy4A
               '(any . each-any)))))
         g$e$10319$1&dy4A))))
   (g$chi-expr$8295$1&dy4A
     g$chi-expr$11786$1&dy4A
     (case-lambda
       ((g$e$10327$1&dy4A g$r$10328$1&dy4A g$mr$10329$1&dy4A)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$8019$1&dy4A g$e$10327$1&dy4A g$r$10328$1&dy4A)))
          (case-lambda
            ((g$type$10333$1&dy4A g$value$10334$1&dy4A g$kwd$10335$1&dy4A)
             ((case-lambda
                ((g$kwd$10336$1&dy4A g$value$10337$1&dy4A g$type$10338$1&dy4A)
                 ((case-lambda
                    ((g$t$10339$1&dy4A)
                     (if (g$memv$5717$1&dy4A g$t$10339$1&dy4A '(core-macro))
                       ((case-lambda
                          ((g$transformer$10340$1&dy4A)
                           (g$transformer$10340$1&dy4A
                             g$e$10327$1&dy4A
                             g$r$10328$1&dy4A
                             g$mr$10329$1&dy4A)))
                        (g$core-macro-transformer$8284$1&dy4A
                          g$value$10337$1&dy4A))
                       (if (g$memv$5717$1&dy4A g$t$10339$1&dy4A '(global))
                         ((case-lambda
                            ((g$lib$10341$1&dy4A)
                             ((case-lambda
                                ((g$loc$10342$1&dy4A)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$8329$1&dy4A)
                                        g$lib$10341$1&dy4A)
                                       g$loc$10342$1&dy4A))))))
                              (cdr g$value$10337$1&dy4A))))
                          (car g$value$10337$1&dy4A))
                         (if (g$memv$5717$1&dy4A g$t$10339$1&dy4A '(core-prim))
                           ((case-lambda
                              ((g$name$10343$1&dy4A)
                               (list 'primitive g$name$10343$1&dy4A)))
                            g$value$10337$1&dy4A)
                           (if (g$memv$5717$1&dy4A g$t$10339$1&dy4A '(call))
                             (g$chi-application$8294$1&dy4A
                               g$e$10327$1&dy4A
                               g$r$10328$1&dy4A
                               g$mr$10329$1&dy4A)
                             (if (g$memv$5717$1&dy4A
                                   g$t$10339$1&dy4A
                                   '(lexical))
                               ((case-lambda
                                  ((g$lex$10344$1&dy4A) g$lex$10344$1&dy4A))
                                (g$lexical-var$8221$1&dy4A
                                  g$value$10337$1&dy4A))
                               (if (g$memv$5717$1&dy4A
                                     g$t$10339$1&dy4A
                                     '(global-macro global-macro!))
                                 (g$chi-expr$8295$1&dy4A
                                   (g$chi-global-macro$8292$1&dy4A
                                     g$value$10337$1&dy4A
                                     g$e$10327$1&dy4A)
                                   g$r$10328$1&dy4A
                                   g$mr$10329$1&dy4A)
                                 (if (g$memv$5717$1&dy4A
                                       g$t$10339$1&dy4A
                                       '(local-macro local-macro!))
                                   (g$chi-expr$8295$1&dy4A
                                     (g$chi-local-macro$8291$1&dy4A
                                       g$value$10337$1&dy4A
                                       g$e$10327$1&dy4A)
                                     g$r$10328$1&dy4A
                                     g$mr$10329$1&dy4A)
                                   (if (g$memv$5717$1&dy4A
                                         g$t$10339$1&dy4A
                                         '(macro macro!))
                                     (g$chi-expr$8295$1&dy4A
                                       (g$chi-macro$8290$1&dy4A
                                         g$value$10337$1&dy4A
                                         g$e$10327$1&dy4A)
                                       g$r$10328$1&dy4A
                                       g$mr$10329$1&dy4A)
                                     (if (g$memv$5717$1&dy4A
                                           g$t$10339$1&dy4A
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$10345$1&dy4A)
                                           (list 'quote g$datum$10345$1&dy4A)))
                                        g$value$10337$1&dy4A)
                                       (if (g$memv$5717$1&dy4A
                                             g$t$10339$1&dy4A
                                             '(set!))
                                         (g$chi-set!$8296$1&dy4A
                                           g$e$10327$1&dy4A
                                           g$r$10328$1&dy4A
                                           g$mr$10329$1&dy4A)
                                         (if (g$memv$5717$1&dy4A
                                               g$t$10339$1&dy4A
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$10346$1&dy4A)
                                               ((case-lambda
                                                  ((g$ls/false$10347$1&dy4A)
                                                   (if g$ls/false$10347$1&dy4A
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10348$1&dy4A
                                                            g$x*$10349$1&dy4A)
                                                          (g$build-sequence$7928$1&dy4A
                                                            '#f
                                                            (g$chi-expr*$8293$1&dy4A
                                                              (cons
                                                                g$x$10348$1&dy4A
                                                                g$x*$10349$1&dy4A)
                                                              g$r$10328$1&dy4A
                                                              g$mr$10329$1&dy4A))))
                                                       g$ls/false$10347$1&dy4A)
                                                     (g$syntax-violation$8388$1&dy4A
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10346$1&dy4A))))
                                                (g$syntax-dispatch$8277$1&dy4A
                                                  g$t$10346$1&dy4A
                                                  '(_ any . each-any)))))
                                            g$e$10327$1&dy4A)
                                           (if (g$memv$5717$1&dy4A
                                                 g$t$10339$1&dy4A
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10350$1&dy4A)
                                                 ((case-lambda
                                                    ((g$ls/false$10351$1&dy4A)
                                                     (if (if g$ls/false$10351$1&dy4A
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10352$1&dy4A
                                                                    g$xrhs*$10353$1&dy4A
                                                                    g$xbody$10354$1&dy4A
                                                                    g$xbody*$10355$1&dy4A)
                                                                  (if (not (g$valid-bound-ids?$8004$1&dy4A
                                                                             g$xlhs*$10352$1&dy4A))
                                                                    (g$syntax-violation$8388$1&dy4A
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10327$1&dy4A)
                                                                    (void))))
                                                               g$ls/false$10351$1&dy4A))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10356$1&dy4A
                                                              g$xrhs*$10357$1&dy4A
                                                              g$xbody$10358$1&dy4A
                                                              g$xbody*$10359$1&dy4A)
                                                            ((case-lambda
                                                               ((g$xlab*$10360$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$xrib$10361$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$xb*$10362$1&dy4A)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7928$1&dy4A
                                                                              '#f
                                                                              (g$chi-expr*$8293$1&dy4A
                                                                                (map (case-lambda
                                                                                       ((g$x$10363$1&dy4A)
                                                                                        (g$add-subst$7989$1&dy4A
                                                                                          g$xrib$10361$1&dy4A
                                                                                          g$x$10363$1&dy4A)))
                                                                                     (cons
                                                                                       g$xbody$10358$1&dy4A
                                                                                       g$xbody*$10359$1&dy4A))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$10360$1&dy4A
                                                                                       g$xb*$10362$1&dy4A)
                                                                                  g$r$10328$1&dy4A)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$10360$1&dy4A
                                                                                       g$xb*$10362$1&dy4A)
                                                                                  g$mr$10329$1&dy4A))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$10364$1&dy4A)
                                                                             (g$make-eval-transformer$8031$1&dy4A
                                                                               (g$expand-transformer$8322$1&dy4A
                                                                                 (if (eq? g$type$10338$1&dy4A
                                                                                          'let-syntax)
                                                                                   g$x$10364$1&dy4A
                                                                                   (g$add-subst$7989$1&dy4A
                                                                                     g$xrib$10361$1&dy4A
                                                                                     g$x$10364$1&dy4A))
                                                                                 g$mr$10329$1&dy4A))))
                                                                          g$xrhs*$10357$1&dy4A))))
                                                                 (g$make-full-rib$7967$1&dy4A
                                                                   g$xlhs*$10356$1&dy4A
                                                                   g$xlab*$10360$1&dy4A))))
                                                             (map g$gen-label$7940$1&dy4A
                                                                  g$xlhs*$10356$1&dy4A))))
                                                         g$ls/false$10351$1&dy4A)
                                                       (g$syntax-violation$8388$1&dy4A
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10350$1&dy4A))))
                                                  (g$syntax-dispatch$8277$1&dy4A
                                                    g$t$10350$1&dy4A
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10327$1&dy4A)
                                             (if (g$memv$5717$1&dy4A
                                                   g$t$10339$1&dy4A
                                                   '(displaced-lexical))
                                               (g$syntax-violation$8388$1&dy4A
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10327$1&dy4A)
                                               (if (g$memv$5717$1&dy4A
                                                     g$t$10339$1&dy4A
                                                     '(syntax))
                                                 (g$syntax-violation$8388$1&dy4A
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10327$1&dy4A)
                                                 (if (g$memv$5717$1&dy4A
                                                       g$t$10339$1&dy4A
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8388$1&dy4A
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10365$1&dy4A)
                                                           (if (g$memv$5717$1&dy4A
                                                                 g$t$10365$1&dy4A
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$5717$1&dy4A
                                                                   g$t$10365$1&dy4A
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$5717$1&dy4A
                                                                     g$t$10365$1&dy4A
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$5717$1&dy4A
                                                                       g$t$10365$1&dy4A
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$5717$1&dy4A
                                                                         g$t$10365$1&dy4A
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$5717$1&dy4A
                                                                           g$t$10365$1&dy4A
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$10338$1&dy4A)
                                                       '" was found where an expression was expected")
                                                     g$e$10327$1&dy4A)
                                                   (if (g$memv$5717$1&dy4A
                                                         g$t$10339$1&dy4A
                                                         '(mutable))
                                                     (g$syntax-violation$8388$1&dy4A
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10327$1&dy4A)
                                                     (g$syntax-violation$8388$1&dy4A
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10327$1&dy4A)))))))))))))))))))
                  g$type$10338$1&dy4A)))
              g$kwd$10335$1&dy4A
              g$value$10334$1&dy4A
              g$type$10333$1&dy4A)))))))
   (g$chi-set!$8296$1&dy4A
     g$chi-set!$11787$1&dy4A
     (case-lambda
       ((g$e$10366$1&dy4A g$r$10367$1&dy4A g$mr$10368$1&dy4A)
        ((case-lambda
           ((g$t$10369$1&dy4A)
            ((case-lambda
               ((g$ls/false$10370$1&dy4A)
                (if (if g$ls/false$10370$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10371$1&dy4A g$v$10372$1&dy4A)
                             (g$id?$7999$1&dy4A g$x$10371$1&dy4A)))
                          g$ls/false$10370$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10373$1&dy4A g$v$10374$1&dy4A)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$8019$1&dy4A
                              g$x$10373$1&dy4A
                              g$r$10367$1&dy4A)))
                         (case-lambda
                           ((g$type$10378$1&dy4A
                              g$value$10379$1&dy4A
                              g$kwd$10380$1&dy4A)
                            ((case-lambda
                               ((g$kwd$10381$1&dy4A
                                  g$value$10382$1&dy4A
                                  g$type$10383$1&dy4A)
                                ((case-lambda
                                   ((g$t$10384$1&dy4A)
                                    (if (g$memv$5717$1&dy4A
                                          g$t$10384$1&dy4A
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$8223$1&dy4A
                                          g$value$10382$1&dy4A
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$8221$1&dy4A
                                            g$value$10382$1&dy4A)
                                          (g$chi-expr$8295$1&dy4A
                                            g$v$10374$1&dy4A
                                            g$r$10367$1&dy4A
                                            g$mr$10368$1&dy4A)))
                                      (if (g$memv$5717$1&dy4A
                                            g$t$10384$1&dy4A
                                            '(core-prim))
                                        (g$syntax-violation$8388$1&dy4A
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10366$1&dy4A)
                                        (if (g$memv$5717$1&dy4A
                                              g$t$10384$1&dy4A
                                              '(global))
                                          (g$syntax-violation$8388$1&dy4A
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10366$1&dy4A)
                                          (if (g$memv$5717$1&dy4A
                                                g$t$10384$1&dy4A
                                                '(global-macro!))
                                            (g$chi-expr$8295$1&dy4A
                                              (g$chi-global-macro$8292$1&dy4A
                                                g$value$10382$1&dy4A
                                                g$e$10366$1&dy4A)
                                              g$r$10367$1&dy4A
                                              g$mr$10368$1&dy4A)
                                            (if (g$memv$5717$1&dy4A
                                                  g$t$10384$1&dy4A
                                                  '(local-macro!))
                                              (g$chi-expr$8295$1&dy4A
                                                (g$chi-local-macro$8291$1&dy4A
                                                  g$value$10382$1&dy4A
                                                  g$e$10366$1&dy4A)
                                                g$r$10367$1&dy4A
                                                g$mr$10368$1&dy4A)
                                              (if (g$memv$5717$1&dy4A
                                                    g$t$10384$1&dy4A
                                                    '(mutable))
                                                (g$syntax-violation$8388$1&dy4A
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10366$1&dy4A)
                                                (g$syntax-violation$8388$1&dy4A
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10366$1&dy4A)))))))))
                                 g$type$10383$1&dy4A)))
                             g$kwd$10380$1&dy4A
                             g$value$10379$1&dy4A
                             g$type$10378$1&dy4A))))))
                    g$ls/false$10370$1&dy4A)
                  (g$syntax-violation$8388$1&dy4A
                    '#f
                    '"invalid syntax"
                    g$t$10369$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$10369$1&dy4A '(_ any any)))))
         g$e$10366$1&dy4A))))
   (g$verify-formals$8297$1&dy4A
     g$verify-formals$11788$1&dy4A
     (case-lambda
       ((g$fmls$10385$1&dy4A g$stx$10386$1&dy4A)
        ((case-lambda
           ((g$t$10387$1&dy4A)
            ((case-lambda
               ((g$ls/false$10388$1&dy4A)
                (if g$ls/false$10388$1&dy4A
                  (apply
                    (case-lambda
                      ((g$x*$10389$1&dy4A)
                       (if (not (g$valid-bound-ids?$8004$1&dy4A
                                  g$x*$10389$1&dy4A))
                         (g$invalid-fmls-error$8242$1&dy4A
                           g$stx$10386$1&dy4A
                           g$fmls$10385$1&dy4A)
                         (void))))
                    g$ls/false$10388$1&dy4A)
                  ((case-lambda
                     ((g$t$10390$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$10391$1&dy4A)
                          (if g$ls/false$10391$1&dy4A
                            (apply
                              (case-lambda
                                ((g$x*$10392$1&dy4A g$x$10393$1&dy4A)
                                 (if (not (g$valid-bound-ids?$8004$1&dy4A
                                            (cons
                                              g$x$10393$1&dy4A
                                              g$x*$10392$1&dy4A)))
                                   (g$invalid-fmls-error$8242$1&dy4A
                                     g$stx$10386$1&dy4A
                                     g$fmls$10385$1&dy4A)
                                   (void))))
                              g$ls/false$10391$1&dy4A)
                            ((case-lambda
                               ((g$t$10394$1&dy4A)
                                ((case-lambda
                                   ((g$ls/false$10395$1&dy4A)
                                    (if g$ls/false$10395$1&dy4A
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10386$1&dy4A)))
                                        g$ls/false$10395$1&dy4A)
                                      (g$syntax-violation$8388$1&dy4A
                                        '#f
                                        '"invalid syntax"
                                        g$t$10394$1&dy4A))))
                                 (g$syntax-dispatch$8277$1&dy4A
                                   g$t$10394$1&dy4A
                                   '_))))
                             g$t$10390$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$10390$1&dy4A
                         '#(each+ any () any)))))
                   g$t$10387$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$10387$1&dy4A 'each-any))))
         g$fmls$10385$1&dy4A))))
   (g$chi-lambda-clause$8298$1&dy4A
     g$chi-lambda-clause$11789$1&dy4A
     (case-lambda
       ((g$stx$10396$1&dy4A
          g$fmls$10397$1&dy4A
          g$body*$10398$1&dy4A
          g$r$10399$1&dy4A
          g$mr$10400$1&dy4A)
        ((case-lambda
           ((g$t$10401$1&dy4A)
            ((case-lambda
               ((g$ls/false$10402$1&dy4A)
                (if g$ls/false$10402$1&dy4A
                  (apply
                    (case-lambda
                      ((g$x*$10403$1&dy4A)
                       (begin
                         (g$verify-formals$8297$1&dy4A
                           g$fmls$10397$1&dy4A
                           g$stx$10396$1&dy4A)
                         ((case-lambda
                            ((g$lex*$10404$1&dy4A g$lab*$10405$1&dy4A)
                             (values
                               g$lex*$10404$1&dy4A
                               (g$chi-internal$8306$1&dy4A
                                 (g$add-subst$7989$1&dy4A
                                   (g$make-full-rib$7967$1&dy4A
                                     g$x*$10403$1&dy4A
                                     g$lab*$10405$1&dy4A)
                                   g$body*$10398$1&dy4A)
                                 (g$add-lexicals$8225$1&dy4A
                                   g$lab*$10405$1&dy4A
                                   g$lex*$10404$1&dy4A
                                   g$r$10399$1&dy4A)
                                 g$mr$10400$1&dy4A))))
                          (map g$gen-lexical$7938$1&dy4A g$x*$10403$1&dy4A)
                          (map g$gen-label$7940$1&dy4A g$x*$10403$1&dy4A)))))
                    g$ls/false$10402$1&dy4A)
                  ((case-lambda
                     ((g$t$10406$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$10407$1&dy4A)
                          (if g$ls/false$10407$1&dy4A
                            (apply
                              (case-lambda
                                ((g$x*$10408$1&dy4A g$x$10409$1&dy4A)
                                 (begin
                                   (g$verify-formals$8297$1&dy4A
                                     g$fmls$10397$1&dy4A
                                     g$stx$10396$1&dy4A)
                                   ((case-lambda
                                      ((g$lex*$10410$1&dy4A
                                         g$lab*$10411$1&dy4A
                                         g$lex$10412$1&dy4A
                                         g$lab$10413$1&dy4A)
                                       (values
                                         (append
                                           g$lex*$10410$1&dy4A
                                           g$lex$10412$1&dy4A)
                                         (g$chi-internal$8306$1&dy4A
                                           (g$add-subst$7989$1&dy4A
                                             (g$make-full-rib$7967$1&dy4A
                                               (cons
                                                 g$x$10409$1&dy4A
                                                 g$x*$10408$1&dy4A)
                                               (cons
                                                 g$lab$10413$1&dy4A
                                                 g$lab*$10411$1&dy4A))
                                             g$body*$10398$1&dy4A)
                                           (g$add-lexicals$8225$1&dy4A
                                             (cons
                                               g$lab$10413$1&dy4A
                                               g$lab*$10411$1&dy4A)
                                             (cons
                                               g$lex$10412$1&dy4A
                                               g$lex*$10410$1&dy4A)
                                             g$r$10399$1&dy4A)
                                           g$mr$10400$1&dy4A))))
                                    (map g$gen-lexical$7938$1&dy4A
                                         g$x*$10408$1&dy4A)
                                    (map g$gen-label$7940$1&dy4A
                                         g$x*$10408$1&dy4A)
                                    (g$gen-lexical$7938$1&dy4A g$x$10409$1&dy4A)
                                    (g$gen-label$7940$1&dy4A
                                      g$x$10409$1&dy4A)))))
                              g$ls/false$10407$1&dy4A)
                            ((case-lambda
                               ((g$t$10414$1&dy4A)
                                ((case-lambda
                                   ((g$ls/false$10415$1&dy4A)
                                    (if g$ls/false$10415$1&dy4A
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8388$1&dy4A
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10397$1&dy4A)))
                                        g$ls/false$10415$1&dy4A)
                                      (g$syntax-violation$8388$1&dy4A
                                        '#f
                                        '"invalid syntax"
                                        g$t$10414$1&dy4A))))
                                 (g$syntax-dispatch$8277$1&dy4A
                                   g$t$10414$1&dy4A
                                   '_))))
                             g$t$10406$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$10406$1&dy4A
                         '#(each+ any () any)))))
                   g$t$10401$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$10401$1&dy4A 'each-any))))
         g$fmls$10397$1&dy4A))))
   (g$chi-lambda-clause*$8299$1&dy4A
     g$chi-lambda-clause*$11790$1&dy4A
     (case-lambda
       ((g$stx$10416$1&dy4A
          g$fmls*$10417$1&dy4A
          g$body**$10418$1&dy4A
          g$r$10419$1&dy4A
          g$mr$10420$1&dy4A)
        (if (null? g$fmls*$10417$1&dy4A)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8298$1&dy4A
                 g$stx$10416$1&dy4A
                 (car g$fmls*$10417$1&dy4A)
                 (car g$body**$10418$1&dy4A)
                 g$r$10419$1&dy4A
                 g$mr$10420$1&dy4A)))
            (case-lambda
              ((g$a$10423$1&dy4A g$b$10424$1&dy4A)
               ((case-lambda
                  ((g$b$10425$1&dy4A g$a$10426$1&dy4A)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8299$1&dy4A
                          g$stx$10416$1&dy4A
                          (cdr g$fmls*$10417$1&dy4A)
                          (cdr g$body**$10418$1&dy4A)
                          g$r$10419$1&dy4A
                          g$mr$10420$1&dy4A)))
                     (case-lambda
                       ((g$a*$10429$1&dy4A g$b*$10430$1&dy4A)
                        ((case-lambda
                           ((g$b*$10431$1&dy4A g$a*$10432$1&dy4A)
                            (values
                              (cons g$a$10426$1&dy4A g$a*$10432$1&dy4A)
                              (cons g$b$10425$1&dy4A g$b*$10431$1&dy4A))))
                         g$b*$10430$1&dy4A
                         g$a*$10429$1&dy4A))))))
                g$b$10424$1&dy4A
                g$a$10423$1&dy4A))))))))
   (g$chi-defun$8300$1&dy4A
     g$chi-defun$11791$1&dy4A
     (case-lambda
       ((g$x$10433$1&dy4A g$r$10434$1&dy4A g$mr$10435$1&dy4A)
        ((case-lambda
           ((g$fmls$10436$1&dy4A g$body*$10437$1&dy4A)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8298$1&dy4A
                   g$fmls$10436$1&dy4A
                   g$fmls$10436$1&dy4A
                   g$body*$10437$1&dy4A
                   g$r$10434$1&dy4A
                   g$mr$10435$1&dy4A)))
              (case-lambda
                ((g$fmls$10440$1&dy4A g$body$10441$1&dy4A)
                 ((case-lambda
                    ((g$body$10442$1&dy4A g$fmls$10443$1&dy4A)
                     (g$build-lambda$7925$1&dy4A
                       '#f
                       g$fmls$10443$1&dy4A
                       g$body$10442$1&dy4A)))
                  g$body$10441$1&dy4A
                  g$fmls$10440$1&dy4A))))))
         (car g$x$10433$1&dy4A)
         (cdr g$x$10433$1&dy4A)))))
   (g$chi-rhs$8301$1&dy4A
     g$chi-rhs$11792$1&dy4A
     (case-lambda
       ((g$rhs$10444$1&dy4A g$r$10445$1&dy4A g$mr$10446$1&dy4A)
        ((case-lambda
           ((g$t$10447$1&dy4A)
            (if (g$memv$5717$1&dy4A g$t$10447$1&dy4A '(defun))
              (g$chi-defun$8300$1&dy4A
                (cdr g$rhs$10444$1&dy4A)
                g$r$10445$1&dy4A
                g$mr$10446$1&dy4A)
              (if (g$memv$5717$1&dy4A g$t$10447$1&dy4A '(expr))
                ((case-lambda
                   ((g$expr$10448$1&dy4A)
                    (g$chi-expr$8295$1&dy4A
                      g$expr$10448$1&dy4A
                      g$r$10445$1&dy4A
                      g$mr$10446$1&dy4A)))
                 (cdr g$rhs$10444$1&dy4A))
                (if (g$memv$5717$1&dy4A g$t$10447$1&dy4A '(top-expr))
                  ((case-lambda
                     ((g$expr$10449$1&dy4A)
                      (g$build-sequence$7928$1&dy4A
                        '#f
                        (list
                          (g$chi-expr$8295$1&dy4A
                            g$expr$10449$1&dy4A
                            g$r$10445$1&dy4A
                            g$mr$10446$1&dy4A)
                          (g$build-void$7929$1&dy4A)))))
                   (cdr g$rhs$10444$1&dy4A))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10444$1&dy4A))))))
         (car g$rhs$10444$1&dy4A)))))
   (g$expand-interaction-rhs*/init*$8302$1&dy4A
     g$expand-interaction-rhs*/init*$11793$1&dy4A
     (case-lambda
       ((g$lhs*$10450$1&dy4A
          g$rhs*$10451$1&dy4A
          g$init*$10452$1&dy4A
          g$r$10453$1&dy4A
          g$mr$10454$1&dy4A)
        ((letrec ((g$f$10455$1&dy4A
                    (case-lambda
                      ((g$lhs*$10456$1&dy4A g$rhs*$10457$1&dy4A)
                       (if (null? g$lhs*$10456$1&dy4A)
                         (map (case-lambda
                                ((g$x$10458$1&dy4A)
                                 (g$chi-expr$8295$1&dy4A
                                   g$x$10458$1&dy4A
                                   g$r$10453$1&dy4A
                                   g$mr$10454$1&dy4A)))
                              g$init*$10452$1&dy4A)
                         ((case-lambda
                            ((g$lhs$10459$1&dy4A g$rhs$10460$1&dy4A)
                             ((case-lambda
                                ((g$t$10461$1&dy4A)
                                 (if (g$memv$5717$1&dy4A
                                       g$t$10461$1&dy4A
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$10462$1&dy4A)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10459$1&dy4A
                                           g$rhs$10462$1&dy4A)
                                         (g$f$10455$1&dy4A
                                           (cdr g$lhs*$10456$1&dy4A)
                                           (cdr g$rhs*$10457$1&dy4A)))))
                                    (g$chi-defun$8300$1&dy4A
                                      (cdr g$rhs$10460$1&dy4A)
                                      g$r$10453$1&dy4A
                                      g$mr$10454$1&dy4A))
                                   (if (g$memv$5717$1&dy4A
                                         g$t$10461$1&dy4A
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$10463$1&dy4A)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10459$1&dy4A
                                             g$rhs$10463$1&dy4A)
                                           (g$f$10455$1&dy4A
                                             (cdr g$lhs*$10456$1&dy4A)
                                             (cdr g$rhs*$10457$1&dy4A)))))
                                      (g$chi-expr$8295$1&dy4A
                                        (cdr g$rhs$10460$1&dy4A)
                                        g$r$10453$1&dy4A
                                        g$mr$10454$1&dy4A))
                                     (if (g$memv$5717$1&dy4A
                                           g$t$10461$1&dy4A
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$10464$1&dy4A)
                                           (cons
                                             g$e$10464$1&dy4A
                                             (g$f$10455$1&dy4A
                                               (cdr g$lhs*$10456$1&dy4A)
                                               (cdr g$rhs*$10457$1&dy4A)))))
                                        (g$chi-expr$8295$1&dy4A
                                          (cdr g$rhs$10460$1&dy4A)
                                          g$r$10453$1&dy4A
                                          g$mr$10454$1&dy4A))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10460$1&dy4A))))))
                              (car g$rhs$10460$1&dy4A))))
                          (car g$lhs*$10456$1&dy4A)
                          (car g$rhs*$10457$1&dy4A)))))))
           g$f$10455$1&dy4A)
         g$lhs*$10450$1&dy4A
         g$rhs*$10451$1&dy4A))))
   (g$chi-rhs*$8303$1&dy4A
     g$chi-rhs*$11794$1&dy4A
     (case-lambda
       ((g$rhs*$10465$1&dy4A g$r$10466$1&dy4A g$mr$10467$1&dy4A)
        ((letrec ((g$f$10468$1&dy4A
                    (case-lambda
                      ((g$ls$10469$1&dy4A)
                       (if (null? g$ls$10469$1&dy4A)
                         '()
                         ((case-lambda
                            ((g$a$10470$1&dy4A)
                             (cons
                               g$a$10470$1&dy4A
                               (g$f$10468$1&dy4A (cdr g$ls$10469$1&dy4A)))))
                          (g$chi-rhs$8301$1&dy4A
                            (car g$ls$10469$1&dy4A)
                            g$r$10466$1&dy4A
                            g$mr$10467$1&dy4A)))))))
           g$f$10468$1&dy4A)
         g$rhs*$10465$1&dy4A))))
   (g$find-bound=?$8304$1&dy4A
     g$find-bound=?$11795$1&dy4A
     (case-lambda
       ((g$x$10471$1&dy4A g$lhs*$10472$1&dy4A g$rhs*$10473$1&dy4A)
        (if (null? g$lhs*$10472$1&dy4A)
          '#f
          (if (g$bound-id=?$8002$1&dy4A
                g$x$10471$1&dy4A
                (car g$lhs*$10472$1&dy4A))
            (car g$rhs*$10473$1&dy4A)
            (g$find-bound=?$8304$1&dy4A
              g$x$10471$1&dy4A
              (cdr g$lhs*$10472$1&dy4A)
              (cdr g$rhs*$10473$1&dy4A)))))))
   (g$find-dups$8305$1&dy4A
     g$find-dups$11796$1&dy4A
     (case-lambda
       ((g$ls$10474$1&dy4A)
        ((letrec ((g$f$10475$1&dy4A
                    (case-lambda
                      ((g$ls$10476$1&dy4A g$dups$10477$1&dy4A)
                       (if (null? g$ls$10476$1&dy4A)
                         g$dups$10477$1&dy4A
                         ((case-lambda
                            ((g$t$10478$1&dy4A)
                             (if g$t$10478$1&dy4A
                               ((case-lambda
                                  ((g$x$10479$1&dy4A)
                                   (g$f$10475$1&dy4A
                                     (cdr g$ls$10476$1&dy4A)
                                     (cons
                                       (list
                                         (car g$ls$10476$1&dy4A)
                                         g$x$10479$1&dy4A)
                                       g$dups$10477$1&dy4A))))
                                g$t$10478$1&dy4A)
                               (g$f$10475$1&dy4A
                                 (cdr g$ls$10476$1&dy4A)
                                 g$dups$10477$1&dy4A))))
                          (g$find-bound=?$8304$1&dy4A
                            (car g$ls$10476$1&dy4A)
                            (cdr g$ls$10476$1&dy4A)
                            (cdr g$ls$10476$1&dy4A))))))))
           g$f$10475$1&dy4A)
         g$ls$10474$1&dy4A
         '()))))
   (g$chi-internal$8306$1&dy4A
     g$chi-internal$11797$1&dy4A
     (case-lambda
       ((g$e*$10480$1&dy4A g$r$10481$1&dy4A g$mr$10482$1&dy4A)
        ((case-lambda
           ((g$rib$10483$1&dy4A)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8321$1&dy4A
                   (map (case-lambda
                          ((g$x$10492$1&dy4A)
                           (g$add-subst$7989$1&dy4A
                             g$rib$10483$1&dy4A
                             g$x$10492$1&dy4A)))
                        (g$syntax->list$7998$1&dy4A g$e*$10480$1&dy4A))
                   g$r$10481$1&dy4A
                   g$mr$10482$1&dy4A
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$10483$1&dy4A
                   '#f)))
              (case-lambda
                ((g$e*$10493$1&dy4A
                   g$r$10494$1&dy4A
                   g$mr$10495$1&dy4A
                   g$lex*$10496$1&dy4A
                   g$rhs*$10497$1&dy4A
                   g$mod**$10498$1&dy4A
                   g$kwd*$10499$1&dy4A
                   g$_exp*$10500$1&dy4A)
                 ((case-lambda
                    ((g$_exp*$10501$1&dy4A
                       g$kwd*$10502$1&dy4A
                       g$mod**$10503$1&dy4A
                       g$rhs*$10504$1&dy4A
                       g$lex*$10505$1&dy4A
                       g$mr$10506$1&dy4A
                       g$r$10507$1&dy4A
                       g$e*$10508$1&dy4A)
                     (begin
                       (if (null? g$e*$10508$1&dy4A)
                         (g$syntax-violation$8388$1&dy4A
                           '#f
                           '"no expression in body"
                           g$e*$10508$1&dy4A)
                         (void))
                       ((case-lambda
                          ((g$init*$10509$1&dy4A)
                           ((case-lambda
                              ((g$rhs*$10510$1&dy4A)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7931$1&dy4A
                                     '#f
                                     (reverse g$lex*$10505$1&dy4A)
                                     (reverse g$rhs*$10510$1&dy4A)
                                     (g$build-sequence$7928$1&dy4A
                                       '#f
                                       g$init*$10509$1&dy4A)))))))
                            (g$chi-rhs*$8303$1&dy4A
                              g$rhs*$10504$1&dy4A
                              g$r$10507$1&dy4A
                              g$mr$10506$1&dy4A))))
                        (g$chi-expr*$8293$1&dy4A
                          (append
                            (apply append (reverse g$mod**$10503$1&dy4A))
                            g$e*$10508$1&dy4A)
                          g$r$10507$1&dy4A
                          g$mr$10506$1&dy4A)))))
                  g$_exp*$10500$1&dy4A
                  g$kwd*$10499$1&dy4A
                  g$mod**$10498$1&dy4A
                  g$rhs*$10497$1&dy4A
                  g$lex*$10496$1&dy4A
                  g$mr$10495$1&dy4A
                  g$r$10494$1&dy4A
                  g$e*$10493$1&dy4A))))))
         (g$make-empty-rib$7959$1&dy4A)))))
   (g$parse-module$8307$1&dy4A
     g$parse-module$11798$1&dy4A
     (case-lambda
       ((g$e$10511$1&dy4A)
        ((case-lambda
           ((g$t$10512$1&dy4A)
            ((case-lambda
               ((g$ls/false$10513$1&dy4A)
                (if g$ls/false$10513$1&dy4A
                  (apply
                    (case-lambda
                      ((g$export*$10514$1&dy4A g$b*$10515$1&dy4A)
                       (begin
                         (if (not (g$for-all$5722$1&dy4A
                                    g$id?$7999$1&dy4A
                                    g$export*$10514$1&dy4A))
                           (g$syntax-violation$8388$1&dy4A
                             '#f
                             '"module exports must be identifiers"
                             g$e$10511$1&dy4A)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$10514$1&dy4A)
                           g$b*$10515$1&dy4A))))
                    g$ls/false$10513$1&dy4A)
                  ((case-lambda
                     ((g$t$10516$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$10517$1&dy4A)
                          (if g$ls/false$10517$1&dy4A
                            (apply
                              (case-lambda
                                ((g$name$10518$1&dy4A
                                   g$export*$10519$1&dy4A
                                   g$b*$10520$1&dy4A)
                                 (begin
                                   (if (not (g$id?$7999$1&dy4A
                                              g$name$10518$1&dy4A))
                                     (g$syntax-violation$8388$1&dy4A
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10511$1&dy4A)
                                     (void))
                                   (if (not (g$for-all$5722$1&dy4A
                                              g$id?$7999$1&dy4A
                                              g$export*$10519$1&dy4A))
                                     (g$syntax-violation$8388$1&dy4A
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10511$1&dy4A)
                                     (void))
                                   (values
                                     g$name$10518$1&dy4A
                                     (list->vector g$export*$10519$1&dy4A)
                                     g$b*$10520$1&dy4A))))
                              g$ls/false$10517$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$10516$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$10516$1&dy4A
                         '(_ any each-any . each-any)))))
                   g$t$10512$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$10512$1&dy4A
               '(_ each-any . each-any)))))
         g$e$10511$1&dy4A))))
   (g$9433$8308$1&dy4A
     g$9433$11799$1&dy4A
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9436$1&dy4A
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9435$8309$1&dy4A g$9435$11800$1&dy4A '#f)
   (g$9434$8310$1&dy4A
     g$9434$11801$1&dy4A
     (make-record-constructor-descriptor
       g$9433$8308$1&dy4A
       '#f
       g$9435$8309$1&dy4A))
   (g$module-interface?$8311$1&dy4A
     g$module-interface?$11802$1&dy4A
     (record-predicate g$9433$8308$1&dy4A))
   (g$make-module-interface$8312$1&dy4A
     g$make-module-interface$11803$1&dy4A
     (record-constructor g$9434$8310$1&dy4A))
   (g$module-interface-first-mark$8313$1&dy4A
     g$module-interface-first-mark$11804$1&dy4A
     (record-accessor g$9433$8308$1&dy4A '0))
   (g$module-interface-exp-id-vec$8314$1&dy4A
     g$module-interface-exp-id-vec$11805$1&dy4A
     (record-accessor g$9433$8308$1&dy4A '1))
   (g$module-interface-exp-lab-vec$8315$1&dy4A
     g$module-interface-exp-lab-vec$11806$1&dy4A
     (record-accessor g$9433$8308$1&dy4A '2))
   (g$set-module-interface-first-mark!$8316$1&dy4A
     g$set-module-interface-first-mark!$11807$1&dy4A
     (record-mutator g$9433$8308$1&dy4A '0))
   (g$set-module-interface-exp-id-vec!$8317$1&dy4A
     g$set-module-interface-exp-id-vec!$11808$1&dy4A
     (record-mutator g$9433$8308$1&dy4A '1))
   (g$set-module-interface-exp-lab-vec!$8318$1&dy4A
     g$set-module-interface-exp-lab-vec!$11809$1&dy4A
     (record-mutator g$9433$8308$1&dy4A '2))
   (g$module-interface-exp-id*$8319$1&dy4A
     g$module-interface-exp-id*$11810$1&dy4A
     (case-lambda
       ((g$iface$10521$1&dy4A g$id$10522$1&dy4A)
        (letrec* ((g$diff-marks$10523$1&dy4A
                    (case-lambda
                      ((g$ls$10527$1&dy4A g$x$10528$1&dy4A)
                       (begin
                         (if (null? g$ls$10527$1&dy4A)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10529$1&dy4A)
                             (if (eq? g$a$10529$1&dy4A g$x$10528$1&dy4A)
                               '()
                               (cons
                                 g$a$10529$1&dy4A
                                 (g$diff-marks$10523$1&dy4A
                                   (cdr g$ls$10527$1&dy4A)
                                   g$x$10528$1&dy4A)))))
                          (car g$ls$10527$1&dy4A)))))))
          ((case-lambda
             ((g$diff$10524$1&dy4A g$id-vec$10525$1&dy4A)
              (if (null? g$diff$10524$1&dy4A)
                g$id-vec$10525$1&dy4A
                (vector-map
                  (case-lambda
                    ((g$x$10526$1&dy4A)
                     (g$make-stx$7972$1&dy4A
                       (g$stx-expr$7973$1&dy4A g$x$10526$1&dy4A)
                       (append
                         g$diff$10524$1&dy4A
                         (g$stx-mark*$7974$1&dy4A g$x$10526$1&dy4A))
                       '()
                       '())))
                  g$id-vec$10525$1&dy4A))))
           (g$diff-marks$10523$1&dy4A
             (g$stx-mark*$7974$1&dy4A g$id$10522$1&dy4A)
             (g$module-interface-first-mark$8313$1&dy4A g$iface$10521$1&dy4A))
           (g$module-interface-exp-id-vec$8314$1&dy4A g$iface$10521$1&dy4A))))))
   (g$chi-internal-module$8320$1&dy4A
     g$chi-internal-module$11811$1&dy4A
     (case-lambda
       ((g$e$10530$1&dy4A
          g$r$10531$1&dy4A
          g$mr$10532$1&dy4A
          g$lex*$10533$1&dy4A
          g$rhs*$10534$1&dy4A
          g$mod**$10535$1&dy4A
          g$kwd*$10536$1&dy4A)
        (call-with-values
          (case-lambda (() (g$parse-module$8307$1&dy4A g$e$10530$1&dy4A)))
          (case-lambda
            ((g$name$10540$1&dy4A g$exp-id*$10541$1&dy4A g$e*$10542$1&dy4A)
             ((case-lambda
                ((g$e*$10543$1&dy4A g$exp-id*$10544$1&dy4A g$name$10545$1&dy4A)
                 ((case-lambda
                    ((g$rib$10546$1&dy4A)
                     ((case-lambda
                        ((g$e*$10547$1&dy4A)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$8321$1&dy4A
                                    g$e*$10547$1&dy4A
                                    g$r$10531$1&dy4A
                                    g$mr$10532$1&dy4A
                                    g$lex*$10533$1&dy4A
                                    g$rhs*$10534$1&dy4A
                                    g$mod**$10535$1&dy4A
                                    g$kwd*$10536$1&dy4A
                                    '()
                                    g$rib$10546$1&dy4A
                                    '#f)))
                               (case-lambda
                                 ((g$e*$10556$1&dy4A
                                    g$r$10557$1&dy4A
                                    g$mr$10558$1&dy4A
                                    g$lex*$10559$1&dy4A
                                    g$rhs*$10560$1&dy4A
                                    g$mod**$10561$1&dy4A
                                    g$kwd*$10562$1&dy4A
                                    g$_exp*$10563$1&dy4A)
                                  ((case-lambda
                                     ((g$_exp*$10564$1&dy4A
                                        g$kwd*$10565$1&dy4A
                                        g$mod**$10566$1&dy4A
                                        g$rhs*$10567$1&dy4A
                                        g$lex*$10568$1&dy4A
                                        g$mr$10569$1&dy4A
                                        g$r$10570$1&dy4A
                                        g$e*$10571$1&dy4A)
                                      ((case-lambda
                                         ((g$exp-lab*$10572$1&dy4A
                                            g$mod**$10573$1&dy4A)
                                          (if (not g$name$10545$1&dy4A)
                                            (values
                                              g$lex*$10568$1&dy4A
                                              g$rhs*$10567$1&dy4A
                                              g$exp-id*$10544$1&dy4A
                                              g$exp-lab*$10572$1&dy4A
                                              g$r$10570$1&dy4A
                                              g$mr$10569$1&dy4A
                                              g$mod**$10573$1&dy4A
                                              g$kwd*$10565$1&dy4A)
                                            ((case-lambda
                                               ((g$lab$10574$1&dy4A
                                                  g$iface$10575$1&dy4A)
                                                (values
                                                  g$lex*$10568$1&dy4A
                                                  g$rhs*$10567$1&dy4A
                                                  (vector g$name$10545$1&dy4A)
                                                  (vector g$lab$10574$1&dy4A)
                                                  (cons
                                                    (cons
                                                      g$lab$10574$1&dy4A
                                                      (cons
                                                        '$module
                                                        g$iface$10575$1&dy4A))
                                                    g$r$10570$1&dy4A)
                                                  (cons
                                                    (cons
                                                      g$lab$10574$1&dy4A
                                                      (cons
                                                        '$module
                                                        g$iface$10575$1&dy4A))
                                                    g$mr$10569$1&dy4A)
                                                  g$mod**$10573$1&dy4A
                                                  g$kwd*$10565$1&dy4A)))
                                             (g$gen-label$7940$1&dy4A 'module)
                                             (g$make-module-interface$8312$1&dy4A
                                               (car (g$stx-mark*$7974$1&dy4A
                                                      g$name$10545$1&dy4A))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$10576$1&dy4A)
                                                    (g$make-stx$7972$1&dy4A
                                                      (g$stx-expr$7973$1&dy4A
                                                        g$x$10576$1&dy4A)
                                                      (g$stx-mark*$7974$1&dy4A
                                                        g$x$10576$1&dy4A)
                                                      '()
                                                      '())))
                                                 g$exp-id*$10544$1&dy4A)
                                               g$exp-lab*$10572$1&dy4A)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$10577$1&dy4A)
                                            ((case-lambda
                                               ((g$t$10578$1&dy4A)
                                                (if g$t$10578$1&dy4A
                                                  g$t$10578$1&dy4A
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$8388$1&dy4A
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$10577$1&dy4A)))))
                                             (g$id->label$8012$1&dy4A
                                               (g$make-stx$7972$1&dy4A
                                                 (g$id->sym$8000$1&dy4A
                                                   g$x$10577$1&dy4A)
                                                 (g$stx-mark*$7974$1&dy4A
                                                   g$x$10577$1&dy4A)
                                                 (list g$rib$10546$1&dy4A)
                                                 '())))))
                                         g$exp-id*$10544$1&dy4A)
                                       (cons
                                         g$e*$10571$1&dy4A
                                         g$mod**$10566$1&dy4A))))
                                   g$_exp*$10563$1&dy4A
                                   g$kwd*$10562$1&dy4A
                                   g$mod**$10561$1&dy4A
                                   g$rhs*$10560$1&dy4A
                                   g$lex*$10559$1&dy4A
                                   g$mr$10558$1&dy4A
                                   g$r$10557$1&dy4A
                                   g$e*$10556$1&dy4A)))))))))
                      (map (case-lambda
                             ((g$x$10579$1&dy4A)
                              (g$add-subst$7989$1&dy4A
                                g$rib$10546$1&dy4A
                                g$x$10579$1&dy4A)))
                           (g$syntax->list$7998$1&dy4A g$e*$10543$1&dy4A)))))
                  (g$make-empty-rib$7959$1&dy4A))))
              g$e*$10542$1&dy4A
              g$exp-id*$10541$1&dy4A
              g$name$10540$1&dy4A)))))))
   (g$chi-body*$8321$1&dy4A
     g$chi-body*$11812$1&dy4A
     (case-lambda
       ((g$e*$10580$1&dy4A
          g$r$10581$1&dy4A
          g$mr$10582$1&dy4A
          g$lex*$10583$1&dy4A
          g$rhs*$10584$1&dy4A
          g$mod**$10585$1&dy4A
          g$kwd*$10586$1&dy4A
          g$exp*$10587$1&dy4A
          g$rib$10588$1&dy4A
          g$top?$10589$1&dy4A)
        (if (null? g$e*$10580$1&dy4A)
          (values
            g$e*$10580$1&dy4A
            g$r$10581$1&dy4A
            g$mr$10582$1&dy4A
            g$lex*$10583$1&dy4A
            g$rhs*$10584$1&dy4A
            g$mod**$10585$1&dy4A
            g$kwd*$10586$1&dy4A
            g$exp*$10587$1&dy4A)
          ((case-lambda
             ((g$e$10590$1&dy4A)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$8019$1&dy4A
                     g$e$10590$1&dy4A
                     g$r$10581$1&dy4A)))
                (case-lambda
                  ((g$type$10594$1&dy4A g$value$10595$1&dy4A g$kwd$10596$1&dy4A)
                   ((case-lambda
                      ((g$kwd$10597$1&dy4A
                         g$value$10598$1&dy4A
                         g$type$10599$1&dy4A)
                       ((case-lambda
                          ((g$kwd*$10600$1&dy4A)
                           ((case-lambda
                              ((g$t$10601$1&dy4A)
                               (if (g$memv$5717$1&dy4A
                                     g$t$10601$1&dy4A
                                     '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$8217$1&dy4A
                                        g$e$10590$1&dy4A)))
                                   (case-lambda
                                     ((g$id$10604$1&dy4A g$rhs$10605$1&dy4A)
                                      ((case-lambda
                                         ((g$rhs$10606$1&dy4A g$id$10607$1&dy4A)
                                          (begin
                                            (if (g$bound-id-member?$8006$1&dy4A
                                                  g$id$10607$1&dy4A
                                                  g$kwd*$10600$1&dy4A)
                                              (g$syntax-violation$8388$1&dy4A
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10590$1&dy4A)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7942$1&dy4A
                                                   g$id$10607$1&dy4A
                                                   g$rib$10588$1&dy4A)))
                                              (case-lambda
                                                ((g$lab$10610$1&dy4A
                                                   g$lex$10611$1&dy4A)
                                                 ((case-lambda
                                                    ((g$lex$10612$1&dy4A
                                                       g$lab$10613$1&dy4A)
                                                     (begin
                                                       (g$extend-rib!$7962$1&dy4A
                                                         g$rib$10588$1&dy4A
                                                         g$id$10607$1&dy4A
                                                         g$lab$10613$1&dy4A)
                                                       (g$chi-body*$8321$1&dy4A
                                                         (cdr g$e*$10580$1&dy4A)
                                                         (g$add-lexical$8224$1&dy4A
                                                           g$lab$10613$1&dy4A
                                                           g$lex$10612$1&dy4A
                                                           g$r$10581$1&dy4A)
                                                         g$mr$10582$1&dy4A
                                                         (cons
                                                           g$lex$10612$1&dy4A
                                                           g$lex*$10583$1&dy4A)
                                                         (cons
                                                           g$rhs$10606$1&dy4A
                                                           g$rhs*$10584$1&dy4A)
                                                         g$mod**$10585$1&dy4A
                                                         g$kwd*$10600$1&dy4A
                                                         g$exp*$10587$1&dy4A
                                                         g$rib$10588$1&dy4A
                                                         g$top?$10589$1&dy4A))))
                                                  g$lex$10611$1&dy4A
                                                  g$lab$10610$1&dy4A)))))))
                                       g$rhs$10605$1&dy4A
                                       g$id$10604$1&dy4A))))
                                 (if (g$memv$5717$1&dy4A
                                       g$t$10601$1&dy4A
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$8218$1&dy4A
                                          g$e$10590$1&dy4A)))
                                     (case-lambda
                                       ((g$id$10616$1&dy4A g$rhs$10617$1&dy4A)
                                        ((case-lambda
                                           ((g$rhs$10618$1&dy4A
                                              g$id$10619$1&dy4A)
                                            (begin
                                              (if (g$bound-id-member?$8006$1&dy4A
                                                    g$id$10619$1&dy4A
                                                    g$kwd*$10600$1&dy4A)
                                                (g$syntax-violation$8388$1&dy4A
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10590$1&dy4A)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10620$1&dy4A
                                                    g$expanded-rhs$10621$1&dy4A)
                                                  (begin
                                                    (g$extend-rib!$7962$1&dy4A
                                                      g$rib$10588$1&dy4A
                                                      g$id$10619$1&dy4A
                                                      g$lab$10620$1&dy4A)
                                                    ((case-lambda
                                                       ((g$b$10622$1&dy4A)
                                                        (g$chi-body*$8321$1&dy4A
                                                          (cdr g$e*$10580$1&dy4A)
                                                          (cons
                                                            (cons
                                                              g$lab$10620$1&dy4A
                                                              g$b$10622$1&dy4A)
                                                            g$r$10581$1&dy4A)
                                                          (cons
                                                            (cons
                                                              g$lab$10620$1&dy4A
                                                              g$b$10622$1&dy4A)
                                                            g$mr$10582$1&dy4A)
                                                          g$lex*$10583$1&dy4A
                                                          g$rhs*$10584$1&dy4A
                                                          g$mod**$10585$1&dy4A
                                                          g$kwd*$10600$1&dy4A
                                                          g$exp*$10587$1&dy4A
                                                          g$rib$10588$1&dy4A
                                                          g$top?$10589$1&dy4A)))
                                                     (g$make-eval-transformer$8031$1&dy4A
                                                       g$expanded-rhs$10621$1&dy4A)))))
                                               (g$gen-define-label$7943$1&dy4A
                                                 g$id$10619$1&dy4A
                                                 g$rib$10588$1&dy4A)
                                               (g$expand-transformer$8322$1&dy4A
                                                 g$rhs$10618$1&dy4A
                                                 g$mr$10582$1&dy4A)))))
                                         g$rhs$10617$1&dy4A
                                         g$id$10616$1&dy4A))))
                                   (if (g$memv$5717$1&dy4A
                                         g$t$10601$1&dy4A
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10623$1&dy4A)
                                         ((case-lambda
                                            ((g$ls/false$10624$1&dy4A)
                                             (if (if g$ls/false$10624$1&dy4A
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10625$1&dy4A
                                                            g$xrhs*$10626$1&dy4A
                                                            g$xbody*$10627$1&dy4A)
                                                          (if (not (g$valid-bound-ids?$8004$1&dy4A
                                                                     g$xlhs*$10625$1&dy4A))
                                                            (g$syntax-violation$8388$1&dy4A
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10590$1&dy4A)
                                                            (void))))
                                                       g$ls/false$10624$1&dy4A))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10628$1&dy4A
                                                      g$xrhs*$10629$1&dy4A
                                                      g$xbody*$10630$1&dy4A)
                                                    ((case-lambda
                                                       ((g$xlab*$10631$1&dy4A)
                                                        ((case-lambda
                                                           ((g$xrib$10632$1&dy4A)
                                                            ((case-lambda
                                                               ((g$xb*$10633$1&dy4A)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$8321$1&dy4A
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$10634$1&dy4A)
                                                                                (g$add-subst$7989$1&dy4A
                                                                                  g$xrib$10632$1&dy4A
                                                                                  g$x$10634$1&dy4A)))
                                                                             g$xbody*$10630$1&dy4A)
                                                                        (cdr g$e*$10580$1&dy4A))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10631$1&dy4A
                                                                             g$xb*$10633$1&dy4A)
                                                                        g$r$10581$1&dy4A)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10631$1&dy4A
                                                                             g$xb*$10633$1&dy4A)
                                                                        g$mr$10582$1&dy4A)
                                                                      g$lex*$10583$1&dy4A
                                                                      g$rhs*$10584$1&dy4A
                                                                      g$mod**$10585$1&dy4A
                                                                      g$kwd*$10600$1&dy4A
                                                                      g$exp*$10587$1&dy4A
                                                                      g$rib$10588$1&dy4A
                                                                      g$top?$10589$1&dy4A))))))
                                                             (map (case-lambda
                                                                    ((g$x$10635$1&dy4A)
                                                                     (g$make-eval-transformer$8031$1&dy4A
                                                                       (g$expand-transformer$8322$1&dy4A
                                                                         (if (eq? g$type$10599$1&dy4A
                                                                                  'let-syntax)
                                                                           g$x$10635$1&dy4A
                                                                           (g$add-subst$7989$1&dy4A
                                                                             g$xrib$10632$1&dy4A
                                                                             g$x$10635$1&dy4A))
                                                                         g$mr$10582$1&dy4A))))
                                                                  g$xrhs*$10629$1&dy4A))))
                                                         (g$make-full-rib$7967$1&dy4A
                                                           g$xlhs*$10628$1&dy4A
                                                           g$xlab*$10631$1&dy4A))))
                                                     (map g$gen-label$7940$1&dy4A
                                                          g$xlhs*$10628$1&dy4A))))
                                                 g$ls/false$10624$1&dy4A)
                                               (g$syntax-violation$8388$1&dy4A
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10623$1&dy4A))))
                                          (g$syntax-dispatch$8277$1&dy4A
                                            g$t$10623$1&dy4A
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10590$1&dy4A)
                                     (if (g$memv$5717$1&dy4A
                                           g$t$10601$1&dy4A
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$10636$1&dy4A)
                                           ((case-lambda
                                              ((g$ls/false$10637$1&dy4A)
                                               (if g$ls/false$10637$1&dy4A
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10638$1&dy4A)
                                                      (g$chi-body*$8321$1&dy4A
                                                        (append
                                                          g$x*$10638$1&dy4A
                                                          (cdr g$e*$10580$1&dy4A))
                                                        g$r$10581$1&dy4A
                                                        g$mr$10582$1&dy4A
                                                        g$lex*$10583$1&dy4A
                                                        g$rhs*$10584$1&dy4A
                                                        g$mod**$10585$1&dy4A
                                                        g$kwd*$10600$1&dy4A
                                                        g$exp*$10587$1&dy4A
                                                        g$rib$10588$1&dy4A
                                                        g$top?$10589$1&dy4A)))
                                                   g$ls/false$10637$1&dy4A)
                                                 (g$syntax-violation$8388$1&dy4A
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10636$1&dy4A))))
                                            (g$syntax-dispatch$8277$1&dy4A
                                              g$t$10636$1&dy4A
                                              '(_ . each-any)))))
                                        g$e$10590$1&dy4A)
                                       (if (g$memv$5717$1&dy4A
                                             g$t$10601$1&dy4A
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8321$1&dy4A
                                           (cons
                                             (g$add-subst$7989$1&dy4A
                                               g$rib$10588$1&dy4A
                                               (g$chi-global-macro$8292$1&dy4A
                                                 g$value$10598$1&dy4A
                                                 g$e$10590$1&dy4A))
                                             (cdr g$e*$10580$1&dy4A))
                                           g$r$10581$1&dy4A
                                           g$mr$10582$1&dy4A
                                           g$lex*$10583$1&dy4A
                                           g$rhs*$10584$1&dy4A
                                           g$mod**$10585$1&dy4A
                                           g$kwd*$10600$1&dy4A
                                           g$exp*$10587$1&dy4A
                                           g$rib$10588$1&dy4A
                                           g$top?$10589$1&dy4A)
                                         (if (g$memv$5717$1&dy4A
                                               g$t$10601$1&dy4A
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8321$1&dy4A
                                             (cons
                                               (g$add-subst$7989$1&dy4A
                                                 g$rib$10588$1&dy4A
                                                 (g$chi-local-macro$8291$1&dy4A
                                                   g$value$10598$1&dy4A
                                                   g$e$10590$1&dy4A))
                                               (cdr g$e*$10580$1&dy4A))
                                             g$r$10581$1&dy4A
                                             g$mr$10582$1&dy4A
                                             g$lex*$10583$1&dy4A
                                             g$rhs*$10584$1&dy4A
                                             g$mod**$10585$1&dy4A
                                             g$kwd*$10600$1&dy4A
                                             g$exp*$10587$1&dy4A
                                             g$rib$10588$1&dy4A
                                             g$top?$10589$1&dy4A)
                                           (if (g$memv$5717$1&dy4A
                                                 g$t$10601$1&dy4A
                                                 '(macro macro!))
                                             (g$chi-body*$8321$1&dy4A
                                               (cons
                                                 (g$add-subst$7989$1&dy4A
                                                   g$rib$10588$1&dy4A
                                                   (g$chi-macro$8290$1&dy4A
                                                     g$value$10598$1&dy4A
                                                     g$e$10590$1&dy4A))
                                                 (cdr g$e*$10580$1&dy4A))
                                               g$r$10581$1&dy4A
                                               g$mr$10582$1&dy4A
                                               g$lex*$10583$1&dy4A
                                               g$rhs*$10584$1&dy4A
                                               g$mod**$10585$1&dy4A
                                               g$kwd*$10600$1&dy4A
                                               g$exp*$10587$1&dy4A
                                               g$rib$10588$1&dy4A
                                               g$top?$10589$1&dy4A)
                                             (if (g$memv$5717$1&dy4A
                                                   g$t$10601$1&dy4A
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8320$1&dy4A
                                                      g$e$10590$1&dy4A
                                                      g$r$10581$1&dy4A
                                                      g$mr$10582$1&dy4A
                                                      g$lex*$10583$1&dy4A
                                                      g$rhs*$10584$1&dy4A
                                                      g$mod**$10585$1&dy4A
                                                      g$kwd*$10600$1&dy4A)))
                                                 (case-lambda
                                                   ((g$lex*$10647$1&dy4A
                                                      g$rhs*$10648$1&dy4A
                                                      g$m-exp-id*$10649$1&dy4A
                                                      g$m-exp-lab*$10650$1&dy4A
                                                      g$r$10651$1&dy4A
                                                      g$mr$10652$1&dy4A
                                                      g$mod**$10653$1&dy4A
                                                      g$kwd*$10654$1&dy4A)
                                                    ((case-lambda
                                                       ((g$kwd*$10655$1&dy4A
                                                          g$mod**$10656$1&dy4A
                                                          g$mr$10657$1&dy4A
                                                          g$r$10658$1&dy4A
                                                          g$m-exp-lab*$10659$1&dy4A
                                                          g$m-exp-id*$10660$1&dy4A
                                                          g$rhs*$10661$1&dy4A
                                                          g$lex*$10662$1&dy4A)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10663$1&dy4A
                                                                 g$lab$10664$1&dy4A)
                                                               (g$extend-rib!$7962$1&dy4A
                                                                 g$rib$10588$1&dy4A
                                                                 g$id$10663$1&dy4A
                                                                 g$lab$10664$1&dy4A)))
                                                            g$m-exp-id*$10660$1&dy4A
                                                            g$m-exp-lab*$10659$1&dy4A)
                                                          (g$chi-body*$8321$1&dy4A
                                                            (cdr g$e*$10580$1&dy4A)
                                                            g$r$10658$1&dy4A
                                                            g$mr$10657$1&dy4A
                                                            g$lex*$10662$1&dy4A
                                                            g$rhs*$10661$1&dy4A
                                                            g$mod**$10656$1&dy4A
                                                            g$kwd*$10655$1&dy4A
                                                            g$exp*$10587$1&dy4A
                                                            g$rib$10588$1&dy4A
                                                            g$top?$10589$1&dy4A))))
                                                     g$kwd*$10654$1&dy4A
                                                     g$mod**$10653$1&dy4A
                                                     g$mr$10652$1&dy4A
                                                     g$r$10651$1&dy4A
                                                     g$m-exp-lab*$10650$1&dy4A
                                                     g$m-exp-id*$10649$1&dy4A
                                                     g$rhs*$10648$1&dy4A
                                                     g$lex*$10647$1&dy4A))))
                                               (if (g$memv$5717$1&dy4A
                                                     g$t$10601$1&dy4A
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$8372$1&dy4A
                                                     (g$stx->datum$8010$1&dy4A
                                                       g$e$10590$1&dy4A))
                                                   (g$chi-body*$8321$1&dy4A
                                                     (cdr g$e*$10580$1&dy4A)
                                                     g$r$10581$1&dy4A
                                                     g$mr$10582$1&dy4A
                                                     g$lex*$10583$1&dy4A
                                                     g$rhs*$10584$1&dy4A
                                                     g$mod**$10585$1&dy4A
                                                     g$kwd*$10600$1&dy4A
                                                     g$exp*$10587$1&dy4A
                                                     g$rib$10588$1&dy4A
                                                     g$top?$10589$1&dy4A))
                                                 (if (g$memv$5717$1&dy4A
                                                       g$t$10601$1&dy4A
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$10665$1&dy4A)
                                                       ((case-lambda
                                                          ((g$ls/false$10666$1&dy4A)
                                                           (if g$ls/false$10666$1&dy4A
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$10667$1&dy4A)
                                                                  (g$chi-body*$8321$1&dy4A
                                                                    (cdr g$e*$10580$1&dy4A)
                                                                    g$r$10581$1&dy4A
                                                                    g$mr$10582$1&dy4A
                                                                    g$lex*$10583$1&dy4A
                                                                    g$rhs*$10584$1&dy4A
                                                                    g$mod**$10585$1&dy4A
                                                                    g$kwd*$10600$1&dy4A
                                                                    (append
                                                                      g$exp-decl*$10667$1&dy4A
                                                                      g$exp*$10587$1&dy4A)
                                                                    g$rib$10588$1&dy4A
                                                                    g$top?$10589$1&dy4A)))
                                                               g$ls/false$10666$1&dy4A)
                                                             (g$syntax-violation$8388$1&dy4A
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$10665$1&dy4A))))
                                                        (g$syntax-dispatch$8277$1&dy4A
                                                          g$t$10665$1&dy4A
                                                          '(_ . each-any)))))
                                                    g$e$10590$1&dy4A)
                                                   (if (g$memv$5717$1&dy4A
                                                         g$t$10601$1&dy4A
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10668$1&dy4A
                                                                     (case-lambda
                                                                       ((g$e$10710$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$t$10711$1&dy4A)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10712$1&dy4A)
                                                                                (if (if g$ls/false$10712$1&dy4A
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10713$1&dy4A)
                                                                                             (g$id?$7999$1&dy4A
                                                                                               g$id$10713$1&dy4A)))
                                                                                          g$ls/false$10712$1&dy4A))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10714$1&dy4A)
                                                                                       '#t))
                                                                                    g$ls/false$10712$1&dy4A)
                                                                                  ((case-lambda
                                                                                     ((g$t$10715$1&dy4A)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10716$1&dy4A)
                                                                                          (if g$ls/false$10716$1&dy4A
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10717$1&dy4A)
                                                                                                 '#f))
                                                                                              g$ls/false$10716$1&dy4A)
                                                                                            ((case-lambda
                                                                                               ((g$t$10718$1&dy4A)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10719$1&dy4A)
                                                                                                    (if g$ls/false$10719$1&dy4A
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8388$1&dy4A
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10710$1&dy4A)))
                                                                                                        g$ls/false$10719$1&dy4A)
                                                                                                      (g$syntax-violation$8388$1&dy4A
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10718$1&dy4A))))
                                                                                                 (g$syntax-dispatch$8277$1&dy4A
                                                                                                   g$t$10718$1&dy4A
                                                                                                   '_))))
                                                                                             g$t$10715$1&dy4A))))
                                                                                       (g$syntax-dispatch$8277$1&dy4A
                                                                                         g$t$10715$1&dy4A
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10711$1&dy4A))))
                                                                             (g$syntax-dispatch$8277$1&dy4A
                                                                               g$t$10711$1&dy4A
                                                                               '(_ any)))))
                                                                         g$e$10710$1&dy4A))))
                                                                   (g$module-import$10669$1&dy4A
                                                                     (case-lambda
                                                                       ((g$e$10693$1&dy4A
                                                                          g$r$10694$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$t$10695$1&dy4A)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10696$1&dy4A)
                                                                                (if (if g$ls/false$10696$1&dy4A
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10697$1&dy4A)
                                                                                             (g$id?$7999$1&dy4A
                                                                                               g$id$10697$1&dy4A)))
                                                                                          g$ls/false$10696$1&dy4A))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10698$1&dy4A)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$8019$1&dy4A
                                                                                              g$id$10698$1&dy4A
                                                                                              g$r$10694$1&dy4A)))
                                                                                         (case-lambda
                                                                                           ((g$type$10702$1&dy4A
                                                                                              g$value$10703$1&dy4A
                                                                                              g$kwd$10704$1&dy4A)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10705$1&dy4A
                                                                                                  g$value$10706$1&dy4A
                                                                                                  g$type$10707$1&dy4A)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10708$1&dy4A)
                                                                                                    (if (g$memv$5717$1&dy4A
                                                                                                          g$t$10708$1&dy4A
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10709$1&dy4A)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8319$1&dy4A
                                                                                                              g$iface$10709$1&dy4A
                                                                                                              g$id$10698$1&dy4A)
                                                                                                            (g$module-interface-exp-lab-vec$8315$1&dy4A
                                                                                                              g$iface$10709$1&dy4A))))
                                                                                                       g$value$10706$1&dy4A)
                                                                                                      (g$syntax-violation$8388$1&dy4A
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10693$1&dy4A))))
                                                                                                 g$type$10707$1&dy4A)))
                                                                                             g$kwd$10704$1&dy4A
                                                                                             g$value$10703$1&dy4A
                                                                                             g$type$10702$1&dy4A))))))
                                                                                    g$ls/false$10696$1&dy4A)
                                                                                  (g$syntax-violation$8388$1&dy4A
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10695$1&dy4A))))
                                                                             (g$syntax-dispatch$8277$1&dy4A
                                                                               g$t$10695$1&dy4A
                                                                               '(_ any)))))
                                                                         g$e$10693$1&dy4A))))
                                                                   (g$library-import$10670$1&dy4A
                                                                     (case-lambda
                                                                       ((g$e$10679$1&dy4A)
                                                                        ((case-lambda
                                                                           ((g$t$10680$1&dy4A)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10681$1&dy4A)
                                                                                (if g$ls/false$10681$1&dy4A
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10682$1&dy4A
                                                                                         g$imp*$10683$1&dy4A)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8326$1&dy4A
                                                                                              (g$syntax->datum$8391$1&dy4A
                                                                                                g$imp*$10683$1&dy4A))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10686$1&dy4A
                                                                                              g$subst-labels$10687$1&dy4A)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10688$1&dy4A
                                                                                                  g$subst-names$10689$1&dy4A)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10690$1&dy4A)
                                                                                                       (g$datum->stx$7982$1&dy4A
                                                                                                         g$ctxt$10682$1&dy4A
                                                                                                         g$name$10690$1&dy4A)))
                                                                                                    g$subst-names$10689$1&dy4A)
                                                                                                  g$subst-labels$10688$1&dy4A)))
                                                                                             g$subst-labels$10687$1&dy4A
                                                                                             g$subst-names$10686$1&dy4A))))))
                                                                                    g$ls/false$10681$1&dy4A)
                                                                                  ((case-lambda
                                                                                     ((g$t$10691$1&dy4A)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10692$1&dy4A)
                                                                                          (if g$ls/false$10692$1&dy4A
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8388$1&dy4A
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10679$1&dy4A)))
                                                                                              g$ls/false$10692$1&dy4A)
                                                                                            (g$syntax-violation$8388$1&dy4A
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10691$1&dy4A))))
                                                                                       (g$syntax-dispatch$8277$1&dy4A
                                                                                         g$t$10691$1&dy4A
                                                                                         '_))))
                                                                                   g$t$10680$1&dy4A))))
                                                                             (g$syntax-dispatch$8277$1&dy4A
                                                                               g$t$10680$1&dy4A
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10679$1&dy4A)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$10668$1&dy4A
                                                                        g$e$10590$1&dy4A)
                                                                    (g$module-import$10669$1&dy4A
                                                                      g$e$10590$1&dy4A
                                                                      g$r$10581$1&dy4A)
                                                                    (g$library-import$10670$1&dy4A
                                                                      g$e$10590$1&dy4A))))
                                                               (case-lambda
                                                                 ((g$id*$10673$1&dy4A
                                                                    g$lab*$10674$1&dy4A)
                                                                  ((case-lambda
                                                                     ((g$lab*$10675$1&dy4A
                                                                        g$id*$10676$1&dy4A)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$10677$1&dy4A
                                                                             g$lab$10678$1&dy4A)
                                                                           (g$extend-rib!$7962$1&dy4A
                                                                             g$rib$10588$1&dy4A
                                                                             g$id$10677$1&dy4A
                                                                             g$lab$10678$1&dy4A)))
                                                                        g$id*$10676$1&dy4A
                                                                        g$lab*$10675$1&dy4A)))
                                                                   g$lab*$10674$1&dy4A
                                                                   g$id*$10673$1&dy4A))))
                                                             (g$chi-body*$8321$1&dy4A
                                                               (cdr g$e*$10580$1&dy4A)
                                                               g$r$10581$1&dy4A
                                                               g$mr$10582$1&dy4A
                                                               g$lex*$10583$1&dy4A
                                                               g$rhs*$10584$1&dy4A
                                                               g$mod**$10585$1&dy4A
                                                               g$kwd*$10600$1&dy4A
                                                               g$exp*$10587$1&dy4A
                                                               g$rib$10588$1&dy4A
                                                               g$top?$10589$1&dy4A))))))
                                                     (if g$top?$10589$1&dy4A
                                                       (g$chi-body*$8321$1&dy4A
                                                         (cdr g$e*$10580$1&dy4A)
                                                         g$r$10581$1&dy4A
                                                         g$mr$10582$1&dy4A
                                                         (cons
                                                           (g$gen-lexical$7938$1&dy4A
                                                             'dummy)
                                                           g$lex*$10583$1&dy4A)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$10590$1&dy4A)
                                                           g$rhs*$10584$1&dy4A)
                                                         g$mod**$10585$1&dy4A
                                                         g$kwd*$10600$1&dy4A
                                                         g$exp*$10587$1&dy4A
                                                         g$rib$10588$1&dy4A
                                                         g$top?$10589$1&dy4A)
                                                       (values
                                                         g$e*$10580$1&dy4A
                                                         g$r$10581$1&dy4A
                                                         g$mr$10582$1&dy4A
                                                         g$lex*$10583$1&dy4A
                                                         g$rhs*$10584$1&dy4A
                                                         g$mod**$10585$1&dy4A
                                                         g$kwd*$10600$1&dy4A
                                                         g$exp*$10587$1&dy4A)))))))))))))))
                            g$type$10599$1&dy4A)))
                        (if (g$id?$7999$1&dy4A g$kwd$10597$1&dy4A)
                          (cons g$kwd$10597$1&dy4A g$kwd*$10586$1&dy4A)
                          g$kwd*$10586$1&dy4A))))
                    g$kwd$10596$1&dy4A
                    g$value$10595$1&dy4A
                    g$type$10594$1&dy4A))))))
           (car g$e*$10580$1&dy4A))))))
   (g$expand-transformer$8322$1&dy4A
     g$expand-transformer$11813$1&dy4A
     (case-lambda
       ((g$expr$10720$1&dy4A g$r$10721$1&dy4A)
        ((case-lambda
           ((g$rtc$10722$1&dy4A)
            ((case-lambda
               ((g$expanded-rhs$10723$1&dy4A)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10724$1&dy4A)
                        (case-lambda
                          ((g$x$10725$1&dy4A)
                           (begin
                             (g$invoke-library$7809$1&dy4A g$x$10725$1&dy4A)
                             (g$mark-visit$10724$1&dy4A g$x$10725$1&dy4A))))))
                     (g$vis-collector$8330$1&dy4A))
                    (g$rtc$10722$1&dy4A))
                  g$expanded-rhs$10723$1&dy4A)))
             ((case-lambda
                ((g$inv-collector$10730$1&dy4A
                   g$vis-collector$10731$1&dy4A
                   g$inv-collector$10732$1&dy4A
                   g$vis-collector$10733$1&dy4A)
                 ((case-lambda
                    ((g$swap$10734$1&dy4A)
                     (dynamic-wind
                       g$swap$10734$1&dy4A
                       (case-lambda
                         (()
                          (g$chi-expr$8295$1&dy4A
                            g$expr$10720$1&dy4A
                            g$r$10721$1&dy4A
                            g$r$10721$1&dy4A)))
                       g$swap$10734$1&dy4A)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10735$1&dy4A)
                           (begin
                             (g$inv-collector$10730$1&dy4A
                               g$inv-collector$10732$1&dy4A)
                             (set! g$inv-collector$10732$1&dy4A
                               g$t$10735$1&dy4A))))
                        (g$inv-collector$10730$1&dy4A))
                       ((case-lambda
                          ((g$t$10736$1&dy4A)
                           (begin
                             (g$vis-collector$10731$1&dy4A
                               g$vis-collector$10733$1&dy4A)
                             (set! g$vis-collector$10733$1&dy4A
                               g$t$10736$1&dy4A))))
                        (g$vis-collector$10731$1&dy4A))))))))
              g$inv-collector$8329$1&dy4A
              g$vis-collector$8330$1&dy4A
              g$rtc$10722$1&dy4A
              (case-lambda ((g$x$10737$1&dy4A) (values)))))))
         (g$make-collector$8328$1&dy4A)))))
   (g$parse-exports$8323$1&dy4A
     g$parse-exports$11814$1&dy4A
     (case-lambda
       ((g$exp*$10738$1&dy4A)
        ((letrec ((g$f$10739$1&dy4A
                    (case-lambda
                      ((g$exp*$10740$1&dy4A
                         g$int*$10741$1&dy4A
                         g$ext*$10742$1&dy4A)
                       (if (null? g$exp*$10740$1&dy4A)
                         (begin
                           (if (not (g$valid-bound-ids?$8004$1&dy4A
                                      g$ext*$10742$1&dy4A))
                             (g$syntax-violation$8388$1&dy4A
                               'export
                               '"invalid exports"
                               (g$find-dups$8305$1&dy4A g$ext*$10742$1&dy4A))
                             (void))
                           (values
                             (map g$syntax->datum$8391$1&dy4A
                                  g$ext*$10742$1&dy4A)
                             g$int*$10741$1&dy4A))
                         ((case-lambda
                            ((g$t$10743$1&dy4A)
                             ((case-lambda
                                ((g$ls/false$10744$1&dy4A)
                                 (if g$ls/false$10744$1&dy4A
                                   (apply
                                     (case-lambda
                                       ((g$rename$10745$1&dy4A
                                          g$i*$10746$1&dy4A
                                          g$e*$10747$1&dy4A)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$8391$1&dy4A
                                                              g$rename$10745$1&dy4A)
                                                            'rename)
                                                     (if (g$for-all$5722$1&dy4A
                                                           g$id?$7999$1&dy4A
                                                           g$i*$10746$1&dy4A)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5722$1&dy4A
                                                           g$id?$7999$1&dy4A
                                                           g$e*$10747$1&dy4A))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$8388$1&dy4A
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$10740$1&dy4A))
                                            (void))
                                          (g$f$10739$1&dy4A
                                            (cdr g$exp*$10740$1&dy4A)
                                            (append
                                              g$i*$10746$1&dy4A
                                              g$int*$10741$1&dy4A)
                                            (append
                                              g$e*$10747$1&dy4A
                                              g$ext*$10742$1&dy4A)))))
                                     g$ls/false$10744$1&dy4A)
                                   ((case-lambda
                                      ((g$t$10748$1&dy4A)
                                       ((case-lambda
                                          ((g$ls/false$10749$1&dy4A)
                                           (if g$ls/false$10749$1&dy4A
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10750$1&dy4A)
                                                  (begin
                                                    (if (not (g$id?$7999$1&dy4A
                                                               g$ie$10750$1&dy4A))
                                                      (g$syntax-violation$8388$1&dy4A
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10750$1&dy4A)
                                                      (void))
                                                    (g$f$10739$1&dy4A
                                                      (cdr g$exp*$10740$1&dy4A)
                                                      (cons
                                                        g$ie$10750$1&dy4A
                                                        g$int*$10741$1&dy4A)
                                                      (cons
                                                        g$ie$10750$1&dy4A
                                                        g$ext*$10742$1&dy4A)))))
                                               g$ls/false$10749$1&dy4A)
                                             (g$syntax-violation$8388$1&dy4A
                                               '#f
                                               '"invalid syntax"
                                               g$t$10748$1&dy4A))))
                                        (g$syntax-dispatch$8277$1&dy4A
                                          g$t$10748$1&dy4A
                                          'any))))
                                    g$t$10743$1&dy4A))))
                              (g$syntax-dispatch$8277$1&dy4A
                                g$t$10743$1&dy4A
                                '(any . #(each (any any)))))))
                          (car g$exp*$10740$1&dy4A)))))))
           g$f$10739$1&dy4A)
         g$exp*$10738$1&dy4A
         '()
         '()))))
   (g$parse-library-name$8324$1&dy4A
     g$parse-library-name$11815$1&dy4A
     (case-lambda
       ((g$spec$10751$1&dy4A)
        (letrec* ((g$parse$10752$1&dy4A
                    (case-lambda
                      ((g$x$10759$1&dy4A)
                       ((case-lambda
                          ((g$t$10760$1&dy4A)
                           ((case-lambda
                              ((g$ls/false$10761$1&dy4A)
                               (if (if g$ls/false$10761$1&dy4A
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10762$1&dy4A)
                                            (g$for-all$5722$1&dy4A
                                              (case-lambda
                                                ((g$x$10763$1&dy4A)
                                                 ((case-lambda
                                                    ((g$x$10764$1&dy4A)
                                                     (if (integer?
                                                           g$x$10764$1&dy4A)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10764$1&dy4A))
                                                       '#f)))
                                                  (g$syntax->datum$8391$1&dy4A
                                                    g$x$10763$1&dy4A))))
                                              g$v*$10762$1&dy4A)))
                                         g$ls/false$10761$1&dy4A))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10765$1&dy4A)
                                      (values
                                        '()
                                        (map g$syntax->datum$8391$1&dy4A
                                             g$v*$10765$1&dy4A))))
                                   g$ls/false$10761$1&dy4A)
                                 ((case-lambda
                                    ((g$t$10766$1&dy4A)
                                     ((case-lambda
                                        ((g$ls/false$10767$1&dy4A)
                                         (if (if g$ls/false$10767$1&dy4A
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10768$1&dy4A
                                                        g$rest$10769$1&dy4A)
                                                      (symbol?
                                                        (g$syntax->datum$8391$1&dy4A
                                                          g$x$10768$1&dy4A))))
                                                   g$ls/false$10767$1&dy4A))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10770$1&dy4A
                                                  g$rest$10771$1&dy4A)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10752$1&dy4A
                                                       g$rest$10771$1&dy4A)))
                                                  (case-lambda
                                                    ((g$x*$10774$1&dy4A
                                                       g$v*$10775$1&dy4A)
                                                     ((case-lambda
                                                        ((g$v*$10776$1&dy4A
                                                           g$x*$10777$1&dy4A)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8391$1&dy4A
                                                               g$x$10770$1&dy4A)
                                                             g$x*$10777$1&dy4A)
                                                           g$v*$10776$1&dy4A)))
                                                      g$v*$10775$1&dy4A
                                                      g$x*$10774$1&dy4A))))))
                                             g$ls/false$10767$1&dy4A)
                                           ((case-lambda
                                              ((g$t$10778$1&dy4A)
                                               ((case-lambda
                                                  ((g$ls/false$10779$1&dy4A)
                                                   (if g$ls/false$10779$1&dy4A
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10779$1&dy4A)
                                                     ((case-lambda
                                                        ((g$t$10780$1&dy4A)
                                                         ((case-lambda
                                                            ((g$ls/false$10781$1&dy4A)
                                                             (if g$ls/false$10781$1&dy4A
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8388$1&dy4A
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10751$1&dy4A)))
                                                                 g$ls/false$10781$1&dy4A)
                                                               (g$syntax-violation$8388$1&dy4A
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10780$1&dy4A))))
                                                          (g$syntax-dispatch$8277$1&dy4A
                                                            g$t$10780$1&dy4A
                                                            '_))))
                                                      g$t$10778$1&dy4A))))
                                                (g$syntax-dispatch$8277$1&dy4A
                                                  g$t$10778$1&dy4A
                                                  '()))))
                                            g$t$10766$1&dy4A))))
                                      (g$syntax-dispatch$8277$1&dy4A
                                        g$t$10766$1&dy4A
                                        '(any . any)))))
                                  g$t$10760$1&dy4A))))
                            (g$syntax-dispatch$8277$1&dy4A
                              g$t$10760$1&dy4A
                              '(each-any)))))
                        g$x$10759$1&dy4A)))))
          (call-with-values
            (case-lambda (() (g$parse$10752$1&dy4A g$spec$10751$1&dy4A)))
            (case-lambda
              ((g$name*$10755$1&dy4A g$ver*$10756$1&dy4A)
               ((case-lambda
                  ((g$ver*$10757$1&dy4A g$name*$10758$1&dy4A)
                   (begin
                     (if (null? g$name*$10758$1&dy4A)
                       (g$syntax-violation$8388$1&dy4A
                         '#f
                         '"empty library name"
                         g$spec$10751$1&dy4A)
                       (void))
                     (values g$name*$10758$1&dy4A g$ver*$10757$1&dy4A))))
                g$ver*$10756$1&dy4A
                g$name*$10755$1&dy4A))))))))
   (g$parse-library$8325$1&dy4A
     g$parse-library$11816$1&dy4A
     (case-lambda
       ((g$e$10782$1&dy4A)
        ((case-lambda
           ((g$t$10783$1&dy4A)
            ((case-lambda
               ((g$ls/false$10784$1&dy4A)
                (if (if g$ls/false$10784$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10785$1&dy4A
                               g$name*$10786$1&dy4A
                               g$export$10787$1&dy4A
                               g$exp*$10788$1&dy4A
                               g$import$10789$1&dy4A
                               g$imp*$10790$1&dy4A
                               g$b*$10791$1&dy4A)
                             (if (eq? (g$syntax->datum$8391$1&dy4A
                                        g$export$10787$1&dy4A)
                                      'export)
                               (if (eq? (g$syntax->datum$8391$1&dy4A
                                          g$import$10789$1&dy4A)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8391$1&dy4A
                                          g$library$10785$1&dy4A)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10784$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10792$1&dy4A
                         g$name*$10793$1&dy4A
                         g$export$10794$1&dy4A
                         g$exp*$10795$1&dy4A
                         g$import$10796$1&dy4A
                         g$imp*$10797$1&dy4A
                         g$b*$10798$1&dy4A)
                       (values
                         g$name*$10793$1&dy4A
                         g$exp*$10795$1&dy4A
                         g$imp*$10797$1&dy4A
                         g$b*$10798$1&dy4A)))
                    g$ls/false$10784$1&dy4A)
                  ((case-lambda
                     ((g$t$10799$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$10800$1&dy4A)
                          (if g$ls/false$10800$1&dy4A
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8388$1&dy4A
                                   '#f
                                   '"malformed library"
                                   g$e$10782$1&dy4A)))
                              g$ls/false$10800$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$10799$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A g$t$10799$1&dy4A '_))))
                   g$t$10783$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$10783$1&dy4A
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10782$1&dy4A))))
   (g$parse-import-spec*$8326$1&dy4A
     g$parse-import-spec*$11817$1&dy4A
     ((case-lambda
        (()
         (letrec* ((g$idsyn?$10801$1&dy4A
                     (case-lambda
                       ((g$x$11062$1&dy4A)
                        (symbol?
                          (g$syntax->datum$8391$1&dy4A g$x$11062$1&dy4A)))))
                   (g$dup-error$10802$1&dy4A
                     (case-lambda
                       ((g$name$11061$1&dy4A)
                        (g$syntax-violation$8388$1&dy4A
                          'import
                          '"two imports with different bindings"
                          g$name$11061$1&dy4A))))
                   (g$merge-substs$10803$1&dy4A
                     (case-lambda
                       ((g$s$11052$1&dy4A g$subst$11053$1&dy4A)
                        (letrec* ((g$insert-to-subst$11054$1&dy4A
                                    (case-lambda
                                      ((g$a$11055$1&dy4A g$subst$11056$1&dy4A)
                                       ((case-lambda
                                          ((g$name$11057$1&dy4A
                                             g$label$11058$1&dy4A)
                                           ((case-lambda
                                              ((g$t$11059$1&dy4A)
                                               (if g$t$11059$1&dy4A
                                                 ((case-lambda
                                                    ((g$x$11060$1&dy4A)
                                                     (if (eq? (cdr g$x$11060$1&dy4A)
                                                              g$label$11058$1&dy4A)
                                                       g$subst$11056$1&dy4A
                                                       (g$dup-error$10802$1&dy4A
                                                         g$name$11057$1&dy4A))))
                                                  g$t$11059$1&dy4A)
                                                 (cons
                                                   g$a$11055$1&dy4A
                                                   g$subst$11056$1&dy4A))))
                                            (g$assq$5712$1&dy4A
                                              g$name$11057$1&dy4A
                                              g$subst$11056$1&dy4A))))
                                        (car g$a$11055$1&dy4A)
                                        (cdr g$a$11055$1&dy4A))))))
                          (if (null? g$s$11052$1&dy4A)
                            g$subst$11053$1&dy4A
                            (g$insert-to-subst$11054$1&dy4A
                              (car g$s$11052$1&dy4A)
                              (g$merge-substs$10803$1&dy4A
                                (cdr g$s$11052$1&dy4A)
                                g$subst$11053$1&dy4A)))))))
                   (g$exclude*$10804$1&dy4A
                     (case-lambda
                       ((g$sym*$11028$1&dy4A g$subst$11029$1&dy4A)
                        (letrec* ((g$exclude$11030$1&dy4A
                                    (case-lambda
                                      ((g$sym$11043$1&dy4A g$subst$11044$1&dy4A)
                                       (if (null? g$subst$11044$1&dy4A)
                                         (g$syntax-violation$8388$1&dy4A
                                           'import
                                           '"cannot rename unbound identifier"
                                           g$sym$11043$1&dy4A)
                                         (if (eq? g$sym$11043$1&dy4A
                                                  (g$caar$5885$1&dy4A
                                                    g$subst$11044$1&dy4A))
                                           (values
                                             (g$cdar$5887$1&dy4A
                                               g$subst$11044$1&dy4A)
                                             (cdr g$subst$11044$1&dy4A))
                                           ((case-lambda
                                              ((g$a$11045$1&dy4A)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$exclude$11030$1&dy4A
                                                      g$sym$11043$1&dy4A
                                                      (cdr g$subst$11044$1&dy4A))))
                                                 (case-lambda
                                                   ((g$old$11048$1&dy4A
                                                      g$subst$11049$1&dy4A)
                                                    ((case-lambda
                                                       ((g$subst$11050$1&dy4A
                                                          g$old$11051$1&dy4A)
                                                        (values
                                                          g$old$11051$1&dy4A
                                                          (cons
                                                            g$a$11045$1&dy4A
                                                            g$subst$11050$1&dy4A))))
                                                     g$subst$11049$1&dy4A
                                                     g$old$11048$1&dy4A))))))
                                            (car g$subst$11044$1&dy4A))))))))
                          (if (null? g$sym*$11028$1&dy4A)
                            (values '() g$subst$11029$1&dy4A)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$exclude$11030$1&dy4A
                                   (car g$sym*$11028$1&dy4A)
                                   g$subst$11029$1&dy4A)))
                              (case-lambda
                                ((g$old$11033$1&dy4A g$subst$11034$1&dy4A)
                                 ((case-lambda
                                    ((g$subst$11035$1&dy4A g$old$11036$1&dy4A)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$exclude*$10804$1&dy4A
                                            (cdr g$sym*$11028$1&dy4A)
                                            g$subst$11035$1&dy4A)))
                                       (case-lambda
                                         ((g$old*$11039$1&dy4A
                                            g$subst$11040$1&dy4A)
                                          ((case-lambda
                                             ((g$subst$11041$1&dy4A
                                                g$old*$11042$1&dy4A)
                                              (values
                                                (cons
                                                  g$old$11036$1&dy4A
                                                  g$old*$11042$1&dy4A)
                                                g$subst$11041$1&dy4A)))
                                           g$subst$11040$1&dy4A
                                           g$old*$11039$1&dy4A))))))
                                  g$subst$11034$1&dy4A
                                  g$old$11033$1&dy4A)))))))))
                   (g$find*$10805$1&dy4A
                     (case-lambda
                       ((g$sym*$11024$1&dy4A g$subst$11025$1&dy4A)
                        (map (case-lambda
                               ((g$x$11026$1&dy4A)
                                ((case-lambda
                                   ((g$t$11027$1&dy4A)
                                    (if g$t$11027$1&dy4A
                                      (cdr g$t$11027$1&dy4A)
                                      (g$syntax-violation$8388$1&dy4A
                                        'import
                                        '"cannot find identifier"
                                        g$x$11026$1&dy4A))))
                                 (g$assq$5712$1&dy4A
                                   g$x$11026$1&dy4A
                                   g$subst$11025$1&dy4A))))
                             g$sym*$11024$1&dy4A))))
                   (g$rem*$10806$1&dy4A
                     (case-lambda
                       ((g$sym*$11020$1&dy4A g$subst$11021$1&dy4A)
                        ((letrec ((g$f$11022$1&dy4A
                                    (case-lambda
                                      ((g$subst$11023$1&dy4A)
                                       (if (null? g$subst$11023$1&dy4A)
                                         '()
                                         (if (g$memq$5716$1&dy4A
                                               (g$caar$5885$1&dy4A
                                                 g$subst$11023$1&dy4A)
                                               g$sym*$11020$1&dy4A)
                                           (g$f$11022$1&dy4A
                                             (cdr g$subst$11023$1&dy4A))
                                           (cons
                                             (car g$subst$11023$1&dy4A)
                                             (g$f$11022$1&dy4A
                                               (cdr g$subst$11023$1&dy4A)))))))))
                           g$f$11022$1&dy4A)
                         g$subst$11021$1&dy4A))))
                   (g$remove-dups$10807$1&dy4A
                     (case-lambda
                       ((g$ls$11019$1&dy4A)
                        (if (null? g$ls$11019$1&dy4A)
                          '()
                          (if (g$memq$5716$1&dy4A
                                (car g$ls$11019$1&dy4A)
                                (cdr g$ls$11019$1&dy4A))
                            (g$remove-dups$10807$1&dy4A (cdr g$ls$11019$1&dy4A))
                            (cons
                              (car g$ls$11019$1&dy4A)
                              (g$remove-dups$10807$1&dy4A
                                (cdr g$ls$11019$1&dy4A))))))))
                   (g$parse-library-name$10808$1&dy4A
                     (case-lambda
                       ((g$spec$10903$1&dy4A)
                        (letrec* ((g$subversion?$10904$1&dy4A
                                    (case-lambda
                                      ((g$x$11017$1&dy4A)
                                       ((case-lambda
                                          ((g$x$11018$1&dy4A)
                                           (if (integer? g$x$11018$1&dy4A)
                                             (if (exact? g$x$11018$1&dy4A)
                                               (begin
                                                 '#f
                                                 (>= g$x$11018$1&dy4A '0))
                                               '#f)
                                             '#f)))
                                        (g$syntax->datum$8391$1&dy4A
                                          g$x$11017$1&dy4A)))))
                                  (g$subversion-pred$10905$1&dy4A
                                    (case-lambda
                                      ((g$x*$10969$1&dy4A)
                                       ((case-lambda
                                          ((g$t$10970$1&dy4A)
                                           ((case-lambda
                                              ((g$ls/false$10971$1&dy4A)
                                               (if (if g$ls/false$10971$1&dy4A
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$n$10972$1&dy4A)
                                                            (g$subversion?$10904$1&dy4A
                                                              g$n$10972$1&dy4A)))
                                                         g$ls/false$10971$1&dy4A))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$n$10973$1&dy4A)
                                                      (case-lambda
                                                        ((g$x$10974$1&dy4A)
                                                         (= g$x$10974$1&dy4A
                                                            (g$syntax->datum$8391$1&dy4A
                                                              g$n$10973$1&dy4A))))))
                                                   g$ls/false$10971$1&dy4A)
                                                 ((case-lambda
                                                    ((g$t$10975$1&dy4A)
                                                     ((case-lambda
                                                        ((g$ls/false$10976$1&dy4A)
                                                         (if (if g$ls/false$10976$1&dy4A
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$p?$10977$1&dy4A
                                                                        g$sub*$10978$1&dy4A)
                                                                      (eq? (g$syntax->datum$8391$1&dy4A
                                                                             g$p?$10977$1&dy4A)
                                                                           'and)))
                                                                   g$ls/false$10976$1&dy4A))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$p?$10979$1&dy4A
                                                                  g$sub*$10980$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$p*$10981$1&dy4A)
                                                                    (case-lambda
                                                                      ((g$x$10982$1&dy4A)
                                                                       (g$for-all$5722$1&dy4A
                                                                         (case-lambda
                                                                           ((g$p$10983$1&dy4A)
                                                                            (g$p$10983$1&dy4A
                                                                              g$x$10982$1&dy4A)))
                                                                         g$p*$10981$1&dy4A)))))
                                                                 (map g$subversion-pred$10905$1&dy4A
                                                                      g$sub*$10980$1&dy4A))))
                                                             g$ls/false$10976$1&dy4A)
                                                           ((case-lambda
                                                              ((g$t$10984$1&dy4A)
                                                               ((case-lambda
                                                                  ((g$ls/false$10985$1&dy4A)
                                                                   (if (if g$ls/false$10985$1&dy4A
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$p?$10986$1&dy4A
                                                                                  g$sub*$10987$1&dy4A)
                                                                                (eq? (g$syntax->datum$8391$1&dy4A
                                                                                       g$p?$10986$1&dy4A)
                                                                                     'or)))
                                                                             g$ls/false$10985$1&dy4A))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p?$10988$1&dy4A
                                                                            g$sub*$10989$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$p*$10990$1&dy4A)
                                                                              (case-lambda
                                                                                ((g$x$10991$1&dy4A)
                                                                                 (g$exists$5723$1&dy4A
                                                                                   (case-lambda
                                                                                     ((g$p$10992$1&dy4A)
                                                                                      (g$p$10992$1&dy4A
                                                                                        g$x$10991$1&dy4A)))
                                                                                   g$p*$10990$1&dy4A)))))
                                                                           (map g$subversion-pred$10905$1&dy4A
                                                                                g$sub*$10989$1&dy4A))))
                                                                       g$ls/false$10985$1&dy4A)
                                                                     ((case-lambda
                                                                        ((g$t$10993$1&dy4A)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10994$1&dy4A)
                                                                             (if (if g$ls/false$10994$1&dy4A
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$p?$10995$1&dy4A
                                                                                            g$sub$10996$1&dy4A)
                                                                                          (eq? (g$syntax->datum$8391$1&dy4A
                                                                                                 g$p?$10995$1&dy4A)
                                                                                               'not)))
                                                                                       g$ls/false$10994$1&dy4A))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$p?$10997$1&dy4A
                                                                                      g$sub$10998$1&dy4A)
                                                                                    ((case-lambda
                                                                                       ((g$p$10999$1&dy4A)
                                                                                        (case-lambda
                                                                                          ((g$x$11000$1&dy4A)
                                                                                           (not (g$p$10999$1&dy4A
                                                                                                  g$x$11000$1&dy4A))))))
                                                                                     (g$subversion-pred$10905$1&dy4A
                                                                                       g$sub$10998$1&dy4A))))
                                                                                 g$ls/false$10994$1&dy4A)
                                                                               ((case-lambda
                                                                                  ((g$t$11001$1&dy4A)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$11002$1&dy4A)
                                                                                       (if (if g$ls/false$11002$1&dy4A
                                                                                             (begin
                                                                                               '#f
                                                                                               (apply
                                                                                                 (case-lambda
                                                                                                   ((g$p?$11003$1&dy4A
                                                                                                      g$n$11004$1&dy4A)
                                                                                                    (if (eq? (g$syntax->datum$8391$1&dy4A
                                                                                                               g$p?$11003$1&dy4A)
                                                                                                             '<=)
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (g$subversion?$10904$1&dy4A
                                                                                                          g$n$11004$1&dy4A))
                                                                                                      '#f)))
                                                                                                 g$ls/false$11002$1&dy4A))
                                                                                             '#f)
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p?$11005$1&dy4A
                                                                                                g$n$11006$1&dy4A)
                                                                                              (case-lambda
                                                                                                ((g$x$11007$1&dy4A)
                                                                                                 (<= g$x$11007$1&dy4A
                                                                                                     (g$syntax->datum$8391$1&dy4A
                                                                                                       g$n$11006$1&dy4A))))))
                                                                                           g$ls/false$11002$1&dy4A)
                                                                                         ((case-lambda
                                                                                            ((g$t$11008$1&dy4A)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$11009$1&dy4A)
                                                                                                 (if (if g$ls/false$11009$1&dy4A
                                                                                                       (begin
                                                                                                         '#f
                                                                                                         (apply
                                                                                                           (case-lambda
                                                                                                             ((g$p?$11010$1&dy4A
                                                                                                                g$n$11011$1&dy4A)
                                                                                                              (if (eq? (g$syntax->datum$8391$1&dy4A
                                                                                                                         g$p?$11010$1&dy4A)
                                                                                                                       '>=)
                                                                                                                (begin
                                                                                                                  '#f
                                                                                                                  (g$subversion?$10904$1&dy4A
                                                                                                                    g$n$11011$1&dy4A))
                                                                                                                '#f)))
                                                                                                           g$ls/false$11009$1&dy4A))
                                                                                                       '#f)
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$p?$11012$1&dy4A
                                                                                                          g$n$11013$1&dy4A)
                                                                                                        (case-lambda
                                                                                                          ((g$x$11014$1&dy4A)
                                                                                                           (>= g$x$11014$1&dy4A
                                                                                                               (g$syntax->datum$8391$1&dy4A
                                                                                                                 g$n$11013$1&dy4A))))))
                                                                                                     g$ls/false$11009$1&dy4A)
                                                                                                   ((case-lambda
                                                                                                      ((g$t$11015$1&dy4A)
                                                                                                       ((case-lambda
                                                                                                          ((g$ls/false$11016$1&dy4A)
                                                                                                           (if g$ls/false$11016$1&dy4A
                                                                                                             (apply
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$syntax-violation$8388$1&dy4A
                                                                                                                    'import
                                                                                                                    '"invalid sub-version spec"
                                                                                                                    g$spec$10903$1&dy4A
                                                                                                                    g$x*$10969$1&dy4A)))
                                                                                                               g$ls/false$11016$1&dy4A)
                                                                                                             (g$syntax-violation$8388$1&dy4A
                                                                                                               '#f
                                                                                                               '"invalid syntax"
                                                                                                               g$t$11015$1&dy4A))))
                                                                                                        (g$syntax-dispatch$8277$1&dy4A
                                                                                                          g$t$11015$1&dy4A
                                                                                                          '_))))
                                                                                                    g$t$11008$1&dy4A))))
                                                                                              (g$syntax-dispatch$8277$1&dy4A
                                                                                                g$t$11008$1&dy4A
                                                                                                '(any any)))))
                                                                                          g$t$11001$1&dy4A))))
                                                                                    (g$syntax-dispatch$8277$1&dy4A
                                                                                      g$t$11001$1&dy4A
                                                                                      '(any any)))))
                                                                                g$t$10993$1&dy4A))))
                                                                          (g$syntax-dispatch$8277$1&dy4A
                                                                            g$t$10993$1&dy4A
                                                                            '(any any)))))
                                                                      g$t$10984$1&dy4A))))
                                                                (g$syntax-dispatch$8277$1&dy4A
                                                                  g$t$10984$1&dy4A
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10975$1&dy4A))))
                                                      (g$syntax-dispatch$8277$1&dy4A
                                                        g$t$10975$1&dy4A
                                                        '(any . each-any)))))
                                                  g$t$10970$1&dy4A))))
                                            (g$syntax-dispatch$8277$1&dy4A
                                              g$t$10970$1&dy4A
                                              'any))))
                                        g$x*$10969$1&dy4A))))
                                  (g$version-pred$10906$1&dy4A
                                    (case-lambda
                                      ((g$x*$10929$1&dy4A)
                                       ((case-lambda
                                          ((g$t$10930$1&dy4A)
                                           ((case-lambda
                                              ((g$ls/false$10931$1&dy4A)
                                               (if g$ls/false$10931$1&dy4A
                                                 (apply
                                                   (case-lambda
                                                     (()
                                                      (case-lambda
                                                        ((g$x$10932$1&dy4A)
                                                         '#t))))
                                                   g$ls/false$10931$1&dy4A)
                                                 ((case-lambda
                                                    ((g$t$10933$1&dy4A)
                                                     ((case-lambda
                                                        ((g$ls/false$10934$1&dy4A)
                                                         (if (if g$ls/false$10934$1&dy4A
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$c$10935$1&dy4A
                                                                        g$ver*$10936$1&dy4A)
                                                                      (eq? (g$syntax->datum$8391$1&dy4A
                                                                             g$c$10935$1&dy4A)
                                                                           'and)))
                                                                   g$ls/false$10934$1&dy4A))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$c$10937$1&dy4A
                                                                  g$ver*$10938$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$p*$10939$1&dy4A)
                                                                    (case-lambda
                                                                      ((g$x$10940$1&dy4A)
                                                                       (g$for-all$5722$1&dy4A
                                                                         (case-lambda
                                                                           ((g$p$10941$1&dy4A)
                                                                            (g$p$10941$1&dy4A
                                                                              g$x$10940$1&dy4A)))
                                                                         g$p*$10939$1&dy4A)))))
                                                                 (map g$version-pred$10906$1&dy4A
                                                                      g$ver*$10938$1&dy4A))))
                                                             g$ls/false$10934$1&dy4A)
                                                           ((case-lambda
                                                              ((g$t$10942$1&dy4A)
                                                               ((case-lambda
                                                                  ((g$ls/false$10943$1&dy4A)
                                                                   (if (if g$ls/false$10943$1&dy4A
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$c$10944$1&dy4A
                                                                                  g$ver*$10945$1&dy4A)
                                                                                (eq? (g$syntax->datum$8391$1&dy4A
                                                                                       g$c$10944$1&dy4A)
                                                                                     'or)))
                                                                             g$ls/false$10943$1&dy4A))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$c$10946$1&dy4A
                                                                            g$ver*$10947$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$p*$10948$1&dy4A)
                                                                              (case-lambda
                                                                                ((g$x$10949$1&dy4A)
                                                                                 (g$exists$5723$1&dy4A
                                                                                   (case-lambda
                                                                                     ((g$p$10950$1&dy4A)
                                                                                      (g$p$10950$1&dy4A
                                                                                        g$x$10949$1&dy4A)))
                                                                                   g$p*$10948$1&dy4A)))))
                                                                           (map g$version-pred$10906$1&dy4A
                                                                                g$ver*$10947$1&dy4A))))
                                                                       g$ls/false$10943$1&dy4A)
                                                                     ((case-lambda
                                                                        ((g$t$10951$1&dy4A)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10952$1&dy4A)
                                                                             (if (if g$ls/false$10952$1&dy4A
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$c$10953$1&dy4A
                                                                                            g$ver$10954$1&dy4A)
                                                                                          (eq? (g$syntax->datum$8391$1&dy4A
                                                                                                 g$c$10953$1&dy4A)
                                                                                               'not)))
                                                                                       g$ls/false$10952$1&dy4A))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$c$10955$1&dy4A
                                                                                      g$ver$10956$1&dy4A)
                                                                                    ((case-lambda
                                                                                       ((g$p$10957$1&dy4A)
                                                                                        (case-lambda
                                                                                          ((g$x$10958$1&dy4A)
                                                                                           (not (g$p$10957$1&dy4A
                                                                                                  g$x$10958$1&dy4A))))))
                                                                                     (g$version-pred$10906$1&dy4A
                                                                                       g$ver$10956$1&dy4A))))
                                                                                 g$ls/false$10952$1&dy4A)
                                                                               ((case-lambda
                                                                                  ((g$t$10959$1&dy4A)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10960$1&dy4A)
                                                                                       (if g$ls/false$10960$1&dy4A
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$sub*$10961$1&dy4A)
                                                                                              ((case-lambda
                                                                                                 ((g$p*$10962$1&dy4A)
                                                                                                  (case-lambda
                                                                                                    ((g$x$10963$1&dy4A)
                                                                                                     ((letrec ((g$f$10964$1&dy4A
                                                                                                                 (case-lambda
                                                                                                                   ((g$p*$10965$1&dy4A
                                                                                                                      g$x$10966$1&dy4A)
                                                                                                                    (if (null?
                                                                                                                          g$p*$10965$1&dy4A)
                                                                                                                      '#t
                                                                                                                      (if (null?
                                                                                                                            g$x$10966$1&dy4A)
                                                                                                                        '#f
                                                                                                                        (if ((car g$p*$10965$1&dy4A)
                                                                                                                             (car g$x$10966$1&dy4A))
                                                                                                                          (begin
                                                                                                                            '#f
                                                                                                                            (g$f$10964$1&dy4A
                                                                                                                              (cdr g$p*$10965$1&dy4A)
                                                                                                                              (cdr g$x$10966$1&dy4A)))
                                                                                                                          '#f)))))))
                                                                                                        g$f$10964$1&dy4A)
                                                                                                      g$p*$10962$1&dy4A
                                                                                                      g$x$10963$1&dy4A)))))
                                                                                               (map g$subversion-pred$10905$1&dy4A
                                                                                                    g$sub*$10961$1&dy4A))))
                                                                                           g$ls/false$10960$1&dy4A)
                                                                                         ((case-lambda
                                                                                            ((g$t$10967$1&dy4A)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10968$1&dy4A)
                                                                                                 (if g$ls/false$10968$1&dy4A
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$syntax-violation$8388$1&dy4A
                                                                                                          'import
                                                                                                          '"invalid version spec"
                                                                                                          g$spec$10903$1&dy4A
                                                                                                          g$x*$10929$1&dy4A)))
                                                                                                     g$ls/false$10968$1&dy4A)
                                                                                                   (g$syntax-violation$8388$1&dy4A
                                                                                                     '#f
                                                                                                     '"invalid syntax"
                                                                                                     g$t$10967$1&dy4A))))
                                                                                              (g$syntax-dispatch$8277$1&dy4A
                                                                                                g$t$10967$1&dy4A
                                                                                                '_))))
                                                                                          g$t$10959$1&dy4A))))
                                                                                    (g$syntax-dispatch$8277$1&dy4A
                                                                                      g$t$10959$1&dy4A
                                                                                      'each-any))))
                                                                                g$t$10951$1&dy4A))))
                                                                          (g$syntax-dispatch$8277$1&dy4A
                                                                            g$t$10951$1&dy4A
                                                                            '(any any)))))
                                                                      g$t$10942$1&dy4A))))
                                                                (g$syntax-dispatch$8277$1&dy4A
                                                                  g$t$10942$1&dy4A
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10933$1&dy4A))))
                                                      (g$syntax-dispatch$8277$1&dy4A
                                                        g$t$10933$1&dy4A
                                                        '(any . each-any)))))
                                                  g$t$10930$1&dy4A))))
                                            (g$syntax-dispatch$8277$1&dy4A
                                              g$t$10930$1&dy4A
                                              '()))))
                                        g$x*$10929$1&dy4A)))))
                          ((letrec ((g$f$10907$1&dy4A
                                      (case-lambda
                                        ((g$x$10908$1&dy4A)
                                         ((case-lambda
                                            ((g$t$10909$1&dy4A)
                                             ((case-lambda
                                                ((g$ls/false$10910$1&dy4A)
                                                 (if g$ls/false$10910$1&dy4A
                                                   (apply
                                                     (case-lambda
                                                       ((g$version-spec*$10911$1&dy4A)
                                                        (values
                                                          '()
                                                          (g$version-pred$10906$1&dy4A
                                                            g$version-spec*$10911$1&dy4A))))
                                                     g$ls/false$10910$1&dy4A)
                                                   ((case-lambda
                                                      ((g$t$10912$1&dy4A)
                                                       ((case-lambda
                                                          ((g$ls/false$10913$1&dy4A)
                                                           (if (if g$ls/false$10913$1&dy4A
                                                                 (begin
                                                                   '#f
                                                                   (apply
                                                                     (case-lambda
                                                                       ((g$x$10914$1&dy4A
                                                                          g$x*$10915$1&dy4A)
                                                                        (g$idsyn?$10801$1&dy4A
                                                                          g$x$10914$1&dy4A)))
                                                                     g$ls/false$10913$1&dy4A))
                                                                 '#f)
                                                             (apply
                                                               (case-lambda
                                                                 ((g$x$10916$1&dy4A
                                                                    g$x*$10917$1&dy4A)
                                                                  (call-with-values
                                                                    (case-lambda
                                                                      (()
                                                                       (g$f$10907$1&dy4A
                                                                         g$x*$10917$1&dy4A)))
                                                                    (case-lambda
                                                                      ((g$name$10920$1&dy4A
                                                                         g$pred$10921$1&dy4A)
                                                                       ((case-lambda
                                                                          ((g$pred$10922$1&dy4A
                                                                             g$name$10923$1&dy4A)
                                                                           (values
                                                                             (cons
                                                                               (g$syntax->datum$8391$1&dy4A
                                                                                 g$x$10916$1&dy4A)
                                                                               g$name$10923$1&dy4A)
                                                                             g$pred$10922$1&dy4A)))
                                                                        g$pred$10921$1&dy4A
                                                                        g$name$10920$1&dy4A))))))
                                                               g$ls/false$10913$1&dy4A)
                                                             ((case-lambda
                                                                ((g$t$10924$1&dy4A)
                                                                 ((case-lambda
                                                                    ((g$ls/false$10925$1&dy4A)
                                                                     (if g$ls/false$10925$1&dy4A
                                                                       (apply
                                                                         (case-lambda
                                                                           (()
                                                                            (values
                                                                              '()
                                                                              (case-lambda
                                                                                ((g$x$10926$1&dy4A)
                                                                                 '#t)))))
                                                                         g$ls/false$10925$1&dy4A)
                                                                       ((case-lambda
                                                                          ((g$t$10927$1&dy4A)
                                                                           ((case-lambda
                                                                              ((g$ls/false$10928$1&dy4A)
                                                                               (if g$ls/false$10928$1&dy4A
                                                                                 (apply
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$syntax-violation$8388$1&dy4A
                                                                                        '#f
                                                                                        '"invalid import spec"
                                                                                        g$spec$10903$1&dy4A)))
                                                                                   g$ls/false$10928$1&dy4A)
                                                                                 (g$syntax-violation$8388$1&dy4A
                                                                                   '#f
                                                                                   '"invalid syntax"
                                                                                   g$t$10927$1&dy4A))))
                                                                            (g$syntax-dispatch$8277$1&dy4A
                                                                              g$t$10927$1&dy4A
                                                                              '_))))
                                                                        g$t$10924$1&dy4A))))
                                                                  (g$syntax-dispatch$8277$1&dy4A
                                                                    g$t$10924$1&dy4A
                                                                    '()))))
                                                              g$t$10912$1&dy4A))))
                                                        (g$syntax-dispatch$8277$1&dy4A
                                                          g$t$10912$1&dy4A
                                                          '(any . any)))))
                                                    g$t$10909$1&dy4A))))
                                              (g$syntax-dispatch$8277$1&dy4A
                                                g$t$10909$1&dy4A
                                                '(each-any)))))
                                          g$x$10908$1&dy4A)))))
                             g$f$10907$1&dy4A)
                           g$spec$10903$1&dy4A)))))
                   (g$import-library$10809$1&dy4A
                     (case-lambda
                       ((g$spec*$10895$1&dy4A)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$parse-library-name$10808$1&dy4A
                               g$spec*$10895$1&dy4A)))
                          (case-lambda
                            ((g$name$10898$1&dy4A g$pred$10899$1&dy4A)
                             ((case-lambda
                                ((g$pred$10900$1&dy4A g$name$10901$1&dy4A)
                                 (begin
                                   (if (null? g$name$10901$1&dy4A)
                                     (g$syntax-violation$8388$1&dy4A
                                       'import
                                       '"empty library name"
                                       g$spec*$10895$1&dy4A)
                                     (void))
                                   ((case-lambda
                                      ((g$lib$10902$1&dy4A)
                                       (begin
                                         (if (not g$lib$10902$1&dy4A)
                                           (g$syntax-violation$8388$1&dy4A
                                             'import
                                             '"cannot find library with required name"
                                             g$name$10901$1&dy4A)
                                           (void))
                                         (if (not (g$pred$10900$1&dy4A
                                                    (g$library-version$7762$1&dy4A
                                                      g$lib$10902$1&dy4A)))
                                           (g$syntax-violation$8388$1&dy4A
                                             'import
                                             '"library does not satisfy version specification"
                                             g$spec*$10895$1&dy4A
                                             g$lib$10902$1&dy4A)
                                           (void))
                                         ((g$imp-collector$8331$1&dy4A)
                                          g$lib$10902$1&dy4A)
                                         (g$library-subst$7766$1&dy4A
                                           g$lib$10902$1&dy4A))))
                                    (g$find-library-by-name$7802$1&dy4A
                                      g$name$10901$1&dy4A)))))
                              g$pred$10899$1&dy4A
                              g$name$10898$1&dy4A)))))))
                   (g$get-import$10810$1&dy4A
                     (case-lambda
                       ((g$spec$10824$1&dy4A)
                        ((case-lambda
                           ((g$t$10825$1&dy4A)
                            ((case-lambda
                               ((g$ls/false$10826$1&dy4A)
                                (if (if g$ls/false$10826$1&dy4A
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$x$10827$1&dy4A
                                               g$x*$10828$1&dy4A)
                                             (not (g$memq$5716$1&dy4A
                                                    (g$syntax->datum$8391$1&dy4A
                                                      g$x$10827$1&dy4A)
                                                    '(for rename
                                                          except
                                                          only
                                                          prefix
                                                          library)))))
                                          g$ls/false$10826$1&dy4A))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$x$10829$1&dy4A g$x*$10830$1&dy4A)
                                       (g$import-library$10809$1&dy4A
                                         (cons
                                           g$x$10829$1&dy4A
                                           g$x*$10830$1&dy4A))))
                                    g$ls/false$10826$1&dy4A)
                                  ((case-lambda
                                     ((g$t$10831$1&dy4A)
                                      ((case-lambda
                                         ((g$ls/false$10832$1&dy4A)
                                          (if (if g$ls/false$10832$1&dy4A
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$rename$10833$1&dy4A
                                                         g$isp$10834$1&dy4A
                                                         g$old*$10835$1&dy4A
                                                         g$new*$10836$1&dy4A)
                                                       (if (eq? (g$syntax->datum$8391$1&dy4A
                                                                  g$rename$10833$1&dy4A)
                                                                'rename)
                                                         (if (g$for-all$5722$1&dy4A
                                                               g$idsyn?$10801$1&dy4A
                                                               g$old*$10835$1&dy4A)
                                                           (begin
                                                             '#f
                                                             (g$for-all$5722$1&dy4A
                                                               g$idsyn?$10801$1&dy4A
                                                               g$new*$10836$1&dy4A))
                                                           '#f)
                                                         '#f)))
                                                    g$ls/false$10832$1&dy4A))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$rename$10837$1&dy4A
                                                   g$isp$10838$1&dy4A
                                                   g$old*$10839$1&dy4A
                                                   g$new*$10840$1&dy4A)
                                                 ((case-lambda
                                                    ((g$subst$10841$1&dy4A
                                                       g$old*$10842$1&dy4A
                                                       g$new*$10843$1&dy4A)
                                                     ((case-lambda
                                                        ((g$old-label*$10844$1&dy4A)
                                                         ((case-lambda
                                                            ((g$subst$10845$1&dy4A)
                                                             (g$merge-substs$10803$1&dy4A
                                                               (map cons
                                                                    g$new*$10843$1&dy4A
                                                                    g$old-label*$10844$1&dy4A)
                                                               g$subst$10845$1&dy4A)))
                                                          (g$rem*$10806$1&dy4A
                                                            g$old*$10842$1&dy4A
                                                            g$subst$10841$1&dy4A))))
                                                      (g$find*$10805$1&dy4A
                                                        g$old*$10842$1&dy4A
                                                        g$subst$10841$1&dy4A))))
                                                  (g$get-import$10810$1&dy4A
                                                    g$isp$10838$1&dy4A)
                                                  (map g$syntax->datum$8391$1&dy4A
                                                       g$old*$10839$1&dy4A)
                                                  (map g$syntax->datum$8391$1&dy4A
                                                       g$new*$10840$1&dy4A))))
                                              g$ls/false$10832$1&dy4A)
                                            ((case-lambda
                                               ((g$t$10846$1&dy4A)
                                                ((case-lambda
                                                   ((g$ls/false$10847$1&dy4A)
                                                    (if (if g$ls/false$10847$1&dy4A
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$except$10848$1&dy4A
                                                                   g$isp$10849$1&dy4A
                                                                   g$sym*$10850$1&dy4A)
                                                                 (if (eq? (g$syntax->datum$8391$1&dy4A
                                                                            g$except$10848$1&dy4A)
                                                                          'except)
                                                                   (begin
                                                                     '#f
                                                                     (g$for-all$5722$1&dy4A
                                                                       g$idsyn?$10801$1&dy4A
                                                                       g$sym*$10850$1&dy4A))
                                                                   '#f)))
                                                              g$ls/false$10847$1&dy4A))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$except$10851$1&dy4A
                                                             g$isp$10852$1&dy4A
                                                             g$sym*$10853$1&dy4A)
                                                           ((case-lambda
                                                              ((g$subst$10854$1&dy4A)
                                                               (g$rem*$10806$1&dy4A
                                                                 (map g$syntax->datum$8391$1&dy4A
                                                                      g$sym*$10853$1&dy4A)
                                                                 g$subst$10854$1&dy4A)))
                                                            (g$get-import$10810$1&dy4A
                                                              g$isp$10852$1&dy4A))))
                                                        g$ls/false$10847$1&dy4A)
                                                      ((case-lambda
                                                         ((g$t$10855$1&dy4A)
                                                          ((case-lambda
                                                             ((g$ls/false$10856$1&dy4A)
                                                              (if (if g$ls/false$10856$1&dy4A
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$only$10857$1&dy4A
                                                                             g$isp$10858$1&dy4A
                                                                             g$sym*$10859$1&dy4A)
                                                                           (if (eq? (g$syntax->datum$8391$1&dy4A
                                                                                      g$only$10857$1&dy4A)
                                                                                    'only)
                                                                             (begin
                                                                               '#f
                                                                               (g$for-all$5722$1&dy4A
                                                                                 g$idsyn?$10801$1&dy4A
                                                                                 g$sym*$10859$1&dy4A))
                                                                             '#f)))
                                                                        g$ls/false$10856$1&dy4A))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$only$10860$1&dy4A
                                                                       g$isp$10861$1&dy4A
                                                                       g$sym*$10862$1&dy4A)
                                                                     ((case-lambda
                                                                        ((g$subst$10863$1&dy4A
                                                                           g$sym*$10864$1&dy4A)
                                                                         ((case-lambda
                                                                            ((g$sym*$10865$1&dy4A)
                                                                             ((case-lambda
                                                                                ((g$lab*$10866$1&dy4A)
                                                                                 (map cons
                                                                                      g$sym*$10865$1&dy4A
                                                                                      g$lab*$10866$1&dy4A)))
                                                                              (g$find*$10805$1&dy4A
                                                                                g$sym*$10865$1&dy4A
                                                                                g$subst$10863$1&dy4A))))
                                                                          (g$remove-dups$10807$1&dy4A
                                                                            g$sym*$10864$1&dy4A))))
                                                                      (g$get-import$10810$1&dy4A
                                                                        g$isp$10861$1&dy4A)
                                                                      (map g$syntax->datum$8391$1&dy4A
                                                                           g$sym*$10862$1&dy4A))))
                                                                  g$ls/false$10856$1&dy4A)
                                                                ((case-lambda
                                                                   ((g$t$10867$1&dy4A)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10868$1&dy4A)
                                                                        (if (if g$ls/false$10868$1&dy4A
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$prefix$10869$1&dy4A
                                                                                       g$isp$10870$1&dy4A
                                                                                       g$p$10871$1&dy4A)
                                                                                     (if (eq? (g$syntax->datum$8391$1&dy4A
                                                                                                g$prefix$10869$1&dy4A)
                                                                                              'prefix)
                                                                                       (begin
                                                                                         '#f
                                                                                         (g$idsyn?$10801$1&dy4A
                                                                                           g$p$10871$1&dy4A))
                                                                                       '#f)))
                                                                                  g$ls/false$10868$1&dy4A))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$prefix$10872$1&dy4A
                                                                                 g$isp$10873$1&dy4A
                                                                                 g$p$10874$1&dy4A)
                                                                               ((case-lambda
                                                                                  ((g$subst$10875$1&dy4A
                                                                                     g$prefix$10876$1&dy4A)
                                                                                   (map (case-lambda
                                                                                          ((g$x$10877$1&dy4A)
                                                                                           (cons
                                                                                             (string->symbol
                                                                                               (string-append
                                                                                                 g$prefix$10876$1&dy4A
                                                                                                 (symbol->string
                                                                                                   (car g$x$10877$1&dy4A))))
                                                                                             (cdr g$x$10877$1&dy4A))))
                                                                                        g$subst$10875$1&dy4A)))
                                                                                (g$get-import$10810$1&dy4A
                                                                                  g$isp$10873$1&dy4A)
                                                                                (symbol->string
                                                                                  (g$syntax->datum$8391$1&dy4A
                                                                                    g$p$10874$1&dy4A)))))
                                                                            g$ls/false$10868$1&dy4A)
                                                                          ((case-lambda
                                                                             ((g$t$10878$1&dy4A)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10879$1&dy4A)
                                                                                  (if (if g$ls/false$10879$1&dy4A
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$library$10880$1&dy4A
                                                                                                 g$spec*$10881$1&dy4A)
                                                                                               (eq? (g$syntax->datum$8391$1&dy4A
                                                                                                      g$library$10880$1&dy4A)
                                                                                                    'library)))
                                                                                            g$ls/false$10879$1&dy4A))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$library$10882$1&dy4A
                                                                                           g$spec*$10883$1&dy4A)
                                                                                         (g$import-library$10809$1&dy4A
                                                                                           g$spec*$10883$1&dy4A)))
                                                                                      g$ls/false$10879$1&dy4A)
                                                                                    ((case-lambda
                                                                                       ((g$t$10884$1&dy4A)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10885$1&dy4A)
                                                                                            (if (if g$ls/false$10885$1&dy4A
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$for$10886$1&dy4A
                                                                                                           g$isp$10887$1&dy4A
                                                                                                           g$rest$10888$1&dy4A)
                                                                                                         (eq? (g$syntax->datum$8391$1&dy4A
                                                                                                                g$for$10886$1&dy4A)
                                                                                                              'for)))
                                                                                                      g$ls/false$10885$1&dy4A))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$for$10889$1&dy4A
                                                                                                     g$isp$10890$1&dy4A
                                                                                                     g$rest$10891$1&dy4A)
                                                                                                   (g$get-import$10810$1&dy4A
                                                                                                     g$isp$10890$1&dy4A)))
                                                                                                g$ls/false$10885$1&dy4A)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10892$1&dy4A)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10893$1&dy4A)
                                                                                                      (if g$ls/false$10893$1&dy4A
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$spec$10894$1&dy4A)
                                                                                                             (g$syntax-violation$8388$1&dy4A
                                                                                                               'import
                                                                                                               '"invalid import spec"
                                                                                                               g$spec$10894$1&dy4A)))
                                                                                                          g$ls/false$10893$1&dy4A)
                                                                                                        (g$syntax-violation$8388$1&dy4A
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$10892$1&dy4A))))
                                                                                                   (g$syntax-dispatch$8277$1&dy4A
                                                                                                     g$t$10892$1&dy4A
                                                                                                     'any))))
                                                                                               g$t$10884$1&dy4A))))
                                                                                         (g$syntax-dispatch$8277$1&dy4A
                                                                                           g$t$10884$1&dy4A
                                                                                           '(any any
                                                                                                 .
                                                                                                 any)))))
                                                                                     g$t$10878$1&dy4A))))
                                                                               (g$syntax-dispatch$8277$1&dy4A
                                                                                 g$t$10878$1&dy4A
                                                                                 '(any each-any)))))
                                                                           g$t$10867$1&dy4A))))
                                                                     (g$syntax-dispatch$8277$1&dy4A
                                                                       g$t$10867$1&dy4A
                                                                       '(any any
                                                                             any)))))
                                                                 g$t$10855$1&dy4A))))
                                                           (g$syntax-dispatch$8277$1&dy4A
                                                             g$t$10855$1&dy4A
                                                             '(any any
                                                                   .
                                                                   each-any)))))
                                                       g$t$10846$1&dy4A))))
                                                 (g$syntax-dispatch$8277$1&dy4A
                                                   g$t$10846$1&dy4A
                                                   '(any any . each-any)))))
                                             g$t$10831$1&dy4A))))
                                       (g$syntax-dispatch$8277$1&dy4A
                                         g$t$10831$1&dy4A
                                         '(any any . #(each (any any)))))))
                                   g$t$10825$1&dy4A))))
                             (g$syntax-dispatch$8277$1&dy4A
                               g$t$10825$1&dy4A
                               '(any . each-any)))))
                         g$spec$10824$1&dy4A))))
                   (g$add-imports!$10811$1&dy4A
                     (case-lambda
                       ((g$imp$10816$1&dy4A g$h$10817$1&dy4A)
                        ((case-lambda
                           ((g$subst$10818$1&dy4A)
                            (for-each
                              (case-lambda
                                ((g$x$10819$1&dy4A)
                                 ((case-lambda
                                    ((g$name$10820$1&dy4A g$label$10821$1&dy4A)
                                     ((case-lambda
                                        ((g$t$10822$1&dy4A)
                                         (if g$t$10822$1&dy4A
                                           ((case-lambda
                                              ((g$l$10823$1&dy4A)
                                               (if (not (eq? g$l$10823$1&dy4A
                                                             g$label$10821$1&dy4A))
                                                 (g$dup-error$10802$1&dy4A
                                                   g$name$10820$1&dy4A)
                                                 (void))))
                                            g$t$10822$1&dy4A)
                                           (g$hashtable-set!$6164$1&dy4A
                                             g$h$10817$1&dy4A
                                             g$name$10820$1&dy4A
                                             g$label$10821$1&dy4A))))
                                      (g$hashtable-ref$6163$1&dy4A
                                        g$h$10817$1&dy4A
                                        g$name$10820$1&dy4A
                                        '#f))))
                                  (car g$x$10819$1&dy4A)
                                  (cdr g$x$10819$1&dy4A))))
                              g$subst$10818$1&dy4A)))
                         (g$get-import$10810$1&dy4A g$imp$10816$1&dy4A))))))
           (case-lambda
             ((g$imp*$10812$1&dy4A)
              ((letrec ((g$f$10813$1&dy4A
                          (case-lambda
                            ((g$imp*$10814$1&dy4A g$h$10815$1&dy4A)
                             (if (null? g$imp*$10814$1&dy4A)
                               (hashtable-entries g$h$10815$1&dy4A)
                               (begin
                                 (g$add-imports!$10811$1&dy4A
                                   (car g$imp*$10814$1&dy4A)
                                   g$h$10815$1&dy4A)
                                 (g$f$10813$1&dy4A
                                   (cdr g$imp*$10814$1&dy4A)
                                   g$h$10815$1&dy4A)))))))
                 g$f$10813$1&dy4A)
               g$imp*$10812$1&dy4A
               (g$make-eq-hashtable$6160$1&dy4A)))))))))
   (g$make-top-rib$8327$1&dy4A
     g$make-top-rib$11818$1&dy4A
     (case-lambda
       ((g$names$11063$1&dy4A g$labels$11064$1&dy4A)
        ((case-lambda
           ((g$rib$11065$1&dy4A)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$11066$1&dy4A g$label$11067$1&dy4A)
                   (begin
                     (if (not (symbol? g$name$11066$1&dy4A))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$11066$1&dy4A)
                       (void))
                     (g$extend-rib/nc!$7963$1&dy4A
                       g$rib$11065$1&dy4A
                       (g$make-stx$7972$1&dy4A
                         g$name$11066$1&dy4A
                         g$top-mark*$7936$1&dy4A
                         '()
                         '())
                       g$label$11067$1&dy4A))))
                g$names$11063$1&dy4A
                g$labels$11064$1&dy4A)
              g$rib$11065$1&dy4A)))
         (g$make-cache-rib$7960$1&dy4A)))))
   (g$make-collector$8328$1&dy4A
     g$make-collector$11819$1&dy4A
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$11068$1&dy4A)
            (case-lambda
              (() g$ls$11068$1&dy4A)
              ((g$x$11069$1&dy4A)
               (set! g$ls$11068$1&dy4A
                 (g$set-cons$7933$1&dy4A
                   g$x$11069$1&dy4A
                   g$ls$11068$1&dy4A))))))
         '()))))
   (g$inv-collector$8329$1&dy4A
     g$inv-collector$11820$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (case-lambda
         (g$args$11070$1&dy4A
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11071$1&dy4A)
          (begin
            (if (not (procedure? g$x$11071$1&dy4A))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$11071$1&dy4A)
              (void))
            g$x$11071$1&dy4A)))))
   (g$vis-collector$8330$1&dy4A
     g$vis-collector$11821$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (case-lambda
         (g$args$11072$1&dy4A
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11073$1&dy4A)
          (begin
            (if (not (procedure? g$x$11073$1&dy4A))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$11073$1&dy4A)
              (void))
            g$x$11073$1&dy4A)))))
   (g$imp-collector$8331$1&dy4A
     g$imp-collector$11822$1&dy4A
     (g$make-parameter$7271$1&dy4A
       (case-lambda
         (g$args$11074$1&dy4A
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11075$1&dy4A)
          (begin
            (if (not (procedure? g$x$11075$1&dy4A))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$11075$1&dy4A)
              (void))
            g$x$11075$1&dy4A)))))
   (g$chi-library-internal$8332$1&dy4A
     g$chi-library-internal$11823$1&dy4A
     (case-lambda
       ((g$e*$11076$1&dy4A g$rib$11077$1&dy4A g$top?$11078$1&dy4A)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8321$1&dy4A
               g$e*$11076$1&dy4A
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$11077$1&dy4A
               g$top?$11078$1&dy4A)))
          (case-lambda
            ((g$e*$11087$1&dy4A
               g$r$11088$1&dy4A
               g$mr$11089$1&dy4A
               g$lex*$11090$1&dy4A
               g$rhs*$11091$1&dy4A
               g$mod**$11092$1&dy4A
               g$_kwd*$11093$1&dy4A
               g$exp*$11094$1&dy4A)
             ((case-lambda
                ((g$exp*$11095$1&dy4A
                   g$_kwd*$11096$1&dy4A
                   g$mod**$11097$1&dy4A
                   g$rhs*$11098$1&dy4A
                   g$lex*$11099$1&dy4A
                   g$mr$11100$1&dy4A
                   g$r$11101$1&dy4A
                   g$e*$11102$1&dy4A)
                 (values
                   (append
                     (apply append (reverse g$mod**$11097$1&dy4A))
                     g$e*$11102$1&dy4A)
                   g$r$11101$1&dy4A
                   g$mr$11100$1&dy4A
                   (reverse g$lex*$11099$1&dy4A)
                   (reverse g$rhs*$11098$1&dy4A)
                   g$exp*$11095$1&dy4A)))
              g$exp*$11094$1&dy4A
              g$_kwd*$11093$1&dy4A
              g$mod**$11092$1&dy4A
              g$rhs*$11091$1&dy4A
              g$lex*$11090$1&dy4A
              g$mr$11089$1&dy4A
              g$r$11088$1&dy4A
              g$e*$11087$1&dy4A)))))))
   (g$chi-interaction-expr$8333$1&dy4A
     g$chi-interaction-expr$11824$1&dy4A
     (case-lambda
       ((g$e$11103$1&dy4A g$rib$11104$1&dy4A g$r$11105$1&dy4A)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8321$1&dy4A
               (list g$e$11103$1&dy4A)
               g$r$11105$1&dy4A
               g$r$11105$1&dy4A
               '()
               '()
               '()
               '()
               '()
               g$rib$11104$1&dy4A
               '#t)))
          (case-lambda
            ((g$e*$11114$1&dy4A
               g$r$11115$1&dy4A
               g$mr$11116$1&dy4A
               g$lex*$11117$1&dy4A
               g$rhs*$11118$1&dy4A
               g$mod**$11119$1&dy4A
               g$_kwd*$11120$1&dy4A
               g$_exp*$11121$1&dy4A)
             ((case-lambda
                ((g$_exp*$11122$1&dy4A
                   g$_kwd*$11123$1&dy4A
                   g$mod**$11124$1&dy4A
                   g$rhs*$11125$1&dy4A
                   g$lex*$11126$1&dy4A
                   g$mr$11127$1&dy4A
                   g$r$11128$1&dy4A
                   g$e*$11129$1&dy4A)
                 ((case-lambda
                    ((g$e*$11130$1&dy4A)
                     ((case-lambda
                        ((g$e$11131$1&dy4A)
                         (values g$e$11131$1&dy4A g$r$11128$1&dy4A)))
                      (if (null? g$e*$11130$1&dy4A)
                        (g$build-void$7929$1&dy4A)
                        (if (null? (cdr g$e*$11130$1&dy4A))
                          (car g$e*$11130$1&dy4A)
                          (g$build-sequence$7928$1&dy4A
                            '#f
                            g$e*$11130$1&dy4A))))))
                  (g$expand-interaction-rhs*/init*$8302$1&dy4A
                    (reverse g$lex*$11126$1&dy4A)
                    (reverse g$rhs*$11125$1&dy4A)
                    (append
                      (apply append (reverse g$mod**$11124$1&dy4A))
                      g$e*$11129$1&dy4A)
                    g$r$11128$1&dy4A
                    g$mr$11127$1&dy4A))))
              g$_exp*$11121$1&dy4A
              g$_kwd*$11120$1&dy4A
              g$mod**$11119$1&dy4A
              g$rhs*$11118$1&dy4A
              g$lex*$11117$1&dy4A
              g$mr$11116$1&dy4A
              g$r$11115$1&dy4A
              g$e*$11114$1&dy4A)))))))
   (g$library-body-expander$8334$1&dy4A
     g$library-body-expander$11825$1&dy4A
     (case-lambda
       ((g$name$11132$1&dy4A
          g$main-exp*$11133$1&dy4A
          g$imp*$11134$1&dy4A
          g$b*$11135$1&dy4A
          g$top?$11136$1&dy4A)
        (letrec* ((g$itc$11137$1&dy4A (g$make-collector$8328$1&dy4A)))
          ((case-lambda
             ((g$imp-collector$11142$1&dy4A
                g$top-level-context$11143$1&dy4A
                g$imp-collector$11144$1&dy4A
                g$top-level-context$11145$1&dy4A)
              ((case-lambda
                 ((g$swap$11146$1&dy4A)
                  (dynamic-wind
                    g$swap$11146$1&dy4A
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$8326$1&dy4A
                              g$imp*$11134$1&dy4A)))
                         (case-lambda
                           ((g$subst-names$11149$1&dy4A
                              g$subst-labels$11150$1&dy4A)
                            ((case-lambda
                               ((g$subst-labels$11151$1&dy4A
                                  g$subst-names$11152$1&dy4A)
                                ((case-lambda
                                   ((g$rib$11153$1&dy4A)
                                    (letrec* ((g$wrap$11154$1&dy4A
                                                (case-lambda
                                                  ((g$x$11216$1&dy4A)
                                                   (g$make-stx$7972$1&dy4A
                                                     g$x$11216$1&dy4A
                                                     g$top-mark*$7936$1&dy4A
                                                     (list g$rib$11153$1&dy4A)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$11155$1&dy4A
                                            g$main-exp*$11156$1&dy4A
                                            g$rtc$11157$1&dy4A
                                            g$vtc$11158$1&dy4A)
                                          ((case-lambda
                                             ((g$inv-collector$11163$1&dy4A
                                                g$vis-collector$11164$1&dy4A
                                                g$inv-collector$11165$1&dy4A
                                                g$vis-collector$11166$1&dy4A)
                                              ((case-lambda
                                                 ((g$swap$11167$1&dy4A)
                                                  (dynamic-wind
                                                    g$swap$11167$1&dy4A
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$8332$1&dy4A
                                                              g$b*$11155$1&dy4A
                                                              g$rib$11153$1&dy4A
                                                              g$top?$11136$1&dy4A)))
                                                         (case-lambda
                                                           ((g$init*$11174$1&dy4A
                                                              g$r$11175$1&dy4A
                                                              g$mr$11176$1&dy4A
                                                              g$lex*$11177$1&dy4A
                                                              g$rhs*$11178$1&dy4A
                                                              g$internal-exp*$11179$1&dy4A)
                                                            ((case-lambda
                                                               ((g$internal-exp*$11180$1&dy4A
                                                                  g$rhs*$11181$1&dy4A
                                                                  g$lex*$11182$1&dy4A
                                                                  g$mr$11183$1&dy4A
                                                                  g$r$11184$1&dy4A
                                                                  g$init*$11185$1&dy4A)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$8323$1&dy4A
                                                                       (append
                                                                         g$main-exp*$11156$1&dy4A
                                                                         g$internal-exp*$11180$1&dy4A))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$11188$1&dy4A
                                                                       g$exp-id*$11189$1&dy4A)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$11190$1&dy4A
                                                                           g$exp-name*$11191$1&dy4A)
                                                                         (begin
                                                                           (g$seal-rib!$7965$1&dy4A
                                                                             g$rib$11153$1&dy4A)
                                                                           ((case-lambda
                                                                              ((g$init*$11192$1&dy4A)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$11193$1&dy4A)
                                                                                   ((case-lambda
                                                                                      (()
                                                                                       (begin
                                                                                         (g$unseal-rib!$7966$1&dy4A
                                                                                           g$rib$11153$1&dy4A)
                                                                                         ((case-lambda
                                                                                            ((g$loc*$11194$1&dy4A
                                                                                               g$export-subst$11195$1&dy4A)
                                                                                             (letrec* ((g$errstr$11196$1&dy4A
                                                                                                         '"attempt to export mutated variable"))
                                                                                               (call-with-values
                                                                                                 (case-lambda
                                                                                                   (()
                                                                                                    (g$make-export-env/macros$8377$1&dy4A
                                                                                                      g$lex*$11182$1&dy4A
                                                                                                      g$loc*$11194$1&dy4A
                                                                                                      g$r$11184$1&dy4A)))
                                                                                                 (case-lambda
                                                                                                   ((g$export-env$11200$1&dy4A
                                                                                                      g$global*$11201$1&dy4A
                                                                                                      g$macro*$11202$1&dy4A)
                                                                                                    ((case-lambda
                                                                                                       ((g$macro*$11203$1&dy4A
                                                                                                          g$global*$11204$1&dy4A
                                                                                                          g$export-env$11205$1&dy4A)
                                                                                                        (begin
                                                                                                          (for-each
                                                                                                            (case-lambda
                                                                                                              ((g$s$11206$1&dy4A)
                                                                                                               ((case-lambda
                                                                                                                  ((g$name$11207$1&dy4A
                                                                                                                     g$label$11208$1&dy4A)
                                                                                                                   ((case-lambda
                                                                                                                      ((g$p$11209$1&dy4A)
                                                                                                                       (if g$p$11209$1&dy4A
                                                                                                                         ((case-lambda
                                                                                                                            ((g$b$11210$1&dy4A)
                                                                                                                             ((case-lambda
                                                                                                                                ((g$type$11211$1&dy4A)
                                                                                                                                 (if (eq? g$type$11211$1&dy4A
                                                                                                                                          'mutable)
                                                                                                                                   (g$syntax-violation$8388$1&dy4A
                                                                                                                                     'export
                                                                                                                                     g$errstr$11196$1&dy4A
                                                                                                                                     g$name$11207$1&dy4A)
                                                                                                                                   (void))))
                                                                                                                              (car g$b$11210$1&dy4A))))
                                                                                                                          (cdr g$p$11209$1&dy4A))
                                                                                                                         (void))))
                                                                                                                    (g$assq$5712$1&dy4A
                                                                                                                      g$label$11208$1&dy4A
                                                                                                                      g$export-env$11205$1&dy4A))))
                                                                                                                (car g$s$11206$1&dy4A)
                                                                                                                (cdr g$s$11206$1&dy4A))))
                                                                                                            g$export-subst$11195$1&dy4A)
                                                                                                          ((case-lambda
                                                                                                             ((g$invoke-body$11212$1&dy4A
                                                                                                                g$invoke-definitions$11213$1&dy4A)
                                                                                                              (values
                                                                                                                (g$itc$11137$1&dy4A)
                                                                                                                (g$rtc$11157$1&dy4A)
                                                                                                                (g$vtc$11158$1&dy4A)
                                                                                                                (g$build-sequence$7928$1&dy4A
                                                                                                                  '#f
                                                                                                                  (append
                                                                                                                    g$invoke-definitions$11213$1&dy4A
                                                                                                                    (list
                                                                                                                      g$invoke-body$11212$1&dy4A)))
                                                                                                                g$macro*$11203$1&dy4A
                                                                                                                g$export-subst$11195$1&dy4A
                                                                                                                g$export-env$11205$1&dy4A)))
                                                                                                           (g$build-library-letrec*$7932$1&dy4A
                                                                                                             '#f
                                                                                                             g$name$11132$1&dy4A
                                                                                                             g$lex*$11182$1&dy4A
                                                                                                             g$loc*$11194$1&dy4A
                                                                                                             g$rhs*$11193$1&dy4A
                                                                                                             (if (null?
                                                                                                                   g$init*$11192$1&dy4A)
                                                                                                               (g$build-void$7929$1&dy4A)
                                                                                                               (g$build-sequence$7928$1&dy4A
                                                                                                                 '#f
                                                                                                                 g$init*$11192$1&dy4A)))
                                                                                                           (map g$build-global-define$7924$1&dy4A
                                                                                                                (map cdr
                                                                                                                     g$global*$11204$1&dy4A))))))
                                                                                                     g$macro*$11202$1&dy4A
                                                                                                     g$global*$11201$1&dy4A
                                                                                                     g$export-env$11200$1&dy4A)))))))
                                                                                          (map g$gen-global$7939$1&dy4A
                                                                                               g$lex*$11182$1&dy4A)
                                                                                          (g$make-export-subst$8376$1&dy4A
                                                                                            g$exp-name*$11191$1&dy4A
                                                                                            g$exp-id*$11190$1&dy4A))))))))
                                                                                (g$chi-rhs*$8303$1&dy4A
                                                                                  g$rhs*$11181$1&dy4A
                                                                                  g$r$11184$1&dy4A
                                                                                  g$mr$11183$1&dy4A))))
                                                                            (g$chi-expr*$8293$1&dy4A
                                                                              g$init*$11185$1&dy4A
                                                                              g$r$11184$1&dy4A
                                                                              g$mr$11183$1&dy4A)))))
                                                                      g$exp-id*$11189$1&dy4A
                                                                      g$exp-name*$11188$1&dy4A))))))
                                                             g$internal-exp*$11179$1&dy4A
                                                             g$rhs*$11178$1&dy4A
                                                             g$lex*$11177$1&dy4A
                                                             g$mr$11176$1&dy4A
                                                             g$r$11175$1&dy4A
                                                             g$init*$11174$1&dy4A))))))
                                                    g$swap$11167$1&dy4A)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$11214$1&dy4A)
                                                        (begin
                                                          (g$inv-collector$11163$1&dy4A
                                                            g$inv-collector$11165$1&dy4A)
                                                          (set! g$inv-collector$11165$1&dy4A
                                                            g$t$11214$1&dy4A))))
                                                     (g$inv-collector$11163$1&dy4A))
                                                    ((case-lambda
                                                       ((g$t$11215$1&dy4A)
                                                        (begin
                                                          (g$vis-collector$11164$1&dy4A
                                                            g$vis-collector$11166$1&dy4A)
                                                          (set! g$vis-collector$11166$1&dy4A
                                                            g$t$11215$1&dy4A))))
                                                     (g$vis-collector$11164$1&dy4A))))))))
                                           g$inv-collector$8329$1&dy4A
                                           g$vis-collector$8330$1&dy4A
                                           g$rtc$11157$1&dy4A
                                           g$vtc$11158$1&dy4A)))
                                       (map g$wrap$11154$1&dy4A
                                            g$b*$11135$1&dy4A)
                                       (map g$wrap$11154$1&dy4A
                                            g$main-exp*$11133$1&dy4A)
                                       (g$make-collector$8328$1&dy4A)
                                       (g$make-collector$8328$1&dy4A)))))
                                 (g$make-top-rib$8327$1&dy4A
                                   g$subst-names$11152$1&dy4A
                                   g$subst-labels$11151$1&dy4A))))
                             g$subst-labels$11150$1&dy4A
                             g$subst-names$11149$1&dy4A))))))
                    g$swap$11146$1&dy4A)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$11217$1&dy4A)
                        (begin
                          (g$imp-collector$11142$1&dy4A
                            g$imp-collector$11144$1&dy4A)
                          (set! g$imp-collector$11144$1&dy4A
                            g$t$11217$1&dy4A))))
                     (g$imp-collector$11142$1&dy4A))
                    ((case-lambda
                       ((g$t$11218$1&dy4A)
                        (begin
                          (g$top-level-context$11143$1&dy4A
                            g$top-level-context$11145$1&dy4A)
                          (set! g$top-level-context$11145$1&dy4A
                            g$t$11218$1&dy4A))))
                     (g$top-level-context$11143$1&dy4A))))))))
           g$imp-collector$8331$1&dy4A
           g$top-level-context$8395$1&dy4A
           g$itc$11137$1&dy4A
           '#f)))))
   (g$core-library-expander$8335$1&dy4A
     g$core-library-expander$11826$1&dy4A
     (case-lambda
       ((g$e$11219$1&dy4A g$verify-name$11220$1&dy4A)
        (call-with-values
          (case-lambda (() (g$parse-library$8325$1&dy4A g$e$11219$1&dy4A)))
          (case-lambda
            ((g$name*$11225$1&dy4A
               g$exp*$11226$1&dy4A
               g$imp*$11227$1&dy4A
               g$b*$11228$1&dy4A)
             ((case-lambda
                ((g$b*$11229$1&dy4A
                   g$imp*$11230$1&dy4A
                   g$exp*$11231$1&dy4A
                   g$name*$11232$1&dy4A)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$8324$1&dy4A g$name*$11232$1&dy4A)))
                   (case-lambda
                     ((g$name$11235$1&dy4A g$ver$11236$1&dy4A)
                      ((case-lambda
                         ((g$ver$11237$1&dy4A g$name$11238$1&dy4A)
                          (begin
                            (g$verify-name$11220$1&dy4A g$name$11238$1&dy4A)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8334$1&dy4A
                                   g$name$11238$1&dy4A
                                   g$exp*$11231$1&dy4A
                                   g$imp*$11230$1&dy4A
                                   g$b*$11229$1&dy4A
                                   '#f)))
                              (case-lambda
                                ((g$imp*$11246$1&dy4A
                                   g$invoke-req*$11247$1&dy4A
                                   g$visit-req*$11248$1&dy4A
                                   g$invoke-code$11249$1&dy4A
                                   g$visit-code$11250$1&dy4A
                                   g$export-subst$11251$1&dy4A
                                   g$export-env$11252$1&dy4A)
                                 ((case-lambda
                                    ((g$export-env$11253$1&dy4A
                                       g$export-subst$11254$1&dy4A
                                       g$visit-code$11255$1&dy4A
                                       g$invoke-code$11256$1&dy4A
                                       g$visit-req*$11257$1&dy4A
                                       g$invoke-req*$11258$1&dy4A
                                       g$imp*$11259$1&dy4A)
                                     (values
                                       g$name$11238$1&dy4A
                                       g$ver$11237$1&dy4A
                                       g$imp*$11259$1&dy4A
                                       g$invoke-req*$11258$1&dy4A
                                       g$visit-req*$11257$1&dy4A
                                       g$invoke-code$11256$1&dy4A
                                       g$visit-code$11255$1&dy4A
                                       g$export-subst$11254$1&dy4A
                                       g$export-env$11253$1&dy4A)))
                                  g$export-env$11252$1&dy4A
                                  g$export-subst$11251$1&dy4A
                                  g$visit-code$11250$1&dy4A
                                  g$invoke-code$11249$1&dy4A
                                  g$visit-req*$11248$1&dy4A
                                  g$invoke-req*$11247$1&dy4A
                                  g$imp*$11246$1&dy4A)))))))
                       g$ver$11236$1&dy4A
                       g$name$11235$1&dy4A))))))
              g$b*$11228$1&dy4A
              g$imp*$11227$1&dy4A
              g$exp*$11226$1&dy4A
              g$name*$11225$1&dy4A)))))))
   (g$parse-top-level-program$8336$1&dy4A
     g$parse-top-level-program$11827$1&dy4A
     (case-lambda
       ((g$e*$11260$1&dy4A)
        ((case-lambda
           ((g$t$11261$1&dy4A)
            ((case-lambda
               ((g$ls/false$11262$1&dy4A)
                (if (if g$ls/false$11262$1&dy4A
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$11263$1&dy4A
                               g$imp*$11264$1&dy4A
                               g$b*$11265$1&dy4A)
                             (eq? (g$syntax->datum$8391$1&dy4A
                                    g$import$11263$1&dy4A)
                                  'import)))
                          g$ls/false$11262$1&dy4A))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$11266$1&dy4A
                         g$imp*$11267$1&dy4A
                         g$b*$11268$1&dy4A)
                       (values g$imp*$11267$1&dy4A g$b*$11268$1&dy4A)))
                    g$ls/false$11262$1&dy4A)
                  ((case-lambda
                     ((g$t$11269$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$11270$1&dy4A)
                          (if (if g$ls/false$11270$1&dy4A
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$11271$1&dy4A
                                         g$x$11272$1&dy4A
                                         g$y$11273$1&dy4A)
                                       (eq? (g$syntax->datum$8391$1&dy4A
                                              g$import$11271$1&dy4A)
                                            'import)))
                                    g$ls/false$11270$1&dy4A))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$11274$1&dy4A
                                   g$x$11275$1&dy4A
                                   g$y$11276$1&dy4A)
                                 (g$syntax-violation$8388$1&dy4A
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7996$1&dy4A
                                     g$e*$11260$1&dy4A))))
                              g$ls/false$11270$1&dy4A)
                            ((case-lambda
                               ((g$t$11277$1&dy4A)
                                ((case-lambda
                                   ((g$ls/false$11278$1&dy4A)
                                    (if g$ls/false$11278$1&dy4A
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$11278$1&dy4A)
                                      (g$syntax-violation$8388$1&dy4A
                                        '#f
                                        '"invalid syntax"
                                        g$t$11277$1&dy4A))))
                                 (g$syntax-dispatch$8277$1&dy4A
                                   g$t$11277$1&dy4A
                                   '_))))
                             g$t$11269$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A
                         g$t$11269$1&dy4A
                         '((any . any) . any)))))
                   g$t$11261$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A
               g$t$11261$1&dy4A
               '((any . each-any) . each-any)))))
         g$e*$11260$1&dy4A))))
   (g$top-level-expander$8337$1&dy4A
     g$top-level-expander$11828$1&dy4A
     (case-lambda
       ((g$e*$11279$1&dy4A)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8336$1&dy4A g$e*$11279$1&dy4A)))
          (case-lambda
            ((g$imp*$11282$1&dy4A g$b*$11283$1&dy4A)
             ((case-lambda
                ((g$b*$11284$1&dy4A g$imp*$11285$1&dy4A)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8334$1&dy4A
                        '()
                        '()
                        g$imp*$11285$1&dy4A
                        g$b*$11284$1&dy4A
                        '#t)))
                   (case-lambda
                     ((g$imp*$11293$1&dy4A
                        g$invoke-req*$11294$1&dy4A
                        g$visit-req*$11295$1&dy4A
                        g$invoke-code$11296$1&dy4A
                        g$visit-code$11297$1&dy4A
                        g$export-subst$11298$1&dy4A
                        g$export-env$11299$1&dy4A)
                      ((case-lambda
                         ((g$export-env$11300$1&dy4A
                            g$export-subst$11301$1&dy4A
                            g$visit-code$11302$1&dy4A
                            g$invoke-code$11303$1&dy4A
                            g$visit-req*$11304$1&dy4A
                            g$invoke-req*$11305$1&dy4A
                            g$imp*$11306$1&dy4A)
                          (values
                            g$invoke-req*$11305$1&dy4A
                            g$invoke-code$11303$1&dy4A)))
                       g$export-env$11299$1&dy4A
                       g$export-subst$11298$1&dy4A
                       g$visit-code$11297$1&dy4A
                       g$invoke-code$11296$1&dy4A
                       g$visit-req*$11295$1&dy4A
                       g$invoke-req*$11294$1&dy4A
                       g$imp*$11293$1&dy4A))))))
              g$b*$11283$1&dy4A
              g$imp*$11282$1&dy4A)))))))
   (g$9470$8338$1&dy4A
     g$9470$11829$1&dy4A
     (make-record-type-descriptor
       'env
       '#f
       'g$9473$1&dy4A
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9472$8339$1&dy4A g$9472$11830$1&dy4A '#f)
   (g$9471$8340$1&dy4A
     g$9471$11831$1&dy4A
     (make-record-constructor-descriptor
       g$9470$8338$1&dy4A
       '#f
       g$9472$8339$1&dy4A))
   (g$env?$8341$1&dy4A
     g$env?$11832$1&dy4A
     (record-predicate g$9470$8338$1&dy4A))
   (g$make-env$8342$1&dy4A
     g$make-env$11833$1&dy4A
     (record-constructor g$9471$8340$1&dy4A))
   (g$env-names$8343$1&dy4A
     g$env-names$11834$1&dy4A
     (record-accessor g$9470$8338$1&dy4A '0))
   (g$env-labels$8344$1&dy4A
     g$env-labels$11835$1&dy4A
     (record-accessor g$9470$8338$1&dy4A '1))
   (g$env-itc$8345$1&dy4A
     g$env-itc$11836$1&dy4A
     (record-accessor g$9470$8338$1&dy4A '2))
   (g$set-env-names!$8346$1&dy4A
     g$set-env-names!$11837$1&dy4A
     (record-mutator g$9470$8338$1&dy4A '0))
   (g$set-env-labels!$8347$1&dy4A
     g$set-env-labels!$11838$1&dy4A
     (record-mutator g$9470$8338$1&dy4A '1))
   (g$set-env-itc!$8348$1&dy4A
     g$set-env-itc!$11839$1&dy4A
     (record-mutator g$9470$8338$1&dy4A '2))
   (g$rp$8349$1&dy4A
     g$rp$11840$1&dy4A
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11307$1&dy4A g$p$11308$1&dy4A g$wr$11309$1&dy4A)
          (display '"#<environment>" g$p$11308$1&dy4A)))))
   (g$9489$8350$1&dy4A
     g$9489$11841$1&dy4A
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9492$1&dy4A
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9491$8351$1&dy4A g$9491$11842$1&dy4A '#f)
   (g$9490$8352$1&dy4A
     g$9490$11843$1&dy4A
     (make-record-constructor-descriptor
       g$9489$8350$1&dy4A
       '#f
       g$9491$8351$1&dy4A))
   (g$interaction-env?$8353$1&dy4A
     g$interaction-env?$11844$1&dy4A
     (record-predicate g$9489$8350$1&dy4A))
   (g$make-interaction-env$8354$1&dy4A
     g$make-interaction-env$11845$1&dy4A
     (record-constructor g$9490$8352$1&dy4A))
   (g$interaction-env-rib$8355$1&dy4A
     g$interaction-env-rib$11846$1&dy4A
     (record-accessor g$9489$8350$1&dy4A '0))
   (g$interaction-env-r$8356$1&dy4A
     g$interaction-env-r$11847$1&dy4A
     (record-accessor g$9489$8350$1&dy4A '1))
   (g$interaction-env-locs$8357$1&dy4A
     g$interaction-env-locs$11848$1&dy4A
     (record-accessor g$9489$8350$1&dy4A '2))
   (g$set-interaction-env-rib!$8358$1&dy4A
     g$set-interaction-env-rib!$11849$1&dy4A
     (record-mutator g$9489$8350$1&dy4A '0))
   (g$set-interaction-env-r!$8359$1&dy4A
     g$set-interaction-env-r!$11850$1&dy4A
     (record-mutator g$9489$8350$1&dy4A '1))
   (g$set-interaction-env-locs!$8360$1&dy4A
     g$set-interaction-env-locs!$11851$1&dy4A
     (record-mutator g$9489$8350$1&dy4A '2))
   (g$rp$8361$1&dy4A
     g$rp$11852$1&dy4A
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11310$1&dy4A g$p$11311$1&dy4A g$wr$11312$1&dy4A)
          (display '"#<environment>" g$p$11311$1&dy4A)))))
   (g$interaction-environment-symbols$8362$1&dy4A
     g$interaction-environment-symbols$11853$1&dy4A
     (case-lambda
       (()
        (g$environment-symbols$8366$1&dy4A
          (g$interaction-environment$8394$1&dy4A)))))
   (g$environment-bindings$8363$1&dy4A
     g$environment-bindings$11854$1&dy4A
     (case-lambda
       ((g$e$11313$1&dy4A)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$11314$1&dy4A g$label$11315$1&dy4A)
               (g$parse-binding$8364$1&dy4A
                 (cons
                   g$name$11314$1&dy4A
                   (g$imported-label->binding$7808$1&dy4A
                     g$label$11315$1&dy4A)))))
            (g$env-names$8343$1&dy4A g$e$11313$1&dy4A)
            (g$env-labels$8344$1&dy4A g$e$11313$1&dy4A))))))
   (g$parse-binding$8364$1&dy4A
     g$parse-binding$11855$1&dy4A
     (case-lambda
       ((g$b$11316$1&dy4A)
        (cons
          (car g$b$11316$1&dy4A)
          ((case-lambda
             ((g$t$11317$1&dy4A)
              (if (g$memv$5717$1&dy4A g$t$11317$1&dy4A '(core-prim global))
                'procedure
                (if (g$memv$5717$1&dy4A
                      g$t$11317$1&dy4A
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$5717$1&dy4A g$t$11317$1&dy4A '($core-rtd))
                    'record
                    (if (eq? (car g$b$11316$1&dy4A)
                             (g$cadr$5886$1&dy4A g$b$11316$1&dy4A))
                      'syntax
                      'unknown))))))
           (g$cadr$5886$1&dy4A g$b$11316$1&dy4A))))))
   (g$environment?$8365$1&dy4A
     g$environment?$11856$1&dy4A
     (case-lambda
       ((g$x$11318$1&dy4A)
        ((case-lambda
           ((g$t$11319$1&dy4A)
            (if g$t$11319$1&dy4A
              g$t$11319$1&dy4A
              (begin '#f (g$interaction-env?$8353$1&dy4A g$x$11318$1&dy4A)))))
         (g$env?$8341$1&dy4A g$x$11318$1&dy4A)))))
   (g$environment-symbols$8366$1&dy4A
     g$environment-symbols$11857$1&dy4A
     (case-lambda
       ((g$x$11320$1&dy4A)
        (if (g$env?$8341$1&dy4A g$x$11320$1&dy4A)
          (vector->list (g$env-names$8343$1&dy4A g$x$11320$1&dy4A))
          (if (g$interaction-env?$8353$1&dy4A g$x$11320$1&dy4A)
            (map values
                 (g$rib-sym*$7949$1&dy4A
                   (g$interaction-env-rib$8355$1&dy4A g$x$11320$1&dy4A)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$11320$1&dy4A))))))
   (g$environment$8367$1&dy4A
     g$environment$11858$1&dy4A
     (case-lambda
       (g$imp*$11321$1&dy4A
        ((case-lambda
           ((g$itc$11322$1&dy4A)
            ((case-lambda
               ((g$imp-collector$11325$1&dy4A g$imp-collector$11326$1&dy4A)
                ((case-lambda
                   ((g$swap$11327$1&dy4A)
                    (dynamic-wind
                      g$swap$11327$1&dy4A
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8326$1&dy4A
                                g$imp*$11321$1&dy4A)))
                           (case-lambda
                             ((g$subst-names$11330$1&dy4A
                                g$subst-labels$11331$1&dy4A)
                              ((case-lambda
                                 ((g$subst-labels$11332$1&dy4A
                                    g$subst-names$11333$1&dy4A)
                                  (g$make-env$8342$1&dy4A
                                    g$subst-names$11333$1&dy4A
                                    g$subst-labels$11332$1&dy4A
                                    g$itc$11322$1&dy4A)))
                               g$subst-labels$11331$1&dy4A
                               g$subst-names$11330$1&dy4A))))))
                      g$swap$11327$1&dy4A)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11334$1&dy4A)
                        (begin
                          (g$imp-collector$11325$1&dy4A
                            g$imp-collector$11326$1&dy4A)
                          (set! g$imp-collector$11326$1&dy4A
                            g$t$11334$1&dy4A))))
                     (g$imp-collector$11325$1&dy4A)))))))
             g$imp-collector$8331$1&dy4A
             g$itc$11322$1&dy4A)))
         (g$make-collector$8328$1&dy4A)))))
   (g$null-environment$8368$1&dy4A
     g$null-environment$11859$1&dy4A
     (case-lambda
       ((g$n$11335$1&dy4A)
        (begin
          (if (not (eqv? g$n$11335$1&dy4A '5))
            (assertion-violation 'null-environment '"not 5" g$n$11335$1&dy4A)
            (void))
          (g$environment$8367$1&dy4A '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8369$1&dy4A
     g$scheme-report-environment$11860$1&dy4A
     (case-lambda
       ((g$n$11336$1&dy4A)
        (begin
          (if (not (eqv? g$n$11336$1&dy4A '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11336$1&dy4A)
            (void))
          (g$environment$8367$1&dy4A '(psyntax scheme-report-environment-5))))))
   (g$expand$8370$1&dy4A
     g$expand$11861$1&dy4A
     (case-lambda
       ((g$x$11337$1&dy4A g$env$11338$1&dy4A)
        (if (g$env?$8341$1&dy4A g$env$11338$1&dy4A)
          ((case-lambda
             ((g$rib$11339$1&dy4A)
              ((case-lambda
                 ((g$x$11340$1&dy4A
                    g$itc$11341$1&dy4A
                    g$rtc$11342$1&dy4A
                    g$vtc$11343$1&dy4A)
                  ((case-lambda
                     ((g$x$11344$1&dy4A)
                      (begin
                        (g$seal-rib!$7965$1&dy4A g$rib$11339$1&dy4A)
                        (values g$x$11344$1&dy4A (g$rtc$11342$1&dy4A)))))
                   ((case-lambda
                      ((g$top-level-context$11353$1&dy4A
                         g$inv-collector$11354$1&dy4A
                         g$vis-collector$11355$1&dy4A
                         g$imp-collector$11356$1&dy4A
                         g$top-level-context$11357$1&dy4A
                         g$inv-collector$11358$1&dy4A
                         g$vis-collector$11359$1&dy4A
                         g$imp-collector$11360$1&dy4A)
                       ((case-lambda
                          ((g$swap$11361$1&dy4A)
                           (dynamic-wind
                             g$swap$11361$1&dy4A
                             (case-lambda
                               (()
                                (g$chi-expr$8295$1&dy4A
                                  g$x$11340$1&dy4A
                                  '()
                                  '())))
                             g$swap$11361$1&dy4A)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11362$1&dy4A)
                                 (begin
                                   (g$top-level-context$11353$1&dy4A
                                     g$top-level-context$11357$1&dy4A)
                                   (set! g$top-level-context$11357$1&dy4A
                                     g$t$11362$1&dy4A))))
                              (g$top-level-context$11353$1&dy4A))
                             ((case-lambda
                                ((g$t$11363$1&dy4A)
                                 (begin
                                   (g$inv-collector$11354$1&dy4A
                                     g$inv-collector$11358$1&dy4A)
                                   (set! g$inv-collector$11358$1&dy4A
                                     g$t$11363$1&dy4A))))
                              (g$inv-collector$11354$1&dy4A))
                             ((case-lambda
                                ((g$t$11364$1&dy4A)
                                 (begin
                                   (g$vis-collector$11355$1&dy4A
                                     g$vis-collector$11359$1&dy4A)
                                   (set! g$vis-collector$11359$1&dy4A
                                     g$t$11364$1&dy4A))))
                              (g$vis-collector$11355$1&dy4A))
                             ((case-lambda
                                ((g$t$11365$1&dy4A)
                                 (begin
                                   (g$imp-collector$11356$1&dy4A
                                     g$imp-collector$11360$1&dy4A)
                                   (set! g$imp-collector$11360$1&dy4A
                                     g$t$11365$1&dy4A))))
                              (g$imp-collector$11356$1&dy4A))))))))
                    g$top-level-context$8395$1&dy4A
                    g$inv-collector$8329$1&dy4A
                    g$vis-collector$8330$1&dy4A
                    g$imp-collector$8331$1&dy4A
                    '#f
                    g$rtc$11342$1&dy4A
                    g$vtc$11343$1&dy4A
                    g$itc$11341$1&dy4A))))
               (g$make-stx$7972$1&dy4A
                 g$x$11337$1&dy4A
                 g$top-mark*$7936$1&dy4A
                 (list g$rib$11339$1&dy4A)
                 '())
               (g$env-itc$8345$1&dy4A g$env$11338$1&dy4A)
               (g$make-collector$8328$1&dy4A)
               (g$make-collector$8328$1&dy4A))))
           (g$make-top-rib$8327$1&dy4A
             (g$env-names$8343$1&dy4A g$env$11338$1&dy4A)
             (g$env-labels$8344$1&dy4A g$env$11338$1&dy4A)))
          (if (g$interaction-env?$8353$1&dy4A g$env$11338$1&dy4A)
            ((case-lambda
               ((g$rib$11366$1&dy4A g$r$11367$1&dy4A g$rtc$11368$1&dy4A)
                ((case-lambda
                   ((g$x$11369$1&dy4A)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11380$1&dy4A
                               g$inv-collector$11381$1&dy4A
                               g$vis-collector$11382$1&dy4A
                               g$imp-collector$11383$1&dy4A
                               g$top-level-context$11384$1&dy4A
                               g$inv-collector$11385$1&dy4A
                               g$vis-collector$11386$1&dy4A
                               g$imp-collector$11387$1&dy4A)
                             ((case-lambda
                                ((g$swap$11388$1&dy4A)
                                 (dynamic-wind
                                   g$swap$11388$1&dy4A
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8333$1&dy4A
                                        g$x$11369$1&dy4A
                                        g$rib$11366$1&dy4A
                                        g$r$11367$1&dy4A)))
                                   g$swap$11388$1&dy4A)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11389$1&dy4A)
                                       (begin
                                         (g$top-level-context$11380$1&dy4A
                                           g$top-level-context$11384$1&dy4A)
                                         (set! g$top-level-context$11384$1&dy4A
                                           g$t$11389$1&dy4A))))
                                    (g$top-level-context$11380$1&dy4A))
                                   ((case-lambda
                                      ((g$t$11390$1&dy4A)
                                       (begin
                                         (g$inv-collector$11381$1&dy4A
                                           g$inv-collector$11385$1&dy4A)
                                         (set! g$inv-collector$11385$1&dy4A
                                           g$t$11390$1&dy4A))))
                                    (g$inv-collector$11381$1&dy4A))
                                   ((case-lambda
                                      ((g$t$11391$1&dy4A)
                                       (begin
                                         (g$vis-collector$11382$1&dy4A
                                           g$vis-collector$11386$1&dy4A)
                                         (set! g$vis-collector$11386$1&dy4A
                                           g$t$11391$1&dy4A))))
                                    (g$vis-collector$11382$1&dy4A))
                                   ((case-lambda
                                      ((g$t$11392$1&dy4A)
                                       (begin
                                         (g$imp-collector$11383$1&dy4A
                                           g$imp-collector$11387$1&dy4A)
                                         (set! g$imp-collector$11387$1&dy4A
                                           g$t$11392$1&dy4A))))
                                    (g$imp-collector$11383$1&dy4A))))))))
                          g$top-level-context$8395$1&dy4A
                          g$inv-collector$8329$1&dy4A
                          g$vis-collector$8330$1&dy4A
                          g$imp-collector$8331$1&dy4A
                          g$env$11338$1&dy4A
                          g$rtc$11368$1&dy4A
                          (g$make-collector$8328$1&dy4A)
                          (g$make-collector$8328$1&dy4A))))
                      (case-lambda
                        ((g$e$11393$1&dy4A g$r^$11394$1&dy4A)
                         ((case-lambda
                            ((g$r^$11395$1&dy4A g$e$11396$1&dy4A)
                             (begin
                               (g$set-interaction-env-r!$8359$1&dy4A
                                 g$env$11338$1&dy4A
                                 g$r^$11395$1&dy4A)
                               (values g$e$11396$1&dy4A (g$rtc$11368$1&dy4A)))))
                          g$r^$11394$1&dy4A
                          g$e$11393$1&dy4A))))))
                 (g$make-stx$7972$1&dy4A
                   g$x$11337$1&dy4A
                   g$top-mark*$7936$1&dy4A
                   (list g$rib$11366$1&dy4A)
                   '()))))
             (g$interaction-env-rib$8355$1&dy4A g$env$11338$1&dy4A)
             (g$interaction-env-r$8356$1&dy4A g$env$11338$1&dy4A)
             (g$make-collector$8328$1&dy4A))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11338$1&dy4A))))))
   (g$eval$8371$1&dy4A
     g$eval$11862$1&dy4A
     (case-lambda
       ((g$x$11397$1&dy4A g$env$11398$1&dy4A)
        (begin
          (if (not (g$environment?$8365$1&dy4A g$env$11398$1&dy4A))
            (error 'eval '"not an environment" g$env$11398$1&dy4A)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8370$1&dy4A g$x$11397$1&dy4A g$env$11398$1&dy4A)))
            (case-lambda
              ((g$x$11401$1&dy4A g$invoke-req*$11402$1&dy4A)
               ((case-lambda
                  ((g$invoke-req*$11403$1&dy4A g$x$11404$1&dy4A)
                   (begin
                     (for-each
                       g$invoke-library$7809$1&dy4A
                       g$invoke-req*$11403$1&dy4A)
                     (eval-core
                       (g$expanded->core$7517$1&dy4A g$x$11404$1&dy4A)))))
                g$invoke-req*$11402$1&dy4A
                g$x$11401$1&dy4A))))))))
   (g$library-expander$8372$1&dy4A
     g$library-expander$11863$1&dy4A
     (case-lambda
       ((g$x$11405$1&dy4A g$filename$11406$1&dy4A g$verify-name$11407$1&dy4A)
        (letrec* ((g$build-visit-code$11408$1&dy4A
                    (case-lambda
                      ((g$macro*$11451$1&dy4A)
                       (if (null? g$macro*$11451$1&dy4A)
                         (g$build-void$7929$1&dy4A)
                         (g$build-sequence$7928$1&dy4A
                           '#f
                           (map (case-lambda
                                  ((g$x$11452$1&dy4A)
                                   ((case-lambda
                                      ((g$loc$11453$1&dy4A g$src$11454$1&dy4A)
                                       (list
                                         'set!
                                         g$loc$11453$1&dy4A
                                         g$src$11454$1&dy4A)))
                                    (car g$x$11452$1&dy4A)
                                    (g$cddr$5888$1&dy4A g$x$11452$1&dy4A))))
                                g$macro*$11451$1&dy4A))))))
                  (g$visit!$11409$1&dy4A
                    (case-lambda
                      ((g$macro*$11447$1&dy4A)
                       (for-each
                         (case-lambda
                           ((g$x$11448$1&dy4A)
                            ((case-lambda
                               ((g$loc$11449$1&dy4A g$proc$11450$1&dy4A)
                                (set-symbol-value!
                                  g$loc$11449$1&dy4A
                                  g$proc$11450$1&dy4A)))
                             (car g$x$11448$1&dy4A)
                             (g$cadr$5886$1&dy4A g$x$11448$1&dy4A))))
                         g$macro*$11447$1&dy4A)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8335$1&dy4A
                 g$x$11405$1&dy4A
                 g$verify-name$11407$1&dy4A)))
            (case-lambda
              ((g$name$11419$1&dy4A
                 g$ver$11420$1&dy4A
                 g$imp*$11421$1&dy4A
                 g$inv*$11422$1&dy4A
                 g$vis*$11423$1&dy4A
                 g$invoke-code$11424$1&dy4A
                 g$macro*$11425$1&dy4A
                 g$export-subst$11426$1&dy4A
                 g$export-env$11427$1&dy4A)
               ((case-lambda
                  ((g$export-env$11428$1&dy4A
                     g$export-subst$11429$1&dy4A
                     g$macro*$11430$1&dy4A
                     g$invoke-code$11431$1&dy4A
                     g$vis*$11432$1&dy4A
                     g$inv*$11433$1&dy4A
                     g$imp*$11434$1&dy4A
                     g$ver$11435$1&dy4A
                     g$name$11436$1&dy4A)
                   ((case-lambda
                      ((g$id$11437$1&dy4A
                         g$name$11438$1&dy4A
                         g$ver$11439$1&dy4A
                         g$imp*$11440$1&dy4A
                         g$vis*$11441$1&dy4A
                         g$inv*$11442$1&dy4A
                         g$visit-proc$11443$1&dy4A
                         g$invoke-proc$11444$1&dy4A
                         g$visit-code$11445$1&dy4A
                         g$invoke-code$11446$1&dy4A)
                       (begin
                         (g$install-library$7807$1&dy4A
                           g$id$11437$1&dy4A
                           g$name$11438$1&dy4A
                           g$ver$11439$1&dy4A
                           g$imp*$11440$1&dy4A
                           g$vis*$11441$1&dy4A
                           g$inv*$11442$1&dy4A
                           g$export-subst$11429$1&dy4A
                           g$export-env$11428$1&dy4A
                           g$visit-proc$11443$1&dy4A
                           g$invoke-proc$11444$1&dy4A
                           g$visit-code$11445$1&dy4A
                           g$invoke-code$11446$1&dy4A
                           '#t
                           g$filename$11406$1&dy4A)
                         (values
                           g$id$11437$1&dy4A
                           g$name$11438$1&dy4A
                           g$ver$11439$1&dy4A
                           g$imp*$11440$1&dy4A
                           g$vis*$11441$1&dy4A
                           g$inv*$11442$1&dy4A
                           g$invoke-code$11446$1&dy4A
                           g$visit-code$11445$1&dy4A
                           g$export-subst$11429$1&dy4A
                           g$export-env$11428$1&dy4A))))
                    (gensym)
                    g$name$11436$1&dy4A
                    g$ver$11435$1&dy4A
                    (map g$library-spec$7813$1&dy4A g$imp*$11434$1&dy4A)
                    (map g$library-spec$7813$1&dy4A g$vis*$11432$1&dy4A)
                    (map g$library-spec$7813$1&dy4A g$inv*$11433$1&dy4A)
                    (case-lambda
                      (() (g$visit!$11409$1&dy4A g$macro*$11430$1&dy4A)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7517$1&dy4A
                           g$invoke-code$11431$1&dy4A))))
                    (g$build-visit-code$11408$1&dy4A g$macro*$11430$1&dy4A)
                    g$invoke-code$11431$1&dy4A)))
                g$export-env$11427$1&dy4A
                g$export-subst$11426$1&dy4A
                g$macro*$11425$1&dy4A
                g$invoke-code$11424$1&dy4A
                g$vis*$11423$1&dy4A
                g$inv*$11422$1&dy4A
                g$imp*$11421$1&dy4A
                g$ver$11420$1&dy4A
                g$name$11419$1&dy4A))))))
       ((g$x$11455$1&dy4A g$filename$11456$1&dy4A)
        (g$library-expander$8372$1&dy4A
          g$x$11455$1&dy4A
          g$filename$11456$1&dy4A
          (case-lambda ((g$x$11457$1&dy4A) (values)))))
       ((g$x$11458$1&dy4A)
        (g$library-expander$8372$1&dy4A
          g$x$11458$1&dy4A
          '#f
          (case-lambda ((g$x$11459$1&dy4A) (values)))))))
   (g$boot-library-expand$8373$1&dy4A
     g$boot-library-expand$11864$1&dy4A
     (case-lambda
       ((g$x$11460$1&dy4A)
        (call-with-values
          (case-lambda (() (g$library-expander$8372$1&dy4A g$x$11460$1&dy4A)))
          (case-lambda
            ((g$id$11471$1&dy4A
               g$name$11472$1&dy4A
               g$ver$11473$1&dy4A
               g$imp*$11474$1&dy4A
               g$vis*$11475$1&dy4A
               g$inv*$11476$1&dy4A
               g$invoke-code$11477$1&dy4A
               g$visit-code$11478$1&dy4A
               g$export-subst$11479$1&dy4A
               g$export-env$11480$1&dy4A)
             ((case-lambda
                ((g$export-env$11481$1&dy4A
                   g$export-subst$11482$1&dy4A
                   g$visit-code$11483$1&dy4A
                   g$invoke-code$11484$1&dy4A
                   g$inv*$11485$1&dy4A
                   g$vis*$11486$1&dy4A
                   g$imp*$11487$1&dy4A
                   g$ver$11488$1&dy4A
                   g$name$11489$1&dy4A
                   g$id$11490$1&dy4A)
                 (values
                   g$name$11489$1&dy4A
                   g$invoke-code$11484$1&dy4A
                   g$export-subst$11482$1&dy4A
                   g$export-env$11481$1&dy4A)))
              g$export-env$11480$1&dy4A
              g$export-subst$11479$1&dy4A
              g$visit-code$11478$1&dy4A
              g$invoke-code$11477$1&dy4A
              g$inv*$11476$1&dy4A
              g$vis*$11475$1&dy4A
              g$imp*$11474$1&dy4A
              g$ver$11473$1&dy4A
              g$name$11472$1&dy4A
              g$id$11471$1&dy4A)))))))
   (g$rev-map-append$8374$1&dy4A
     g$rev-map-append$11865$1&dy4A
     (case-lambda
       ((g$f$11491$1&dy4A g$ls$11492$1&dy4A g$ac$11493$1&dy4A)
        (if (null? g$ls$11492$1&dy4A)
          g$ac$11493$1&dy4A
          (g$rev-map-append$8374$1&dy4A
            g$f$11491$1&dy4A
            (cdr g$ls$11492$1&dy4A)
            (cons
              (g$f$11491$1&dy4A (car g$ls$11492$1&dy4A))
              g$ac$11493$1&dy4A))))))
   (g$build-exports$8375$1&dy4A
     g$build-exports$11866$1&dy4A
     (case-lambda
       ((g$lex*+loc*$11494$1&dy4A g$init*$11495$1&dy4A)
        (g$build-sequence$7928$1&dy4A
          '#f
          (cons
            (g$build-void$7929$1&dy4A)
            (g$rev-map-append$8374$1&dy4A
              (case-lambda
                ((g$x$11496$1&dy4A)
                 (list 'set! (cdr g$x$11496$1&dy4A) (car g$x$11496$1&dy4A))))
              g$lex*+loc*$11494$1&dy4A
              g$init*$11495$1&dy4A))))))
   (g$make-export-subst$8376$1&dy4A
     g$make-export-subst$11867$1&dy4A
     (case-lambda
       ((g$name*$11497$1&dy4A g$id*$11498$1&dy4A)
        (map (case-lambda
               ((g$name$11499$1&dy4A g$id$11500$1&dy4A)
                ((case-lambda
                   ((g$label$11501$1&dy4A)
                    (begin
                      (if (not g$label$11501$1&dy4A)
                        (g$syntax-violation$8388$1&dy4A
                          '#f
                          '"cannot export unbound identifier"
                          g$id$11500$1&dy4A)
                        (void))
                      (cons g$name$11499$1&dy4A g$label$11501$1&dy4A))))
                 (g$id->label$8012$1&dy4A g$id$11500$1&dy4A))))
             g$name*$11497$1&dy4A
             g$id*$11498$1&dy4A))))
   (g$make-export-env/macros$8377$1&dy4A
     g$make-export-env/macros$11868$1&dy4A
     (case-lambda
       ((g$lex*$11502$1&dy4A g$loc*$11503$1&dy4A g$r$11504$1&dy4A)
        (letrec* ((g$lookup$11505$1&dy4A
                    (case-lambda
                      ((g$x$11520$1&dy4A)
                       ((letrec ((g$f$11521$1&dy4A
                                   (case-lambda
                                     ((g$x$11522$1&dy4A
                                        g$lex*$11523$1&dy4A
                                        g$loc*$11524$1&dy4A)
                                      (if (pair? g$lex*$11523$1&dy4A)
                                        (if (eq? g$x$11522$1&dy4A
                                                 (car g$lex*$11523$1&dy4A))
                                          (car g$loc*$11524$1&dy4A)
                                          (g$f$11521$1&dy4A
                                            g$x$11522$1&dy4A
                                            (cdr g$lex*$11523$1&dy4A)
                                            (cdr g$loc*$11524$1&dy4A)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11521$1&dy4A)
                        g$x$11520$1&dy4A
                        g$lex*$11502$1&dy4A
                        g$loc*$11503$1&dy4A)))))
          ((letrec ((g$f$11506$1&dy4A
                      (case-lambda
                        ((g$r$11507$1&dy4A
                           g$env$11508$1&dy4A
                           g$global*$11509$1&dy4A
                           g$macro*$11510$1&dy4A)
                         (if (null? g$r$11507$1&dy4A)
                           (values
                             g$env$11508$1&dy4A
                             g$global*$11509$1&dy4A
                             g$macro*$11510$1&dy4A)
                           ((case-lambda
                              ((g$x$11511$1&dy4A)
                               ((case-lambda
                                  ((g$label$11512$1&dy4A g$b$11513$1&dy4A)
                                   ((case-lambda
                                      ((g$t$11514$1&dy4A)
                                       (if (g$memv$5717$1&dy4A
                                             g$t$11514$1&dy4A
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$11515$1&dy4A)
                                             ((case-lambda
                                                ((g$loc$11516$1&dy4A
                                                   g$type$11517$1&dy4A)
                                                 (g$f$11506$1&dy4A
                                                   (cdr g$r$11507$1&dy4A)
                                                   (cons
                                                     (g$cons*$5724$1&dy4A
                                                       g$label$11512$1&dy4A
                                                       g$type$11517$1&dy4A
                                                       g$loc$11516$1&dy4A)
                                                     g$env$11508$1&dy4A)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$8221$1&dy4A
                                                         g$v$11515$1&dy4A)
                                                       g$loc$11516$1&dy4A)
                                                     g$global*$11509$1&dy4A)
                                                   g$macro*$11510$1&dy4A)))
                                              (g$lookup$11505$1&dy4A
                                                (g$lexical-var$8221$1&dy4A
                                                  g$v$11515$1&dy4A))
                                              (if (g$lexical-mutable?$8222$1&dy4A
                                                    g$v$11515$1&dy4A)
                                                'mutable
                                                'global))))
                                          (g$binding-value$8017$1&dy4A
                                            g$b$11513$1&dy4A))
                                         (if (g$memv$5717$1&dy4A
                                               g$t$11514$1&dy4A
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$11518$1&dy4A)
                                               (g$f$11506$1&dy4A
                                                 (cdr g$r$11507$1&dy4A)
                                                 (cons
                                                   (g$cons*$5724$1&dy4A
                                                     g$label$11512$1&dy4A
                                                     'global-macro
                                                     g$loc$11518$1&dy4A)
                                                   g$env$11508$1&dy4A)
                                                 g$global*$11509$1&dy4A
                                                 (cons
                                                   (cons
                                                     g$loc$11518$1&dy4A
                                                     (g$binding-value$8017$1&dy4A
                                                       g$b$11513$1&dy4A))
                                                   g$macro*$11510$1&dy4A))))
                                            (gensym))
                                           (if (g$memv$5717$1&dy4A
                                                 g$t$11514$1&dy4A
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$11519$1&dy4A)
                                                 (g$f$11506$1&dy4A
                                                   (cdr g$r$11507$1&dy4A)
                                                   (cons
                                                     (g$cons*$5724$1&dy4A
                                                       g$label$11512$1&dy4A
                                                       'global-macro!
                                                       g$loc$11519$1&dy4A)
                                                     g$env$11508$1&dy4A)
                                                   g$global*$11509$1&dy4A
                                                   (cons
                                                     (cons
                                                       g$loc$11519$1&dy4A
                                                       (g$binding-value$8017$1&dy4A
                                                         g$b$11513$1&dy4A))
                                                     g$macro*$11510$1&dy4A))))
                                              (gensym))
                                             (if (g$memv$5717$1&dy4A
                                                   g$t$11514$1&dy4A
                                                   '($rtd $module))
                                               (g$f$11506$1&dy4A
                                                 (cdr g$r$11507$1&dy4A)
                                                 (cons
                                                   g$x$11511$1&dy4A
                                                   g$env$11508$1&dy4A)
                                                 g$global*$11509$1&dy4A
                                                 g$macro*$11510$1&dy4A)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$8016$1&dy4A
                                                   g$b$11513$1&dy4A)
                                                 (g$binding-value$8017$1&dy4A
                                                   g$b$11513$1&dy4A))))))))
                                    (g$binding-type$8016$1&dy4A
                                      g$b$11513$1&dy4A))))
                                (car g$x$11511$1&dy4A)
                                (cdr g$x$11511$1&dy4A))))
                            (car g$r$11507$1&dy4A)))))))
             g$f$11506$1&dy4A)
           g$r$11504$1&dy4A
           '()
           '()
           '())))))
   (g$generate-temporaries$8378$1&dy4A
     g$generate-temporaries$11869$1&dy4A
     (case-lambda
       ((g$ls$11525$1&dy4A)
        ((case-lambda
           ((g$t$11526$1&dy4A)
            ((case-lambda
               ((g$ls/false$11527$1&dy4A)
                (if g$ls/false$11527$1&dy4A
                  (apply
                    (case-lambda
                      ((g$ls$11528$1&dy4A)
                       (map (case-lambda
                              ((g$x$11529$1&dy4A)
                               (g$make-stx$7972$1&dy4A
                                 ((case-lambda
                                    ((g$x$11530$1&dy4A)
                                     (if ((case-lambda
                                            ((g$t$11531$1&dy4A)
                                             (if g$t$11531$1&dy4A
                                               g$t$11531$1&dy4A
                                               (begin
                                                 '#f
                                                 (string? g$x$11530$1&dy4A)))))
                                          (symbol? g$x$11530$1&dy4A))
                                       (gensym g$x$11530$1&dy4A)
                                       (gensym 't))))
                                  (g$syntax->datum$8391$1&dy4A
                                    g$x$11529$1&dy4A))
                                 g$top-mark*$7936$1&dy4A
                                 '()
                                 '())))
                            g$ls$11528$1&dy4A)))
                    g$ls/false$11527$1&dy4A)
                  ((case-lambda
                     ((g$t$11532$1&dy4A)
                      ((case-lambda
                         ((g$ls/false$11533$1&dy4A)
                          (if g$ls/false$11533$1&dy4A
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11533$1&dy4A)
                            (g$syntax-violation$8388$1&dy4A
                              '#f
                              '"invalid syntax"
                              g$t$11532$1&dy4A))))
                       (g$syntax-dispatch$8277$1&dy4A g$t$11532$1&dy4A '_))))
                   g$t$11526$1&dy4A))))
             (g$syntax-dispatch$8277$1&dy4A g$t$11526$1&dy4A 'each-any))))
         g$ls$11525$1&dy4A))))
   (g$free-identifier=?$8379$1&dy4A
     g$free-identifier=?$11870$1&dy4A
     (case-lambda
       ((g$x$11534$1&dy4A g$y$11535$1&dy4A)
        (if (g$id?$7999$1&dy4A g$x$11534$1&dy4A)
          (if (g$id?$7999$1&dy4A g$y$11535$1&dy4A)
            (g$free-id=?$8003$1&dy4A g$x$11534$1&dy4A g$y$11535$1&dy4A)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11535$1&dy4A))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11534$1&dy4A)))))
   (g$bound-identifier=?$8380$1&dy4A
     g$bound-identifier=?$11871$1&dy4A
     (case-lambda
       ((g$x$11536$1&dy4A g$y$11537$1&dy4A)
        (if (g$id?$7999$1&dy4A g$x$11536$1&dy4A)
          (if (g$id?$7999$1&dy4A g$y$11537$1&dy4A)
            (g$bound-id=?$8002$1&dy4A g$x$11536$1&dy4A g$y$11537$1&dy4A)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11537$1&dy4A))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11536$1&dy4A)))))
   (g$make-source-condition$8381$1&dy4A
     g$make-source-condition$11872$1&dy4A
     (case-lambda
       ((g$x$11538$1&dy4A)
        (letrec* ((g$12414$11539$1&dy4A
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12417$1&dy4A
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12416$11540$1&dy4A '#f)
                  (g$12415$11541$1&dy4A
                    (make-record-constructor-descriptor
                      g$12414$11539$1&dy4A
                      &condition-rcd
                      g$12416$11540$1&dy4A))
                  (g$12413$11542$1&dy4A (record-predicate g$12414$11539$1&dy4A))
                  (g$make-source-condition$11543$1&dy4A
                    (record-constructor g$12415$11541$1&dy4A))
                  (g$12411$11544$1&dy4A
                    (record-accessor g$12414$11539$1&dy4A '0))
                  (g$12412$11545$1&dy4A
                    (record-accessor g$12414$11539$1&dy4A '1))
                  (g$source-condition?$11546$1&dy4A
                    (condition-predicate g$12414$11539$1&dy4A))
                  (g$source-filename$11547$1&dy4A
                    (condition-accessor
                      g$12414$11539$1&dy4A
                      g$12411$11544$1&dy4A))
                  (g$source-character$11548$1&dy4A
                    (condition-accessor
                      g$12414$11539$1&dy4A
                      g$12412$11545$1&dy4A)))
          (if (pair? g$x$11538$1&dy4A)
            (g$make-source-condition$11543$1&dy4A
              (car g$x$11538$1&dy4A)
              (cdr g$x$11538$1&dy4A))
            (condition))))))
   (g$extract-position-condition$8382$1&dy4A
     g$extract-position-condition$11873$1&dy4A
     (case-lambda
       ((g$x$11549$1&dy4A)
        (g$make-source-condition$8381$1&dy4A
          (g$expression-position$8383$1&dy4A g$x$11549$1&dy4A)))))
   (g$expression-position$8383$1&dy4A
     g$expression-position$11874$1&dy4A
     (case-lambda
       ((g$x$11550$1&dy4A)
        (if (g$stx?$7971$1&dy4A g$x$11550$1&dy4A)
          (begin
            '#f
            ((case-lambda
               ((g$x$11551$1&dy4A)
                (if (annotation? g$x$11551$1&dy4A)
                  (begin '#f (annotation-source g$x$11551$1&dy4A))
                  '#f)))
             (g$stx-expr$7973$1&dy4A g$x$11550$1&dy4A)))
          '#f))))
   (g$assertion-error$8384$1&dy4A
     g$assertion-error$11875$1&dy4A
     (case-lambda
       ((g$expr$11552$1&dy4A g$pos$11553$1&dy4A)
        (raise
          (condition
            (g$make-assertion-violation$6460$1&dy4A)
            (g$make-who-condition$6474$1&dy4A 'assert)
            (g$make-message-condition$6428$1&dy4A '"assertion failed")
            (g$make-irritants-condition$6466$1&dy4A (list g$expr$11552$1&dy4A))
            (g$make-source-condition$8381$1&dy4A g$pos$11553$1&dy4A))))))
   (g$syntax-error$8385$1&dy4A
     g$syntax-error$11876$1&dy4A
     (case-lambda
       ((g$x$11554$1&dy4A . g$args$11555$1&dy4A)
        (begin
          (if (not (g$for-all$5722$1&dy4A string? g$args$11555$1&dy4A))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11555$1&dy4A)
            (void))
          (raise
            (condition
              (g$make-message-condition$6428$1&dy4A
                (if (null? g$args$11555$1&dy4A)
                  '"invalid syntax"
                  (apply string-append g$args$11555$1&dy4A)))
              (g$make-syntax-violation$6500$1&dy4A
                (g$syntax->datum$8391$1&dy4A g$x$11554$1&dy4A)
                '#f)
              (g$extract-position-condition$8382$1&dy4A g$x$11554$1&dy4A)
              (g$extract-trace$8386$1&dy4A g$x$11554$1&dy4A)))))))
   (g$extract-trace$8386$1&dy4A
     g$extract-trace$11877$1&dy4A
     (case-lambda
       ((g$x$11556$1&dy4A)
        (letrec* ((g$12441$11557$1&dy4A
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12444$1&dy4A
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12443$11558$1&dy4A '#f)
                  (g$12442$11559$1&dy4A
                    (make-record-constructor-descriptor
                      g$12441$11557$1&dy4A
                      &condition-rcd
                      g$12443$11558$1&dy4A))
                  (g$12440$11560$1&dy4A (record-predicate g$12441$11557$1&dy4A))
                  (g$make-trace$11561$1&dy4A
                    (record-constructor g$12442$11559$1&dy4A))
                  (g$12439$11562$1&dy4A
                    (record-accessor g$12441$11557$1&dy4A '0))
                  (g$trace?$11563$1&dy4A
                    (condition-predicate g$12441$11557$1&dy4A))
                  (g$trace-form$11564$1&dy4A
                    (condition-accessor
                      g$12441$11557$1&dy4A
                      g$12439$11562$1&dy4A)))
          ((letrec ((g$f$11565$1&dy4A
                      (case-lambda
                        ((g$x$11566$1&dy4A)
                         (if (g$stx?$7971$1&dy4A g$x$11566$1&dy4A)
                           (apply
                             condition
                             (g$make-trace$11561$1&dy4A g$x$11566$1&dy4A)
                             (map g$f$11565$1&dy4A
                                  (g$stx-ae*$7976$1&dy4A g$x$11566$1&dy4A)))
                           (if (annotation? g$x$11566$1&dy4A)
                             (g$make-trace$11561$1&dy4A
                               (g$make-stx$7972$1&dy4A
                                 g$x$11566$1&dy4A
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11565$1&dy4A)
           g$x$11556$1&dy4A)))))
   (g$syntax-violation*$8387$1&dy4A
     g$syntax-violation*$11878$1&dy4A
     (case-lambda
       ((g$who$11567$1&dy4A
          g$msg$11568$1&dy4A
          g$form$11569$1&dy4A
          g$condition-object$11570$1&dy4A)
        (begin
          (if (not (string? g$msg$11568$1&dy4A))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11568$1&dy4A)
            (void))
          ((case-lambda
             ((g$who$11571$1&dy4A)
              (raise
                (condition
                  (if g$who$11571$1&dy4A
                    (g$make-who-condition$6474$1&dy4A g$who$11571$1&dy4A)
                    (condition))
                  (g$make-message-condition$6428$1&dy4A g$msg$11568$1&dy4A)
                  g$condition-object$11570$1&dy4A
                  (g$extract-position-condition$8382$1&dy4A g$form$11569$1&dy4A)
                  (g$extract-trace$8386$1&dy4A g$form$11569$1&dy4A)))))
           (if ((case-lambda
                  ((g$t$11572$1&dy4A)
                   (if g$t$11572$1&dy4A
                     g$t$11572$1&dy4A
                     (begin '#f (symbol? g$who$11567$1&dy4A)))))
                (string? g$who$11567$1&dy4A))
             g$who$11567$1&dy4A
             (if (not g$who$11567$1&dy4A)
               ((case-lambda
                  ((g$t$11573$1&dy4A)
                   ((case-lambda
                      ((g$ls/false$11574$1&dy4A)
                       (if (if g$ls/false$11574$1&dy4A
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11575$1&dy4A)
                                    (g$id?$7999$1&dy4A g$id$11575$1&dy4A)))
                                 g$ls/false$11574$1&dy4A))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11576$1&dy4A)
                              (g$syntax->datum$8391$1&dy4A g$id$11576$1&dy4A)))
                           g$ls/false$11574$1&dy4A)
                         ((case-lambda
                            ((g$t$11577$1&dy4A)
                             ((case-lambda
                                ((g$ls/false$11578$1&dy4A)
                                 (if (if g$ls/false$11578$1&dy4A
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11579$1&dy4A
                                                g$rest$11580$1&dy4A)
                                              (g$id?$7999$1&dy4A
                                                g$id$11579$1&dy4A)))
                                           g$ls/false$11578$1&dy4A))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11581$1&dy4A g$rest$11582$1&dy4A)
                                        (g$syntax->datum$8391$1&dy4A
                                          g$id$11581$1&dy4A)))
                                     g$ls/false$11578$1&dy4A)
                                   ((case-lambda
                                      ((g$t$11583$1&dy4A)
                                       ((case-lambda
                                          ((g$ls/false$11584$1&dy4A)
                                           (if g$ls/false$11584$1&dy4A
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11584$1&dy4A)
                                             (g$syntax-violation$8388$1&dy4A
                                               '#f
                                               '"invalid syntax"
                                               g$t$11583$1&dy4A))))
                                        (g$syntax-dispatch$8277$1&dy4A
                                          g$t$11583$1&dy4A
                                          '_))))
                                    g$t$11577$1&dy4A))))
                              (g$syntax-dispatch$8277$1&dy4A
                                g$t$11577$1&dy4A
                                '(any . any)))))
                          g$t$11573$1&dy4A))))
                    (g$syntax-dispatch$8277$1&dy4A g$t$11573$1&dy4A 'any))))
                g$form$11569$1&dy4A)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11567$1&dy4A))))))))
   (g$syntax-violation$8388$1&dy4A
     g$syntax-violation$11879$1&dy4A
     (case-lambda
       ((g$who$11585$1&dy4A g$msg$11586$1&dy4A g$form$11587$1&dy4A)
        (g$syntax-violation$8388$1&dy4A
          g$who$11585$1&dy4A
          g$msg$11586$1&dy4A
          g$form$11587$1&dy4A
          '#f))
       ((g$who$11588$1&dy4A
          g$msg$11589$1&dy4A
          g$form$11590$1&dy4A
          g$subform$11591$1&dy4A)
        (g$syntax-violation*$8387$1&dy4A
          g$who$11588$1&dy4A
          g$msg$11589$1&dy4A
          g$form$11590$1&dy4A
          (g$make-syntax-violation$6500$1&dy4A
            (g$syntax->datum$8391$1&dy4A g$form$11590$1&dy4A)
            (g$syntax->datum$8391$1&dy4A g$subform$11591$1&dy4A))))))
   (g$identifier?$8389$1&dy4A
     g$identifier?$11880$1&dy4A
     (case-lambda ((g$x$11592$1&dy4A) (g$id?$7999$1&dy4A g$x$11592$1&dy4A))))
   (g$datum->syntax$8390$1&dy4A
     g$datum->syntax$11881$1&dy4A
     (case-lambda
       ((g$id$11593$1&dy4A g$datum$11594$1&dy4A)
        (if (g$id?$7999$1&dy4A g$id$11593$1&dy4A)
          (g$datum->stx$7982$1&dy4A g$id$11593$1&dy4A g$datum$11594$1&dy4A)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11593$1&dy4A)))))
   (g$syntax->datum$8391$1&dy4A
     g$syntax->datum$11882$1&dy4A
     (case-lambda
       ((g$x$11595$1&dy4A) (g$stx->datum$8010$1&dy4A g$x$11595$1&dy4A))))
   (g$compile-r6rs-top-level$8392$1&dy4A
     g$compile-r6rs-top-level$11883$1&dy4A
     (case-lambda
       ((g$x*$11596$1&dy4A)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$8337$1&dy4A g$x*$11596$1&dy4A)))
          (case-lambda
            ((g$lib*$11599$1&dy4A g$invoke-code$11600$1&dy4A)
             ((case-lambda
                ((g$invoke-code$11601$1&dy4A g$lib*$11602$1&dy4A)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7809$1&dy4A
                        g$lib*$11602$1&dy4A)
                      (eval-core
                        (g$expanded->core$7517$1&dy4A
                          g$invoke-code$11601$1&dy4A)))))))
              g$invoke-code$11600$1&dy4A
              g$lib*$11599$1&dy4A)))))))
   (g$pre-compile-r6rs-top-level$8393$1&dy4A
     g$pre-compile-r6rs-top-level$11884$1&dy4A
     (case-lambda
       ((g$x*$11603$1&dy4A)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$8337$1&dy4A g$x*$11603$1&dy4A)))
          (case-lambda
            ((g$lib*$11606$1&dy4A g$invoke-code$11607$1&dy4A)
             ((case-lambda
                ((g$invoke-code$11608$1&dy4A g$lib*$11609$1&dy4A)
                 (begin
                   (for-each g$invoke-library$7809$1&dy4A g$lib*$11609$1&dy4A)
                   (compile-core
                     (g$expanded->core$7517$1&dy4A
                       g$invoke-code$11608$1&dy4A)))))
              g$invoke-code$11607$1&dy4A
              g$lib*$11606$1&dy4A)))))))
   (g$interaction-environment$8394$1&dy4A
     g$interaction-environment$11885$1&dy4A
     ((case-lambda
        ((g$the-env$11610$1&dy4A)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11611$1&dy4A)
                (if g$t$11611$1&dy4A
                  g$t$11611$1&dy4A
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$11612$1&dy4A g$rib$11613$1&dy4A)
                        (begin
                          ((case-lambda
                             ((g$subst$11614$1&dy4A)
                              (begin
                                (g$set-rib-sym*!$7954$1&dy4A
                                  g$rib$11613$1&dy4A
                                  (map car g$subst$11614$1&dy4A))
                                (g$set-rib-mark**!$7955$1&dy4A
                                  g$rib$11613$1&dy4A
                                  (map (case-lambda
                                         ((g$x$11615$1&dy4A)
                                          g$top-mark*$7936$1&dy4A))
                                       g$subst$11614$1&dy4A))
                                (g$set-rib-label*!$7956$1&dy4A
                                  g$rib$11613$1&dy4A
                                  (map cdr g$subst$11614$1&dy4A)))))
                           (g$library-subst$7766$1&dy4A g$lib$11612$1&dy4A))
                          ((case-lambda
                             ((g$env$11616$1&dy4A)
                              (begin
                                (set! g$the-env$11610$1&dy4A g$env$11616$1&dy4A)
                                g$env$11616$1&dy4A)))
                           (g$make-interaction-env$8354$1&dy4A
                             g$rib$11613$1&dy4A
                             '()
                             '())))))
                     (g$find-library-by-name$7802$1&dy4A '(ironscheme))
                     (g$make-cache-rib$7960$1&dy4A))))))
             g$the-env$11610$1&dy4A)))))
      '#f))
   (g$top-level-context$8395$1&dy4A
     g$top-level-context$11886$1&dy4A
     (g$make-parameter$7271$1&dy4A '#f)))
  (g$current-library-expander$7799$1&dy4A g$library-expander$8372$1&dy4A))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7514$1&dy4A
      (case-lambda
        ((g$x$11939$1&dy4A)
         ((case-lambda
            ((g$t$11940$1&dy4A)
             (if g$t$11940$1&dy4A (cdr g$t$11940$1&dy4A) '#f)))
          (g$assq$5712$1&dy4A
            g$x$11939$1&dy4A
            '((ellipsis-map . g$ellipsis-map$11773$1&dy4A)
              (ironscheme-build . g$ironscheme-build$11932$1&dy4A)
              (syntax-error . g$syntax-error$11876$1&dy4A)
              (syntax-dispatch . g$syntax-dispatch$11768$1&dy4A)
              (compile-system-libraries
                .
                g$compile-system-libraries$11934$1&dy4A)
              (compile->closure . g$compile->closure$11936$1&dy4A)
              (compile . g$compile$11935$1&dy4A)
              (load . g$load$11931$1&dy4A)
              (interaction-environment . g$interaction-environment$11885$1&dy4A)
              (string-ci>? . g$string-ci>?$6646$1&dy4A)
              (string-ci>=? . g$string-ci>=?$6648$1&dy4A)
              (string-ci=? . g$string-ci=?$6644$1&dy4A)
              (string-ci<? . g$string-ci<?$6645$1&dy4A)
              (string-ci<=? . g$string-ci<=?$6647$1&dy4A)
              (char-ci>? . g$char-ci>?$6651$1&dy4A)
              (char-ci>=? . g$char-ci>=?$6653$1&dy4A)
              (char-ci=? . g$char-ci=?$6649$1&dy4A)
              (char-ci<? . g$char-ci<?$6650$1&dy4A)
              (char-ci<=? . g$char-ci<=?$6652$1&dy4A)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11706$1&dy4A)
              (variable-transformer? . g$variable-transformer?$11705$1&dy4A)
              (make-variable-transformer
                .
                g$make-variable-transformer$11704$1&dy4A)
              (identifier? . g$identifier?$11880$1&dy4A)
              (generate-temporaries . g$generate-temporaries$11869$1&dy4A)
              (free-identifier=? . g$free-identifier=?$11870$1&dy4A)
              (syntax->datum . g$syntax->datum$11882$1&dy4A)
              (datum->syntax . g$datum->syntax$11881$1&dy4A)
              (bound-identifier=? . g$bound-identifier=?$11871$1&dy4A)
              (delete-file . g$delete-file$6180$1&dy4A)
              (file-exists? . g$file-exists?$6179$1&dy4A)
              (list-sort . g$list-sort$6571$1&dy4A)
              (make-eqv-hashtable . g$make-eqv-hashtable$6161$1&dy4A)
              (make-eq-hashtable . g$make-eq-hashtable$6160$1&dy4A)
              (hashtable-update! . g$hashtable-update!$6167$1&dy4A)
              (hashtable-size . g$hashtable-size$6162$1&dy4A)
              (hashtable-set! . g$hashtable-set!$6164$1&dy4A)
              (hashtable-ref . g$hashtable-ref$6163$1&dy4A)
              (hashtable-delete! . g$hashtable-delete!$6165$1&dy4A)
              (hashtable-contains? . g$hashtable-contains?$6166$1&dy4A)
              (hashtable-clear! . g$hashtable-clear!$6168$1&dy4A)
              (call-with-output-file . g$call-with-output-file$6997$1&dy4A)
              (call-with-input-file . g$call-with-input-file$6996$1&dy4A)
              (with-output-to-file . g$with-output-to-file$6995$1&dy4A)
              (with-input-from-file . g$with-input-from-file$6994$1&dy4A)
              (port? . g$port?$6960$1&dy4A)
              (open-string-output-port . g$open-string-output-port$6959$1&dy4A)
              (make-i/o-write-error . g$make-i/o-write-error$6882$1&dy4A)
              (make-i/o-read-error . g$make-i/o-read-error$6876$1&dy4A)
              (make-i/o-port-error . g$make-i/o-port-error$6928$1&dy4A)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6888$1&dy4A)
              (make-i/o-filename-error . g$make-i/o-filename-error$6896$1&dy4A)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6904$1&dy4A)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6910$1&dy4A)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6922$1&dy4A)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6916$1&dy4A)
              (make-i/o-error . g$make-i/o-error$6870$1&dy4A)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6942$1&dy4A)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6936$1&dy4A)
              (i/o-write-error? . g$i/o-write-error?$6883$1&dy4A)
              (i/o-read-error? . g$i/o-read-error?$6877$1&dy4A)
              (i/o-port-error? . g$i/o-port-error?$6930$1&dy4A)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6890$1&dy4A)
              (i/o-error-position . g$i/o-error-position$6891$1&dy4A)
              (i/o-filename-error? . g$i/o-filename-error?$6898$1&dy4A)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6905$1&dy4A)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6911$1&dy4A)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6923$1&dy4A)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6917$1&dy4A)
              (i/o-error? . g$i/o-error?$6871$1&dy4A)
              (i/o-error-port . g$i/o-error-port$6931$1&dy4A)
              (i/o-error-filename . g$i/o-error-filename$6899$1&dy4A)
              (i/o-encoding-error? . g$i/o-encoding-error?$6944$1&dy4A)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6945$1&dy4A)
              (i/o-decoding-error? . g$i/o-decoding-error?$6937$1&dy4A)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$6961$1&dy4A)
              (scheme-report-environment
                .
                g$scheme-report-environment$11860$1&dy4A)
              (quotient . g$quotient$6538$1&dy4A)
              (null-environment . g$null-environment$11859$1&dy4A)
              (remainder . g$remainder$6539$1&dy4A)
              (modulo . g$modulo$6540$1&dy4A)
              (force . g$force$6542$1&dy4A)
              (command-line . g$command-line$11928$1&dy4A)
              (remove . g$remove$5727$1&dy4A)
              (remv . g$remv$5728$1&dy4A)
              (remp . g$remp$5710$1&dy4A)
              (remq . g$remq$5729$1&dy4A)
              (partition . g$partition$5709$1&dy4A)
              (memv . g$memv$5717$1&dy4A)
              (memq . g$memq$5716$1&dy4A)
              (memp . g$memp$5719$1&dy4A)
              (member . g$member$5718$1&dy4A)
              (exists . g$exists$5723$1&dy4A)
              (for-all . g$for-all$5722$1&dy4A)
              (fold-right . g$fold-right$5726$1&dy4A)
              (fold-left . g$fold-left$5725$1&dy4A)
              (find . g$find$5708$1&dy4A)
              (filter . g$filter$5711$1&dy4A)
              (cons* . g$cons*$5724$1&dy4A)
              (assv . g$assv$5713$1&dy4A)
              (assq . g$assq$5712$1&dy4A)
              (assp . g$assp$5715$1&dy4A)
              (assoc . g$assoc$5714$1&dy4A)
              (eval . g$eval$11862$1&dy4A)
              (environment . g$environment$11858$1&dy4A)
              (make-enumeration . g$make-enumeration$7129$1&dy4A)
              (enum-set=? . g$enum-set=?$7136$1&dy4A)
              (enum-set-universe . g$enum-set-universe$7130$1&dy4A)
              (enum-set-union . g$enum-set-union$7137$1&dy4A)
              (enum-set-subset? . g$enum-set-subset?$7135$1&dy4A)
              (enum-set-projection . g$enum-set-projection$7141$1&dy4A)
              (enum-set-member? . g$enum-set-member?$7134$1&dy4A)
              (enum-set-intersection . g$enum-set-intersection$7138$1&dy4A)
              (enum-set-indexer . g$enum-set-indexer$7131$1&dy4A)
              (enum-set-difference . g$enum-set-difference$7139$1&dy4A)
              (enum-set-constructor . g$enum-set-constructor$7132$1&dy4A)
              (enum-set-complement . g$enum-set-complement$7140$1&dy4A)
              (enum-set->list . g$enum-set->list$7133$1&dy4A)
              (who-condition? . g$who-condition?$6476$1&dy4A)
              (warning? . g$warning?$6437$1&dy4A)
              (violation? . g$violation?$6455$1&dy4A)
              (undefined-violation? . g$undefined-violation?$6511$1&dy4A)
              (syntax-violation? . g$syntax-violation?$6503$1&dy4A)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$6505$1&dy4A)
              (syntax-violation-form . g$syntax-violation-form$6504$1&dy4A)
              (syntax-violation . g$syntax-violation$11879$1&dy4A)
              (serious-condition? . g$serious-condition?$6443$1&dy4A)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6483$1&dy4A)
              (message-condition? . g$message-condition?$6430$1&dy4A)
              (make-who-condition . g$make-who-condition$6474$1&dy4A)
              (make-warning . g$make-warning$6436$1&dy4A)
              (make-violation . g$make-violation$6454$1&dy4A)
              (make-undefined-violation
                .
                g$make-undefined-violation$6510$1&dy4A)
              (make-syntax-violation . g$make-syntax-violation$6500$1&dy4A)
              (make-serious-condition . g$make-serious-condition$6442$1&dy4A)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6482$1&dy4A)
              (make-message-condition . g$make-message-condition$6428$1&dy4A)
              (make-lexical-violation . g$make-lexical-violation$6494$1&dy4A)
              (make-irritants-condition
                .
                g$make-irritants-condition$6466$1&dy4A)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6488$1&dy4A)
              (make-error . g$make-error$6448$1&dy4A)
              (make-assertion-violation
                .
                g$make-assertion-violation$6460$1&dy4A)
              (lexical-violation? . g$lexical-violation?$6495$1&dy4A)
              (irritants-condition? . g$irritants-condition?$6468$1&dy4A)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6489$1&dy4A)
              (error? . g$error?$6449$1&dy4A)
              (condition-who . g$condition-who$6477$1&dy4A)
              (condition-message . g$condition-message$6431$1&dy4A)
              (condition-irritants . g$condition-irritants$6469$1&dy4A)
              (assertion-violation? . g$assertion-violation?$6461$1&dy4A)
              (native-endianness . g$native-endianness$6293$1&dy4A)
              (bytevector-u64-set! . g$bytevector-u64-set!$6314$1&dy4A)
              (bytevector-u64-ref . g$bytevector-u64-ref$6310$1&dy4A)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6316$1&dy4A)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6312$1&dy4A)
              (bytevector-u32-set! . g$bytevector-u32-set!$6306$1&dy4A)
              (bytevector-u32-ref . g$bytevector-u32-ref$6302$1&dy4A)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6308$1&dy4A)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6304$1&dy4A)
              (bytevector-u16-set! . g$bytevector-u16-set!$6298$1&dy4A)
              (bytevector-u16-ref . g$bytevector-u16-ref$6294$1&dy4A)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6300$1&dy4A)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6296$1&dy4A)
              (bytevector-s64-set! . g$bytevector-s64-set!$6315$1&dy4A)
              (bytevector-s64-ref . g$bytevector-s64-ref$6311$1&dy4A)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6317$1&dy4A)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6313$1&dy4A)
              (bytevector-s32-set! . g$bytevector-s32-set!$6307$1&dy4A)
              (bytevector-s32-ref . g$bytevector-s32-ref$6303$1&dy4A)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6309$1&dy4A)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6305$1&dy4A)
              (bytevector-s16-set! . g$bytevector-s16-set!$6299$1&dy4A)
              (bytevector-s16-ref . g$bytevector-s16-ref$6295$1&dy4A)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6301$1&dy4A)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6297$1&dy4A)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6320$1&dy4A)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6318$1&dy4A)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6321$1&dy4A)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6319$1&dy4A)
              (no-nans-violation? . g$no-nans-violation?$6785$1&dy4A)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6779$1&dy4A)
              (make-no-nans-violation . g$make-no-nans-violation$6784$1&dy4A)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6778$1&dy4A)
              (fxrotate-bit-field . g$fxrotate-bit-field$6761$1&dy4A)
              (fxif . g$fxif$6755$1&dy4A)
              (fxcopy-bit-field . g$fxcopy-bit-field$6758$1&dy4A)
              (fxcopy-bit . g$fxcopy-bit$6756$1&dy4A)
              (fxbit-field . g$fxbit-field$6757$1&dy4A)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6760$1&dy4A)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6759$1&dy4A)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$6707$1&dy4A)
              (bitwise-if . g$bitwise-if$6701$1&dy4A)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6704$1&dy4A)
              (bitwise-copy-bit . g$bitwise-copy-bit$6702$1&dy4A)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6706$1&dy4A)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6705$1&dy4A)
              (symbol=? . g$symbol=?$5918$1&dy4A)
              (string>? . g$string>?$5915$1&dy4A)
              (string>=? . g$string>=?$5917$1&dy4A)
              (string=? . g$string=?$5913$1&dy4A)
              (string<? . g$string<?$5914$1&dy4A)
              (string<=? . g$string<=?$5916$1&dy4A)
              (rationalize . g$rationalize$5925$1&dy4A)
              (char>? . g$char>?$5922$1&dy4A)
              (char>=? . g$char>=?$5924$1&dy4A)
              (char=? . g$char=?$5920$1&dy4A)
              (char<? . g$char<?$5921$1&dy4A)
              (char<=? . g$char<=?$5923$1&dy4A)
              (cddddr . g$cddddr$5912$1&dy4A)
              (cdddar . g$cdddar$5911$1&dy4A)
              (cddadr . g$cddadr$5910$1&dy4A)
              (cddaar . g$cddaar$5909$1&dy4A)
              (cdaddr . g$cdaddr$5908$1&dy4A)
              (cdadar . g$cdadar$5907$1&dy4A)
              (cdaadr . g$cdaadr$5906$1&dy4A)
              (cdaaar . g$cdaaar$5905$1&dy4A)
              (cadddr . g$cadddr$5904$1&dy4A)
              (caddar . g$caddar$5903$1&dy4A)
              (cadadr . g$cadadr$5902$1&dy4A)
              (cadaar . g$cadaar$5901$1&dy4A)
              (caaddr . g$caaddr$5900$1&dy4A)
              (caadar . g$caadar$5899$1&dy4A)
              (caaadr . g$caaadr$5898$1&dy4A)
              (caaaar . g$caaaar$5897$1&dy4A)
              (cdddr . g$cdddr$5896$1&dy4A)
              (cddar . g$cddar$5895$1&dy4A)
              (cdadr . g$cdadr$5894$1&dy4A)
              (cdaar . g$cdaar$5893$1&dy4A)
              (caddr . g$caddr$5892$1&dy4A)
              (cadar . g$cadar$5891$1&dy4A)
              (caadr . g$caadr$5890$1&dy4A)
              (caaar . g$caaar$5889$1&dy4A)
              (cddr . g$cddr$5888$1&dy4A)
              (cdar . g$cdar$5887$1&dy4A)
              (cadr . g$cadr$5886$1&dy4A)
              (caar . g$caar$5885$1&dy4A)
              (boolean=? . g$boolean=?$5919$1&dy4A)
              (enum-set? . g$enum?$7110$1&dy4A)
              (make-promise . g$make-promise$6541$1&dy4A)
              (load/args . g$load/args$11930$1&dy4A)
              (printf . g$printf$7165$1&dy4A)
              (fprintf . g$fprintf$7166$1&dy4A)
              (format . g$format$7167$1&dy4A)
              (trace-printer . g$trace-printer$11927$1&dy4A)
              (make-traced-macro . g$make-traced-macro$7171$1&dy4A)
              (assertion-error . g$assertion-error$11875$1&dy4A)
              (make-parameter . g$make-parameter$7271$1&dy4A)
              (environment-bindings . g$environment-bindings$11854$1&dy4A)
              (environment-symbols . g$environment-symbols$11857$1&dy4A)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11853$1&dy4A)
              (library-path . g$library-path$7791$1&dy4A)
              (expand . g$expand$11861$1&dy4A)))))))
    (g$install-library$7807$1&dy4A
      'g$13162$1&dy4A
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$13099$1&dy4A)
        (cosh . g$13098$1&dy4A)
        (sinh . g$13097$1&dy4A)
        (make-guid . g$13096$1&dy4A)
        (unspecified? . g$13095$1&dy4A)
        (make-trace . g$13094$1&dy4A)
        (make-list . g$13093$1&dy4A)
        (last-pair . g$13092$1&dy4A)
        (load-r5rs . g$13091$1&dy4A)
        (license . g$13090$1&dy4A)
        (stacktrace . g$13089$1&dy4A)
        (ironscheme-build . g$12513$1&dy4A)
        (set-symbol-value! . g$13075$1&dy4A)
        (symbol-value . g$13074$1&dy4A)
        (ungensym . g$13073$1&dy4A)
        (gensym . g$13072$1&dy4A)
        (void . g$13071$1&dy4A)
        (compile-system-libraries . g$12515$1&dy4A)
        (compile->closure . g$12517$1&dy4A)
        (compile . g$12516$1&dy4A)
        (load . g$12512$1&dy4A)
        (interaction-environment . g$9540$1&dy4A)
        (string-upcase . g$13067$1&dy4A)
        (string-titlecase . g$13066$1&dy4A)
        (string-normalize-nfkd . g$13065$1&dy4A)
        (string-normalize-nfkc . g$13064$1&dy4A)
        (string-normalize-nfd . g$13063$1&dy4A)
        (string-normalize-nfc . g$13062$1&dy4A)
        (string-foldcase . g$13061$1&dy4A)
        (string-downcase . g$13060$1&dy4A)
        (string-ci>? . g$7632$1&dy4A)
        (string-ci>=? . g$7634$1&dy4A)
        (string-ci=? . g$7630$1&dy4A)
        (string-ci<? . g$7631$1&dy4A)
        (string-ci<=? . g$7633$1&dy4A)
        (char-whitespace? . g$13059$1&dy4A)
        (char-upper-case? . g$13058$1&dy4A)
        (char-title-case? . g$13057$1&dy4A)
        (char-numeric? . g$13056$1&dy4A)
        (char-lower-case? . g$13055$1&dy4A)
        (char-general-category . g$13054$1&dy4A)
        (char-upcase . g$13053$1&dy4A)
        (char-titlecase . g$13052$1&dy4A)
        (char-foldcase . g$13051$1&dy4A)
        (char-downcase . g$13050$1&dy4A)
        (char-ci>? . g$7671$1&dy4A)
        (char-ci>=? . g$7673$1&dy4A)
        (char-ci=? . g$7669$1&dy4A)
        (char-ci<? . g$7670$1&dy4A)
        (char-ci<=? . g$7672$1&dy4A)
        (char-alphabetic? . g$13049$1&dy4A)
        (make-variable-transformer . g$9137$1&dy4A)
        (identifier? . g$9535$1&dy4A)
        (generate-temporaries . g$9524$1&dy4A)
        (free-identifier=? . g$9525$1&dy4A)
        (syntax->datum . g$9537$1&dy4A)
        (datum->syntax . g$9536$1&dy4A)
        (bound-identifier=? . g$9526$1&dy4A)
        (record-type-descriptor? . g$13048$1&dy4A)
        (record-predicate . g$13047$1&dy4A)
        (record-mutator . g$13046$1&dy4A)
        (record-constructor . g$13045$1&dy4A)
        (record-accessor . g$13044$1&dy4A)
        (make-record-type-descriptor . g$13043$1&dy4A)
        (make-record-constructor-descriptor . g$13042$1&dy4A)
        (record? . g$13041$1&dy4A)
        (record-type-uid . g$13040$1&dy4A)
        (record-type-sealed? . g$13039$1&dy4A)
        (record-type-parent . g$13038$1&dy4A)
        (record-type-opaque? . g$13037$1&dy4A)
        (record-type-name . g$13036$1&dy4A)
        (record-type-generative? . g$13035$1&dy4A)
        (record-type-field-names . g$13034$1&dy4A)
        (record-rtd . g$13033$1&dy4A)
        (record-field-mutable? . g$13032$1&dy4A)
        (delete-file . g$7207$1&dy4A)
        (file-exists? . g$7206$1&dy4A)
        (vector-sort! . g$13031$1&dy4A)
        (vector-sort . g$13030$1&dy4A)
        (list-sort . g$7570$1&dy4A)
        (symbol-hash . g$13029$1&dy4A)
        (string-ci-hash . g$13028$1&dy4A)
        (string-hash . g$13027$1&dy4A)
        (equal-hash . g$13026$1&dy4A)
        (hashtable-equivalence-function . g$13025$1&dy4A)
        (make-hashtable . g$13024$1&dy4A)
        (hashtable-hash-function . g$13023$1&dy4A)
        (make-eqv-hashtable . g$7174$1&dy4A)
        (make-eq-hashtable . g$7173$1&dy4A)
        (hashtable? . g$13022$1&dy4A)
        (hashtable-update! . g$7180$1&dy4A)
        (hashtable-size . g$7175$1&dy4A)
        (hashtable-set! . g$7177$1&dy4A)
        (hashtable-ref . g$7176$1&dy4A)
        (hashtable-mutable? . g$13021$1&dy4A)
        (hashtable-keys . g$13020$1&dy4A)
        (hashtable-entries . g$13019$1&dy4A)
        (hashtable-delete! . g$7178$1&dy4A)
        (hashtable-copy . g$13018$1&dy4A)
        (hashtable-contains? . g$7179$1&dy4A)
        (hashtable-clear! . g$7181$1&dy4A)
        (call-with-output-file . g$8063$1&dy4A)
        (call-with-input-file . g$8062$1&dy4A)
        (write-char . g$13017$1&dy4A)
        (write . g$13016$1&dy4A)
        (with-output-to-file . g$8061$1&dy4A)
        (with-input-from-file . g$8060$1&dy4A)
        (read-char . g$13015$1&dy4A)
        (read . g$13014$1&dy4A)
        (peek-char . g$13013$1&dy4A)
        (open-output-file . g$13012$1&dy4A)
        (open-input-file . g$13011$1&dy4A)
        (newline . g$13010$1&dy4A)
        (display . g$13009$1&dy4A)
        (close-output-port . g$13008$1&dy4A)
        (close-input-port . g$13007$1&dy4A)
        (eof-object? . g$13006$1&dy4A)
        (eof-object . g$13005$1&dy4A)
        (current-error-port . g$13004$1&dy4A)
        (current-output-port . g$13003$1&dy4A)
        (current-input-port . g$13002$1&dy4A)
        (output-port? . g$13001$1&dy4A)
        (input-port? . g$13000$1&dy4A)
        (utf-8-codec . g$12999$1&dy4A)
        (utf-16-codec . g$12998$1&dy4A)
        (transcoder-error-handling-mode . g$12997$1&dy4A)
        (transcoder-eol-style . g$12996$1&dy4A)
        (transcoder-codec . g$12995$1&dy4A)
        (transcoded-port . g$12994$1&dy4A)
        (textual-port? . g$12993$1&dy4A)
        (string->bytevector . g$12992$1&dy4A)
        (standard-output-port . g$12991$1&dy4A)
        (standard-input-port . g$12990$1&dy4A)
        (standard-error-port . g$12989$1&dy4A)
        (set-port-position! . g$12988$1&dy4A)
        (put-u8 . g$12987$1&dy4A)
        (put-string . g$12986$1&dy4A)
        (put-datum . g$12985$1&dy4A)
        (put-char . g$12984$1&dy4A)
        (put-bytevector . g$12983$1&dy4A)
        (port? . g$8036$1&dy4A)
        (port-transcoder . g$12982$1&dy4A)
        (port-position . g$12981$1&dy4A)
        (port-has-set-port-position!? . g$12980$1&dy4A)
        (port-has-port-position? . g$12979$1&dy4A)
        (port-eof? . g$12978$1&dy4A)
        (output-port-buffer-mode . g$12977$1&dy4A)
        (open-string-output-port . g$8035$1&dy4A)
        (open-string-input-port . g$12976$1&dy4A)
        (open-file-output-port . g$12975$1&dy4A)
        (open-file-input/output-port . g$12974$1&dy4A)
        (open-file-input-port . g$12973$1&dy4A)
        (open-bytevector-output-port . g$12972$1&dy4A)
        (open-bytevector-input-port . g$12971$1&dy4A)
        (native-transcoder . g$12970$1&dy4A)
        (native-eol-style . g$12969$1&dy4A)
        (make-transcoder . g$12968$1&dy4A)
        (latin-1-codec . g$12967$1&dy4A)
        (make-i/o-write-error . g$7892$1&dy4A)
        (make-i/o-read-error . g$7878$1&dy4A)
        (make-i/o-port-error . g$7997$1&dy4A)
        (make-i/o-invalid-position-error . g$7907$1&dy4A)
        (make-i/o-filename-error . g$7924$1&dy4A)
        (make-i/o-file-protection-error . g$7940$1&dy4A)
        (make-i/o-file-is-read-only-error . g$7954$1&dy4A)
        (make-i/o-file-does-not-exist-error . g$7982$1&dy4A)
        (make-i/o-file-already-exists-error . g$7968$1&dy4A)
        (make-i/o-error . g$7864$1&dy4A)
        (make-i/o-encoding-error . g$8028$1&dy4A)
        (make-i/o-decoding-error . g$8013$1&dy4A)
        (make-custom-textual-output-port . g$12966$1&dy4A)
        (make-custom-textual-input/output-port . g$12965$1&dy4A)
        (make-custom-textual-input-port . g$12964$1&dy4A)
        (make-custom-binary-output-port . g$12963$1&dy4A)
        (make-custom-binary-input/output-port . g$12962$1&dy4A)
        (make-custom-binary-input-port . g$12961$1&dy4A)
        (make-bytevector . g$12960$1&dy4A)
        (lookahead-u8 . g$12959$1&dy4A)
        (lookahead-char . g$12958$1&dy4A)
        (i/o-write-error? . g$7893$1&dy4A)
        (i/o-read-error? . g$7879$1&dy4A)
        (i/o-port-error? . g$7999$1&dy4A)
        (i/o-invalid-position-error? . g$7909$1&dy4A)
        (i/o-error-position . g$7910$1&dy4A)
        (i/o-filename-error? . g$7926$1&dy4A)
        (i/o-file-protection-error? . g$7941$1&dy4A)
        (i/o-file-is-read-only-error? . g$7955$1&dy4A)
        (i/o-file-does-not-exist-error? . g$7983$1&dy4A)
        (i/o-file-already-exists-error? . g$7969$1&dy4A)
        (i/o-error? . g$7865$1&dy4A)
        (i/o-error-port . g$8000$1&dy4A)
        (i/o-error-filename . g$7927$1&dy4A)
        (i/o-encoding-error? . g$8030$1&dy4A)
        (i/o-encoding-error-char . g$8031$1&dy4A)
        (i/o-decoding-error? . g$8014$1&dy4A)
        (get-u8 . g$12957$1&dy4A)
        (get-string-n! . g$12956$1&dy4A)
        (get-string-n . g$12955$1&dy4A)
        (get-string-all . g$12954$1&dy4A)
        (get-line . g$12953$1&dy4A)
        (get-datum . g$12952$1&dy4A)
        (get-char . g$12951$1&dy4A)
        (get-bytevector-some . g$12950$1&dy4A)
        (get-bytevector-n! . g$12949$1&dy4A)
        (get-bytevector-n . g$12948$1&dy4A)
        (get-bytevector-all . g$12947$1&dy4A)
        (flush-output-port . g$12946$1&dy4A)
        (close-port . g$12945$1&dy4A)
        (call-with-string-output-port . g$8037$1&dy4A)
        (call-with-port . g$12944$1&dy4A)
        (call-with-bytevector-output-port . g$12943$1&dy4A)
        (bytevector->string . g$12942$1&dy4A)
        (buffer-mode? . g$12941$1&dy4A)
        (binary-port? . g$12940$1&dy4A)
        (scheme-report-environment . g$9515$1&dy4A)
        (quotient . g$7550$1&dy4A)
        (null-environment . g$9514$1&dy4A)
        (remainder . g$7551$1&dy4A)
        (modulo . g$7552$1&dy4A)
        (inexact->exact . g$12939$1&dy4A)
        (force . g$7554$1&dy4A)
        (exact->inexact . g$12938$1&dy4A)
        (exit . g$12937$1&dy4A)
        (command-line . g$12509$1&dy4A)
        (string-fill! . g$12936$1&dy4A)
        (string-set! . g$12935$1&dy4A)
        (set-cdr! . g$12934$1&dy4A)
        (set-car! . g$12933$1&dy4A)
        (remove . g$6562$1&dy4A)
        (remv . g$6563$1&dy4A)
        (remp . g$6545$1&dy4A)
        (remq . g$6564$1&dy4A)
        (partition . g$6544$1&dy4A)
        (memv . g$6552$1&dy4A)
        (memq . g$6551$1&dy4A)
        (memp . g$6554$1&dy4A)
        (member . g$6553$1&dy4A)
        (exists . g$6558$1&dy4A)
        (for-all . g$6557$1&dy4A)
        (fold-right . g$6561$1&dy4A)
        (fold-left . g$6560$1&dy4A)
        (find . g$6543$1&dy4A)
        (filter . g$6546$1&dy4A)
        (cons* . g$6559$1&dy4A)
        (assv . g$6548$1&dy4A)
        (assq . g$6547$1&dy4A)
        (assp . g$6550$1&dy4A)
        (assoc . g$6549$1&dy4A)
        (with-exception-handler . g$12932$1&dy4A)
        (raise-continuable . g$12931$1&dy4A)
        (raise . g$12930$1&dy4A)
        (eval . g$9517$1&dy4A)
        (environment . g$9513$1&dy4A)
        (make-enumeration . g$8121$1&dy4A)
        (enum-set=? . g$8128$1&dy4A)
        (enum-set-universe . g$8122$1&dy4A)
        (enum-set-union . g$8129$1&dy4A)
        (enum-set-subset? . g$8127$1&dy4A)
        (enum-set-projection . g$8133$1&dy4A)
        (enum-set-member? . g$8126$1&dy4A)
        (enum-set-intersection . g$8130$1&dy4A)
        (enum-set-indexer . g$8123$1&dy4A)
        (enum-set-difference . g$8131$1&dy4A)
        (enum-set-constructor . g$8124$1&dy4A)
        (enum-set-complement . g$8132$1&dy4A)
        (enum-set->list . g$8125$1&dy4A)
        (who-condition? . g$7461$1&dy4A)
        (warning? . g$7372$1&dy4A)
        (violation? . g$7414$1&dy4A)
        (undefined-violation? . g$7538$1&dy4A)
        (syntax-violation? . g$7522$1&dy4A)
        (syntax-violation-subform . g$7524$1&dy4A)
        (syntax-violation-form . g$7523$1&dy4A)
        (syntax-violation . g$9534$1&dy4A)
        (simple-conditions . g$12929$1&dy4A)
        (serious-condition? . g$7386$1&dy4A)
        (non-continuable-violation? . g$7476$1&dy4A)
        (message-condition? . g$7357$1&dy4A)
        (make-who-condition . g$7459$1&dy4A)
        (make-warning . g$7371$1&dy4A)
        (make-violation . g$7413$1&dy4A)
        (make-undefined-violation . g$7537$1&dy4A)
        (make-syntax-violation . g$7519$1&dy4A)
        (make-serious-condition . g$7385$1&dy4A)
        (make-non-continuable-violation . g$7475$1&dy4A)
        (make-message-condition . g$7355$1&dy4A)
        (make-lexical-violation . g$7503$1&dy4A)
        (make-irritants-condition . g$7442$1&dy4A)
        (make-implementation-restriction-violation . g$7489$1&dy4A)
        (make-error . g$7399$1&dy4A)
        (make-assertion-violation . g$7427$1&dy4A)
        (lexical-violation? . g$7504$1&dy4A)
        (irritants-condition? . g$7444$1&dy4A)
        (implementation-restriction-violation? . g$7490$1&dy4A)
        (error? . g$7400$1&dy4A)
        (condition-who . g$7462$1&dy4A)
        (condition-predicate . g$12928$1&dy4A)
        (condition-message . g$7358$1&dy4A)
        (condition-irritants . g$7445$1&dy4A)
        (condition-accessor . g$12927$1&dy4A)
        (condition . g$12926$1&dy4A)
        (assertion-violation? . g$7428$1&dy4A)
        (condition? . g$12925$1&dy4A)
        (utf32->string . g$12924$1&dy4A)
        (utf16->string . g$12923$1&dy4A)
        (utf8->string . g$12922$1&dy4A)
        (uint-list->bytevector . g$12921$1&dy4A)
        (u8-list->bytevector . g$12920$1&dy4A)
        (string->utf8 . g$12919$1&dy4A)
        (string->utf32 . g$12918$1&dy4A)
        (string->utf16 . g$12917$1&dy4A)
        (sint-list->bytevector . g$12916$1&dy4A)
        (native-endianness . g$7213$1&dy4A)
        (bytevector? . g$12915$1&dy4A)
        (bytevector=? . g$12914$1&dy4A)
        (bytevector-uint-set! . g$12913$1&dy4A)
        (bytevector-uint-ref . g$12912$1&dy4A)
        (bytevector-u8-set! . g$12911$1&dy4A)
        (bytevector-u8-ref . g$12910$1&dy4A)
        (bytevector-u64-set! . g$7234$1&dy4A)
        (bytevector-u64-ref . g$7230$1&dy4A)
        (bytevector-u64-native-set! . g$7236$1&dy4A)
        (bytevector-u64-native-ref . g$7232$1&dy4A)
        (bytevector-u32-set! . g$7226$1&dy4A)
        (bytevector-u32-ref . g$7222$1&dy4A)
        (bytevector-u32-native-set! . g$7228$1&dy4A)
        (bytevector-u32-native-ref . g$7224$1&dy4A)
        (bytevector-u16-set! . g$7218$1&dy4A)
        (bytevector-u16-ref . g$7214$1&dy4A)
        (bytevector-u16-native-set! . g$7220$1&dy4A)
        (bytevector-u16-native-ref . g$7216$1&dy4A)
        (bytevector-sint-set! . g$12909$1&dy4A)
        (bytevector-sint-ref . g$12908$1&dy4A)
        (bytevector-s8-set! . g$12907$1&dy4A)
        (bytevector-s8-ref . g$12906$1&dy4A)
        (bytevector-s64-set! . g$7235$1&dy4A)
        (bytevector-s64-ref . g$7231$1&dy4A)
        (bytevector-s64-native-set! . g$7237$1&dy4A)
        (bytevector-s64-native-ref . g$7233$1&dy4A)
        (bytevector-s32-set! . g$7227$1&dy4A)
        (bytevector-s32-ref . g$7223$1&dy4A)
        (bytevector-s32-native-set! . g$7229$1&dy4A)
        (bytevector-s32-native-ref . g$7225$1&dy4A)
        (bytevector-s16-set! . g$7219$1&dy4A)
        (bytevector-s16-ref . g$7215$1&dy4A)
        (bytevector-s16-native-set! . g$7221$1&dy4A)
        (bytevector-s16-native-ref . g$7217$1&dy4A)
        (bytevector-length . g$12905$1&dy4A)
        (bytevector-ieee-single-set! . g$12904$1&dy4A)
        (bytevector-ieee-single-ref . g$12903$1&dy4A)
        (bytevector-ieee-single-native-set! . g$7240$1&dy4A)
        (bytevector-ieee-single-native-ref . g$7238$1&dy4A)
        (bytevector-ieee-double-set! . g$12902$1&dy4A)
        (bytevector-ieee-double-ref . g$12901$1&dy4A)
        (bytevector-ieee-double-native-set! . g$7241$1&dy4A)
        (bytevector-ieee-double-native-ref . g$7239$1&dy4A)
        (bytevector-fill! . g$12900$1&dy4A)
        (bytevector-copy! . g$12899$1&dy4A)
        (bytevector-copy . g$12898$1&dy4A)
        (bytevector->uint-list . g$12897$1&dy4A)
        (bytevector->u8-list . g$12896$1&dy4A)
        (bytevector->sint-list . g$12895$1&dy4A)
        (no-nans-violation? . g$7850$1&dy4A)
        (no-infinities-violation? . g$7836$1&dy4A)
        (make-no-nans-violation . g$7849$1&dy4A)
        (make-no-infinities-violation . g$7835$1&dy4A)
        (real->flonum . g$12894$1&dy4A)
        (flzero? . g$12893$1&dy4A)
        (fltruncate . g$12892$1&dy4A)
        (fltan . g$12891$1&dy4A)
        (flsqrt . g$12890$1&dy4A)
        (flsin . g$12889$1&dy4A)
        (flround . g$12888$1&dy4A)
        (flpositive? . g$12887$1&dy4A)
        (flonum? . g$12886$1&dy4A)
        (flodd? . g$12885$1&dy4A)
        (flnumerator . g$12884$1&dy4A)
        (flnegative? . g$12883$1&dy4A)
        (flnan? . g$12882$1&dy4A)
        (flmod0 . g$12881$1&dy4A)
        (flmod . g$12880$1&dy4A)
        (flmin . g$12879$1&dy4A)
        (flmax . g$12878$1&dy4A)
        (fllog . g$12877$1&dy4A)
        (flinteger? . g$12876$1&dy4A)
        (flinfinite? . g$12875$1&dy4A)
        (flfloor . g$12874$1&dy4A)
        (flfinite? . g$12873$1&dy4A)
        (flexpt . g$12872$1&dy4A)
        (flexp . g$12871$1&dy4A)
        (fleven? . g$12870$1&dy4A)
        (fldiv0-and-mod0 . g$12869$1&dy4A)
        (fldiv0 . g$12868$1&dy4A)
        (fldiv-and-mod . g$12867$1&dy4A)
        (fldiv . g$12866$1&dy4A)
        (fldenominator . g$12865$1&dy4A)
        (flcos . g$12864$1&dy4A)
        (flceiling . g$12863$1&dy4A)
        (flatan . g$12862$1&dy4A)
        (flasin . g$12861$1&dy4A)
        (flacos . g$12860$1&dy4A)
        (flabs . g$12859$1&dy4A)
        (fl>? . g$12858$1&dy4A)
        (fl>=? . g$12857$1&dy4A)
        (fl=? . g$12856$1&dy4A)
        (fl<? . g$12855$1&dy4A)
        (fl<=? . g$12854$1&dy4A)
        (fl/ . g$12853$1&dy4A)
        (fl- . g$12852$1&dy4A)
        (fl+ . g$12851$1&dy4A)
        (fl* . g$12850$1&dy4A)
        (fixnum->flonum . g$12849$1&dy4A)
        (fxzero? . g$12848$1&dy4A)
        (fxxor . g$12847$1&dy4A)
        (fxrotate-bit-field . g$7781$1&dy4A)
        (fxreverse-bit-field . g$12846$1&dy4A)
        (fxpositive? . g$12845$1&dy4A)
        (fxodd? . g$12844$1&dy4A)
        (fxnot . g$12843$1&dy4A)
        (fxnegative? . g$12842$1&dy4A)
        (fxmod0 . g$12841$1&dy4A)
        (fxmod . g$12840$1&dy4A)
        (fxmin . g$12839$1&dy4A)
        (fxmax . g$12838$1&dy4A)
        (fxlength . g$12837$1&dy4A)
        (fxior . g$12836$1&dy4A)
        (fxif . g$7775$1&dy4A)
        (fxfirst-bit-set . g$12835$1&dy4A)
        (fxeven? . g$12834$1&dy4A)
        (fxdiv0-and-mod0 . g$12833$1&dy4A)
        (fxdiv0 . g$12832$1&dy4A)
        (fxdiv-and-mod . g$12831$1&dy4A)
        (fxdiv . g$12830$1&dy4A)
        (fxcopy-bit-field . g$7778$1&dy4A)
        (fxcopy-bit . g$7776$1&dy4A)
        (fxbit-set? . g$12829$1&dy4A)
        (fxbit-field . g$7777$1&dy4A)
        (fxbit-count . g$12828$1&dy4A)
        (fxarithmetic-shift-right . g$7780$1&dy4A)
        (fxarithmetic-shift-left . g$7779$1&dy4A)
        (fxarithmetic-shift . g$12827$1&dy4A)
        (fxand . g$12826$1&dy4A)
        (fx>? . g$12825$1&dy4A)
        (fx>=? . g$12824$1&dy4A)
        (fx=? . g$12823$1&dy4A)
        (fx<? . g$12822$1&dy4A)
        (fx<=? . g$12821$1&dy4A)
        (fx-/carry . g$12820$1&dy4A)
        (fx- . g$12819$1&dy4A)
        (fx+/carry . g$12818$1&dy4A)
        (fx+ . g$12817$1&dy4A)
        (fx*/carry . g$12816$1&dy4A)
        (fx* . g$12815$1&dy4A)
        (greatest-fixnum . g$12814$1&dy4A)
        (least-fixnum . g$12813$1&dy4A)
        (fixnum-width . g$12812$1&dy4A)
        (fixnum? . g$12811$1&dy4A)
        (bitwise-rotate-bit-field . g$7733$1&dy4A)
        (bitwise-reverse-bit-field . g$12810$1&dy4A)
        (bitwise-length . g$12809$1&dy4A)
        (bitwise-if . g$7727$1&dy4A)
        (bitwise-first-bit-set . g$12808$1&dy4A)
        (bitwise-copy-bit-field . g$7730$1&dy4A)
        (bitwise-copy-bit . g$7728$1&dy4A)
        (bitwise-bit-set? . g$12807$1&dy4A)
        (bitwise-bit-field . g$12806$1&dy4A)
        (bitwise-bit-count . g$12805$1&dy4A)
        (bitwise-xor . g$12804$1&dy4A)
        (bitwise-ior . g$12803$1&dy4A)
        (bitwise-and . g$12802$1&dy4A)
        (bitwise-not . g$12801$1&dy4A)
        (bitwise-arithmetic-shift-right . g$7732$1&dy4A)
        (bitwise-arithmetic-shift-left . g$7731$1&dy4A)
        (bitwise-arithmetic-shift . g$12800$1&dy4A)
        (zero? . g$12799$1&dy4A)
        (vector? . g$12798$1&dy4A)
        (vector-set! . g$12797$1&dy4A)
        (vector-ref . g$12796$1&dy4A)
        (vector-map . g$12795$1&dy4A)
        (vector-length . g$12794$1&dy4A)
        (vector-for-each . g$12793$1&dy4A)
        (vector-fill! . g$12792$1&dy4A)
        (vector->list . g$12791$1&dy4A)
        (vector . g$12790$1&dy4A)
        (values . g$12789$1&dy4A)
        (truncate . g$12788$1&dy4A)
        (tan . g$12787$1&dy4A)
        (symbol? . g$12786$1&dy4A)
        (symbol=? . g$6722$1&dy4A)
        (symbol->string . g$12785$1&dy4A)
        (substring . g$12784$1&dy4A)
        (string? . g$12783$1&dy4A)
        (string>? . g$6719$1&dy4A)
        (string>=? . g$6721$1&dy4A)
        (string=? . g$6717$1&dy4A)
        (string<? . g$6718$1&dy4A)
        (string<=? . g$6720$1&dy4A)
        (string-ref . g$12782$1&dy4A)
        (string-length . g$12781$1&dy4A)
        (string-for-each . g$12780$1&dy4A)
        (string-copy . g$12779$1&dy4A)
        (string-append . g$12778$1&dy4A)
        (string->symbol . g$12777$1&dy4A)
        (string->number . g$12776$1&dy4A)
        (string->list . g$12775$1&dy4A)
        (string . g$12774$1&dy4A)
        (sqrt . g$12773$1&dy4A)
        (sin . g$12772$1&dy4A)
        (round . g$12771$1&dy4A)
        (reverse . g$12770$1&dy4A)
        (real? . g$12769$1&dy4A)
        (real-valued? . g$12768$1&dy4A)
        (real-part . g$12767$1&dy4A)
        (rationalize . g$6763$1&dy4A)
        (rational? . g$12766$1&dy4A)
        (rational-valued? . g$12765$1&dy4A)
        (procedure? . g$12764$1&dy4A)
        (positive? . g$12763$1&dy4A)
        (pair? . g$12762$1&dy4A)
        (odd? . g$12761$1&dy4A)
        (numerator . g$12760$1&dy4A)
        (number? . g$12759$1&dy4A)
        (number->string . g$12758$1&dy4A)
        (null? . g$12757$1&dy4A)
        (not . g$12756$1&dy4A)
        (negative? . g$12755$1&dy4A)
        (nan? . g$12754$1&dy4A)
        (min . g$12753$1&dy4A)
        (max . g$12752$1&dy4A)
        (map . g$12751$1&dy4A)
        (make-vector . g$12750$1&dy4A)
        (make-string . g$12749$1&dy4A)
        (make-rectangular . g$12748$1&dy4A)
        (make-polar . g$12747$1&dy4A)
        (magnitude . g$12746$1&dy4A)
        (log . g$12745$1&dy4A)
        (list? . g$12744$1&dy4A)
        (list-tail . g$12743$1&dy4A)
        (list-ref . g$12742$1&dy4A)
        (list->vector . g$12741$1&dy4A)
        (list->string . g$12740$1&dy4A)
        (list . g$12739$1&dy4A)
        (length . g$12738$1&dy4A)
        (lcm . g$12737$1&dy4A)
        (integer? . g$12736$1&dy4A)
        (integer-valued? . g$12735$1&dy4A)
        (integer->char . g$12734$1&dy4A)
        (infinite? . g$12733$1&dy4A)
        (inexact? . g$12732$1&dy4A)
        (inexact . g$12731$1&dy4A)
        (imag-part . g$12730$1&dy4A)
        (gcd . g$12729$1&dy4A)
        (for-each . g$12728$1&dy4A)
        (floor . g$12727$1&dy4A)
        (finite? . g$12726$1&dy4A)
        (expt . g$12725$1&dy4A)
        (exp . g$12724$1&dy4A)
        (exact? . g$12723$1&dy4A)
        (exact-integer-sqrt . g$12722$1&dy4A)
        (exact . g$12721$1&dy4A)
        (even? . g$12720$1&dy4A)
        (error . g$12719$1&dy4A)
        (eqv? . g$12718$1&dy4A)
        (equal? . g$12717$1&dy4A)
        (eq? . g$12716$1&dy4A)
        (dynamic-wind . g$12715$1&dy4A)
        (div0-and-mod0 . g$12714$1&dy4A)
        (mod0 . g$12713$1&dy4A)
        (div0 . g$12712$1&dy4A)
        (div-and-mod . g$12711$1&dy4A)
        (mod . g$12710$1&dy4A)
        (div . g$12709$1&dy4A)
        (denominator . g$12708$1&dy4A)
        (cos . g$12707$1&dy4A)
        (cons . g$12706$1&dy4A)
        (complex? . g$12705$1&dy4A)
        (char? . g$12704$1&dy4A)
        (char>? . g$6760$1&dy4A)
        (char>=? . g$6762$1&dy4A)
        (char=? . g$6758$1&dy4A)
        (char<? . g$6759$1&dy4A)
        (char<=? . g$6761$1&dy4A)
        (char->integer . g$12703$1&dy4A)
        (ceiling . g$12702$1&dy4A)
        (call-with-values . g$12701$1&dy4A)
        (call/cc . g$12700$1&dy4A)
        (call-with-current-continuation . g$12699$1&dy4A)
        (cddddr . g$6682$1&dy4A)
        (cdddar . g$6681$1&dy4A)
        (cddadr . g$6680$1&dy4A)
        (cddaar . g$6679$1&dy4A)
        (cdaddr . g$6678$1&dy4A)
        (cdadar . g$6677$1&dy4A)
        (cdaadr . g$6676$1&dy4A)
        (cdaaar . g$6675$1&dy4A)
        (cadddr . g$6674$1&dy4A)
        (caddar . g$6673$1&dy4A)
        (cadadr . g$6672$1&dy4A)
        (cadaar . g$6671$1&dy4A)
        (caaddr . g$6670$1&dy4A)
        (caadar . g$6669$1&dy4A)
        (caaadr . g$6668$1&dy4A)
        (caaaar . g$6667$1&dy4A)
        (cdddr . g$6666$1&dy4A)
        (cddar . g$6665$1&dy4A)
        (cdadr . g$6664$1&dy4A)
        (cdaar . g$6663$1&dy4A)
        (caddr . g$6662$1&dy4A)
        (cadar . g$6661$1&dy4A)
        (caadr . g$6660$1&dy4A)
        (caaar . g$6659$1&dy4A)
        (cddr . g$6658$1&dy4A)
        (cdar . g$6657$1&dy4A)
        (cadr . g$6656$1&dy4A)
        (caar . g$6655$1&dy4A)
        (cdr . g$12698$1&dy4A)
        (car . g$12697$1&dy4A)
        (boolean? . g$12696$1&dy4A)
        (boolean=? . g$6723$1&dy4A)
        (atan . g$12695$1&dy4A)
        (assertion-violation . g$12694$1&dy4A)
        (asin . g$12693$1&dy4A)
        (apply . g$12692$1&dy4A)
        (append . g$12691$1&dy4A)
        (angle . g$12690$1&dy4A)
        (acos . g$12689$1&dy4A)
        (abs . g$12688$1&dy4A)
        (/ . g$12687$1&dy4A)
        (* . g$12686$1&dy4A)
        (- . g$12685$1&dy4A)
        (+ . g$12684$1&dy4A)
        (>= . g$12683$1&dy4A)
        (> . g$12682$1&dy4A)
        (= . g$12681$1&dy4A)
        (<= . g$12680$1&dy4A)
        (< . g$12679$1&dy4A)
        (deserialize-port . g$12675$1&dy4A)
        (serialize-port . g$12674$1&dy4A)
        (enum-set? . g$8096$1&dy4A)
        (load/args . g$12511$1&dy4A)
        (printf . g$8207$1&dy4A)
        (fprintf . g$8208$1&dy4A)
        (format . g$8209$1&dy4A)
        (procedure-form . g$12673$1&dy4A)
        (procedure-environment . g$12672$1&dy4A)
        (procedure-name . g$12671$1&dy4A)
        (procedure-arity . g$12670$1&dy4A)
        (gc-collect . g$12669$1&dy4A)
        (clr-type? . g$12668$1&dy4A)
        (get-clr-type . g$12667$1&dy4A)
        (vector-append . g$12665$1&dy4A)
        (vector-filter . g$12664$1&dy4A)
        (vector-reverse! . g$12663$1&dy4A)
        (vector-contains? . g$12662$1&dy4A)
        (vector-index-of . g$12661$1&dy4A)
        (vector-copy . g$12660$1&dy4A)
        (vector-binary-search . g$12659$1&dy4A)
        (string-ci-compare . g$12658$1&dy4A)
        (string-compare . g$12657$1&dy4A)
        (string-format . g$12656$1&dy4A)
        (trace-printer . g$12508$1&dy4A)
        (pmap . g$12654$1&dy4A)
        (time-it . g$12653$1&dy4A)
        (make-parameter . g$8236$1&dy4A)
        (environment-bindings . g$9509$1&dy4A)
        (environment-symbols . g$9512$1&dy4A)
        (interaction-environment-symbols . g$9508$1&dy4A)
        (optimization-level . g$12650$1&dy4A)
        (library-path . g$8691$1&dy4A)
        (expand . g$9516$1&dy4A)
        (&no-nans . g$12649$1&dy4A)
        (&no-infinities . g$12648$1&dy4A)
        (&i/o-encoding . g$12647$1&dy4A)
        (&i/o-decoding . g$12646$1&dy4A)
        (&i/o-port . g$12645$1&dy4A)
        (&i/o-file-does-not-exist . g$12644$1&dy4A)
        (&i/o-file-already-exists . g$12643$1&dy4A)
        (&i/o-file-is-read-only . g$12642$1&dy4A)
        (&i/o-file-protection . g$12641$1&dy4A)
        (&i/o-filename . g$12640$1&dy4A)
        (&i/o-invalid-position . g$12639$1&dy4A)
        (&i/o-write . g$12638$1&dy4A)
        (&i/o-read . g$12637$1&dy4A)
        (&i/o . g$12636$1&dy4A)
        (&non-continuable . g$12635$1&dy4A)
        (&undefined . g$12634$1&dy4A)
        (&syntax . g$12633$1&dy4A)
        (&lexical . g$12632$1&dy4A)
        (&implementation-restriction . g$12631$1&dy4A)
        (&who . g$12630$1&dy4A)
        (&irritants . g$12629$1&dy4A)
        (&assertion . g$12628$1&dy4A)
        (&violation . g$12627$1&dy4A)
        (&error . g$12626$1&dy4A)
        (&serious . g$12625$1&dy4A)
        (&warning . g$12624$1&dy4A)
        (&message . g$12623$1&dy4A)
        (&condition . g$12622$1&dy4A)
        (define-condition-type . g$12621$1&dy4A)
        (define-enumeration . g$12620$1&dy4A)
        (define-record-type . g$12619$1&dy4A)
        (parent-rtd . g$12618$1&dy4A)
        (nongenerative . g$12617$1&dy4A)
        (opaque . g$12616$1&dy4A)
        (sealed . g$12615$1&dy4A)
        (protocol . g$12614$1&dy4A)
        (parent . g$12613$1&dy4A)
        (immutable . g$12612$1&dy4A)
        (mutable . g$12611$1&dy4A)
        (fields . g$12610$1&dy4A)
        (error-handling-mode . g$12609$1&dy4A)
        (file-options . g$12608$1&dy4A)
        (buffer-mode . g$12607$1&dy4A)
        (eol-style . g$12606$1&dy4A)
        (guard . g$12605$1&dy4A)
        (trace-letrec-syntax . g$12604$1&dy4A)
        (trace-let-syntax . g$12603$1&dy4A)
        (trace-define-syntax . g$12602$1&dy4A)
        (trace-define . g$12601$1&dy4A)
        (trace-lambda . g$12600$1&dy4A)
        (unsyntax-splicing . g$12599$1&dy4A)
        (unsyntax . g$12598$1&dy4A)
        (unquote-splicing . g$12597$1&dy4A)
        (unquote . g$12596$1&dy4A)
        (_ . g$12595$1&dy4A)
        (else . g$12594$1&dy4A)
        (=> . g$12593$1&dy4A)
        (... . g$12592$1&dy4A)
        (assert . g$12591$1&dy4A)
        (endianness . g$12590$1&dy4A)
        (delay . g$12589$1&dy4A)
        (time . g$12588$1&dy4A)
        (or . g$12587$1&dy4A)
        (and . g$12586$1&dy4A)
        (do . g$12585$1&dy4A)
        (cond . g$12584$1&dy4A)
        (let* . g$12583$1&dy4A)
        (let . g$12582$1&dy4A)
        (identifier-syntax . g$12581$1&dy4A)
        (with-syntax . g$12580$1&dy4A)
        (quasisyntax . g$12579$1&dy4A)
        (quasiquote . g$12578$1&dy4A)
        (syntax-rules . g$12577$1&dy4A)
        (include-into . g$12576$1&dy4A)
        (include . g$12575$1&dy4A)
        (let-values . g$12573$1&dy4A)
        (let*-values . g$12572$1&dy4A)
        (record-constructor-descriptor . g$12571$1&dy4A)
        (record-type-descriptor . g$12570$1&dy4A)
        (fluid-let-syntax . g$12569$1&dy4A)
        (case . g$12568$1&dy4A)
        (parameterize . g$12567$1&dy4A)
        (unless . g$12566$1&dy4A)
        (when . g$12565$1&dy4A)
        (if . g$12564$1&dy4A)
        (letrec* . g$12563$1&dy4A)
        (letrec . g$12562$1&dy4A)
        (case-lambda . g$12560$1&dy4A)
        (lambda . g$12559$1&dy4A)
        (syntax . g$12558$1&dy4A)
        (syntax-case . g$12557$1&dy4A)
        (quote . g$12556$1&dy4A)
        (letrec-syntax . g$12554$1&dy4A)
        (let-syntax . g$12553$1&dy4A)
        (set! . g$12552$1&dy4A)
        (export . g$12551$1&dy4A)
        (import . g$12550$1&dy4A)
        (library . g$12549$1&dy4A)
        (begin . g$12548$1&dy4A)
        (module . g$12547$1&dy4A)
        (define-syntax . g$12546$1&dy4A)
        (define . g$12545$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13163$1&dy4A
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12651$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13164$1&dy4A
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13104$1&dy4A)
        (annotation-source . g$13103$1&dy4A)
        (annotation-expression . g$13102$1&dy4A)
        (annotation? . g$13101$1&dy4A)
        (read-annotated . g$13100$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13165$1&dy4A
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13070$1&dy4A)
        (serialize-library . g$13069$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13166$1&dy4A
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$9139$1&dy4A)
        (variable-transformer? . g$9138$1&dy4A)
        (eqv-hash . g$12677$1&dy4A)
        (reverse! . g$12676$1&dy4A)
        (make-promise . g$7553$1&dy4A)
        (format . g$8209$1&dy4A)
        (get-command-line . g$12666$1&dy4A)
        (make-traced-procedure . g$12655$1&dy4A)
        (make-traced-macro . g$8229$1&dy4A)
        (assertion-error . g$9530$1&dy4A)
        (library-locator . g$12652$1&dy4A)
        (get-library-paths . g$12651$1&dy4A)
        (library-path . g$8691$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13167$1&dy4A
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12678$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13168$1&dy4A
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$13088$1&dy4A)
        (clr-field-set!-internal . g$13087$1&dy4A)
        (clr-field-get-internal . g$13086$1&dy4A)
        (clr-cast-internal . g$13085$1&dy4A)
        (clr-call-internal . g$13084$1&dy4A)
        (clr-new-internal . g$13083$1&dy4A)
        (clr-new-array-internal . g$13082$1&dy4A)
        (clr-is-internal . g$13081$1&dy4A)
        (clr-reference-internal . g$13080$1&dy4A)
        (clr-using-internal . g$13079$1&dy4A)
        (clr-clear-usings-internal . g$13078$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13169$1&dy4A
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12597$1&dy4A)
        (unquote . g$12596$1&dy4A)
        (else . g$12594$1&dy4A)
        (=> . g$12593$1&dy4A)
        (delay . g$12589$1&dy4A)
        (or . g$12587$1&dy4A)
        (and . g$12586$1&dy4A)
        (do . g$12585$1&dy4A)
        (cond . g$12584$1&dy4A)
        (let* . g$12583$1&dy4A)
        (let . g$12582$1&dy4A)
        (quasiquote . g$12578$1&dy4A)
        (syntax-rules . g$12577$1&dy4A)
        (case . g$12568$1&dy4A)
        (if . g$12564$1&dy4A)
        (letrec . g$12562$1&dy4A)
        (lambda . g$12559$1&dy4A)
        (quote . g$12556$1&dy4A)
        (letrec-syntax . g$12554$1&dy4A)
        (let-syntax . g$12553$1&dy4A)
        (set! . g$12552$1&dy4A)
        (begin . g$12548$1&dy4A)
        (define-syntax . g$12546$1&dy4A)
        (define . g$12545$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13170$1&dy4A
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$9540$1&dy4A)
        (char-ready? . g$13068$1&dy4A)
        (string-ci>? . g$7632$1&dy4A)
        (string-ci>=? . g$7634$1&dy4A)
        (string-ci=? . g$7630$1&dy4A)
        (string-ci<? . g$7631$1&dy4A)
        (string-ci<=? . g$7633$1&dy4A)
        (char-whitespace? . g$13059$1&dy4A)
        (char-upper-case? . g$13058$1&dy4A)
        (char-numeric? . g$13056$1&dy4A)
        (char-lower-case? . g$13055$1&dy4A)
        (char-upcase . g$13053$1&dy4A)
        (char-downcase . g$13050$1&dy4A)
        (char-ci>? . g$7671$1&dy4A)
        (char-ci>=? . g$7673$1&dy4A)
        (char-ci=? . g$7669$1&dy4A)
        (char-ci<? . g$7670$1&dy4A)
        (char-ci<=? . g$7672$1&dy4A)
        (char-alphabetic? . g$13049$1&dy4A)
        (call-with-output-file . g$8063$1&dy4A)
        (call-with-input-file . g$8062$1&dy4A)
        (write-char . g$13017$1&dy4A)
        (write . g$13016$1&dy4A)
        (with-output-to-file . g$8061$1&dy4A)
        (with-input-from-file . g$8060$1&dy4A)
        (read-char . g$13015$1&dy4A)
        (read . g$13014$1&dy4A)
        (peek-char . g$13013$1&dy4A)
        (open-output-file . g$13012$1&dy4A)
        (open-input-file . g$13011$1&dy4A)
        (newline . g$13010$1&dy4A)
        (display . g$13009$1&dy4A)
        (close-output-port . g$13008$1&dy4A)
        (close-input-port . g$13007$1&dy4A)
        (eof-object? . g$13006$1&dy4A)
        (eof-object . g$13005$1&dy4A)
        (current-error-port . g$13004$1&dy4A)
        (current-output-port . g$13003$1&dy4A)
        (current-input-port . g$13002$1&dy4A)
        (output-port? . g$13001$1&dy4A)
        (input-port? . g$13000$1&dy4A)
        (scheme-report-environment . g$9515$1&dy4A)
        (quotient . g$7550$1&dy4A)
        (null-environment . g$9514$1&dy4A)
        (remainder . g$7551$1&dy4A)
        (modulo . g$7552$1&dy4A)
        (inexact->exact . g$12939$1&dy4A)
        (force . g$7554$1&dy4A)
        (exact->inexact . g$12938$1&dy4A)
        (string-fill! . g$12936$1&dy4A)
        (string-set! . g$12935$1&dy4A)
        (set-cdr! . g$12934$1&dy4A)
        (set-car! . g$12933$1&dy4A)
        (memv . g$6552$1&dy4A)
        (memq . g$6551$1&dy4A)
        (member . g$6553$1&dy4A)
        (assv . g$6548$1&dy4A)
        (assq . g$6547$1&dy4A)
        (assoc . g$6549$1&dy4A)
        (eval . g$9517$1&dy4A)
        (zero? . g$12799$1&dy4A)
        (vector? . g$12798$1&dy4A)
        (vector-set! . g$12797$1&dy4A)
        (vector-ref . g$12796$1&dy4A)
        (vector-length . g$12794$1&dy4A)
        (vector-fill! . g$12792$1&dy4A)
        (vector->list . g$12791$1&dy4A)
        (vector . g$12790$1&dy4A)
        (values . g$12789$1&dy4A)
        (truncate . g$12788$1&dy4A)
        (tan . g$12787$1&dy4A)
        (symbol? . g$12786$1&dy4A)
        (symbol->string . g$12785$1&dy4A)
        (substring . g$12784$1&dy4A)
        (string? . g$12783$1&dy4A)
        (string>? . g$6719$1&dy4A)
        (string>=? . g$6721$1&dy4A)
        (string=? . g$6717$1&dy4A)
        (string<? . g$6718$1&dy4A)
        (string<=? . g$6720$1&dy4A)
        (string-ref . g$12782$1&dy4A)
        (string-length . g$12781$1&dy4A)
        (string-copy . g$12779$1&dy4A)
        (string-append . g$12778$1&dy4A)
        (string->symbol . g$12777$1&dy4A)
        (string->number . g$12776$1&dy4A)
        (string->list . g$12775$1&dy4A)
        (string . g$12774$1&dy4A)
        (sqrt . g$12773$1&dy4A)
        (sin . g$12772$1&dy4A)
        (round . g$12771$1&dy4A)
        (reverse . g$12770$1&dy4A)
        (real? . g$12769$1&dy4A)
        (real-part . g$12767$1&dy4A)
        (rationalize . g$6763$1&dy4A)
        (rational? . g$12766$1&dy4A)
        (procedure? . g$12764$1&dy4A)
        (positive? . g$12763$1&dy4A)
        (pair? . g$12762$1&dy4A)
        (odd? . g$12761$1&dy4A)
        (numerator . g$12760$1&dy4A)
        (number? . g$12759$1&dy4A)
        (number->string . g$12758$1&dy4A)
        (null? . g$12757$1&dy4A)
        (not . g$12756$1&dy4A)
        (negative? . g$12755$1&dy4A)
        (min . g$12753$1&dy4A)
        (max . g$12752$1&dy4A)
        (map . g$12751$1&dy4A)
        (make-vector . g$12750$1&dy4A)
        (make-string . g$12749$1&dy4A)
        (make-rectangular . g$12748$1&dy4A)
        (make-polar . g$12747$1&dy4A)
        (magnitude . g$12746$1&dy4A)
        (log . g$12745$1&dy4A)
        (list? . g$12744$1&dy4A)
        (list-tail . g$12743$1&dy4A)
        (list-ref . g$12742$1&dy4A)
        (list->vector . g$12741$1&dy4A)
        (list->string . g$12740$1&dy4A)
        (list . g$12739$1&dy4A)
        (length . g$12738$1&dy4A)
        (lcm . g$12737$1&dy4A)
        (integer? . g$12736$1&dy4A)
        (integer->char . g$12734$1&dy4A)
        (inexact? . g$12732$1&dy4A)
        (imag-part . g$12730$1&dy4A)
        (gcd . g$12729$1&dy4A)
        (for-each . g$12728$1&dy4A)
        (floor . g$12727$1&dy4A)
        (expt . g$12725$1&dy4A)
        (exp . g$12724$1&dy4A)
        (exact? . g$12723$1&dy4A)
        (even? . g$12720$1&dy4A)
        (eqv? . g$12718$1&dy4A)
        (equal? . g$12717$1&dy4A)
        (eq? . g$12716$1&dy4A)
        (dynamic-wind . g$12715$1&dy4A)
        (denominator . g$12708$1&dy4A)
        (cos . g$12707$1&dy4A)
        (cons . g$12706$1&dy4A)
        (complex? . g$12705$1&dy4A)
        (char? . g$12704$1&dy4A)
        (char>? . g$6760$1&dy4A)
        (char>=? . g$6762$1&dy4A)
        (char=? . g$6758$1&dy4A)
        (char<? . g$6759$1&dy4A)
        (char<=? . g$6761$1&dy4A)
        (char->integer . g$12703$1&dy4A)
        (ceiling . g$12702$1&dy4A)
        (call-with-values . g$12701$1&dy4A)
        (call-with-current-continuation . g$12699$1&dy4A)
        (cddddr . g$6682$1&dy4A)
        (cdddar . g$6681$1&dy4A)
        (cddadr . g$6680$1&dy4A)
        (cddaar . g$6679$1&dy4A)
        (cdaddr . g$6678$1&dy4A)
        (cdadar . g$6677$1&dy4A)
        (cdaadr . g$6676$1&dy4A)
        (cdaaar . g$6675$1&dy4A)
        (cadddr . g$6674$1&dy4A)
        (caddar . g$6673$1&dy4A)
        (cadadr . g$6672$1&dy4A)
        (cadaar . g$6671$1&dy4A)
        (caaddr . g$6670$1&dy4A)
        (caadar . g$6669$1&dy4A)
        (caaadr . g$6668$1&dy4A)
        (caaaar . g$6667$1&dy4A)
        (cdddr . g$6666$1&dy4A)
        (cddar . g$6665$1&dy4A)
        (cdadr . g$6664$1&dy4A)
        (cdaar . g$6663$1&dy4A)
        (caddr . g$6662$1&dy4A)
        (cadar . g$6661$1&dy4A)
        (caadr . g$6660$1&dy4A)
        (caaar . g$6659$1&dy4A)
        (cddr . g$6658$1&dy4A)
        (cdar . g$6657$1&dy4A)
        (cadr . g$6656$1&dy4A)
        (caar . g$6655$1&dy4A)
        (cdr . g$12698$1&dy4A)
        (car . g$12697$1&dy4A)
        (boolean? . g$12696$1&dy4A)
        (atan . g$12695$1&dy4A)
        (asin . g$12693$1&dy4A)
        (apply . g$12692$1&dy4A)
        (append . g$12691$1&dy4A)
        (angle . g$12690$1&dy4A)
        (acos . g$12689$1&dy4A)
        (abs . g$12688$1&dy4A)
        (/ . g$12687$1&dy4A)
        (* . g$12686$1&dy4A)
        (- . g$12685$1&dy4A)
        (+ . g$12684$1&dy4A)
        (>= . g$12683$1&dy4A)
        (> . g$12682$1&dy4A)
        (= . g$12681$1&dy4A)
        (<= . g$12680$1&dy4A)
        (< . g$12679$1&dy4A)
        (unquote-splicing . g$12597$1&dy4A)
        (unquote . g$12596$1&dy4A)
        (else . g$12594$1&dy4A)
        (=> . g$12593$1&dy4A)
        (... . g$12592$1&dy4A)
        (delay . g$12589$1&dy4A)
        (or . g$12587$1&dy4A)
        (and . g$12586$1&dy4A)
        (do . g$12585$1&dy4A)
        (cond . g$12584$1&dy4A)
        (let* . g$12583$1&dy4A)
        (let . g$12582$1&dy4A)
        (quasiquote . g$12578$1&dy4A)
        (syntax-rules . g$12577$1&dy4A)
        (case . g$12568$1&dy4A)
        (if . g$12564$1&dy4A)
        (letrec . g$12562$1&dy4A)
        (lambda . g$12559$1&dy4A)
        (quote . g$12556$1&dy4A)
        (letrec-syntax . g$12554$1&dy4A)
        (let-syntax . g$12553$1&dy4A)
        (set! . g$12552$1&dy4A)
        (begin . g$12548$1&dy4A)
        (define-syntax . g$12546$1&dy4A)
        (define . g$12545$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13171$1&dy4A
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13067$1&dy4A)
        (string-titlecase . g$13066$1&dy4A)
        (string-normalize-nfkd . g$13065$1&dy4A)
        (string-normalize-nfkc . g$13064$1&dy4A)
        (string-normalize-nfd . g$13063$1&dy4A)
        (string-normalize-nfc . g$13062$1&dy4A)
        (string-foldcase . g$13061$1&dy4A)
        (string-downcase . g$13060$1&dy4A)
        (string-ci>? . g$7632$1&dy4A)
        (string-ci>=? . g$7634$1&dy4A)
        (string-ci=? . g$7630$1&dy4A)
        (string-ci<? . g$7631$1&dy4A)
        (string-ci<=? . g$7633$1&dy4A)
        (char-whitespace? . g$13059$1&dy4A)
        (char-upper-case? . g$13058$1&dy4A)
        (char-title-case? . g$13057$1&dy4A)
        (char-numeric? . g$13056$1&dy4A)
        (char-lower-case? . g$13055$1&dy4A)
        (char-general-category . g$13054$1&dy4A)
        (char-upcase . g$13053$1&dy4A)
        (char-titlecase . g$13052$1&dy4A)
        (char-foldcase . g$13051$1&dy4A)
        (char-downcase . g$13050$1&dy4A)
        (char-ci>? . g$7671$1&dy4A)
        (char-ci>=? . g$7673$1&dy4A)
        (char-ci=? . g$7669$1&dy4A)
        (char-ci<? . g$7670$1&dy4A)
        (char-ci<=? . g$7672$1&dy4A)
        (char-alphabetic? . g$13049$1&dy4A)
        (make-variable-transformer . g$9137$1&dy4A)
        (identifier? . g$9535$1&dy4A)
        (generate-temporaries . g$9524$1&dy4A)
        (free-identifier=? . g$9525$1&dy4A)
        (syntax->datum . g$9537$1&dy4A)
        (datum->syntax . g$9536$1&dy4A)
        (bound-identifier=? . g$9526$1&dy4A)
        (record-type-descriptor? . g$13048$1&dy4A)
        (record-predicate . g$13047$1&dy4A)
        (record-mutator . g$13046$1&dy4A)
        (record-constructor . g$13045$1&dy4A)
        (record-accessor . g$13044$1&dy4A)
        (make-record-type-descriptor . g$13043$1&dy4A)
        (make-record-constructor-descriptor . g$13042$1&dy4A)
        (record? . g$13041$1&dy4A)
        (record-type-uid . g$13040$1&dy4A)
        (record-type-sealed? . g$13039$1&dy4A)
        (record-type-parent . g$13038$1&dy4A)
        (record-type-opaque? . g$13037$1&dy4A)
        (record-type-name . g$13036$1&dy4A)
        (record-type-generative? . g$13035$1&dy4A)
        (record-type-field-names . g$13034$1&dy4A)
        (record-rtd . g$13033$1&dy4A)
        (record-field-mutable? . g$13032$1&dy4A)
        (delete-file . g$7207$1&dy4A)
        (file-exists? . g$7206$1&dy4A)
        (vector-sort! . g$13031$1&dy4A)
        (vector-sort . g$13030$1&dy4A)
        (list-sort . g$7570$1&dy4A)
        (symbol-hash . g$13029$1&dy4A)
        (string-ci-hash . g$13028$1&dy4A)
        (string-hash . g$13027$1&dy4A)
        (equal-hash . g$13026$1&dy4A)
        (hashtable-equivalence-function . g$13025$1&dy4A)
        (make-hashtable . g$13024$1&dy4A)
        (hashtable-hash-function . g$13023$1&dy4A)
        (make-eqv-hashtable . g$7174$1&dy4A)
        (make-eq-hashtable . g$7173$1&dy4A)
        (hashtable? . g$13022$1&dy4A)
        (hashtable-update! . g$7180$1&dy4A)
        (hashtable-size . g$7175$1&dy4A)
        (hashtable-set! . g$7177$1&dy4A)
        (hashtable-ref . g$7176$1&dy4A)
        (hashtable-mutable? . g$13021$1&dy4A)
        (hashtable-keys . g$13020$1&dy4A)
        (hashtable-entries . g$13019$1&dy4A)
        (hashtable-delete! . g$7178$1&dy4A)
        (hashtable-copy . g$13018$1&dy4A)
        (hashtable-contains? . g$7179$1&dy4A)
        (hashtable-clear! . g$7181$1&dy4A)
        (call-with-output-file . g$8063$1&dy4A)
        (call-with-input-file . g$8062$1&dy4A)
        (write-char . g$13017$1&dy4A)
        (write . g$13016$1&dy4A)
        (with-output-to-file . g$8061$1&dy4A)
        (with-input-from-file . g$8060$1&dy4A)
        (read-char . g$13015$1&dy4A)
        (read . g$13014$1&dy4A)
        (peek-char . g$13013$1&dy4A)
        (open-output-file . g$13012$1&dy4A)
        (open-input-file . g$13011$1&dy4A)
        (newline . g$13010$1&dy4A)
        (display . g$13009$1&dy4A)
        (close-output-port . g$13008$1&dy4A)
        (close-input-port . g$13007$1&dy4A)
        (eof-object? . g$13006$1&dy4A)
        (eof-object . g$13005$1&dy4A)
        (current-error-port . g$13004$1&dy4A)
        (current-output-port . g$13003$1&dy4A)
        (current-input-port . g$13002$1&dy4A)
        (output-port? . g$13001$1&dy4A)
        (input-port? . g$13000$1&dy4A)
        (utf-8-codec . g$12999$1&dy4A)
        (utf-16-codec . g$12998$1&dy4A)
        (transcoder-error-handling-mode . g$12997$1&dy4A)
        (transcoder-eol-style . g$12996$1&dy4A)
        (transcoder-codec . g$12995$1&dy4A)
        (transcoded-port . g$12994$1&dy4A)
        (textual-port? . g$12993$1&dy4A)
        (string->bytevector . g$12992$1&dy4A)
        (standard-output-port . g$12991$1&dy4A)
        (standard-input-port . g$12990$1&dy4A)
        (standard-error-port . g$12989$1&dy4A)
        (set-port-position! . g$12988$1&dy4A)
        (put-u8 . g$12987$1&dy4A)
        (put-string . g$12986$1&dy4A)
        (put-datum . g$12985$1&dy4A)
        (put-char . g$12984$1&dy4A)
        (put-bytevector . g$12983$1&dy4A)
        (port? . g$8036$1&dy4A)
        (port-transcoder . g$12982$1&dy4A)
        (port-position . g$12981$1&dy4A)
        (port-has-set-port-position!? . g$12980$1&dy4A)
        (port-has-port-position? . g$12979$1&dy4A)
        (port-eof? . g$12978$1&dy4A)
        (output-port-buffer-mode . g$12977$1&dy4A)
        (open-string-output-port . g$8035$1&dy4A)
        (open-string-input-port . g$12976$1&dy4A)
        (open-file-output-port . g$12975$1&dy4A)
        (open-file-input/output-port . g$12974$1&dy4A)
        (open-file-input-port . g$12973$1&dy4A)
        (open-bytevector-output-port . g$12972$1&dy4A)
        (open-bytevector-input-port . g$12971$1&dy4A)
        (native-transcoder . g$12970$1&dy4A)
        (native-eol-style . g$12969$1&dy4A)
        (make-transcoder . g$12968$1&dy4A)
        (latin-1-codec . g$12967$1&dy4A)
        (make-i/o-write-error . g$7892$1&dy4A)
        (make-i/o-read-error . g$7878$1&dy4A)
        (make-i/o-port-error . g$7997$1&dy4A)
        (make-i/o-invalid-position-error . g$7907$1&dy4A)
        (make-i/o-filename-error . g$7924$1&dy4A)
        (make-i/o-file-protection-error . g$7940$1&dy4A)
        (make-i/o-file-is-read-only-error . g$7954$1&dy4A)
        (make-i/o-file-does-not-exist-error . g$7982$1&dy4A)
        (make-i/o-file-already-exists-error . g$7968$1&dy4A)
        (make-i/o-error . g$7864$1&dy4A)
        (make-i/o-encoding-error . g$8028$1&dy4A)
        (make-i/o-decoding-error . g$8013$1&dy4A)
        (make-custom-textual-output-port . g$12966$1&dy4A)
        (make-custom-textual-input/output-port . g$12965$1&dy4A)
        (make-custom-textual-input-port . g$12964$1&dy4A)
        (make-custom-binary-output-port . g$12963$1&dy4A)
        (make-custom-binary-input/output-port . g$12962$1&dy4A)
        (make-custom-binary-input-port . g$12961$1&dy4A)
        (make-bytevector . g$12960$1&dy4A)
        (lookahead-u8 . g$12959$1&dy4A)
        (lookahead-char . g$12958$1&dy4A)
        (i/o-write-error? . g$7893$1&dy4A)
        (i/o-read-error? . g$7879$1&dy4A)
        (i/o-port-error? . g$7999$1&dy4A)
        (i/o-invalid-position-error? . g$7909$1&dy4A)
        (i/o-error-position . g$7910$1&dy4A)
        (i/o-filename-error? . g$7926$1&dy4A)
        (i/o-file-protection-error? . g$7941$1&dy4A)
        (i/o-file-is-read-only-error? . g$7955$1&dy4A)
        (i/o-file-does-not-exist-error? . g$7983$1&dy4A)
        (i/o-file-already-exists-error? . g$7969$1&dy4A)
        (i/o-error? . g$7865$1&dy4A)
        (i/o-error-port . g$8000$1&dy4A)
        (i/o-error-filename . g$7927$1&dy4A)
        (i/o-encoding-error? . g$8030$1&dy4A)
        (i/o-encoding-error-char . g$8031$1&dy4A)
        (i/o-decoding-error? . g$8014$1&dy4A)
        (get-u8 . g$12957$1&dy4A)
        (get-string-n! . g$12956$1&dy4A)
        (get-string-n . g$12955$1&dy4A)
        (get-string-all . g$12954$1&dy4A)
        (get-line . g$12953$1&dy4A)
        (get-datum . g$12952$1&dy4A)
        (get-char . g$12951$1&dy4A)
        (get-bytevector-some . g$12950$1&dy4A)
        (get-bytevector-n! . g$12949$1&dy4A)
        (get-bytevector-n . g$12948$1&dy4A)
        (get-bytevector-all . g$12947$1&dy4A)
        (flush-output-port . g$12946$1&dy4A)
        (close-port . g$12945$1&dy4A)
        (call-with-string-output-port . g$8037$1&dy4A)
        (call-with-port . g$12944$1&dy4A)
        (call-with-bytevector-output-port . g$12943$1&dy4A)
        (bytevector->string . g$12942$1&dy4A)
        (buffer-mode? . g$12941$1&dy4A)
        (binary-port? . g$12940$1&dy4A)
        (exit . g$12937$1&dy4A)
        (command-line . g$12509$1&dy4A)
        (remove . g$6562$1&dy4A)
        (remv . g$6563$1&dy4A)
        (remp . g$6545$1&dy4A)
        (remq . g$6564$1&dy4A)
        (partition . g$6544$1&dy4A)
        (memv . g$6552$1&dy4A)
        (memq . g$6551$1&dy4A)
        (memp . g$6554$1&dy4A)
        (member . g$6553$1&dy4A)
        (exists . g$6558$1&dy4A)
        (for-all . g$6557$1&dy4A)
        (fold-right . g$6561$1&dy4A)
        (fold-left . g$6560$1&dy4A)
        (find . g$6543$1&dy4A)
        (filter . g$6546$1&dy4A)
        (cons* . g$6559$1&dy4A)
        (assv . g$6548$1&dy4A)
        (assq . g$6547$1&dy4A)
        (assp . g$6550$1&dy4A)
        (assoc . g$6549$1&dy4A)
        (with-exception-handler . g$12932$1&dy4A)
        (raise-continuable . g$12931$1&dy4A)
        (raise . g$12930$1&dy4A)
        (make-enumeration . g$8121$1&dy4A)
        (enum-set=? . g$8128$1&dy4A)
        (enum-set-universe . g$8122$1&dy4A)
        (enum-set-union . g$8129$1&dy4A)
        (enum-set-subset? . g$8127$1&dy4A)
        (enum-set-projection . g$8133$1&dy4A)
        (enum-set-member? . g$8126$1&dy4A)
        (enum-set-intersection . g$8130$1&dy4A)
        (enum-set-indexer . g$8123$1&dy4A)
        (enum-set-difference . g$8131$1&dy4A)
        (enum-set-constructor . g$8124$1&dy4A)
        (enum-set-complement . g$8132$1&dy4A)
        (enum-set->list . g$8125$1&dy4A)
        (who-condition? . g$7461$1&dy4A)
        (warning? . g$7372$1&dy4A)
        (violation? . g$7414$1&dy4A)
        (undefined-violation? . g$7538$1&dy4A)
        (syntax-violation? . g$7522$1&dy4A)
        (syntax-violation-subform . g$7524$1&dy4A)
        (syntax-violation-form . g$7523$1&dy4A)
        (syntax-violation . g$9534$1&dy4A)
        (simple-conditions . g$12929$1&dy4A)
        (serious-condition? . g$7386$1&dy4A)
        (non-continuable-violation? . g$7476$1&dy4A)
        (message-condition? . g$7357$1&dy4A)
        (make-who-condition . g$7459$1&dy4A)
        (make-warning . g$7371$1&dy4A)
        (make-violation . g$7413$1&dy4A)
        (make-undefined-violation . g$7537$1&dy4A)
        (make-syntax-violation . g$7519$1&dy4A)
        (make-serious-condition . g$7385$1&dy4A)
        (make-non-continuable-violation . g$7475$1&dy4A)
        (make-message-condition . g$7355$1&dy4A)
        (make-lexical-violation . g$7503$1&dy4A)
        (make-irritants-condition . g$7442$1&dy4A)
        (make-implementation-restriction-violation . g$7489$1&dy4A)
        (make-error . g$7399$1&dy4A)
        (make-assertion-violation . g$7427$1&dy4A)
        (lexical-violation? . g$7504$1&dy4A)
        (irritants-condition? . g$7444$1&dy4A)
        (implementation-restriction-violation? . g$7490$1&dy4A)
        (error? . g$7400$1&dy4A)
        (condition-who . g$7462$1&dy4A)
        (condition-predicate . g$12928$1&dy4A)
        (condition-message . g$7358$1&dy4A)
        (condition-irritants . g$7445$1&dy4A)
        (condition-accessor . g$12927$1&dy4A)
        (condition . g$12926$1&dy4A)
        (assertion-violation? . g$7428$1&dy4A)
        (condition? . g$12925$1&dy4A)
        (utf32->string . g$12924$1&dy4A)
        (utf16->string . g$12923$1&dy4A)
        (utf8->string . g$12922$1&dy4A)
        (uint-list->bytevector . g$12921$1&dy4A)
        (u8-list->bytevector . g$12920$1&dy4A)
        (string->utf8 . g$12919$1&dy4A)
        (string->utf32 . g$12918$1&dy4A)
        (string->utf16 . g$12917$1&dy4A)
        (sint-list->bytevector . g$12916$1&dy4A)
        (native-endianness . g$7213$1&dy4A)
        (bytevector? . g$12915$1&dy4A)
        (bytevector=? . g$12914$1&dy4A)
        (bytevector-uint-set! . g$12913$1&dy4A)
        (bytevector-uint-ref . g$12912$1&dy4A)
        (bytevector-u8-set! . g$12911$1&dy4A)
        (bytevector-u8-ref . g$12910$1&dy4A)
        (bytevector-u64-set! . g$7234$1&dy4A)
        (bytevector-u64-ref . g$7230$1&dy4A)
        (bytevector-u64-native-set! . g$7236$1&dy4A)
        (bytevector-u64-native-ref . g$7232$1&dy4A)
        (bytevector-u32-set! . g$7226$1&dy4A)
        (bytevector-u32-ref . g$7222$1&dy4A)
        (bytevector-u32-native-set! . g$7228$1&dy4A)
        (bytevector-u32-native-ref . g$7224$1&dy4A)
        (bytevector-u16-set! . g$7218$1&dy4A)
        (bytevector-u16-ref . g$7214$1&dy4A)
        (bytevector-u16-native-set! . g$7220$1&dy4A)
        (bytevector-u16-native-ref . g$7216$1&dy4A)
        (bytevector-sint-set! . g$12909$1&dy4A)
        (bytevector-sint-ref . g$12908$1&dy4A)
        (bytevector-s8-set! . g$12907$1&dy4A)
        (bytevector-s8-ref . g$12906$1&dy4A)
        (bytevector-s64-set! . g$7235$1&dy4A)
        (bytevector-s64-ref . g$7231$1&dy4A)
        (bytevector-s64-native-set! . g$7237$1&dy4A)
        (bytevector-s64-native-ref . g$7233$1&dy4A)
        (bytevector-s32-set! . g$7227$1&dy4A)
        (bytevector-s32-ref . g$7223$1&dy4A)
        (bytevector-s32-native-set! . g$7229$1&dy4A)
        (bytevector-s32-native-ref . g$7225$1&dy4A)
        (bytevector-s16-set! . g$7219$1&dy4A)
        (bytevector-s16-ref . g$7215$1&dy4A)
        (bytevector-s16-native-set! . g$7221$1&dy4A)
        (bytevector-s16-native-ref . g$7217$1&dy4A)
        (bytevector-length . g$12905$1&dy4A)
        (bytevector-ieee-single-set! . g$12904$1&dy4A)
        (bytevector-ieee-single-ref . g$12903$1&dy4A)
        (bytevector-ieee-single-native-set! . g$7240$1&dy4A)
        (bytevector-ieee-single-native-ref . g$7238$1&dy4A)
        (bytevector-ieee-double-set! . g$12902$1&dy4A)
        (bytevector-ieee-double-ref . g$12901$1&dy4A)
        (bytevector-ieee-double-native-set! . g$7241$1&dy4A)
        (bytevector-ieee-double-native-ref . g$7239$1&dy4A)
        (bytevector-fill! . g$12900$1&dy4A)
        (bytevector-copy! . g$12899$1&dy4A)
        (bytevector-copy . g$12898$1&dy4A)
        (bytevector->uint-list . g$12897$1&dy4A)
        (bytevector->u8-list . g$12896$1&dy4A)
        (bytevector->sint-list . g$12895$1&dy4A)
        (no-nans-violation? . g$7850$1&dy4A)
        (no-infinities-violation? . g$7836$1&dy4A)
        (make-no-nans-violation . g$7849$1&dy4A)
        (make-no-infinities-violation . g$7835$1&dy4A)
        (real->flonum . g$12894$1&dy4A)
        (flzero? . g$12893$1&dy4A)
        (fltruncate . g$12892$1&dy4A)
        (fltan . g$12891$1&dy4A)
        (flsqrt . g$12890$1&dy4A)
        (flsin . g$12889$1&dy4A)
        (flround . g$12888$1&dy4A)
        (flpositive? . g$12887$1&dy4A)
        (flonum? . g$12886$1&dy4A)
        (flodd? . g$12885$1&dy4A)
        (flnumerator . g$12884$1&dy4A)
        (flnegative? . g$12883$1&dy4A)
        (flnan? . g$12882$1&dy4A)
        (flmod0 . g$12881$1&dy4A)
        (flmod . g$12880$1&dy4A)
        (flmin . g$12879$1&dy4A)
        (flmax . g$12878$1&dy4A)
        (fllog . g$12877$1&dy4A)
        (flinteger? . g$12876$1&dy4A)
        (flinfinite? . g$12875$1&dy4A)
        (flfloor . g$12874$1&dy4A)
        (flfinite? . g$12873$1&dy4A)
        (flexpt . g$12872$1&dy4A)
        (flexp . g$12871$1&dy4A)
        (fleven? . g$12870$1&dy4A)
        (fldiv0-and-mod0 . g$12869$1&dy4A)
        (fldiv0 . g$12868$1&dy4A)
        (fldiv-and-mod . g$12867$1&dy4A)
        (fldiv . g$12866$1&dy4A)
        (fldenominator . g$12865$1&dy4A)
        (flcos . g$12864$1&dy4A)
        (flceiling . g$12863$1&dy4A)
        (flatan . g$12862$1&dy4A)
        (flasin . g$12861$1&dy4A)
        (flacos . g$12860$1&dy4A)
        (flabs . g$12859$1&dy4A)
        (fl>? . g$12858$1&dy4A)
        (fl>=? . g$12857$1&dy4A)
        (fl=? . g$12856$1&dy4A)
        (fl<? . g$12855$1&dy4A)
        (fl<=? . g$12854$1&dy4A)
        (fl/ . g$12853$1&dy4A)
        (fl- . g$12852$1&dy4A)
        (fl+ . g$12851$1&dy4A)
        (fl* . g$12850$1&dy4A)
        (fixnum->flonum . g$12849$1&dy4A)
        (fxzero? . g$12848$1&dy4A)
        (fxxor . g$12847$1&dy4A)
        (fxrotate-bit-field . g$7781$1&dy4A)
        (fxreverse-bit-field . g$12846$1&dy4A)
        (fxpositive? . g$12845$1&dy4A)
        (fxodd? . g$12844$1&dy4A)
        (fxnot . g$12843$1&dy4A)
        (fxnegative? . g$12842$1&dy4A)
        (fxmod0 . g$12841$1&dy4A)
        (fxmod . g$12840$1&dy4A)
        (fxmin . g$12839$1&dy4A)
        (fxmax . g$12838$1&dy4A)
        (fxlength . g$12837$1&dy4A)
        (fxior . g$12836$1&dy4A)
        (fxif . g$7775$1&dy4A)
        (fxfirst-bit-set . g$12835$1&dy4A)
        (fxeven? . g$12834$1&dy4A)
        (fxdiv0-and-mod0 . g$12833$1&dy4A)
        (fxdiv0 . g$12832$1&dy4A)
        (fxdiv-and-mod . g$12831$1&dy4A)
        (fxdiv . g$12830$1&dy4A)
        (fxcopy-bit-field . g$7778$1&dy4A)
        (fxcopy-bit . g$7776$1&dy4A)
        (fxbit-set? . g$12829$1&dy4A)
        (fxbit-field . g$7777$1&dy4A)
        (fxbit-count . g$12828$1&dy4A)
        (fxarithmetic-shift-right . g$7780$1&dy4A)
        (fxarithmetic-shift-left . g$7779$1&dy4A)
        (fxarithmetic-shift . g$12827$1&dy4A)
        (fxand . g$12826$1&dy4A)
        (fx>? . g$12825$1&dy4A)
        (fx>=? . g$12824$1&dy4A)
        (fx=? . g$12823$1&dy4A)
        (fx<? . g$12822$1&dy4A)
        (fx<=? . g$12821$1&dy4A)
        (fx-/carry . g$12820$1&dy4A)
        (fx- . g$12819$1&dy4A)
        (fx+/carry . g$12818$1&dy4A)
        (fx+ . g$12817$1&dy4A)
        (fx*/carry . g$12816$1&dy4A)
        (fx* . g$12815$1&dy4A)
        (greatest-fixnum . g$12814$1&dy4A)
        (least-fixnum . g$12813$1&dy4A)
        (fixnum-width . g$12812$1&dy4A)
        (fixnum? . g$12811$1&dy4A)
        (bitwise-rotate-bit-field . g$7733$1&dy4A)
        (bitwise-reverse-bit-field . g$12810$1&dy4A)
        (bitwise-length . g$12809$1&dy4A)
        (bitwise-if . g$7727$1&dy4A)
        (bitwise-first-bit-set . g$12808$1&dy4A)
        (bitwise-copy-bit-field . g$7730$1&dy4A)
        (bitwise-copy-bit . g$7728$1&dy4A)
        (bitwise-bit-set? . g$12807$1&dy4A)
        (bitwise-bit-field . g$12806$1&dy4A)
        (bitwise-bit-count . g$12805$1&dy4A)
        (bitwise-xor . g$12804$1&dy4A)
        (bitwise-ior . g$12803$1&dy4A)
        (bitwise-and . g$12802$1&dy4A)
        (bitwise-not . g$12801$1&dy4A)
        (bitwise-arithmetic-shift-right . g$7732$1&dy4A)
        (bitwise-arithmetic-shift-left . g$7731$1&dy4A)
        (bitwise-arithmetic-shift . g$12800$1&dy4A)
        (zero? . g$12799$1&dy4A)
        (vector? . g$12798$1&dy4A)
        (vector-set! . g$12797$1&dy4A)
        (vector-ref . g$12796$1&dy4A)
        (vector-map . g$12795$1&dy4A)
        (vector-length . g$12794$1&dy4A)
        (vector-for-each . g$12793$1&dy4A)
        (vector-fill! . g$12792$1&dy4A)
        (vector->list . g$12791$1&dy4A)
        (vector . g$12790$1&dy4A)
        (values . g$12789$1&dy4A)
        (truncate . g$12788$1&dy4A)
        (tan . g$12787$1&dy4A)
        (symbol? . g$12786$1&dy4A)
        (symbol=? . g$6722$1&dy4A)
        (symbol->string . g$12785$1&dy4A)
        (substring . g$12784$1&dy4A)
        (string? . g$12783$1&dy4A)
        (string>? . g$6719$1&dy4A)
        (string>=? . g$6721$1&dy4A)
        (string=? . g$6717$1&dy4A)
        (string<? . g$6718$1&dy4A)
        (string<=? . g$6720$1&dy4A)
        (string-ref . g$12782$1&dy4A)
        (string-length . g$12781$1&dy4A)
        (string-for-each . g$12780$1&dy4A)
        (string-copy . g$12779$1&dy4A)
        (string-append . g$12778$1&dy4A)
        (string->symbol . g$12777$1&dy4A)
        (string->number . g$12776$1&dy4A)
        (string->list . g$12775$1&dy4A)
        (string . g$12774$1&dy4A)
        (sqrt . g$12773$1&dy4A)
        (sin . g$12772$1&dy4A)
        (round . g$12771$1&dy4A)
        (reverse . g$12770$1&dy4A)
        (real? . g$12769$1&dy4A)
        (real-valued? . g$12768$1&dy4A)
        (real-part . g$12767$1&dy4A)
        (rationalize . g$6763$1&dy4A)
        (rational? . g$12766$1&dy4A)
        (rational-valued? . g$12765$1&dy4A)
        (procedure? . g$12764$1&dy4A)
        (positive? . g$12763$1&dy4A)
        (pair? . g$12762$1&dy4A)
        (odd? . g$12761$1&dy4A)
        (numerator . g$12760$1&dy4A)
        (number? . g$12759$1&dy4A)
        (number->string . g$12758$1&dy4A)
        (null? . g$12757$1&dy4A)
        (not . g$12756$1&dy4A)
        (negative? . g$12755$1&dy4A)
        (nan? . g$12754$1&dy4A)
        (min . g$12753$1&dy4A)
        (max . g$12752$1&dy4A)
        (map . g$12751$1&dy4A)
        (make-vector . g$12750$1&dy4A)
        (make-string . g$12749$1&dy4A)
        (make-rectangular . g$12748$1&dy4A)
        (make-polar . g$12747$1&dy4A)
        (magnitude . g$12746$1&dy4A)
        (log . g$12745$1&dy4A)
        (list? . g$12744$1&dy4A)
        (list-tail . g$12743$1&dy4A)
        (list-ref . g$12742$1&dy4A)
        (list->vector . g$12741$1&dy4A)
        (list->string . g$12740$1&dy4A)
        (list . g$12739$1&dy4A)
        (length . g$12738$1&dy4A)
        (lcm . g$12737$1&dy4A)
        (integer? . g$12736$1&dy4A)
        (integer-valued? . g$12735$1&dy4A)
        (integer->char . g$12734$1&dy4A)
        (infinite? . g$12733$1&dy4A)
        (inexact? . g$12732$1&dy4A)
        (inexact . g$12731$1&dy4A)
        (imag-part . g$12730$1&dy4A)
        (gcd . g$12729$1&dy4A)
        (for-each . g$12728$1&dy4A)
        (floor . g$12727$1&dy4A)
        (finite? . g$12726$1&dy4A)
        (expt . g$12725$1&dy4A)
        (exp . g$12724$1&dy4A)
        (exact? . g$12723$1&dy4A)
        (exact-integer-sqrt . g$12722$1&dy4A)
        (exact . g$12721$1&dy4A)
        (even? . g$12720$1&dy4A)
        (error . g$12719$1&dy4A)
        (eqv? . g$12718$1&dy4A)
        (equal? . g$12717$1&dy4A)
        (eq? . g$12716$1&dy4A)
        (dynamic-wind . g$12715$1&dy4A)
        (div0-and-mod0 . g$12714$1&dy4A)
        (mod0 . g$12713$1&dy4A)
        (div0 . g$12712$1&dy4A)
        (div-and-mod . g$12711$1&dy4A)
        (mod . g$12710$1&dy4A)
        (div . g$12709$1&dy4A)
        (denominator . g$12708$1&dy4A)
        (cos . g$12707$1&dy4A)
        (cons . g$12706$1&dy4A)
        (complex? . g$12705$1&dy4A)
        (char? . g$12704$1&dy4A)
        (char>? . g$6760$1&dy4A)
        (char>=? . g$6762$1&dy4A)
        (char=? . g$6758$1&dy4A)
        (char<? . g$6759$1&dy4A)
        (char<=? . g$6761$1&dy4A)
        (char->integer . g$12703$1&dy4A)
        (ceiling . g$12702$1&dy4A)
        (call-with-values . g$12701$1&dy4A)
        (call/cc . g$12700$1&dy4A)
        (call-with-current-continuation . g$12699$1&dy4A)
        (cddddr . g$6682$1&dy4A)
        (cdddar . g$6681$1&dy4A)
        (cddadr . g$6680$1&dy4A)
        (cddaar . g$6679$1&dy4A)
        (cdaddr . g$6678$1&dy4A)
        (cdadar . g$6677$1&dy4A)
        (cdaadr . g$6676$1&dy4A)
        (cdaaar . g$6675$1&dy4A)
        (cadddr . g$6674$1&dy4A)
        (caddar . g$6673$1&dy4A)
        (cadadr . g$6672$1&dy4A)
        (cadaar . g$6671$1&dy4A)
        (caaddr . g$6670$1&dy4A)
        (caadar . g$6669$1&dy4A)
        (caaadr . g$6668$1&dy4A)
        (caaaar . g$6667$1&dy4A)
        (cdddr . g$6666$1&dy4A)
        (cddar . g$6665$1&dy4A)
        (cdadr . g$6664$1&dy4A)
        (cdaar . g$6663$1&dy4A)
        (caddr . g$6662$1&dy4A)
        (cadar . g$6661$1&dy4A)
        (caadr . g$6660$1&dy4A)
        (caaar . g$6659$1&dy4A)
        (cddr . g$6658$1&dy4A)
        (cdar . g$6657$1&dy4A)
        (cadr . g$6656$1&dy4A)
        (caar . g$6655$1&dy4A)
        (cdr . g$12698$1&dy4A)
        (car . g$12697$1&dy4A)
        (boolean? . g$12696$1&dy4A)
        (boolean=? . g$6723$1&dy4A)
        (atan . g$12695$1&dy4A)
        (assertion-violation . g$12694$1&dy4A)
        (asin . g$12693$1&dy4A)
        (apply . g$12692$1&dy4A)
        (append . g$12691$1&dy4A)
        (angle . g$12690$1&dy4A)
        (acos . g$12689$1&dy4A)
        (abs . g$12688$1&dy4A)
        (/ . g$12687$1&dy4A)
        (* . g$12686$1&dy4A)
        (- . g$12685$1&dy4A)
        (+ . g$12684$1&dy4A)
        (>= . g$12683$1&dy4A)
        (> . g$12682$1&dy4A)
        (= . g$12681$1&dy4A)
        (<= . g$12680$1&dy4A)
        (< . g$12679$1&dy4A)
        (&no-nans . g$12649$1&dy4A)
        (&no-infinities . g$12648$1&dy4A)
        (&i/o-encoding . g$12647$1&dy4A)
        (&i/o-decoding . g$12646$1&dy4A)
        (&i/o-port . g$12645$1&dy4A)
        (&i/o-file-does-not-exist . g$12644$1&dy4A)
        (&i/o-file-already-exists . g$12643$1&dy4A)
        (&i/o-file-is-read-only . g$12642$1&dy4A)
        (&i/o-file-protection . g$12641$1&dy4A)
        (&i/o-filename . g$12640$1&dy4A)
        (&i/o-invalid-position . g$12639$1&dy4A)
        (&i/o-write . g$12638$1&dy4A)
        (&i/o-read . g$12637$1&dy4A)
        (&i/o . g$12636$1&dy4A)
        (&non-continuable . g$12635$1&dy4A)
        (&undefined . g$12634$1&dy4A)
        (&syntax . g$12633$1&dy4A)
        (&lexical . g$12632$1&dy4A)
        (&implementation-restriction . g$12631$1&dy4A)
        (&who . g$12630$1&dy4A)
        (&irritants . g$12629$1&dy4A)
        (&assertion . g$12628$1&dy4A)
        (&violation . g$12627$1&dy4A)
        (&error . g$12626$1&dy4A)
        (&serious . g$12625$1&dy4A)
        (&warning . g$12624$1&dy4A)
        (&message . g$12623$1&dy4A)
        (&condition . g$12622$1&dy4A)
        (define-condition-type . g$12621$1&dy4A)
        (define-enumeration . g$12620$1&dy4A)
        (define-record-type . g$12619$1&dy4A)
        (parent-rtd . g$12618$1&dy4A)
        (nongenerative . g$12617$1&dy4A)
        (opaque . g$12616$1&dy4A)
        (sealed . g$12615$1&dy4A)
        (protocol . g$12614$1&dy4A)
        (parent . g$12613$1&dy4A)
        (immutable . g$12612$1&dy4A)
        (mutable . g$12611$1&dy4A)
        (fields . g$12610$1&dy4A)
        (error-handling-mode . g$12609$1&dy4A)
        (file-options . g$12608$1&dy4A)
        (buffer-mode . g$12607$1&dy4A)
        (eol-style . g$12606$1&dy4A)
        (guard . g$12605$1&dy4A)
        (unsyntax-splicing . g$12599$1&dy4A)
        (unsyntax . g$12598$1&dy4A)
        (unquote-splicing . g$12597$1&dy4A)
        (unquote . g$12596$1&dy4A)
        (_ . g$12595$1&dy4A)
        (else . g$12594$1&dy4A)
        (=> . g$12593$1&dy4A)
        (... . g$12592$1&dy4A)
        (assert . g$12591$1&dy4A)
        (endianness . g$12590$1&dy4A)
        (or . g$12587$1&dy4A)
        (and . g$12586$1&dy4A)
        (do . g$12585$1&dy4A)
        (cond . g$12584$1&dy4A)
        (let* . g$12583$1&dy4A)
        (let . g$12582$1&dy4A)
        (identifier-syntax . g$12581$1&dy4A)
        (with-syntax . g$12580$1&dy4A)
        (quasisyntax . g$12579$1&dy4A)
        (quasiquote . g$12578$1&dy4A)
        (syntax-rules . g$12577$1&dy4A)
        (let-values . g$12573$1&dy4A)
        (let*-values . g$12572$1&dy4A)
        (record-constructor-descriptor . g$12571$1&dy4A)
        (record-type-descriptor . g$12570$1&dy4A)
        (case . g$12568$1&dy4A)
        (unless . g$12566$1&dy4A)
        (when . g$12565$1&dy4A)
        (if . g$12564$1&dy4A)
        (letrec* . g$12563$1&dy4A)
        (letrec . g$12562$1&dy4A)
        (case-lambda . g$12560$1&dy4A)
        (lambda . g$12559$1&dy4A)
        (syntax . g$12558$1&dy4A)
        (syntax-case . g$12557$1&dy4A)
        (quote . g$12556$1&dy4A)
        (letrec-syntax . g$12554$1&dy4A)
        (let-syntax . g$12553$1&dy4A)
        (set! . g$12552$1&dy4A)
        (begin . g$12548$1&dy4A)
        (define-syntax . g$12546$1&dy4A)
        (define . g$12545$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13172$1&dy4A
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$9540$1&dy4A)
        (scheme-report-environment . g$9515$1&dy4A)
        (quotient . g$7550$1&dy4A)
        (null-environment . g$9514$1&dy4A)
        (remainder . g$7551$1&dy4A)
        (modulo . g$7552$1&dy4A)
        (inexact->exact . g$12939$1&dy4A)
        (force . g$7554$1&dy4A)
        (exact->inexact . g$12938$1&dy4A)
        (delay . g$12589$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13173$1&dy4A
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12585$1&dy4A)
        (unless . g$12566$1&dy4A)
        (when . g$12565$1&dy4A)
        (case-lambda . g$12560$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13174$1&dy4A
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9517$1&dy4A) (environment . g$9513$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13175$1&dy4A
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12934$1&dy4A) (set-car! . g$12933$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13176$1&dy4A
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12936$1&dy4A) (string-set! . g$12935$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13177$1&dy4A
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12937$1&dy4A) (command-line . g$12509$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13178$1&dy4A
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9137$1&dy4A)
        (identifier? . g$9535$1&dy4A)
        (generate-temporaries . g$9524$1&dy4A)
        (free-identifier=? . g$9525$1&dy4A)
        (syntax->datum . g$9537$1&dy4A)
        (datum->syntax . g$9536$1&dy4A)
        (bound-identifier=? . g$9526$1&dy4A)
        (syntax-violation . g$9534$1&dy4A)
        (unsyntax-splicing . g$12599$1&dy4A)
        (unsyntax . g$12598$1&dy4A)
        (_ . g$12595$1&dy4A)
        (... . g$12592$1&dy4A)
        (with-syntax . g$12580$1&dy4A)
        (quasisyntax . g$12579$1&dy4A)
        (syntax . g$12558$1&dy4A)
        (syntax-case . g$12557$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13179$1&dy4A
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$7207$1&dy4A)
        (file-exists? . g$7206$1&dy4A)
        (make-i/o-write-error . g$7892$1&dy4A)
        (make-i/o-read-error . g$7878$1&dy4A)
        (make-i/o-port-error . g$7997$1&dy4A)
        (make-i/o-invalid-position-error . g$7907$1&dy4A)
        (make-i/o-filename-error . g$7924$1&dy4A)
        (make-i/o-file-protection-error . g$7940$1&dy4A)
        (make-i/o-file-is-read-only-error . g$7954$1&dy4A)
        (make-i/o-file-does-not-exist-error . g$7982$1&dy4A)
        (make-i/o-file-already-exists-error . g$7968$1&dy4A)
        (make-i/o-error . g$7864$1&dy4A)
        (i/o-write-error? . g$7893$1&dy4A)
        (i/o-read-error? . g$7879$1&dy4A)
        (i/o-port-error? . g$7999$1&dy4A)
        (i/o-invalid-position-error? . g$7909$1&dy4A)
        (i/o-error-position . g$7910$1&dy4A)
        (i/o-filename-error? . g$7926$1&dy4A)
        (i/o-file-protection-error? . g$7941$1&dy4A)
        (i/o-file-is-read-only-error? . g$7955$1&dy4A)
        (i/o-file-does-not-exist-error? . g$7983$1&dy4A)
        (i/o-file-already-exists-error? . g$7969$1&dy4A)
        (i/o-error? . g$7865$1&dy4A)
        (i/o-error-port . g$8000$1&dy4A)
        (i/o-error-filename . g$7927$1&dy4A)
        (&i/o-port . g$12645$1&dy4A)
        (&i/o-file-does-not-exist . g$12644$1&dy4A)
        (&i/o-file-already-exists . g$12643$1&dy4A)
        (&i/o-file-is-read-only . g$12642$1&dy4A)
        (&i/o-file-protection . g$12641$1&dy4A)
        (&i/o-filename . g$12640$1&dy4A)
        (&i/o-invalid-position . g$12639$1&dy4A)
        (&i/o-write . g$12638$1&dy4A)
        (&i/o-read . g$12637$1&dy4A)
        (&i/o . g$12636$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13180$1&dy4A
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13031$1&dy4A)
        (vector-sort . g$13030$1&dy4A)
        (list-sort . g$7570$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13181$1&dy4A
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12799$1&dy4A)
        (vector? . g$12798$1&dy4A)
        (vector-set! . g$12797$1&dy4A)
        (vector-ref . g$12796$1&dy4A)
        (vector-map . g$12795$1&dy4A)
        (vector-length . g$12794$1&dy4A)
        (vector-for-each . g$12793$1&dy4A)
        (vector-fill! . g$12792$1&dy4A)
        (vector->list . g$12791$1&dy4A)
        (vector . g$12790$1&dy4A)
        (values . g$12789$1&dy4A)
        (truncate . g$12788$1&dy4A)
        (tan . g$12787$1&dy4A)
        (symbol? . g$12786$1&dy4A)
        (symbol=? . g$6722$1&dy4A)
        (symbol->string . g$12785$1&dy4A)
        (substring . g$12784$1&dy4A)
        (string? . g$12783$1&dy4A)
        (string>? . g$6719$1&dy4A)
        (string>=? . g$6721$1&dy4A)
        (string=? . g$6717$1&dy4A)
        (string<? . g$6718$1&dy4A)
        (string<=? . g$6720$1&dy4A)
        (string-ref . g$12782$1&dy4A)
        (string-length . g$12781$1&dy4A)
        (string-for-each . g$12780$1&dy4A)
        (string-copy . g$12779$1&dy4A)
        (string-append . g$12778$1&dy4A)
        (string->symbol . g$12777$1&dy4A)
        (string->number . g$12776$1&dy4A)
        (string->list . g$12775$1&dy4A)
        (string . g$12774$1&dy4A)
        (sqrt . g$12773$1&dy4A)
        (sin . g$12772$1&dy4A)
        (round . g$12771$1&dy4A)
        (reverse . g$12770$1&dy4A)
        (real? . g$12769$1&dy4A)
        (real-valued? . g$12768$1&dy4A)
        (real-part . g$12767$1&dy4A)
        (rationalize . g$6763$1&dy4A)
        (rational? . g$12766$1&dy4A)
        (rational-valued? . g$12765$1&dy4A)
        (procedure? . g$12764$1&dy4A)
        (positive? . g$12763$1&dy4A)
        (pair? . g$12762$1&dy4A)
        (odd? . g$12761$1&dy4A)
        (numerator . g$12760$1&dy4A)
        (number? . g$12759$1&dy4A)
        (number->string . g$12758$1&dy4A)
        (null? . g$12757$1&dy4A)
        (not . g$12756$1&dy4A)
        (negative? . g$12755$1&dy4A)
        (nan? . g$12754$1&dy4A)
        (min . g$12753$1&dy4A)
        (max . g$12752$1&dy4A)
        (map . g$12751$1&dy4A)
        (make-vector . g$12750$1&dy4A)
        (make-string . g$12749$1&dy4A)
        (make-rectangular . g$12748$1&dy4A)
        (make-polar . g$12747$1&dy4A)
        (magnitude . g$12746$1&dy4A)
        (log . g$12745$1&dy4A)
        (list? . g$12744$1&dy4A)
        (list-tail . g$12743$1&dy4A)
        (list-ref . g$12742$1&dy4A)
        (list->vector . g$12741$1&dy4A)
        (list->string . g$12740$1&dy4A)
        (list . g$12739$1&dy4A)
        (length . g$12738$1&dy4A)
        (lcm . g$12737$1&dy4A)
        (integer? . g$12736$1&dy4A)
        (integer-valued? . g$12735$1&dy4A)
        (integer->char . g$12734$1&dy4A)
        (infinite? . g$12733$1&dy4A)
        (inexact? . g$12732$1&dy4A)
        (inexact . g$12731$1&dy4A)
        (imag-part . g$12730$1&dy4A)
        (gcd . g$12729$1&dy4A)
        (for-each . g$12728$1&dy4A)
        (floor . g$12727$1&dy4A)
        (finite? . g$12726$1&dy4A)
        (expt . g$12725$1&dy4A)
        (exp . g$12724$1&dy4A)
        (exact? . g$12723$1&dy4A)
        (exact-integer-sqrt . g$12722$1&dy4A)
        (exact . g$12721$1&dy4A)
        (even? . g$12720$1&dy4A)
        (error . g$12719$1&dy4A)
        (eqv? . g$12718$1&dy4A)
        (equal? . g$12717$1&dy4A)
        (eq? . g$12716$1&dy4A)
        (dynamic-wind . g$12715$1&dy4A)
        (div0-and-mod0 . g$12714$1&dy4A)
        (mod0 . g$12713$1&dy4A)
        (div0 . g$12712$1&dy4A)
        (div-and-mod . g$12711$1&dy4A)
        (mod . g$12710$1&dy4A)
        (div . g$12709$1&dy4A)
        (denominator . g$12708$1&dy4A)
        (cos . g$12707$1&dy4A)
        (cons . g$12706$1&dy4A)
        (complex? . g$12705$1&dy4A)
        (char? . g$12704$1&dy4A)
        (char>? . g$6760$1&dy4A)
        (char>=? . g$6762$1&dy4A)
        (char=? . g$6758$1&dy4A)
        (char<? . g$6759$1&dy4A)
        (char<=? . g$6761$1&dy4A)
        (char->integer . g$12703$1&dy4A)
        (ceiling . g$12702$1&dy4A)
        (call-with-values . g$12701$1&dy4A)
        (call/cc . g$12700$1&dy4A)
        (call-with-current-continuation . g$12699$1&dy4A)
        (cddddr . g$6682$1&dy4A)
        (cdddar . g$6681$1&dy4A)
        (cddadr . g$6680$1&dy4A)
        (cddaar . g$6679$1&dy4A)
        (cdaddr . g$6678$1&dy4A)
        (cdadar . g$6677$1&dy4A)
        (cdaadr . g$6676$1&dy4A)
        (cdaaar . g$6675$1&dy4A)
        (cadddr . g$6674$1&dy4A)
        (caddar . g$6673$1&dy4A)
        (cadadr . g$6672$1&dy4A)
        (cadaar . g$6671$1&dy4A)
        (caaddr . g$6670$1&dy4A)
        (caadar . g$6669$1&dy4A)
        (caaadr . g$6668$1&dy4A)
        (caaaar . g$6667$1&dy4A)
        (cdddr . g$6666$1&dy4A)
        (cddar . g$6665$1&dy4A)
        (cdadr . g$6664$1&dy4A)
        (cdaar . g$6663$1&dy4A)
        (caddr . g$6662$1&dy4A)
        (cadar . g$6661$1&dy4A)
        (caadr . g$6660$1&dy4A)
        (caaar . g$6659$1&dy4A)
        (cddr . g$6658$1&dy4A)
        (cdar . g$6657$1&dy4A)
        (cadr . g$6656$1&dy4A)
        (caar . g$6655$1&dy4A)
        (cdr . g$12698$1&dy4A)
        (car . g$12697$1&dy4A)
        (boolean? . g$12696$1&dy4A)
        (boolean=? . g$6723$1&dy4A)
        (atan . g$12695$1&dy4A)
        (assertion-violation . g$12694$1&dy4A)
        (asin . g$12693$1&dy4A)
        (apply . g$12692$1&dy4A)
        (append . g$12691$1&dy4A)
        (angle . g$12690$1&dy4A)
        (acos . g$12689$1&dy4A)
        (abs . g$12688$1&dy4A)
        (/ . g$12687$1&dy4A)
        (* . g$12686$1&dy4A)
        (- . g$12685$1&dy4A)
        (+ . g$12684$1&dy4A)
        (>= . g$12683$1&dy4A)
        (> . g$12682$1&dy4A)
        (= . g$12681$1&dy4A)
        (<= . g$12680$1&dy4A)
        (< . g$12679$1&dy4A)
        (unquote-splicing . g$12597$1&dy4A)
        (unquote . g$12596$1&dy4A)
        (_ . g$12595$1&dy4A)
        (else . g$12594$1&dy4A)
        (=> . g$12593$1&dy4A)
        (... . g$12592$1&dy4A)
        (assert . g$12591$1&dy4A)
        (or . g$12587$1&dy4A)
        (and . g$12586$1&dy4A)
        (cond . g$12584$1&dy4A)
        (let* . g$12583$1&dy4A)
        (let . g$12582$1&dy4A)
        (identifier-syntax . g$12581$1&dy4A)
        (quasiquote . g$12578$1&dy4A)
        (syntax-rules . g$12577$1&dy4A)
        (let-values . g$12573$1&dy4A)
        (let*-values . g$12572$1&dy4A)
        (case . g$12568$1&dy4A)
        (if . g$12564$1&dy4A)
        (letrec* . g$12563$1&dy4A)
        (letrec . g$12562$1&dy4A)
        (lambda . g$12559$1&dy4A)
        (quote . g$12556$1&dy4A)
        (letrec-syntax . g$12554$1&dy4A)
        (let-syntax . g$12553$1&dy4A)
        (set! . g$12552$1&dy4A)
        (begin . g$12548$1&dy4A)
        (define-syntax . g$12546$1&dy4A)
        (define . g$12545$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13182$1&dy4A
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6562$1&dy4A)
        (remv . g$6563$1&dy4A)
        (remp . g$6545$1&dy4A)
        (remq . g$6564$1&dy4A)
        (partition . g$6544$1&dy4A)
        (memv . g$6552$1&dy4A)
        (memq . g$6551$1&dy4A)
        (memp . g$6554$1&dy4A)
        (member . g$6553$1&dy4A)
        (exists . g$6558$1&dy4A)
        (for-all . g$6557$1&dy4A)
        (fold-right . g$6561$1&dy4A)
        (fold-left . g$6560$1&dy4A)
        (find . g$6543$1&dy4A)
        (filter . g$6546$1&dy4A)
        (cons* . g$6559$1&dy4A)
        (assv . g$6548$1&dy4A)
        (assq . g$6547$1&dy4A)
        (assp . g$6550$1&dy4A)
        (assoc . g$6549$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13183$1&dy4A
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8063$1&dy4A)
        (call-with-input-file . g$8062$1&dy4A)
        (write-char . g$13017$1&dy4A)
        (write . g$13016$1&dy4A)
        (with-output-to-file . g$8061$1&dy4A)
        (with-input-from-file . g$8060$1&dy4A)
        (read-char . g$13015$1&dy4A)
        (read . g$13014$1&dy4A)
        (peek-char . g$13013$1&dy4A)
        (open-output-file . g$13012$1&dy4A)
        (open-input-file . g$13011$1&dy4A)
        (newline . g$13010$1&dy4A)
        (display . g$13009$1&dy4A)
        (close-output-port . g$13008$1&dy4A)
        (close-input-port . g$13007$1&dy4A)
        (eof-object? . g$13006$1&dy4A)
        (eof-object . g$13005$1&dy4A)
        (current-error-port . g$13004$1&dy4A)
        (current-output-port . g$13003$1&dy4A)
        (current-input-port . g$13002$1&dy4A)
        (output-port? . g$13001$1&dy4A)
        (input-port? . g$13000$1&dy4A)
        (make-i/o-write-error . g$7892$1&dy4A)
        (make-i/o-read-error . g$7878$1&dy4A)
        (make-i/o-port-error . g$7997$1&dy4A)
        (make-i/o-invalid-position-error . g$7907$1&dy4A)
        (make-i/o-filename-error . g$7924$1&dy4A)
        (make-i/o-file-protection-error . g$7940$1&dy4A)
        (make-i/o-file-is-read-only-error . g$7954$1&dy4A)
        (make-i/o-file-does-not-exist-error . g$7982$1&dy4A)
        (make-i/o-file-already-exists-error . g$7968$1&dy4A)
        (make-i/o-error . g$7864$1&dy4A)
        (i/o-write-error? . g$7893$1&dy4A)
        (i/o-read-error? . g$7879$1&dy4A)
        (i/o-port-error? . g$7999$1&dy4A)
        (i/o-invalid-position-error? . g$7909$1&dy4A)
        (i/o-error-position . g$7910$1&dy4A)
        (i/o-filename-error? . g$7926$1&dy4A)
        (i/o-file-protection-error? . g$7941$1&dy4A)
        (i/o-file-is-read-only-error? . g$7955$1&dy4A)
        (i/o-file-does-not-exist-error? . g$7983$1&dy4A)
        (i/o-file-already-exists-error? . g$7969$1&dy4A)
        (i/o-error? . g$7865$1&dy4A)
        (i/o-error-port . g$8000$1&dy4A)
        (i/o-error-filename . g$7927$1&dy4A)
        (&i/o-port . g$12645$1&dy4A)
        (&i/o-file-does-not-exist . g$12644$1&dy4A)
        (&i/o-file-already-exists . g$12643$1&dy4A)
        (&i/o-file-is-read-only . g$12642$1&dy4A)
        (&i/o-file-protection . g$12641$1&dy4A)
        (&i/o-filename . g$12640$1&dy4A)
        (&i/o-invalid-position . g$12639$1&dy4A)
        (&i/o-write . g$12638$1&dy4A)
        (&i/o-read . g$12637$1&dy4A)
        (&i/o . g$12636$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13184$1&dy4A
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12960$1&dy4A)
        (utf32->string . g$12924$1&dy4A)
        (utf16->string . g$12923$1&dy4A)
        (utf8->string . g$12922$1&dy4A)
        (uint-list->bytevector . g$12921$1&dy4A)
        (u8-list->bytevector . g$12920$1&dy4A)
        (string->utf8 . g$12919$1&dy4A)
        (string->utf32 . g$12918$1&dy4A)
        (string->utf16 . g$12917$1&dy4A)
        (sint-list->bytevector . g$12916$1&dy4A)
        (native-endianness . g$7213$1&dy4A)
        (bytevector? . g$12915$1&dy4A)
        (bytevector=? . g$12914$1&dy4A)
        (bytevector-uint-set! . g$12913$1&dy4A)
        (bytevector-uint-ref . g$12912$1&dy4A)
        (bytevector-u8-set! . g$12911$1&dy4A)
        (bytevector-u8-ref . g$12910$1&dy4A)
        (bytevector-u64-set! . g$7234$1&dy4A)
        (bytevector-u64-ref . g$7230$1&dy4A)
        (bytevector-u64-native-set! . g$7236$1&dy4A)
        (bytevector-u64-native-ref . g$7232$1&dy4A)
        (bytevector-u32-set! . g$7226$1&dy4A)
        (bytevector-u32-ref . g$7222$1&dy4A)
        (bytevector-u32-native-set! . g$7228$1&dy4A)
        (bytevector-u32-native-ref . g$7224$1&dy4A)
        (bytevector-u16-set! . g$7218$1&dy4A)
        (bytevector-u16-ref . g$7214$1&dy4A)
        (bytevector-u16-native-set! . g$7220$1&dy4A)
        (bytevector-u16-native-ref . g$7216$1&dy4A)
        (bytevector-sint-set! . g$12909$1&dy4A)
        (bytevector-sint-ref . g$12908$1&dy4A)
        (bytevector-s8-set! . g$12907$1&dy4A)
        (bytevector-s8-ref . g$12906$1&dy4A)
        (bytevector-s64-set! . g$7235$1&dy4A)
        (bytevector-s64-ref . g$7231$1&dy4A)
        (bytevector-s64-native-set! . g$7237$1&dy4A)
        (bytevector-s64-native-ref . g$7233$1&dy4A)
        (bytevector-s32-set! . g$7227$1&dy4A)
        (bytevector-s32-ref . g$7223$1&dy4A)
        (bytevector-s32-native-set! . g$7229$1&dy4A)
        (bytevector-s32-native-ref . g$7225$1&dy4A)
        (bytevector-s16-set! . g$7219$1&dy4A)
        (bytevector-s16-ref . g$7215$1&dy4A)
        (bytevector-s16-native-set! . g$7221$1&dy4A)
        (bytevector-s16-native-ref . g$7217$1&dy4A)
        (bytevector-length . g$12905$1&dy4A)
        (bytevector-ieee-single-set! . g$12904$1&dy4A)
        (bytevector-ieee-single-ref . g$12903$1&dy4A)
        (bytevector-ieee-single-native-set! . g$7240$1&dy4A)
        (bytevector-ieee-single-native-ref . g$7238$1&dy4A)
        (bytevector-ieee-double-set! . g$12902$1&dy4A)
        (bytevector-ieee-double-ref . g$12901$1&dy4A)
        (bytevector-ieee-double-native-set! . g$7241$1&dy4A)
        (bytevector-ieee-double-native-ref . g$7239$1&dy4A)
        (bytevector-fill! . g$12900$1&dy4A)
        (bytevector-copy! . g$12899$1&dy4A)
        (bytevector-copy . g$12898$1&dy4A)
        (bytevector->uint-list . g$12897$1&dy4A)
        (bytevector->u8-list . g$12896$1&dy4A)
        (bytevector->sint-list . g$12895$1&dy4A)
        (endianness . g$12590$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13185$1&dy4A
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13067$1&dy4A)
        (string-titlecase . g$13066$1&dy4A)
        (string-normalize-nfkd . g$13065$1&dy4A)
        (string-normalize-nfkc . g$13064$1&dy4A)
        (string-normalize-nfd . g$13063$1&dy4A)
        (string-normalize-nfc . g$13062$1&dy4A)
        (string-foldcase . g$13061$1&dy4A)
        (string-downcase . g$13060$1&dy4A)
        (string-ci>? . g$7632$1&dy4A)
        (string-ci>=? . g$7634$1&dy4A)
        (string-ci=? . g$7630$1&dy4A)
        (string-ci<? . g$7631$1&dy4A)
        (string-ci<=? . g$7633$1&dy4A)
        (char-whitespace? . g$13059$1&dy4A)
        (char-upper-case? . g$13058$1&dy4A)
        (char-title-case? . g$13057$1&dy4A)
        (char-numeric? . g$13056$1&dy4A)
        (char-lower-case? . g$13055$1&dy4A)
        (char-general-category . g$13054$1&dy4A)
        (char-upcase . g$13053$1&dy4A)
        (char-titlecase . g$13052$1&dy4A)
        (char-foldcase . g$13051$1&dy4A)
        (char-downcase . g$13050$1&dy4A)
        (char-ci>? . g$7671$1&dy4A)
        (char-ci>=? . g$7673$1&dy4A)
        (char-ci=? . g$7669$1&dy4A)
        (char-ci<? . g$7670$1&dy4A)
        (char-ci<=? . g$7672$1&dy4A)
        (char-alphabetic? . g$13049$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13186$1&dy4A
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12932$1&dy4A)
        (raise-continuable . g$12931$1&dy4A)
        (raise . g$12930$1&dy4A)
        (guard . g$12605$1&dy4A)
        (else . g$12594$1&dy4A)
        (=> . g$12593$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13187$1&dy4A
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7733$1&dy4A)
        (bitwise-reverse-bit-field . g$12810$1&dy4A)
        (bitwise-length . g$12809$1&dy4A)
        (bitwise-if . g$7727$1&dy4A)
        (bitwise-first-bit-set . g$12808$1&dy4A)
        (bitwise-copy-bit-field . g$7730$1&dy4A)
        (bitwise-copy-bit . g$7728$1&dy4A)
        (bitwise-bit-set? . g$12807$1&dy4A)
        (bitwise-bit-field . g$12806$1&dy4A)
        (bitwise-bit-count . g$12805$1&dy4A)
        (bitwise-xor . g$12804$1&dy4A)
        (bitwise-ior . g$12803$1&dy4A)
        (bitwise-and . g$12802$1&dy4A)
        (bitwise-not . g$12801$1&dy4A)
        (bitwise-arithmetic-shift-right . g$7732$1&dy4A)
        (bitwise-arithmetic-shift-left . g$7731$1&dy4A)
        (bitwise-arithmetic-shift . g$12800$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13188$1&dy4A
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12848$1&dy4A)
        (fxxor . g$12847$1&dy4A)
        (fxrotate-bit-field . g$7781$1&dy4A)
        (fxreverse-bit-field . g$12846$1&dy4A)
        (fxpositive? . g$12845$1&dy4A)
        (fxodd? . g$12844$1&dy4A)
        (fxnot . g$12843$1&dy4A)
        (fxnegative? . g$12842$1&dy4A)
        (fxmod0 . g$12841$1&dy4A)
        (fxmod . g$12840$1&dy4A)
        (fxmin . g$12839$1&dy4A)
        (fxmax . g$12838$1&dy4A)
        (fxlength . g$12837$1&dy4A)
        (fxior . g$12836$1&dy4A)
        (fxif . g$7775$1&dy4A)
        (fxfirst-bit-set . g$12835$1&dy4A)
        (fxeven? . g$12834$1&dy4A)
        (fxdiv0-and-mod0 . g$12833$1&dy4A)
        (fxdiv0 . g$12832$1&dy4A)
        (fxdiv-and-mod . g$12831$1&dy4A)
        (fxdiv . g$12830$1&dy4A)
        (fxcopy-bit-field . g$7778$1&dy4A)
        (fxcopy-bit . g$7776$1&dy4A)
        (fxbit-set? . g$12829$1&dy4A)
        (fxbit-field . g$7777$1&dy4A)
        (fxbit-count . g$12828$1&dy4A)
        (fxarithmetic-shift-right . g$7780$1&dy4A)
        (fxarithmetic-shift-left . g$7779$1&dy4A)
        (fxarithmetic-shift . g$12827$1&dy4A)
        (fxand . g$12826$1&dy4A)
        (fx>? . g$12825$1&dy4A)
        (fx>=? . g$12824$1&dy4A)
        (fx=? . g$12823$1&dy4A)
        (fx<? . g$12822$1&dy4A)
        (fx<=? . g$12821$1&dy4A)
        (fx-/carry . g$12820$1&dy4A)
        (fx- . g$12819$1&dy4A)
        (fx+/carry . g$12818$1&dy4A)
        (fx+ . g$12817$1&dy4A)
        (fx*/carry . g$12816$1&dy4A)
        (fx* . g$12815$1&dy4A)
        (greatest-fixnum . g$12814$1&dy4A)
        (least-fixnum . g$12813$1&dy4A)
        (fixnum-width . g$12812$1&dy4A)
        (fixnum? . g$12811$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13189$1&dy4A
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7850$1&dy4A)
        (no-infinities-violation? . g$7836$1&dy4A)
        (make-no-nans-violation . g$7849$1&dy4A)
        (make-no-infinities-violation . g$7835$1&dy4A)
        (real->flonum . g$12894$1&dy4A)
        (flzero? . g$12893$1&dy4A)
        (fltruncate . g$12892$1&dy4A)
        (fltan . g$12891$1&dy4A)
        (flsqrt . g$12890$1&dy4A)
        (flsin . g$12889$1&dy4A)
        (flround . g$12888$1&dy4A)
        (flpositive? . g$12887$1&dy4A)
        (flonum? . g$12886$1&dy4A)
        (flodd? . g$12885$1&dy4A)
        (flnumerator . g$12884$1&dy4A)
        (flnegative? . g$12883$1&dy4A)
        (flnan? . g$12882$1&dy4A)
        (flmod0 . g$12881$1&dy4A)
        (flmod . g$12880$1&dy4A)
        (flmin . g$12879$1&dy4A)
        (flmax . g$12878$1&dy4A)
        (fllog . g$12877$1&dy4A)
        (flinteger? . g$12876$1&dy4A)
        (flinfinite? . g$12875$1&dy4A)
        (flfloor . g$12874$1&dy4A)
        (flfinite? . g$12873$1&dy4A)
        (flexpt . g$12872$1&dy4A)
        (flexp . g$12871$1&dy4A)
        (fleven? . g$12870$1&dy4A)
        (fldiv0-and-mod0 . g$12869$1&dy4A)
        (fldiv0 . g$12868$1&dy4A)
        (fldiv-and-mod . g$12867$1&dy4A)
        (fldiv . g$12866$1&dy4A)
        (fldenominator . g$12865$1&dy4A)
        (flcos . g$12864$1&dy4A)
        (flceiling . g$12863$1&dy4A)
        (flatan . g$12862$1&dy4A)
        (flasin . g$12861$1&dy4A)
        (flacos . g$12860$1&dy4A)
        (flabs . g$12859$1&dy4A)
        (fl>? . g$12858$1&dy4A)
        (fl>=? . g$12857$1&dy4A)
        (fl=? . g$12856$1&dy4A)
        (fl<? . g$12855$1&dy4A)
        (fl<=? . g$12854$1&dy4A)
        (fl/ . g$12853$1&dy4A)
        (fl- . g$12852$1&dy4A)
        (fl+ . g$12851$1&dy4A)
        (fl* . g$12850$1&dy4A)
        (fixnum->flonum . g$12849$1&dy4A)
        (&no-nans . g$12649$1&dy4A)
        (&no-infinities . g$12648$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13190$1&dy4A
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13029$1&dy4A)
        (string-ci-hash . g$13028$1&dy4A)
        (string-hash . g$13027$1&dy4A)
        (equal-hash . g$13026$1&dy4A)
        (hashtable-equivalence-function . g$13025$1&dy4A)
        (make-hashtable . g$13024$1&dy4A)
        (hashtable-hash-function . g$13023$1&dy4A)
        (make-eqv-hashtable . g$7174$1&dy4A)
        (make-eq-hashtable . g$7173$1&dy4A)
        (hashtable? . g$13022$1&dy4A)
        (hashtable-update! . g$7180$1&dy4A)
        (hashtable-size . g$7175$1&dy4A)
        (hashtable-set! . g$7177$1&dy4A)
        (hashtable-ref . g$7176$1&dy4A)
        (hashtable-mutable? . g$13021$1&dy4A)
        (hashtable-keys . g$13020$1&dy4A)
        (hashtable-entries . g$13019$1&dy4A)
        (hashtable-delete! . g$7178$1&dy4A)
        (hashtable-copy . g$13018$1&dy4A)
        (hashtable-contains? . g$7179$1&dy4A)
        (hashtable-clear! . g$7181$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13191$1&dy4A
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13006$1&dy4A)
        (eof-object . g$13005$1&dy4A)
        (current-error-port . g$13004$1&dy4A)
        (current-output-port . g$13003$1&dy4A)
        (current-input-port . g$13002$1&dy4A)
        (output-port? . g$13001$1&dy4A)
        (input-port? . g$13000$1&dy4A)
        (utf-8-codec . g$12999$1&dy4A)
        (utf-16-codec . g$12998$1&dy4A)
        (transcoder-error-handling-mode . g$12997$1&dy4A)
        (transcoder-eol-style . g$12996$1&dy4A)
        (transcoder-codec . g$12995$1&dy4A)
        (transcoded-port . g$12994$1&dy4A)
        (textual-port? . g$12993$1&dy4A)
        (string->bytevector . g$12992$1&dy4A)
        (standard-output-port . g$12991$1&dy4A)
        (standard-input-port . g$12990$1&dy4A)
        (standard-error-port . g$12989$1&dy4A)
        (set-port-position! . g$12988$1&dy4A)
        (put-u8 . g$12987$1&dy4A)
        (put-string . g$12986$1&dy4A)
        (put-datum . g$12985$1&dy4A)
        (put-char . g$12984$1&dy4A)
        (put-bytevector . g$12983$1&dy4A)
        (port? . g$8036$1&dy4A)
        (port-transcoder . g$12982$1&dy4A)
        (port-position . g$12981$1&dy4A)
        (port-has-set-port-position!? . g$12980$1&dy4A)
        (port-has-port-position? . g$12979$1&dy4A)
        (port-eof? . g$12978$1&dy4A)
        (output-port-buffer-mode . g$12977$1&dy4A)
        (open-string-output-port . g$8035$1&dy4A)
        (open-string-input-port . g$12976$1&dy4A)
        (open-file-output-port . g$12975$1&dy4A)
        (open-file-input/output-port . g$12974$1&dy4A)
        (open-file-input-port . g$12973$1&dy4A)
        (open-bytevector-output-port . g$12972$1&dy4A)
        (open-bytevector-input-port . g$12971$1&dy4A)
        (native-transcoder . g$12970$1&dy4A)
        (native-eol-style . g$12969$1&dy4A)
        (make-transcoder . g$12968$1&dy4A)
        (latin-1-codec . g$12967$1&dy4A)
        (make-i/o-write-error . g$7892$1&dy4A)
        (make-i/o-read-error . g$7878$1&dy4A)
        (make-i/o-port-error . g$7997$1&dy4A)
        (make-i/o-invalid-position-error . g$7907$1&dy4A)
        (make-i/o-filename-error . g$7924$1&dy4A)
        (make-i/o-file-protection-error . g$7940$1&dy4A)
        (make-i/o-file-is-read-only-error . g$7954$1&dy4A)
        (make-i/o-file-does-not-exist-error . g$7982$1&dy4A)
        (make-i/o-file-already-exists-error . g$7968$1&dy4A)
        (make-i/o-error . g$7864$1&dy4A)
        (make-i/o-encoding-error . g$8028$1&dy4A)
        (make-i/o-decoding-error . g$8013$1&dy4A)
        (make-custom-textual-output-port . g$12966$1&dy4A)
        (make-custom-textual-input/output-port . g$12965$1&dy4A)
        (make-custom-textual-input-port . g$12964$1&dy4A)
        (make-custom-binary-output-port . g$12963$1&dy4A)
        (make-custom-binary-input/output-port . g$12962$1&dy4A)
        (make-custom-binary-input-port . g$12961$1&dy4A)
        (lookahead-u8 . g$12959$1&dy4A)
        (lookahead-char . g$12958$1&dy4A)
        (i/o-write-error? . g$7893$1&dy4A)
        (i/o-read-error? . g$7879$1&dy4A)
        (i/o-port-error? . g$7999$1&dy4A)
        (i/o-invalid-position-error? . g$7909$1&dy4A)
        (i/o-error-position . g$7910$1&dy4A)
        (i/o-filename-error? . g$7926$1&dy4A)
        (i/o-file-protection-error? . g$7941$1&dy4A)
        (i/o-file-is-read-only-error? . g$7955$1&dy4A)
        (i/o-file-does-not-exist-error? . g$7983$1&dy4A)
        (i/o-file-already-exists-error? . g$7969$1&dy4A)
        (i/o-error? . g$7865$1&dy4A)
        (i/o-error-port . g$8000$1&dy4A)
        (i/o-error-filename . g$7927$1&dy4A)
        (i/o-encoding-error? . g$8030$1&dy4A)
        (i/o-encoding-error-char . g$8031$1&dy4A)
        (i/o-decoding-error? . g$8014$1&dy4A)
        (get-u8 . g$12957$1&dy4A)
        (get-string-n! . g$12956$1&dy4A)
        (get-string-n . g$12955$1&dy4A)
        (get-string-all . g$12954$1&dy4A)
        (get-line . g$12953$1&dy4A)
        (get-datum . g$12952$1&dy4A)
        (get-char . g$12951$1&dy4A)
        (get-bytevector-some . g$12950$1&dy4A)
        (get-bytevector-n! . g$12949$1&dy4A)
        (get-bytevector-n . g$12948$1&dy4A)
        (get-bytevector-all . g$12947$1&dy4A)
        (flush-output-port . g$12946$1&dy4A)
        (close-port . g$12945$1&dy4A)
        (call-with-string-output-port . g$8037$1&dy4A)
        (call-with-port . g$12944$1&dy4A)
        (call-with-bytevector-output-port . g$12943$1&dy4A)
        (bytevector->string . g$12942$1&dy4A)
        (buffer-mode? . g$12941$1&dy4A)
        (binary-port? . g$12940$1&dy4A)
        (&i/o-encoding . g$12647$1&dy4A)
        (&i/o-decoding . g$12646$1&dy4A)
        (&i/o-port . g$12645$1&dy4A)
        (&i/o-file-does-not-exist . g$12644$1&dy4A)
        (&i/o-file-already-exists . g$12643$1&dy4A)
        (&i/o-file-is-read-only . g$12642$1&dy4A)
        (&i/o-file-protection . g$12641$1&dy4A)
        (&i/o-filename . g$12640$1&dy4A)
        (&i/o-invalid-position . g$12639$1&dy4A)
        (&i/o-write . g$12638$1&dy4A)
        (&i/o-read . g$12637$1&dy4A)
        (&i/o . g$12636$1&dy4A)
        (error-handling-mode . g$12609$1&dy4A)
        (file-options . g$12608$1&dy4A)
        (buffer-mode . g$12607$1&dy4A)
        (eol-style . g$12606$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13192$1&dy4A
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8121$1&dy4A)
        (enum-set=? . g$8128$1&dy4A)
        (enum-set-universe . g$8122$1&dy4A)
        (enum-set-union . g$8129$1&dy4A)
        (enum-set-subset? . g$8127$1&dy4A)
        (enum-set-projection . g$8133$1&dy4A)
        (enum-set-member? . g$8126$1&dy4A)
        (enum-set-intersection . g$8130$1&dy4A)
        (enum-set-indexer . g$8123$1&dy4A)
        (enum-set-difference . g$8131$1&dy4A)
        (enum-set-constructor . g$8124$1&dy4A)
        (enum-set-complement . g$8132$1&dy4A)
        (enum-set->list . g$8125$1&dy4A)
        (define-enumeration . g$12620$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13193$1&dy4A
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7461$1&dy4A)
        (warning? . g$7372$1&dy4A)
        (violation? . g$7414$1&dy4A)
        (undefined-violation? . g$7538$1&dy4A)
        (syntax-violation? . g$7522$1&dy4A)
        (syntax-violation-subform . g$7524$1&dy4A)
        (syntax-violation-form . g$7523$1&dy4A)
        (syntax-violation . g$9534$1&dy4A)
        (simple-conditions . g$12929$1&dy4A)
        (serious-condition? . g$7386$1&dy4A)
        (non-continuable-violation? . g$7476$1&dy4A)
        (message-condition? . g$7357$1&dy4A)
        (make-who-condition . g$7459$1&dy4A)
        (make-warning . g$7371$1&dy4A)
        (make-violation . g$7413$1&dy4A)
        (make-undefined-violation . g$7537$1&dy4A)
        (make-syntax-violation . g$7519$1&dy4A)
        (make-serious-condition . g$7385$1&dy4A)
        (make-non-continuable-violation . g$7475$1&dy4A)
        (make-message-condition . g$7355$1&dy4A)
        (make-lexical-violation . g$7503$1&dy4A)
        (make-irritants-condition . g$7442$1&dy4A)
        (make-implementation-restriction-violation . g$7489$1&dy4A)
        (make-error . g$7399$1&dy4A)
        (make-assertion-violation . g$7427$1&dy4A)
        (lexical-violation? . g$7504$1&dy4A)
        (irritants-condition? . g$7444$1&dy4A)
        (implementation-restriction-violation? . g$7490$1&dy4A)
        (error? . g$7400$1&dy4A)
        (condition-who . g$7462$1&dy4A)
        (condition-predicate . g$12928$1&dy4A)
        (condition-message . g$7358$1&dy4A)
        (condition-irritants . g$7445$1&dy4A)
        (condition-accessor . g$12927$1&dy4A)
        (condition . g$12926$1&dy4A)
        (assertion-violation? . g$7428$1&dy4A)
        (condition? . g$12925$1&dy4A)
        (&non-continuable . g$12635$1&dy4A)
        (&undefined . g$12634$1&dy4A)
        (&syntax . g$12633$1&dy4A)
        (&lexical . g$12632$1&dy4A)
        (&implementation-restriction . g$12631$1&dy4A)
        (&who . g$12630$1&dy4A)
        (&irritants . g$12629$1&dy4A)
        (&assertion . g$12628$1&dy4A)
        (&violation . g$12627$1&dy4A)
        (&error . g$12626$1&dy4A)
        (&serious . g$12625$1&dy4A)
        (&warning . g$12624$1&dy4A)
        (&message . g$12623$1&dy4A)
        (&condition . g$12622$1&dy4A)
        (define-condition-type . g$12621$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13194$1&dy4A
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13041$1&dy4A)
        (record-type-uid . g$13040$1&dy4A)
        (record-type-sealed? . g$13039$1&dy4A)
        (record-type-parent . g$13038$1&dy4A)
        (record-type-opaque? . g$13037$1&dy4A)
        (record-type-name . g$13036$1&dy4A)
        (record-type-generative? . g$13035$1&dy4A)
        (record-type-field-names . g$13034$1&dy4A)
        (record-rtd . g$13033$1&dy4A)
        (record-field-mutable? . g$13032$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13195$1&dy4A
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13048$1&dy4A)
        (record-predicate . g$13047$1&dy4A)
        (record-mutator . g$13046$1&dy4A)
        (record-constructor . g$13045$1&dy4A)
        (record-accessor . g$13044$1&dy4A)
        (make-record-type-descriptor . g$13043$1&dy4A)
        (make-record-constructor-descriptor . g$13042$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13196$1&dy4A
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12619$1&dy4A)
        (parent-rtd . g$12618$1&dy4A)
        (nongenerative . g$12617$1&dy4A)
        (opaque . g$12616$1&dy4A)
        (sealed . g$12615$1&dy4A)
        (protocol . g$12614$1&dy4A)
        (parent . g$12613$1&dy4A)
        (immutable . g$12612$1&dy4A)
        (mutable . g$12611$1&dy4A)
        (fields . g$12610$1&dy4A)
        (record-constructor-descriptor . g$12571$1&dy4A)
        (record-type-descriptor . g$12570$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13197$1&dy4A
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9407$1&dy4A)
        (&no-nans-rcd . g$13161$1&dy4A)
        (&no-nans-rtd . g$13160$1&dy4A)
        (&no-infinities-rcd . g$13159$1&dy4A)
        (&no-infinities-rtd . g$13158$1&dy4A)
        (&i/o-encoding-rcd . g$13157$1&dy4A)
        (&i/o-encoding-rtd . g$13156$1&dy4A)
        (&i/o-decoding-rcd . g$13155$1&dy4A)
        (&i/o-decoding-rtd . g$13154$1&dy4A)
        (&i/o-port-rcd . g$13153$1&dy4A)
        (&i/o-port-rtd . g$13152$1&dy4A)
        (&i/o-file-does-not-exist-rcd . g$13151$1&dy4A)
        (&i/o-file-does-not-exist-rtd . g$13150$1&dy4A)
        (&i/o-file-already-exists-rcd . g$13149$1&dy4A)
        (&i/o-file-already-exists-rtd . g$13148$1&dy4A)
        (&i/o-file-is-read-only-rcd . g$13147$1&dy4A)
        (&i/o-file-is-read-only-rtd . g$13146$1&dy4A)
        (&i/o-file-protection-rcd . g$13145$1&dy4A)
        (&i/o-file-protection-rtd . g$13144$1&dy4A)
        (&i/o-filename-rcd . g$13143$1&dy4A)
        (&i/o-filename-rtd . g$13142$1&dy4A)
        (&i/o-invalid-position-rcd . g$13141$1&dy4A)
        (&i/o-invalid-position-rtd . g$13140$1&dy4A)
        (&i/o-write-rcd . g$13139$1&dy4A)
        (&i/o-write-rtd . g$13138$1&dy4A)
        (&i/o-read-rcd . g$13137$1&dy4A)
        (&i/o-read-rtd . g$13136$1&dy4A)
        (&i/o-rcd . g$13135$1&dy4A)
        (&i/o-rtd . g$13134$1&dy4A)
        (&undefined-rcd . g$13133$1&dy4A)
        (&undefined-rtd . g$13132$1&dy4A)
        (&syntax-rcd . g$13131$1&dy4A)
        (&syntax-rtd . g$13130$1&dy4A)
        (&lexical-rcd . g$13129$1&dy4A)
        (&lexical-rtd . g$13128$1&dy4A)
        (&implementation-restriction-rcd . g$13127$1&dy4A)
        (&implementation-restriction-rtd . g$13126$1&dy4A)
        (&non-continuable-rcd . g$13125$1&dy4A)
        (&non-continuable-rtd . g$13124$1&dy4A)
        (&who-rcd . g$13123$1&dy4A)
        (&who-rtd . g$13122$1&dy4A)
        (&irritants-rcd . g$13121$1&dy4A)
        (&irritants-rtd . g$13120$1&dy4A)
        (&assertion-rcd . g$13119$1&dy4A)
        (&assertion-rtd . g$13118$1&dy4A)
        (&violation-rcd . g$13117$1&dy4A)
        (&violation-rtd . g$13116$1&dy4A)
        (&error-rcd . g$13115$1&dy4A)
        (&error-rtd . g$13114$1&dy4A)
        (&serious-rcd . g$13113$1&dy4A)
        (&serious-rtd . g$13112$1&dy4A)
        (&warning-rcd . g$13111$1&dy4A)
        (&warning-rtd . g$13110$1&dy4A)
        (&message-rcd . g$13109$1&dy4A)
        (&message-rtd . g$13108$1&dy4A)
        (&condition-rcd . g$13107$1&dy4A)
        (&condition-rtd . g$13106$1&dy4A)
        (library-letrec* . g$13105$1&dy4A)
        (annotation-stripped . g$13104$1&dy4A)
        (annotation-source . g$13103$1&dy4A)
        (annotation-expression . g$13102$1&dy4A)
        (annotation? . g$13101$1&dy4A)
        (read-annotated . g$13100$1&dy4A)
        (tanh . g$13099$1&dy4A)
        (cosh . g$13098$1&dy4A)
        (sinh . g$13097$1&dy4A)
        (make-guid . g$13096$1&dy4A)
        (unspecified? . g$13095$1&dy4A)
        (make-trace . g$13094$1&dy4A)
        (make-list . g$13093$1&dy4A)
        (last-pair . g$13092$1&dy4A)
        (load-r5rs . g$13091$1&dy4A)
        (license . g$13090$1&dy4A)
        (stacktrace . g$13089$1&dy4A)
        (ironscheme-build . g$12513$1&dy4A)
        (define-clr-class-internal . g$13088$1&dy4A)
        (clr-field-set!-internal . g$13087$1&dy4A)
        (clr-field-get-internal . g$13086$1&dy4A)
        (clr-cast-internal . g$13085$1&dy4A)
        (clr-call-internal . g$13084$1&dy4A)
        (clr-new-internal . g$13083$1&dy4A)
        (clr-new-array-internal . g$13082$1&dy4A)
        (clr-is-internal . g$13081$1&dy4A)
        (clr-reference-internal . g$13080$1&dy4A)
        (clr-using-internal . g$13079$1&dy4A)
        (clr-clear-usings-internal . g$13078$1&dy4A)
        (syntax-error . g$9531$1&dy4A)
        (syntax-dispatch . g$9402$1&dy4A)
        (compile-core . g$13077$1&dy4A)
        (eval-core . g$13076$1&dy4A)
        (set-symbol-value! . g$13075$1&dy4A)
        (symbol-value . g$13074$1&dy4A)
        (ungensym . g$13073$1&dy4A)
        (gensym . g$13072$1&dy4A)
        (void . g$13071$1&dy4A)
        (load-serialized-library . g$13070$1&dy4A)
        (serialize-library . g$13069$1&dy4A)
        (compile-system-libraries . g$12515$1&dy4A)
        (compile->closure . g$12517$1&dy4A)
        (compile . g$12516$1&dy4A)
        (load . g$12512$1&dy4A)
        (interaction-environment . g$9540$1&dy4A)
        (char-ready? . g$13068$1&dy4A)
        (string-upcase . g$13067$1&dy4A)
        (string-titlecase . g$13066$1&dy4A)
        (string-normalize-nfkd . g$13065$1&dy4A)
        (string-normalize-nfkc . g$13064$1&dy4A)
        (string-normalize-nfd . g$13063$1&dy4A)
        (string-normalize-nfc . g$13062$1&dy4A)
        (string-foldcase . g$13061$1&dy4A)
        (string-downcase . g$13060$1&dy4A)
        (string-ci>? . g$7632$1&dy4A)
        (string-ci>=? . g$7634$1&dy4A)
        (string-ci=? . g$7630$1&dy4A)
        (string-ci<? . g$7631$1&dy4A)
        (string-ci<=? . g$7633$1&dy4A)
        (char-whitespace? . g$13059$1&dy4A)
        (char-upper-case? . g$13058$1&dy4A)
        (char-title-case? . g$13057$1&dy4A)
        (char-numeric? . g$13056$1&dy4A)
        (char-lower-case? . g$13055$1&dy4A)
        (char-general-category . g$13054$1&dy4A)
        (char-upcase . g$13053$1&dy4A)
        (char-titlecase . g$13052$1&dy4A)
        (char-foldcase . g$13051$1&dy4A)
        (char-downcase . g$13050$1&dy4A)
        (char-ci>? . g$7671$1&dy4A)
        (char-ci>=? . g$7673$1&dy4A)
        (char-ci=? . g$7669$1&dy4A)
        (char-ci<? . g$7670$1&dy4A)
        (char-ci<=? . g$7672$1&dy4A)
        (char-alphabetic? . g$13049$1&dy4A)
        (variable-transformer-procedure . g$9139$1&dy4A)
        (variable-transformer? . g$9138$1&dy4A)
        (make-variable-transformer . g$9137$1&dy4A)
        (identifier? . g$9535$1&dy4A)
        (generate-temporaries . g$9524$1&dy4A)
        (free-identifier=? . g$9525$1&dy4A)
        (syntax->datum . g$9537$1&dy4A)
        (datum->syntax . g$9536$1&dy4A)
        (bound-identifier=? . g$9526$1&dy4A)
        (record-type-descriptor? . g$13048$1&dy4A)
        (record-predicate . g$13047$1&dy4A)
        (record-mutator . g$13046$1&dy4A)
        (record-constructor . g$13045$1&dy4A)
        (record-accessor . g$13044$1&dy4A)
        (make-record-type-descriptor . g$13043$1&dy4A)
        (make-record-constructor-descriptor . g$13042$1&dy4A)
        (record? . g$13041$1&dy4A)
        (record-type-uid . g$13040$1&dy4A)
        (record-type-sealed? . g$13039$1&dy4A)
        (record-type-parent . g$13038$1&dy4A)
        (record-type-opaque? . g$13037$1&dy4A)
        (record-type-name . g$13036$1&dy4A)
        (record-type-generative? . g$13035$1&dy4A)
        (record-type-field-names . g$13034$1&dy4A)
        (record-rtd . g$13033$1&dy4A)
        (record-field-mutable? . g$13032$1&dy4A)
        (delete-file . g$7207$1&dy4A)
        (file-exists? . g$7206$1&dy4A)
        (vector-sort! . g$13031$1&dy4A)
        (vector-sort . g$13030$1&dy4A)
        (list-sort . g$7570$1&dy4A)
        (symbol-hash . g$13029$1&dy4A)
        (string-ci-hash . g$13028$1&dy4A)
        (string-hash . g$13027$1&dy4A)
        (equal-hash . g$13026$1&dy4A)
        (hashtable-equivalence-function . g$13025$1&dy4A)
        (make-hashtable . g$13024$1&dy4A)
        (hashtable-hash-function . g$13023$1&dy4A)
        (make-eqv-hashtable . g$7174$1&dy4A)
        (make-eq-hashtable . g$7173$1&dy4A)
        (hashtable? . g$13022$1&dy4A)
        (hashtable-update! . g$7180$1&dy4A)
        (hashtable-size . g$7175$1&dy4A)
        (hashtable-set! . g$7177$1&dy4A)
        (hashtable-ref . g$7176$1&dy4A)
        (hashtable-mutable? . g$13021$1&dy4A)
        (hashtable-keys . g$13020$1&dy4A)
        (hashtable-entries . g$13019$1&dy4A)
        (hashtable-delete! . g$7178$1&dy4A)
        (hashtable-copy . g$13018$1&dy4A)
        (hashtable-contains? . g$7179$1&dy4A)
        (hashtable-clear! . g$7181$1&dy4A)
        (call-with-output-file . g$8063$1&dy4A)
        (call-with-input-file . g$8062$1&dy4A)
        (write-char . g$13017$1&dy4A)
        (write . g$13016$1&dy4A)
        (with-output-to-file . g$8061$1&dy4A)
        (with-input-from-file . g$8060$1&dy4A)
        (read-char . g$13015$1&dy4A)
        (read . g$13014$1&dy4A)
        (peek-char . g$13013$1&dy4A)
        (open-output-file . g$13012$1&dy4A)
        (open-input-file . g$13011$1&dy4A)
        (newline . g$13010$1&dy4A)
        (display . g$13009$1&dy4A)
        (close-output-port . g$13008$1&dy4A)
        (close-input-port . g$13007$1&dy4A)
        (eof-object? . g$13006$1&dy4A)
        (eof-object . g$13005$1&dy4A)
        (current-error-port . g$13004$1&dy4A)
        (current-output-port . g$13003$1&dy4A)
        (current-input-port . g$13002$1&dy4A)
        (output-port? . g$13001$1&dy4A)
        (input-port? . g$13000$1&dy4A)
        (utf-8-codec . g$12999$1&dy4A)
        (utf-16-codec . g$12998$1&dy4A)
        (transcoder-error-handling-mode . g$12997$1&dy4A)
        (transcoder-eol-style . g$12996$1&dy4A)
        (transcoder-codec . g$12995$1&dy4A)
        (transcoded-port . g$12994$1&dy4A)
        (textual-port? . g$12993$1&dy4A)
        (string->bytevector . g$12992$1&dy4A)
        (standard-output-port . g$12991$1&dy4A)
        (standard-input-port . g$12990$1&dy4A)
        (standard-error-port . g$12989$1&dy4A)
        (set-port-position! . g$12988$1&dy4A)
        (put-u8 . g$12987$1&dy4A)
        (put-string . g$12986$1&dy4A)
        (put-datum . g$12985$1&dy4A)
        (put-char . g$12984$1&dy4A)
        (put-bytevector . g$12983$1&dy4A)
        (port? . g$8036$1&dy4A)
        (port-transcoder . g$12982$1&dy4A)
        (port-position . g$12981$1&dy4A)
        (port-has-set-port-position!? . g$12980$1&dy4A)
        (port-has-port-position? . g$12979$1&dy4A)
        (port-eof? . g$12978$1&dy4A)
        (output-port-buffer-mode . g$12977$1&dy4A)
        (open-string-output-port . g$8035$1&dy4A)
        (open-string-input-port . g$12976$1&dy4A)
        (open-file-output-port . g$12975$1&dy4A)
        (open-file-input/output-port . g$12974$1&dy4A)
        (open-file-input-port . g$12973$1&dy4A)
        (open-bytevector-output-port . g$12972$1&dy4A)
        (open-bytevector-input-port . g$12971$1&dy4A)
        (native-transcoder . g$12970$1&dy4A)
        (native-eol-style . g$12969$1&dy4A)
        (make-transcoder . g$12968$1&dy4A)
        (latin-1-codec . g$12967$1&dy4A)
        (make-i/o-write-error . g$7892$1&dy4A)
        (make-i/o-read-error . g$7878$1&dy4A)
        (make-i/o-port-error . g$7997$1&dy4A)
        (make-i/o-invalid-position-error . g$7907$1&dy4A)
        (make-i/o-filename-error . g$7924$1&dy4A)
        (make-i/o-file-protection-error . g$7940$1&dy4A)
        (make-i/o-file-is-read-only-error . g$7954$1&dy4A)
        (make-i/o-file-does-not-exist-error . g$7982$1&dy4A)
        (make-i/o-file-already-exists-error . g$7968$1&dy4A)
        (make-i/o-error . g$7864$1&dy4A)
        (make-i/o-encoding-error . g$8028$1&dy4A)
        (make-i/o-decoding-error . g$8013$1&dy4A)
        (make-custom-textual-output-port . g$12966$1&dy4A)
        (make-custom-textual-input/output-port . g$12965$1&dy4A)
        (make-custom-textual-input-port . g$12964$1&dy4A)
        (make-custom-binary-output-port . g$12963$1&dy4A)
        (make-custom-binary-input/output-port . g$12962$1&dy4A)
        (make-custom-binary-input-port . g$12961$1&dy4A)
        (make-bytevector . g$12960$1&dy4A)
        (lookahead-u8 . g$12959$1&dy4A)
        (lookahead-char . g$12958$1&dy4A)
        (i/o-write-error? . g$7893$1&dy4A)
        (i/o-read-error? . g$7879$1&dy4A)
        (i/o-port-error? . g$7999$1&dy4A)
        (i/o-invalid-position-error? . g$7909$1&dy4A)
        (i/o-error-position . g$7910$1&dy4A)
        (i/o-filename-error? . g$7926$1&dy4A)
        (i/o-file-protection-error? . g$7941$1&dy4A)
        (i/o-file-is-read-only-error? . g$7955$1&dy4A)
        (i/o-file-does-not-exist-error? . g$7983$1&dy4A)
        (i/o-file-already-exists-error? . g$7969$1&dy4A)
        (i/o-error? . g$7865$1&dy4A)
        (i/o-error-port . g$8000$1&dy4A)
        (i/o-error-filename . g$7927$1&dy4A)
        (i/o-encoding-error? . g$8030$1&dy4A)
        (i/o-encoding-error-char . g$8031$1&dy4A)
        (i/o-decoding-error? . g$8014$1&dy4A)
        (get-u8 . g$12957$1&dy4A)
        (get-string-n! . g$12956$1&dy4A)
        (get-string-n . g$12955$1&dy4A)
        (get-string-all . g$12954$1&dy4A)
        (get-line . g$12953$1&dy4A)
        (get-datum . g$12952$1&dy4A)
        (get-char . g$12951$1&dy4A)
        (get-bytevector-some . g$12950$1&dy4A)
        (get-bytevector-n! . g$12949$1&dy4A)
        (get-bytevector-n . g$12948$1&dy4A)
        (get-bytevector-all . g$12947$1&dy4A)
        (flush-output-port . g$12946$1&dy4A)
        (close-port . g$12945$1&dy4A)
        (call-with-string-output-port . g$8037$1&dy4A)
        (call-with-port . g$12944$1&dy4A)
        (call-with-bytevector-output-port . g$12943$1&dy4A)
        (bytevector->string . g$12942$1&dy4A)
        (buffer-mode? . g$12941$1&dy4A)
        (binary-port? . g$12940$1&dy4A)
        (scheme-report-environment . g$9515$1&dy4A)
        (quotient . g$7550$1&dy4A)
        (null-environment . g$9514$1&dy4A)
        (remainder . g$7551$1&dy4A)
        (modulo . g$7552$1&dy4A)
        (inexact->exact . g$12939$1&dy4A)
        (force . g$7554$1&dy4A)
        (exact->inexact . g$12938$1&dy4A)
        (exit . g$12937$1&dy4A)
        (command-line . g$12509$1&dy4A)
        (string-fill! . g$12936$1&dy4A)
        (string-set! . g$12935$1&dy4A)
        (set-cdr! . g$12934$1&dy4A)
        (set-car! . g$12933$1&dy4A)
        (remove . g$6562$1&dy4A)
        (remv . g$6563$1&dy4A)
        (remp . g$6545$1&dy4A)
        (remq . g$6564$1&dy4A)
        (partition . g$6544$1&dy4A)
        (memv . g$6552$1&dy4A)
        (memq . g$6551$1&dy4A)
        (memp . g$6554$1&dy4A)
        (member . g$6553$1&dy4A)
        (exists . g$6558$1&dy4A)
        (for-all . g$6557$1&dy4A)
        (fold-right . g$6561$1&dy4A)
        (fold-left . g$6560$1&dy4A)
        (find . g$6543$1&dy4A)
        (filter . g$6546$1&dy4A)
        (cons* . g$6559$1&dy4A)
        (assv . g$6548$1&dy4A)
        (assq . g$6547$1&dy4A)
        (assp . g$6550$1&dy4A)
        (assoc . g$6549$1&dy4A)
        (with-exception-handler . g$12932$1&dy4A)
        (raise-continuable . g$12931$1&dy4A)
        (raise . g$12930$1&dy4A)
        (eval . g$9517$1&dy4A)
        (environment . g$9513$1&dy4A)
        (make-enumeration . g$8121$1&dy4A)
        (enum-set=? . g$8128$1&dy4A)
        (enum-set-universe . g$8122$1&dy4A)
        (enum-set-union . g$8129$1&dy4A)
        (enum-set-subset? . g$8127$1&dy4A)
        (enum-set-projection . g$8133$1&dy4A)
        (enum-set-member? . g$8126$1&dy4A)
        (enum-set-intersection . g$8130$1&dy4A)
        (enum-set-indexer . g$8123$1&dy4A)
        (enum-set-difference . g$8131$1&dy4A)
        (enum-set-constructor . g$8124$1&dy4A)
        (enum-set-complement . g$8132$1&dy4A)
        (enum-set->list . g$8125$1&dy4A)
        (who-condition? . g$7461$1&dy4A)
        (warning? . g$7372$1&dy4A)
        (violation? . g$7414$1&dy4A)
        (undefined-violation? . g$7538$1&dy4A)
        (syntax-violation? . g$7522$1&dy4A)
        (syntax-violation-subform . g$7524$1&dy4A)
        (syntax-violation-form . g$7523$1&dy4A)
        (syntax-violation . g$9534$1&dy4A)
        (simple-conditions . g$12929$1&dy4A)
        (serious-condition? . g$7386$1&dy4A)
        (non-continuable-violation? . g$7476$1&dy4A)
        (message-condition? . g$7357$1&dy4A)
        (make-who-condition . g$7459$1&dy4A)
        (make-warning . g$7371$1&dy4A)
        (make-violation . g$7413$1&dy4A)
        (make-undefined-violation . g$7537$1&dy4A)
        (make-syntax-violation . g$7519$1&dy4A)
        (make-serious-condition . g$7385$1&dy4A)
        (make-non-continuable-violation . g$7475$1&dy4A)
        (make-message-condition . g$7355$1&dy4A)
        (make-lexical-violation . g$7503$1&dy4A)
        (make-irritants-condition . g$7442$1&dy4A)
        (make-implementation-restriction-violation . g$7489$1&dy4A)
        (make-error . g$7399$1&dy4A)
        (make-assertion-violation . g$7427$1&dy4A)
        (lexical-violation? . g$7504$1&dy4A)
        (irritants-condition? . g$7444$1&dy4A)
        (implementation-restriction-violation? . g$7490$1&dy4A)
        (error? . g$7400$1&dy4A)
        (condition-who . g$7462$1&dy4A)
        (condition-predicate . g$12928$1&dy4A)
        (condition-message . g$7358$1&dy4A)
        (condition-irritants . g$7445$1&dy4A)
        (condition-accessor . g$12927$1&dy4A)
        (condition . g$12926$1&dy4A)
        (assertion-violation? . g$7428$1&dy4A)
        (condition? . g$12925$1&dy4A)
        (utf32->string . g$12924$1&dy4A)
        (utf16->string . g$12923$1&dy4A)
        (utf8->string . g$12922$1&dy4A)
        (uint-list->bytevector . g$12921$1&dy4A)
        (u8-list->bytevector . g$12920$1&dy4A)
        (string->utf8 . g$12919$1&dy4A)
        (string->utf32 . g$12918$1&dy4A)
        (string->utf16 . g$12917$1&dy4A)
        (sint-list->bytevector . g$12916$1&dy4A)
        (native-endianness . g$7213$1&dy4A)
        (bytevector? . g$12915$1&dy4A)
        (bytevector=? . g$12914$1&dy4A)
        (bytevector-uint-set! . g$12913$1&dy4A)
        (bytevector-uint-ref . g$12912$1&dy4A)
        (bytevector-u8-set! . g$12911$1&dy4A)
        (bytevector-u8-ref . g$12910$1&dy4A)
        (bytevector-u64-set! . g$7234$1&dy4A)
        (bytevector-u64-ref . g$7230$1&dy4A)
        (bytevector-u64-native-set! . g$7236$1&dy4A)
        (bytevector-u64-native-ref . g$7232$1&dy4A)
        (bytevector-u32-set! . g$7226$1&dy4A)
        (bytevector-u32-ref . g$7222$1&dy4A)
        (bytevector-u32-native-set! . g$7228$1&dy4A)
        (bytevector-u32-native-ref . g$7224$1&dy4A)
        (bytevector-u16-set! . g$7218$1&dy4A)
        (bytevector-u16-ref . g$7214$1&dy4A)
        (bytevector-u16-native-set! . g$7220$1&dy4A)
        (bytevector-u16-native-ref . g$7216$1&dy4A)
        (bytevector-sint-set! . g$12909$1&dy4A)
        (bytevector-sint-ref . g$12908$1&dy4A)
        (bytevector-s8-set! . g$12907$1&dy4A)
        (bytevector-s8-ref . g$12906$1&dy4A)
        (bytevector-s64-set! . g$7235$1&dy4A)
        (bytevector-s64-ref . g$7231$1&dy4A)
        (bytevector-s64-native-set! . g$7237$1&dy4A)
        (bytevector-s64-native-ref . g$7233$1&dy4A)
        (bytevector-s32-set! . g$7227$1&dy4A)
        (bytevector-s32-ref . g$7223$1&dy4A)
        (bytevector-s32-native-set! . g$7229$1&dy4A)
        (bytevector-s32-native-ref . g$7225$1&dy4A)
        (bytevector-s16-set! . g$7219$1&dy4A)
        (bytevector-s16-ref . g$7215$1&dy4A)
        (bytevector-s16-native-set! . g$7221$1&dy4A)
        (bytevector-s16-native-ref . g$7217$1&dy4A)
        (bytevector-length . g$12905$1&dy4A)
        (bytevector-ieee-single-set! . g$12904$1&dy4A)
        (bytevector-ieee-single-ref . g$12903$1&dy4A)
        (bytevector-ieee-single-native-set! . g$7240$1&dy4A)
        (bytevector-ieee-single-native-ref . g$7238$1&dy4A)
        (bytevector-ieee-double-set! . g$12902$1&dy4A)
        (bytevector-ieee-double-ref . g$12901$1&dy4A)
        (bytevector-ieee-double-native-set! . g$7241$1&dy4A)
        (bytevector-ieee-double-native-ref . g$7239$1&dy4A)
        (bytevector-fill! . g$12900$1&dy4A)
        (bytevector-copy! . g$12899$1&dy4A)
        (bytevector-copy . g$12898$1&dy4A)
        (bytevector->uint-list . g$12897$1&dy4A)
        (bytevector->u8-list . g$12896$1&dy4A)
        (bytevector->sint-list . g$12895$1&dy4A)
        (no-nans-violation? . g$7850$1&dy4A)
        (no-infinities-violation? . g$7836$1&dy4A)
        (make-no-nans-violation . g$7849$1&dy4A)
        (make-no-infinities-violation . g$7835$1&dy4A)
        (real->flonum . g$12894$1&dy4A)
        (flzero? . g$12893$1&dy4A)
        (fltruncate . g$12892$1&dy4A)
        (fltan . g$12891$1&dy4A)
        (flsqrt . g$12890$1&dy4A)
        (flsin . g$12889$1&dy4A)
        (flround . g$12888$1&dy4A)
        (flpositive? . g$12887$1&dy4A)
        (flonum? . g$12886$1&dy4A)
        (flodd? . g$12885$1&dy4A)
        (flnumerator . g$12884$1&dy4A)
        (flnegative? . g$12883$1&dy4A)
        (flnan? . g$12882$1&dy4A)
        (flmod0 . g$12881$1&dy4A)
        (flmod . g$12880$1&dy4A)
        (flmin . g$12879$1&dy4A)
        (flmax . g$12878$1&dy4A)
        (fllog . g$12877$1&dy4A)
        (flinteger? . g$12876$1&dy4A)
        (flinfinite? . g$12875$1&dy4A)
        (flfloor . g$12874$1&dy4A)
        (flfinite? . g$12873$1&dy4A)
        (flexpt . g$12872$1&dy4A)
        (flexp . g$12871$1&dy4A)
        (fleven? . g$12870$1&dy4A)
        (fldiv0-and-mod0 . g$12869$1&dy4A)
        (fldiv0 . g$12868$1&dy4A)
        (fldiv-and-mod . g$12867$1&dy4A)
        (fldiv . g$12866$1&dy4A)
        (fldenominator . g$12865$1&dy4A)
        (flcos . g$12864$1&dy4A)
        (flceiling . g$12863$1&dy4A)
        (flatan . g$12862$1&dy4A)
        (flasin . g$12861$1&dy4A)
        (flacos . g$12860$1&dy4A)
        (flabs . g$12859$1&dy4A)
        (fl>? . g$12858$1&dy4A)
        (fl>=? . g$12857$1&dy4A)
        (fl=? . g$12856$1&dy4A)
        (fl<? . g$12855$1&dy4A)
        (fl<=? . g$12854$1&dy4A)
        (fl/ . g$12853$1&dy4A)
        (fl- . g$12852$1&dy4A)
        (fl+ . g$12851$1&dy4A)
        (fl* . g$12850$1&dy4A)
        (fixnum->flonum . g$12849$1&dy4A)
        (fxzero? . g$12848$1&dy4A)
        (fxxor . g$12847$1&dy4A)
        (fxrotate-bit-field . g$7781$1&dy4A)
        (fxreverse-bit-field . g$12846$1&dy4A)
        (fxpositive? . g$12845$1&dy4A)
        (fxodd? . g$12844$1&dy4A)
        (fxnot . g$12843$1&dy4A)
        (fxnegative? . g$12842$1&dy4A)
        (fxmod0 . g$12841$1&dy4A)
        (fxmod . g$12840$1&dy4A)
        (fxmin . g$12839$1&dy4A)
        (fxmax . g$12838$1&dy4A)
        (fxlength . g$12837$1&dy4A)
        (fxior . g$12836$1&dy4A)
        (fxif . g$7775$1&dy4A)
        (fxfirst-bit-set . g$12835$1&dy4A)
        (fxeven? . g$12834$1&dy4A)
        (fxdiv0-and-mod0 . g$12833$1&dy4A)
        (fxdiv0 . g$12832$1&dy4A)
        (fxdiv-and-mod . g$12831$1&dy4A)
        (fxdiv . g$12830$1&dy4A)
        (fxcopy-bit-field . g$7778$1&dy4A)
        (fxcopy-bit . g$7776$1&dy4A)
        (fxbit-set? . g$12829$1&dy4A)
        (fxbit-field . g$7777$1&dy4A)
        (fxbit-count . g$12828$1&dy4A)
        (fxarithmetic-shift-right . g$7780$1&dy4A)
        (fxarithmetic-shift-left . g$7779$1&dy4A)
        (fxarithmetic-shift . g$12827$1&dy4A)
        (fxand . g$12826$1&dy4A)
        (fx>? . g$12825$1&dy4A)
        (fx>=? . g$12824$1&dy4A)
        (fx=? . g$12823$1&dy4A)
        (fx<? . g$12822$1&dy4A)
        (fx<=? . g$12821$1&dy4A)
        (fx-/carry . g$12820$1&dy4A)
        (fx- . g$12819$1&dy4A)
        (fx+/carry . g$12818$1&dy4A)
        (fx+ . g$12817$1&dy4A)
        (fx*/carry . g$12816$1&dy4A)
        (fx* . g$12815$1&dy4A)
        (greatest-fixnum . g$12814$1&dy4A)
        (least-fixnum . g$12813$1&dy4A)
        (fixnum-width . g$12812$1&dy4A)
        (fixnum? . g$12811$1&dy4A)
        (bitwise-rotate-bit-field . g$7733$1&dy4A)
        (bitwise-reverse-bit-field . g$12810$1&dy4A)
        (bitwise-length . g$12809$1&dy4A)
        (bitwise-if . g$7727$1&dy4A)
        (bitwise-first-bit-set . g$12808$1&dy4A)
        (bitwise-copy-bit-field . g$7730$1&dy4A)
        (bitwise-copy-bit . g$7728$1&dy4A)
        (bitwise-bit-set? . g$12807$1&dy4A)
        (bitwise-bit-field . g$12806$1&dy4A)
        (bitwise-bit-count . g$12805$1&dy4A)
        (bitwise-xor . g$12804$1&dy4A)
        (bitwise-ior . g$12803$1&dy4A)
        (bitwise-and . g$12802$1&dy4A)
        (bitwise-not . g$12801$1&dy4A)
        (bitwise-arithmetic-shift-right . g$7732$1&dy4A)
        (bitwise-arithmetic-shift-left . g$7731$1&dy4A)
        (bitwise-arithmetic-shift . g$12800$1&dy4A)
        (zero? . g$12799$1&dy4A)
        (vector? . g$12798$1&dy4A)
        (vector-set! . g$12797$1&dy4A)
        (vector-ref . g$12796$1&dy4A)
        (vector-map . g$12795$1&dy4A)
        (vector-length . g$12794$1&dy4A)
        (vector-for-each . g$12793$1&dy4A)
        (vector-fill! . g$12792$1&dy4A)
        (vector->list . g$12791$1&dy4A)
        (vector . g$12790$1&dy4A)
        (values . g$12789$1&dy4A)
        (truncate . g$12788$1&dy4A)
        (tan . g$12787$1&dy4A)
        (symbol? . g$12786$1&dy4A)
        (symbol=? . g$6722$1&dy4A)
        (symbol->string . g$12785$1&dy4A)
        (substring . g$12784$1&dy4A)
        (string? . g$12783$1&dy4A)
        (string>? . g$6719$1&dy4A)
        (string>=? . g$6721$1&dy4A)
        (string=? . g$6717$1&dy4A)
        (string<? . g$6718$1&dy4A)
        (string<=? . g$6720$1&dy4A)
        (string-ref . g$12782$1&dy4A)
        (string-length . g$12781$1&dy4A)
        (string-for-each . g$12780$1&dy4A)
        (string-copy . g$12779$1&dy4A)
        (string-append . g$12778$1&dy4A)
        (string->symbol . g$12777$1&dy4A)
        (string->number . g$12776$1&dy4A)
        (string->list . g$12775$1&dy4A)
        (string . g$12774$1&dy4A)
        (sqrt . g$12773$1&dy4A)
        (sin . g$12772$1&dy4A)
        (round . g$12771$1&dy4A)
        (reverse . g$12770$1&dy4A)
        (real? . g$12769$1&dy4A)
        (real-valued? . g$12768$1&dy4A)
        (real-part . g$12767$1&dy4A)
        (rationalize . g$6763$1&dy4A)
        (rational? . g$12766$1&dy4A)
        (rational-valued? . g$12765$1&dy4A)
        (procedure? . g$12764$1&dy4A)
        (positive? . g$12763$1&dy4A)
        (pair? . g$12762$1&dy4A)
        (odd? . g$12761$1&dy4A)
        (numerator . g$12760$1&dy4A)
        (number? . g$12759$1&dy4A)
        (number->string . g$12758$1&dy4A)
        (null? . g$12757$1&dy4A)
        (not . g$12756$1&dy4A)
        (negative? . g$12755$1&dy4A)
        (nan? . g$12754$1&dy4A)
        (min . g$12753$1&dy4A)
        (max . g$12752$1&dy4A)
        (map . g$12751$1&dy4A)
        (make-vector . g$12750$1&dy4A)
        (make-string . g$12749$1&dy4A)
        (make-rectangular . g$12748$1&dy4A)
        (make-polar . g$12747$1&dy4A)
        (magnitude . g$12746$1&dy4A)
        (log . g$12745$1&dy4A)
        (list? . g$12744$1&dy4A)
        (list-tail . g$12743$1&dy4A)
        (list-ref . g$12742$1&dy4A)
        (list->vector . g$12741$1&dy4A)
        (list->string . g$12740$1&dy4A)
        (list . g$12739$1&dy4A)
        (length . g$12738$1&dy4A)
        (lcm . g$12737$1&dy4A)
        (integer? . g$12736$1&dy4A)
        (integer-valued? . g$12735$1&dy4A)
        (integer->char . g$12734$1&dy4A)
        (infinite? . g$12733$1&dy4A)
        (inexact? . g$12732$1&dy4A)
        (inexact . g$12731$1&dy4A)
        (imag-part . g$12730$1&dy4A)
        (gcd . g$12729$1&dy4A)
        (for-each . g$12728$1&dy4A)
        (floor . g$12727$1&dy4A)
        (finite? . g$12726$1&dy4A)
        (expt . g$12725$1&dy4A)
        (exp . g$12724$1&dy4A)
        (exact? . g$12723$1&dy4A)
        (exact-integer-sqrt . g$12722$1&dy4A)
        (exact . g$12721$1&dy4A)
        (even? . g$12720$1&dy4A)
        (error . g$12719$1&dy4A)
        (eqv? . g$12718$1&dy4A)
        (equal? . g$12717$1&dy4A)
        (eq? . g$12716$1&dy4A)
        (dynamic-wind . g$12715$1&dy4A)
        (div0-and-mod0 . g$12714$1&dy4A)
        (mod0 . g$12713$1&dy4A)
        (div0 . g$12712$1&dy4A)
        (div-and-mod . g$12711$1&dy4A)
        (mod . g$12710$1&dy4A)
        (div . g$12709$1&dy4A)
        (denominator . g$12708$1&dy4A)
        (cos . g$12707$1&dy4A)
        (cons . g$12706$1&dy4A)
        (complex? . g$12705$1&dy4A)
        (char? . g$12704$1&dy4A)
        (char>? . g$6760$1&dy4A)
        (char>=? . g$6762$1&dy4A)
        (char=? . g$6758$1&dy4A)
        (char<? . g$6759$1&dy4A)
        (char<=? . g$6761$1&dy4A)
        (char->integer . g$12703$1&dy4A)
        (ceiling . g$12702$1&dy4A)
        (call-with-values . g$12701$1&dy4A)
        (call/cc . g$12700$1&dy4A)
        (call-with-current-continuation . g$12699$1&dy4A)
        (cddddr . g$6682$1&dy4A)
        (cdddar . g$6681$1&dy4A)
        (cddadr . g$6680$1&dy4A)
        (cddaar . g$6679$1&dy4A)
        (cdaddr . g$6678$1&dy4A)
        (cdadar . g$6677$1&dy4A)
        (cdaadr . g$6676$1&dy4A)
        (cdaaar . g$6675$1&dy4A)
        (cadddr . g$6674$1&dy4A)
        (caddar . g$6673$1&dy4A)
        (cadadr . g$6672$1&dy4A)
        (cadaar . g$6671$1&dy4A)
        (caaddr . g$6670$1&dy4A)
        (caadar . g$6669$1&dy4A)
        (caaadr . g$6668$1&dy4A)
        (caaaar . g$6667$1&dy4A)
        (cdddr . g$6666$1&dy4A)
        (cddar . g$6665$1&dy4A)
        (cdadr . g$6664$1&dy4A)
        (cdaar . g$6663$1&dy4A)
        (caddr . g$6662$1&dy4A)
        (cadar . g$6661$1&dy4A)
        (caadr . g$6660$1&dy4A)
        (caaar . g$6659$1&dy4A)
        (cddr . g$6658$1&dy4A)
        (cdar . g$6657$1&dy4A)
        (cadr . g$6656$1&dy4A)
        (caar . g$6655$1&dy4A)
        (cdr . g$12698$1&dy4A)
        (car . g$12697$1&dy4A)
        (boolean? . g$12696$1&dy4A)
        (boolean=? . g$6723$1&dy4A)
        (atan . g$12695$1&dy4A)
        (assertion-violation . g$12694$1&dy4A)
        (asin . g$12693$1&dy4A)
        (apply . g$12692$1&dy4A)
        (append . g$12691$1&dy4A)
        (angle . g$12690$1&dy4A)
        (acos . g$12689$1&dy4A)
        (abs . g$12688$1&dy4A)
        (/ . g$12687$1&dy4A)
        (* . g$12686$1&dy4A)
        (- . g$12685$1&dy4A)
        (+ . g$12684$1&dy4A)
        (>= . g$12683$1&dy4A)
        (> . g$12682$1&dy4A)
        (= . g$12681$1&dy4A)
        (<= . g$12680$1&dy4A)
        (< . g$12679$1&dy4A)
        (make-record-printer . g$12678$1&dy4A)
        (eqv-hash . g$12677$1&dy4A)
        (reverse! . g$12676$1&dy4A)
        (deserialize-port . g$12675$1&dy4A)
        (serialize-port . g$12674$1&dy4A)
        (enum-set? . g$8096$1&dy4A)
        (make-promise . g$7553$1&dy4A)
        (load/args . g$12511$1&dy4A)
        (printf . g$8207$1&dy4A)
        (fprintf . g$8208$1&dy4A)
        (format . g$8209$1&dy4A)
        (procedure-form . g$12673$1&dy4A)
        (procedure-environment . g$12672$1&dy4A)
        (procedure-name . g$12671$1&dy4A)
        (procedure-arity . g$12670$1&dy4A)
        (gc-collect . g$12669$1&dy4A)
        (clr-type? . g$12668$1&dy4A)
        (get-clr-type . g$12667$1&dy4A)
        (get-command-line . g$12666$1&dy4A)
        (vector-append . g$12665$1&dy4A)
        (vector-filter . g$12664$1&dy4A)
        (vector-reverse! . g$12663$1&dy4A)
        (vector-contains? . g$12662$1&dy4A)
        (vector-index-of . g$12661$1&dy4A)
        (vector-copy . g$12660$1&dy4A)
        (vector-binary-search . g$12659$1&dy4A)
        (string-ci-compare . g$12658$1&dy4A)
        (string-compare . g$12657$1&dy4A)
        (string-format . g$12656$1&dy4A)
        (trace-printer . g$12508$1&dy4A)
        (make-traced-procedure . g$12655$1&dy4A)
        (make-traced-macro . g$8229$1&dy4A)
        (assertion-error . g$9530$1&dy4A)
        (pmap . g$12654$1&dy4A)
        (time-it . g$12653$1&dy4A)
        (make-parameter . g$8236$1&dy4A)
        (library-locator . g$12652$1&dy4A)
        (get-library-paths . g$12651$1&dy4A)
        (environment-bindings . g$9509$1&dy4A)
        (environment-symbols . g$9512$1&dy4A)
        (interaction-environment-symbols . g$9508$1&dy4A)
        (optimization-level . g$12650$1&dy4A)
        (library-path . g$8691$1&dy4A)
        (expand . g$9516$1&dy4A)
        (&no-nans . g$12649$1&dy4A)
        (&no-infinities . g$12648$1&dy4A)
        (&i/o-encoding . g$12647$1&dy4A)
        (&i/o-decoding . g$12646$1&dy4A)
        (&i/o-port . g$12645$1&dy4A)
        (&i/o-file-does-not-exist . g$12644$1&dy4A)
        (&i/o-file-already-exists . g$12643$1&dy4A)
        (&i/o-file-is-read-only . g$12642$1&dy4A)
        (&i/o-file-protection . g$12641$1&dy4A)
        (&i/o-filename . g$12640$1&dy4A)
        (&i/o-invalid-position . g$12639$1&dy4A)
        (&i/o-write . g$12638$1&dy4A)
        (&i/o-read . g$12637$1&dy4A)
        (&i/o . g$12636$1&dy4A)
        (&non-continuable . g$12635$1&dy4A)
        (&undefined . g$12634$1&dy4A)
        (&syntax . g$12633$1&dy4A)
        (&lexical . g$12632$1&dy4A)
        (&implementation-restriction . g$12631$1&dy4A)
        (&who . g$12630$1&dy4A)
        (&irritants . g$12629$1&dy4A)
        (&assertion . g$12628$1&dy4A)
        (&violation . g$12627$1&dy4A)
        (&error . g$12626$1&dy4A)
        (&serious . g$12625$1&dy4A)
        (&warning . g$12624$1&dy4A)
        (&message . g$12623$1&dy4A)
        (&condition . g$12622$1&dy4A)
        (define-condition-type . g$12621$1&dy4A)
        (define-enumeration . g$12620$1&dy4A)
        (define-record-type . g$12619$1&dy4A)
        (parent-rtd . g$12618$1&dy4A)
        (nongenerative . g$12617$1&dy4A)
        (opaque . g$12616$1&dy4A)
        (sealed . g$12615$1&dy4A)
        (protocol . g$12614$1&dy4A)
        (parent . g$12613$1&dy4A)
        (immutable . g$12612$1&dy4A)
        (mutable . g$12611$1&dy4A)
        (fields . g$12610$1&dy4A)
        (error-handling-mode . g$12609$1&dy4A)
        (file-options . g$12608$1&dy4A)
        (buffer-mode . g$12607$1&dy4A)
        (eol-style . g$12606$1&dy4A)
        (guard . g$12605$1&dy4A)
        (trace-letrec-syntax . g$12604$1&dy4A)
        (trace-let-syntax . g$12603$1&dy4A)
        (trace-define-syntax . g$12602$1&dy4A)
        (trace-define . g$12601$1&dy4A)
        (trace-lambda . g$12600$1&dy4A)
        (unsyntax-splicing . g$12599$1&dy4A)
        (unsyntax . g$12598$1&dy4A)
        (unquote-splicing . g$12597$1&dy4A)
        (unquote . g$12596$1&dy4A)
        (_ . g$12595$1&dy4A)
        (else . g$12594$1&dy4A)
        (=> . g$12593$1&dy4A)
        (... . g$12592$1&dy4A)
        (assert . g$12591$1&dy4A)
        (endianness . g$12590$1&dy4A)
        (delay . g$12589$1&dy4A)
        (time . g$12588$1&dy4A)
        (or . g$12587$1&dy4A)
        (and . g$12586$1&dy4A)
        (do . g$12585$1&dy4A)
        (cond . g$12584$1&dy4A)
        (let* . g$12583$1&dy4A)
        (let . g$12582$1&dy4A)
        (identifier-syntax . g$12581$1&dy4A)
        (with-syntax . g$12580$1&dy4A)
        (quasisyntax . g$12579$1&dy4A)
        (quasiquote . g$12578$1&dy4A)
        (syntax-rules . g$12577$1&dy4A)
        (include-into . g$12576$1&dy4A)
        (include . g$12575$1&dy4A)
        (define-struct . g$12574$1&dy4A)
        (let-values . g$12573$1&dy4A)
        (let*-values . g$12572$1&dy4A)
        (record-constructor-descriptor . g$12571$1&dy4A)
        (record-type-descriptor . g$12570$1&dy4A)
        (fluid-let-syntax . g$12569$1&dy4A)
        (case . g$12568$1&dy4A)
        (parameterize . g$12567$1&dy4A)
        (unless . g$12566$1&dy4A)
        (when . g$12565$1&dy4A)
        (if . g$12564$1&dy4A)
        (letrec* . g$12563$1&dy4A)
        (letrec . g$12562$1&dy4A)
        (type-descriptor . g$12561$1&dy4A)
        (case-lambda . g$12560$1&dy4A)
        (lambda . g$12559$1&dy4A)
        (syntax . g$12558$1&dy4A)
        (syntax-case . g$12557$1&dy4A)
        (quote . g$12556$1&dy4A)
        (foreign-call . g$12555$1&dy4A)
        (letrec-syntax . g$12554$1&dy4A)
        (let-syntax . g$12553$1&dy4A)
        (set! . g$12552$1&dy4A)
        (export . g$12551$1&dy4A)
        (import . g$12550$1&dy4A)
        (library . g$12549$1&dy4A)
        (begin . g$12548$1&dy4A)
        (module . g$12547$1&dy4A)
        (define-syntax . g$12546$1&dy4A)
        (define . g$12545$1&dy4A))
      '((g$9407$1&dy4A core-prim . ellipsis-map)
        (g$13161$1&dy4A core-prim . &no-nans-rcd)
        (g$13160$1&dy4A core-prim . &no-nans-rtd)
        (g$13159$1&dy4A core-prim . &no-infinities-rcd)
        (g$13158$1&dy4A core-prim . &no-infinities-rtd)
        (g$13157$1&dy4A core-prim . &i/o-encoding-rcd)
        (g$13156$1&dy4A core-prim . &i/o-encoding-rtd)
        (g$13155$1&dy4A core-prim . &i/o-decoding-rcd)
        (g$13154$1&dy4A core-prim . &i/o-decoding-rtd)
        (g$13153$1&dy4A core-prim . &i/o-port-rcd)
        (g$13152$1&dy4A core-prim . &i/o-port-rtd)
        (g$13151$1&dy4A core-prim . &i/o-file-does-not-exist-rcd)
        (g$13150$1&dy4A core-prim . &i/o-file-does-not-exist-rtd)
        (g$13149$1&dy4A core-prim . &i/o-file-already-exists-rcd)
        (g$13148$1&dy4A core-prim . &i/o-file-already-exists-rtd)
        (g$13147$1&dy4A core-prim . &i/o-file-is-read-only-rcd)
        (g$13146$1&dy4A core-prim . &i/o-file-is-read-only-rtd)
        (g$13145$1&dy4A core-prim . &i/o-file-protection-rcd)
        (g$13144$1&dy4A core-prim . &i/o-file-protection-rtd)
        (g$13143$1&dy4A core-prim . &i/o-filename-rcd)
        (g$13142$1&dy4A core-prim . &i/o-filename-rtd)
        (g$13141$1&dy4A core-prim . &i/o-invalid-position-rcd)
        (g$13140$1&dy4A core-prim . &i/o-invalid-position-rtd)
        (g$13139$1&dy4A core-prim . &i/o-write-rcd)
        (g$13138$1&dy4A core-prim . &i/o-write-rtd)
        (g$13137$1&dy4A core-prim . &i/o-read-rcd)
        (g$13136$1&dy4A core-prim . &i/o-read-rtd)
        (g$13135$1&dy4A core-prim . &i/o-rcd)
        (g$13134$1&dy4A core-prim . &i/o-rtd)
        (g$13133$1&dy4A core-prim . &undefined-rcd)
        (g$13132$1&dy4A core-prim . &undefined-rtd)
        (g$13131$1&dy4A core-prim . &syntax-rcd)
        (g$13130$1&dy4A core-prim . &syntax-rtd)
        (g$13129$1&dy4A core-prim . &lexical-rcd)
        (g$13128$1&dy4A core-prim . &lexical-rtd)
        (g$13127$1&dy4A core-prim . &implementation-restriction-rcd)
        (g$13126$1&dy4A core-prim . &implementation-restriction-rtd)
        (g$13125$1&dy4A core-prim . &non-continuable-rcd)
        (g$13124$1&dy4A core-prim . &non-continuable-rtd)
        (g$13123$1&dy4A core-prim . &who-rcd)
        (g$13122$1&dy4A core-prim . &who-rtd)
        (g$13121$1&dy4A core-prim . &irritants-rcd)
        (g$13120$1&dy4A core-prim . &irritants-rtd)
        (g$13119$1&dy4A core-prim . &assertion-rcd)
        (g$13118$1&dy4A core-prim . &assertion-rtd)
        (g$13117$1&dy4A core-prim . &violation-rcd)
        (g$13116$1&dy4A core-prim . &violation-rtd)
        (g$13115$1&dy4A core-prim . &error-rcd)
        (g$13114$1&dy4A core-prim . &error-rtd)
        (g$13113$1&dy4A core-prim . &serious-rcd)
        (g$13112$1&dy4A core-prim . &serious-rtd)
        (g$13111$1&dy4A core-prim . &warning-rcd)
        (g$13110$1&dy4A core-prim . &warning-rtd)
        (g$13109$1&dy4A core-prim . &message-rcd)
        (g$13108$1&dy4A core-prim . &message-rtd)
        (g$13107$1&dy4A core-prim . &condition-rcd)
        (g$13106$1&dy4A core-prim . &condition-rtd)
        (g$13105$1&dy4A core-prim . library-letrec*)
        (g$13104$1&dy4A core-prim . annotation-stripped)
        (g$13103$1&dy4A core-prim . annotation-source)
        (g$13102$1&dy4A core-prim . annotation-expression)
        (g$13101$1&dy4A core-prim . annotation?)
        (g$13100$1&dy4A core-prim . read-annotated)
        (g$13099$1&dy4A core-prim . tanh)
        (g$13098$1&dy4A core-prim . cosh)
        (g$13097$1&dy4A core-prim . sinh)
        (g$13096$1&dy4A core-prim . make-guid)
        (g$13095$1&dy4A core-prim . unspecified?)
        (g$13094$1&dy4A core-prim . make-trace)
        (g$13093$1&dy4A core-prim . make-list)
        (g$13092$1&dy4A core-prim . last-pair)
        (g$13091$1&dy4A core-prim . load-r5rs)
        (g$13090$1&dy4A core-prim . license)
        (g$13089$1&dy4A core-prim . stacktrace)
        (g$12513$1&dy4A core-prim . ironscheme-build)
        (g$13088$1&dy4A core-prim . define-clr-class-internal)
        (g$13087$1&dy4A core-prim . clr-field-set!-internal)
        (g$13086$1&dy4A core-prim . clr-field-get-internal)
        (g$13085$1&dy4A core-prim . clr-cast-internal)
        (g$13084$1&dy4A core-prim . clr-call-internal)
        (g$13083$1&dy4A core-prim . clr-new-internal)
        (g$13082$1&dy4A core-prim . clr-new-array-internal)
        (g$13081$1&dy4A core-prim . clr-is-internal)
        (g$13080$1&dy4A core-prim . clr-reference-internal)
        (g$13079$1&dy4A core-prim . clr-using-internal)
        (g$13078$1&dy4A core-prim . clr-clear-usings-internal)
        (g$9531$1&dy4A core-prim . syntax-error)
        (g$9402$1&dy4A core-prim . syntax-dispatch)
        (g$13077$1&dy4A core-prim . compile-core)
        (g$13076$1&dy4A core-prim . eval-core)
        (g$13075$1&dy4A core-prim . set-symbol-value!)
        (g$13074$1&dy4A core-prim . symbol-value)
        (g$13073$1&dy4A core-prim . ungensym)
        (g$13072$1&dy4A core-prim . gensym)
        (g$13071$1&dy4A core-prim . void)
        (g$13070$1&dy4A core-prim . load-serialized-library)
        (g$13069$1&dy4A core-prim . serialize-library)
        (g$12515$1&dy4A core-prim . compile-system-libraries)
        (g$12517$1&dy4A core-prim . compile->closure)
        (g$12516$1&dy4A core-prim . compile)
        (g$12512$1&dy4A core-prim . load)
        (g$9540$1&dy4A core-prim . interaction-environment)
        (g$13068$1&dy4A core-prim . char-ready?)
        (g$13067$1&dy4A core-prim . string-upcase)
        (g$13066$1&dy4A core-prim . string-titlecase)
        (g$13065$1&dy4A core-prim . string-normalize-nfkd)
        (g$13064$1&dy4A core-prim . string-normalize-nfkc)
        (g$13063$1&dy4A core-prim . string-normalize-nfd)
        (g$13062$1&dy4A core-prim . string-normalize-nfc)
        (g$13061$1&dy4A core-prim . string-foldcase)
        (g$13060$1&dy4A core-prim . string-downcase)
        (g$7632$1&dy4A core-prim . string-ci>?)
        (g$7634$1&dy4A core-prim . string-ci>=?)
        (g$7630$1&dy4A core-prim . string-ci=?)
        (g$7631$1&dy4A core-prim . string-ci<?)
        (g$7633$1&dy4A core-prim . string-ci<=?)
        (g$13059$1&dy4A core-prim . char-whitespace?)
        (g$13058$1&dy4A core-prim . char-upper-case?)
        (g$13057$1&dy4A core-prim . char-title-case?)
        (g$13056$1&dy4A core-prim . char-numeric?)
        (g$13055$1&dy4A core-prim . char-lower-case?)
        (g$13054$1&dy4A core-prim . char-general-category)
        (g$13053$1&dy4A core-prim . char-upcase)
        (g$13052$1&dy4A core-prim . char-titlecase)
        (g$13051$1&dy4A core-prim . char-foldcase)
        (g$13050$1&dy4A core-prim . char-downcase)
        (g$7671$1&dy4A core-prim . char-ci>?)
        (g$7673$1&dy4A core-prim . char-ci>=?)
        (g$7669$1&dy4A core-prim . char-ci=?)
        (g$7670$1&dy4A core-prim . char-ci<?)
        (g$7672$1&dy4A core-prim . char-ci<=?)
        (g$13049$1&dy4A core-prim . char-alphabetic?)
        (g$9139$1&dy4A core-prim . variable-transformer-procedure)
        (g$9138$1&dy4A core-prim . variable-transformer?)
        (g$9137$1&dy4A core-prim . make-variable-transformer)
        (g$9535$1&dy4A core-prim . identifier?)
        (g$9524$1&dy4A core-prim . generate-temporaries)
        (g$9525$1&dy4A core-prim . free-identifier=?)
        (g$9537$1&dy4A core-prim . syntax->datum)
        (g$9536$1&dy4A core-prim . datum->syntax)
        (g$9526$1&dy4A core-prim . bound-identifier=?)
        (g$13048$1&dy4A core-prim . record-type-descriptor?)
        (g$13047$1&dy4A core-prim . record-predicate)
        (g$13046$1&dy4A core-prim . record-mutator)
        (g$13045$1&dy4A core-prim . record-constructor)
        (g$13044$1&dy4A core-prim . record-accessor)
        (g$13043$1&dy4A core-prim . make-record-type-descriptor)
        (g$13042$1&dy4A core-prim . make-record-constructor-descriptor)
        (g$13041$1&dy4A core-prim . record?)
        (g$13040$1&dy4A core-prim . record-type-uid)
        (g$13039$1&dy4A core-prim . record-type-sealed?)
        (g$13038$1&dy4A core-prim . record-type-parent)
        (g$13037$1&dy4A core-prim . record-type-opaque?)
        (g$13036$1&dy4A core-prim . record-type-name)
        (g$13035$1&dy4A core-prim . record-type-generative?)
        (g$13034$1&dy4A core-prim . record-type-field-names)
        (g$13033$1&dy4A core-prim . record-rtd)
        (g$13032$1&dy4A core-prim . record-field-mutable?)
        (g$7207$1&dy4A core-prim . delete-file)
        (g$7206$1&dy4A core-prim . file-exists?)
        (g$13031$1&dy4A core-prim . vector-sort!)
        (g$13030$1&dy4A core-prim . vector-sort)
        (g$7570$1&dy4A core-prim . list-sort)
        (g$13029$1&dy4A core-prim . symbol-hash)
        (g$13028$1&dy4A core-prim . string-ci-hash)
        (g$13027$1&dy4A core-prim . string-hash)
        (g$13026$1&dy4A core-prim . equal-hash)
        (g$13025$1&dy4A core-prim . hashtable-equivalence-function)
        (g$13024$1&dy4A core-prim . make-hashtable)
        (g$13023$1&dy4A core-prim . hashtable-hash-function)
        (g$7174$1&dy4A core-prim . make-eqv-hashtable)
        (g$7173$1&dy4A core-prim . make-eq-hashtable)
        (g$13022$1&dy4A core-prim . hashtable?)
        (g$7180$1&dy4A core-prim . hashtable-update!)
        (g$7175$1&dy4A core-prim . hashtable-size)
        (g$7177$1&dy4A core-prim . hashtable-set!)
        (g$7176$1&dy4A core-prim . hashtable-ref)
        (g$13021$1&dy4A core-prim . hashtable-mutable?)
        (g$13020$1&dy4A core-prim . hashtable-keys)
        (g$13019$1&dy4A core-prim . hashtable-entries)
        (g$7178$1&dy4A core-prim . hashtable-delete!)
        (g$13018$1&dy4A core-prim . hashtable-copy)
        (g$7179$1&dy4A core-prim . hashtable-contains?)
        (g$7181$1&dy4A core-prim . hashtable-clear!)
        (g$8063$1&dy4A core-prim . call-with-output-file)
        (g$8062$1&dy4A core-prim . call-with-input-file)
        (g$13017$1&dy4A core-prim . write-char)
        (g$13016$1&dy4A core-prim . write)
        (g$8061$1&dy4A core-prim . with-output-to-file)
        (g$8060$1&dy4A core-prim . with-input-from-file)
        (g$13015$1&dy4A core-prim . read-char)
        (g$13014$1&dy4A core-prim . read)
        (g$13013$1&dy4A core-prim . peek-char)
        (g$13012$1&dy4A core-prim . open-output-file)
        (g$13011$1&dy4A core-prim . open-input-file)
        (g$13010$1&dy4A core-prim . newline)
        (g$13009$1&dy4A core-prim . display)
        (g$13008$1&dy4A core-prim . close-output-port)
        (g$13007$1&dy4A core-prim . close-input-port)
        (g$13006$1&dy4A core-prim . eof-object?)
        (g$13005$1&dy4A core-prim . eof-object)
        (g$13004$1&dy4A core-prim . current-error-port)
        (g$13003$1&dy4A core-prim . current-output-port)
        (g$13002$1&dy4A core-prim . current-input-port)
        (g$13001$1&dy4A core-prim . output-port?)
        (g$13000$1&dy4A core-prim . input-port?)
        (g$12999$1&dy4A core-prim . utf-8-codec)
        (g$12998$1&dy4A core-prim . utf-16-codec)
        (g$12997$1&dy4A core-prim . transcoder-error-handling-mode)
        (g$12996$1&dy4A core-prim . transcoder-eol-style)
        (g$12995$1&dy4A core-prim . transcoder-codec)
        (g$12994$1&dy4A core-prim . transcoded-port)
        (g$12993$1&dy4A core-prim . textual-port?)
        (g$12992$1&dy4A core-prim . string->bytevector)
        (g$12991$1&dy4A core-prim . standard-output-port)
        (g$12990$1&dy4A core-prim . standard-input-port)
        (g$12989$1&dy4A core-prim . standard-error-port)
        (g$12988$1&dy4A core-prim . set-port-position!)
        (g$12987$1&dy4A core-prim . put-u8)
        (g$12986$1&dy4A core-prim . put-string)
        (g$12985$1&dy4A core-prim . put-datum)
        (g$12984$1&dy4A core-prim . put-char)
        (g$12983$1&dy4A core-prim . put-bytevector)
        (g$8036$1&dy4A core-prim . port?)
        (g$12982$1&dy4A core-prim . port-transcoder)
        (g$12981$1&dy4A core-prim . port-position)
        (g$12980$1&dy4A core-prim . port-has-set-port-position!?)
        (g$12979$1&dy4A core-prim . port-has-port-position?)
        (g$12978$1&dy4A core-prim . port-eof?)
        (g$12977$1&dy4A core-prim . output-port-buffer-mode)
        (g$8035$1&dy4A core-prim . open-string-output-port)
        (g$12976$1&dy4A core-prim . open-string-input-port)
        (g$12975$1&dy4A core-prim . open-file-output-port)
        (g$12974$1&dy4A core-prim . open-file-input/output-port)
        (g$12973$1&dy4A core-prim . open-file-input-port)
        (g$12972$1&dy4A core-prim . open-bytevector-output-port)
        (g$12971$1&dy4A core-prim . open-bytevector-input-port)
        (g$12970$1&dy4A core-prim . native-transcoder)
        (g$12969$1&dy4A core-prim . native-eol-style)
        (g$12968$1&dy4A core-prim . make-transcoder)
        (g$12967$1&dy4A core-prim . latin-1-codec)
        (g$7892$1&dy4A core-prim . make-i/o-write-error)
        (g$7878$1&dy4A core-prim . make-i/o-read-error)
        (g$7997$1&dy4A core-prim . make-i/o-port-error)
        (g$7907$1&dy4A core-prim . make-i/o-invalid-position-error)
        (g$7924$1&dy4A core-prim . make-i/o-filename-error)
        (g$7940$1&dy4A core-prim . make-i/o-file-protection-error)
        (g$7954$1&dy4A core-prim . make-i/o-file-is-read-only-error)
        (g$7982$1&dy4A core-prim . make-i/o-file-does-not-exist-error)
        (g$7968$1&dy4A core-prim . make-i/o-file-already-exists-error)
        (g$7864$1&dy4A core-prim . make-i/o-error)
        (g$8028$1&dy4A core-prim . make-i/o-encoding-error)
        (g$8013$1&dy4A core-prim . make-i/o-decoding-error)
        (g$12966$1&dy4A core-prim . make-custom-textual-output-port)
        (g$12965$1&dy4A core-prim . make-custom-textual-input/output-port)
        (g$12964$1&dy4A core-prim . make-custom-textual-input-port)
        (g$12963$1&dy4A core-prim . make-custom-binary-output-port)
        (g$12962$1&dy4A core-prim . make-custom-binary-input/output-port)
        (g$12961$1&dy4A core-prim . make-custom-binary-input-port)
        (g$12960$1&dy4A core-prim . make-bytevector)
        (g$12959$1&dy4A core-prim . lookahead-u8)
        (g$12958$1&dy4A core-prim . lookahead-char)
        (g$7893$1&dy4A core-prim . i/o-write-error?)
        (g$7879$1&dy4A core-prim . i/o-read-error?)
        (g$7999$1&dy4A core-prim . i/o-port-error?)
        (g$7909$1&dy4A core-prim . i/o-invalid-position-error?)
        (g$7910$1&dy4A core-prim . i/o-error-position)
        (g$7926$1&dy4A core-prim . i/o-filename-error?)
        (g$7941$1&dy4A core-prim . i/o-file-protection-error?)
        (g$7955$1&dy4A core-prim . i/o-file-is-read-only-error?)
        (g$7983$1&dy4A core-prim . i/o-file-does-not-exist-error?)
        (g$7969$1&dy4A core-prim . i/o-file-already-exists-error?)
        (g$7865$1&dy4A core-prim . i/o-error?)
        (g$8000$1&dy4A core-prim . i/o-error-port)
        (g$7927$1&dy4A core-prim . i/o-error-filename)
        (g$8030$1&dy4A core-prim . i/o-encoding-error?)
        (g$8031$1&dy4A core-prim . i/o-encoding-error-char)
        (g$8014$1&dy4A core-prim . i/o-decoding-error?)
        (g$12957$1&dy4A core-prim . get-u8)
        (g$12956$1&dy4A core-prim . get-string-n!)
        (g$12955$1&dy4A core-prim . get-string-n)
        (g$12954$1&dy4A core-prim . get-string-all)
        (g$12953$1&dy4A core-prim . get-line)
        (g$12952$1&dy4A core-prim . get-datum)
        (g$12951$1&dy4A core-prim . get-char)
        (g$12950$1&dy4A core-prim . get-bytevector-some)
        (g$12949$1&dy4A core-prim . get-bytevector-n!)
        (g$12948$1&dy4A core-prim . get-bytevector-n)
        (g$12947$1&dy4A core-prim . get-bytevector-all)
        (g$12946$1&dy4A core-prim . flush-output-port)
        (g$12945$1&dy4A core-prim . close-port)
        (g$8037$1&dy4A core-prim . call-with-string-output-port)
        (g$12944$1&dy4A core-prim . call-with-port)
        (g$12943$1&dy4A core-prim . call-with-bytevector-output-port)
        (g$12942$1&dy4A core-prim . bytevector->string)
        (g$12941$1&dy4A core-prim . buffer-mode?)
        (g$12940$1&dy4A core-prim . binary-port?)
        (g$9515$1&dy4A core-prim . scheme-report-environment)
        (g$7550$1&dy4A core-prim . quotient)
        (g$9514$1&dy4A core-prim . null-environment)
        (g$7551$1&dy4A core-prim . remainder)
        (g$7552$1&dy4A core-prim . modulo)
        (g$12939$1&dy4A core-prim . inexact->exact)
        (g$7554$1&dy4A core-prim . force)
        (g$12938$1&dy4A core-prim . exact->inexact)
        (g$12937$1&dy4A core-prim . exit)
        (g$12509$1&dy4A core-prim . command-line)
        (g$12936$1&dy4A core-prim . string-fill!)
        (g$12935$1&dy4A core-prim . string-set!)
        (g$12934$1&dy4A core-prim . set-cdr!)
        (g$12933$1&dy4A core-prim . set-car!)
        (g$6562$1&dy4A core-prim . remove)
        (g$6563$1&dy4A core-prim . remv)
        (g$6545$1&dy4A core-prim . remp)
        (g$6564$1&dy4A core-prim . remq)
        (g$6544$1&dy4A core-prim . partition)
        (g$6552$1&dy4A core-prim . memv)
        (g$6551$1&dy4A core-prim . memq)
        (g$6554$1&dy4A core-prim . memp)
        (g$6553$1&dy4A core-prim . member)
        (g$6558$1&dy4A core-prim . exists)
        (g$6557$1&dy4A core-prim . for-all)
        (g$6561$1&dy4A core-prim . fold-right)
        (g$6560$1&dy4A core-prim . fold-left)
        (g$6543$1&dy4A core-prim . find)
        (g$6546$1&dy4A core-prim . filter)
        (g$6559$1&dy4A core-prim . cons*)
        (g$6548$1&dy4A core-prim . assv)
        (g$6547$1&dy4A core-prim . assq)
        (g$6550$1&dy4A core-prim . assp)
        (g$6549$1&dy4A core-prim . assoc)
        (g$12932$1&dy4A core-prim . with-exception-handler)
        (g$12931$1&dy4A core-prim . raise-continuable)
        (g$12930$1&dy4A core-prim . raise)
        (g$9517$1&dy4A core-prim . eval)
        (g$9513$1&dy4A core-prim . environment)
        (g$8121$1&dy4A core-prim . make-enumeration)
        (g$8128$1&dy4A core-prim . enum-set=?)
        (g$8122$1&dy4A core-prim . enum-set-universe)
        (g$8129$1&dy4A core-prim . enum-set-union)
        (g$8127$1&dy4A core-prim . enum-set-subset?)
        (g$8133$1&dy4A core-prim . enum-set-projection)
        (g$8126$1&dy4A core-prim . enum-set-member?)
        (g$8130$1&dy4A core-prim . enum-set-intersection)
        (g$8123$1&dy4A core-prim . enum-set-indexer)
        (g$8131$1&dy4A core-prim . enum-set-difference)
        (g$8124$1&dy4A core-prim . enum-set-constructor)
        (g$8132$1&dy4A core-prim . enum-set-complement)
        (g$8125$1&dy4A core-prim . enum-set->list)
        (g$7461$1&dy4A core-prim . who-condition?)
        (g$7372$1&dy4A core-prim . warning?)
        (g$7414$1&dy4A core-prim . violation?)
        (g$7538$1&dy4A core-prim . undefined-violation?)
        (g$7522$1&dy4A core-prim . syntax-violation?)
        (g$7524$1&dy4A core-prim . syntax-violation-subform)
        (g$7523$1&dy4A core-prim . syntax-violation-form)
        (g$9534$1&dy4A core-prim . syntax-violation)
        (g$12929$1&dy4A core-prim . simple-conditions)
        (g$7386$1&dy4A core-prim . serious-condition?)
        (g$7476$1&dy4A core-prim . non-continuable-violation?)
        (g$7357$1&dy4A core-prim . message-condition?)
        (g$7459$1&dy4A core-prim . make-who-condition)
        (g$7371$1&dy4A core-prim . make-warning)
        (g$7413$1&dy4A core-prim . make-violation)
        (g$7537$1&dy4A core-prim . make-undefined-violation)
        (g$7519$1&dy4A core-prim . make-syntax-violation)
        (g$7385$1&dy4A core-prim . make-serious-condition)
        (g$7475$1&dy4A core-prim . make-non-continuable-violation)
        (g$7355$1&dy4A core-prim . make-message-condition)
        (g$7503$1&dy4A core-prim . make-lexical-violation)
        (g$7442$1&dy4A core-prim . make-irritants-condition)
        (g$7489$1&dy4A core-prim . make-implementation-restriction-violation)
        (g$7399$1&dy4A core-prim . make-error)
        (g$7427$1&dy4A core-prim . make-assertion-violation)
        (g$7504$1&dy4A core-prim . lexical-violation?)
        (g$7444$1&dy4A core-prim . irritants-condition?)
        (g$7490$1&dy4A core-prim . implementation-restriction-violation?)
        (g$7400$1&dy4A core-prim . error?)
        (g$7462$1&dy4A core-prim . condition-who)
        (g$12928$1&dy4A core-prim . condition-predicate)
        (g$7358$1&dy4A core-prim . condition-message)
        (g$7445$1&dy4A core-prim . condition-irritants)
        (g$12927$1&dy4A core-prim . condition-accessor)
        (g$12926$1&dy4A core-prim . condition)
        (g$7428$1&dy4A core-prim . assertion-violation?)
        (g$12925$1&dy4A core-prim . condition?)
        (g$12924$1&dy4A core-prim . utf32->string)
        (g$12923$1&dy4A core-prim . utf16->string)
        (g$12922$1&dy4A core-prim . utf8->string)
        (g$12921$1&dy4A core-prim . uint-list->bytevector)
        (g$12920$1&dy4A core-prim . u8-list->bytevector)
        (g$12919$1&dy4A core-prim . string->utf8)
        (g$12918$1&dy4A core-prim . string->utf32)
        (g$12917$1&dy4A core-prim . string->utf16)
        (g$12916$1&dy4A core-prim . sint-list->bytevector)
        (g$7213$1&dy4A core-prim . native-endianness)
        (g$12915$1&dy4A core-prim . bytevector?)
        (g$12914$1&dy4A core-prim . bytevector=?)
        (g$12913$1&dy4A core-prim . bytevector-uint-set!)
        (g$12912$1&dy4A core-prim . bytevector-uint-ref)
        (g$12911$1&dy4A core-prim . bytevector-u8-set!)
        (g$12910$1&dy4A core-prim . bytevector-u8-ref)
        (g$7234$1&dy4A core-prim . bytevector-u64-set!)
        (g$7230$1&dy4A core-prim . bytevector-u64-ref)
        (g$7236$1&dy4A core-prim . bytevector-u64-native-set!)
        (g$7232$1&dy4A core-prim . bytevector-u64-native-ref)
        (g$7226$1&dy4A core-prim . bytevector-u32-set!)
        (g$7222$1&dy4A core-prim . bytevector-u32-ref)
        (g$7228$1&dy4A core-prim . bytevector-u32-native-set!)
        (g$7224$1&dy4A core-prim . bytevector-u32-native-ref)
        (g$7218$1&dy4A core-prim . bytevector-u16-set!)
        (g$7214$1&dy4A core-prim . bytevector-u16-ref)
        (g$7220$1&dy4A core-prim . bytevector-u16-native-set!)
        (g$7216$1&dy4A core-prim . bytevector-u16-native-ref)
        (g$12909$1&dy4A core-prim . bytevector-sint-set!)
        (g$12908$1&dy4A core-prim . bytevector-sint-ref)
        (g$12907$1&dy4A core-prim . bytevector-s8-set!)
        (g$12906$1&dy4A core-prim . bytevector-s8-ref)
        (g$7235$1&dy4A core-prim . bytevector-s64-set!)
        (g$7231$1&dy4A core-prim . bytevector-s64-ref)
        (g$7237$1&dy4A core-prim . bytevector-s64-native-set!)
        (g$7233$1&dy4A core-prim . bytevector-s64-native-ref)
        (g$7227$1&dy4A core-prim . bytevector-s32-set!)
        (g$7223$1&dy4A core-prim . bytevector-s32-ref)
        (g$7229$1&dy4A core-prim . bytevector-s32-native-set!)
        (g$7225$1&dy4A core-prim . bytevector-s32-native-ref)
        (g$7219$1&dy4A core-prim . bytevector-s16-set!)
        (g$7215$1&dy4A core-prim . bytevector-s16-ref)
        (g$7221$1&dy4A core-prim . bytevector-s16-native-set!)
        (g$7217$1&dy4A core-prim . bytevector-s16-native-ref)
        (g$12905$1&dy4A core-prim . bytevector-length)
        (g$12904$1&dy4A core-prim . bytevector-ieee-single-set!)
        (g$12903$1&dy4A core-prim . bytevector-ieee-single-ref)
        (g$7240$1&dy4A core-prim . bytevector-ieee-single-native-set!)
        (g$7238$1&dy4A core-prim . bytevector-ieee-single-native-ref)
        (g$12902$1&dy4A core-prim . bytevector-ieee-double-set!)
        (g$12901$1&dy4A core-prim . bytevector-ieee-double-ref)
        (g$7241$1&dy4A core-prim . bytevector-ieee-double-native-set!)
        (g$7239$1&dy4A core-prim . bytevector-ieee-double-native-ref)
        (g$12900$1&dy4A core-prim . bytevector-fill!)
        (g$12899$1&dy4A core-prim . bytevector-copy!)
        (g$12898$1&dy4A core-prim . bytevector-copy)
        (g$12897$1&dy4A core-prim . bytevector->uint-list)
        (g$12896$1&dy4A core-prim . bytevector->u8-list)
        (g$12895$1&dy4A core-prim . bytevector->sint-list)
        (g$7850$1&dy4A core-prim . no-nans-violation?)
        (g$7836$1&dy4A core-prim . no-infinities-violation?)
        (g$7849$1&dy4A core-prim . make-no-nans-violation)
        (g$7835$1&dy4A core-prim . make-no-infinities-violation)
        (g$12894$1&dy4A core-prim . real->flonum)
        (g$12893$1&dy4A core-prim . flzero?)
        (g$12892$1&dy4A core-prim . fltruncate)
        (g$12891$1&dy4A core-prim . fltan)
        (g$12890$1&dy4A core-prim . flsqrt)
        (g$12889$1&dy4A core-prim . flsin)
        (g$12888$1&dy4A core-prim . flround)
        (g$12887$1&dy4A core-prim . flpositive?)
        (g$12886$1&dy4A core-prim . flonum?)
        (g$12885$1&dy4A core-prim . flodd?)
        (g$12884$1&dy4A core-prim . flnumerator)
        (g$12883$1&dy4A core-prim . flnegative?)
        (g$12882$1&dy4A core-prim . flnan?)
        (g$12881$1&dy4A core-prim . flmod0)
        (g$12880$1&dy4A core-prim . flmod)
        (g$12879$1&dy4A core-prim . flmin)
        (g$12878$1&dy4A core-prim . flmax)
        (g$12877$1&dy4A core-prim . fllog)
        (g$12876$1&dy4A core-prim . flinteger?)
        (g$12875$1&dy4A core-prim . flinfinite?)
        (g$12874$1&dy4A core-prim . flfloor)
        (g$12873$1&dy4A core-prim . flfinite?)
        (g$12872$1&dy4A core-prim . flexpt)
        (g$12871$1&dy4A core-prim . flexp)
        (g$12870$1&dy4A core-prim . fleven?)
        (g$12869$1&dy4A core-prim . fldiv0-and-mod0)
        (g$12868$1&dy4A core-prim . fldiv0)
        (g$12867$1&dy4A core-prim . fldiv-and-mod)
        (g$12866$1&dy4A core-prim . fldiv)
        (g$12865$1&dy4A core-prim . fldenominator)
        (g$12864$1&dy4A core-prim . flcos)
        (g$12863$1&dy4A core-prim . flceiling)
        (g$12862$1&dy4A core-prim . flatan)
        (g$12861$1&dy4A core-prim . flasin)
        (g$12860$1&dy4A core-prim . flacos)
        (g$12859$1&dy4A core-prim . flabs)
        (g$12858$1&dy4A core-prim . fl>?)
        (g$12857$1&dy4A core-prim . fl>=?)
        (g$12856$1&dy4A core-prim . fl=?)
        (g$12855$1&dy4A core-prim . fl<?)
        (g$12854$1&dy4A core-prim . fl<=?)
        (g$12853$1&dy4A core-prim . fl/)
        (g$12852$1&dy4A core-prim . fl-)
        (g$12851$1&dy4A core-prim . fl+)
        (g$12850$1&dy4A core-prim . fl*)
        (g$12849$1&dy4A core-prim . fixnum->flonum)
        (g$12848$1&dy4A core-prim . fxzero?)
        (g$12847$1&dy4A core-prim . fxxor)
        (g$7781$1&dy4A core-prim . fxrotate-bit-field)
        (g$12846$1&dy4A core-prim . fxreverse-bit-field)
        (g$12845$1&dy4A core-prim . fxpositive?)
        (g$12844$1&dy4A core-prim . fxodd?)
        (g$12843$1&dy4A core-prim . fxnot)
        (g$12842$1&dy4A core-prim . fxnegative?)
        (g$12841$1&dy4A core-prim . fxmod0)
        (g$12840$1&dy4A core-prim . fxmod)
        (g$12839$1&dy4A core-prim . fxmin)
        (g$12838$1&dy4A core-prim . fxmax)
        (g$12837$1&dy4A core-prim . fxlength)
        (g$12836$1&dy4A core-prim . fxior)
        (g$7775$1&dy4A core-prim . fxif)
        (g$12835$1&dy4A core-prim . fxfirst-bit-set)
        (g$12834$1&dy4A core-prim . fxeven?)
        (g$12833$1&dy4A core-prim . fxdiv0-and-mod0)
        (g$12832$1&dy4A core-prim . fxdiv0)
        (g$12831$1&dy4A core-prim . fxdiv-and-mod)
        (g$12830$1&dy4A core-prim . fxdiv)
        (g$7778$1&dy4A core-prim . fxcopy-bit-field)
        (g$7776$1&dy4A core-prim . fxcopy-bit)
        (g$12829$1&dy4A core-prim . fxbit-set?)
        (g$7777$1&dy4A core-prim . fxbit-field)
        (g$12828$1&dy4A core-prim . fxbit-count)
        (g$7780$1&dy4A core-prim . fxarithmetic-shift-right)
        (g$7779$1&dy4A core-prim . fxarithmetic-shift-left)
        (g$12827$1&dy4A core-prim . fxarithmetic-shift)
        (g$12826$1&dy4A core-prim . fxand)
        (g$12825$1&dy4A core-prim . fx>?)
        (g$12824$1&dy4A core-prim . fx>=?)
        (g$12823$1&dy4A core-prim . fx=?)
        (g$12822$1&dy4A core-prim . fx<?)
        (g$12821$1&dy4A core-prim . fx<=?)
        (g$12820$1&dy4A core-prim . fx-/carry)
        (g$12819$1&dy4A core-prim . fx-)
        (g$12818$1&dy4A core-prim . fx+/carry)
        (g$12817$1&dy4A core-prim . fx+)
        (g$12816$1&dy4A core-prim . fx*/carry)
        (g$12815$1&dy4A core-prim . fx*)
        (g$12814$1&dy4A core-prim . greatest-fixnum)
        (g$12813$1&dy4A core-prim . least-fixnum)
        (g$12812$1&dy4A core-prim . fixnum-width)
        (g$12811$1&dy4A core-prim . fixnum?)
        (g$7733$1&dy4A core-prim . bitwise-rotate-bit-field)
        (g$12810$1&dy4A core-prim . bitwise-reverse-bit-field)
        (g$12809$1&dy4A core-prim . bitwise-length)
        (g$7727$1&dy4A core-prim . bitwise-if)
        (g$12808$1&dy4A core-prim . bitwise-first-bit-set)
        (g$7730$1&dy4A core-prim . bitwise-copy-bit-field)
        (g$7728$1&dy4A core-prim . bitwise-copy-bit)
        (g$12807$1&dy4A core-prim . bitwise-bit-set?)
        (g$12806$1&dy4A core-prim . bitwise-bit-field)
        (g$12805$1&dy4A core-prim . bitwise-bit-count)
        (g$12804$1&dy4A core-prim . bitwise-xor)
        (g$12803$1&dy4A core-prim . bitwise-ior)
        (g$12802$1&dy4A core-prim . bitwise-and)
        (g$12801$1&dy4A core-prim . bitwise-not)
        (g$7732$1&dy4A core-prim . bitwise-arithmetic-shift-right)
        (g$7731$1&dy4A core-prim . bitwise-arithmetic-shift-left)
        (g$12800$1&dy4A core-prim . bitwise-arithmetic-shift)
        (g$12799$1&dy4A core-prim . zero?)
        (g$12798$1&dy4A core-prim . vector?)
        (g$12797$1&dy4A core-prim . vector-set!)
        (g$12796$1&dy4A core-prim . vector-ref)
        (g$12795$1&dy4A core-prim . vector-map)
        (g$12794$1&dy4A core-prim . vector-length)
        (g$12793$1&dy4A core-prim . vector-for-each)
        (g$12792$1&dy4A core-prim . vector-fill!)
        (g$12791$1&dy4A core-prim . vector->list)
        (g$12790$1&dy4A core-prim . vector)
        (g$12789$1&dy4A core-prim . values)
        (g$12788$1&dy4A core-prim . truncate)
        (g$12787$1&dy4A core-prim . tan)
        (g$12786$1&dy4A core-prim . symbol?)
        (g$6722$1&dy4A core-prim . symbol=?)
        (g$12785$1&dy4A core-prim . symbol->string)
        (g$12784$1&dy4A core-prim . substring)
        (g$12783$1&dy4A core-prim . string?)
        (g$6719$1&dy4A core-prim . string>?)
        (g$6721$1&dy4A core-prim . string>=?)
        (g$6717$1&dy4A core-prim . string=?)
        (g$6718$1&dy4A core-prim . string<?)
        (g$6720$1&dy4A core-prim . string<=?)
        (g$12782$1&dy4A core-prim . string-ref)
        (g$12781$1&dy4A core-prim . string-length)
        (g$12780$1&dy4A core-prim . string-for-each)
        (g$12779$1&dy4A core-prim . string-copy)
        (g$12778$1&dy4A core-prim . string-append)
        (g$12777$1&dy4A core-prim . string->symbol)
        (g$12776$1&dy4A core-prim . string->number)
        (g$12775$1&dy4A core-prim . string->list)
        (g$12774$1&dy4A core-prim . string)
        (g$12773$1&dy4A core-prim . sqrt)
        (g$12772$1&dy4A core-prim . sin)
        (g$12771$1&dy4A core-prim . round)
        (g$12770$1&dy4A core-prim . reverse)
        (g$12769$1&dy4A core-prim . real?)
        (g$12768$1&dy4A core-prim . real-valued?)
        (g$12767$1&dy4A core-prim . real-part)
        (g$6763$1&dy4A core-prim . rationalize)
        (g$12766$1&dy4A core-prim . rational?)
        (g$12765$1&dy4A core-prim . rational-valued?)
        (g$12764$1&dy4A core-prim . procedure?)
        (g$12763$1&dy4A core-prim . positive?)
        (g$12762$1&dy4A core-prim . pair?)
        (g$12761$1&dy4A core-prim . odd?)
        (g$12760$1&dy4A core-prim . numerator)
        (g$12759$1&dy4A core-prim . number?)
        (g$12758$1&dy4A core-prim . number->string)
        (g$12757$1&dy4A core-prim . null?)
        (g$12756$1&dy4A core-prim . not)
        (g$12755$1&dy4A core-prim . negative?)
        (g$12754$1&dy4A core-prim . nan?)
        (g$12753$1&dy4A core-prim . min)
        (g$12752$1&dy4A core-prim . max)
        (g$12751$1&dy4A core-prim . map)
        (g$12750$1&dy4A core-prim . make-vector)
        (g$12749$1&dy4A core-prim . make-string)
        (g$12748$1&dy4A core-prim . make-rectangular)
        (g$12747$1&dy4A core-prim . make-polar)
        (g$12746$1&dy4A core-prim . magnitude)
        (g$12745$1&dy4A core-prim . log)
        (g$12744$1&dy4A core-prim . list?)
        (g$12743$1&dy4A core-prim . list-tail)
        (g$12742$1&dy4A core-prim . list-ref)
        (g$12741$1&dy4A core-prim . list->vector)
        (g$12740$1&dy4A core-prim . list->string)
        (g$12739$1&dy4A core-prim . list)
        (g$12738$1&dy4A core-prim . length)
        (g$12737$1&dy4A core-prim . lcm)
        (g$12736$1&dy4A core-prim . integer?)
        (g$12735$1&dy4A core-prim . integer-valued?)
        (g$12734$1&dy4A core-prim . integer->char)
        (g$12733$1&dy4A core-prim . infinite?)
        (g$12732$1&dy4A core-prim . inexact?)
        (g$12731$1&dy4A core-prim . inexact)
        (g$12730$1&dy4A core-prim . imag-part)
        (g$12729$1&dy4A core-prim . gcd)
        (g$12728$1&dy4A core-prim . for-each)
        (g$12727$1&dy4A core-prim . floor)
        (g$12726$1&dy4A core-prim . finite?)
        (g$12725$1&dy4A core-prim . expt)
        (g$12724$1&dy4A core-prim . exp)
        (g$12723$1&dy4A core-prim . exact?)
        (g$12722$1&dy4A core-prim . exact-integer-sqrt)
        (g$12721$1&dy4A core-prim . exact)
        (g$12720$1&dy4A core-prim . even?)
        (g$12719$1&dy4A core-prim . error)
        (g$12718$1&dy4A core-prim . eqv?)
        (g$12717$1&dy4A core-prim . equal?)
        (g$12716$1&dy4A core-prim . eq?)
        (g$12715$1&dy4A core-prim . dynamic-wind)
        (g$12714$1&dy4A core-prim . div0-and-mod0)
        (g$12713$1&dy4A core-prim . mod0)
        (g$12712$1&dy4A core-prim . div0)
        (g$12711$1&dy4A core-prim . div-and-mod)
        (g$12710$1&dy4A core-prim . mod)
        (g$12709$1&dy4A core-prim . div)
        (g$12708$1&dy4A core-prim . denominator)
        (g$12707$1&dy4A core-prim . cos)
        (g$12706$1&dy4A core-prim . cons)
        (g$12705$1&dy4A core-prim . complex?)
        (g$12704$1&dy4A core-prim . char?)
        (g$6760$1&dy4A core-prim . char>?)
        (g$6762$1&dy4A core-prim . char>=?)
        (g$6758$1&dy4A core-prim . char=?)
        (g$6759$1&dy4A core-prim . char<?)
        (g$6761$1&dy4A core-prim . char<=?)
        (g$12703$1&dy4A core-prim . char->integer)
        (g$12702$1&dy4A core-prim . ceiling)
        (g$12701$1&dy4A core-prim . call-with-values)
        (g$12700$1&dy4A core-prim . call/cc)
        (g$12699$1&dy4A core-prim . call-with-current-continuation)
        (g$6682$1&dy4A core-prim . cddddr)
        (g$6681$1&dy4A core-prim . cdddar)
        (g$6680$1&dy4A core-prim . cddadr)
        (g$6679$1&dy4A core-prim . cddaar)
        (g$6678$1&dy4A core-prim . cdaddr)
        (g$6677$1&dy4A core-prim . cdadar)
        (g$6676$1&dy4A core-prim . cdaadr)
        (g$6675$1&dy4A core-prim . cdaaar)
        (g$6674$1&dy4A core-prim . cadddr)
        (g$6673$1&dy4A core-prim . caddar)
        (g$6672$1&dy4A core-prim . cadadr)
        (g$6671$1&dy4A core-prim . cadaar)
        (g$6670$1&dy4A core-prim . caaddr)
        (g$6669$1&dy4A core-prim . caadar)
        (g$6668$1&dy4A core-prim . caaadr)
        (g$6667$1&dy4A core-prim . caaaar)
        (g$6666$1&dy4A core-prim . cdddr)
        (g$6665$1&dy4A core-prim . cddar)
        (g$6664$1&dy4A core-prim . cdadr)
        (g$6663$1&dy4A core-prim . cdaar)
        (g$6662$1&dy4A core-prim . caddr)
        (g$6661$1&dy4A core-prim . cadar)
        (g$6660$1&dy4A core-prim . caadr)
        (g$6659$1&dy4A core-prim . caaar)
        (g$6658$1&dy4A core-prim . cddr)
        (g$6657$1&dy4A core-prim . cdar)
        (g$6656$1&dy4A core-prim . cadr)
        (g$6655$1&dy4A core-prim . caar)
        (g$12698$1&dy4A core-prim . cdr)
        (g$12697$1&dy4A core-prim . car)
        (g$12696$1&dy4A core-prim . boolean?)
        (g$6723$1&dy4A core-prim . boolean=?)
        (g$12695$1&dy4A core-prim . atan)
        (g$12694$1&dy4A core-prim . assertion-violation)
        (g$12693$1&dy4A core-prim . asin)
        (g$12692$1&dy4A core-prim . apply)
        (g$12691$1&dy4A core-prim . append)
        (g$12690$1&dy4A core-prim . angle)
        (g$12689$1&dy4A core-prim . acos)
        (g$12688$1&dy4A core-prim . abs)
        (g$12687$1&dy4A core-prim . /)
        (g$12686$1&dy4A core-prim . *)
        (g$12685$1&dy4A core-prim . -)
        (g$12684$1&dy4A core-prim . +)
        (g$12683$1&dy4A core-prim . >=)
        (g$12682$1&dy4A core-prim . >)
        (g$12681$1&dy4A core-prim . =)
        (g$12680$1&dy4A core-prim . <=)
        (g$12679$1&dy4A core-prim . <)
        (g$12678$1&dy4A core-prim . make-record-printer)
        (g$12677$1&dy4A core-prim . eqv-hash)
        (g$12676$1&dy4A core-prim . reverse!)
        (g$12675$1&dy4A core-prim . deserialize-port)
        (g$12674$1&dy4A core-prim . serialize-port)
        (g$8096$1&dy4A core-prim . enum-set?)
        (g$7553$1&dy4A core-prim . make-promise)
        (g$12511$1&dy4A core-prim . load/args)
        (g$8207$1&dy4A core-prim . printf)
        (g$8208$1&dy4A core-prim . fprintf)
        (g$8209$1&dy4A core-prim . format)
        (g$12673$1&dy4A core-prim . procedure-form)
        (g$12672$1&dy4A core-prim . procedure-environment)
        (g$12671$1&dy4A core-prim . procedure-name)
        (g$12670$1&dy4A core-prim . procedure-arity)
        (g$12669$1&dy4A core-prim . gc-collect)
        (g$12668$1&dy4A core-prim . clr-type?)
        (g$12667$1&dy4A core-prim . get-clr-type)
        (g$12666$1&dy4A core-prim . get-command-line)
        (g$12665$1&dy4A core-prim . vector-append)
        (g$12664$1&dy4A core-prim . vector-filter)
        (g$12663$1&dy4A core-prim . vector-reverse!)
        (g$12662$1&dy4A core-prim . vector-contains?)
        (g$12661$1&dy4A core-prim . vector-index-of)
        (g$12660$1&dy4A core-prim . vector-copy)
        (g$12659$1&dy4A core-prim . vector-binary-search)
        (g$12658$1&dy4A core-prim . string-ci-compare)
        (g$12657$1&dy4A core-prim . string-compare)
        (g$12656$1&dy4A core-prim . string-format)
        (g$12508$1&dy4A core-prim . trace-printer)
        (g$12655$1&dy4A core-prim . make-traced-procedure)
        (g$8229$1&dy4A core-prim . make-traced-macro)
        (g$9530$1&dy4A core-prim . assertion-error)
        (g$12654$1&dy4A core-prim . pmap)
        (g$12653$1&dy4A core-prim . time-it)
        (g$8236$1&dy4A core-prim . make-parameter)
        (g$12652$1&dy4A core-prim . library-locator)
        (g$12651$1&dy4A core-prim . get-library-paths)
        (g$9509$1&dy4A core-prim . environment-bindings)
        (g$9512$1&dy4A core-prim . environment-symbols)
        (g$9508$1&dy4A core-prim . interaction-environment-symbols)
        (g$12650$1&dy4A core-prim . optimization-level)
        (g$8691$1&dy4A core-prim . library-path)
        (g$9516$1&dy4A core-prim . expand)
        (g$12649$1&dy4A $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12648$1&dy4A $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12647$1&dy4A $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12646$1&dy4A $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12645$1&dy4A $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12644$1&dy4A
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12643$1&dy4A
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12642$1&dy4A
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12641$1&dy4A
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12640$1&dy4A $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12639$1&dy4A
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12638$1&dy4A $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12637$1&dy4A $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12636$1&dy4A $core-rtd &i/o-rtd &i/o-rcd)
        (g$12635$1&dy4A $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12634$1&dy4A $core-rtd &undefined-rtd &undefined-rcd)
        (g$12633$1&dy4A $core-rtd &syntax-rtd &syntax-rcd)
        (g$12632$1&dy4A $core-rtd &lexical-rtd &lexical-rcd)
        (g$12631$1&dy4A
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12630$1&dy4A $core-rtd &who-rtd &who-rcd)
        (g$12629$1&dy4A $core-rtd &irritants-rtd &irritants-rcd)
        (g$12628$1&dy4A $core-rtd &assertion-rtd &assertion-rcd)
        (g$12627$1&dy4A $core-rtd &violation-rtd &violation-rcd)
        (g$12626$1&dy4A $core-rtd &error-rtd &error-rcd)
        (g$12625$1&dy4A $core-rtd &serious-rtd &serious-rcd)
        (g$12624$1&dy4A $core-rtd &warning-rtd &warning-rcd)
        (g$12623$1&dy4A $core-rtd &message-rtd &message-rcd)
        (g$12622$1&dy4A $core-rtd &condition-rtd &condition-rcd)
        (g$12621$1&dy4A macro . define-condition-type)
        (g$12620$1&dy4A macro . define-enumeration)
        (g$12619$1&dy4A macro . define-record-type)
        (g$12618$1&dy4A macro . parent-rtd)
        (g$12617$1&dy4A macro . nongenerative)
        (g$12616$1&dy4A macro . opaque)
        (g$12615$1&dy4A macro . sealed)
        (g$12614$1&dy4A macro . protocol)
        (g$12613$1&dy4A macro . parent)
        (g$12612$1&dy4A macro . immutable)
        (g$12611$1&dy4A macro . mutable)
        (g$12610$1&dy4A macro . fields)
        (g$12609$1&dy4A macro . error-handling-mode)
        (g$12608$1&dy4A macro . file-options)
        (g$12607$1&dy4A macro . buffer-mode)
        (g$12606$1&dy4A macro . eol-style)
        (g$12605$1&dy4A macro . guard)
        (g$12604$1&dy4A macro . trace-letrec-syntax)
        (g$12603$1&dy4A macro . trace-let-syntax)
        (g$12602$1&dy4A macro . trace-define-syntax)
        (g$12601$1&dy4A macro . trace-define)
        (g$12600$1&dy4A macro . trace-lambda)
        (g$12599$1&dy4A macro . unsyntax-splicing)
        (g$12598$1&dy4A macro . unsyntax)
        (g$12597$1&dy4A macro . unquote-splicing)
        (g$12596$1&dy4A macro . unquote)
        (g$12595$1&dy4A macro . _)
        (g$12594$1&dy4A macro . else)
        (g$12593$1&dy4A macro . =>)
        (g$12592$1&dy4A macro . ...)
        (g$12591$1&dy4A macro . assert)
        (g$12590$1&dy4A macro . endianness)
        (g$12589$1&dy4A macro . delay)
        (g$12588$1&dy4A macro . time)
        (g$12587$1&dy4A macro . or)
        (g$12586$1&dy4A macro . and)
        (g$12585$1&dy4A macro . do)
        (g$12584$1&dy4A macro . cond)
        (g$12583$1&dy4A macro . let*)
        (g$12582$1&dy4A macro . let)
        (g$12581$1&dy4A macro . identifier-syntax)
        (g$12580$1&dy4A macro . with-syntax)
        (g$12579$1&dy4A macro . quasisyntax)
        (g$12578$1&dy4A macro . quasiquote)
        (g$12577$1&dy4A macro . syntax-rules)
        (g$12576$1&dy4A macro . include-into)
        (g$12575$1&dy4A macro . include)
        (g$12574$1&dy4A macro . define-struct)
        (g$12573$1&dy4A macro . let-values)
        (g$12572$1&dy4A macro . let*-values)
        (g$12571$1&dy4A core-macro . record-constructor-descriptor)
        (g$12570$1&dy4A core-macro . record-type-descriptor)
        (g$12569$1&dy4A core-macro . fluid-let-syntax)
        (g$12568$1&dy4A macro . case)
        (g$12567$1&dy4A macro . parameterize)
        (g$12566$1&dy4A macro . unless)
        (g$12565$1&dy4A macro . when)
        (g$12564$1&dy4A core-macro . if)
        (g$12563$1&dy4A core-macro . letrec*)
        (g$12562$1&dy4A core-macro . letrec)
        (g$12561$1&dy4A core-macro . type-descriptor)
        (g$12560$1&dy4A core-macro . case-lambda)
        (g$12559$1&dy4A core-macro . lambda)
        (g$12558$1&dy4A core-macro . syntax)
        (g$12557$1&dy4A core-macro . syntax-case)
        (g$12556$1&dy4A core-macro . quote)
        (g$12555$1&dy4A core-macro . foreign-call)
        (g$12554$1&dy4A letrec-syntax)
        (g$12553$1&dy4A let-syntax)
        (g$12552$1&dy4A set!)
        (g$12551$1&dy4A export)
        (g$12550$1&dy4A import)
        (g$12549$1&dy4A library)
        (g$12548$1&dy4A begin)
        (g$12547$1&dy4A module)
        (g$12546$1&dy4A define-syntax)
        (g$12545$1&dy4A define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7807$1&dy4A
      'g$13198$1&dy4A
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13077$1&dy4A)
        (eval-core . g$13076$1&dy4A)
        (set-symbol-value! . g$13075$1&dy4A)
        (symbol-value . g$13074$1&dy4A)
        (gensym . g$13072$1&dy4A)
        (void . g$13071$1&dy4A))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11887$1&dy4A
     g$trace-printer$11927$1&dy4A
     (g$make-parameter$7271$1&dy4A write))
   (g$command-line$11888$1&dy4A
     g$command-line$11928$1&dy4A
     (g$make-parameter$7271$1&dy4A (get-command-line)))
   (g$local-library-path$11889$1&dy4A
     g$local-library-path$11929$1&dy4A
     (case-lambda
       ((g$filename$11900$1&dy4A)
        (cons
          (g$get-directory-name$6181$1&dy4A g$filename$11900$1&dy4A)
          (g$library-path$7791$1&dy4A)))))
   (g$load/args$11890$1&dy4A
     g$load/args$11930$1&dy4A
     (case-lambda
       ((g$filename$11901$1&dy4A . g$args$11902$1&dy4A)
        (begin
          (apply
            g$load-r6rs-top-level$11897$1&dy4A
            g$filename$11901$1&dy4A
            'load
            g$args$11902$1&dy4A)
          (void)))))
   (g$load$11891$1&dy4A
     g$load$11931$1&dy4A
     (case-lambda
       ((g$filename$11903$1&dy4A)
        (begin
          (apply
            g$load-r6rs-top-level$11897$1&dy4A
            g$filename$11903$1&dy4A
            'load
            (cdr (g$command-line$11888$1&dy4A)))
          (void)))))
   (g$ironscheme-build$11892$1&dy4A
     g$ironscheme-build$11932$1&dy4A
     (case-lambda (() (g$load$11891$1&dy4A '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11893$1&dy4A
     g$eval-top-level$11933$1&dy4A
     (case-lambda
       ((g$x$11904$1&dy4A)
        (g$eval$11862$1&dy4A
          g$x$11904$1&dy4A
          (g$interaction-environment$11885$1&dy4A)))))
   (g$compile-system-libraries$11894$1&dy4A
     g$compile-system-libraries$11934$1&dy4A
     (case-lambda
       (()
        (g$eval-top-level$11893$1&dy4A
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11895$1&dy4A
     g$compile$11935$1&dy4A
     (case-lambda
       ((g$filename$11905$1&dy4A)
        (g$load-r6rs-top-level$11897$1&dy4A g$filename$11905$1&dy4A 'compile))))
   (g$compile->closure$11896$1&dy4A
     g$compile->closure$11936$1&dy4A
     (case-lambda
       ((g$filename$11906$1&dy4A)
        (g$load-r6rs-top-level$11897$1&dy4A g$filename$11906$1&dy4A 'closure))))
   (g$load-r6rs-top-level$11897$1&dy4A
     g$load-r6rs-top-level$11937$1&dy4A
     (case-lambda
       ((g$filename$11907$1&dy4A g$how$11908$1&dy4A . g$args$11909$1&dy4A)
        ((case-lambda
           ((g$library-path$11912$1&dy4A g$library-path$11913$1&dy4A)
            ((case-lambda
               ((g$swap$11914$1&dy4A)
                (dynamic-wind
                  g$swap$11914$1&dy4A
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11915$1&dy4A)
                         ((case-lambda
                            ((g$t$11916$1&dy4A)
                             (if (g$memv$5717$1&dy4A
                                   g$t$11916$1&dy4A
                                   '(closure))
                               (g$pre-compile-r6rs-top-level$11884$1&dy4A
                                 g$x*$11915$1&dy4A)
                               (if (g$memv$5717$1&dy4A g$t$11916$1&dy4A '(load))
                                 ((case-lambda
                                    ((g$command-line$11919$1&dy4A
                                       g$command-line$11920$1&dy4A)
                                     ((case-lambda
                                        ((g$swap$11921$1&dy4A)
                                         (dynamic-wind
                                           g$swap$11921$1&dy4A
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11883$1&dy4A
                                                 g$x*$11915$1&dy4A))))
                                           g$swap$11921$1&dy4A)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11922$1&dy4A)
                                             (begin
                                               (g$command-line$11919$1&dy4A
                                                 g$command-line$11920$1&dy4A)
                                               (set! g$command-line$11920$1&dy4A
                                                 g$t$11922$1&dy4A))))
                                          (g$command-line$11919$1&dy4A)))))))
                                  g$command-line$11888$1&dy4A
                                  (cons
                                    g$filename$11907$1&dy4A
                                    (map (case-lambda
                                           ((g$x$11923$1&dy4A)
                                            (g$format$7167$1&dy4A
                                              '"~a"
                                              g$x$11923$1&dy4A)))
                                         g$args$11909$1&dy4A)))
                                 (if (g$memv$5717$1&dy4A
                                       g$t$11916$1&dy4A
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11883$1&dy4A
                                       g$x*$11915$1&dy4A)
                                     (g$serialize-all$7795$1&dy4A
                                       serialize-library
                                       g$compile-core-expr$7518$1&dy4A))
                                   (if '#f '#f (void)))))))
                          g$how$11908$1&dy4A)))
                      (g$with-input-from-file$6994$1&dy4A
                        g$filename$11907$1&dy4A
                        (case-lambda
                          (()
                           ((letrec ((g$f$11924$1&dy4A
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11925$1&dy4A)
                                              (if (eof-object? g$x$11925$1&dy4A)
                                                '()
                                                (cons
                                                  g$x$11925$1&dy4A
                                                  (g$f$11924$1&dy4A)))))
                                           (read-annotated))))))
                              g$f$11924$1&dy4A))))))))
                  g$swap$11914$1&dy4A)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11926$1&dy4A)
                    (begin
                      (g$library-path$11912$1&dy4A g$library-path$11913$1&dy4A)
                      (set! g$library-path$11913$1&dy4A g$t$11926$1&dy4A))))
                 (g$library-path$11912$1&dy4A)))))))
         g$library-path$7791$1&dy4A
         (g$local-library-path$11889$1&dy4A g$filename$11907$1&dy4A)))))
   (g$fo$11898$1&dy4A
     g$fo$11938$1&dy4A
     (g$make-enumeration$7129$1&dy4A '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7796$1&dy4A
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11899$1&dy4A)
         (if (g$serious-condition?$6443$1&dy4A g$ex$11899$1&dy4A)
           (raise g$ex$11899$1&dy4A)
           (begin (display g$ex$11899$1&dy4A) (newline))))))
    (set-symbol-value! 'load g$load$11891$1&dy4A)
    (set-symbol-value! 'compile g$compile$11895$1&dy4A)
    (set-symbol-value! 'compile->closure g$compile->closure$11896$1&dy4A)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11893$1&dy4A)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11853$1&dy4A)
    (set-symbol-value! 'expanded2core g$expanded->core$7517$1&dy4A)
    (set-symbol-value! 'trace-printer g$trace-printer$11887$1&dy4A)
    (g$file-options-constructor$7272$1&dy4A
      (g$enum-set-constructor$7132$1&dy4A g$fo$11898$1&dy4A))
    (g$library-path$7791$1&dy4A (get-library-paths))))

