;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$5143$Od@c8
     g$caar$5215$Od@c8
     (case-lambda ((g$x$5174$Od@c8) (car (car g$x$5174$Od@c8)))))
   (g$cadr$5144$Od@c8
     g$cadr$5216$Od@c8
     (case-lambda ((g$x$5175$Od@c8) (car (cdr g$x$5175$Od@c8)))))
   (g$cdar$5145$Od@c8
     g$cdar$5217$Od@c8
     (case-lambda ((g$x$5176$Od@c8) (cdr (car g$x$5176$Od@c8)))))
   (g$cddr$5146$Od@c8
     g$cddr$5218$Od@c8
     (case-lambda ((g$x$5177$Od@c8) (cdr (cdr g$x$5177$Od@c8)))))
   (g$caaar$5147$Od@c8
     g$caaar$5219$Od@c8
     (case-lambda ((g$x$5178$Od@c8) (g$caar$5143$Od@c8 (car g$x$5178$Od@c8)))))
   (g$caadr$5148$Od@c8
     g$caadr$5220$Od@c8
     (case-lambda ((g$x$5179$Od@c8) (g$caar$5143$Od@c8 (cdr g$x$5179$Od@c8)))))
   (g$cadar$5149$Od@c8
     g$cadar$5221$Od@c8
     (case-lambda ((g$x$5180$Od@c8) (g$cadr$5144$Od@c8 (car g$x$5180$Od@c8)))))
   (g$caddr$5150$Od@c8
     g$caddr$5222$Od@c8
     (case-lambda ((g$x$5181$Od@c8) (g$cadr$5144$Od@c8 (cdr g$x$5181$Od@c8)))))
   (g$cdaar$5151$Od@c8
     g$cdaar$5223$Od@c8
     (case-lambda ((g$x$5182$Od@c8) (g$cdar$5145$Od@c8 (car g$x$5182$Od@c8)))))
   (g$cdadr$5152$Od@c8
     g$cdadr$5224$Od@c8
     (case-lambda ((g$x$5183$Od@c8) (g$cdar$5145$Od@c8 (cdr g$x$5183$Od@c8)))))
   (g$cddar$5153$Od@c8
     g$cddar$5225$Od@c8
     (case-lambda ((g$x$5184$Od@c8) (g$cddr$5146$Od@c8 (car g$x$5184$Od@c8)))))
   (g$cdddr$5154$Od@c8
     g$cdddr$5226$Od@c8
     (case-lambda ((g$x$5185$Od@c8) (g$cddr$5146$Od@c8 (cdr g$x$5185$Od@c8)))))
   (g$caaaar$5155$Od@c8
     g$caaaar$5227$Od@c8
     (case-lambda ((g$x$5186$Od@c8) (g$caaar$5147$Od@c8 (car g$x$5186$Od@c8)))))
   (g$caaadr$5156$Od@c8
     g$caaadr$5228$Od@c8
     (case-lambda ((g$x$5187$Od@c8) (g$caaar$5147$Od@c8 (cdr g$x$5187$Od@c8)))))
   (g$caadar$5157$Od@c8
     g$caadar$5229$Od@c8
     (case-lambda ((g$x$5188$Od@c8) (g$caadr$5148$Od@c8 (car g$x$5188$Od@c8)))))
   (g$caaddr$5158$Od@c8
     g$caaddr$5230$Od@c8
     (case-lambda ((g$x$5189$Od@c8) (g$caadr$5148$Od@c8 (cdr g$x$5189$Od@c8)))))
   (g$cadaar$5159$Od@c8
     g$cadaar$5231$Od@c8
     (case-lambda ((g$x$5190$Od@c8) (g$cadar$5149$Od@c8 (car g$x$5190$Od@c8)))))
   (g$cadadr$5160$Od@c8
     g$cadadr$5232$Od@c8
     (case-lambda ((g$x$5191$Od@c8) (g$cadar$5149$Od@c8 (cdr g$x$5191$Od@c8)))))
   (g$caddar$5161$Od@c8
     g$caddar$5233$Od@c8
     (case-lambda ((g$x$5192$Od@c8) (g$caddr$5150$Od@c8 (car g$x$5192$Od@c8)))))
   (g$cadddr$5162$Od@c8
     g$cadddr$5234$Od@c8
     (case-lambda ((g$x$5193$Od@c8) (g$caddr$5150$Od@c8 (cdr g$x$5193$Od@c8)))))
   (g$cdaaar$5163$Od@c8
     g$cdaaar$5235$Od@c8
     (case-lambda ((g$x$5194$Od@c8) (g$cdaar$5151$Od@c8 (car g$x$5194$Od@c8)))))
   (g$cdaadr$5164$Od@c8
     g$cdaadr$5236$Od@c8
     (case-lambda ((g$x$5195$Od@c8) (g$cdaar$5151$Od@c8 (cdr g$x$5195$Od@c8)))))
   (g$cdadar$5165$Od@c8
     g$cdadar$5237$Od@c8
     (case-lambda ((g$x$5196$Od@c8) (g$cdadr$5152$Od@c8 (car g$x$5196$Od@c8)))))
   (g$cdaddr$5166$Od@c8
     g$cdaddr$5238$Od@c8
     (case-lambda ((g$x$5197$Od@c8) (g$cdadr$5152$Od@c8 (cdr g$x$5197$Od@c8)))))
   (g$cddaar$5167$Od@c8
     g$cddaar$5239$Od@c8
     (case-lambda ((g$x$5198$Od@c8) (g$cddar$5153$Od@c8 (car g$x$5198$Od@c8)))))
   (g$cddadr$5168$Od@c8
     g$cddadr$5240$Od@c8
     (case-lambda ((g$x$5199$Od@c8) (g$cddar$5153$Od@c8 (cdr g$x$5199$Od@c8)))))
   (g$cdddar$5169$Od@c8
     g$cdddar$5241$Od@c8
     (case-lambda ((g$x$5200$Od@c8) (g$cdddr$5154$Od@c8 (car g$x$5200$Od@c8)))))
   (g$cddddr$5170$Od@c8
     g$cddddr$5242$Od@c8
     (case-lambda ((g$x$5201$Od@c8) (g$cdddr$5154$Od@c8 (cdr g$x$5201$Od@c8)))))
   (g$rationalize$5171$Od@c8
     g$rationalize$5243$Od@c8
     (case-lambda
       ((g$x$5202$Od@c8 g$e$5203$Od@c8)
        (apply / (g$find-ratio$5172$Od@c8 g$x$5202$Od@c8 g$e$5203$Od@c8)))))
   (g$find-ratio$5172$Od@c8
     g$find-ratio$5244$Od@c8
     (case-lambda
       ((g$x$5204$Od@c8 g$e$5205$Od@c8)
        (g$find-ratio-between$5173$Od@c8
          (- g$x$5204$Od@c8 g$e$5205$Od@c8)
          (+ g$x$5204$Od@c8 g$e$5205$Od@c8)))))
   (g$find-ratio-between$5173$Od@c8
     g$find-ratio-between$5245$Od@c8
     (case-lambda
       ((g$x$5206$Od@c8 g$y$5207$Od@c8)
        (letrec* ((g$sr$5208$Od@c8
                    (case-lambda
                      ((g$x$5210$Od@c8 g$y$5211$Od@c8)
                       ((case-lambda
                          ((g$fx$5212$Od@c8 g$fy$5213$Od@c8)
                           (if (>= g$fx$5212$Od@c8 g$x$5210$Od@c8)
                             (list g$fx$5212$Od@c8 '1)
                             (if (= g$fx$5212$Od@c8 g$fy$5213$Od@c8)
                               ((case-lambda
                                  ((g$rat$5214$Od@c8)
                                   (list
                                     (+ (g$cadr$5144$Od@c8 g$rat$5214$Od@c8)
                                        (* g$fx$5212$Od@c8
                                           (car g$rat$5214$Od@c8)))
                                     (car g$rat$5214$Od@c8))))
                                (g$sr$5208$Od@c8
                                  (/ (- g$y$5211$Od@c8 g$fy$5213$Od@c8))
                                  (/ (- g$x$5210$Od@c8 g$fx$5212$Od@c8))))
                               (list (+ '1 g$fx$5212$Od@c8) '1)))))
                        (exact (floor g$x$5210$Od@c8))
                        (exact (floor g$y$5211$Od@c8)))))))
          (if (< g$y$5207$Od@c8 g$x$5206$Od@c8)
            (g$find-ratio-between$5173$Od@c8 g$y$5207$Od@c8 g$x$5206$Od@c8)
            (if (>= g$x$5206$Od@c8 g$y$5207$Od@c8)
              (list g$x$5206$Od@c8 '1)
              (if (positive? g$x$5206$Od@c8)
                (g$sr$5208$Od@c8 g$x$5206$Od@c8 g$y$5207$Od@c8)
                (if (negative? g$y$5207$Od@c8)
                  ((case-lambda
                     ((g$rat$5209$Od@c8)
                      (list
                        (- (car g$rat$5209$Od@c8))
                        (g$cadr$5144$Od@c8 g$rat$5209$Od@c8))))
                   (g$sr$5208$Od@c8 (- g$y$5207$Od@c8) (- g$x$5206$Od@c8)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5441$Od@c8 g$using$5476$Od@c8 (clr-using-internal 'system))
   (g$using$5443$Od@c8
     g$using$5477$Od@c8
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5444$Od@c8
     g$make-eq-hashtable$5478$Od@c8
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5455$Od@c8)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5455$Od@c8)))))
   (g$make-eqv-hashtable$5445$Od@c8
     g$make-eqv-hashtable$5479$Od@c8
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5456$Od@c8) (make-hashtable eqv-hash eqv? g$k$5456$Od@c8))))
   (g$hashtable-size$5446$Od@c8
     g$hashtable-size$5480$Od@c8
     (case-lambda
       ((g$ht$5457$Od@c8)
        (clr-call-internal 'hashtable 'get_count g$ht$5457$Od@c8))))
   (g$hashtable-ref$5447$Od@c8
     g$hashtable-ref$5481$Od@c8
     (case-lambda
       ((g$ht$5458$Od@c8 g$key$5459$Od@c8 g$default$5460$Od@c8)
        (letrec* ((g$r$5461$Od@c8
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5458$Od@c8
                      g$key$5459$Od@c8)))
          (if (not (null? g$r$5461$Od@c8))
            g$r$5461$Od@c8
            g$default$5460$Od@c8)))))
   (g$hashtable-set!$5448$Od@c8
     g$hashtable-set!$5482$Od@c8
     (case-lambda
       ((g$ht$5462$Od@c8 g$key$5463$Od@c8 g$obj$5464$Od@c8)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5462$Od@c8
          g$key$5463$Od@c8
          g$obj$5464$Od@c8))))
   (g$hashtable-delete!$5449$Od@c8
     g$hashtable-delete!$5483$Od@c8
     (case-lambda
       ((g$ht$5465$Od@c8 g$key$5466$Od@c8)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5465$Od@c8
          g$key$5466$Od@c8))))
   (g$hashtable-contains?$5450$Od@c8
     g$hashtable-contains?$5484$Od@c8
     (case-lambda
       ((g$ht$5467$Od@c8 g$key$5468$Od@c8)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5467$Od@c8
          g$key$5468$Od@c8))))
   (g$hashtable-update!$5451$Od@c8
     g$hashtable-update!$5485$Od@c8
     (case-lambda
       ((g$ht$5469$Od@c8
          g$key$5470$Od@c8
          g$proc$5471$Od@c8
          g$default$5472$Od@c8)
        (g$hashtable-set!$5448$Od@c8
          g$ht$5469$Od@c8
          g$key$5470$Od@c8
          (g$proc$5471$Od@c8
            (g$hashtable-ref$5447$Od@c8
              g$ht$5469$Od@c8
              g$key$5470$Od@c8
              g$default$5472$Od@c8))))))
   (g$hashtable-clear!$5452$Od@c8
     g$hashtable-clear!$5486$Od@c8
     (case-lambda
       ((g$ht$5473$Od@c8) (clr-call-internal 'hashtable 'clear g$ht$5473$Od@c8))
       ((g$ht$5474$Od@c8 g$k$5475$Od@c8)
        (clr-call-internal 'hashtable 'clear g$ht$5474$Od@c8))))
   (g$clear-usings$5454$Od@c8
     g$clear-usings$5487$Od@c8
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5489$Od@c8 g$using$5555$Od@c8 (clr-using-internal 'system.io))
   (g$file-exists?$5490$Od@c8
     g$file-exists?$5556$Od@c8
     (case-lambda
       ((g$fn$5518$Od@c8)
        (clr-call-internal 'file 'exists '() g$fn$5518$Od@c8))))
   (g$delete-file$5491$Od@c8
     g$delete-file$5557$Od@c8
     (case-lambda
       ((g$fn$5519$Od@c8)
        (clr-call-internal 'file 'delete '() g$fn$5519$Od@c8))))
   (g$file-copy$5492$Od@c8
     g$file-copy$5558$Od@c8
     (case-lambda
       ((g$from$5520$Od@c8 g$to$5521$Od@c8)
        (g$file-copy$5492$Od@c8 g$from$5520$Od@c8 g$to$5521$Od@c8 '#f))
       ((g$from$5522$Od@c8 g$to$5523$Od@c8 g$overwrite?$5524$Od@c8)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5522$Od@c8
          g$to$5523$Od@c8
          g$overwrite?$5524$Od@c8))))
   (g$file-move$5493$Od@c8
     g$file-move$5559$Od@c8
     (case-lambda
       ((g$from$5525$Od@c8 g$to$5526$Od@c8)
        (clr-call-internal 'file 'move '() g$from$5525$Od@c8 g$to$5526$Od@c8))))
   (g$file-create-time$5494$Od@c8
     g$file-create-time$5560$Od@c8
     (case-lambda
       ((g$fn$5527$Od@c8)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5527$Od@c8))))
   (g$file-access-time$5495$Od@c8
     g$file-access-time$5561$Od@c8
     (case-lambda
       ((g$fn$5528$Od@c8)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5528$Od@c8))))
   (g$file-modified-time$5496$Od@c8
     g$file-modified-time$5562$Od@c8
     (case-lambda
       ((g$fn$5529$Od@c8)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5529$Od@c8))))
   (g$directory-exists?$5497$Od@c8
     g$directory-exists?$5563$Od@c8
     (case-lambda
       ((g$fn$5530$Od@c8)
        (clr-call-internal 'directory 'exists '() g$fn$5530$Od@c8))))
   (g$delete-directory$5498$Od@c8
     g$delete-directory$5564$Od@c8
     (case-lambda
       ((g$dir$5531$Od@c8) (g$delete-directory$5498$Od@c8 g$dir$5531$Od@c8 '#f))
       ((g$dir$5532$Od@c8 g$recursive?$5533$Od@c8)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5532$Od@c8
          g$recursive?$5533$Od@c8))))
   (g$directory-move$5499$Od@c8
     g$directory-move$5565$Od@c8
     (case-lambda
       ((g$from$5534$Od@c8 g$to$5535$Od@c8)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5534$Od@c8
          g$to$5535$Od@c8))))
   (g$create-directory$5500$Od@c8
     g$create-directory$5566$Od@c8
     (case-lambda
       ((g$name$5536$Od@c8)
        (clr-call-internal 'directory 'createdirectory '() g$name$5536$Od@c8))))
   (g$get-files$5501$Od@c8
     g$get-files$5567$Od@c8
     (case-lambda
       ((g$dir$5537$Od@c8) (g$get-files$5501$Od@c8 g$dir$5537$Od@c8 '"*"))
       ((g$dir$5538$Od@c8 g$pattern$5539$Od@c8)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5538$Od@c8
          g$pattern$5539$Od@c8))))
   (g$get-directories$5502$Od@c8
     g$get-directories$5568$Od@c8
     (case-lambda
       ((g$dir$5540$Od@c8) (g$get-directories$5502$Od@c8 g$dir$5540$Od@c8 '"*"))
       ((g$dir$5541$Od@c8 g$pattern$5542$Od@c8)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5541$Od@c8
          g$pattern$5542$Od@c8))))
   (g$change-extension$5503$Od@c8
     g$change-extension$5569$Od@c8
     (case-lambda
       ((g$path$5543$Od@c8 g$extension$5544$Od@c8)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5543$Od@c8
          g$extension$5544$Od@c8))))
   (g$path-combine$5504$Od@c8
     g$path-combine$5570$Od@c8
     (case-lambda
       ((g$path1$5545$Od@c8 g$path2$5546$Od@c8)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5545$Od@c8
          g$path2$5546$Od@c8))))
   (g$get-directory-name$5505$Od@c8
     g$get-directory-name$5571$Od@c8
     (case-lambda
       ((g$path$5547$Od@c8)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5547$Od@c8))))
   (g$get-extension$5506$Od@c8
     g$get-extension$5572$Od@c8
     (case-lambda
       ((g$path$5548$Od@c8)
        (clr-call-internal 'path 'getextension '() g$path$5548$Od@c8))))
   (g$get-filename$5507$Od@c8
     g$get-filename$5573$Od@c8
     (case-lambda
       ((g$path$5549$Od@c8)
        (clr-call-internal 'path 'getfilename '() g$path$5549$Od@c8))))
   (g$get-filename-without-extension$5508$Od@c8
     g$get-filename-without-extension$5574$Od@c8
     (case-lambda
       ((g$path$5550$Od@c8)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5550$Od@c8))))
   (g$get-full-path$5509$Od@c8
     g$get-full-path$5575$Od@c8
     (case-lambda
       ((g$path$5551$Od@c8)
        (clr-call-internal 'path 'getfullpath '() g$path$5551$Od@c8))))
   (g$get-path-root$5510$Od@c8
     g$get-path-root$5576$Od@c8
     (case-lambda
       ((g$path$5552$Od@c8)
        (clr-call-internal 'path 'getpathroot '() g$path$5552$Od@c8))))
   (g$get-random-filename$5511$Od@c8
     g$get-random-filename$5577$Od@c8
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5512$Od@c8
     g$get-temp-filename$5578$Od@c8
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5513$Od@c8
     g$get-temp-path$5579$Od@c8
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5514$Od@c8
     g$path-rooted?$5580$Od@c8
     (case-lambda
       ((g$path$5553$Od@c8)
        (clr-call-internal 'path 'ispathrooted '() g$path$5553$Od@c8))))
   (g$path-has-extension?$5515$Od@c8
     g$path-has-extension?$5581$Od@c8
     (case-lambda
       ((g$path$5554$Od@c8)
        (clr-call-internal 'path 'hasextension '() g$path$5554$Od@c8))))
   (g$clear-usings$5517$Od@c8
     g$clear-usings$5582$Od@c8
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5583$Od@c8
     g$find$5674$Od@c8
     (case-lambda
       ((g$proc$5602$Od@c8 g$l$5603$Od@c8)
        (if (null? g$l$5603$Od@c8)
          '#f
          ((case-lambda
             ((g$e$5604$Od@c8)
              (if (g$proc$5602$Od@c8 g$e$5604$Od@c8)
                g$e$5604$Od@c8
                (g$find$5583$Od@c8 g$proc$5602$Od@c8 (cdr g$l$5603$Od@c8)))))
           (car g$l$5603$Od@c8))))))
   (g$partition$5584$Od@c8
     g$partition$5675$Od@c8
     (case-lambda
       ((g$proc$5605$Od@c8 g$l$5606$Od@c8)
        ((letrec ((g$f$5607$Od@c8
                    (case-lambda
                      ((g$l$5608$Od@c8 g$a$5609$Od@c8 g$b$5610$Od@c8)
                       (if (null? g$l$5608$Od@c8)
                         (values
                           (reverse! g$a$5609$Od@c8)
                           (reverse! g$b$5610$Od@c8))
                         ((case-lambda
                            ((g$e$5611$Od@c8)
                             (if (g$proc$5605$Od@c8 g$e$5611$Od@c8)
                               (g$f$5607$Od@c8
                                 (cdr g$l$5608$Od@c8)
                                 (cons g$e$5611$Od@c8 g$a$5609$Od@c8)
                                 g$b$5610$Od@c8)
                               (g$f$5607$Od@c8
                                 (cdr g$l$5608$Od@c8)
                                 g$a$5609$Od@c8
                                 (cons g$e$5611$Od@c8 g$b$5610$Od@c8)))))
                          (car g$l$5608$Od@c8)))))))
           g$f$5607$Od@c8)
         g$l$5606$Od@c8
         '()
         '()))))
   (g$remp$5585$Od@c8
     g$remp$5676$Od@c8
     (case-lambda
       ((g$proc$5612$Od@c8 g$l$5613$Od@c8)
        ((letrec ((g$f$5614$Od@c8
                    (case-lambda
                      ((g$l$5615$Od@c8 g$a$5616$Od@c8)
                       (if (null? g$l$5615$Od@c8)
                         (reverse! g$a$5616$Od@c8)
                         ((case-lambda
                            ((g$e$5617$Od@c8)
                             (if (g$proc$5612$Od@c8 g$e$5617$Od@c8)
                               (g$f$5614$Od@c8
                                 (cdr g$l$5615$Od@c8)
                                 g$a$5616$Od@c8)
                               (g$f$5614$Od@c8
                                 (cdr g$l$5615$Od@c8)
                                 (cons g$e$5617$Od@c8 g$a$5616$Od@c8)))))
                          (car g$l$5615$Od@c8)))))))
           g$f$5614$Od@c8)
         g$l$5613$Od@c8
         '()))))
   (g$filter$5586$Od@c8
     g$filter$5677$Od@c8
     (case-lambda
       ((g$proc$5618$Od@c8 g$l$5619$Od@c8)
        ((letrec ((g$f$5620$Od@c8
                    (case-lambda
                      ((g$l$5621$Od@c8 g$a$5622$Od@c8)
                       (if (null? g$l$5621$Od@c8)
                         (reverse! g$a$5622$Od@c8)
                         ((case-lambda
                            ((g$e$5623$Od@c8)
                             (if (g$proc$5618$Od@c8 g$e$5623$Od@c8)
                               (g$f$5620$Od@c8
                                 (cdr g$l$5621$Od@c8)
                                 (cons g$e$5623$Od@c8 g$a$5622$Od@c8))
                               (g$f$5620$Od@c8
                                 (cdr g$l$5621$Od@c8)
                                 g$a$5622$Od@c8))))
                          (car g$l$5621$Od@c8)))))))
           g$f$5620$Od@c8)
         g$l$5619$Od@c8
         '()))))
   (g$assv$5587$Od@c8
     g$assv$5678$Od@c8
     (case-lambda
       ((g$obj$5624$Od@c8 g$lst$5625$Od@c8)
        (if (null? g$lst$5625$Od@c8)
          '#f
          ((case-lambda
             ((g$c$5626$Od@c8)
              (if (eqv? g$obj$5624$Od@c8 (car g$c$5626$Od@c8))
                g$c$5626$Od@c8
                (g$assv$5587$Od@c8 g$obj$5624$Od@c8 (cdr g$lst$5625$Od@c8)))))
           (car g$lst$5625$Od@c8))))))
   (g$assoc$5588$Od@c8
     g$assoc$5679$Od@c8
     (case-lambda
       ((g$obj$5627$Od@c8 g$lst$5628$Od@c8)
        (if (null? g$lst$5628$Od@c8)
          '#f
          ((case-lambda
             ((g$c$5629$Od@c8)
              (if (equal? g$obj$5627$Od@c8 (car g$c$5629$Od@c8))
                g$c$5629$Od@c8
                (g$assoc$5588$Od@c8 g$obj$5627$Od@c8 (cdr g$lst$5628$Od@c8)))))
           (car g$lst$5628$Od@c8))))))
   (g$assp$5589$Od@c8
     g$assp$5680$Od@c8
     (case-lambda
       ((g$p?$5630$Od@c8 g$lst$5631$Od@c8)
        (if (null? g$lst$5631$Od@c8)
          '#f
          ((case-lambda
             ((g$c$5632$Od@c8)
              (if (g$p?$5630$Od@c8 (car g$c$5632$Od@c8))
                g$c$5632$Od@c8
                (g$assp$5589$Od@c8 g$p?$5630$Od@c8 (cdr g$lst$5631$Od@c8)))))
           (car g$lst$5631$Od@c8))))))
   (g$member$5590$Od@c8
     g$member$5681$Od@c8
     (case-lambda
       ((g$obj$5633$Od@c8 g$lst$5634$Od@c8)
        (if (null? g$lst$5634$Od@c8)
          '#f
          (if (equal? g$obj$5633$Od@c8 (car g$lst$5634$Od@c8))
            g$lst$5634$Od@c8
            (g$member$5590$Od@c8 g$obj$5633$Od@c8 (cdr g$lst$5634$Od@c8)))))))
   (g$memp$5591$Od@c8
     g$memp$5682$Od@c8
     (case-lambda
       ((g$p?$5635$Od@c8 g$lst$5636$Od@c8)
        (if (null? g$lst$5636$Od@c8)
          '#f
          (if (g$p?$5635$Od@c8 (car g$lst$5636$Od@c8))
            g$lst$5636$Od@c8
            (g$memp$5591$Od@c8 g$p?$5635$Od@c8 (cdr g$lst$5636$Od@c8)))))))
   (g$all-empty?$5592$Od@c8
     g$all-empty?$5683$Od@c8
     (case-lambda
       ((g$ls$5637$Od@c8)
        ((case-lambda
           ((g$t$5638$Od@c8)
            (if g$t$5638$Od@c8
              g$t$5638$Od@c8
              (begin
                '#f
                (if (null? (car g$ls$5637$Od@c8))
                  (begin '#f (g$all-empty?$5592$Od@c8 (cdr g$ls$5637$Od@c8)))
                  '#f)))))
         (null? g$ls$5637$Od@c8)))))
   (g$split$5593$Od@c8
     g$split$5684$Od@c8
     (case-lambda
       ((g$ls$5639$Od@c8)
        (if (null? g$ls$5639$Od@c8)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5593$Od@c8 (cdr g$ls$5639$Od@c8))))
            (case-lambda
              ((g$cars$5640$Od@c8 g$cdrs$5641$Od@c8)
               ((case-lambda
                  ((g$a$5642$Od@c8)
                   (values
                     (cons (car g$a$5642$Od@c8) g$cars$5640$Od@c8)
                     (cons (cdr g$a$5642$Od@c8) g$cdrs$5641$Od@c8))))
                (car g$ls$5639$Od@c8)))))))))
   (g$for-all$5594$Od@c8
     g$for-all$5685$Od@c8
     (case-lambda
       ((g$f$5643$Od@c8 . g$args$5644$Od@c8)
        (if (g$all-empty?$5592$Od@c8 g$args$5644$Od@c8)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5593$Od@c8 g$args$5644$Od@c8)))
            (case-lambda
              ((g$cars$5645$Od@c8 g$cdrs$5646$Od@c8)
               (if (apply g$f$5643$Od@c8 g$cars$5645$Od@c8)
                 (begin
                   '#f
                   (apply
                     g$for-all$5594$Od@c8
                     g$f$5643$Od@c8
                     g$cdrs$5646$Od@c8))
                 '#f))))))))
   (g$exists$5595$Od@c8
     g$exists$5686$Od@c8
     (case-lambda
       ((g$f$5647$Od@c8 . g$args$5648$Od@c8)
        (if (g$all-empty?$5592$Od@c8 g$args$5648$Od@c8)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5593$Od@c8 g$args$5648$Od@c8)))
            (case-lambda
              ((g$cars$5649$Od@c8 g$cdrs$5650$Od@c8)
               ((case-lambda
                  ((g$t$5651$Od@c8)
                   (if g$t$5651$Od@c8
                     g$t$5651$Od@c8
                     (begin
                       '#f
                       (apply
                         g$exists$5595$Od@c8
                         g$f$5647$Od@c8
                         g$cdrs$5650$Od@c8)))))
                (apply g$f$5647$Od@c8 g$cars$5649$Od@c8)))))))))
   (g$cons*$5596$Od@c8
     g$cons*$5687$Od@c8
     (case-lambda
       ((g$a$5652$Od@c8 . g$rest$5653$Od@c8)
        ((letrec ((g$f$5654$Od@c8
                    (case-lambda
                      ((g$a$5655$Od@c8 g$rest$5656$Od@c8)
                       (if (null? g$rest$5656$Od@c8)
                         g$a$5655$Od@c8
                         (cons
                           g$a$5655$Od@c8
                           (g$f$5654$Od@c8
                             (car g$rest$5656$Od@c8)
                             (cdr g$rest$5656$Od@c8))))))))
           g$f$5654$Od@c8)
         g$a$5652$Od@c8
         g$rest$5653$Od@c8))))
   (g$fold-left$5597$Od@c8
     g$fold-left$5688$Od@c8
     (case-lambda
       ((g$combine$5657$Od@c8
          g$nil$5658$Od@c8
          g$list1$5659$Od@c8
          .
          g$lists$5660$Od@c8)
        (if (null? g$list1$5659$Od@c8)
          g$nil$5658$Od@c8
          (apply
            g$fold-left$5597$Od@c8
            (g$cons*$5596$Od@c8
              g$combine$5657$Od@c8
              (apply
                g$combine$5657$Od@c8
                (g$cons*$5596$Od@c8
                  g$nil$5658$Od@c8
                  (car g$list1$5659$Od@c8)
                  (map car g$lists$5660$Od@c8)))
              (cdr g$list1$5659$Od@c8)
              (map cdr g$lists$5660$Od@c8)))))))
   (g$fold-right$5598$Od@c8
     g$fold-right$5689$Od@c8
     (case-lambda
       ((g$combine$5661$Od@c8
          g$nil$5662$Od@c8
          g$list1$5663$Od@c8
          .
          g$lists$5664$Od@c8)
        (if (null? g$list1$5663$Od@c8)
          g$nil$5662$Od@c8
          (apply
            g$combine$5661$Od@c8
            (append
              (list (car g$list1$5663$Od@c8))
              (map car g$lists$5664$Od@c8)
              (list
                (apply
                  g$fold-right$5598$Od@c8
                  (g$cons*$5596$Od@c8
                    g$combine$5661$Od@c8
                    g$nil$5662$Od@c8
                    (cdr g$list1$5663$Od@c8)
                    (map cdr g$lists$5664$Od@c8))))))))))
   (g$remove$5599$Od@c8
     g$remove$5690$Od@c8
     (case-lambda
       ((g$obj$5665$Od@c8 g$list$5666$Od@c8)
        (g$remp$5585$Od@c8
          (case-lambda
            ((g$x$5667$Od@c8) (equal? g$obj$5665$Od@c8 g$x$5667$Od@c8)))
          g$list$5666$Od@c8))))
   (g$remv$5600$Od@c8
     g$remv$5691$Od@c8
     (case-lambda
       ((g$obj$5668$Od@c8 g$list$5669$Od@c8)
        (g$remp$5585$Od@c8
          (case-lambda
            ((g$x$5670$Od@c8) (eqv? g$obj$5668$Od@c8 g$x$5670$Od@c8)))
          g$list$5669$Od@c8))))
   (g$remq$5601$Od@c8
     g$remq$5692$Od@c8
     (case-lambda
       ((g$obj$5671$Od@c8 g$list$5672$Od@c8)
        (g$remp$5585$Od@c8
          (case-lambda ((g$x$5673$Od@c8) (eq? g$obj$5671$Od@c8 g$x$5673$Od@c8)))
          g$list$5672$Od@c8)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5693$Od@c8
     g$native-endianness$5804$Od@c8
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5694$Od@c8
     g$bytevector-u16-ref$5805$Od@c8
     (case-lambda
       ((g$bytevector$5722$Od@c8 g$k$5723$Od@c8 g$endianness$5724$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5722$Od@c8
          g$k$5723$Od@c8
          g$endianness$5724$Od@c8
          '2))))
   (g$bytevector-s16-ref$5695$Od@c8
     g$bytevector-s16-ref$5806$Od@c8
     (case-lambda
       ((g$bytevector$5725$Od@c8 g$k$5726$Od@c8 g$endianness$5727$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5725$Od@c8
          g$k$5726$Od@c8
          g$endianness$5727$Od@c8
          '2))))
   (g$bytevector-u16-native-ref$5696$Od@c8
     g$bytevector-u16-native-ref$5807$Od@c8
     (case-lambda
       ((g$bytevector$5728$Od@c8 g$k$5729$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5728$Od@c8
          g$k$5729$Od@c8
          (g$native-endianness$5693$Od@c8)
          '2))))
   (g$bytevector-s16-native-ref$5697$Od@c8
     g$bytevector-s16-native-ref$5808$Od@c8
     (case-lambda
       ((g$bytevector$5730$Od@c8 g$k$5731$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5730$Od@c8
          g$k$5731$Od@c8
          (g$native-endianness$5693$Od@c8)
          '2))))
   (g$bytevector-u16-set!$5698$Od@c8
     g$bytevector-u16-set!$5809$Od@c8
     (case-lambda
       ((g$bytevector$5732$Od@c8
          g$k$5733$Od@c8
          g$n$5734$Od@c8
          g$endianness$5735$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5732$Od@c8
          g$k$5733$Od@c8
          g$endianness$5735$Od@c8
          '2))))
   (g$bytevector-s16-set!$5699$Od@c8
     g$bytevector-s16-set!$5810$Od@c8
     (case-lambda
       ((g$bytevector$5736$Od@c8
          g$k$5737$Od@c8
          g$n$5738$Od@c8
          g$endianness$5739$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5736$Od@c8
          g$k$5737$Od@c8
          g$endianness$5739$Od@c8
          '2))))
   (g$bytevector-u16-native-set!$5700$Od@c8
     g$bytevector-u16-native-set!$5811$Od@c8
     (case-lambda
       ((g$bytevector$5740$Od@c8 g$k$5741$Od@c8 g$n$5742$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5740$Od@c8
          g$k$5741$Od@c8
          (g$native-endianness$5693$Od@c8)
          '2))))
   (g$bytevector-s16-native-set!$5701$Od@c8
     g$bytevector-s16-native-set!$5812$Od@c8
     (case-lambda
       ((g$bytevector$5743$Od@c8 g$k$5744$Od@c8 g$n$5745$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5743$Od@c8
          g$k$5744$Od@c8
          (g$native-endianness$5693$Od@c8)
          '2))))
   (g$bytevector-u32-ref$5702$Od@c8
     g$bytevector-u32-ref$5813$Od@c8
     (case-lambda
       ((g$bytevector$5746$Od@c8 g$k$5747$Od@c8 g$endianness$5748$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5746$Od@c8
          g$k$5747$Od@c8
          g$endianness$5748$Od@c8
          '4))))
   (g$bytevector-s32-ref$5703$Od@c8
     g$bytevector-s32-ref$5814$Od@c8
     (case-lambda
       ((g$bytevector$5749$Od@c8 g$k$5750$Od@c8 g$endianness$5751$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5749$Od@c8
          g$k$5750$Od@c8
          g$endianness$5751$Od@c8
          '4))))
   (g$bytevector-u32-native-ref$5704$Od@c8
     g$bytevector-u32-native-ref$5815$Od@c8
     (case-lambda
       ((g$bytevector$5752$Od@c8 g$k$5753$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5752$Od@c8
          g$k$5753$Od@c8
          (g$native-endianness$5693$Od@c8)
          '4))))
   (g$bytevector-s32-native-ref$5705$Od@c8
     g$bytevector-s32-native-ref$5816$Od@c8
     (case-lambda
       ((g$bytevector$5754$Od@c8 g$k$5755$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5754$Od@c8
          g$k$5755$Od@c8
          (g$native-endianness$5693$Od@c8)
          '4))))
   (g$bytevector-u32-set!$5706$Od@c8
     g$bytevector-u32-set!$5817$Od@c8
     (case-lambda
       ((g$bytevector$5756$Od@c8
          g$k$5757$Od@c8
          g$n$5758$Od@c8
          g$endianness$5759$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5756$Od@c8
          g$k$5757$Od@c8
          g$endianness$5759$Od@c8
          '4))))
   (g$bytevector-s32-set!$5707$Od@c8
     g$bytevector-s32-set!$5818$Od@c8
     (case-lambda
       ((g$bytevector$5760$Od@c8
          g$k$5761$Od@c8
          g$n$5762$Od@c8
          g$endianness$5763$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5760$Od@c8
          g$k$5761$Od@c8
          g$endianness$5763$Od@c8
          '4))))
   (g$bytevector-u32-native-set!$5708$Od@c8
     g$bytevector-u32-native-set!$5819$Od@c8
     (case-lambda
       ((g$bytevector$5764$Od@c8 g$k$5765$Od@c8 g$n$5766$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5764$Od@c8
          g$k$5765$Od@c8
          (g$native-endianness$5693$Od@c8)
          '4))))
   (g$bytevector-s32-native-set!$5709$Od@c8
     g$bytevector-s32-native-set!$5820$Od@c8
     (case-lambda
       ((g$bytevector$5767$Od@c8 g$k$5768$Od@c8 g$n$5769$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5767$Od@c8
          g$k$5768$Od@c8
          (g$native-endianness$5693$Od@c8)
          '4))))
   (g$bytevector-u64-ref$5710$Od@c8
     g$bytevector-u64-ref$5821$Od@c8
     (case-lambda
       ((g$bytevector$5770$Od@c8 g$k$5771$Od@c8 g$endianness$5772$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5770$Od@c8
          g$k$5771$Od@c8
          g$endianness$5772$Od@c8
          '8))))
   (g$bytevector-s64-ref$5711$Od@c8
     g$bytevector-s64-ref$5822$Od@c8
     (case-lambda
       ((g$bytevector$5773$Od@c8 g$k$5774$Od@c8 g$endianness$5775$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5773$Od@c8
          g$k$5774$Od@c8
          g$endianness$5775$Od@c8
          '8))))
   (g$bytevector-u64-native-ref$5712$Od@c8
     g$bytevector-u64-native-ref$5823$Od@c8
     (case-lambda
       ((g$bytevector$5776$Od@c8 g$k$5777$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5776$Od@c8
          g$k$5777$Od@c8
          (g$native-endianness$5693$Od@c8)
          '8))))
   (g$bytevector-s64-native-ref$5713$Od@c8
     g$bytevector-s64-native-ref$5824$Od@c8
     (case-lambda
       ((g$bytevector$5778$Od@c8 g$k$5779$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5778$Od@c8
          g$k$5779$Od@c8
          (g$native-endianness$5693$Od@c8)
          '8))))
   (g$bytevector-u64-set!$5714$Od@c8
     g$bytevector-u64-set!$5825$Od@c8
     (case-lambda
       ((g$bytevector$5780$Od@c8
          g$k$5781$Od@c8
          g$n$5782$Od@c8
          g$endianness$5783$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5780$Od@c8
          g$k$5781$Od@c8
          g$endianness$5783$Od@c8
          '8))))
   (g$bytevector-s64-set!$5715$Od@c8
     g$bytevector-s64-set!$5826$Od@c8
     (case-lambda
       ((g$bytevector$5784$Od@c8
          g$k$5785$Od@c8
          g$n$5786$Od@c8
          g$endianness$5787$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5784$Od@c8
          g$k$5785$Od@c8
          g$endianness$5787$Od@c8
          '8))))
   (g$bytevector-u64-native-set!$5716$Od@c8
     g$bytevector-u64-native-set!$5827$Od@c8
     (case-lambda
       ((g$bytevector$5788$Od@c8 g$k$5789$Od@c8 g$n$5790$Od@c8)
        (bytevector-uint-ref
          g$bytevector$5788$Od@c8
          g$k$5789$Od@c8
          (g$native-endianness$5693$Od@c8)
          '8))))
   (g$bytevector-s64-native-set!$5717$Od@c8
     g$bytevector-s64-native-set!$5828$Od@c8
     (case-lambda
       ((g$bytevector$5791$Od@c8 g$k$5792$Od@c8 g$n$5793$Od@c8)
        (bytevector-sint-ref
          g$bytevector$5791$Od@c8
          g$k$5792$Od@c8
          (g$native-endianness$5693$Od@c8)
          '8))))
   (g$bytevector-ieee-single-native-ref$5718$Od@c8
     g$bytevector-ieee-single-native-ref$5829$Od@c8
     (case-lambda
       ((g$bytevector$5794$Od@c8 g$k$5795$Od@c8)
        (bytevector-ieee-single-ref
          g$bytevector$5794$Od@c8
          g$k$5795$Od@c8
          (g$native-endianness$5693$Od@c8)))))
   (g$bytevector-ieee-double-native-ref$5719$Od@c8
     g$bytevector-ieee-double-native-ref$5830$Od@c8
     (case-lambda
       ((g$bytevector$5796$Od@c8 g$k$5797$Od@c8)
        (bytevector-ieee-double-ref
          g$bytevector$5796$Od@c8
          g$k$5797$Od@c8
          (g$native-endianness$5693$Od@c8)))))
   (g$bytevector-ieee-single-native-set!$5720$Od@c8
     g$bytevector-ieee-single-native-set!$5831$Od@c8
     (case-lambda
       ((g$bytevector$5798$Od@c8 g$k$5799$Od@c8 g$x$5800$Od@c8)
        (bytevector-ieee-single-set!
          g$bytevector$5798$Od@c8
          g$k$5799$Od@c8
          g$x$5800$Od@c8
          (g$native-endianness$5693$Od@c8)))))
   (g$bytevector-ieee-double-native-set!$5721$Od@c8
     g$bytevector-ieee-double-native-set!$5832$Od@c8
     (case-lambda
       ((g$bytevector$5801$Od@c8 g$k$5802$Od@c8 g$x$5803$Od@c8)
        (bytevector-ieee-double-set!
          g$bytevector$5801$Od@c8
          g$k$5802$Od@c8
          g$x$5803$Od@c8
          (g$native-endianness$5693$Od@c8))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme enums) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6288$5833$Od@c8
     g$6288$5928$Od@c8
     (make-record-type-descriptor '&condition '#f 'g$6291$Od@c8 '#f '#f '#()))
   (g$6290$5834$Od@c8 g$6290$5929$Od@c8 '#f)
   (g$6289$5835$Od@c8
     g$6289$5930$Od@c8
     (make-record-constructor-descriptor
       g$6288$5833$Od@c8
       '#f
       g$6290$5834$Od@c8))
   (g$&condition?$5836$Od@c8
     g$&condition?$5931$Od@c8
     (record-predicate g$6288$5833$Od@c8))
   (g$make-&condition$5837$Od@c8
     g$make-&condition$5932$Od@c8
     (record-constructor g$6289$5835$Od@c8))
   (g$&condition-rtd$5838$Od@c8 g$&condition-rtd$5933$Od@c8 g$6288$5833$Od@c8)
   (g$&condition-rcd$5839$Od@c8 g$&condition-rcd$5934$Od@c8 g$6289$5835$Od@c8)
   (g$6304$5840$Od@c8
     g$6304$5935$Od@c8
     (make-record-type-descriptor
       '&message
       g$6288$5833$Od@c8
       'g$6307$Od@c8
       '#f
       '#f
       '#((immutable message))))
   (g$6306$5841$Od@c8 g$6306$5936$Od@c8 '#f)
   (g$6305$5842$Od@c8
     g$6305$5937$Od@c8
     (make-record-constructor-descriptor
       g$6304$5840$Od@c8
       g$6289$5835$Od@c8
       g$6306$5841$Od@c8))
   (g$6303$5843$Od@c8 g$6303$5938$Od@c8 (record-predicate g$6304$5840$Od@c8))
   (g$make-message-condition$5844$Od@c8
     g$make-message-condition$5939$Od@c8
     (record-constructor g$6305$5842$Od@c8))
   (g$6302$5845$Od@c8 g$6302$5940$Od@c8 (record-accessor g$6304$5840$Od@c8 '0))
   (g$message-condition?$5846$Od@c8
     g$message-condition?$5941$Od@c8
     (condition-predicate g$6304$5840$Od@c8))
   (g$condition-message$5847$Od@c8
     g$condition-message$5942$Od@c8
     (condition-accessor g$6304$5840$Od@c8 g$6302$5845$Od@c8))
   (g$6320$5848$Od@c8
     g$6320$5943$Od@c8
     (make-record-type-descriptor
       '&warning
       g$6288$5833$Od@c8
       'g$6323$Od@c8
       '#f
       '#f
       '#()))
   (g$6322$5849$Od@c8 g$6322$5944$Od@c8 '#f)
   (g$6321$5850$Od@c8
     g$6321$5945$Od@c8
     (make-record-constructor-descriptor
       g$6320$5848$Od@c8
       g$6289$5835$Od@c8
       g$6322$5849$Od@c8))
   (g$6319$5851$Od@c8 g$6319$5946$Od@c8 (record-predicate g$6320$5848$Od@c8))
   (g$make-warning$5852$Od@c8
     g$make-warning$5947$Od@c8
     (record-constructor g$6321$5850$Od@c8))
   (g$warning?$5853$Od@c8
     g$warning?$5948$Od@c8
     (condition-predicate g$6320$5848$Od@c8))
   (g$6334$5854$Od@c8
     g$6334$5949$Od@c8
     (make-record-type-descriptor
       '&serious
       g$6288$5833$Od@c8
       'g$6337$Od@c8
       '#f
       '#f
       '#()))
   (g$6336$5855$Od@c8 g$6336$5950$Od@c8 '#f)
   (g$6335$5856$Od@c8
     g$6335$5951$Od@c8
     (make-record-constructor-descriptor
       g$6334$5854$Od@c8
       g$6289$5835$Od@c8
       g$6336$5855$Od@c8))
   (g$6333$5857$Od@c8 g$6333$5952$Od@c8 (record-predicate g$6334$5854$Od@c8))
   (g$make-serious-condition$5858$Od@c8
     g$make-serious-condition$5953$Od@c8
     (record-constructor g$6335$5856$Od@c8))
   (g$serious-condition?$5859$Od@c8
     g$serious-condition?$5954$Od@c8
     (condition-predicate g$6334$5854$Od@c8))
   (g$6348$5860$Od@c8
     g$6348$5955$Od@c8
     (make-record-type-descriptor
       '&error
       g$6334$5854$Od@c8
       'g$6351$Od@c8
       '#f
       '#f
       '#()))
   (g$6350$5861$Od@c8 g$6350$5956$Od@c8 '#f)
   (g$6349$5862$Od@c8
     g$6349$5957$Od@c8
     (make-record-constructor-descriptor
       g$6348$5860$Od@c8
       g$6335$5856$Od@c8
       g$6350$5861$Od@c8))
   (g$6347$5863$Od@c8 g$6347$5958$Od@c8 (record-predicate g$6348$5860$Od@c8))
   (g$make-error$5864$Od@c8
     g$make-error$5959$Od@c8
     (record-constructor g$6349$5862$Od@c8))
   (g$error?$5865$Od@c8
     g$error?$5960$Od@c8
     (condition-predicate g$6348$5860$Od@c8))
   (g$6362$5866$Od@c8
     g$6362$5961$Od@c8
     (make-record-type-descriptor
       '&violation
       g$6334$5854$Od@c8
       'g$6365$Od@c8
       '#f
       '#f
       '#()))
   (g$6364$5867$Od@c8 g$6364$5962$Od@c8 '#f)
   (g$6363$5868$Od@c8
     g$6363$5963$Od@c8
     (make-record-constructor-descriptor
       g$6362$5866$Od@c8
       g$6335$5856$Od@c8
       g$6364$5867$Od@c8))
   (g$6361$5869$Od@c8 g$6361$5964$Od@c8 (record-predicate g$6362$5866$Od@c8))
   (g$make-violation$5870$Od@c8
     g$make-violation$5965$Od@c8
     (record-constructor g$6363$5868$Od@c8))
   (g$violation?$5871$Od@c8
     g$violation?$5966$Od@c8
     (condition-predicate g$6362$5866$Od@c8))
   (g$6376$5872$Od@c8
     g$6376$5967$Od@c8
     (make-record-type-descriptor
       '&assertion
       g$6362$5866$Od@c8
       'g$6379$Od@c8
       '#f
       '#f
       '#()))
   (g$6378$5873$Od@c8 g$6378$5968$Od@c8 '#f)
   (g$6377$5874$Od@c8
     g$6377$5969$Od@c8
     (make-record-constructor-descriptor
       g$6376$5872$Od@c8
       g$6363$5868$Od@c8
       g$6378$5873$Od@c8))
   (g$6375$5875$Od@c8 g$6375$5970$Od@c8 (record-predicate g$6376$5872$Od@c8))
   (g$make-assertion-violation$5876$Od@c8
     g$make-assertion-violation$5971$Od@c8
     (record-constructor g$6377$5874$Od@c8))
   (g$assertion-violation?$5877$Od@c8
     g$assertion-violation?$5972$Od@c8
     (condition-predicate g$6376$5872$Od@c8))
   (g$6391$5878$Od@c8
     g$6391$5973$Od@c8
     (make-record-type-descriptor
       '&irritants
       g$6288$5833$Od@c8
       'g$6394$Od@c8
       '#f
       '#f
       '#((immutable irritants))))
   (g$6393$5879$Od@c8 g$6393$5974$Od@c8 '#f)
   (g$6392$5880$Od@c8
     g$6392$5975$Od@c8
     (make-record-constructor-descriptor
       g$6391$5878$Od@c8
       g$6289$5835$Od@c8
       g$6393$5879$Od@c8))
   (g$6390$5881$Od@c8 g$6390$5976$Od@c8 (record-predicate g$6391$5878$Od@c8))
   (g$make-irritants-condition$5882$Od@c8
     g$make-irritants-condition$5977$Od@c8
     (record-constructor g$6392$5880$Od@c8))
   (g$6389$5883$Od@c8 g$6389$5978$Od@c8 (record-accessor g$6391$5878$Od@c8 '0))
   (g$irritants-condition?$5884$Od@c8
     g$irritants-condition?$5979$Od@c8
     (condition-predicate g$6391$5878$Od@c8))
   (g$condition-irritants$5885$Od@c8
     g$condition-irritants$5980$Od@c8
     (condition-accessor g$6391$5878$Od@c8 g$6389$5883$Od@c8))
   (g$6408$5886$Od@c8
     g$6408$5981$Od@c8
     (make-record-type-descriptor
       '&who
       g$6288$5833$Od@c8
       'g$6411$Od@c8
       '#f
       '#f
       '#((immutable who))))
   (g$6410$5887$Od@c8 g$6410$5982$Od@c8 '#f)
   (g$6409$5888$Od@c8
     g$6409$5983$Od@c8
     (make-record-constructor-descriptor
       g$6408$5886$Od@c8
       g$6289$5835$Od@c8
       g$6410$5887$Od@c8))
   (g$6407$5889$Od@c8 g$6407$5984$Od@c8 (record-predicate g$6408$5886$Od@c8))
   (g$make-who-condition$5890$Od@c8
     g$make-who-condition$5985$Od@c8
     (record-constructor g$6409$5888$Od@c8))
   (g$6406$5891$Od@c8 g$6406$5986$Od@c8 (record-accessor g$6408$5886$Od@c8 '0))
   (g$who-condition?$5892$Od@c8
     g$who-condition?$5987$Od@c8
     (condition-predicate g$6408$5886$Od@c8))
   (g$condition-who$5893$Od@c8
     g$condition-who$5988$Od@c8
     (condition-accessor g$6408$5886$Od@c8 g$6406$5891$Od@c8))
   (g$6424$5894$Od@c8
     g$6424$5989$Od@c8
     (make-record-type-descriptor
       '&non-continuable
       g$6362$5866$Od@c8
       'g$6427$Od@c8
       '#f
       '#f
       '#()))
   (g$6426$5895$Od@c8 g$6426$5990$Od@c8 '#f)
   (g$6425$5896$Od@c8
     g$6425$5991$Od@c8
     (make-record-constructor-descriptor
       g$6424$5894$Od@c8
       g$6363$5868$Od@c8
       g$6426$5895$Od@c8))
   (g$6423$5897$Od@c8 g$6423$5992$Od@c8 (record-predicate g$6424$5894$Od@c8))
   (g$make-non-continuable-violation$5898$Od@c8
     g$make-non-continuable-violation$5993$Od@c8
     (record-constructor g$6425$5896$Od@c8))
   (g$non-continuable-violation?$5899$Od@c8
     g$non-continuable-violation?$5994$Od@c8
     (condition-predicate g$6424$5894$Od@c8))
   (g$6438$5900$Od@c8
     g$6438$5995$Od@c8
     (make-record-type-descriptor
       '&implementation-restriction
       g$6362$5866$Od@c8
       'g$6441$Od@c8
       '#f
       '#f
       '#()))
   (g$6440$5901$Od@c8 g$6440$5996$Od@c8 '#f)
   (g$6439$5902$Od@c8
     g$6439$5997$Od@c8
     (make-record-constructor-descriptor
       g$6438$5900$Od@c8
       g$6363$5868$Od@c8
       g$6440$5901$Od@c8))
   (g$6437$5903$Od@c8 g$6437$5998$Od@c8 (record-predicate g$6438$5900$Od@c8))
   (g$make-implementation-restriction-violation$5904$Od@c8
     g$make-implementation-restriction-violation$5999$Od@c8
     (record-constructor g$6439$5902$Od@c8))
   (g$implementation-restriction-violation?$5905$Od@c8
     g$implementation-restriction-violation?$6000$Od@c8
     (condition-predicate g$6438$5900$Od@c8))
   (g$6452$5906$Od@c8
     g$6452$6001$Od@c8
     (make-record-type-descriptor
       '&lexical
       g$6362$5866$Od@c8
       'g$6455$Od@c8
       '#f
       '#f
       '#()))
   (g$6454$5907$Od@c8 g$6454$6002$Od@c8 '#f)
   (g$6453$5908$Od@c8
     g$6453$6003$Od@c8
     (make-record-constructor-descriptor
       g$6452$5906$Od@c8
       g$6363$5868$Od@c8
       g$6454$5907$Od@c8))
   (g$6451$5909$Od@c8 g$6451$6004$Od@c8 (record-predicate g$6452$5906$Od@c8))
   (g$make-lexical-violation$5910$Od@c8
     g$make-lexical-violation$6005$Od@c8
     (record-constructor g$6453$5908$Od@c8))
   (g$lexical-violation?$5911$Od@c8
     g$lexical-violation?$6006$Od@c8
     (condition-predicate g$6452$5906$Od@c8))
   (g$6468$5912$Od@c8
     g$6468$6007$Od@c8
     (make-record-type-descriptor
       '&syntax
       g$6362$5866$Od@c8
       'g$6471$Od@c8
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6470$5913$Od@c8 g$6470$6008$Od@c8 '#f)
   (g$6469$5914$Od@c8
     g$6469$6009$Od@c8
     (make-record-constructor-descriptor
       g$6468$5912$Od@c8
       g$6363$5868$Od@c8
       g$6470$5913$Od@c8))
   (g$6467$5915$Od@c8 g$6467$6010$Od@c8 (record-predicate g$6468$5912$Od@c8))
   (g$make-syntax-violation$5916$Od@c8
     g$make-syntax-violation$6011$Od@c8
     (record-constructor g$6469$5914$Od@c8))
   (g$6465$5917$Od@c8 g$6465$6012$Od@c8 (record-accessor g$6468$5912$Od@c8 '0))
   (g$6466$5918$Od@c8 g$6466$6013$Od@c8 (record-accessor g$6468$5912$Od@c8 '1))
   (g$syntax-violation?$5919$Od@c8
     g$syntax-violation?$6014$Od@c8
     (condition-predicate g$6468$5912$Od@c8))
   (g$syntax-violation-form$5920$Od@c8
     g$syntax-violation-form$6015$Od@c8
     (condition-accessor g$6468$5912$Od@c8 g$6465$5917$Od@c8))
   (g$syntax-violation-subform$5921$Od@c8
     g$syntax-violation-subform$6016$Od@c8
     (condition-accessor g$6468$5912$Od@c8 g$6466$5918$Od@c8))
   (g$6486$5922$Od@c8
     g$6486$6017$Od@c8
     (make-record-type-descriptor
       '&undefined
       g$6362$5866$Od@c8
       'g$6489$Od@c8
       '#f
       '#f
       '#()))
   (g$6488$5923$Od@c8 g$6488$6018$Od@c8 '#f)
   (g$6487$5924$Od@c8
     g$6487$6019$Od@c8
     (make-record-constructor-descriptor
       g$6486$5922$Od@c8
       g$6363$5868$Od@c8
       g$6488$5923$Od@c8))
   (g$6485$5925$Od@c8 g$6485$6020$Od@c8 (record-predicate g$6486$5922$Od@c8))
   (g$make-undefined-violation$5926$Od@c8
     g$make-undefined-violation$6021$Od@c8
     (record-constructor g$6487$5924$Od@c8))
   (g$undefined-violation?$5927$Od@c8
     g$undefined-violation?$6022$Od@c8
     (condition-predicate g$6486$5922$Od@c8)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6023$Od@c8
     g$append!$6029$Od@c8
     (case-lambda
       ((g$a$6024$Od@c8 . g$b$6025$Od@c8)
        (if (null? g$a$6024$Od@c8)
          g$b$6025$Od@c8
          (if (null? g$b$6025$Od@c8)
            g$a$6024$Od@c8
            (begin
              ((letrec ((g$f$6026$Od@c8
                          (case-lambda
                            ((g$a$6027$Od@c8)
                             ((case-lambda
                                ((g$n$6028$Od@c8)
                                 (if (null? g$n$6028$Od@c8)
                                   (set-cdr! g$a$6027$Od@c8 g$b$6025$Od@c8)
                                   (g$f$6026$Od@c8 g$n$6028$Od@c8))))
                              (cdr g$a$6027$Od@c8))))))
                 g$f$6026$Od@c8)
               g$a$6024$Od@c8)
              g$a$6024$Od@c8)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6030$Od@c8
     g$sign$6041$Od@c8
     (case-lambda
       ((g$n$6034$Od@c8)
        (if (> g$n$6034$Od@c8 '0) '1 (if (< g$n$6034$Od@c8 '0) '-1 '0)))))
   (g$quotient$6031$Od@c8
     g$quotient$6042$Od@c8
     (case-lambda
       ((g$n1$6035$Od@c8 g$n2$6036$Od@c8)
        (* (g$sign$6030$Od@c8 g$n1$6035$Od@c8)
           (g$sign$6030$Od@c8 g$n2$6036$Od@c8)
           (div (abs g$n1$6035$Od@c8) (abs g$n2$6036$Od@c8))))))
   (g$remainder$6032$Od@c8
     g$remainder$6043$Od@c8
     (case-lambda
       ((g$n1$6037$Od@c8 g$n2$6038$Od@c8)
        (* (g$sign$6030$Od@c8 g$n1$6037$Od@c8)
           (mod (abs g$n1$6037$Od@c8) (abs g$n2$6038$Od@c8))))))
   (g$modulo$6033$Od@c8
     g$modulo$6044$Od@c8
     (case-lambda
       ((g$n1$6039$Od@c8 g$n2$6040$Od@c8)
        (* (g$sign$6030$Od@c8 g$n2$6040$Od@c8)
           (mod (* (g$sign$6030$Od@c8 g$n2$6040$Od@c8) g$n1$6039$Od@c8)
                (abs g$n2$6040$Od@c8)))))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6045$Od@c8
     g$split$6071$Od@c8
     (case-lambda
       ((g$ls$6048$Od@c8)
        ((letrec ((g$loop$6049$Od@c8
                    (case-lambda
                      ((g$rest$6050$Od@c8 g$left$6051$Od@c8 g$right$6052$Od@c8)
                       (if (null? g$rest$6050$Od@c8)
                         (cons g$left$6051$Od@c8 g$right$6052$Od@c8)
                         (if (null? (cdr g$rest$6050$Od@c8))
                           (cons
                             (cons (car g$rest$6050$Od@c8) g$left$6051$Od@c8)
                             g$right$6052$Od@c8)
                           (g$loop$6049$Od@c8
                             (g$cddr$5218$Od@c8 g$rest$6050$Od@c8)
                             (cons (car g$rest$6050$Od@c8) g$left$6051$Od@c8)
                             (cons
                               (g$cadr$5216$Od@c8 g$rest$6050$Od@c8)
                               g$right$6052$Od@c8))))))))
           g$loop$6049$Od@c8)
         g$ls$6048$Od@c8
         '()
         '()))))
   (g$reverse-it$6046$Od@c8
     g$reverse-it$6072$Od@c8
     (case-lambda
       ((g$head$6053$Od@c8 g$tail$6054$Od@c8)
        (if (null? g$head$6053$Od@c8)
          g$tail$6054$Od@c8
          ((case-lambda
             ((g$hd$6055$Od@c8 g$tl$6056$Od@c8)
              (g$reverse-it$6046$Od@c8
                g$tl$6056$Od@c8
                (cons g$hd$6055$Od@c8 g$tail$6054$Od@c8))))
           (car g$head$6053$Od@c8)
           (cdr g$head$6053$Od@c8))))))
   (g$list-sort$6047$Od@c8
     g$list-sort$6073$Od@c8
     (case-lambda
       ((g$precedes?$6057$Od@c8 g$ls$6058$Od@c8)
        ((case-lambda
           ((g$merge$6059$Od@c8)
            ((case-lambda
               (()
                (if (null? g$ls$6058$Od@c8)
                  '()
                  ((letrec ((g$helper$6060$Od@c8
                              (case-lambda
                                ((g$piece$6061$Od@c8)
                                 (if (null? (cdr g$piece$6061$Od@c8))
                                   g$piece$6061$Od@c8
                                   ((case-lambda
                                      ((g$parts$6062$Od@c8)
                                       (g$merge$6059$Od@c8
                                         (g$helper$6060$Od@c8
                                           (car g$parts$6062$Od@c8))
                                         (g$helper$6060$Od@c8
                                           (cdr g$parts$6062$Od@c8)))))
                                    (g$split$6045$Od@c8
                                      g$piece$6061$Od@c8)))))))
                     g$helper$6060$Od@c8)
                   g$ls$6058$Od@c8)))))))
         (case-lambda
           ((g$list-1$6063$Od@c8 g$list-2$6064$Od@c8)
            ((letrec ((g$loop$6065$Od@c8
                        (case-lambda
                          ((g$source-1$6066$Od@c8
                             g$source-2$6067$Od@c8
                             g$so-far$6068$Od@c8)
                           (if (null? g$source-1$6066$Od@c8)
                             (g$reverse-it$6046$Od@c8
                               g$so-far$6068$Od@c8
                               g$source-2$6067$Od@c8)
                             (if (null? g$source-2$6067$Od@c8)
                               (g$reverse-it$6046$Od@c8
                                 g$so-far$6068$Od@c8
                                 g$source-1$6066$Od@c8)
                               ((case-lambda
                                  ((g$car-1$6069$Od@c8 g$car-2$6070$Od@c8)
                                   (if (g$precedes?$6057$Od@c8
                                         g$car-2$6070$Od@c8
                                         g$car-1$6069$Od@c8)
                                     (g$loop$6065$Od@c8
                                       g$source-1$6066$Od@c8
                                       (cdr g$source-2$6067$Od@c8)
                                       (cons
                                         g$car-2$6070$Od@c8
                                         g$so-far$6068$Od@c8))
                                     (g$loop$6065$Od@c8
                                       g$source-2$6067$Od@c8
                                       (cdr g$source-1$6066$Od@c8)
                                       (cons
                                         g$car-1$6069$Od@c8
                                         g$so-far$6068$Od@c8)))))
                                (car g$source-1$6066$Od@c8)
                                (car g$source-2$6067$Od@c8))))))))
               g$loop$6065$Od@c8)
             g$list-1$6063$Od@c8
             g$list-2$6064$Od@c8
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6111$Od@c8
     g$bitwise-if$6162$Od@c8
     (case-lambda
       ((g$ei1$6119$Od@c8 g$ei2$6120$Od@c8 g$ei3$6121$Od@c8)
        (bitwise-ior
          (bitwise-and g$ei1$6119$Od@c8 g$ei2$6120$Od@c8)
          (bitwise-and (bitwise-not g$ei1$6119$Od@c8) g$ei3$6121$Od@c8)))))
   (g$bitwise-copy-bit$6112$Od@c8
     g$bitwise-copy-bit$6163$Od@c8
     (case-lambda
       ((g$ei1$6122$Od@c8 g$ei2$6123$Od@c8 g$ei3$6124$Od@c8)
        ((case-lambda
           ((g$mask$6125$Od@c8)
            ((case-lambda
               (()
                (g$bitwise-if$6111$Od@c8
                  g$mask$6125$Od@c8
                  (g$bitwise-arithmetic-shift-left$6115$Od@c8
                    g$ei3$6124$Od@c8
                    g$ei2$6123$Od@c8)
                  g$ei1$6122$Od@c8))))))
         (g$bitwise-arithmetic-shift-left$6115$Od@c8 '1 g$ei2$6123$Od@c8)))))
   (g$bitwise-bit-field$6113$Od@c8
     g$bitwise-bit-field$6164$Od@c8
     (case-lambda
       ((g$ei1$6126$Od@c8 g$ei2$6127$Od@c8 g$ei3$6128$Od@c8)
        ((case-lambda
           ((g$mask$6129$Od@c8)
            (g$bitwise-arithmetic-shift-right$6116$Od@c8
              (bitwise-and g$ei1$6126$Od@c8 g$mask$6129$Od@c8)
              g$ei2$6127$Od@c8)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6115$Od@c8
             '-1
             g$ei3$6128$Od@c8))))))
   (g$bitwise-copy-bit-field$6114$Od@c8
     g$bitwise-copy-bit-field$6165$Od@c8
     (case-lambda
       ((g$ei1$6130$Od@c8 g$ei2$6131$Od@c8 g$ei3$6132$Od@c8 g$ei4$6133$Od@c8)
        ((case-lambda
           ((g$to$6134$Od@c8)
            ((case-lambda
               ((g$start$6135$Od@c8)
                ((case-lambda
                   ((g$end$6136$Od@c8)
                    ((case-lambda
                       ((g$from$6137$Od@c8)
                        ((case-lambda
                           ((g$mask1$6138$Od@c8)
                            ((case-lambda
                               ((g$mask2$6139$Od@c8)
                                ((case-lambda
                                   ((g$mask$6140$Od@c8)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6111$Od@c8
                                          g$mask$6140$Od@c8
                                          (g$bitwise-arithmetic-shift-left$6115$Od@c8
                                            g$from$6137$Od@c8
                                            g$start$6135$Od@c8)
                                          g$to$6134$Od@c8))))))
                                 (bitwise-and
                                   g$mask1$6138$Od@c8
                                   g$mask2$6139$Od@c8))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6115$Od@c8
                                 '-1
                                 g$end$6136$Od@c8)))))
                         (g$bitwise-arithmetic-shift-left$6115$Od@c8
                           '-1
                           g$start$6135$Od@c8))))
                     g$ei4$6133$Od@c8)))
                 g$ei3$6132$Od@c8)))
             g$ei2$6131$Od@c8)))
         g$ei1$6130$Od@c8))))
   (g$bitwise-arithmetic-shift-left$6115$Od@c8
     g$bitwise-arithmetic-shift-left$6166$Od@c8
     (case-lambda
       ((g$ei1$6141$Od@c8 g$ei2$6142$Od@c8)
        (bitwise-arithmetic-shift g$ei1$6141$Od@c8 g$ei2$6142$Od@c8))))
   (g$bitwise-arithmetic-shift-right$6116$Od@c8
     g$bitwise-arithmetic-shift-right$6167$Od@c8
     (case-lambda
       ((g$ei1$6143$Od@c8 g$ei2$6144$Od@c8)
        (bitwise-arithmetic-shift g$ei1$6143$Od@c8 (- g$ei2$6144$Od@c8)))))
   (g$bitwise-rotate-bit-field$6117$Od@c8
     g$bitwise-rotate-bit-field$6168$Od@c8
     (case-lambda
       ((g$ei1$6145$Od@c8 g$ei2$6146$Od@c8 g$ei3$6147$Od@c8 g$ei4$6148$Od@c8)
        ((case-lambda
           ((g$n$6149$Od@c8)
            ((case-lambda
               ((g$start$6150$Od@c8)
                ((case-lambda
                   ((g$end$6151$Od@c8)
                    ((case-lambda
                       ((g$count$6152$Od@c8)
                        ((case-lambda
                           ((g$width$6153$Od@c8)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6153$Od@c8)
                                  ((case-lambda
                                     ((g$count$6154$Od@c8)
                                      ((case-lambda
                                         ((g$field0$6155$Od@c8)
                                          ((case-lambda
                                             ((g$field1$6156$Od@c8)
                                              ((case-lambda
                                                 ((g$field2$6157$Od@c8)
                                                  ((case-lambda
                                                     ((g$field$6158$Od@c8)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6114$Od@c8
                                                            g$n$6149$Od@c8
                                                            g$start$6150$Od@c8
                                                            g$end$6151$Od@c8
                                                            g$field$6158$Od@c8))))))
                                                   (bitwise-ior
                                                     g$field1$6156$Od@c8
                                                     g$field2$6157$Od@c8))))
                                               (g$bitwise-arithmetic-shift-right$6116$Od@c8
                                                 g$field0$6155$Od@c8
                                                 (- g$width$6153$Od@c8
                                                    g$count$6154$Od@c8)))))
                                           (g$bitwise-arithmetic-shift-left$6115$Od@c8
                                             g$field0$6155$Od@c8
                                             g$count$6154$Od@c8))))
                                       (g$bitwise-bit-field$6113$Od@c8
                                         g$n$6149$Od@c8
                                         g$start$6150$Od@c8
                                         g$end$6151$Od@c8))))
                                   (mod g$count$6152$Od@c8 g$width$6153$Od@c8))
                                  g$n$6149$Od@c8))))))
                         (- g$end$6151$Od@c8 g$start$6150$Od@c8))))
                     g$ei4$6148$Od@c8)))
                 g$ei3$6147$Od@c8)))
             g$ei2$6146$Od@c8)))
         g$ei1$6145$Od@c8))))
   (g$bitwise-reverse-bit-field$6118$Od@c8
     g$bitwise-reverse-bit-field$6169$Od@c8
     (case-lambda
       ((g$ei1$6159$Od@c8 g$ei2$6160$Od@c8 g$ei3$6161$Od@c8) 'TODO))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6170$Od@c8
     g$fxif$6217$Od@c8
     (case-lambda
       ((g$fx1$6177$Od@c8 g$fx2$6178$Od@c8 g$fx3$6179$Od@c8)
        (fxior
          (fxand g$fx1$6177$Od@c8 g$fx2$6178$Od@c8)
          (fxand (fxnot g$fx1$6177$Od@c8) g$fx3$6179$Od@c8)))))
   (g$fxcopy-bit$6171$Od@c8
     g$fxcopy-bit$6218$Od@c8
     (case-lambda
       ((g$fx1$6180$Od@c8 g$fx2$6181$Od@c8 g$fx3$6182$Od@c8)
        ((case-lambda
           ((g$mask$6183$Od@c8)
            ((case-lambda
               (()
                (g$fxif$6170$Od@c8
                  g$mask$6183$Od@c8
                  (g$fxarithmetic-shift-left$6174$Od@c8
                    g$fx3$6182$Od@c8
                    g$fx2$6181$Od@c8)
                  g$fx1$6180$Od@c8))))))
         (g$fxarithmetic-shift-left$6174$Od@c8 '1 g$fx2$6181$Od@c8)))))
   (g$fxbit-field$6172$Od@c8
     g$fxbit-field$6219$Od@c8
     (case-lambda
       ((g$fx1$6184$Od@c8 g$fx2$6185$Od@c8 g$fx3$6186$Od@c8)
        ((case-lambda
           ((g$mask$6187$Od@c8)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6175$Od@c8
                  (fxand g$fx1$6184$Od@c8 g$mask$6187$Od@c8)
                  g$fx2$6185$Od@c8))))))
         (fxnot (g$fxarithmetic-shift-left$6174$Od@c8 '-1 g$fx3$6186$Od@c8))))))
   (g$fxcopy-bit-field$6173$Od@c8
     g$fxcopy-bit-field$6220$Od@c8
     (case-lambda
       ((g$fx1$6188$Od@c8 g$fx2$6189$Od@c8 g$fx3$6190$Od@c8 g$fx4$6191$Od@c8)
        ((case-lambda
           ((g$to$6192$Od@c8)
            ((case-lambda
               ((g$start$6193$Od@c8)
                ((case-lambda
                   ((g$end$6194$Od@c8)
                    ((case-lambda
                       ((g$from$6195$Od@c8)
                        ((case-lambda
                           ((g$mask1$6196$Od@c8)
                            ((case-lambda
                               ((g$mask2$6197$Od@c8)
                                ((case-lambda
                                   ((g$mask$6198$Od@c8)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6170$Od@c8
                                          g$mask$6198$Od@c8
                                          (g$fxarithmetic-shift-left$6174$Od@c8
                                            g$from$6195$Od@c8
                                            g$start$6193$Od@c8)
                                          g$to$6192$Od@c8))))))
                                 (fxand
                                   g$mask1$6196$Od@c8
                                   g$mask2$6197$Od@c8))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6174$Od@c8
                                 '-1
                                 g$end$6194$Od@c8)))))
                         (g$fxarithmetic-shift-left$6174$Od@c8
                           '-1
                           g$start$6193$Od@c8))))
                     g$fx4$6191$Od@c8)))
                 g$fx3$6190$Od@c8)))
             g$fx2$6189$Od@c8)))
         g$fx1$6188$Od@c8))))
   (g$fxarithmetic-shift-left$6174$Od@c8
     g$fxarithmetic-shift-left$6221$Od@c8
     (case-lambda
       ((g$fx1$6199$Od@c8 g$fx2$6200$Od@c8)
        (fxarithmetic-shift g$fx1$6199$Od@c8 g$fx2$6200$Od@c8))))
   (g$fxarithmetic-shift-right$6175$Od@c8
     g$fxarithmetic-shift-right$6222$Od@c8
     (case-lambda
       ((g$fx1$6201$Od@c8 g$fx2$6202$Od@c8)
        (fxarithmetic-shift g$fx1$6201$Od@c8 (- g$fx2$6202$Od@c8)))))
   (g$fxrotate-bit-field$6176$Od@c8
     g$fxrotate-bit-field$6223$Od@c8
     (case-lambda
       ((g$fx1$6203$Od@c8 g$fx2$6204$Od@c8 g$fx3$6205$Od@c8 g$fx4$6206$Od@c8)
        ((case-lambda
           ((g$n$6207$Od@c8)
            ((case-lambda
               ((g$start$6208$Od@c8)
                ((case-lambda
                   ((g$end$6209$Od@c8)
                    ((case-lambda
                       ((g$count$6210$Od@c8)
                        ((case-lambda
                           ((g$width$6211$Od@c8)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6211$Od@c8)
                                  ((case-lambda
                                     ((g$count$6212$Od@c8)
                                      ((case-lambda
                                         ((g$field0$6213$Od@c8)
                                          ((case-lambda
                                             ((g$field1$6214$Od@c8)
                                              ((case-lambda
                                                 ((g$field2$6215$Od@c8)
                                                  ((case-lambda
                                                     ((g$field$6216$Od@c8)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6173$Od@c8
                                                            g$n$6207$Od@c8
                                                            g$start$6208$Od@c8
                                                            g$end$6209$Od@c8
                                                            g$field$6216$Od@c8))))))
                                                   (fxior
                                                     g$field1$6214$Od@c8
                                                     g$field2$6215$Od@c8))))
                                               (g$fxarithmetic-shift-right$6175$Od@c8
                                                 g$field0$6213$Od@c8
                                                 (- g$width$6211$Od@c8
                                                    g$count$6212$Od@c8)))))
                                           (g$fxarithmetic-shift-left$6174$Od@c8
                                             g$field0$6213$Od@c8
                                             g$count$6212$Od@c8))))
                                       (g$fxbit-field$6172$Od@c8
                                         g$n$6207$Od@c8
                                         g$start$6208$Od@c8
                                         g$end$6209$Od@c8))))
                                   (mod g$count$6210$Od@c8 g$width$6211$Od@c8))
                                  g$n$6207$Od@c8))))))
                         (- g$end$6209$Od@c8 g$start$6208$Od@c8))))
                     g$fx4$6206$Od@c8)))
                 g$fx3$6205$Od@c8)))
             g$fx2$6204$Od@c8)))
         g$fx1$6203$Od@c8)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$6703$6224$Od@c8
     g$6703$6236$Od@c8
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$6706$Od@c8
       '#f
       '#f
       '#()))
   (g$6705$6225$Od@c8 g$6705$6237$Od@c8 '#f)
   (g$6704$6226$Od@c8
     g$6704$6238$Od@c8
     (make-record-constructor-descriptor
       g$6703$6224$Od@c8
       &implementation-restriction-rcd
       g$6705$6225$Od@c8))
   (g$6702$6227$Od@c8 g$6702$6239$Od@c8 (record-predicate g$6703$6224$Od@c8))
   (g$make-no-infinities-violation$6228$Od@c8
     g$make-no-infinities-violation$6240$Od@c8
     (record-constructor g$6704$6226$Od@c8))
   (g$no-infinities-violation?$6229$Od@c8
     g$no-infinities-violation?$6241$Od@c8
     (condition-predicate g$6703$6224$Od@c8))
   (g$6717$6230$Od@c8
     g$6717$6242$Od@c8
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$6720$Od@c8
       '#f
       '#f
       '#()))
   (g$6719$6231$Od@c8 g$6719$6243$Od@c8 '#f)
   (g$6718$6232$Od@c8
     g$6718$6244$Od@c8
     (make-record-constructor-descriptor
       g$6717$6230$Od@c8
       &implementation-restriction-rcd
       g$6719$6231$Od@c8))
   (g$6716$6233$Od@c8 g$6716$6245$Od@c8 (record-predicate g$6717$6230$Od@c8))
   (g$make-no-nans-violation$6234$Od@c8
     g$make-no-nans-violation$6246$Od@c8
     (record-constructor g$6718$6232$Od@c8))
   (g$no-nans-violation?$6235$Od@c8
     g$no-nans-violation?$6247$Od@c8
     (condition-predicate g$6717$6230$Od@c8)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$6732$6248$Od@c8
     g$6732$6328$Od@c8
     (make-record-type-descriptor '&i/o &error-rtd 'g$6735$Od@c8 '#f '#f '#()))
   (g$6734$6249$Od@c8 g$6734$6329$Od@c8 '#f)
   (g$6733$6250$Od@c8
     g$6733$6330$Od@c8
     (make-record-constructor-descriptor
       g$6732$6248$Od@c8
       &error-rcd
       g$6734$6249$Od@c8))
   (g$6731$6251$Od@c8 g$6731$6331$Od@c8 (record-predicate g$6732$6248$Od@c8))
   (g$make-i/o-error$6252$Od@c8
     g$make-i/o-error$6332$Od@c8
     (record-constructor g$6733$6250$Od@c8))
   (g$i/o-error?$6253$Od@c8
     g$i/o-error?$6333$Od@c8
     (condition-predicate g$6732$6248$Od@c8))
   (g$6746$6254$Od@c8
     g$6746$6334$Od@c8
     (make-record-type-descriptor
       '&i/o-read
       g$6732$6248$Od@c8
       'g$6749$Od@c8
       '#f
       '#f
       '#()))
   (g$6748$6255$Od@c8 g$6748$6335$Od@c8 '#f)
   (g$6747$6256$Od@c8
     g$6747$6336$Od@c8
     (make-record-constructor-descriptor
       g$6746$6254$Od@c8
       g$6733$6250$Od@c8
       g$6748$6255$Od@c8))
   (g$6745$6257$Od@c8 g$6745$6337$Od@c8 (record-predicate g$6746$6254$Od@c8))
   (g$make-i/o-read-error$6258$Od@c8
     g$make-i/o-read-error$6338$Od@c8
     (record-constructor g$6747$6256$Od@c8))
   (g$i/o-read-error?$6259$Od@c8
     g$i/o-read-error?$6339$Od@c8
     (condition-predicate g$6746$6254$Od@c8))
   (g$6760$6260$Od@c8
     g$6760$6340$Od@c8
     (make-record-type-descriptor
       '&i/o-write
       g$6732$6248$Od@c8
       'g$6763$Od@c8
       '#f
       '#f
       '#()))
   (g$6762$6261$Od@c8 g$6762$6341$Od@c8 '#f)
   (g$6761$6262$Od@c8
     g$6761$6342$Od@c8
     (make-record-constructor-descriptor
       g$6760$6260$Od@c8
       g$6733$6250$Od@c8
       g$6762$6261$Od@c8))
   (g$6759$6263$Od@c8 g$6759$6343$Od@c8 (record-predicate g$6760$6260$Od@c8))
   (g$make-i/o-write-error$6264$Od@c8
     g$make-i/o-write-error$6344$Od@c8
     (record-constructor g$6761$6262$Od@c8))
   (g$i/o-write-error?$6265$Od@c8
     g$i/o-write-error?$6345$Od@c8
     (condition-predicate g$6760$6260$Od@c8))
   (g$6775$6266$Od@c8
     g$6775$6346$Od@c8
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6732$6248$Od@c8
       'g$6778$Od@c8
       '#f
       '#f
       '#((immutable position))))
   (g$6777$6267$Od@c8 g$6777$6347$Od@c8 '#f)
   (g$6776$6268$Od@c8
     g$6776$6348$Od@c8
     (make-record-constructor-descriptor
       g$6775$6266$Od@c8
       g$6733$6250$Od@c8
       g$6777$6267$Od@c8))
   (g$6774$6269$Od@c8 g$6774$6349$Od@c8 (record-predicate g$6775$6266$Od@c8))
   (g$make-i/o-invalid-position-error$6270$Od@c8
     g$make-i/o-invalid-position-error$6350$Od@c8
     (record-constructor g$6776$6268$Od@c8))
   (g$6773$6271$Od@c8 g$6773$6351$Od@c8 (record-accessor g$6775$6266$Od@c8 '0))
   (g$i/o-invalid-position-error?$6272$Od@c8
     g$i/o-invalid-position-error?$6352$Od@c8
     (condition-predicate g$6775$6266$Od@c8))
   (g$i/o-error-position$6273$Od@c8
     g$i/o-error-position$6353$Od@c8
     (condition-accessor g$6775$6266$Od@c8 g$6773$6271$Od@c8))
   (g$6792$6274$Od@c8
     g$6792$6354$Od@c8
     (make-record-type-descriptor
       '&i/o-filename
       g$6732$6248$Od@c8
       'g$6795$Od@c8
       '#f
       '#f
       '#((immutable filename))))
   (g$6794$6275$Od@c8 g$6794$6355$Od@c8 '#f)
   (g$6793$6276$Od@c8
     g$6793$6356$Od@c8
     (make-record-constructor-descriptor
       g$6792$6274$Od@c8
       g$6733$6250$Od@c8
       g$6794$6275$Od@c8))
   (g$6791$6277$Od@c8 g$6791$6357$Od@c8 (record-predicate g$6792$6274$Od@c8))
   (g$make-i/o-filename-error$6278$Od@c8
     g$make-i/o-filename-error$6358$Od@c8
     (record-constructor g$6793$6276$Od@c8))
   (g$6790$6279$Od@c8 g$6790$6359$Od@c8 (record-accessor g$6792$6274$Od@c8 '0))
   (g$i/o-filename-error?$6280$Od@c8
     g$i/o-filename-error?$6360$Od@c8
     (condition-predicate g$6792$6274$Od@c8))
   (g$i/o-error-filename$6281$Od@c8
     g$i/o-error-filename$6361$Od@c8
     (condition-accessor g$6792$6274$Od@c8 g$6790$6279$Od@c8))
   (g$6808$6282$Od@c8
     g$6808$6362$Od@c8
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6732$6248$Od@c8
       'g$6811$Od@c8
       '#f
       '#f
       '#()))
   (g$6810$6283$Od@c8 g$6810$6363$Od@c8 '#f)
   (g$6809$6284$Od@c8
     g$6809$6364$Od@c8
     (make-record-constructor-descriptor
       g$6808$6282$Od@c8
       g$6733$6250$Od@c8
       g$6810$6283$Od@c8))
   (g$6807$6285$Od@c8 g$6807$6365$Od@c8 (record-predicate g$6808$6282$Od@c8))
   (g$make-i/o-file-protection-error$6286$Od@c8
     g$make-i/o-file-protection-error$6366$Od@c8
     (record-constructor g$6809$6284$Od@c8))
   (g$i/o-file-protection-error?$6287$Od@c8
     g$i/o-file-protection-error?$6367$Od@c8
     (condition-predicate g$6808$6282$Od@c8))
   (g$6822$6288$Od@c8
     g$6822$6368$Od@c8
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6808$6282$Od@c8
       'g$6825$Od@c8
       '#f
       '#f
       '#()))
   (g$6824$6289$Od@c8 g$6824$6369$Od@c8 '#f)
   (g$6823$6290$Od@c8
     g$6823$6370$Od@c8
     (make-record-constructor-descriptor
       g$6822$6288$Od@c8
       g$6809$6284$Od@c8
       g$6824$6289$Od@c8))
   (g$6821$6291$Od@c8 g$6821$6371$Od@c8 (record-predicate g$6822$6288$Od@c8))
   (g$make-i/o-file-is-read-only-error$6292$Od@c8
     g$make-i/o-file-is-read-only-error$6372$Od@c8
     (record-constructor g$6823$6290$Od@c8))
   (g$i/o-file-is-read-only-error?$6293$Od@c8
     g$i/o-file-is-read-only-error?$6373$Od@c8
     (condition-predicate g$6822$6288$Od@c8))
   (g$6836$6294$Od@c8
     g$6836$6374$Od@c8
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6792$6274$Od@c8
       'g$6839$Od@c8
       '#f
       '#f
       '#()))
   (g$6838$6295$Od@c8 g$6838$6375$Od@c8 '#f)
   (g$6837$6296$Od@c8
     g$6837$6376$Od@c8
     (make-record-constructor-descriptor
       g$6836$6294$Od@c8
       g$6793$6276$Od@c8
       g$6838$6295$Od@c8))
   (g$6835$6297$Od@c8 g$6835$6377$Od@c8 (record-predicate g$6836$6294$Od@c8))
   (g$make-i/o-file-already-exists-error$6298$Od@c8
     g$make-i/o-file-already-exists-error$6378$Od@c8
     (record-constructor g$6837$6296$Od@c8))
   (g$i/o-file-already-exists-error?$6299$Od@c8
     g$i/o-file-already-exists-error?$6379$Od@c8
     (condition-predicate g$6836$6294$Od@c8))
   (g$6850$6300$Od@c8
     g$6850$6380$Od@c8
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6792$6274$Od@c8
       'g$6853$Od@c8
       '#f
       '#f
       '#()))
   (g$6852$6301$Od@c8 g$6852$6381$Od@c8 '#f)
   (g$6851$6302$Od@c8
     g$6851$6382$Od@c8
     (make-record-constructor-descriptor
       g$6850$6300$Od@c8
       g$6793$6276$Od@c8
       g$6852$6301$Od@c8))
   (g$6849$6303$Od@c8 g$6849$6383$Od@c8 (record-predicate g$6850$6300$Od@c8))
   (g$make-i/o-file-does-not-exist-error$6304$Od@c8
     g$make-i/o-file-does-not-exist-error$6384$Od@c8
     (record-constructor g$6851$6302$Od@c8))
   (g$i/o-file-does-not-exist-error?$6305$Od@c8
     g$i/o-file-does-not-exist-error?$6385$Od@c8
     (condition-predicate g$6850$6300$Od@c8))
   (g$6865$6306$Od@c8
     g$6865$6386$Od@c8
     (make-record-type-descriptor
       '&i/o-port
       g$6732$6248$Od@c8
       'g$6868$Od@c8
       '#f
       '#f
       '#((immutable port))))
   (g$6867$6307$Od@c8 g$6867$6387$Od@c8 '#f)
   (g$6866$6308$Od@c8
     g$6866$6388$Od@c8
     (make-record-constructor-descriptor
       g$6865$6306$Od@c8
       g$6733$6250$Od@c8
       g$6867$6307$Od@c8))
   (g$6864$6309$Od@c8 g$6864$6389$Od@c8 (record-predicate g$6865$6306$Od@c8))
   (g$make-i/o-port-error$6310$Od@c8
     g$make-i/o-port-error$6390$Od@c8
     (record-constructor g$6866$6308$Od@c8))
   (g$6863$6311$Od@c8 g$6863$6391$Od@c8 (record-accessor g$6865$6306$Od@c8 '0))
   (g$i/o-port-error?$6312$Od@c8
     g$i/o-port-error?$6392$Od@c8
     (condition-predicate g$6865$6306$Od@c8))
   (g$i/o-error-port$6313$Od@c8
     g$i/o-error-port$6393$Od@c8
     (condition-accessor g$6865$6306$Od@c8 g$6863$6311$Od@c8))
   (g$6881$6314$Od@c8
     g$6881$6394$Od@c8
     (make-record-type-descriptor
       '&i/o-decoding
       g$6865$6306$Od@c8
       'g$6884$Od@c8
       '#f
       '#f
       '#()))
   (g$6883$6315$Od@c8 g$6883$6395$Od@c8 '#f)
   (g$6882$6316$Od@c8
     g$6882$6396$Od@c8
     (make-record-constructor-descriptor
       g$6881$6314$Od@c8
       g$6866$6308$Od@c8
       g$6883$6315$Od@c8))
   (g$6880$6317$Od@c8 g$6880$6397$Od@c8 (record-predicate g$6881$6314$Od@c8))
   (g$make-i/o-decoding-error$6318$Od@c8
     g$make-i/o-decoding-error$6398$Od@c8
     (record-constructor g$6882$6316$Od@c8))
   (g$i/o-decoding-error?$6319$Od@c8
     g$i/o-decoding-error?$6399$Od@c8
     (condition-predicate g$6881$6314$Od@c8))
   (g$6896$6320$Od@c8
     g$6896$6400$Od@c8
     (make-record-type-descriptor
       '&i/o-encoding
       g$6865$6306$Od@c8
       'g$6899$Od@c8
       '#f
       '#f
       '#((immutable char))))
   (g$6898$6321$Od@c8 g$6898$6401$Od@c8 '#f)
   (g$6897$6322$Od@c8
     g$6897$6402$Od@c8
     (make-record-constructor-descriptor
       g$6896$6320$Od@c8
       g$6866$6308$Od@c8
       g$6898$6321$Od@c8))
   (g$6895$6323$Od@c8 g$6895$6403$Od@c8 (record-predicate g$6896$6320$Od@c8))
   (g$make-i/o-encoding-error$6324$Od@c8
     g$make-i/o-encoding-error$6404$Od@c8
     (record-constructor g$6897$6322$Od@c8))
   (g$6894$6325$Od@c8 g$6894$6405$Od@c8 (record-accessor g$6896$6320$Od@c8 '0))
   (g$i/o-encoding-error?$6326$Od@c8
     g$i/o-encoding-error?$6406$Od@c8
     (condition-predicate g$6896$6320$Od@c8))
   (g$i/o-encoding-error-char$6327$Od@c8
     g$i/o-encoding-error-char$6407$Od@c8
     (condition-accessor g$6896$6320$Od@c8 g$6894$6325$Od@c8)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6408$Od@c8
     g$get-output-string$6413$Od@c8
     (case-lambda
       ((g$port$6411$Od@c8)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6411$Od@c8))))
   (g$open-output-string$6409$Od@c8
     g$open-output-string$6414$Od@c8
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6410$Od@c8
     g$open-string-output-port$6415$Od@c8
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6412$Od@c8)
            (values
              g$p$6412$Od@c8
              (case-lambda
                (() (g$get-output-string$6408$Od@c8 g$p$6412$Od@c8))))))
         (g$open-output-string$6409$Od@c8))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme format)
  ((g$dofmt$6416$Od@c8
     g$dofmt$6438$Od@c8
     (case-lambda
       ((g$p$6420$Od@c8 g$cntl$6421$Od@c8 g$args$6422$Od@c8)
        ((case-lambda
           ((g$nmax$6423$Od@c8)
            ((letrec ((g$loop$6424$Od@c8
                        (case-lambda
                          ((g$n$6425$Od@c8 g$a$6426$Od@c8)
                           (if (fx<=? g$n$6425$Od@c8 g$nmax$6423$Od@c8)
                             ((case-lambda
                                ((g$c$6427$Od@c8)
                                 (if (if (char=? g$c$6427$Od@c8 '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6425$Od@c8
                                           g$nmax$6423$Od@c8))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6428$Od@c8)
                                       (if (eqv? g$t$6428$Od@c8 '#\a)
                                         (begin
                                           (display
                                             (car g$a$6426$Od@c8)
                                             g$p$6420$Od@c8)
                                           (g$loop$6424$Od@c8
                                             (fx+ g$n$6425$Od@c8 '2)
                                             (cdr g$a$6426$Od@c8)))
                                         (if (eqv? g$t$6428$Od@c8 '#\s)
                                           (begin
                                             (write
                                               (car g$a$6426$Od@c8)
                                               g$p$6420$Od@c8)
                                             (g$loop$6424$Od@c8
                                               (fx+ g$n$6425$Od@c8 '2)
                                               (cdr g$a$6426$Od@c8)))
                                           (if (eqv? g$t$6428$Od@c8 '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6426$Od@c8)
                                                   '2)
                                                 g$p$6420$Od@c8)
                                               (g$loop$6424$Od@c8
                                                 (fx+ g$n$6425$Od@c8 '2)
                                                 (cdr g$a$6426$Od@c8)))
                                             (if (eqv? g$t$6428$Od@c8 '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6426$Od@c8)
                                                     '8)
                                                   g$p$6420$Od@c8)
                                                 (g$loop$6424$Od@c8
                                                   (fx+ g$n$6425$Od@c8 '2)
                                                   (cdr g$a$6426$Od@c8)))
                                               (if (eqv? g$t$6428$Od@c8 '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6426$Od@c8)
                                                       '16)
                                                     g$p$6420$Od@c8)
                                                   (g$loop$6424$Od@c8
                                                     (fx+ g$n$6425$Od@c8 '2)
                                                     (cdr g$a$6426$Od@c8)))
                                                 (if (eqv? g$t$6428$Od@c8 '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6426$Od@c8)
                                                         '10)
                                                       g$p$6420$Od@c8)
                                                     (g$loop$6424$Od@c8
                                                       (fx+ g$n$6425$Od@c8 '2)
                                                       (cdr g$a$6426$Od@c8)))
                                                   (if (eqv?
                                                         g$t$6428$Od@c8
                                                         '#\~)
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6420$Od@c8)
                                                       (g$loop$6424$Od@c8
                                                         (fx+ g$n$6425$Od@c8 '2)
                                                         g$a$6426$Od@c8))
                                                     (begin
                                                       (write-char
                                                         g$c$6427$Od@c8
                                                         g$p$6420$Od@c8)
                                                       (g$loop$6424$Od@c8
                                                         (fx+ g$n$6425$Od@c8 '1)
                                                         g$a$6426$Od@c8)))))))))))
                                    (string-ref
                                      g$cntl$6421$Od@c8
                                      (fx+ g$n$6425$Od@c8 '1)))
                                   (begin
                                     (write-char g$c$6427$Od@c8 g$p$6420$Od@c8)
                                     (g$loop$6424$Od@c8
                                       (fx+ g$n$6425$Od@c8 '1)
                                       g$a$6426$Od@c8)))))
                              (string-ref g$cntl$6421$Od@c8 g$n$6425$Od@c8))
                             (void))))))
               g$loop$6424$Od@c8)
             '0
             g$args$6422$Od@c8)))
         (fx- (string-length g$cntl$6421$Od@c8) '1)))))
   (g$printf$6417$Od@c8
     g$printf$6439$Od@c8
     (case-lambda
       ((g$control$6429$Od@c8 . g$args$6430$Od@c8)
        (g$dofmt$6416$Od@c8
          (current-output-port)
          g$control$6429$Od@c8
          g$args$6430$Od@c8))))
   (g$fprintf$6418$Od@c8
     g$fprintf$6440$Od@c8
     (case-lambda
       ((g$p$6431$Od@c8 g$control$6432$Od@c8 . g$args$6433$Od@c8)
        (g$dofmt$6416$Od@c8
          g$p$6431$Od@c8
          g$control$6432$Od@c8
          g$args$6433$Od@c8))))
   (g$format$6419$Od@c8
     g$format$6441$Od@c8
     (case-lambda
       ((g$control$6434$Od@c8 . g$args$6435$Od@c8)
        (call-with-values
          g$open-string-output-port$6415$Od@c8
          (case-lambda
            ((g$p$6436$Od@c8 g$c$6437$Od@c8)
             (begin
               (g$dofmt$6416$Od@c8
                 g$p$6436$Od@c8
                 g$control$6434$Od@c8
                 g$args$6435$Od@c8)
               (g$c$6437$Od@c8)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6442$Od@c8
     g$make-traced-macro$6445$Od@c8
     (case-lambda
       ((g$name$6443$Od@c8 g$x$6444$Od@c8)
        (if (procedure? g$x$6444$Od@c8)
          (make-traced-procedure g$name$6443$Od@c8 g$x$6444$Od@c8)
          (if (g$variable-transformer?$10903$Od@c8 g$x$6444$Od@c8)
            (g$make-variable-transformer$10902$Od@c8
              (make-traced-procedure
                g$name$6443$Od@c8
                (g$variable-transformer-procedure$10904$Od@c8 g$x$6444$Od@c8)
                g$syntax->datum$11075$Od@c8))
            g$x$6444$Od@c8))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6446$Od@c8
     g$read-library-source-file$6524$Od@c8
     (case-lambda
       ((g$file-name$6516$Od@c8)
        (with-input-from-file g$file-name$6516$Od@c8 read-annotated))))
   (g$make-parameter$6447$Od@c8
     g$make-parameter$6525$Od@c8
     (case-lambda
       ((g$x$6517$Od@c8)
        (g$make-parameter$6447$Od@c8
          g$x$6517$Od@c8
          (case-lambda ((g$x$6518$Od@c8) g$x$6518$Od@c8))))
       ((g$x$6519$Od@c8 g$fender$6520$Od@c8)
        (begin
          (if (procedure? g$fender$6520$Od@c8)
            (void)
            (assertion-violation
              'assert
              '"assertion failed"
              '(procedure? fender)))
          ((case-lambda
             ((g$x$6521$Od@c8)
              (case-lambda
                (() g$x$6521$Od@c8)
                ((g$v$6522$Od@c8)
                 (set! g$x$6521$Od@c8 (g$fender$6520$Od@c8 g$v$6522$Od@c8))))))
           (g$fender$6520$Od@c8 g$x$6519$Od@c8))))))
   (g$file-options-spec$6515$Od@c8
     g$file-options-spec$6526$Od@c8
     (case-lambda ((g$x$6523$Od@c8) g$x$6523$Od@c8))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6722$Od@c8
     g$current-primitive-locations$6767$Od@c8
     (g$make-parameter$6525$Od@c8
       (case-lambda ((g$x$6728$Od@c8) '#f))
       (case-lambda
         ((g$p$6729$Od@c8)
          (begin
            (if (procedure? g$p$6729$Od@c8)
              (void)
              (assertion-violation 'assert '"assertion failed" '(procedure? p)))
            g$p$6729$Od@c8)))))
   (g$mutable?$6723$Od@c8
     g$mutable?$6768$Od@c8
     (case-lambda
       ((g$x$6730$Od@c8)
        (letrec* ((g$simple?$6731$Od@c8
                    (case-lambda
                      ((g$x$6732$Od@c8)
                       ((case-lambda
                          ((g$t$6733$Od@c8)
                           (if g$t$6733$Od@c8
                             g$t$6733$Od@c8
                             ((case-lambda
                                ((g$t$6734$Od@c8)
                                 (if g$t$6734$Od@c8
                                   g$t$6734$Od@c8
                                   ((case-lambda
                                      ((g$t$6735$Od@c8)
                                       (if g$t$6735$Od@c8
                                         g$t$6735$Od@c8
                                         ((case-lambda
                                            ((g$t$6736$Od@c8)
                                             (if g$t$6736$Od@c8
                                               g$t$6736$Od@c8
                                               ((case-lambda
                                                  ((g$t$6737$Od@c8)
                                                   (if g$t$6737$Od@c8
                                                     g$t$6737$Od@c8
                                                     ((case-lambda
                                                        ((g$t$6738$Od@c8)
                                                         (if g$t$6738$Od@c8
                                                           g$t$6738$Od@c8
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6732$Od@c8)))))
                                                      (bytevector?
                                                        g$x$6732$Od@c8)))))
                                                (string? g$x$6732$Od@c8)))))
                                          (boolean? g$x$6732$Od@c8)))))
                                    (symbol? g$x$6732$Od@c8)))))
                              (char? g$x$6732$Od@c8)))))
                        (null? g$x$6732$Od@c8))))))
          (not (g$simple?$6731$Od@c8 g$x$6730$Od@c8))))))
   (g$rewriter$6724$Od@c8
     g$rewriter$6769$Od@c8
     (case-lambda
       ((g$quote-hack?$6739$Od@c8)
        (letrec* ((g$f$6740$Od@c8
                    (case-lambda
                      ((g$x$6741$Od@c8)
                       (if (pair? g$x$6741$Od@c8)
                         ((case-lambda
                            ((g$t$6742$Od@c8)
                             (if (eqv? g$t$6742$Od@c8 'quote)
                               (if (if g$quote-hack?$6739$Od@c8
                                     (begin
                                       '#f
                                       (g$mutable?$6723$Od@c8
                                         (g$cadr$5216$Od@c8 g$x$6741$Od@c8)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6762$Od@c8)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6762$Od@c8
                                         (g$cadr$5216$Od@c8 g$x$6741$Od@c8))
                                       g$g$6762$Od@c8)))
                                  (gensym))
                                 g$x$6741$Od@c8)
                               (if (eqv? g$t$6742$Od@c8 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6761$Od@c8)
                                           (cons
                                             (car g$x$6761$Od@c8)
                                             (map g$f$6740$Od@c8
                                                  (cdr g$x$6761$Od@c8)))))
                                        (cdr g$x$6741$Od@c8)))
                                 (if (eqv? g$t$6742$Od@c8 'lambda)
                                   (g$cons*$5687$Od@c8
                                     'lambda
                                     (g$cadr$5216$Od@c8 g$x$6741$Od@c8)
                                     (map g$f$6740$Od@c8
                                          (g$cddr$5218$Od@c8 g$x$6741$Od@c8)))
                                   (if (eqv? g$t$6742$Od@c8 'letrec)
                                     ((case-lambda
                                        ((g$bindings$6757$Od@c8
                                           g$body*$6758$Od@c8)
                                         ((case-lambda
                                            ((g$lhs*$6759$Od@c8
                                               g$rhs*$6760$Od@c8)
                                             (g$cons*$5687$Od@c8
                                               'letrec
                                               (map list
                                                    g$lhs*$6759$Od@c8
                                                    (map g$f$6740$Od@c8
                                                         g$rhs*$6760$Od@c8))
                                               (map g$f$6740$Od@c8
                                                    g$body*$6758$Od@c8))))
                                          (map car g$bindings$6757$Od@c8)
                                          (map g$cadr$5216$Od@c8
                                               g$bindings$6757$Od@c8))))
                                      (g$cadr$5216$Od@c8 g$x$6741$Od@c8)
                                      (g$cddr$5218$Od@c8 g$x$6741$Od@c8))
                                     (if (eqv? g$t$6742$Od@c8 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$6753$Od@c8
                                             g$body*$6754$Od@c8)
                                           ((case-lambda
                                              ((g$lhs*$6755$Od@c8
                                                 g$rhs*$6756$Od@c8)
                                               (g$cons*$5687$Od@c8
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6755$Od@c8
                                                      (map g$f$6740$Od@c8
                                                           g$rhs*$6756$Od@c8))
                                                 (map g$f$6740$Od@c8
                                                      g$body*$6754$Od@c8))))
                                            (map car g$bindings$6753$Od@c8)
                                            (map g$cadr$5216$Od@c8
                                                 g$bindings$6753$Od@c8))))
                                        (g$cadr$5216$Od@c8 g$x$6741$Od@c8)
                                        (g$cddr$5218$Od@c8 g$x$6741$Od@c8))
                                       (if (eqv?
                                             g$t$6742$Od@c8
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$6746$Od@c8 g$x$6747$Od@c8)
                                             ((case-lambda
                                                ((g$bindings$6748$Od@c8
                                                   g$body*$6749$Od@c8)
                                                 ((case-lambda
                                                    ((g$lhs*$6750$Od@c8
                                                       g$lhs**$6751$Od@c8
                                                       g$rhs*$6752$Od@c8)
                                                     (g$cons*$5687$Od@c8
                                                       'library-letrec*
                                                       g$name$6746$Od@c8
                                                       (map list
                                                            g$lhs*$6750$Od@c8
                                                            g$lhs**$6751$Od@c8
                                                            (map g$f$6740$Od@c8
                                                                 g$rhs*$6752$Od@c8))
                                                       (map g$f$6740$Od@c8
                                                            g$body*$6749$Od@c8))))
                                                  (map car
                                                       g$bindings$6748$Od@c8)
                                                  (map g$cadr$5216$Od@c8
                                                       g$bindings$6748$Od@c8)
                                                  (map g$caddr$5222$Od@c8
                                                       g$bindings$6748$Od@c8))))
                                              (g$cadr$5216$Od@c8 g$x$6747$Od@c8)
                                              (g$cddr$5218$Od@c8
                                                g$x$6747$Od@c8))))
                                          (g$cadr$5216$Od@c8 g$x$6741$Od@c8)
                                          (cdr g$x$6741$Od@c8))
                                         (if (eqv? g$t$6742$Od@c8 'begin)
                                           (cons
                                             'begin
                                             (map g$f$6740$Od@c8
                                                  (cdr g$x$6741$Od@c8)))
                                           (if (eqv? g$t$6742$Od@c8 'set!)
                                             (list
                                               'set!
                                               (g$cadr$5216$Od@c8
                                                 g$x$6741$Od@c8)
                                               (g$f$6740$Od@c8
                                                 (g$caddr$5222$Od@c8
                                                   g$x$6741$Od@c8)))
                                             (if (eqv?
                                                   g$t$6742$Od@c8
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$6743$Od@c8)
                                                   ((case-lambda
                                                      ((g$t$6744$Od@c8)
                                                       (if g$t$6744$Od@c8
                                                         ((case-lambda
                                                            ((g$loc$6745$Od@c8)
                                                             g$loc$6745$Od@c8))
                                                          g$t$6744$Od@c8)
                                                         g$op$6743$Od@c8)))
                                                    ((g$current-primitive-locations$6722$Od@c8)
                                                     g$op$6743$Od@c8))))
                                                (g$cadr$5216$Od@c8
                                                  g$x$6741$Od@c8))
                                               (if (eqv? g$t$6742$Od@c8 'define)
                                                 g$x$6741$Od@c8
                                                 (if (list? g$x$6741$Od@c8)
                                                   (map g$f$6740$Od@c8
                                                        g$x$6741$Od@c8)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6741$Od@c8
                                                     (list?
                                                       g$x$6741$Od@c8)))))))))))))))
                          (car g$x$6741$Od@c8))
                         g$x$6741$Od@c8)))))
          g$f$6740$Od@c8))))
   (g$expanded->core$6725$Od@c8
     g$expanded->core$6770$Od@c8
     (case-lambda
       ((g$x$6763$Od@c8) ((g$rewriter$6724$Od@c8 '#t) g$x$6763$Od@c8))))
   (g$compile-core-expr$6726$Od@c8
     g$compile-core-expr$6771$Od@c8
     (case-lambda
       ((g$x$6764$Od@c8) ((g$rewriter$6724$Od@c8 '#f) g$x$6764$Od@c8))))
   (g$compile-core-expr-to-port$6727$Od@c8
     g$compile-core-expr-to-port$6772$Od@c8
     (case-lambda
       ((g$x$6765$Od@c8 g$p$6766$Od@c8)
        (g$pretty-print$6721$Od@c8
          ((g$rewriter$6724$Od@c8 '#f) g$x$6765$Od@c8)
          g$p$6766$Od@c8)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6811$Od@c8
     g$make-collection$7015$Od@c8
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6872$Od@c8)
            (letrec* ((g$set-cons$6873$Od@c8
                        (case-lambda
                          ((g$x$6875$Od@c8 g$ls$6876$Od@c8)
                           (if (memq g$x$6875$Od@c8 g$ls$6876$Od@c8)
                             g$ls$6876$Od@c8
                             (cons g$x$6875$Od@c8 g$ls$6876$Od@c8))))))
              (case-lambda
                (() g$set$6872$Od@c8)
                ((g$x$6874$Od@c8)
                 (set! g$set$6872$Od@c8
                   (g$set-cons$6873$Od@c8 g$x$6874$Od@c8 g$set$6872$Od@c8)))))))
         '()))))
   (g$current-library-collection$6812$Od@c8
     g$current-library-collection$7016$Od@c8
     (g$make-parameter$6525$Od@c8
       (g$make-collection$6811$Od@c8)
       (case-lambda
         ((g$x$6877$Od@c8)
          (begin
            (if (procedure? g$x$6877$Od@c8)
              (void)
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6877$Od@c8))
            g$x$6877$Od@c8)))))
   (g$7331$6813$Od@c8
     g$7331$7017$Od@c8
     (make-record-type-descriptor
       'library
       '#f
       'g$7334$Od@c8
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7333$6814$Od@c8 g$7333$7018$Od@c8 '#f)
   (g$7332$6815$Od@c8
     g$7332$7019$Od@c8
     (make-record-constructor-descriptor
       g$7331$6813$Od@c8
       '#f
       g$7333$6814$Od@c8))
   (g$library?$6816$Od@c8
     g$library?$7020$Od@c8
     (record-predicate g$7331$6813$Od@c8))
   (g$make-library$6817$Od@c8
     g$make-library$7021$Od@c8
     (record-constructor g$7332$6815$Od@c8))
   (g$library-id$6818$Od@c8
     g$library-id$7022$Od@c8
     (record-accessor g$7331$6813$Od@c8 '0))
   (g$library-name$6819$Od@c8
     g$library-name$7023$Od@c8
     (record-accessor g$7331$6813$Od@c8 '1))
   (g$library-version$6820$Od@c8
     g$library-version$7024$Od@c8
     (record-accessor g$7331$6813$Od@c8 '2))
   (g$library-imp*$6821$Od@c8
     g$library-imp*$7025$Od@c8
     (record-accessor g$7331$6813$Od@c8 '3))
   (g$library-vis*$6822$Od@c8
     g$library-vis*$7026$Od@c8
     (record-accessor g$7331$6813$Od@c8 '4))
   (g$library-inv*$6823$Od@c8
     g$library-inv*$7027$Od@c8
     (record-accessor g$7331$6813$Od@c8 '5))
   (g$library-subst$6824$Od@c8
     g$library-subst$7028$Od@c8
     (record-accessor g$7331$6813$Od@c8 '6))
   (g$library-env$6825$Od@c8
     g$library-env$7029$Od@c8
     (record-accessor g$7331$6813$Od@c8 '7))
   (g$library-visit-state$6826$Od@c8
     g$library-visit-state$7030$Od@c8
     (record-accessor g$7331$6813$Od@c8 '8))
   (g$library-invoke-state$6827$Od@c8
     g$library-invoke-state$7031$Od@c8
     (record-accessor g$7331$6813$Od@c8 '9))
   (g$library-visit-code$6828$Od@c8
     g$library-visit-code$7032$Od@c8
     (record-accessor g$7331$6813$Od@c8 '10))
   (g$library-invoke-code$6829$Od@c8
     g$library-invoke-code$7033$Od@c8
     (record-accessor g$7331$6813$Od@c8 '11))
   (g$library-visible?$6830$Od@c8
     g$library-visible?$7034$Od@c8
     (record-accessor g$7331$6813$Od@c8 '12))
   (g$library-source-file-name$6831$Od@c8
     g$library-source-file-name$7035$Od@c8
     (record-accessor g$7331$6813$Od@c8 '13))
   (g$set-library-id!$6832$Od@c8
     g$set-library-id!$7036$Od@c8
     (record-mutator g$7331$6813$Od@c8 '0))
   (g$set-library-name!$6833$Od@c8
     g$set-library-name!$7037$Od@c8
     (record-mutator g$7331$6813$Od@c8 '1))
   (g$set-library-version!$6834$Od@c8
     g$set-library-version!$7038$Od@c8
     (record-mutator g$7331$6813$Od@c8 '2))
   (g$set-library-imp*!$6835$Od@c8
     g$set-library-imp*!$7039$Od@c8
     (record-mutator g$7331$6813$Od@c8 '3))
   (g$set-library-vis*!$6836$Od@c8
     g$set-library-vis*!$7040$Od@c8
     (record-mutator g$7331$6813$Od@c8 '4))
   (g$set-library-inv*!$6837$Od@c8
     g$set-library-inv*!$7041$Od@c8
     (record-mutator g$7331$6813$Od@c8 '5))
   (g$set-library-subst!$6838$Od@c8
     g$set-library-subst!$7042$Od@c8
     (record-mutator g$7331$6813$Od@c8 '6))
   (g$set-library-env!$6839$Od@c8
     g$set-library-env!$7043$Od@c8
     (record-mutator g$7331$6813$Od@c8 '7))
   (g$set-library-visit-state!$6840$Od@c8
     g$set-library-visit-state!$7044$Od@c8
     (record-mutator g$7331$6813$Od@c8 '8))
   (g$set-library-invoke-state!$6841$Od@c8
     g$set-library-invoke-state!$7045$Od@c8
     (record-mutator g$7331$6813$Od@c8 '9))
   (g$set-library-visit-code!$6842$Od@c8
     g$set-library-visit-code!$7046$Od@c8
     (record-mutator g$7331$6813$Od@c8 '10))
   (g$set-library-invoke-code!$6843$Od@c8
     g$set-library-invoke-code!$7047$Od@c8
     (record-mutator g$7331$6813$Od@c8 '11))
   (g$set-library-visible?!$6844$Od@c8
     g$set-library-visible?!$7048$Od@c8
     (record-mutator g$7331$6813$Od@c8 '12))
   (g$set-library-source-file-name!$6845$Od@c8
     g$set-library-source-file-name!$7049$Od@c8
     (record-mutator g$7331$6813$Od@c8 '13))
   (g$rp$6846$Od@c8
     g$rp$7050$Od@c8
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6878$Od@c8 g$p$6879$Od@c8)
          (begin
            (if (g$library?$6816$Od@c8 g$x$6878$Od@c8)
              (void)
              (assertion-violation 'record-type-printer '"not a library"))
            (display
              (g$format$6441$Od@c8
                '"#<library ~s>"
                (if (null? (g$library-version$6820$Od@c8 g$x$6878$Od@c8))
                  (g$library-name$6819$Od@c8 g$x$6878$Od@c8)
                  (append
                    (g$library-name$6819$Od@c8 g$x$6878$Od@c8)
                    (list (g$library-version$6820$Od@c8 g$x$6878$Od@c8)))))
              g$p$6879$Od@c8))))))
   (g$find-dependencies$6847$Od@c8
     g$find-dependencies$7051$Od@c8
     (case-lambda
       ((g$ls$6880$Od@c8)
        (if (null? g$ls$6880$Od@c8)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6848$Od@c8
     g$find-library-by$7052$Od@c8
     (case-lambda
       ((g$pred$6881$Od@c8)
        ((letrec ((g$f$6882$Od@c8
                    (case-lambda
                      ((g$ls$6883$Od@c8)
                       (if (null? g$ls$6883$Od@c8)
                         '#f
                         (if (g$pred$6881$Od@c8 (car g$ls$6883$Od@c8))
                           (car g$ls$6883$Od@c8)
                           (g$f$6882$Od@c8 (cdr g$ls$6883$Od@c8))))))))
           g$f$6882$Od@c8)
         ((g$current-library-collection$6812$Od@c8))))))
   (g$library-path$6849$Od@c8
     g$library-path$7053$Od@c8
     (g$make-parameter$6525$Od@c8
       '(".")
       (case-lambda
         ((g$x$6884$Od@c8)
          (if (if (list? g$x$6884$Od@c8)
                (begin '#f (g$for-all$5685$Od@c8 string? g$x$6884$Od@c8))
                '#f)
            (map (case-lambda ((g$x$6885$Od@c8) g$x$6885$Od@c8)) g$x$6884$Od@c8)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6884$Od@c8))))))
   (g$library-extensions$6850$Od@c8
     g$library-extensions$7054$Od@c8
     (g$make-parameter$6525$Od@c8
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6886$Od@c8)
          (if (if (list? g$x$6886$Od@c8)
                (begin '#f (g$for-all$5685$Od@c8 string? g$x$6886$Od@c8))
                '#f)
            (map (case-lambda ((g$x$6887$Od@c8) g$x$6887$Od@c8)) g$x$6886$Od@c8)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6886$Od@c8))))))
   (g$library-name->file-name$6851$Od@c8
     g$library-name->file-name$7055$Od@c8
     (case-lambda
       ((g$x$6888$Od@c8)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6415$Od@c8)))
          (case-lambda
            ((g$p$6891$Od@c8 g$extract$6892$Od@c8)
             ((case-lambda
                ((g$extract$6893$Od@c8 g$p$6894$Od@c8)
                 (letrec* ((g$display-hex$6895$Od@c8
                             (case-lambda
                               ((g$n$6903$Od@c8)
                                (if (<= '0 g$n$6903$Od@c8 '9)
                                  (display g$n$6903$Od@c8 g$p$6894$Od@c8)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6903$Od@c8 '10)))
                                    g$p$6894$Od@c8))))))
                   (begin
                     ((letrec ((g$f$6896$Od@c8
                                 (case-lambda
                                   ((g$ls$6897$Od@c8)
                                    (if (null? g$ls$6897$Od@c8)
                                      (void)
                                      (begin
                                        (display '"/" g$p$6894$Od@c8)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6898$Od@c8)
                                             (if ((case-lambda
                                                    ((g$t$6899$Od@c8)
                                                     (if g$t$6899$Od@c8
                                                       g$t$6899$Od@c8
                                                       ((case-lambda
                                                          ((g$t$6900$Od@c8)
                                                           (if g$t$6900$Od@c8
                                                             g$t$6900$Od@c8
                                                             ((case-lambda
                                                                ((g$t$6901$Od@c8)
                                                                 (if g$t$6901$Od@c8
                                                                   g$t$6901$Od@c8
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$6898$Od@c8
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$6898$Od@c8
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$6898$Od@c8
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$6898$Od@c8
                                                    '#\z))
                                               (display
                                                 g$c$6898$Od@c8
                                                 g$p$6894$Od@c8)
                                               (begin
                                                 (display '"%" g$p$6894$Od@c8)
                                                 ((case-lambda
                                                    ((g$n$6902$Od@c8)
                                                     (begin
                                                       (g$display-hex$6895$Od@c8
                                                         (g$quotient$6042$Od@c8
                                                           g$n$6902$Od@c8
                                                           '16))
                                                       (g$display-hex$6895$Od@c8
                                                         (g$remainder$6043$Od@c8
                                                           g$n$6902$Od@c8
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6898$Od@c8))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6897$Od@c8))))
                                        (g$f$6896$Od@c8
                                          (cdr g$ls$6897$Od@c8))))))))
                        g$f$6896$Od@c8)
                      g$x$6888$Od@c8)
                     (g$extract$6893$Od@c8)))))
              g$extract$6892$Od@c8
              g$p$6891$Od@c8)))))))
   (g$file-locator$6852$Od@c8
     g$file-locator$7056$Od@c8
     (g$make-parameter$6525$Od@c8
       (case-lambda
         ((g$x$6904$Od@c8)
          ((case-lambda
             ((g$str$6905$Od@c8)
              ((letrec ((g$f$6906$Od@c8
                          (case-lambda
                            ((g$ls$6907$Od@c8
                               g$exts$6908$Od@c8
                               g$failed-list$6909$Od@c8)
                             (if (null? g$ls$6907$Od@c8)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$7436$6910$Od@c8
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$7439$Od@c8
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$7438$6911$Od@c8 '#f)
                                             (g$7437$6912$Od@c8
                                               (make-record-constructor-descriptor
                                                 g$7436$6910$Od@c8
                                                 &condition-rcd
                                                 g$7438$6911$Od@c8))
                                             (g$7435$6913$Od@c8
                                               (record-predicate
                                                 g$7436$6910$Od@c8))
                                             (g$make-library-resolution-condition$6914$Od@c8
                                               (record-constructor
                                                 g$7437$6912$Od@c8))
                                             (g$7433$6915$Od@c8
                                               (record-accessor
                                                 g$7436$6910$Od@c8
                                                 '0))
                                             (g$7434$6916$Od@c8
                                               (record-accessor
                                                 g$7436$6910$Od@c8
                                                 '1))
                                             (g$library-resolution-condition?$6917$Od@c8
                                               (condition-predicate
                                                 g$7436$6910$Od@c8))
                                             (g$condition-library$6918$Od@c8
                                               (condition-accessor
                                                 g$7436$6910$Od@c8
                                                 g$7433$6915$Od@c8))
                                             (g$condition-files$6919$Od@c8
                                               (condition-accessor
                                                 g$7436$6910$Od@c8
                                                 g$7434$6916$Od@c8)))
                                     (raise
                                       (condition
                                         (g$make-error$5959$Od@c8)
                                         (g$make-who-condition$5985$Od@c8
                                           'expander)
                                         (g$make-message-condition$5939$Od@c8
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6914$Od@c8
                                           g$x$6904$Od@c8
                                           (reverse
                                             g$failed-list$6909$Od@c8))))))))
                               (if (null? g$exts$6908$Od@c8)
                                 (g$f$6906$Od@c8
                                   (cdr g$ls$6907$Od@c8)
                                   (g$library-extensions$6850$Od@c8)
                                   g$failed-list$6909$Od@c8)
                                 ((case-lambda
                                    ((g$name$6920$Od@c8)
                                     (if (g$file-exists?$5556$Od@c8
                                           g$name$6920$Od@c8)
                                       g$name$6920$Od@c8
                                       (g$f$6906$Od@c8
                                         g$ls$6907$Od@c8
                                         (cdr g$exts$6908$Od@c8)
                                         (cons
                                           g$name$6920$Od@c8
                                           g$failed-list$6909$Od@c8)))))
                                  (string-append
                                    (car g$ls$6907$Od@c8)
                                    g$str$6905$Od@c8
                                    (car g$exts$6908$Od@c8)))))))))
                 g$f$6906$Od@c8)
               (g$library-path$6849$Od@c8)
               (g$library-extensions$6850$Od@c8)
               '())))
           (g$library-name->file-name$6851$Od@c8 g$x$6904$Od@c8))))
       (case-lambda
         ((g$f$6921$Od@c8)
          (if (procedure? g$f$6921$Od@c8)
            g$f$6921$Od@c8
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6921$Od@c8))))))
   (g$serialize-all$6853$Od@c8
     g$serialize-all$7057$Od@c8
     (case-lambda
       ((g$serialize$6922$Od@c8 g$compile$6923$Od@c8)
        (letrec* ((g$library-desc$6924$Od@c8
                    (case-lambda
                      ((g$x$6926$Od@c8)
                       (list
                         (g$library-id$6818$Od@c8 g$x$6926$Od@c8)
                         (g$library-name$6819$Od@c8 g$x$6926$Od@c8))))))
          (for-each
            (case-lambda
              ((g$x$6925$Od@c8)
               (if (g$library-source-file-name$6831$Od@c8 g$x$6925$Od@c8)
                 (g$serialize$6922$Od@c8
                   (g$library-source-file-name$6831$Od@c8 g$x$6925$Od@c8)
                   (list
                     (g$library-id$6818$Od@c8 g$x$6925$Od@c8)
                     (g$library-name$6819$Od@c8 g$x$6925$Od@c8)
                     (g$library-version$6820$Od@c8 g$x$6925$Od@c8)
                     (map g$library-desc$6924$Od@c8
                          (g$library-imp*$6821$Od@c8 g$x$6925$Od@c8))
                     (map g$library-desc$6924$Od@c8
                          (g$library-vis*$6822$Od@c8 g$x$6925$Od@c8))
                     (map g$library-desc$6924$Od@c8
                          (g$library-inv*$6823$Od@c8 g$x$6925$Od@c8))
                     (g$library-subst$6824$Od@c8 g$x$6925$Od@c8)
                     (g$library-env$6825$Od@c8 g$x$6925$Od@c8)
                     (g$compile$6923$Od@c8
                       (g$library-visit-code$6828$Od@c8 g$x$6925$Od@c8))
                     (g$compile$6923$Od@c8
                       (g$library-invoke-code$6829$Od@c8 g$x$6925$Od@c8))
                     (g$library-visible?$6830$Od@c8 g$x$6925$Od@c8)))
                 (void))))
            ((g$current-library-collection$6812$Od@c8)))))))
   (g$current-precompiled-library-loader$6854$Od@c8
     g$current-precompiled-library-loader$7058$Od@c8
     (g$make-parameter$6525$Od@c8
       (case-lambda ((g$filename$6927$Od@c8 g$sk$6928$Od@c8) '#f))))
   (g$try-load-from-file$6855$Od@c8
     g$try-load-from-file$7059$Od@c8
     (case-lambda
       ((g$filename$6929$Od@c8)
        ((g$current-precompiled-library-loader$6854$Od@c8)
         g$filename$6929$Od@c8
         (case-lambda
           ((g$id$6930$Od@c8
              g$name$6931$Od@c8
              g$ver$6932$Od@c8
              g$imp*$6933$Od@c8
              g$vis*$6934$Od@c8
              g$inv*$6935$Od@c8
              g$exp-subst$6936$Od@c8
              g$exp-env$6937$Od@c8
              g$visit-proc$6938$Od@c8
              g$invoke-proc$6939$Od@c8
              g$visible?$6940$Od@c8)
            ((letrec ((g$f$6941$Od@c8
                        (case-lambda
                          ((g$deps$6942$Od@c8)
                           (if (null? g$deps$6942$Od@c8)
                             (begin
                               (g$install-library$6865$Od@c8
                                 g$id$6930$Od@c8
                                 g$name$6931$Od@c8
                                 g$ver$6932$Od@c8
                                 g$imp*$6933$Od@c8
                                 g$vis*$6934$Od@c8
                                 g$inv*$6935$Od@c8
                                 g$exp-subst$6936$Od@c8
                                 g$exp-env$6937$Od@c8
                                 g$visit-proc$6938$Od@c8
                                 g$invoke-proc$6939$Od@c8
                                 '#f
                                 '#f
                                 g$visible?$6940$Od@c8
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6943$Od@c8)
                                 ((case-lambda
                                    ((g$label$6944$Od@c8 g$dname$6945$Od@c8)
                                     ((case-lambda
                                        ((g$l$6946$Od@c8)
                                         (if (if (g$library?$6816$Od@c8
                                                   g$l$6946$Od@c8)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6944$Od@c8
                                                      (g$library-id$6818$Od@c8
                                                        g$l$6946$Od@c8)))
                                               '#f)
                                           (g$f$6941$Od@c8
                                             (cdr g$deps$6942$Od@c8))
                                           (begin
                                             (g$fprintf$6440$Od@c8
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\
                           source.
"
                                               g$name$6931$Od@c8
                                               g$dname$6945$Od@c8
                                               g$filename$6929$Od@c8)
                                             '#f))))
                                      (g$find-library-by-name$6860$Od@c8
                                        g$dname$6945$Od@c8))))
                                  (car g$d$6943$Od@c8)
                                  (g$cadr$5216$Od@c8 g$d$6943$Od@c8))))
                              (car g$deps$6942$Od@c8)))))))
               g$f$6941$Od@c8)
             (append g$imp*$6933$Od@c8 g$vis*$6934$Od@c8 g$inv*$6935$Od@c8)))
           (g$others$6947$Od@c8 '#f))))))
   (g$library-loader$6856$Od@c8
     g$library-loader$7060$Od@c8
     (g$make-parameter$6525$Od@c8
       (case-lambda
         ((g$x$6948$Od@c8)
          ((case-lambda
             ((g$file-name$6949$Od@c8)
              (if (not g$file-name$6949$Od@c8)
                (assertion-violation '#f '"cannot file library" g$x$6948$Od@c8)
                ((case-lambda
                   ((g$t$6950$Od@c8)
                    (if g$t$6950$Od@c8
                      g$t$6950$Od@c8
                      (begin
                        '#f
                        ((g$current-library-expander$6857$Od@c8)
                         (g$read-library-source-file$6524$Od@c8
                           g$file-name$6949$Od@c8)
                         g$file-name$6949$Od@c8
                         (case-lambda
                           ((g$name$6951$Od@c8)
                            (if (equal? g$name$6951$Od@c8 g$x$6948$Od@c8)
                              (void)
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6415$Od@c8)))
                                  (case-lambda
                                    ((g$p$6954$Od@c8 g$e$6955$Od@c8)
                                     ((case-lambda
                                        ((g$e$6956$Od@c8 g$p$6957$Od@c8)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6957$Od@c8)
                                           (write g$x$6948$Od@c8 g$p$6957$Od@c8)
                                           (display '" in file " g$p$6957$Od@c8)
                                           (display
                                             g$file-name$6949$Od@c8
                                             g$p$6957$Od@c8)
                                           (display '", found " g$p$6957$Od@c8)
                                           (write
                                             g$name$6951$Od@c8
                                             g$p$6957$Od@c8)
                                           (display '" instead" g$p$6957$Od@c8)
                                           (g$e$6956$Od@c8))))
                                      g$e$6955$Od@c8
                                      g$p$6954$Od@c8)))))))))))))
                 (g$try-load-from-file$6855$Od@c8 g$file-name$6949$Od@c8)))))
           ((g$file-locator$6852$Od@c8) g$x$6948$Od@c8))))
       (case-lambda
         ((g$f$6958$Od@c8)
          (if (procedure? g$f$6958$Od@c8)
            g$f$6958$Od@c8
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6958$Od@c8))))))
   (g$current-library-expander$6857$Od@c8
     g$current-library-expander$7061$Od@c8
     (g$make-parameter$6525$Od@c8
       (case-lambda
         ((g$x$6959$Od@c8)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6960$Od@c8)
          (if (procedure? g$f$6960$Od@c8)
            g$f$6960$Od@c8
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6960$Od@c8))))))
   (g$external-pending-libraries$6858$Od@c8
     g$external-pending-libraries$7062$Od@c8
     (g$make-parameter$6525$Od@c8 '()))
   (g$find-external-library$6859$Od@c8
     g$find-external-library$7063$Od@c8
     (case-lambda
       ((g$name$6961$Od@c8)
        (begin
          (if (g$member$5681$Od@c8
                g$name$6961$Od@c8
                (g$external-pending-libraries$6858$Od@c8))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6961$Od@c8)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6964$Od@c8
                g$external-pending-libraries$6965$Od@c8)
              ((case-lambda
                 ((g$swap$6966$Od@c8)
                  (dynamic-wind
                    g$swap$6966$Od@c8
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6856$Od@c8) g$name$6961$Od@c8)
                         ((case-lambda
                            ((g$t$6967$Od@c8)
                             (if g$t$6967$Od@c8
                               g$t$6967$Od@c8
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6961$Od@c8)))))
                          (g$find-library-by$6848$Od@c8
                            (case-lambda
                              ((g$x$6968$Od@c8)
                               (equal?
                                 (g$library-name$6819$Od@c8 g$x$6968$Od@c8)
                                 g$name$6961$Od@c8))))))))
                    g$swap$6966$Od@c8)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6969$Od@c8)
                      (begin
                        (g$external-pending-libraries$6964$Od@c8
                          g$external-pending-libraries$6965$Od@c8)
                        (set! g$external-pending-libraries$6965$Od@c8
                          g$t$6969$Od@c8))))
                   (g$external-pending-libraries$6964$Od@c8)))))))
           g$external-pending-libraries$6858$Od@c8
           (cons
             g$name$6961$Od@c8
             (g$external-pending-libraries$6858$Od@c8)))))))
   (g$find-library-by-name$6860$Od@c8
     g$find-library-by-name$7064$Od@c8
     (case-lambda
       ((g$name$6970$Od@c8)
        ((case-lambda
           ((g$t$6971$Od@c8)
            (if g$t$6971$Od@c8
              g$t$6971$Od@c8
              (begin
                '#f
                (g$find-external-library$6859$Od@c8 g$name$6970$Od@c8)))))
         (g$find-library-by$6848$Od@c8
           (case-lambda
             ((g$x$6972$Od@c8)
              (equal?
                (g$library-name$6819$Od@c8 g$x$6972$Od@c8)
                g$name$6970$Od@c8))))))))
   (g$library-exists?$6861$Od@c8
     g$library-exists?$7065$Od@c8
     (case-lambda
       ((g$name$6973$Od@c8)
        (if (g$find-library-by$6848$Od@c8
              (case-lambda
                ((g$x$6974$Od@c8)
                 (equal?
                   (g$library-name$6819$Od@c8 g$x$6974$Od@c8)
                   g$name$6973$Od@c8))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6862$Od@c8
     g$find-library-by-spec/die$7066$Od@c8
     (case-lambda
       ((g$spec$6975$Od@c8)
        ((case-lambda
           ((g$id$6976$Od@c8)
            ((case-lambda
               ((g$t$6977$Od@c8)
                (if g$t$6977$Od@c8
                  g$t$6977$Od@c8
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6975$Od@c8)))))
             (g$find-library-by$6848$Od@c8
               (case-lambda
                 ((g$x$6978$Od@c8)
                  (eq? g$id$6976$Od@c8
                       (g$library-id$6818$Od@c8 g$x$6978$Od@c8))))))))
         (car g$spec$6975$Od@c8)))))
   (g$label->binding-table$6863$Od@c8
     g$label->binding-table$7067$Od@c8
     (g$make-eq-hashtable$5478$Od@c8))
   (g$install-library-record$6864$Od@c8
     g$install-library-record$7068$Od@c8
     (case-lambda
       ((g$lib$6979$Od@c8)
        (begin
          ((case-lambda
             ((g$exp-env$6980$Od@c8)
              (for-each
                (case-lambda
                  ((g$x$6981$Od@c8)
                   ((case-lambda
                      ((g$label$6982$Od@c8 g$binding$6983$Od@c8)
                       ((case-lambda
                          ((g$binding$6984$Od@c8)
                           (g$hashtable-set!$5482$Od@c8
                             g$label->binding-table$6863$Od@c8
                             g$label$6982$Od@c8
                             g$binding$6984$Od@c8)))
                        ((case-lambda
                           ((g$t$6985$Od@c8)
                            (if (eqv? g$t$6985$Od@c8 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$6979$Od@c8
                                  (cdr g$binding$6983$Od@c8)))
                              (if (eqv? g$t$6985$Od@c8 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6979$Od@c8
                                    (cdr g$binding$6983$Od@c8)))
                                (if (eqv? g$t$6985$Od@c8 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6979$Od@c8
                                      (cdr g$binding$6983$Od@c8)))
                                  g$binding$6983$Od@c8)))))
                         (car g$binding$6983$Od@c8)))))
                    (car g$x$6981$Od@c8)
                    (cdr g$x$6981$Od@c8))))
                g$exp-env$6980$Od@c8)))
           (g$library-env$6825$Od@c8 g$lib$6979$Od@c8))
          ((g$current-library-collection$6812$Od@c8) g$lib$6979$Od@c8)))))
   (g$install-library$6865$Od@c8
     g$install-library$7069$Od@c8
     (case-lambda
       ((g$id$6986$Od@c8
          g$name$6987$Od@c8
          g$ver$6988$Od@c8
          g$imp*$6989$Od@c8
          g$vis*$6990$Od@c8
          g$inv*$6991$Od@c8
          g$exp-subst$6992$Od@c8
          g$exp-env$6993$Od@c8
          g$visit-proc$6994$Od@c8
          g$invoke-proc$6995$Od@c8
          g$visit-code$6996$Od@c8
          g$invoke-code$6997$Od@c8
          g$visible?$6998$Od@c8
          g$source-file-name$6999$Od@c8)
        ((case-lambda
           ((g$imp-lib*$7000$Od@c8 g$vis-lib*$7001$Od@c8 g$inv-lib*$7002$Od@c8)
            (begin
              (if (if (symbol? g$id$6986$Od@c8)
                    (if (list? g$name$6987$Od@c8)
                      (begin '#f (list? g$ver$6988$Od@c8))
                      '#f)
                    '#f)
                (void)
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6986$Od@c8
                  g$name$6987$Od@c8
                  g$ver$6988$Od@c8))
              (if (g$library-exists?$6861$Od@c8 g$name$6987$Od@c8)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6987$Od@c8)
                (void))
              ((case-lambda
                 ((g$lib$7003$Od@c8)
                  (g$install-library-record$6864$Od@c8 g$lib$7003$Od@c8)))
               (g$make-library$6817$Od@c8
                 g$id$6986$Od@c8
                 g$name$6987$Od@c8
                 g$ver$6988$Od@c8
                 g$imp-lib*$7000$Od@c8
                 g$vis-lib*$7001$Od@c8
                 g$inv-lib*$7002$Od@c8
                 g$exp-subst$6992$Od@c8
                 g$exp-env$6993$Od@c8
                 g$visit-proc$6994$Od@c8
                 g$invoke-proc$6995$Od@c8
                 g$visit-code$6996$Od@c8
                 g$invoke-code$6997$Od@c8
                 g$visible?$6998$Od@c8
                 g$source-file-name$6999$Od@c8)))))
         (map g$find-library-by-spec/die$6862$Od@c8 g$imp*$6989$Od@c8)
         (map g$find-library-by-spec/die$6862$Od@c8 g$vis*$6990$Od@c8)
         (map g$find-library-by-spec/die$6862$Od@c8 g$inv*$6991$Od@c8)))))
   (g$imported-label->binding$6866$Od@c8
     g$imported-label->binding$7070$Od@c8
     (case-lambda
       ((g$lab$7004$Od@c8)
        (g$hashtable-ref$5481$Od@c8
          g$label->binding-table$6863$Od@c8
          g$lab$7004$Od@c8
          '#f))))
   (g$invoke-library$6867$Od@c8
     g$invoke-library$7071$Od@c8
     (case-lambda
       ((g$lib$7005$Od@c8)
        ((case-lambda
           ((g$invoke$7006$Od@c8)
            (if (procedure? g$invoke$7006$Od@c8)
              (begin
                (g$set-library-invoke-state!$6841$Od@c8
                  g$lib$7005$Od@c8
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7005$Od@c8))))
                (for-each
                  g$invoke-library$6867$Od@c8
                  (g$library-inv*$6823$Od@c8 g$lib$7005$Od@c8))
                (g$set-library-invoke-state!$6841$Od@c8
                  g$lib$7005$Od@c8
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7005$Od@c8))))
                (g$invoke$7006$Od@c8)
                (g$set-library-invoke-state!$6841$Od@c8 g$lib$7005$Od@c8 '#t))
              (void))))
         (g$library-invoke-state$6827$Od@c8 g$lib$7005$Od@c8)))))
   (g$visit-library$6868$Od@c8
     g$visit-library$7072$Od@c8
     (case-lambda
       ((g$lib$7007$Od@c8)
        ((case-lambda
           ((g$visit$7008$Od@c8)
            (if (procedure? g$visit$7008$Od@c8)
              (begin
                (g$set-library-visit-state!$6840$Od@c8
                  g$lib$7007$Od@c8
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7007$Od@c8))))
                (for-each
                  g$invoke-library$6867$Od@c8
                  (g$library-vis*$6822$Od@c8 g$lib$7007$Od@c8))
                (g$set-library-visit-state!$6840$Od@c8
                  g$lib$7007$Od@c8
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7007$Od@c8))))
                (g$visit$7008$Od@c8)
                (g$set-library-visit-state!$6840$Od@c8 g$lib$7007$Od@c8 '#t))
              (void))))
         (g$library-visit-state$6826$Od@c8 g$lib$7007$Od@c8)))))
   (g$invoke-library-by-spec$6869$Od@c8
     g$invoke-library-by-spec$7073$Od@c8
     (case-lambda
       ((g$spec$7009$Od@c8)
        (g$invoke-library$6867$Od@c8
          (g$find-library-by-spec/die$6862$Od@c8 g$spec$7009$Od@c8)))))
   (g$installed-libraries$6870$Od@c8
     g$installed-libraries$7074$Od@c8
     (case-lambda
       ((g$all?$7010$Od@c8)
        ((letrec ((g$f$7011$Od@c8
                    (case-lambda
                      ((g$ls$7012$Od@c8)
                       (if (null? g$ls$7012$Od@c8)
                         '()
                         (if ((case-lambda
                                ((g$t$7013$Od@c8)
                                 (if g$t$7013$Od@c8
                                   g$t$7013$Od@c8
                                   (begin
                                     '#f
                                     (g$library-visible?$6830$Od@c8
                                       (car g$ls$7012$Od@c8))))))
                              g$all?$7010$Od@c8)
                           (cons
                             (car g$ls$7012$Od@c8)
                             (g$f$7011$Od@c8 (cdr g$ls$7012$Od@c8)))
                           (g$f$7011$Od@c8 (cdr g$ls$7012$Od@c8))))))))
           g$f$7011$Od@c8)
         ((g$current-library-collection$6812$Od@c8))))
       (() (g$installed-libraries$6870$Od@c8 '#f))))
   (g$library-spec$6871$Od@c8
     g$library-spec$7075$Od@c8
     (case-lambda
       ((g$x$7014$Od@c8)
        (begin
          (if (g$library?$6816$Od@c8 g$x$7014$Od@c8)
            (void)
            (assertion-violation 'library-spec '"not a library" g$x$7014$Od@c8))
          (list
            (g$library-id$6818$Od@c8 g$x$7014$Od@c8)
            (g$library-name$6819$Od@c8 g$x$7014$Od@c8)
            (g$library-version$6820$Od@c8 g$x$7014$Od@c8)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7076$Od@c8
     g$build-global-define$7186$Od@c8
     (case-lambda ((g$x$7157$Od@c8) (g$build-void$7153$Od@c8))))
   (g$build-lambda$7125$Od@c8
     g$build-lambda$7187$Od@c8
     (case-lambda
       ((g$ae$7158$Od@c8 g$vars$7159$Od@c8 g$exp$7160$Od@c8)
        (list 'case-lambda (list g$vars$7159$Od@c8 g$exp$7160$Od@c8)))))
   (g$build-case-lambda$7126$Od@c8
     g$build-case-lambda$7188$Od@c8
     (case-lambda
       ((g$ae$7161$Od@c8 g$vars*$7162$Od@c8 g$exp*$7163$Od@c8)
        (cons 'case-lambda (map list g$vars*$7162$Od@c8 g$exp*$7163$Od@c8)))))
   (g$build-let$7127$Od@c8
     g$build-let$7189$Od@c8
     (case-lambda
       ((g$ae$7164$Od@c8 g$lhs*$7165$Od@c8 g$rhs*$7166$Od@c8 g$body$7167$Od@c8)
        (cons
          (g$build-lambda$7125$Od@c8
            g$ae$7164$Od@c8
            g$lhs*$7165$Od@c8
            g$body$7167$Od@c8)
          g$rhs*$7166$Od@c8))))
   (g$build-sequence$7152$Od@c8
     g$build-sequence$7190$Od@c8
     (case-lambda
       ((g$ae$7168$Od@c8 g$exps$7169$Od@c8)
        ((letrec ((g$loop$7170$Od@c8
                    (case-lambda
                      ((g$exps$7171$Od@c8)
                       (if (null? (cdr g$exps$7171$Od@c8))
                         (car g$exps$7171$Od@c8)
                         (if (equal?
                               (car g$exps$7171$Od@c8)
                               (g$build-void$7153$Od@c8))
                           (g$loop$7170$Od@c8 (cdr g$exps$7171$Od@c8))
                           (cons 'begin g$exps$7171$Od@c8)))))))
           g$loop$7170$Od@c8)
         g$exps$7169$Od@c8))))
   (g$build-void$7153$Od@c8
     g$build-void$7191$Od@c8
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7154$Od@c8
     g$build-letrec$7192$Od@c8
     (case-lambda
       ((g$ae$7172$Od@c8
          g$vars$7173$Od@c8
          g$val-exps$7174$Od@c8
          g$body-exp$7175$Od@c8)
        (if (null? g$vars$7173$Od@c8)
          g$body-exp$7175$Od@c8
          (list
            'letrec
            (map list g$vars$7173$Od@c8 g$val-exps$7174$Od@c8)
            g$body-exp$7175$Od@c8)))))
   (g$build-letrec*$7155$Od@c8
     g$build-letrec*$7193$Od@c8
     (case-lambda
       ((g$ae$7176$Od@c8
          g$vars$7177$Od@c8
          g$val-exps$7178$Od@c8
          g$body-exp$7179$Od@c8)
        (if (null? g$vars$7177$Od@c8)
          g$body-exp$7179$Od@c8
          (list
            'letrec*
            (map list g$vars$7177$Od@c8 g$val-exps$7178$Od@c8)
            g$body-exp$7179$Od@c8)))))
   (g$build-library-letrec*$7156$Od@c8
     g$build-library-letrec*$7194$Od@c8
     (case-lambda
       ((g$ae$7180$Od@c8
          g$name$7181$Od@c8
          g$vars$7182$Od@c8
          g$locs$7183$Od@c8
          g$val-exps$7184$Od@c8
          g$body-exp$7185$Od@c8)
        (list
          'library-letrec*
          g$name$7181$Od@c8
          (map list g$vars$7182$Od@c8 g$locs$7183$Od@c8 g$val-exps$7184$Od@c8)
          g$body-exp$7185$Od@c8)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7195$Od@c8
     g$set-cons$10820$Od@c8
     (case-lambda
       ((g$x$7648$Od@c8 g$ls$7649$Od@c8)
        (if (memq g$x$7648$Od@c8 g$ls$7649$Od@c8)
          g$ls$7649$Od@c8
          (cons g$x$7648$Od@c8 g$ls$7649$Od@c8)))))
   (g$set-union$7196$Od@c8
     g$set-union$10821$Od@c8
     (case-lambda
       ((g$ls1$7650$Od@c8 g$ls2$7651$Od@c8)
        (if (null? g$ls1$7650$Od@c8)
          g$ls2$7651$Od@c8
          (if (memq (car g$ls1$7650$Od@c8) g$ls2$7651$Od@c8)
            (g$set-union$7196$Od@c8 (cdr g$ls1$7650$Od@c8) g$ls2$7651$Od@c8)
            (cons
              (car g$ls1$7650$Od@c8)
              (g$set-union$7196$Od@c8
                (cdr g$ls1$7650$Od@c8)
                g$ls2$7651$Od@c8)))))))
   (g$top-mark*$7198$Od@c8 g$top-mark*$10822$Od@c8 '(top))
   (g$top-marked?$7199$Od@c8
     g$top-marked?$10823$Od@c8
     (case-lambda ((g$m*$7652$Od@c8) (memq 'top g$m*$7652$Od@c8))))
   (g$gen-lexical$7200$Od@c8
     g$gen-lexical$10824$Od@c8
     (case-lambda
       ((g$sym$7653$Od@c8)
        (if (symbol? g$sym$7653$Od@c8)
          (gensym g$sym$7653$Od@c8)
          (if (g$stx?$7228$Od@c8 g$sym$7653$Od@c8)
            (g$gen-lexical$7200$Od@c8 (g$id->sym$7257$Od@c8 g$sym$7653$Od@c8))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7653$Od@c8))))))
   (g$gen-global$7201$Od@c8
     g$gen-global$10825$Od@c8
     (case-lambda ((g$x$7654$Od@c8) (g$gen-lexical$7200$Od@c8 g$x$7654$Od@c8))))
   (g$gen-label$7202$Od@c8
     g$gen-label$10826$Od@c8
     (case-lambda ((g$_$7655$Od@c8) (gensym))))
   (g$gen-top-level-label$7203$Od@c8
     g$gen-top-level-label$10827$Od@c8
     (case-lambda
       ((g$id$7656$Od@c8 g$rib$7657$Od@c8)
        (letrec* ((g$find$7658$Od@c8
                    (case-lambda
                      ((g$sym$7664$Od@c8
                         g$mark*$7665$Od@c8
                         g$sym*$7666$Od@c8
                         g$mark**$7667$Od@c8
                         g$label*$7668$Od@c8)
                       (if (pair? g$sym*$7666$Od@c8)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7664$Od@c8
                                        (car g$sym*$7666$Od@c8))
                                 (begin
                                   '#f
                                   (g$same-marks?$7258$Od@c8
                                     g$mark*$7665$Od@c8
                                     (car g$mark**$7667$Od@c8)))
                                 '#f)
                             (car g$label*$7668$Od@c8)
                             (g$find$7658$Od@c8
                               g$sym$7664$Od@c8
                               g$mark*$7665$Od@c8
                               (cdr g$sym*$7666$Od@c8)
                               (cdr g$mark**$7667$Od@c8)
                               (cdr g$label*$7668$Od@c8))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7659$Od@c8 g$mark*$7660$Od@c8)
              ((case-lambda
                 ((g$sym*$7661$Od@c8)
                  ((case-lambda
                     ((g$t$7662$Od@c8)
                      (if g$t$7662$Od@c8
                        ((case-lambda
                           ((g$label$7663$Od@c8)
                            (if (g$imported-label->binding$7070$Od@c8
                                  g$label$7663$Od@c8)
                              (gensym)
                              g$label$7663$Od@c8)))
                         g$t$7662$Od@c8)
                        (gensym))))
                   (if (memq
                         g$sym$7659$Od@c8
                         (g$rib-sym*$7211$Od@c8 g$rib$7657$Od@c8))
                     (begin
                       '#f
                       (g$find$7658$Od@c8
                         g$sym$7659$Od@c8
                         g$mark*$7660$Od@c8
                         g$sym*$7661$Od@c8
                         (g$rib-mark**$7212$Od@c8 g$rib$7657$Od@c8)
                         (g$rib-label*$7213$Od@c8 g$rib$7657$Od@c8)))
                     '#f))))
               (g$rib-sym*$7211$Od@c8 g$rib$7657$Od@c8))))
           (g$id->sym$7257$Od@c8 g$id$7656$Od@c8)
           (g$stx-mark*$7231$Od@c8 g$id$7656$Od@c8))))))
   (g$gen-define-label+loc$7204$Od@c8
     g$gen-define-label+loc$10828$Od@c8
     (case-lambda
       ((g$id$7669$Od@c8 g$rib$7670$Od@c8)
        ((case-lambda
           ((g$t$7671$Od@c8)
            (if g$t$7671$Od@c8
              ((case-lambda
                 ((g$env$7672$Od@c8)
                  ((case-lambda
                     ((g$label$7673$Od@c8 g$locs$7674$Od@c8)
                      (values
                        g$label$7673$Od@c8
                        ((case-lambda
                           ((g$t$7675$Od@c8)
                            (if g$t$7675$Od@c8
                              (cdr g$t$7675$Od@c8)
                              ((case-lambda
                                 ((g$loc$7676$Od@c8)
                                  (begin
                                    (g$set-interaction-env-locs!$7617$Od@c8
                                      g$env$7672$Od@c8
                                      (cons
                                        (cons
                                          g$label$7673$Od@c8
                                          g$loc$7676$Od@c8)
                                        g$locs$7674$Od@c8))
                                    g$loc$7676$Od@c8)))
                               (g$gen-lexical$7200$Od@c8 g$id$7669$Od@c8)))))
                         (assq g$label$7673$Od@c8 g$locs$7674$Od@c8)))))
                   (g$gen-top-level-label$7203$Od@c8
                     g$id$7669$Od@c8
                     g$rib$7670$Od@c8)
                   (g$interaction-env-locs$7614$Od@c8 g$env$7672$Od@c8))))
               g$t$7671$Od@c8)
              (values (gensym) (g$gen-lexical$7200$Od@c8 g$id$7669$Od@c8)))))
         (g$top-level-context$7647$Od@c8)))))
   (g$gen-define-label$7205$Od@c8
     g$gen-define-label$10829$Od@c8
     (case-lambda
       ((g$id$7677$Od@c8 g$rib$7678$Od@c8)
        (if (g$top-level-context$7647$Od@c8)
          (g$gen-top-level-label$7203$Od@c8 g$id$7677$Od@c8 g$rib$7678$Od@c8)
          (gensym)))))
   (g$7733$7206$Od@c8
     g$7733$10830$Od@c8
     (make-record-type-descriptor
       'rib
       '#f
       'g$7736$Od@c8
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$7735$7207$Od@c8 g$7735$10831$Od@c8 '#f)
   (g$7734$7208$Od@c8
     g$7734$10832$Od@c8
     (make-record-constructor-descriptor
       g$7733$7206$Od@c8
       '#f
       g$7735$7207$Od@c8))
   (g$rib?$7209$Od@c8 g$rib?$10833$Od@c8 (record-predicate g$7733$7206$Od@c8))
   (g$make-rib$7210$Od@c8
     g$make-rib$10834$Od@c8
     (record-constructor g$7734$7208$Od@c8))
   (g$rib-sym*$7211$Od@c8
     g$rib-sym*$10835$Od@c8
     (record-accessor g$7733$7206$Od@c8 '0))
   (g$rib-mark**$7212$Od@c8
     g$rib-mark**$10836$Od@c8
     (record-accessor g$7733$7206$Od@c8 '1))
   (g$rib-label*$7213$Od@c8
     g$rib-label*$10837$Od@c8
     (record-accessor g$7733$7206$Od@c8 '2))
   (g$rib-sealed/freq$7214$Od@c8
     g$rib-sealed/freq$10838$Od@c8
     (record-accessor g$7733$7206$Od@c8 '3))
   (g$set-rib-sym*!$7215$Od@c8
     g$set-rib-sym*!$10839$Od@c8
     (record-mutator g$7733$7206$Od@c8 '0))
   (g$set-rib-mark**!$7216$Od@c8
     g$set-rib-mark**!$10840$Od@c8
     (record-mutator g$7733$7206$Od@c8 '1))
   (g$set-rib-label*!$7217$Od@c8
     g$set-rib-label*!$10841$Od@c8
     (record-mutator g$7733$7206$Od@c8 '2))
   (g$set-rib-sealed/freq!$7218$Od@c8
     g$set-rib-sealed/freq!$10842$Od@c8
     (record-mutator g$7733$7206$Od@c8 '3))
   (g$make-empty-rib$7219$Od@c8
     g$make-empty-rib$10843$Od@c8
     (case-lambda (() (g$make-rib$7210$Od@c8 '() '() '() '#f))))
   (g$extend-rib!$7220$Od@c8
     g$extend-rib!$10844$Od@c8
     (case-lambda
       ((g$rib$7679$Od@c8 g$id$7680$Od@c8 g$label$7681$Od@c8)
        (letrec* ((g$find$7682$Od@c8
                    (case-lambda
                      ((g$sym$7688$Od@c8
                         g$mark*$7689$Od@c8
                         g$sym*$7690$Od@c8
                         g$mark**$7691$Od@c8
                         g$label*$7692$Od@c8)
                       (if (pair? g$sym*$7690$Od@c8)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7688$Od@c8
                                        (car g$sym*$7690$Od@c8))
                                 (begin
                                   '#f
                                   (g$same-marks?$7258$Od@c8
                                     g$mark*$7689$Od@c8
                                     (car g$mark**$7691$Od@c8)))
                                 '#f)
                             g$label*$7692$Od@c8
                             (g$find$7682$Od@c8
                               g$sym$7688$Od@c8
                               g$mark*$7689$Od@c8
                               (cdr g$sym*$7690$Od@c8)
                               (cdr g$mark**$7691$Od@c8)
                               (cdr g$label*$7692$Od@c8))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7214$Od@c8 g$rib$7679$Od@c8)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7679$Od@c8)
              (void))
            ((case-lambda
               ((g$sym$7683$Od@c8 g$mark*$7684$Od@c8)
                ((case-lambda
                   ((g$sym*$7685$Od@c8)
                    ((case-lambda
                       ((g$t$7686$Od@c8)
                        (if g$t$7686$Od@c8
                          ((case-lambda
                             ((g$p$7687$Od@c8)
                              (if (eq? g$label$7681$Od@c8 (car g$p$7687$Od@c8))
                                (void)
                                (if (g$top-level-context$7647$Od@c8)
                                  (set-car! g$p$7687$Od@c8 g$label$7681$Od@c8)
                                  (g$syntax-violation$7640$Od@c8
                                    '#f
                                    '"cannot redefine"
                                    g$id$7680$Od@c8)))))
                           g$t$7686$Od@c8)
                          (begin
                            (g$set-rib-sym*!$7215$Od@c8
                              g$rib$7679$Od@c8
                              (cons g$sym$7683$Od@c8 g$sym*$7685$Od@c8))
                            (g$set-rib-mark**!$7216$Od@c8
                              g$rib$7679$Od@c8
                              (cons
                                g$mark*$7684$Od@c8
                                (g$rib-mark**$7212$Od@c8 g$rib$7679$Od@c8)))
                            (g$set-rib-label*!$7217$Od@c8
                              g$rib$7679$Od@c8
                              (cons
                                g$label$7681$Od@c8
                                (g$rib-label*$7213$Od@c8 g$rib$7679$Od@c8)))))))
                     (if (memq
                           g$sym$7683$Od@c8
                           (g$rib-sym*$7211$Od@c8 g$rib$7679$Od@c8))
                       (begin
                         '#f
                         (g$find$7682$Od@c8
                           g$sym$7683$Od@c8
                           g$mark*$7684$Od@c8
                           g$sym*$7685$Od@c8
                           (g$rib-mark**$7212$Od@c8 g$rib$7679$Od@c8)
                           (g$rib-label*$7213$Od@c8 g$rib$7679$Od@c8)))
                       '#f))))
                 (g$rib-sym*$7211$Od@c8 g$rib$7679$Od@c8))))
             (g$id->sym$7257$Od@c8 g$id$7680$Od@c8)
             (g$stx-mark*$7231$Od@c8 g$id$7680$Od@c8)))))))
   (g$make-rib-map$7221$Od@c8
     g$make-rib-map$10845$Od@c8
     (case-lambda
       ((g$sym*$7693$Od@c8)
        ((case-lambda
           ((g$ht$7694$Od@c8)
            ((letrec ((g$f$7695$Od@c8
                        (case-lambda
                          ((g$i$7696$Od@c8 g$sym*$7697$Od@c8)
                           (if (null? g$sym*$7697$Od@c8)
                             g$ht$7694$Od@c8
                             (begin
                               (g$hashtable-update!$5485$Od@c8
                                 g$ht$7694$Od@c8
                                 (car g$sym*$7697$Od@c8)
                                 (case-lambda
                                   ((g$x$7698$Od@c8)
                                    (cons g$i$7696$Od@c8 g$x$7698$Od@c8)))
                                 '())
                               (g$f$7695$Od@c8
                                 (+ g$i$7696$Od@c8 '1)
                                 (cdr g$sym*$7697$Od@c8))))))))
               g$f$7695$Od@c8)
             '0
             g$sym*$7693$Od@c8)))
         (g$make-eq-hashtable$5478$Od@c8)))))
   (g$seal-rib!$7222$Od@c8
     g$seal-rib!$10846$Od@c8
     (case-lambda
       ((g$rib$7699$Od@c8)
        ((case-lambda
           ((g$sym*$7700$Od@c8)
            (if (null? g$sym*$7700$Od@c8)
              (void)
              (begin
                (g$set-rib-sym*!$7215$Od@c8
                  g$rib$7699$Od@c8
                  (list->vector g$sym*$7700$Od@c8))
                (g$set-rib-mark**!$7216$Od@c8
                  g$rib$7699$Od@c8
                  (list->vector (g$rib-mark**$7212$Od@c8 g$rib$7699$Od@c8)))
                (g$set-rib-label*!$7217$Od@c8
                  g$rib$7699$Od@c8
                  (list->vector (g$rib-label*$7213$Od@c8 g$rib$7699$Od@c8)))
                (g$set-rib-sealed/freq!$7218$Od@c8
                  g$rib$7699$Od@c8
                  (g$make-rib-map$7221$Od@c8 g$sym*$7700$Od@c8))))))
         (g$rib-sym*$7211$Od@c8 g$rib$7699$Od@c8)))))
   (g$unseal-rib!$7223$Od@c8
     g$unseal-rib!$10847$Od@c8
     (case-lambda
       ((g$rib$7701$Od@c8)
        (if (g$rib-sealed/freq$7214$Od@c8 g$rib$7701$Od@c8)
          (begin
            (g$set-rib-sealed/freq!$7218$Od@c8 g$rib$7701$Od@c8 '#f)
            (g$set-rib-sym*!$7215$Od@c8
              g$rib$7701$Od@c8
              (vector->list (g$rib-sym*$7211$Od@c8 g$rib$7701$Od@c8)))
            (g$set-rib-mark**!$7216$Od@c8
              g$rib$7701$Od@c8
              (vector->list (g$rib-mark**$7212$Od@c8 g$rib$7701$Od@c8)))
            (g$set-rib-label*!$7217$Od@c8
              g$rib$7701$Od@c8
              (vector->list (g$rib-label*$7213$Od@c8 g$rib$7701$Od@c8))))
          (void)))))
   (g$make-full-rib$7224$Od@c8
     g$make-full-rib$10848$Od@c8
     (case-lambda
       ((g$id*$7702$Od@c8 g$label*$7703$Od@c8)
        ((case-lambda
           ((g$r$7704$Od@c8)
            (begin (g$seal-rib!$7222$Od@c8 g$r$7704$Od@c8) g$r$7704$Od@c8)))
         (g$make-rib$7210$Od@c8
           (map g$id->sym$7257$Od@c8 g$id*$7702$Od@c8)
           (map g$stx-mark*$7231$Od@c8 g$id*$7702$Od@c8)
           g$label*$7703$Od@c8
           '#f)))))
   (g$7759$7225$Od@c8
     g$7759$10849$Od@c8
     (make-record-type-descriptor
       'stx
       '#f
       'g$7762$Od@c8
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$7761$7226$Od@c8 g$7761$10850$Od@c8 '#f)
   (g$7760$7227$Od@c8
     g$7760$10851$Od@c8
     (make-record-constructor-descriptor
       g$7759$7225$Od@c8
       '#f
       g$7761$7226$Od@c8))
   (g$stx?$7228$Od@c8 g$stx?$10852$Od@c8 (record-predicate g$7759$7225$Od@c8))
   (g$make-stx$7229$Od@c8
     g$make-stx$10853$Od@c8
     (record-constructor g$7760$7227$Od@c8))
   (g$stx-expr$7230$Od@c8
     g$stx-expr$10854$Od@c8
     (record-accessor g$7759$7225$Od@c8 '0))
   (g$stx-mark*$7231$Od@c8
     g$stx-mark*$10855$Od@c8
     (record-accessor g$7759$7225$Od@c8 '1))
   (g$stx-subst*$7232$Od@c8
     g$stx-subst*$10856$Od@c8
     (record-accessor g$7759$7225$Od@c8 '2))
   (g$stx-ae*$7233$Od@c8
     g$stx-ae*$10857$Od@c8
     (record-accessor g$7759$7225$Od@c8 '3))
   (g$set-stx-expr!$7234$Od@c8
     g$set-stx-expr!$10858$Od@c8
     (record-mutator g$7759$7225$Od@c8 '0))
   (g$set-stx-mark*!$7235$Od@c8
     g$set-stx-mark*!$10859$Od@c8
     (record-mutator g$7759$7225$Od@c8 '1))
   (g$set-stx-subst*!$7236$Od@c8
     g$set-stx-subst*!$10860$Od@c8
     (record-mutator g$7759$7225$Od@c8 '2))
   (g$set-stx-ae*!$7237$Od@c8
     g$set-stx-ae*!$10861$Od@c8
     (record-mutator g$7759$7225$Od@c8 '3))
   (g$rp$7238$Od@c8
     g$rp$10862$Od@c8
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7705$Od@c8 g$p$7706$Od@c8)
          (begin
            (display '"#<syntax " g$p$7706$Od@c8)
            (write (g$stx->datum$7267$Od@c8 g$x$7705$Od@c8) g$p$7706$Od@c8)
            ((case-lambda
               ((g$expr$7707$Od@c8)
                (if (annotation? g$expr$7707$Od@c8)
                  ((case-lambda
                     ((g$src$7708$Od@c8)
                      (if (pair? g$src$7708$Od@c8)
                        (begin
                          (display '" [" g$p$7706$Od@c8)
                          (display (cdr g$src$7708$Od@c8) g$p$7706$Od@c8)
                          (display '" of " g$p$7706$Od@c8)
                          (display (car g$src$7708$Od@c8) g$p$7706$Od@c8)
                          (display '"]" g$p$7706$Od@c8))
                        (void))))
                   (annotation-source g$expr$7707$Od@c8))
                  (void))))
             (g$stx-expr$7230$Od@c8 g$x$7705$Od@c8))
            (display '">" g$p$7706$Od@c8))))))
   (g$datum->stx$7239$Od@c8
     g$datum->stx$10863$Od@c8
     (case-lambda
       ((g$id$7709$Od@c8 g$datum$7710$Od@c8)
        (g$make-stx$7229$Od@c8
          g$datum$7710$Od@c8
          (g$stx-mark*$7231$Od@c8 g$id$7709$Od@c8)
          (g$stx-subst*$7232$Od@c8 g$id$7709$Od@c8)
          (g$stx-ae*$7233$Od@c8 g$id$7709$Od@c8)))))
   (g$gen-mark$7240$Od@c8
     g$gen-mark$10864$Od@c8
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7241$Od@c8 g$anti-mark$10865$Od@c8 '#f)
   (g$anti-mark?$7242$Od@c8 g$anti-mark?$10866$Od@c8 not)
   (g$join-wraps$7243$Od@c8
     g$join-wraps$10867$Od@c8
     (case-lambda
       ((g$m1*$7711$Od@c8 g$s1*$7712$Od@c8 g$ae1*$7713$Od@c8 g$e$7714$Od@c8)
        (letrec* ((g$cancel$7715$Od@c8
                    (case-lambda
                      ((g$ls1$7719$Od@c8 g$ls2$7720$Od@c8)
                       ((letrec ((g$f$7721$Od@c8
                                   (case-lambda
                                     ((g$x$7722$Od@c8 g$ls1$7723$Od@c8)
                                      (if (null? g$ls1$7723$Od@c8)
                                        (cdr g$ls2$7720$Od@c8)
                                        (cons
                                          g$x$7722$Od@c8
                                          (g$f$7721$Od@c8
                                            (car g$ls1$7723$Od@c8)
                                            (cdr g$ls1$7723$Od@c8))))))))
                          g$f$7721$Od@c8)
                        (car g$ls1$7719$Od@c8)
                        (cdr g$ls1$7719$Od@c8))))))
          ((case-lambda
             ((g$m2*$7716$Od@c8 g$s2*$7717$Od@c8 g$ae2*$7718$Od@c8)
              (if (if (not (null? g$m1*$7711$Od@c8))
                    (if (not (null? g$m2*$7716$Od@c8))
                      (begin
                        '#f
                        (g$anti-mark?$7242$Od@c8 (car g$m2*$7716$Od@c8)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7715$Od@c8 g$m1*$7711$Od@c8 g$m2*$7716$Od@c8)
                  (g$cancel$7715$Od@c8 g$s1*$7712$Od@c8 g$s2*$7717$Od@c8)
                  (g$cancel$7715$Od@c8 g$ae1*$7713$Od@c8 g$ae2*$7718$Od@c8))
                (values
                  (append g$m1*$7711$Od@c8 g$m2*$7716$Od@c8)
                  (append g$s1*$7712$Od@c8 g$s2*$7717$Od@c8)
                  (append g$ae1*$7713$Od@c8 g$ae2*$7718$Od@c8)))))
           (g$stx-mark*$7231$Od@c8 g$e$7714$Od@c8)
           (g$stx-subst*$7232$Od@c8 g$e$7714$Od@c8)
           (g$stx-ae*$7233$Od@c8 g$e$7714$Od@c8))))))
   (g$mkstx$7244$Od@c8
     g$mkstx$10868$Od@c8
     (case-lambda
       ((g$e$7724$Od@c8 g$m*$7725$Od@c8 g$s*$7726$Od@c8 g$ae*$7727$Od@c8)
        (if (g$stx?$7228$Od@c8 g$e$7724$Od@c8)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7243$Od@c8
                 g$m*$7725$Od@c8
                 g$s*$7726$Od@c8
                 g$ae*$7727$Od@c8
                 g$e$7724$Od@c8)))
            (case-lambda
              ((g$m*$7731$Od@c8 g$s*$7732$Od@c8 g$ae*$7733$Od@c8)
               ((case-lambda
                  ((g$ae*$7734$Od@c8 g$s*$7735$Od@c8 g$m*$7736$Od@c8)
                   (g$make-stx$7229$Od@c8
                     (g$stx-expr$7230$Od@c8 g$e$7724$Od@c8)
                     g$m*$7736$Od@c8
                     g$s*$7735$Od@c8
                     g$ae*$7734$Od@c8)))
                g$ae*$7733$Od@c8
                g$s*$7732$Od@c8
                g$m*$7731$Od@c8))))
          (g$make-stx$7229$Od@c8
            g$e$7724$Od@c8
            g$m*$7725$Od@c8
            g$s*$7726$Od@c8
            g$ae*$7727$Od@c8)))))
   (g$add-mark$7245$Od@c8
     g$add-mark$10869$Od@c8
     (case-lambda
       ((g$m$7737$Od@c8 g$e$7738$Od@c8 g$ae$7739$Od@c8)
        (g$mkstx$7244$Od@c8
          g$e$7738$Od@c8
          (list g$m$7737$Od@c8)
          '(shift)
          (list g$ae$7739$Od@c8)))))
   (g$add-subst$7246$Od@c8
     g$add-subst$10870$Od@c8
     (case-lambda
       ((g$subst$7740$Od@c8 g$e$7741$Od@c8)
        (g$mkstx$7244$Od@c8 g$e$7741$Od@c8 '() (list g$subst$7740$Od@c8) '()))))
   (g$syntax-kind?$7247$Od@c8
     g$syntax-kind?$10871$Od@c8
     (case-lambda
       ((g$x$7742$Od@c8 g$p?$7743$Od@c8)
        (if (g$stx?$7228$Od@c8 g$x$7742$Od@c8)
          (g$syntax-kind?$7247$Od@c8
            (g$stx-expr$7230$Od@c8 g$x$7742$Od@c8)
            g$p?$7743$Od@c8)
          (if (annotation? g$x$7742$Od@c8)
            (g$syntax-kind?$7247$Od@c8
              (annotation-expression g$x$7742$Od@c8)
              g$p?$7743$Od@c8)
            (g$p?$7743$Od@c8 g$x$7742$Od@c8))))))
   (g$syntax-vector->list$7248$Od@c8
     g$syntax-vector->list$10872$Od@c8
     (case-lambda
       ((g$x$7744$Od@c8)
        (if (g$stx?$7228$Od@c8 g$x$7744$Od@c8)
          ((case-lambda
             ((g$ls$7745$Od@c8 g$m*$7746$Od@c8 g$s*$7747$Od@c8 g$ae*$7748$Od@c8)
              (map (case-lambda
                     ((g$x$7749$Od@c8)
                      (g$mkstx$7244$Od@c8
                        g$x$7749$Od@c8
                        g$m*$7746$Od@c8
                        g$s*$7747$Od@c8
                        g$ae*$7748$Od@c8)))
                   g$ls$7745$Od@c8)))
           (g$syntax-vector->list$7248$Od@c8
             (g$stx-expr$7230$Od@c8 g$x$7744$Od@c8))
           (g$stx-mark*$7231$Od@c8 g$x$7744$Od@c8)
           (g$stx-subst*$7232$Od@c8 g$x$7744$Od@c8)
           (g$stx-ae*$7233$Od@c8 g$x$7744$Od@c8))
          (if (annotation? g$x$7744$Od@c8)
            (g$syntax-vector->list$7248$Od@c8
              (annotation-expression g$x$7744$Od@c8))
            (if (vector? g$x$7744$Od@c8)
              (vector->list g$x$7744$Od@c8)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7744$Od@c8)))))))
   (g$syntax-pair?$7249$Od@c8
     g$syntax-pair?$10873$Od@c8
     (case-lambda
       ((g$x$7750$Od@c8) (g$syntax-kind?$7247$Od@c8 g$x$7750$Od@c8 pair?))))
   (g$syntax-vector?$7250$Od@c8
     g$syntax-vector?$10874$Od@c8
     (case-lambda
       ((g$x$7751$Od@c8) (g$syntax-kind?$7247$Od@c8 g$x$7751$Od@c8 vector?))))
   (g$syntax-null?$7251$Od@c8
     g$syntax-null?$10875$Od@c8
     (case-lambda
       ((g$x$7752$Od@c8) (g$syntax-kind?$7247$Od@c8 g$x$7752$Od@c8 null?))))
   (g$syntax-list?$7252$Od@c8
     g$syntax-list?$10876$Od@c8
     (case-lambda
       ((g$x$7753$Od@c8)
        ((case-lambda
           ((g$t$7754$Od@c8)
            (if g$t$7754$Od@c8
              g$t$7754$Od@c8
              (begin
                '#f
                (if (g$syntax-pair?$7249$Od@c8 g$x$7753$Od@c8)
                  (begin
                    '#f
                    (g$syntax-list?$7252$Od@c8
                      (g$syntax-cdr$7254$Od@c8 g$x$7753$Od@c8)))
                  '#f)))))
         (g$syntax-null?$7251$Od@c8 g$x$7753$Od@c8)))))
   (g$syntax-car$7253$Od@c8
     g$syntax-car$10877$Od@c8
     (case-lambda
       ((g$x$7755$Od@c8)
        (if (g$stx?$7228$Od@c8 g$x$7755$Od@c8)
          (g$mkstx$7244$Od@c8
            (g$syntax-car$7253$Od@c8 (g$stx-expr$7230$Od@c8 g$x$7755$Od@c8))
            (g$stx-mark*$7231$Od@c8 g$x$7755$Od@c8)
            (g$stx-subst*$7232$Od@c8 g$x$7755$Od@c8)
            (g$stx-ae*$7233$Od@c8 g$x$7755$Od@c8))
          (if (annotation? g$x$7755$Od@c8)
            (g$syntax-car$7253$Od@c8 (annotation-expression g$x$7755$Od@c8))
            (if (pair? g$x$7755$Od@c8)
              (car g$x$7755$Od@c8)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7755$Od@c8)))))))
   (g$syntax-cdr$7254$Od@c8
     g$syntax-cdr$10878$Od@c8
     (case-lambda
       ((g$x$7756$Od@c8)
        (if (g$stx?$7228$Od@c8 g$x$7756$Od@c8)
          (g$mkstx$7244$Od@c8
            (g$syntax-cdr$7254$Od@c8 (g$stx-expr$7230$Od@c8 g$x$7756$Od@c8))
            (g$stx-mark*$7231$Od@c8 g$x$7756$Od@c8)
            (g$stx-subst*$7232$Od@c8 g$x$7756$Od@c8)
            (g$stx-ae*$7233$Od@c8 g$x$7756$Od@c8))
          (if (annotation? g$x$7756$Od@c8)
            (g$syntax-cdr$7254$Od@c8 (annotation-expression g$x$7756$Od@c8))
            (if (pair? g$x$7756$Od@c8)
              (cdr g$x$7756$Od@c8)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7756$Od@c8)))))))
   (g$syntax->list$7255$Od@c8
     g$syntax->list$10879$Od@c8
     (case-lambda
       ((g$x$7757$Od@c8)
        (if (g$syntax-pair?$7249$Od@c8 g$x$7757$Od@c8)
          (cons
            (g$syntax-car$7253$Od@c8 g$x$7757$Od@c8)
            (g$syntax->list$7255$Od@c8
              (g$syntax-cdr$7254$Od@c8 g$x$7757$Od@c8)))
          (if (g$syntax-null?$7251$Od@c8 g$x$7757$Od@c8)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7757$Od@c8))))))
   (g$id?$7256$Od@c8
     g$id?$10880$Od@c8
     (case-lambda
       ((g$x$7758$Od@c8)
        (if (g$stx?$7228$Od@c8 g$x$7758$Od@c8)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7759$Od@c8)
                (symbol?
                  (if (annotation? g$expr$7759$Od@c8)
                    (annotation-stripped g$expr$7759$Od@c8)
                    g$expr$7759$Od@c8))))
             (g$stx-expr$7230$Od@c8 g$x$7758$Od@c8)))
          '#f))))
   (g$id->sym$7257$Od@c8
     g$id->sym$10881$Od@c8
     (case-lambda
       ((g$x$7760$Od@c8)
        (begin
          (if (g$stx?$7228$Od@c8 g$x$7760$Od@c8)
            (void)
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7760$Od@c8))
          ((case-lambda
             ((g$expr$7761$Od@c8)
              ((case-lambda
                 ((g$sym$7762$Od@c8)
                  (if (symbol? g$sym$7762$Od@c8)
                    g$sym$7762$Od@c8
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7760$Od@c8))))
               (if (annotation? g$expr$7761$Od@c8)
                 (annotation-stripped g$expr$7761$Od@c8)
                 g$expr$7761$Od@c8))))
           (g$stx-expr$7230$Od@c8 g$x$7760$Od@c8))))))
   (g$same-marks?$7258$Od@c8
     g$same-marks?$10882$Od@c8
     (case-lambda
       ((g$x$7763$Od@c8 g$y$7764$Od@c8)
        ((case-lambda
           ((g$t$7765$Od@c8)
            (if g$t$7765$Od@c8
              g$t$7765$Od@c8
              (begin
                '#f
                (if (pair? g$x$7763$Od@c8)
                  (if (pair? g$y$7764$Od@c8)
                    (if (eq? (car g$x$7763$Od@c8) (car g$y$7764$Od@c8))
                      (begin
                        '#f
                        (g$same-marks?$7258$Od@c8
                          (cdr g$x$7763$Od@c8)
                          (cdr g$y$7764$Od@c8)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7763$Od@c8) (begin '#f (null? g$y$7764$Od@c8)) '#f)))))
   (g$bound-id=?$7259$Od@c8
     g$bound-id=?$10883$Od@c8
     (case-lambda
       ((g$x$7766$Od@c8 g$y$7767$Od@c8)
        (if (eq? (g$id->sym$7257$Od@c8 g$x$7766$Od@c8)
                 (g$id->sym$7257$Od@c8 g$y$7767$Od@c8))
          (begin
            '#f
            (g$same-marks?$7258$Od@c8
              (g$stx-mark*$7231$Od@c8 g$x$7766$Od@c8)
              (g$stx-mark*$7231$Od@c8 g$y$7767$Od@c8)))
          '#f))))
   (g$free-id=?$7260$Od@c8
     g$free-id=?$10884$Od@c8
     (case-lambda
       ((g$i$7768$Od@c8 g$j$7769$Od@c8)
        ((case-lambda
           ((g$t0$7770$Od@c8 g$t1$7771$Od@c8)
            (if ((case-lambda
                   ((g$t$7772$Od@c8)
                    (if g$t$7772$Od@c8
                      g$t$7772$Od@c8
                      (begin '#f g$t1$7771$Od@c8))))
                 g$t0$7770$Od@c8)
              (eq? g$t0$7770$Od@c8 g$t1$7771$Od@c8)
              (eq? (g$id->sym$7257$Od@c8 g$i$7768$Od@c8)
                   (g$id->sym$7257$Od@c8 g$j$7769$Od@c8)))))
         (g$id->real-label$7270$Od@c8 g$i$7768$Od@c8)
         (g$id->real-label$7270$Od@c8 g$j$7769$Od@c8)))))
   (g$valid-bound-ids?$7261$Od@c8
     g$valid-bound-ids?$10885$Od@c8
     (case-lambda
       ((g$id*$7773$Od@c8)
        (if (g$for-all$5685$Od@c8 g$id?$7256$Od@c8 g$id*$7773$Od@c8)
          (begin '#f (g$distinct-bound-ids?$7262$Od@c8 g$id*$7773$Od@c8))
          '#f))))
   (g$distinct-bound-ids?$7262$Od@c8
     g$distinct-bound-ids?$10886$Od@c8
     (case-lambda
       ((g$id*$7774$Od@c8)
        ((case-lambda
           ((g$t$7775$Od@c8)
            (if g$t$7775$Od@c8
              g$t$7775$Od@c8
              (begin
                '#f
                (if (not (g$bound-id-member?$7263$Od@c8
                           (car g$id*$7774$Od@c8)
                           (cdr g$id*$7774$Od@c8)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7262$Od@c8 (cdr g$id*$7774$Od@c8)))
                  '#f)))))
         (null? g$id*$7774$Od@c8)))))
   (g$bound-id-member?$7263$Od@c8
     g$bound-id-member?$10887$Od@c8
     (case-lambda
       ((g$id$7776$Od@c8 g$id*$7777$Od@c8)
        (if (pair? g$id*$7777$Od@c8)
          (begin
            '#f
            ((case-lambda
               ((g$t$7778$Od@c8)
                (if g$t$7778$Od@c8
                  g$t$7778$Od@c8
                  (begin
                    '#f
                    (g$bound-id-member?$7263$Od@c8
                      g$id$7776$Od@c8
                      (cdr g$id*$7777$Od@c8))))))
             (g$bound-id=?$7259$Od@c8 g$id$7776$Od@c8 (car g$id*$7777$Od@c8))))
          '#f))))
   (g$self-evaluating?$7264$Od@c8
     g$self-evaluating?$10888$Od@c8
     (case-lambda
       ((g$x$7779$Od@c8)
        ((case-lambda
           ((g$t$7780$Od@c8)
            (if g$t$7780$Od@c8
              g$t$7780$Od@c8
              ((case-lambda
                 ((g$t$7781$Od@c8)
                  (if g$t$7781$Od@c8
                    g$t$7781$Od@c8
                    ((case-lambda
                       ((g$t$7782$Od@c8)
                        (if g$t$7782$Od@c8
                          g$t$7782$Od@c8
                          ((case-lambda
                             ((g$t$7783$Od@c8)
                              (if g$t$7783$Od@c8
                                g$t$7783$Od@c8
                                (begin '#f (bytevector? g$x$7779$Od@c8)))))
                           (boolean? g$x$7779$Od@c8)))))
                     (char? g$x$7779$Od@c8)))))
               (string? g$x$7779$Od@c8)))))
         (number? g$x$7779$Od@c8)))))
   (g$strip-annotations$7265$Od@c8
     g$strip-annotations$10889$Od@c8
     (case-lambda
       ((g$x$7784$Od@c8)
        (if (pair? g$x$7784$Od@c8)
          (cons
            (g$strip-annotations$7265$Od@c8 (car g$x$7784$Od@c8))
            (g$strip-annotations$7265$Od@c8 (cdr g$x$7784$Od@c8)))
          (if (vector? g$x$7784$Od@c8)
            (vector-map g$strip-annotations$7265$Od@c8 g$x$7784$Od@c8)
            (if (annotation? g$x$7784$Od@c8)
              (annotation-stripped g$x$7784$Od@c8)
              g$x$7784$Od@c8))))))
   (g$strip$7266$Od@c8
     g$strip$10890$Od@c8
     (case-lambda
       ((g$x$7785$Od@c8 g$m*$7786$Od@c8)
        (if (g$top-marked?$7199$Od@c8 g$m*$7786$Od@c8)
          (if ((case-lambda
                 ((g$t$7787$Od@c8)
                  (if g$t$7787$Od@c8
                    g$t$7787$Od@c8
                    ((case-lambda
                       ((g$t$7788$Od@c8)
                        (if g$t$7788$Od@c8
                          g$t$7788$Od@c8
                          (begin
                            '#f
                            (if (vector? g$x$7785$Od@c8)
                              (if (> (vector-length g$x$7785$Od@c8) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7785$Od@c8 '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7785$Od@c8)
                       (begin '#f (annotation? (car g$x$7785$Od@c8)))
                       '#f)))))
               (annotation? g$x$7785$Od@c8))
            (g$strip-annotations$7265$Od@c8 g$x$7785$Od@c8)
            g$x$7785$Od@c8)
          ((letrec ((g$f$7789$Od@c8
                      (case-lambda
                        ((g$x$7790$Od@c8)
                         (if (g$stx?$7228$Od@c8 g$x$7790$Od@c8)
                           (g$strip$7266$Od@c8
                             (g$stx-expr$7230$Od@c8 g$x$7790$Od@c8)
                             (g$stx-mark*$7231$Od@c8 g$x$7790$Od@c8))
                           (if (annotation? g$x$7790$Od@c8)
                             (annotation-stripped g$x$7790$Od@c8)
                             (if (pair? g$x$7790$Od@c8)
                               ((case-lambda
                                  ((g$a$7791$Od@c8 g$d$7792$Od@c8)
                                   (if (if (eq? g$a$7791$Od@c8
                                                (car g$x$7790$Od@c8))
                                         (begin
                                           '#f
                                           (eq? g$d$7792$Od@c8
                                                (cdr g$x$7790$Od@c8)))
                                         '#f)
                                     g$x$7790$Od@c8
                                     (cons g$a$7791$Od@c8 g$d$7792$Od@c8))))
                                (g$f$7789$Od@c8 (car g$x$7790$Od@c8))
                                (g$f$7789$Od@c8 (cdr g$x$7790$Od@c8)))
                               (if (vector? g$x$7790$Od@c8)
                                 ((case-lambda
                                    ((g$old$7793$Od@c8)
                                     ((case-lambda
                                        ((g$new$7794$Od@c8)
                                         (if (g$for-all$5685$Od@c8
                                               eq?
                                               g$old$7793$Od@c8
                                               g$new$7794$Od@c8)
                                           g$x$7790$Od@c8
                                           (list->vector g$new$7794$Od@c8))))
                                      (map g$f$7789$Od@c8 g$old$7793$Od@c8))))
                                  (vector->list g$x$7790$Od@c8))
                                 g$x$7790$Od@c8))))))))
             g$f$7789$Od@c8)
           g$x$7785$Od@c8)))))
   (g$stx->datum$7267$Od@c8
     g$stx->datum$10891$Od@c8
     (case-lambda ((g$x$7795$Od@c8) (g$strip$7266$Od@c8 g$x$7795$Od@c8 '()))))
   (g$same-marks*?$7268$Od@c8
     g$same-marks*?$10892$Od@c8
     (case-lambda
       ((g$mark*$7796$Od@c8 g$mark**$7797$Od@c8 g$si$7798$Od@c8)
        (if (null? g$si$7798$Od@c8)
          '#f
          (if (g$same-marks?$7258$Od@c8
                g$mark*$7796$Od@c8
                (vector-ref g$mark**$7797$Od@c8 (car g$si$7798$Od@c8)))
            (car g$si$7798$Od@c8)
            (g$same-marks*?$7268$Od@c8
              g$mark*$7796$Od@c8
              g$mark**$7797$Od@c8
              (cdr g$si$7798$Od@c8)))))))
   (g$id->label$7269$Od@c8
     g$id->label$10893$Od@c8
     (case-lambda
       ((g$id$7799$Od@c8)
        ((case-lambda
           ((g$t$7800$Od@c8)
            (if g$t$7800$Od@c8
              g$t$7800$Od@c8
              (begin
                '#f
                ((case-lambda
                   ((g$t$7801$Od@c8)
                    (if g$t$7801$Od@c8
                      ((case-lambda
                         ((g$env$7802$Od@c8)
                          ((case-lambda
                             ((g$rib$7803$Od@c8)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7204$Od@c8
                                     g$id$7799$Od@c8
                                     g$rib$7803$Od@c8)))
                                (case-lambda
                                  ((g$lab$7806$Od@c8 g$loc_$7807$Od@c8)
                                   ((case-lambda
                                      ((g$loc_$7808$Od@c8 g$lab$7809$Od@c8)
                                       (begin
                                         (g$extend-rib!$7220$Od@c8
                                           g$rib$7803$Od@c8
                                           g$id$7799$Od@c8
                                           g$lab$7809$Od@c8)
                                         g$lab$7809$Od@c8)))
                                    g$loc_$7807$Od@c8
                                    g$lab$7806$Od@c8))))))
                           (g$interaction-env-rib$7612$Od@c8
                             g$env$7802$Od@c8))))
                       g$t$7801$Od@c8)
                      '#f)))
                 (g$top-level-context$7647$Od@c8))))))
         (g$id->real-label$7270$Od@c8 g$id$7799$Od@c8)))))
   (g$id->real-label$7270$Od@c8
     g$id->real-label$10894$Od@c8
     (case-lambda
       ((g$id$7810$Od@c8)
        ((case-lambda
           ((g$sym$7811$Od@c8)
            ((letrec ((g$search$7812$Od@c8
                        (case-lambda
                          ((g$subst*$7813$Od@c8 g$mark*$7814$Od@c8)
                           (if (null? g$subst*$7813$Od@c8)
                             '#f
                             (if (eq? (car g$subst*$7813$Od@c8) 'shift)
                               (g$search$7812$Od@c8
                                 (cdr g$subst*$7813$Od@c8)
                                 (cdr g$mark*$7814$Od@c8))
                               ((case-lambda
                                  ((g$rib$7815$Od@c8)
                                   ((case-lambda
                                      ((g$t$7816$Od@c8)
                                       (if g$t$7816$Od@c8
                                         ((case-lambda
                                            ((g$ht$7817$Od@c8)
                                             ((case-lambda
                                                ((g$si$7818$Od@c8)
                                                 ((case-lambda
                                                    ((g$i$7819$Od@c8)
                                                     (if g$i$7819$Od@c8
                                                       (vector-ref
                                                         (g$rib-label*$7213$Od@c8
                                                           g$rib$7815$Od@c8)
                                                         g$i$7819$Od@c8)
                                                       (g$search$7812$Od@c8
                                                         (cdr g$subst*$7813$Od@c8)
                                                         g$mark*$7814$Od@c8))))
                                                  (if g$si$7818$Od@c8
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7268$Od@c8
                                                        g$mark*$7814$Od@c8
                                                        (g$rib-mark**$7212$Od@c8
                                                          g$rib$7815$Od@c8)
                                                        (reverse
                                                          g$si$7818$Od@c8)))
                                                    '#f))))
                                              (g$hashtable-ref$5481$Od@c8
                                                g$ht$7817$Od@c8
                                                g$sym$7811$Od@c8
                                                '#f))))
                                          g$t$7816$Od@c8)
                                         ((letrec ((g$f$7820$Od@c8
                                                     (case-lambda
                                                       ((g$sym*$7821$Od@c8
                                                          g$mark**$7822$Od@c8
                                                          g$label*$7823$Od@c8)
                                                        (if (null?
                                                              g$sym*$7821$Od@c8)
                                                          (g$search$7812$Od@c8
                                                            (cdr g$subst*$7813$Od@c8)
                                                            g$mark*$7814$Od@c8)
                                                          (if (if (eq? (car g$sym*$7821$Od@c8)
                                                                       g$sym$7811$Od@c8)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7258$Od@c8
                                                                    (car g$mark**$7822$Od@c8)
                                                                    g$mark*$7814$Od@c8))
                                                                '#f)
                                                            (car g$label*$7823$Od@c8)
                                                            (g$f$7820$Od@c8
                                                              (cdr g$sym*$7821$Od@c8)
                                                              (cdr g$mark**$7822$Od@c8)
                                                              (cdr g$label*$7823$Od@c8))))))))
                                            g$f$7820$Od@c8)
                                          (g$rib-sym*$7211$Od@c8
                                            g$rib$7815$Od@c8)
                                          (g$rib-mark**$7212$Od@c8
                                            g$rib$7815$Od@c8)
                                          (g$rib-label*$7213$Od@c8
                                            g$rib$7815$Od@c8)))))
                                    (g$rib-sealed/freq$7214$Od@c8
                                      g$rib$7815$Od@c8))))
                                (car g$subst*$7813$Od@c8))))))))
               g$search$7812$Od@c8)
             (g$stx-subst*$7232$Od@c8 g$id$7810$Od@c8)
             (g$stx-mark*$7231$Od@c8 g$id$7810$Od@c8))))
         (g$id->sym$7257$Od@c8 g$id$7810$Od@c8)))))
   (g$label->binding$7271$Od@c8
     g$label->binding$10895$Od@c8
     (case-lambda
       ((g$x$7824$Od@c8 g$r$7825$Od@c8)
        ((case-lambda
           ((g$t$7826$Od@c8)
            (if g$t$7826$Od@c8
              ((case-lambda
                 ((g$b$7827$Od@c8)
                  (if (if (pair? g$b$7827$Od@c8)
                        (begin '#f (eq? (car g$b$7827$Od@c8) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7497$Od@c8 (cdr g$b$7827$Od@c8)))
                    (if (if (pair? g$b$7827$Od@c8)
                          (begin '#f (eq? (car g$b$7827$Od@c8) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7828$Od@c8 g$loc$7829$Od@c8)
                          (cons '$rtd (symbol-value g$loc$7829$Od@c8))))
                       (g$cadr$5216$Od@c8 g$b$7827$Od@c8)
                       (g$cddr$5218$Od@c8 g$b$7827$Od@c8))
                      g$b$7827$Od@c8))))
               g$t$7826$Od@c8)
              ((case-lambda
                 ((g$t$7830$Od@c8)
                  (if g$t$7830$Od@c8
                    (cdr g$t$7830$Od@c8)
                    ((case-lambda
                       ((g$t$7831$Od@c8)
                        (if g$t$7831$Od@c8
                          ((case-lambda
                             ((g$env$7832$Od@c8)
                              ((case-lambda
                                 ((g$t$7833$Od@c8)
                                  (if g$t$7833$Od@c8
                                    ((case-lambda
                                       ((g$p$7834$Od@c8)
                                        (g$cons*$5687$Od@c8
                                          'lexical
                                          (cdr g$p$7834$Od@c8)
                                          '#f)))
                                     g$t$7833$Od@c8)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7824$Od@c8
                                 (g$interaction-env-locs$7614$Od@c8
                                   g$env$7832$Od@c8)))))
                           g$t$7831$Od@c8)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7647$Od@c8)))))
               (assq g$x$7824$Od@c8 g$r$7825$Od@c8)))))
         (g$imported-label->binding$7070$Od@c8 g$x$7824$Od@c8)))))
   (g$make-binding$7272$Od@c8 g$make-binding$10896$Od@c8 cons)
   (g$binding-type$7273$Od@c8 g$binding-type$10897$Od@c8 car)
   (g$binding-value$7274$Od@c8 g$binding-value$10898$Od@c8 cdr)
   (g$raise-unbound-error$7275$Od@c8
     g$raise-unbound-error$10899$Od@c8
     (case-lambda
       ((g$id$7835$Od@c8)
        (g$syntax-violation*$7639$Od@c8
          '#f
          '"unbound identifier"
          g$id$7835$Od@c8
          (g$make-undefined-violation$6021$Od@c8)))))
   (g$syntax-type$7276$Od@c8
     g$syntax-type$10900$Od@c8
     (case-lambda
       ((g$e$7836$Od@c8 g$r$7837$Od@c8)
        (if (g$id?$7256$Od@c8 g$e$7836$Od@c8)
          ((case-lambda
             ((g$id$7838$Od@c8)
              ((case-lambda
                 ((g$label$7839$Od@c8)
                  ((case-lambda
                     ((g$b$7840$Od@c8)
                      ((case-lambda
                         ((g$type$7841$Od@c8)
                          ((case-lambda
                             (()
                              (begin
                                (if g$label$7839$Od@c8
                                  (void)
                                  (g$raise-unbound-error$7275$Od@c8
                                    g$id$7838$Od@c8))
                                ((case-lambda
                                   ((g$t$7842$Od@c8)
                                    (if (memv
                                          g$t$7842$Od@c8
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7841$Od@c8
                                        (g$binding-value$7274$Od@c8
                                          g$b$7840$Od@c8)
                                        g$id$7838$Od@c8)
                                      (values 'other '#f '#f))))
                                 g$type$7841$Od@c8)))))))
                       (g$binding-type$7273$Od@c8 g$b$7840$Od@c8))))
                   (g$label->binding$7271$Od@c8
                     g$label$7839$Od@c8
                     g$r$7837$Od@c8))))
               (g$id->label$7269$Od@c8 g$id$7838$Od@c8))))
           g$e$7836$Od@c8)
          (if (g$syntax-pair?$7249$Od@c8 g$e$7836$Od@c8)
            ((case-lambda
               ((g$id$7843$Od@c8)
                (if (g$id?$7256$Od@c8 g$id$7843$Od@c8)
                  ((case-lambda
                     ((g$label$7844$Od@c8)
                      ((case-lambda
                         ((g$b$7845$Od@c8)
                          ((case-lambda
                             ((g$type$7846$Od@c8)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if g$label$7844$Od@c8
                                      (void)
                                      (g$raise-unbound-error$7275$Od@c8
                                        g$id$7843$Od@c8))
                                    ((case-lambda
                                       ((g$t$7847$Od@c8)
                                        (if (memv
                                              g$t$7847$Od@c8
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7846$Od@c8
                                            (g$binding-value$7274$Od@c8
                                              g$b$7845$Od@c8)
                                            g$id$7843$Od@c8)
                                          (values 'call '#f '#f))))
                                     g$type$7846$Od@c8)))))))
                           (g$binding-type$7273$Od@c8 g$b$7845$Od@c8))))
                       (g$label->binding$7271$Od@c8
                         g$label$7844$Od@c8
                         g$r$7837$Od@c8))))
                   (g$id->label$7269$Od@c8 g$id$7843$Od@c8))
                  (values 'call '#f '#f))))
             (g$syntax-car$7253$Od@c8 g$e$7836$Od@c8))
            ((case-lambda
               ((g$d$7848$Od@c8)
                (if (g$self-evaluating?$7264$Od@c8 g$d$7848$Od@c8)
                  (values 'constant g$d$7848$Od@c8 '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7267$Od@c8 g$e$7836$Od@c8)))))))
   (g$sanitize-binding$7284$Od@c8
     g$sanitize-binding$10901$Od@c8
     (case-lambda
       ((g$x$7849$Od@c8 g$src$7850$Od@c8)
        (if (procedure? g$x$7849$Od@c8)
          (g$cons*$5687$Od@c8 'local-macro g$x$7849$Od@c8 g$src$7850$Od@c8)
          (if (if (pair? g$x$7849$Od@c8)
                (if (eq? (car g$x$7849$Od@c8) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7849$Od@c8)))
                  '#f)
                '#f)
            (g$cons*$5687$Od@c8
              'local-macro!
              (cdr g$x$7849$Od@c8)
              g$src$7850$Od@c8)
            (if (if (pair? g$x$7849$Od@c8)
                  (begin '#f (eq? (car g$x$7849$Od@c8) '$rtd))
                  '#f)
              g$x$7849$Od@c8
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7849$Od@c8)))))))
   (g$make-variable-transformer$7285$Od@c8
     g$make-variable-transformer$10902$Od@c8
     (case-lambda
       ((g$x$7851$Od@c8)
        (if (procedure? g$x$7851$Od@c8)
          (cons 'macro! g$x$7851$Od@c8)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7851$Od@c8)))))
   (g$variable-transformer?$7286$Od@c8
     g$variable-transformer?$10903$Od@c8
     (case-lambda
       ((g$x$7852$Od@c8)
        (if (pair? g$x$7852$Od@c8)
          (if (eq? (car g$x$7852$Od@c8) 'macro!)
            (begin '#f (procedure? (cdr g$x$7852$Od@c8)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7287$Od@c8
     g$variable-transformer-procedure$10904$Od@c8
     (case-lambda
       ((g$x$7853$Od@c8)
        (if (g$variable-transformer?$7286$Od@c8 g$x$7853$Od@c8)
          (cdr g$x$7853$Od@c8)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7853$Od@c8)))))
   (g$make-eval-transformer$7288$Od@c8
     g$make-eval-transformer$10905$Od@c8
     (case-lambda
       ((g$x$7854$Od@c8)
        (g$sanitize-binding$7284$Od@c8
          (eval-core (g$expanded->core$6770$Od@c8 g$x$7854$Od@c8))
          g$x$7854$Od@c8))))
   (g$parse-define$7474$Od@c8
     g$parse-define$10906$Od@c8
     (case-lambda
       ((g$x$7855$Od@c8)
        ((case-lambda
           ((g$t$7856$Od@c8)
            ((case-lambda
               ((g$ls/false$7857$Od@c8)
                (if (if g$ls/false$7857$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7858$Od@c8
                               g$fmls$7859$Od@c8
                               g$b$7860$Od@c8
                               g$b*$7861$Od@c8)
                             (g$id?$7256$Od@c8 g$id$7858$Od@c8)))
                          g$ls/false$7857$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7862$Od@c8
                         g$fmls$7863$Od@c8
                         g$b$7864$Od@c8
                         g$b*$7865$Od@c8)
                       (begin
                         (g$verify-formals$7554$Od@c8
                           g$fmls$7863$Od@c8
                           g$x$7855$Od@c8)
                         (values
                           g$id$7862$Od@c8
                           (cons
                             'defun
                             (cons
                               g$fmls$7863$Od@c8
                               (cons g$b$7864$Od@c8 g$b*$7865$Od@c8)))))))
                    g$ls/false$7857$Od@c8)
                  ((case-lambda
                     ((g$t$7866$Od@c8)
                      ((case-lambda
                         ((g$ls/false$7867$Od@c8)
                          (if (if g$ls/false$7867$Od@c8
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7868$Od@c8 g$val$7869$Od@c8)
                                       (g$id?$7256$Od@c8 g$id$7868$Od@c8)))
                                    g$ls/false$7867$Od@c8))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7870$Od@c8 g$val$7871$Od@c8)
                                 (values
                                   g$id$7870$Od@c8
                                   (cons 'expr g$val$7871$Od@c8))))
                              g$ls/false$7867$Od@c8)
                            ((case-lambda
                               ((g$t$7872$Od@c8)
                                ((case-lambda
                                   ((g$ls/false$7873$Od@c8)
                                    (if (if g$ls/false$7873$Od@c8
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7874$Od@c8)
                                                 (g$id?$7256$Od@c8
                                                   g$id$7874$Od@c8)))
                                              g$ls/false$7873$Od@c8))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7875$Od@c8)
                                           (values
                                             g$id$7875$Od@c8
                                             (cons
                                               'expr
                                               (g$bless$7497$Od@c8 '(void))))))
                                        g$ls/false$7873$Od@c8)
                                      (g$syntax-violation$7640$Od@c8
                                        '#f
                                        '"invalid syntax"
                                        g$t$7872$Od@c8))))
                                 (g$syntax-dispatch$7534$Od@c8
                                   g$t$7872$Od@c8
                                   '(_ any)))))
                             g$t$7866$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$7866$Od@c8
                         '(_ any any)))))
                   g$t$7856$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$7856$Od@c8
               '(_ (any . any) any . each-any)))))
         g$x$7855$Od@c8))))
   (g$parse-define-syntax$7475$Od@c8
     g$parse-define-syntax$10907$Od@c8
     (case-lambda
       ((g$x$7876$Od@c8)
        ((case-lambda
           ((g$t$7877$Od@c8)
            ((case-lambda
               ((g$ls/false$7878$Od@c8)
                (if (if g$ls/false$7878$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7879$Od@c8 g$val$7880$Od@c8)
                             (g$id?$7256$Od@c8 g$id$7879$Od@c8)))
                          g$ls/false$7878$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7881$Od@c8 g$val$7882$Od@c8)
                       (values g$id$7881$Od@c8 g$val$7882$Od@c8)))
                    g$ls/false$7878$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$7877$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$7877$Od@c8 '(_ any any)))))
         g$x$7876$Od@c8))))
   (g$scheme-stx-hashtable$7476$Od@c8
     g$scheme-stx-hashtable$10908$Od@c8
     (g$make-eq-hashtable$5478$Od@c8))
   (g$scheme-stx$7477$Od@c8
     g$scheme-stx$10909$Od@c8
     (case-lambda
       ((g$sym$7883$Od@c8)
        ((case-lambda
           ((g$t$7884$Od@c8)
            (if g$t$7884$Od@c8
              g$t$7884$Od@c8
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7885$Od@c8)
                    ((case-lambda
                       ((g$stx$7886$Od@c8)
                        ((case-lambda
                           ((g$stx$7887$Od@c8)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5482$Od@c8
                                    g$scheme-stx-hashtable$7476$Od@c8
                                    g$sym$7883$Od@c8
                                    g$stx$7887$Od@c8)
                                  g$stx$7887$Od@c8))))))
                         ((case-lambda
                            ((g$t$7888$Od@c8)
                             (if g$t$7888$Od@c8
                               ((case-lambda
                                  ((g$x$7889$Od@c8)
                                   ((case-lambda
                                      ((g$name$7890$Od@c8 g$label$7891$Od@c8)
                                       (g$add-subst$7246$Od@c8
                                         (g$make-rib$7210$Od@c8
                                           (list g$name$7890$Od@c8)
                                           (list g$top-mark*$7198$Od@c8)
                                           (list g$label$7891$Od@c8)
                                           '#f)
                                         g$stx$7886$Od@c8)))
                                    (car g$x$7889$Od@c8)
                                    (cdr g$x$7889$Od@c8))))
                                g$t$7888$Od@c8)
                               g$stx$7886$Od@c8)))
                          (assq g$sym$7883$Od@c8 g$subst$7885$Od@c8)))))
                     (g$make-stx$7229$Od@c8
                       g$sym$7883$Od@c8
                       g$top-mark*$7198$Od@c8
                       '()
                       '()))))
                 (g$library-subst$7028$Od@c8
                   (g$find-library-by-name$7064$Od@c8
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5481$Od@c8
           g$scheme-stx-hashtable$7476$Od@c8
           g$sym$7883$Od@c8
           '#f)))))
   (g$lexical-var$7478$Od@c8 g$lexical-var$10910$Od@c8 car)
   (g$lexical-mutable?$7479$Od@c8 g$lexical-mutable?$10911$Od@c8 cdr)
   (g$set-lexical-mutable!$7480$Od@c8
     g$set-lexical-mutable!$10912$Od@c8
     set-cdr!)
   (g$add-lexical$7481$Od@c8
     g$add-lexical$10913$Od@c8
     (case-lambda
       ((g$lab$7892$Od@c8 g$lex$7893$Od@c8 g$r$7894$Od@c8)
        (cons
          (g$cons*$5687$Od@c8 g$lab$7892$Od@c8 'lexical g$lex$7893$Od@c8 '#f)
          g$r$7894$Od@c8))))
   (g$add-lexicals$7482$Od@c8
     g$add-lexicals$10914$Od@c8
     (case-lambda
       ((g$lab*$7895$Od@c8 g$lex*$7896$Od@c8 g$r$7897$Od@c8)
        (if (null? g$lab*$7895$Od@c8)
          g$r$7897$Od@c8
          (g$add-lexicals$7482$Od@c8
            (cdr g$lab*$7895$Od@c8)
            (cdr g$lex*$7896$Od@c8)
            (g$add-lexical$7481$Od@c8
              (car g$lab*$7895$Od@c8)
              (car g$lex*$7896$Od@c8)
              g$r$7897$Od@c8))))))
   (g$letrec-helper$7483$Od@c8
     g$letrec-helper$10915$Od@c8
     (case-lambda
       ((g$e$7898$Od@c8 g$r$7899$Od@c8 g$mr$7900$Od@c8 g$build$7901$Od@c8)
        ((case-lambda
           ((g$t$7902$Od@c8)
            ((case-lambda
               ((g$ls/false$7903$Od@c8)
                (if g$ls/false$7903$Od@c8
                  (apply
                    (case-lambda
                      ((g$lhs*$7904$Od@c8
                         g$rhs*$7905$Od@c8
                         g$b$7906$Od@c8
                         g$b*$7907$Od@c8)
                       (if (not (g$valid-bound-ids?$7261$Od@c8
                                  g$lhs*$7904$Od@c8))
                         (g$invalid-fmls-error$7499$Od@c8
                           g$e$7898$Od@c8
                           g$lhs*$7904$Od@c8)
                         ((case-lambda
                            ((g$lex*$7908$Od@c8 g$lab*$7909$Od@c8)
                             ((case-lambda
                                ((g$rib$7910$Od@c8 g$r$7911$Od@c8)
                                 ((case-lambda
                                    ((g$body$7912$Od@c8 g$rhs*$7913$Od@c8)
                                     (g$build$7901$Od@c8
                                       '#f
                                       g$lex*$7908$Od@c8
                                       g$rhs*$7913$Od@c8
                                       g$body$7912$Od@c8)))
                                  (g$chi-internal$7563$Od@c8
                                    (g$add-subst$7246$Od@c8
                                      g$rib$7910$Od@c8
                                      (cons g$b$7906$Od@c8 g$b*$7907$Od@c8))
                                    g$r$7911$Od@c8
                                    g$mr$7900$Od@c8)
                                  (g$chi-expr*$7550$Od@c8
                                    (map (case-lambda
                                           ((g$x$7914$Od@c8)
                                            (g$add-subst$7246$Od@c8
                                              g$rib$7910$Od@c8
                                              g$x$7914$Od@c8)))
                                         g$rhs*$7905$Od@c8)
                                    g$r$7911$Od@c8
                                    g$mr$7900$Od@c8))))
                              (g$make-full-rib$7224$Od@c8
                                g$lhs*$7904$Od@c8
                                g$lab*$7909$Od@c8)
                              (g$add-lexicals$7482$Od@c8
                                g$lab*$7909$Od@c8
                                g$lex*$7908$Od@c8
                                g$r$7899$Od@c8))))
                          (map g$gen-lexical$7200$Od@c8 g$lhs*$7904$Od@c8)
                          (map g$gen-label$7202$Od@c8 g$lhs*$7904$Od@c8)))))
                    g$ls/false$7903$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$7902$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$7902$Od@c8
               '(_ #(each (any any)) any . each-any)))))
         g$e$7898$Od@c8))))
   (g$letrec-transformer$7484$Od@c8
     g$letrec-transformer$10916$Od@c8
     (case-lambda
       ((g$e$7915$Od@c8 g$r$7916$Od@c8 g$mr$7917$Od@c8)
        (g$letrec-helper$7483$Od@c8
          g$e$7915$Od@c8
          g$r$7916$Od@c8
          g$mr$7917$Od@c8
          g$build-letrec$7192$Od@c8))))
   (g$letrec*-transformer$7485$Od@c8
     g$letrec*-transformer$10917$Od@c8
     (case-lambda
       ((g$e$7918$Od@c8 g$r$7919$Od@c8 g$mr$7920$Od@c8)
        (g$letrec-helper$7483$Od@c8
          g$e$7918$Od@c8
          g$r$7919$Od@c8
          g$mr$7920$Od@c8
          g$build-letrec*$7193$Od@c8))))
   (g$fluid-let-syntax-transformer$7486$Od@c8
     g$fluid-let-syntax-transformer$10918$Od@c8
     (case-lambda
       ((g$e$7921$Od@c8 g$r$7922$Od@c8 g$mr$7923$Od@c8)
        (letrec* ((g$lookup$7924$Od@c8
                    (case-lambda
                      ((g$x$7934$Od@c8)
                       ((case-lambda
                          ((g$t$7935$Od@c8)
                           (if g$t$7935$Od@c8
                             g$t$7935$Od@c8
                             (begin
                               '#f
                               (g$syntax-violation$7640$Od@c8
                                 '#f
                                 '"unbound identifier"
                                 g$e$7921$Od@c8
                                 g$x$7934$Od@c8)))))
                        (g$id->label$7269$Od@c8 g$x$7934$Od@c8))))))
          ((case-lambda
             ((g$t$7925$Od@c8)
              ((case-lambda
                 ((g$ls/false$7926$Od@c8)
                  (if g$ls/false$7926$Od@c8
                    (apply
                      (case-lambda
                        ((g$lhs*$7927$Od@c8
                           g$rhs*$7928$Od@c8
                           g$b$7929$Od@c8
                           g$b*$7930$Od@c8)
                         (if (not (g$valid-bound-ids?$7261$Od@c8
                                    g$lhs*$7927$Od@c8))
                           (g$invalid-fmls-error$7499$Od@c8
                             g$e$7921$Od@c8
                             g$lhs*$7927$Od@c8)
                           ((case-lambda
                              ((g$lab*$7931$Od@c8 g$rhs*$7932$Od@c8)
                               (g$chi-internal$7563$Od@c8
                                 (cons g$b$7929$Od@c8 g$b*$7930$Od@c8)
                                 (append
                                   (map cons
                                        g$lab*$7931$Od@c8
                                        g$rhs*$7932$Od@c8)
                                   g$r$7922$Od@c8)
                                 (append
                                   (map cons
                                        g$lab*$7931$Od@c8
                                        g$rhs*$7932$Od@c8)
                                   g$mr$7923$Od@c8))))
                            (map g$lookup$7924$Od@c8 g$lhs*$7927$Od@c8)
                            (map (case-lambda
                                   ((g$x$7933$Od@c8)
                                    (g$make-eval-transformer$7288$Od@c8
                                      (g$expand-transformer$7579$Od@c8
                                        g$x$7933$Od@c8
                                        g$mr$7923$Od@c8))))
                                 g$rhs*$7928$Od@c8)))))
                      g$ls/false$7926$Od@c8)
                    (g$syntax-violation$7640$Od@c8
                      '#f
                      '"invalid syntax"
                      g$t$7925$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8
                 g$t$7925$Od@c8
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7921$Od@c8)))))
   (g$type-descriptor-transformer$7487$Od@c8
     g$type-descriptor-transformer$10919$Od@c8
     (case-lambda
       ((g$e$7936$Od@c8 g$r$7937$Od@c8 g$mr$7938$Od@c8)
        ((case-lambda
           ((g$t$7939$Od@c8)
            ((case-lambda
               ((g$ls/false$7940$Od@c8)
                (if (if g$ls/false$7940$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7941$Od@c8)
                             (g$id?$7256$Od@c8 g$id$7941$Od@c8)))
                          g$ls/false$7940$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7942$Od@c8)
                       ((case-lambda
                          ((g$lab$7943$Od@c8)
                           ((case-lambda
                              ((g$b$7944$Od@c8)
                               ((case-lambda
                                  ((g$type$7945$Od@c8)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7943$Od@c8
                                           (void)
                                           (g$raise-unbound-error$7275$Od@c8
                                             g$id$7942$Od@c8))
                                         (if (if (eq? g$type$7945$Od@c8 '$rtd)
                                               (begin
                                                 '#f
                                                 (not (list?
                                                        (g$binding-value$7274$Od@c8
                                                          g$b$7944$Od@c8))))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"not a record type"
                                             g$e$7936$Od@c8))
                                         (list
                                           'quote
                                           (g$binding-value$7274$Od@c8
                                             g$b$7944$Od@c8))))))))
                                (g$binding-type$7273$Od@c8 g$b$7944$Od@c8))))
                            (g$label->binding$7271$Od@c8
                              g$lab$7943$Od@c8
                              g$r$7937$Od@c8))))
                        (g$id->label$7269$Od@c8 g$id$7942$Od@c8))))
                    g$ls/false$7940$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$7939$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$7939$Od@c8 '(_ any)))))
         g$e$7936$Od@c8))))
   (g$record-type-descriptor-transformer$7488$Od@c8
     g$record-type-descriptor-transformer$10920$Od@c8
     (case-lambda
       ((g$e$7946$Od@c8 g$r$7947$Od@c8 g$mr$7948$Od@c8)
        ((case-lambda
           ((g$t$7949$Od@c8)
            ((case-lambda
               ((g$ls/false$7950$Od@c8)
                (if (if g$ls/false$7950$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7951$Od@c8)
                             (g$id?$7256$Od@c8 g$id$7951$Od@c8)))
                          g$ls/false$7950$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7952$Od@c8)
                       ((case-lambda
                          ((g$lab$7953$Od@c8)
                           ((case-lambda
                              ((g$b$7954$Od@c8)
                               ((case-lambda
                                  ((g$type$7955$Od@c8)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7953$Od@c8
                                           (void)
                                           (g$raise-unbound-error$7275$Od@c8
                                             g$id$7952$Od@c8))
                                         (if (if (eq? g$type$7955$Od@c8 '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7274$Od@c8
                                                     g$b$7954$Od@c8)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"not a record type"
                                             g$e$7946$Od@c8))
                                         (g$chi-expr$7552$Od@c8
                                           (car (g$binding-value$7274$Od@c8
                                                  g$b$7954$Od@c8))
                                           g$r$7947$Od@c8
                                           g$mr$7948$Od@c8)))))))
                                (g$binding-type$7273$Od@c8 g$b$7954$Od@c8))))
                            (g$label->binding$7271$Od@c8
                              g$lab$7953$Od@c8
                              g$r$7947$Od@c8))))
                        (g$id->label$7269$Od@c8 g$id$7952$Od@c8))))
                    g$ls/false$7950$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$7949$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$7949$Od@c8 '(_ any)))))
         g$e$7946$Od@c8))))
   (g$record-constructor-descriptor-transformer$7489$Od@c8
     g$record-constructor-descriptor-transformer$10921$Od@c8
     (case-lambda
       ((g$e$7956$Od@c8 g$r$7957$Od@c8 g$mr$7958$Od@c8)
        ((case-lambda
           ((g$t$7959$Od@c8)
            ((case-lambda
               ((g$ls/false$7960$Od@c8)
                (if (if g$ls/false$7960$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7961$Od@c8)
                             (g$id?$7256$Od@c8 g$id$7961$Od@c8)))
                          g$ls/false$7960$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7962$Od@c8)
                       ((case-lambda
                          ((g$lab$7963$Od@c8)
                           ((case-lambda
                              ((g$b$7964$Od@c8)
                               ((case-lambda
                                  ((g$type$7965$Od@c8)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7963$Od@c8
                                           (void)
                                           (g$raise-unbound-error$7275$Od@c8
                                             g$id$7962$Od@c8))
                                         (if (if (eq? g$type$7965$Od@c8 '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$7274$Od@c8
                                                     g$b$7964$Od@c8)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid type"
                                             g$e$7956$Od@c8))
                                         (g$chi-expr$7552$Od@c8
                                           (g$cadr$5216$Od@c8
                                             (g$binding-value$7274$Od@c8
                                               g$b$7964$Od@c8))
                                           g$r$7957$Od@c8
                                           g$mr$7958$Od@c8)))))))
                                (g$binding-type$7273$Od@c8 g$b$7964$Od@c8))))
                            (g$label->binding$7271$Od@c8
                              g$lab$7963$Od@c8
                              g$r$7957$Od@c8))))
                        (g$id->label$7269$Od@c8 g$id$7962$Od@c8))))
                    g$ls/false$7960$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$7959$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$7959$Od@c8 '(_ any)))))
         g$e$7956$Od@c8))))
   (g$when-transformer$7490$Od@c8
     g$when-transformer$10922$Od@c8
     (case-lambda
       ((g$e$7966$Od@c8 g$r$7967$Od@c8 g$mr$7968$Od@c8)
        ((case-lambda
           ((g$t$7969$Od@c8)
            ((case-lambda
               ((g$ls/false$7970$Od@c8)
                (if g$ls/false$7970$Od@c8
                  (apply
                    (case-lambda
                      ((g$test$7971$Od@c8 g$e$7972$Od@c8 g$e*$7973$Od@c8)
                       (list
                         'if
                         (g$chi-expr$7552$Od@c8
                           g$test$7971$Od@c8
                           g$r$7967$Od@c8
                           g$mr$7968$Od@c8)
                         (g$build-sequence$7190$Od@c8
                           '#f
                           (g$chi-expr*$7550$Od@c8
                             (cons g$e$7972$Od@c8 g$e*$7973$Od@c8)
                             g$r$7967$Od@c8
                             g$mr$7968$Od@c8))
                         (g$build-void$7191$Od@c8))))
                    g$ls/false$7970$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$7969$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$7969$Od@c8
               '(_ any any . each-any)))))
         g$e$7966$Od@c8))))
   (g$unless-transformer$7491$Od@c8
     g$unless-transformer$10923$Od@c8
     (case-lambda
       ((g$e$7974$Od@c8 g$r$7975$Od@c8 g$mr$7976$Od@c8)
        ((case-lambda
           ((g$t$7977$Od@c8)
            ((case-lambda
               ((g$ls/false$7978$Od@c8)
                (if g$ls/false$7978$Od@c8
                  (apply
                    (case-lambda
                      ((g$test$7979$Od@c8 g$e$7980$Od@c8 g$e*$7981$Od@c8)
                       (list
                         'if
                         (g$chi-expr$7552$Od@c8
                           g$test$7979$Od@c8
                           g$r$7975$Od@c8
                           g$mr$7976$Od@c8)
                         (g$build-void$7191$Od@c8)
                         (g$build-sequence$7190$Od@c8
                           '#f
                           (g$chi-expr*$7550$Od@c8
                             (cons g$e$7980$Od@c8 g$e*$7981$Od@c8)
                             g$r$7975$Od@c8
                             g$mr$7976$Od@c8)))))
                    g$ls/false$7978$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$7977$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$7977$Od@c8
               '(_ any any . each-any)))))
         g$e$7974$Od@c8))))
   (g$if-transformer$7492$Od@c8
     g$if-transformer$10924$Od@c8
     (case-lambda
       ((g$e$7982$Od@c8 g$r$7983$Od@c8 g$mr$7984$Od@c8)
        ((case-lambda
           ((g$t$7985$Od@c8)
            ((case-lambda
               ((g$ls/false$7986$Od@c8)
                (if g$ls/false$7986$Od@c8
                  (apply
                    (case-lambda
                      ((g$e0$7987$Od@c8 g$e1$7988$Od@c8 g$e2$7989$Od@c8)
                       (list
                         'if
                         (g$chi-expr$7552$Od@c8
                           g$e0$7987$Od@c8
                           g$r$7983$Od@c8
                           g$mr$7984$Od@c8)
                         (g$chi-expr$7552$Od@c8
                           g$e1$7988$Od@c8
                           g$r$7983$Od@c8
                           g$mr$7984$Od@c8)
                         (g$chi-expr$7552$Od@c8
                           g$e2$7989$Od@c8
                           g$r$7983$Od@c8
                           g$mr$7984$Od@c8))))
                    g$ls/false$7986$Od@c8)
                  ((case-lambda
                     ((g$t$7990$Od@c8)
                      ((case-lambda
                         ((g$ls/false$7991$Od@c8)
                          (if g$ls/false$7991$Od@c8
                            (apply
                              (case-lambda
                                ((g$e0$7992$Od@c8 g$e1$7993$Od@c8)
                                 (list
                                   'if
                                   (g$chi-expr$7552$Od@c8
                                     g$e0$7992$Od@c8
                                     g$r$7983$Od@c8
                                     g$mr$7984$Od@c8)
                                   (g$chi-expr$7552$Od@c8
                                     g$e1$7993$Od@c8
                                     g$r$7983$Od@c8
                                     g$mr$7984$Od@c8)
                                   (g$build-void$7191$Od@c8))))
                              g$ls/false$7991$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$7990$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$7990$Od@c8
                         '(_ any any)))))
                   g$t$7985$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$7985$Od@c8 '(_ any any any)))))
         g$e$7982$Od@c8))))
   (g$case-transformer$7493$Od@c8
     g$case-transformer$10925$Od@c8
     (case-lambda
       ((g$e$7994$Od@c8 g$r$7995$Od@c8 g$mr$7996$Od@c8)
        (letrec* ((g$build-one$7997$Od@c8
                    (case-lambda
                      ((g$t$8026$Od@c8 g$cls$8027$Od@c8 g$rest$8028$Od@c8)
                       ((case-lambda
                          ((g$t$8029$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8030$Od@c8)
                               (if g$ls/false$8030$Od@c8
                                 (apply
                                   (case-lambda
                                     ((g$d*$8031$Od@c8
                                        g$e$8032$Od@c8
                                        g$e*$8033$Od@c8)
                                      (list
                                        'if
                                        ((case-lambda
                                           ((g$data$8034$Od@c8)
                                            (if (= '1
                                                   (length g$data$8034$Od@c8))
                                              (list
                                                '(primitive eqv?)
                                                g$t$8026$Od@c8
                                                (list
                                                  'quote
                                                  (car g$data$8034$Od@c8)))
                                              (list
                                                '(primitive memv)
                                                g$t$8026$Od@c8
                                                (list
                                                  'quote
                                                  g$data$8034$Od@c8)))))
                                         (g$stx->datum$7267$Od@c8
                                           g$d*$8031$Od@c8))
                                        (g$build-sequence$7190$Od@c8
                                          '#f
                                          (g$chi-expr*$7550$Od@c8
                                            (cons
                                              g$e$8032$Od@c8
                                              g$e*$8033$Od@c8)
                                            g$r$7995$Od@c8
                                            g$mr$7996$Od@c8))
                                        g$rest$8028$Od@c8)))
                                   g$ls/false$8030$Od@c8)
                                 ((case-lambda
                                    ((g$t$8035$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8036$Od@c8)
                                         (if g$ls/false$8036$Od@c8
                                           (apply
                                             (case-lambda
                                               ((g$else$8037$Od@c8)
                                                (g$syntax-violation$7640$Od@c8
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$7994$Od@c8)))
                                             g$ls/false$8036$Od@c8)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid syntax"
                                             g$t$8035$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8035$Od@c8
                                        'any))))
                                  g$t$8029$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$8029$Od@c8
                              '(each-any any . each-any)))))
                        g$cls$8027$Od@c8))))
                  (g$build-last$7998$Od@c8
                    (case-lambda
                      ((g$t$8011$Od@c8 g$cls$8012$Od@c8)
                       ((case-lambda
                          ((g$t$8013$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8014$Od@c8)
                               (if g$ls/false$8014$Od@c8
                                 (apply
                                   (case-lambda
                                     ((g$d*$8015$Od@c8
                                        g$e$8016$Od@c8
                                        g$e*$8017$Od@c8)
                                      (g$build-one$7997$Od@c8
                                        g$t$8011$Od@c8
                                        g$cls$8012$Od@c8
                                        (g$build-void$7191$Od@c8))))
                                   g$ls/false$8014$Od@c8)
                                 ((case-lambda
                                    ((g$t$8018$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8019$Od@c8)
                                         (if g$ls/false$8019$Od@c8
                                           (apply
                                             (case-lambda
                                               ((g$else-kwd$8020$Od@c8
                                                  g$x$8021$Od@c8
                                                  g$x*$8022$Od@c8)
                                                (if (if (g$id?$7256$Od@c8
                                                          g$else-kwd$8020$Od@c8)
                                                      (begin
                                                        '#f
                                                        (g$free-id=?$7260$Od@c8
                                                          g$else-kwd$8020$Od@c8
                                                          (g$scheme-stx$7477$Od@c8
                                                            'else)))
                                                      '#f)
                                                  (g$build-sequence$7190$Od@c8
                                                    '#f
                                                    (g$chi-expr*$7550$Od@c8
                                                      (cons
                                                        g$x$8021$Od@c8
                                                        g$x*$8022$Od@c8)
                                                      g$r$7995$Od@c8
                                                      g$mr$7996$Od@c8))
                                                  (g$syntax-violation$7640$Od@c8
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$7994$Od@c8))))
                                             g$ls/false$8019$Od@c8)
                                           ((case-lambda
                                              ((g$t$8023$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$8024$Od@c8)
                                                   (if g$ls/false$8024$Od@c8
                                                     (apply
                                                       (case-lambda
                                                         ((g$else$8025$Od@c8)
                                                          (g$syntax-violation$7640$Od@c8
                                                            '#f
                                                            '"invalid syntax"
                                                            g$e$7994$Od@c8)))
                                                       g$ls/false$8024$Od@c8)
                                                     (g$syntax-violation$7640$Od@c8
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8023$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$8023$Od@c8
                                                  'any))))
                                            g$t$8018$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8018$Od@c8
                                        '(any any . each-any)))))
                                  g$t$8013$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$8013$Od@c8
                              '(each-any any . each-any)))))
                        g$cls$8012$Od@c8)))))
          ((case-lambda
             ((g$t$7999$Od@c8)
              ((case-lambda
                 ((g$ls/false$8000$Od@c8)
                  (if g$ls/false$8000$Od@c8
                    (apply
                      (case-lambda
                        ((g$expr$8001$Od@c8)
                         (g$build-sequence$7190$Od@c8
                           '#f
                           (list
                             (g$chi-expr$7552$Od@c8
                               g$expr$8001$Od@c8
                               g$r$7995$Od@c8
                               g$mr$7996$Od@c8)
                             (g$build-void$7191$Od@c8)))))
                      g$ls/false$8000$Od@c8)
                    ((case-lambda
                       ((g$t$8002$Od@c8)
                        ((case-lambda
                           ((g$ls/false$8003$Od@c8)
                            (if g$ls/false$8003$Od@c8
                              (apply
                                (case-lambda
                                  ((g$expr$8004$Od@c8
                                     g$cls$8005$Od@c8
                                     g$cls*$8006$Od@c8)
                                   ((case-lambda
                                      ((g$t$8007$Od@c8)
                                       (g$build-let$7189$Od@c8
                                         '#f
                                         (list g$t$8007$Od@c8)
                                         (list
                                           (g$chi-expr$7552$Od@c8
                                             g$expr$8004$Od@c8
                                             g$r$7995$Od@c8
                                             g$mr$7996$Od@c8))
                                         ((letrec ((g$f$8008$Od@c8
                                                     (case-lambda
                                                       ((g$cls$8009$Od@c8
                                                          g$cls*$8010$Od@c8)
                                                        (if (null?
                                                              g$cls*$8010$Od@c8)
                                                          (g$build-last$7998$Od@c8
                                                            g$t$8007$Od@c8
                                                            g$cls$8009$Od@c8)
                                                          (g$build-one$7997$Od@c8
                                                            g$t$8007$Od@c8
                                                            g$cls$8009$Od@c8
                                                            (g$f$8008$Od@c8
                                                              (car g$cls*$8010$Od@c8)
                                                              (cdr g$cls*$8010$Od@c8))))))))
                                            g$f$8008$Od@c8)
                                          g$cls$8005$Od@c8
                                          g$cls*$8006$Od@c8))))
                                    (g$gen-lexical$7200$Od@c8 't))))
                                g$ls/false$8003$Od@c8)
                              (g$syntax-violation$7640$Od@c8
                                '#f
                                '"invalid syntax"
                                g$t$8002$Od@c8))))
                         (g$syntax-dispatch$7534$Od@c8
                           g$t$8002$Od@c8
                           '(_ any any . each-any)))))
                     g$t$7999$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8 g$t$7999$Od@c8 '(_ any)))))
           g$e$7994$Od@c8)))))
   (g$quote-transformer$7494$Od@c8
     g$quote-transformer$10926$Od@c8
     (case-lambda
       ((g$e$8038$Od@c8 g$r$8039$Od@c8 g$mr$8040$Od@c8)
        ((case-lambda
           ((g$t$8041$Od@c8)
            ((case-lambda
               ((g$ls/false$8042$Od@c8)
                (if g$ls/false$8042$Od@c8
                  (apply
                    (case-lambda
                      ((g$datum$8043$Od@c8)
                       (list
                         'quote
                         (g$stx->datum$7267$Od@c8 g$datum$8043$Od@c8))))
                    g$ls/false$8042$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8041$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8041$Od@c8 '(_ any)))))
         g$e$8038$Od@c8))))
   (g$case-lambda-transformer$7495$Od@c8
     g$case-lambda-transformer$10927$Od@c8
     (case-lambda
       ((g$e$8044$Od@c8 g$r$8045$Od@c8 g$mr$8046$Od@c8)
        ((case-lambda
           ((g$t$8047$Od@c8)
            ((case-lambda
               ((g$ls/false$8048$Od@c8)
                (if g$ls/false$8048$Od@c8
                  (apply
                    (case-lambda
                      ((g$fmls*$8049$Od@c8 g$b*$8050$Od@c8 g$b**$8051$Od@c8)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7556$Od@c8
                              g$e$8044$Od@c8
                              g$fmls*$8049$Od@c8
                              (map cons g$b*$8050$Od@c8 g$b**$8051$Od@c8)
                              g$r$8045$Od@c8
                              g$mr$8046$Od@c8)))
                         (case-lambda
                           ((g$fmls*$8054$Od@c8 g$body*$8055$Od@c8)
                            ((case-lambda
                               ((g$body*$8056$Od@c8 g$fmls*$8057$Od@c8)
                                (g$build-case-lambda$7188$Od@c8
                                  '#f
                                  g$fmls*$8057$Od@c8
                                  g$body*$8056$Od@c8)))
                             g$body*$8055$Od@c8
                             g$fmls*$8054$Od@c8))))))
                    g$ls/false$8048$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8047$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8047$Od@c8
               '(_ . #(each (any any . each-any)))))))
         g$e$8044$Od@c8))))
   (g$lambda-transformer$7496$Od@c8
     g$lambda-transformer$10928$Od@c8
     (case-lambda
       ((g$e$8058$Od@c8 g$r$8059$Od@c8 g$mr$8060$Od@c8)
        ((case-lambda
           ((g$t$8061$Od@c8)
            ((case-lambda
               ((g$ls/false$8062$Od@c8)
                (if g$ls/false$8062$Od@c8
                  (apply
                    (case-lambda
                      ((g$fmls$8063$Od@c8 g$b$8064$Od@c8 g$b*$8065$Od@c8)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7555$Od@c8
                              g$e$8058$Od@c8
                              g$fmls$8063$Od@c8
                              (cons g$b$8064$Od@c8 g$b*$8065$Od@c8)
                              g$r$8059$Od@c8
                              g$mr$8060$Od@c8)))
                         (case-lambda
                           ((g$fmls$8068$Od@c8 g$body$8069$Od@c8)
                            ((case-lambda
                               ((g$body$8070$Od@c8 g$fmls$8071$Od@c8)
                                (g$build-lambda$7187$Od@c8
                                  '#f
                                  g$fmls$8071$Od@c8
                                  g$body$8070$Od@c8)))
                             g$body$8069$Od@c8
                             g$fmls$8068$Od@c8))))))
                    g$ls/false$8062$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8061$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8061$Od@c8
               '(_ any any . each-any)))))
         g$e$8058$Od@c8))))
   (g$bless$7497$Od@c8
     g$bless$10929$Od@c8
     (case-lambda
       ((g$x$8072$Od@c8)
        (g$mkstx$7244$Od@c8
          ((letrec ((g$f$8073$Od@c8
                      (case-lambda
                        ((g$x$8074$Od@c8)
                         (if (g$stx?$7228$Od@c8 g$x$8074$Od@c8)
                           g$x$8074$Od@c8
                           (if (pair? g$x$8074$Od@c8)
                             (cons
                               (g$f$8073$Od@c8 (car g$x$8074$Od@c8))
                               (g$f$8073$Od@c8 (cdr g$x$8074$Od@c8)))
                             (if (symbol? g$x$8074$Od@c8)
                               (g$scheme-stx$7477$Od@c8 g$x$8074$Od@c8)
                               (if (vector? g$x$8074$Od@c8)
                                 (vector-map g$f$8073$Od@c8 g$x$8074$Od@c8)
                                 g$x$8074$Od@c8))))))))
             g$f$8073$Od@c8)
           g$x$8072$Od@c8)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7498$Od@c8
     g$with-syntax-macro$10930$Od@c8
     (case-lambda
       ((g$e$8075$Od@c8)
        ((case-lambda
           ((g$t$8076$Od@c8)
            ((case-lambda
               ((g$ls/false$8077$Od@c8)
                (if g$ls/false$8077$Od@c8
                  (apply
                    (case-lambda
                      ((g$pat*$8078$Od@c8
                         g$expr*$8079$Od@c8
                         g$b$8080$Od@c8
                         g$b*$8081$Od@c8)
                       ((case-lambda
                          ((g$idn*$8082$Od@c8)
                           (begin
                             (g$verify-formals$7554$Od@c8
                               (map car g$idn*$8082$Od@c8)
                               g$e$8075$Od@c8)
                             ((case-lambda
                                ((g$t*$8083$Od@c8)
                                 (g$bless$7497$Od@c8
                                   (list
                                     'let
                                     (map list
                                          g$t*$8083$Od@c8
                                          g$expr*$8079$Od@c8)
                                     ((letrec ((g$f$8084$Od@c8
                                                 (case-lambda
                                                   ((g$pat*$8085$Od@c8
                                                      g$t*$8086$Od@c8)
                                                    (if (null?
                                                          g$pat*$8085$Od@c8)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8080$Od@c8
                                                            g$b*$8081$Od@c8)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8086$Od@c8)
                                                        '()
                                                        (list
                                                          (car g$pat*$8085$Od@c8)
                                                          (g$f$8084$Od@c8
                                                            (cdr g$pat*$8085$Od@c8)
                                                            (cdr g$t*$8086$Od@c8)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8085$Od@c8))
                                                            (car g$t*$8086$Od@c8)))))))))
                                        g$f$8084$Od@c8)
                                      g$pat*$8078$Od@c8
                                      g$t*$8083$Od@c8)))))
                              (g$generate-temporaries$7633$Od@c8
                                g$expr*$8079$Od@c8)))))
                        ((letrec ((g$f$8087$Od@c8
                                    (case-lambda
                                      ((g$pat*$8088$Od@c8)
                                       (if (null? g$pat*$8088$Od@c8)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7533$Od@c8
                                                (car g$pat*$8088$Od@c8)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8091$Od@c8
                                                g$idn*$8092$Od@c8)
                                              ((case-lambda
                                                 ((g$idn*$8093$Od@c8
                                                    g$pat$8094$Od@c8)
                                                  (append
                                                    g$idn*$8093$Od@c8
                                                    (g$f$8087$Od@c8
                                                      (cdr g$pat*$8088$Od@c8)))))
                                               g$idn*$8092$Od@c8
                                               g$pat$8091$Od@c8)))))))))
                           g$f$8087$Od@c8)
                         g$pat*$8078$Od@c8))))
                    g$ls/false$8077$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8076$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8076$Od@c8
               '(_ #(each (any any)) any . each-any)))))
         g$e$8075$Od@c8))))
   (g$invalid-fmls-error$7499$Od@c8
     g$invalid-fmls-error$10931$Od@c8
     (case-lambda
       ((g$stx$8095$Od@c8 g$fmls$8096$Od@c8)
        ((case-lambda
           ((g$t$8097$Od@c8)
            ((case-lambda
               ((g$ls/false$8098$Od@c8)
                (if g$ls/false$8098$Od@c8
                  (apply
                    (case-lambda
                      ((g$id*$8099$Od@c8 g$last$8100$Od@c8)
                       ((letrec ((g$f$8101$Od@c8
                                   (case-lambda
                                     ((g$id*$8102$Od@c8)
                                      (if (null? g$id*$8102$Od@c8)
                                        (values)
                                        (if (not (g$id?$7256$Od@c8
                                                   (car g$id*$8102$Od@c8)))
                                          (g$syntax-violation$7640$Od@c8
                                            '#f
                                            '"not an identifier"
                                            g$stx$8095$Od@c8
                                            (car g$id*$8102$Od@c8))
                                          (begin
                                            (g$f$8101$Od@c8
                                              (cdr g$id*$8102$Od@c8))
                                            (if (g$bound-id-member?$7263$Od@c8
                                                  (car g$id*$8102$Od@c8)
                                                  (cdr g$id*$8102$Od@c8))
                                              (g$syntax-violation$7640$Od@c8
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8095$Od@c8
                                                (car g$id*$8102$Od@c8))
                                              (void)))))))))
                          g$f$8101$Od@c8)
                        (if (g$id?$7256$Od@c8 g$last$8100$Od@c8)
                          (cons g$last$8100$Od@c8 g$id*$8099$Od@c8)
                          (if (g$syntax-null?$7251$Od@c8 g$last$8100$Od@c8)
                            g$id*$8099$Od@c8
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"not an identifier"
                              g$stx$8095$Od@c8
                              g$last$8100$Od@c8))))))
                    g$ls/false$8098$Od@c8)
                  ((case-lambda
                     ((g$t$8103$Od@c8)
                      ((case-lambda
                         ((g$ls/false$8104$Od@c8)
                          (if g$ls/false$8104$Od@c8
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7640$Od@c8
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8095$Od@c8
                                   g$fmls$8096$Od@c8)))
                              g$ls/false$8104$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$8103$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8 g$t$8103$Od@c8 '_))))
                   g$t$8097$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8097$Od@c8
               '#(each+ any () any)))))
         g$fmls$8096$Od@c8))))
   (g$let-macro$7500$Od@c8
     g$let-macro$10932$Od@c8
     (case-lambda
       ((g$stx$8105$Od@c8)
        ((case-lambda
           ((g$t$8106$Od@c8)
            ((case-lambda
               ((g$ls/false$8107$Od@c8)
                (if g$ls/false$8107$Od@c8
                  (apply
                    (case-lambda
                      ((g$lhs*$8108$Od@c8
                         g$rhs*$8109$Od@c8
                         g$b$8110$Od@c8
                         g$b*$8111$Od@c8)
                       (if (g$valid-bound-ids?$7261$Od@c8 g$lhs*$8108$Od@c8)
                         (g$bless$7497$Od@c8
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8108$Od@c8
                                 (cons g$b$8110$Od@c8 g$b*$8111$Od@c8)))
                             g$rhs*$8109$Od@c8))
                         (g$invalid-fmls-error$7499$Od@c8
                           g$stx$8105$Od@c8
                           g$lhs*$8108$Od@c8))))
                    g$ls/false$8107$Od@c8)
                  ((case-lambda
                     ((g$t$8112$Od@c8)
                      ((case-lambda
                         ((g$ls/false$8113$Od@c8)
                          (if (if g$ls/false$8113$Od@c8
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8114$Od@c8
                                         g$lhs*$8115$Od@c8
                                         g$rhs*$8116$Od@c8
                                         g$b$8117$Od@c8
                                         g$b*$8118$Od@c8)
                                       (g$id?$7256$Od@c8 g$f$8114$Od@c8)))
                                    g$ls/false$8113$Od@c8))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8119$Od@c8
                                   g$lhs*$8120$Od@c8
                                   g$rhs*$8121$Od@c8
                                   g$b$8122$Od@c8
                                   g$b*$8123$Od@c8)
                                 (if (g$valid-bound-ids?$7261$Od@c8
                                       g$lhs*$8120$Od@c8)
                                   (g$bless$7497$Od@c8
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8119$Od@c8
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8120$Od@c8
                                                 (cons
                                                   g$b$8122$Od@c8
                                                   g$b*$8123$Od@c8)))))
                                         g$f$8119$Od@c8)
                                       g$rhs*$8121$Od@c8))
                                   (g$invalid-fmls-error$7499$Od@c8
                                     g$stx$8105$Od@c8
                                     g$lhs*$8120$Od@c8))))
                              g$ls/false$8113$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$8112$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$8112$Od@c8
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8106$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8106$Od@c8
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8105$Od@c8))))
   (g$let-values-macro$7501$Od@c8
     g$let-values-macro$10933$Od@c8
     (case-lambda
       ((g$stx$8124$Od@c8)
        (letrec* ((g$rename$8125$Od@c8
                    (case-lambda
                      ((g$x$8176$Od@c8 g$old*$8177$Od@c8 g$new*$8178$Od@c8)
                       (begin
                         (if (g$id?$7256$Od@c8 g$x$8176$Od@c8)
                           (void)
                           (g$syntax-violation$7640$Od@c8
                             '#f
                             '"not an indentifier"
                             g$stx$8124$Od@c8
                             g$x$8176$Od@c8))
                         (if (g$bound-id-member?$7263$Od@c8
                               g$x$8176$Od@c8
                               g$old*$8177$Od@c8)
                           (g$syntax-violation$7640$Od@c8
                             '#f
                             '"duplicate binding"
                             g$stx$8124$Od@c8
                             g$x$8176$Od@c8)
                           (void))
                         ((case-lambda
                            ((g$y$8179$Od@c8)
                             (values
                               g$y$8179$Od@c8
                               (cons g$x$8176$Od@c8 g$old*$8177$Od@c8)
                               (cons g$y$8179$Od@c8 g$new*$8178$Od@c8))))
                          (gensym
                            (g$syntax->datum$7643$Od@c8 g$x$8176$Od@c8)))))))
                  (g$rename*$8126$Od@c8
                    (case-lambda
                      ((g$x*$8167$Od@c8 g$old*$8168$Od@c8 g$new*$8169$Od@c8)
                       (if (null? g$x*$8167$Od@c8)
                         (values '() g$old*$8168$Od@c8 g$new*$8169$Od@c8)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8125$Od@c8
                                (car g$x*$8167$Od@c8)
                                g$old*$8168$Od@c8
                                g$new*$8169$Od@c8)))
                           (case-lambda
                             ((g$x$8170$Od@c8
                                g$old*$8171$Od@c8
                                g$new*$8172$Od@c8)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8126$Od@c8
                                     (cdr g$x*$8167$Od@c8)
                                     g$old*$8171$Od@c8
                                     g$new*$8172$Od@c8)))
                                (case-lambda
                                  ((g$x*$8173$Od@c8
                                     g$old*$8174$Od@c8
                                     g$new*$8175$Od@c8)
                                   (values
                                     (cons g$x$8170$Od@c8 g$x*$8173$Od@c8)
                                     g$old*$8174$Od@c8
                                     g$new*$8175$Od@c8))))))))))))
          ((case-lambda
             ((g$t$8127$Od@c8)
              ((case-lambda
                 ((g$ls/false$8128$Od@c8)
                  (if g$ls/false$8128$Od@c8
                    (apply
                      (case-lambda
                        ((g$b$8129$Od@c8 g$b*$8130$Od@c8)
                         (g$cons*$5687$Od@c8
                           (g$bless$7497$Od@c8 'let)
                           '()
                           g$b$8129$Od@c8
                           g$b*$8130$Od@c8)))
                      g$ls/false$8128$Od@c8)
                    ((case-lambda
                       ((g$t$8131$Od@c8)
                        ((case-lambda
                           ((g$ls/false$8132$Od@c8)
                            (if g$ls/false$8132$Od@c8
                              (apply
                                (case-lambda
                                  ((g$lhs*$8133$Od@c8
                                     g$rhs*$8134$Od@c8
                                     g$b$8135$Od@c8
                                     g$b*$8136$Od@c8)
                                   (g$bless$7497$Od@c8
                                     ((letrec ((g$f$8137$Od@c8
                                                 (case-lambda
                                                   ((g$lhs*$8138$Od@c8
                                                      g$rhs*$8139$Od@c8
                                                      g$old*$8140$Od@c8
                                                      g$new*$8141$Od@c8)
                                                    (if (null?
                                                          g$lhs*$8138$Od@c8)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8140$Od@c8
                                                               g$new*$8141$Od@c8)
                                                          (cons
                                                            g$b$8135$Od@c8
                                                            g$b*$8136$Od@c8)))
                                                      ((case-lambda
                                                         ((g$t$8142$Od@c8)
                                                          ((case-lambda
                                                             ((g$ls/false$8143$Od@c8)
                                                              (if g$ls/false$8143$Od@c8
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8144$Od@c8)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8126$Od@c8
                                                                            g$x*$8144$Od@c8
                                                                            g$old*$8140$Od@c8
                                                                            g$new*$8141$Od@c8)))
                                                                       (case-lambda
                                                                         ((g$y*$8148$Od@c8
                                                                            g$old*$8149$Od@c8
                                                                            g$new*$8150$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$new*$8151$Od@c8
                                                                                g$old*$8152$Od@c8
                                                                                g$y*$8153$Od@c8)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8139$Od@c8))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8153$Od@c8
                                                                                  (g$f$8137$Od@c8
                                                                                    (cdr g$lhs*$8138$Od@c8)
                                                                                    (cdr g$rhs*$8139$Od@c8)
                                                                                    g$old*$8152$Od@c8
                                                                                    g$new*$8151$Od@c8)))))
                                                                           g$new*$8150$Od@c8
                                                                           g$old*$8149$Od@c8
                                                                           g$y*$8148$Od@c8))))))
                                                                  g$ls/false$8143$Od@c8)
                                                                ((case-lambda
                                                                   ((g$t$8154$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8155$Od@c8)
                                                                        (if g$ls/false$8155$Od@c8
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8156$Od@c8
                                                                                 g$x$8157$Od@c8)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8125$Od@c8
                                                                                      g$x$8157$Od@c8
                                                                                      g$old*$8140$Od@c8
                                                                                      g$new*$8141$Od@c8)))
                                                                                 (case-lambda
                                                                                   ((g$y$8158$Od@c8
                                                                                      g$old*$8159$Od@c8
                                                                                      g$new*$8160$Od@c8)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8126$Od@c8
                                                                                           g$x*$8156$Od@c8
                                                                                           g$old*$8159$Od@c8
                                                                                           g$new*$8160$Od@c8)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8161$Od@c8
                                                                                           g$old*$8162$Od@c8
                                                                                           g$new*$8163$Od@c8)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8139$Od@c8))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8161$Od@c8
                                                                                               g$y$8158$Od@c8)
                                                                                             (g$f$8137$Od@c8
                                                                                               (cdr g$lhs*$8138$Od@c8)
                                                                                               (cdr g$rhs*$8139$Od@c8)
                                                                                               g$old*$8162$Od@c8
                                                                                               g$new*$8163$Od@c8)))))))))))
                                                                            g$ls/false$8155$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$t$8164$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8165$Od@c8)
                                                                                  (if g$ls/false$8165$Od@c8
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8166$Od@c8)
                                                                                         (g$syntax-violation$7640$Od@c8
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8124$Od@c8
                                                                                           g$others$8166$Od@c8)))
                                                                                      g$ls/false$8165$Od@c8)
                                                                                    (g$syntax-violation$7640$Od@c8
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8164$Od@c8))))
                                                                               (g$syntax-dispatch$7534$Od@c8
                                                                                 g$t$8164$Od@c8
                                                                                 'any))))
                                                                           g$t$8154$Od@c8))))
                                                                     (g$syntax-dispatch$7534$Od@c8
                                                                       g$t$8154$Od@c8
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8142$Od@c8))))
                                                           (g$syntax-dispatch$7534$Od@c8
                                                             g$t$8142$Od@c8
                                                             'each-any))))
                                                       (car g$lhs*$8138$Od@c8)))))))
                                        g$f$8137$Od@c8)
                                      g$lhs*$8133$Od@c8
                                      g$rhs*$8134$Od@c8
                                      '()
                                      '()))))
                                g$ls/false$8132$Od@c8)
                              (g$syntax-violation$7640$Od@c8
                                '#f
                                '"invalid syntax"
                                g$t$8131$Od@c8))))
                         (g$syntax-dispatch$7534$Od@c8
                           g$t$8131$Od@c8
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8127$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8
                 g$t$8127$Od@c8
                 '(_ () any . each-any)))))
           g$stx$8124$Od@c8)))))
   (g$let*-values-macro$7502$Od@c8
     g$let*-values-macro$10934$Od@c8
     (case-lambda
       ((g$stx$8180$Od@c8)
        (letrec* ((g$check$8181$Od@c8
                    (case-lambda
                      ((g$x*$8205$Od@c8)
                       (if (null? g$x*$8205$Od@c8)
                         (void)
                         ((case-lambda
                            ((g$x$8206$Od@c8)
                             (begin
                               (if (g$id?$7256$Od@c8 g$x$8206$Od@c8)
                                 (void)
                                 (g$syntax-violation$7640$Od@c8
                                   '#f
                                   '"not an identifier"
                                   g$stx$8180$Od@c8
                                   g$x$8206$Od@c8))
                               (g$check$8181$Od@c8 (cdr g$x*$8205$Od@c8))
                               (if (g$bound-id-member?$7263$Od@c8
                                     g$x$8206$Od@c8
                                     (cdr g$x*$8205$Od@c8))
                                 (g$syntax-violation$7640$Od@c8
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8180$Od@c8
                                   g$x$8206$Od@c8)
                                 (void)))))
                          (car g$x*$8205$Od@c8)))))))
          ((case-lambda
             ((g$t$8182$Od@c8)
              ((case-lambda
                 ((g$ls/false$8183$Od@c8)
                  (if g$ls/false$8183$Od@c8
                    (apply
                      (case-lambda
                        ((g$b$8184$Od@c8 g$b*$8185$Od@c8)
                         (g$cons*$5687$Od@c8
                           (g$bless$7497$Od@c8 'let)
                           '()
                           g$b$8184$Od@c8
                           g$b*$8185$Od@c8)))
                      g$ls/false$8183$Od@c8)
                    ((case-lambda
                       ((g$t$8186$Od@c8)
                        ((case-lambda
                           ((g$ls/false$8187$Od@c8)
                            (if g$ls/false$8187$Od@c8
                              (apply
                                (case-lambda
                                  ((g$lhs*$8188$Od@c8
                                     g$rhs*$8189$Od@c8
                                     g$b$8190$Od@c8
                                     g$b*$8191$Od@c8)
                                   (g$bless$7497$Od@c8
                                     ((letrec ((g$f$8192$Od@c8
                                                 (case-lambda
                                                   ((g$lhs*$8193$Od@c8
                                                      g$rhs*$8194$Od@c8)
                                                    (if (null?
                                                          g$lhs*$8193$Od@c8)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8190$Od@c8
                                                          g$b*$8191$Od@c8))
                                                      ((case-lambda
                                                         ((g$t$8195$Od@c8)
                                                          ((case-lambda
                                                             ((g$ls/false$8196$Od@c8)
                                                              (if g$ls/false$8196$Od@c8
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8197$Od@c8)
                                                                     (begin
                                                                       (g$check$8181$Od@c8
                                                                         g$x*$8197$Od@c8)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8194$Od@c8))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8197$Od@c8
                                                                           (g$f$8192$Od@c8
                                                                             (cdr g$lhs*$8193$Od@c8)
                                                                             (cdr g$rhs*$8194$Od@c8)))))))
                                                                  g$ls/false$8196$Od@c8)
                                                                ((case-lambda
                                                                   ((g$t$8198$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8199$Od@c8)
                                                                        (if g$ls/false$8199$Od@c8
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8200$Od@c8
                                                                                 g$x$8201$Od@c8)
                                                                               (begin
                                                                                 (g$check$8181$Od@c8
                                                                                   (cons
                                                                                     g$x$8201$Od@c8
                                                                                     g$x*$8200$Od@c8))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8194$Od@c8))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8200$Od@c8
                                                                                       g$x$8201$Od@c8)
                                                                                     (g$f$8192$Od@c8
                                                                                       (cdr g$lhs*$8193$Od@c8)
                                                                                       (cdr g$rhs*$8194$Od@c8)))))))
                                                                            g$ls/false$8199$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$t$8202$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8203$Od@c8)
                                                                                  (if g$ls/false$8203$Od@c8
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8204$Od@c8)
                                                                                         (g$syntax-violation$7640$Od@c8
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8180$Od@c8
                                                                                           g$others$8204$Od@c8)))
                                                                                      g$ls/false$8203$Od@c8)
                                                                                    (g$syntax-violation$7640$Od@c8
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8202$Od@c8))))
                                                                               (g$syntax-dispatch$7534$Od@c8
                                                                                 g$t$8202$Od@c8
                                                                                 'any))))
                                                                           g$t$8198$Od@c8))))
                                                                     (g$syntax-dispatch$7534$Od@c8
                                                                       g$t$8198$Od@c8
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8195$Od@c8))))
                                                           (g$syntax-dispatch$7534$Od@c8
                                                             g$t$8195$Od@c8
                                                             'each-any))))
                                                       (car g$lhs*$8193$Od@c8)))))))
                                        g$f$8192$Od@c8)
                                      g$lhs*$8188$Od@c8
                                      g$rhs*$8189$Od@c8))))
                                g$ls/false$8187$Od@c8)
                              (g$syntax-violation$7640$Od@c8
                                '#f
                                '"invalid syntax"
                                g$t$8186$Od@c8))))
                         (g$syntax-dispatch$7534$Od@c8
                           g$t$8186$Od@c8
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8182$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8
                 g$t$8182$Od@c8
                 '(_ () any . each-any)))))
           g$stx$8180$Od@c8)))))
   (g$trace-lambda-macro$7503$Od@c8
     g$trace-lambda-macro$10935$Od@c8
     (case-lambda
       ((g$stx$8207$Od@c8)
        ((case-lambda
           ((g$t$8208$Od@c8)
            ((case-lambda
               ((g$ls/false$8209$Od@c8)
                (if g$ls/false$8209$Od@c8
                  (apply
                    (case-lambda
                      ((g$who$8210$Od@c8
                         g$fmls$8211$Od@c8
                         g$b$8212$Od@c8
                         g$b*$8213$Od@c8)
                       (if (g$valid-bound-ids?$7261$Od@c8 g$fmls$8211$Od@c8)
                         (g$bless$7497$Od@c8
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8210$Od@c8)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8211$Od@c8
                                 (cons g$b$8212$Od@c8 g$b*$8213$Od@c8)))))
                         (g$invalid-fmls-error$7499$Od@c8
                           g$stx$8207$Od@c8
                           g$fmls$8211$Od@c8))))
                    g$ls/false$8209$Od@c8)
                  ((case-lambda
                     ((g$t$8214$Od@c8)
                      ((case-lambda
                         ((g$ls/false$8215$Od@c8)
                          (if g$ls/false$8215$Od@c8
                            (apply
                              (case-lambda
                                ((g$who$8216$Od@c8
                                   g$fmls$8217$Od@c8
                                   g$last$8218$Od@c8
                                   g$b$8219$Od@c8
                                   g$b*$8220$Od@c8)
                                 (if (g$valid-bound-ids?$7261$Od@c8
                                       (cons
                                         g$last$8218$Od@c8
                                         g$fmls$8217$Od@c8))
                                   (g$bless$7497$Od@c8
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8216$Od@c8)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8217$Od@c8
                                             g$last$8218$Od@c8)
                                           (cons
                                             g$b$8219$Od@c8
                                             g$b*$8220$Od@c8)))))
                                   (g$invalid-fmls-error$7499$Od@c8
                                     g$stx$8207$Od@c8
                                     (append
                                       g$fmls$8217$Od@c8
                                       g$last$8218$Od@c8)))))
                              g$ls/false$8215$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$8214$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$8214$Od@c8
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8208$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8208$Od@c8
               '(_ any each-any any . each-any)))))
         g$stx$8207$Od@c8))))
   (g$trace-define-macro$7504$Od@c8
     g$trace-define-macro$10936$Od@c8
     (case-lambda
       ((g$stx$8221$Od@c8)
        ((case-lambda
           ((g$t$8222$Od@c8)
            ((case-lambda
               ((g$ls/false$8223$Od@c8)
                (if g$ls/false$8223$Od@c8
                  (apply
                    (case-lambda
                      ((g$who$8224$Od@c8
                         g$fmls$8225$Od@c8
                         g$b$8226$Od@c8
                         g$b*$8227$Od@c8)
                       (if (g$valid-bound-ids?$7261$Od@c8 g$fmls$8225$Od@c8)
                         (g$bless$7497$Od@c8
                           (list
                             'define
                             g$who$8224$Od@c8
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8224$Od@c8)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8225$Od@c8
                                   (cons g$b$8226$Od@c8 g$b*$8227$Od@c8))))))
                         (g$invalid-fmls-error$7499$Od@c8
                           g$stx$8221$Od@c8
                           g$fmls$8225$Od@c8))))
                    g$ls/false$8223$Od@c8)
                  ((case-lambda
                     ((g$t$8228$Od@c8)
                      ((case-lambda
                         ((g$ls/false$8229$Od@c8)
                          (if g$ls/false$8229$Od@c8
                            (apply
                              (case-lambda
                                ((g$who$8230$Od@c8
                                   g$fmls$8231$Od@c8
                                   g$last$8232$Od@c8
                                   g$b$8233$Od@c8
                                   g$b*$8234$Od@c8)
                                 (if (g$valid-bound-ids?$7261$Od@c8
                                       (cons
                                         g$last$8232$Od@c8
                                         g$fmls$8231$Od@c8))
                                   (g$bless$7497$Od@c8
                                     (list
                                       'define
                                       g$who$8230$Od@c8
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8230$Od@c8)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8231$Od@c8
                                               g$last$8232$Od@c8)
                                             (cons
                                               g$b$8233$Od@c8
                                               g$b*$8234$Od@c8))))))
                                   (g$invalid-fmls-error$7499$Od@c8
                                     g$stx$8221$Od@c8
                                     (append
                                       g$fmls$8231$Od@c8
                                       g$last$8232$Od@c8)))))
                              g$ls/false$8229$Od@c8)
                            ((case-lambda
                               ((g$t$8235$Od@c8)
                                ((case-lambda
                                   ((g$ls/false$8236$Od@c8)
                                    (if g$ls/false$8236$Od@c8
                                      (apply
                                        (case-lambda
                                          ((g$who$8237$Od@c8 g$expr$8238$Od@c8)
                                           (if (g$id?$7256$Od@c8
                                                 g$who$8237$Od@c8)
                                             (g$bless$7497$Od@c8
                                               (list
                                                 'define
                                                 g$who$8237$Od@c8
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8238$Od@c8))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8237$Od@c8)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7640$Od@c8
                                               '#f
                                               '"invalid name"
                                               g$stx$8221$Od@c8))))
                                        g$ls/false$8236$Od@c8)
                                      (g$syntax-violation$7640$Od@c8
                                        '#f
                                        '"invalid syntax"
                                        g$t$8235$Od@c8))))
                                 (g$syntax-dispatch$7534$Od@c8
                                   g$t$8235$Od@c8
                                   '(_ any any)))))
                             g$t$8228$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$8228$Od@c8
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8222$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8222$Od@c8
               '(_ (any . each-any) any . each-any)))))
         g$stx$8221$Od@c8))))
   (g$trace-define-syntax-macro$7505$Od@c8
     g$trace-define-syntax-macro$10937$Od@c8
     (case-lambda
       ((g$stx$8239$Od@c8)
        ((case-lambda
           ((g$t$8240$Od@c8)
            ((case-lambda
               ((g$ls/false$8241$Od@c8)
                (if g$ls/false$8241$Od@c8
                  (apply
                    (case-lambda
                      ((g$who$8242$Od@c8 g$expr$8243$Od@c8)
                       (if (g$id?$7256$Od@c8 g$who$8242$Od@c8)
                         (g$bless$7497$Od@c8
                           (list
                             'define-syntax
                             g$who$8242$Od@c8
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8242$Od@c8)
                               g$expr$8243$Od@c8)))
                         (g$syntax-violation$7640$Od@c8
                           '#f
                           '"invalid name"
                           g$stx$8239$Od@c8))))
                    g$ls/false$8241$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8240$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8240$Od@c8 '(_ any any)))))
         g$stx$8239$Od@c8))))
   (g$trace-let/rec-syntax$7506$Od@c8
     g$trace-let/rec-syntax$10938$Od@c8
     (case-lambda
       ((g$who$8244$Od@c8)
        (case-lambda
          ((g$stx$8245$Od@c8)
           ((case-lambda
              ((g$t$8246$Od@c8)
               ((case-lambda
                  ((g$ls/false$8247$Od@c8)
                   (if g$ls/false$8247$Od@c8
                     (apply
                       (case-lambda
                         ((g$lhs*$8248$Od@c8
                            g$rhs*$8249$Od@c8
                            g$b$8250$Od@c8
                            g$b*$8251$Od@c8)
                          (if (g$valid-bound-ids?$7261$Od@c8 g$lhs*$8248$Od@c8)
                            ((case-lambda
                               ((g$rhs*$8252$Od@c8)
                                (g$bless$7497$Od@c8
                                  (cons
                                    g$who$8244$Od@c8
                                    (cons
                                      (map list
                                           g$lhs*$8248$Od@c8
                                           g$rhs*$8252$Od@c8)
                                      (cons g$b$8250$Od@c8 g$b*$8251$Od@c8))))))
                             (map (case-lambda
                                    ((g$lhs$8253$Od@c8 g$rhs$8254$Od@c8)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8253$Od@c8)
                                       g$rhs$8254$Od@c8)))
                                  g$lhs*$8248$Od@c8
                                  g$rhs*$8249$Od@c8))
                            (g$invalid-fmls-error$7499$Od@c8
                              g$stx$8245$Od@c8
                              g$lhs*$8248$Od@c8))))
                       g$ls/false$8247$Od@c8)
                     (g$syntax-violation$7640$Od@c8
                       '#f
                       '"invalid syntax"
                       g$t$8246$Od@c8))))
                (g$syntax-dispatch$7534$Od@c8
                  g$t$8246$Od@c8
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8245$Od@c8))))))
   (g$trace-let-syntax-macro$7507$Od@c8
     g$trace-let-syntax-macro$10939$Od@c8
     (g$trace-let/rec-syntax$7506$Od@c8 'let-syntax))
   (g$trace-letrec-syntax-macro$7508$Od@c8
     g$trace-letrec-syntax-macro$10940$Od@c8
     (g$trace-let/rec-syntax$7506$Od@c8 'letrec-syntax))
   (g$guard-macro$7509$Od@c8
     g$guard-macro$10941$Od@c8
     (case-lambda
       ((g$x$8255$Od@c8)
        (letrec* ((g$gen-clauses$8256$Od@c8
                    (case-lambda
                      ((g$con$8267$Od@c8 g$clause*$8268$Od@c8)
                       (letrec* ((g$f$8269$Od@c8
                                   (case-lambda
                                     ((g$x$8297$Od@c8 g$k$8298$Od@c8)
                                      ((case-lambda
                                         ((g$t$8299$Od@c8)
                                          ((case-lambda
                                             ((g$ls/false$8300$Od@c8)
                                              (if g$ls/false$8300$Od@c8
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8301$Od@c8
                                                       g$p$8302$Od@c8)
                                                     ((case-lambda
                                                        ((g$t$8303$Od@c8)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8303$Od@c8
                                                               g$e$8301$Od@c8))
                                                           (list
                                                             'if
                                                             g$t$8303$Od@c8
                                                             (list
                                                               g$p$8302$Od@c8
                                                               g$t$8303$Od@c8)
                                                             g$k$8298$Od@c8))))
                                                      (gensym))))
                                                  g$ls/false$8300$Od@c8)
                                                ((case-lambda
                                                   ((g$t$8304$Od@c8)
                                                    ((case-lambda
                                                       ((g$ls/false$8305$Od@c8)
                                                        (if g$ls/false$8305$Od@c8
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8306$Od@c8)
                                                               ((case-lambda
                                                                  ((g$t$8307$Od@c8)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8307$Od@c8
                                                                         g$e$8306$Od@c8))
                                                                     (list
                                                                       'if
                                                                       g$t$8307$Od@c8
                                                                       g$t$8307$Od@c8
                                                                       g$k$8298$Od@c8))))
                                                                (gensym))))
                                                            g$ls/false$8305$Od@c8)
                                                          ((case-lambda
                                                             ((g$t$8308$Od@c8)
                                                              ((case-lambda
                                                                 ((g$ls/false$8309$Od@c8)
                                                                  (if g$ls/false$8309$Od@c8
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8310$Od@c8
                                                                           g$v$8311$Od@c8
                                                                           g$v*$8312$Od@c8)
                                                                         (list
                                                                           'if
                                                                           g$e$8310$Od@c8
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8311$Od@c8
                                                                               g$v*$8312$Od@c8))
                                                                           g$k$8298$Od@c8)))
                                                                      g$ls/false$8309$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$t$8313$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8314$Od@c8)
                                                                            (if g$ls/false$8314$Od@c8
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7640$Od@c8
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8297$Od@c8)))
                                                                                g$ls/false$8314$Od@c8)
                                                                              (g$syntax-violation$7640$Od@c8
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8313$Od@c8))))
                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                           g$t$8313$Od@c8
                                                                           '_))))
                                                                     g$t$8308$Od@c8))))
                                                               (g$syntax-dispatch$7534$Od@c8
                                                                 g$t$8308$Od@c8
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8304$Od@c8))))
                                                     (g$syntax-dispatch$7534$Od@c8
                                                       g$t$8304$Od@c8
                                                       '(any)))))
                                                 g$t$8299$Od@c8))))
                                           (g$syntax-dispatch$7534$Od@c8
                                             g$t$8299$Od@c8
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8297$Od@c8))))
                                 (g$f*$8270$Od@c8
                                   (case-lambda
                                     ((g$x*$8277$Od@c8)
                                      ((case-lambda
                                         ((g$t$8278$Od@c8)
                                          ((case-lambda
                                             ((g$ls/false$8279$Od@c8)
                                              (if g$ls/false$8279$Od@c8
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8267$Od@c8)
                                                       '#f)))
                                                  g$ls/false$8279$Od@c8)
                                                ((case-lambda
                                                   ((g$t$8280$Od@c8)
                                                    ((case-lambda
                                                       ((g$ls/false$8281$Od@c8)
                                                        (if g$ls/false$8281$Od@c8
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8282$Od@c8
                                                                 g$e*$8283$Od@c8)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8282$Od@c8
                                                                     g$e*$8283$Od@c8))
                                                                 '#f)))
                                                            g$ls/false$8281$Od@c8)
                                                          ((case-lambda
                                                             ((g$t$8284$Od@c8)
                                                              ((case-lambda
                                                                 ((g$ls/false$8285$Od@c8)
                                                                  (if g$ls/false$8285$Od@c8
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8286$Od@c8
                                                                           g$cls*$8287$Od@c8)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8270$Od@c8
                                                                                g$cls*$8287$Od@c8)))
                                                                           (case-lambda
                                                                             ((g$e$8290$Od@c8
                                                                                g$g$8291$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$g$8292$Od@c8
                                                                                    g$e$8293$Od@c8)
                                                                                  (values
                                                                                    (g$f$8269$Od@c8
                                                                                      g$cls$8286$Od@c8
                                                                                      g$e$8293$Od@c8)
                                                                                    g$g$8292$Od@c8)))
                                                                               g$g$8291$Od@c8
                                                                               g$e$8290$Od@c8))))))
                                                                      g$ls/false$8285$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$t$8294$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8295$Od@c8)
                                                                            (if g$ls/false$8295$Od@c8
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8296$Od@c8)
                                                                                   (g$syntax-violation$7640$Od@c8
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8296$Od@c8)))
                                                                                g$ls/false$8295$Od@c8)
                                                                              (g$syntax-violation$7640$Od@c8
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8294$Od@c8))))
                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                           g$t$8294$Od@c8
                                                                           'any))))
                                                                     g$t$8284$Od@c8))))
                                                               (g$syntax-dispatch$7534$Od@c8
                                                                 g$t$8284$Od@c8
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8280$Od@c8))))
                                                     (g$syntax-dispatch$7534$Od@c8
                                                       g$t$8280$Od@c8
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8278$Od@c8))))
                                           (g$syntax-dispatch$7534$Od@c8
                                             g$t$8278$Od@c8
                                             '()))))
                                       g$x*$8277$Od@c8)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8270$Od@c8 g$clause*$8268$Od@c8)))
                           (case-lambda
                             ((g$code$8273$Od@c8 g$raisek$8274$Od@c8)
                              ((case-lambda
                                 ((g$raisek$8275$Od@c8 g$code$8276$Od@c8)
                                  g$code$8276$Od@c8))
                               g$raisek$8274$Od@c8
                               g$code$8273$Od@c8)))))))))
          ((case-lambda
             ((g$t$8257$Od@c8)
              ((case-lambda
                 ((g$ls/false$8258$Od@c8)
                  (if (if g$ls/false$8258$Od@c8
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8259$Od@c8
                                 g$clause*$8260$Od@c8
                                 g$b$8261$Od@c8
                                 g$b*$8262$Od@c8)
                               (g$id?$7256$Od@c8 g$con$8259$Od@c8)))
                            g$ls/false$8258$Od@c8))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8263$Od@c8
                           g$clause*$8264$Od@c8
                           g$b$8265$Od@c8
                           g$b*$8266$Od@c8)
                         (g$bless$7497$Od@c8
                           (list
                             'with-exception-handler
                             (list
                               'lambda
                               (list g$con$8263$Od@c8)
                               (g$gen-clauses$8256$Od@c8
                                 g$con$8263$Od@c8
                                 g$clause*$8264$Od@c8))
                             (cons
                               'lambda
                               (cons
                                 '()
                                 (cons
                                   '#f
                                   (cons g$b$8265$Od@c8 g$b*$8266$Od@c8))))))))
                      g$ls/false$8258$Od@c8)
                    (g$syntax-violation$7640$Od@c8
                      '#f
                      '"invalid syntax"
                      g$t$8257$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8
                 g$t$8257$Od@c8
                 '(_ (any . each-any) any . each-any)))))
           g$x$8255$Od@c8)))))
   (g$define-enumeration-macro$7510$Od@c8
     g$define-enumeration-macro$10942$Od@c8
     (case-lambda
       ((g$stx$8315$Od@c8)
        (letrec* ((g$set?$8316$Od@c8
                    (case-lambda
                      ((g$x$8329$Od@c8)
                       ((case-lambda
                          ((g$t$8330$Od@c8)
                           (if g$t$8330$Od@c8
                             g$t$8330$Od@c8
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8329$Od@c8)
                                          (cdr g$x$8329$Od@c8)))
                                 (begin
                                   '#f
                                   (g$set?$8316$Od@c8 (cdr g$x$8329$Od@c8)))
                                 '#f)))))
                        (null? g$x$8329$Od@c8)))))
                  (g$remove-dups$8317$Od@c8
                    (case-lambda
                      ((g$ls$8328$Od@c8)
                       (if (null? g$ls$8328$Od@c8)
                         '()
                         (cons
                           (car g$ls$8328$Od@c8)
                           (g$remove-dups$8317$Od@c8
                             (g$remq$5692$Od@c8
                               (car g$ls$8328$Od@c8)
                               (cdr g$ls$8328$Od@c8)))))))))
          ((case-lambda
             ((g$t$8318$Od@c8)
              ((case-lambda
                 ((g$ls/false$8319$Od@c8)
                  (if (if g$ls/false$8319$Od@c8
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8320$Od@c8
                                 g$id*$8321$Od@c8
                                 g$maker$8322$Od@c8)
                               (if (g$id?$7256$Od@c8 g$name$8320$Od@c8)
                                 (if (g$id?$7256$Od@c8 g$maker$8322$Od@c8)
                                   (begin
                                     '#f
                                     (g$for-all$5685$Od@c8
                                       g$id?$7256$Od@c8
                                       g$id*$8321$Od@c8))
                                   '#f)
                                 '#f)))
                            g$ls/false$8319$Od@c8))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8323$Od@c8 g$id*$8324$Od@c8 g$maker$8325$Od@c8)
                         ((case-lambda
                            ((g$name*$8326$Od@c8 g$mk$8327$Od@c8)
                             (g$bless$7497$Od@c8
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8327$Od@c8
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8326$Od@c8))))
                                 (list
                                   'define-syntax
                                   g$name$8323$Od@c8
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8326$Od@c8))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8323$Od@c8)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8325$Od@c8
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8325$Od@c8)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8326$Od@c8))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8325$Od@c8)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8327$Od@c8
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8317$Od@c8
                            (g$syntax->datum$7643$Od@c8 g$id*$8324$Od@c8))
                          (gensym))))
                      g$ls/false$8319$Od@c8)
                    (g$syntax-violation$7640$Od@c8
                      '#f
                      '"invalid syntax"
                      g$t$8318$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8
                 g$t$8318$Od@c8
                 '(_ any each-any any)))))
           g$stx$8315$Od@c8)))))
   (g$time-macro$7511$Od@c8
     g$time-macro$10943$Od@c8
     (case-lambda
       ((g$stx$8331$Od@c8)
        ((case-lambda
           ((g$t$8332$Od@c8)
            ((case-lambda
               ((g$ls/false$8333$Od@c8)
                (if g$ls/false$8333$Od@c8
                  (apply
                    (case-lambda
                      ((g$expr$8334$Od@c8)
                       ((case-lambda
                          ((g$str$8335$Od@c8)
                           (g$bless$7497$Od@c8
                             (list
                               'time-it
                               g$str$8335$Od@c8
                               (list 'lambda '() g$expr$8334$Od@c8)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6415$Od@c8)))
                          (case-lambda
                            ((g$p$8338$Od@c8 g$e$8339$Od@c8)
                             ((case-lambda
                                ((g$e$8340$Od@c8 g$p$8341$Od@c8)
                                 (begin
                                   (write
                                     (g$syntax->datum$7643$Od@c8
                                       g$expr$8334$Od@c8)
                                     g$p$8341$Od@c8)
                                   (g$e$8340$Od@c8))))
                              g$e$8339$Od@c8
                              g$p$8338$Od@c8)))))))
                    g$ls/false$8333$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8332$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8332$Od@c8 '(_ any)))))
         g$stx$8331$Od@c8))))
   (g$delay-macro$7512$Od@c8
     g$delay-macro$10944$Od@c8
     (case-lambda
       ((g$stx$8342$Od@c8)
        ((case-lambda
           ((g$t$8343$Od@c8)
            ((case-lambda
               ((g$ls/false$8344$Od@c8)
                (if g$ls/false$8344$Od@c8
                  (apply
                    (case-lambda
                      ((g$expr$8345$Od@c8)
                       (g$bless$7497$Od@c8
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8345$Od@c8)))))
                    g$ls/false$8344$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8343$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8343$Od@c8 '(_ any)))))
         g$stx$8342$Od@c8))))
   (g$assert-macro$7513$Od@c8
     g$assert-macro$10945$Od@c8
     (case-lambda
       ((g$stx$8346$Od@c8)
        ((case-lambda
           ((g$t$8347$Od@c8)
            ((case-lambda
               ((g$ls/false$8348$Od@c8)
                (if g$ls/false$8348$Od@c8
                  (apply
                    (case-lambda
                      ((g$expr$8349$Od@c8)
                       (g$bless$7497$Od@c8
                         (list
                           'unless
                           g$expr$8349$Od@c8
                           (list
                             'assertion-violation
                             ''assert
                             '"assertion failed"
                             (list 'quote g$expr$8349$Od@c8))))))
                    g$ls/false$8348$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8347$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8347$Od@c8 '(_ any)))))
         g$stx$8346$Od@c8))))
   (g$endianness-macro$7514$Od@c8
     g$endianness-macro$10946$Od@c8
     (case-lambda
       ((g$stx$8350$Od@c8)
        ((case-lambda
           ((g$t$8351$Od@c8)
            ((case-lambda
               ((g$ls/false$8352$Od@c8)
                (if g$ls/false$8352$Od@c8
                  (apply
                    (case-lambda
                      ((g$e$8353$Od@c8)
                       ((case-lambda
                          ((g$t$8354$Od@c8)
                           (if (eqv? g$t$8354$Od@c8 'little)
                             (g$bless$7497$Od@c8 ''little)
                             (if (eqv? g$t$8354$Od@c8 'big)
                               (g$bless$7497$Od@c8 ''big)
                               (g$syntax-violation$7640$Od@c8
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8350$Od@c8)))))
                        (g$syntax->datum$7643$Od@c8 g$e$8353$Od@c8))))
                    g$ls/false$8352$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8351$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8351$Od@c8 '(_ any)))))
         g$stx$8350$Od@c8))))
   (g$identifier-syntax-macro$7515$Od@c8
     g$identifier-syntax-macro$10947$Od@c8
     (case-lambda
       ((g$stx$8355$Od@c8)
        ((case-lambda
           ((g$t$8356$Od@c8)
            ((case-lambda
               ((g$ls/false$8357$Od@c8)
                (if g$ls/false$8357$Od@c8
                  (apply
                    (case-lambda
                      ((g$expr$8358$Od@c8)
                       (g$bless$7497$Od@c8
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8358$Od@c8))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8358$Od@c8)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8357$Od@c8)
                  ((case-lambda
                     ((g$t$8359$Od@c8)
                      ((case-lambda
                         ((g$ls/false$8360$Od@c8)
                          (if (if g$ls/false$8360$Od@c8
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8361$Od@c8
                                         g$expr1$8362$Od@c8
                                         g$id2$8363$Od@c8
                                         g$expr2$8364$Od@c8
                                         g$expr3$8365$Od@c8)
                                       (if (g$id?$7256$Od@c8 g$id1$8361$Od@c8)
                                         (if (g$id?$7256$Od@c8 g$id2$8363$Od@c8)
                                           (begin
                                             '#f
                                             (g$id?$7256$Od@c8
                                               g$expr2$8364$Od@c8))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8360$Od@c8))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8366$Od@c8
                                   g$expr1$8367$Od@c8
                                   g$id2$8368$Od@c8
                                   g$expr2$8369$Od@c8
                                   g$expr3$8370$Od@c8)
                                 (g$bless$7497$Od@c8
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8367$Od@c8))
                                         (list
                                           (list 'set! 'id g$expr2$8369$Od@c8)
                                           (list 'syntax g$expr3$8370$Od@c8))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8367$Od@c8
                                               '(e* ...))))))))))
                              g$ls/false$8360$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$8359$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$8359$Od@c8
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8356$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8356$Od@c8 '(_ any)))))
         g$stx$8355$Od@c8))))
   (g$do-macro$7516$Od@c8
     g$do-macro$10948$Od@c8
     (case-lambda
       ((g$stx$8371$Od@c8)
        (letrec* ((g$bind$8372$Od@c8
                    (case-lambda
                      ((g$x$8384$Od@c8)
                       ((case-lambda
                          ((g$t$8385$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8386$Od@c8)
                               (if g$ls/false$8386$Od@c8
                                 (apply
                                   (case-lambda
                                     ((g$x$8387$Od@c8 g$init$8388$Od@c8)
                                      (list
                                        g$x$8387$Od@c8
                                        g$init$8388$Od@c8
                                        g$x$8387$Od@c8)))
                                   g$ls/false$8386$Od@c8)
                                 ((case-lambda
                                    ((g$t$8389$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8390$Od@c8)
                                         (if g$ls/false$8390$Od@c8
                                           (apply
                                             (case-lambda
                                               ((g$x$8391$Od@c8
                                                  g$init$8392$Od@c8
                                                  g$step$8393$Od@c8)
                                                (list
                                                  g$x$8391$Od@c8
                                                  g$init$8392$Od@c8
                                                  g$step$8393$Od@c8)))
                                             g$ls/false$8390$Od@c8)
                                           ((case-lambda
                                              ((g$t$8394$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$8395$Od@c8)
                                                   (if g$ls/false$8395$Od@c8
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7640$Od@c8
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8371$Od@c8)))
                                                       g$ls/false$8395$Od@c8)
                                                     (g$syntax-violation$7640$Od@c8
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8394$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$8394$Od@c8
                                                  '_))))
                                            g$t$8389$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8389$Od@c8
                                        '(any any any)))))
                                  g$t$8385$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$8385$Od@c8
                              '(any any)))))
                        g$x$8384$Od@c8)))))
          ((case-lambda
             ((g$t$8373$Od@c8)
              ((case-lambda
                 ((g$ls/false$8374$Od@c8)
                  (if g$ls/false$8374$Od@c8
                    (apply
                      (case-lambda
                        ((g$binding*$8375$Od@c8
                           g$test$8376$Od@c8
                           g$expr*$8377$Od@c8
                           g$command*$8378$Od@c8)
                         ((case-lambda
                            ((g$t$8379$Od@c8)
                             ((case-lambda
                                ((g$ls/false$8380$Od@c8)
                                 (if g$ls/false$8380$Od@c8
                                   (apply
                                     (case-lambda
                                       ((g$x*$8381$Od@c8
                                          g$init*$8382$Od@c8
                                          g$step*$8383$Od@c8)
                                        (if (g$valid-bound-ids?$7261$Od@c8
                                              g$x*$8381$Od@c8)
                                          (g$bless$7497$Od@c8
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8381$Od@c8
                                                    (list
                                                      'if
                                                      g$test$8376$Od@c8
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8377$Od@c8))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8378$Od@c8
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8383$Od@c8))))))))
                                              (cons 'loop g$init*$8382$Od@c8)))
                                          (g$syntax-violation$7640$Od@c8
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8371$Od@c8))))
                                     g$ls/false$8380$Od@c8)
                                   (g$syntax-violation$7640$Od@c8
                                     '#f
                                     '"invalid syntax"
                                     g$t$8379$Od@c8))))
                              (g$syntax-dispatch$7534$Od@c8
                                g$t$8379$Od@c8
                                '#(each (any any any))))))
                          (map g$bind$8372$Od@c8 g$binding*$8375$Od@c8))))
                      g$ls/false$8374$Od@c8)
                    (g$syntax-violation$7640$Od@c8
                      '#f
                      '"invalid syntax"
                      g$t$8373$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8
                 g$t$8373$Od@c8
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8371$Od@c8)))))
   (g$let*-macro$7517$Od@c8
     g$let*-macro$10949$Od@c8
     (case-lambda
       ((g$stx$8396$Od@c8)
        ((case-lambda
           ((g$t$8397$Od@c8)
            ((case-lambda
               ((g$ls/false$8398$Od@c8)
                (if (if g$ls/false$8398$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8399$Od@c8
                               g$rhs*$8400$Od@c8
                               g$b$8401$Od@c8
                               g$b*$8402$Od@c8)
                             (g$for-all$5685$Od@c8
                               g$id?$7256$Od@c8
                               g$lhs*$8399$Od@c8)))
                          g$ls/false$8398$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8403$Od@c8
                         g$rhs*$8404$Od@c8
                         g$b$8405$Od@c8
                         g$b*$8406$Od@c8)
                       (g$bless$7497$Od@c8
                         ((letrec ((g$f$8407$Od@c8
                                     (case-lambda
                                       ((g$x*$8408$Od@c8)
                                        (if (null? g$x*$8408$Od@c8)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8405$Od@c8
                                                g$b*$8406$Od@c8)))
                                          (list
                                            'let
                                            (list (car g$x*$8408$Od@c8))
                                            (g$f$8407$Od@c8
                                              (cdr g$x*$8408$Od@c8))))))))
                            g$f$8407$Od@c8)
                          (map list g$lhs*$8403$Od@c8 g$rhs*$8404$Od@c8)))))
                    g$ls/false$8398$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8397$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8397$Od@c8
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8396$Od@c8))))
   (g$or-macro$7518$Od@c8
     g$or-macro$10950$Od@c8
     (case-lambda
       ((g$stx$8409$Od@c8)
        ((case-lambda
           ((g$t$8410$Od@c8)
            ((case-lambda
               ((g$ls/false$8411$Od@c8)
                (if g$ls/false$8411$Od@c8
                  (apply (case-lambda (() '#f)) g$ls/false$8411$Od@c8)
                  ((case-lambda
                     ((g$t$8412$Od@c8)
                      ((case-lambda
                         ((g$ls/false$8413$Od@c8)
                          (if g$ls/false$8413$Od@c8
                            (apply
                              (case-lambda
                                ((g$e$8414$Od@c8 g$e*$8415$Od@c8)
                                 (g$bless$7497$Od@c8
                                   ((letrec ((g$f$8416$Od@c8
                                               (case-lambda
                                                 ((g$e$8417$Od@c8
                                                    g$e*$8418$Od@c8)
                                                  (if (null? g$e*$8418$Od@c8)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8417$Od@c8)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8417$Od@c8))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8416$Od@c8
                                                          (car g$e*$8418$Od@c8)
                                                          (cdr g$e*$8418$Od@c8)))))))))
                                      g$f$8416$Od@c8)
                                    g$e$8414$Od@c8
                                    g$e*$8415$Od@c8))))
                              g$ls/false$8413$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$8412$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$8412$Od@c8
                         '(_ any . each-any)))))
                   g$t$8410$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8410$Od@c8 '(_)))))
         g$stx$8409$Od@c8))))
   (g$and-macro$7519$Od@c8
     g$and-macro$10951$Od@c8
     (case-lambda
       ((g$stx$8419$Od@c8)
        ((case-lambda
           ((g$t$8420$Od@c8)
            ((case-lambda
               ((g$ls/false$8421$Od@c8)
                (if g$ls/false$8421$Od@c8
                  (apply (case-lambda (() '#t)) g$ls/false$8421$Od@c8)
                  ((case-lambda
                     ((g$t$8422$Od@c8)
                      ((case-lambda
                         ((g$ls/false$8423$Od@c8)
                          (if g$ls/false$8423$Od@c8
                            (apply
                              (case-lambda
                                ((g$e$8424$Od@c8 g$e*$8425$Od@c8)
                                 (g$bless$7497$Od@c8
                                   ((letrec ((g$f$8426$Od@c8
                                               (case-lambda
                                                 ((g$e$8427$Od@c8
                                                    g$e*$8428$Od@c8)
                                                  (if (null? g$e*$8428$Od@c8)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8427$Od@c8)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8427$Od@c8
                                                        (cons
                                                          (g$f$8426$Od@c8
                                                            (car g$e*$8428$Od@c8)
                                                            (cdr g$e*$8428$Od@c8))
                                                          '(#f)))))))))
                                      g$f$8426$Od@c8)
                                    g$e$8424$Od@c8
                                    g$e*$8425$Od@c8))))
                              g$ls/false$8423$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$8422$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$8422$Od@c8
                         '(_ any . each-any)))))
                   g$t$8420$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8420$Od@c8 '(_)))))
         g$stx$8419$Od@c8))))
   (g$cond-macro$7520$Od@c8
     g$cond-macro$10952$Od@c8
     (case-lambda
       ((g$stx$8429$Od@c8)
        ((case-lambda
           ((g$t$8430$Od@c8)
            ((case-lambda
               ((g$ls/false$8431$Od@c8)
                (if g$ls/false$8431$Od@c8
                  (apply
                    (case-lambda
                      ((g$cls$8432$Od@c8 g$cls*$8433$Od@c8)
                       (g$bless$7497$Od@c8
                         ((letrec ((g$f$8434$Od@c8
                                     (case-lambda
                                       ((g$cls$8435$Od@c8 g$cls*$8436$Od@c8)
                                        (if (null? g$cls*$8436$Od@c8)
                                          ((case-lambda
                                             ((g$t$8437$Od@c8)
                                              ((case-lambda
                                                 ((g$ls/false$8438$Od@c8)
                                                  (if g$ls/false$8438$Od@c8
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8439$Od@c8
                                                           g$e*$8440$Od@c8)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8439$Od@c8
                                                             g$e*$8440$Od@c8))))
                                                      g$ls/false$8438$Od@c8)
                                                    ((case-lambda
                                                       ((g$t$8441$Od@c8)
                                                        ((case-lambda
                                                           ((g$ls/false$8442$Od@c8)
                                                            (if g$ls/false$8442$Od@c8
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8443$Od@c8
                                                                     g$p$8444$Od@c8)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8443$Od@c8))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8444$Od@c8
                                                                         '(t))))))
                                                                g$ls/false$8442$Od@c8)
                                                              ((case-lambda
                                                                 ((g$t$8445$Od@c8)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8446$Od@c8)
                                                                      (if g$ls/false$8446$Od@c8
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8447$Od@c8)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8447$Od@c8
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8446$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$t$8448$Od@c8)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8449$Od@c8)
                                                                                (if g$ls/false$8449$Od@c8
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8450$Od@c8
                                                                                         g$e*$8451$Od@c8)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8450$Od@c8
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8451$Od@c8))))
                                                                                    g$ls/false$8449$Od@c8)
                                                                                  ((case-lambda
                                                                                     ((g$t$8452$Od@c8)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8453$Od@c8)
                                                                                          (if g$ls/false$8453$Od@c8
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7640$Od@c8
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8429$Od@c8)))
                                                                                              g$ls/false$8453$Od@c8)
                                                                                            (g$syntax-violation$7640$Od@c8
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8452$Od@c8))))
                                                                                       (g$syntax-dispatch$7534$Od@c8
                                                                                         g$t$8452$Od@c8
                                                                                         '_))))
                                                                                   g$t$8448$Od@c8))))
                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                               g$t$8448$Od@c8
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8445$Od@c8))))
                                                                   (g$syntax-dispatch$7534$Od@c8
                                                                     g$t$8445$Od@c8
                                                                     '(any)))))
                                                               g$t$8441$Od@c8))))
                                                         (g$syntax-dispatch$7534$Od@c8
                                                           g$t$8441$Od@c8
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8437$Od@c8))))
                                               (g$syntax-dispatch$7534$Od@c8
                                                 g$t$8437$Od@c8
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8435$Od@c8)
                                          ((case-lambda
                                             ((g$t$8454$Od@c8)
                                              ((case-lambda
                                                 ((g$ls/false$8455$Od@c8)
                                                  (if g$ls/false$8455$Od@c8
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8456$Od@c8
                                                           g$e*$8457$Od@c8)
                                                         (g$syntax-violation$7640$Od@c8
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8429$Od@c8)))
                                                      g$ls/false$8455$Od@c8)
                                                    ((case-lambda
                                                       ((g$t$8458$Od@c8)
                                                        ((case-lambda
                                                           ((g$ls/false$8459$Od@c8)
                                                            (if g$ls/false$8459$Od@c8
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8460$Od@c8
                                                                     g$p$8461$Od@c8)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8460$Od@c8))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8461$Od@c8
                                                                         '(t))
                                                                       (g$f$8434$Od@c8
                                                                         (car g$cls*$8436$Od@c8)
                                                                         (cdr g$cls*$8436$Od@c8))))))
                                                                g$ls/false$8459$Od@c8)
                                                              ((case-lambda
                                                                 ((g$t$8462$Od@c8)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8463$Od@c8)
                                                                      (if g$ls/false$8463$Od@c8
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8464$Od@c8)
                                                                             (list
                                                                               'or
                                                                               g$e$8464$Od@c8
                                                                               (g$f$8434$Od@c8
                                                                                 (car g$cls*$8436$Od@c8)
                                                                                 (cdr g$cls*$8436$Od@c8)))))
                                                                          g$ls/false$8463$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$t$8465$Od@c8)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8466$Od@c8)
                                                                                (if g$ls/false$8466$Od@c8
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8467$Od@c8
                                                                                         g$e*$8468$Od@c8)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8467$Od@c8
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8468$Od@c8)
                                                                                         (g$f$8434$Od@c8
                                                                                           (car g$cls*$8436$Od@c8)
                                                                                           (cdr g$cls*$8436$Od@c8)))))
                                                                                    g$ls/false$8466$Od@c8)
                                                                                  ((case-lambda
                                                                                     ((g$t$8469$Od@c8)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8470$Od@c8)
                                                                                          (if g$ls/false$8470$Od@c8
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7640$Od@c8
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8429$Od@c8)))
                                                                                              g$ls/false$8470$Od@c8)
                                                                                            (g$syntax-violation$7640$Od@c8
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8469$Od@c8))))
                                                                                       (g$syntax-dispatch$7534$Od@c8
                                                                                         g$t$8469$Od@c8
                                                                                         '_))))
                                                                                   g$t$8465$Od@c8))))
                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                               g$t$8465$Od@c8
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8462$Od@c8))))
                                                                   (g$syntax-dispatch$7534$Od@c8
                                                                     g$t$8462$Od@c8
                                                                     '(any)))))
                                                               g$t$8458$Od@c8))))
                                                         (g$syntax-dispatch$7534$Od@c8
                                                           g$t$8458$Od@c8
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8454$Od@c8))))
                                               (g$syntax-dispatch$7534$Od@c8
                                                 g$t$8454$Od@c8
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8435$Od@c8))))))
                            g$f$8434$Od@c8)
                          g$cls$8432$Od@c8
                          g$cls*$8433$Od@c8))))
                    g$ls/false$8431$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8430$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8430$Od@c8
               '(_ any . each-any)))))
         g$stx$8429$Od@c8))))
   (g$do-include$7521$Od@c8
     g$do-include$10953$Od@c8
     (case-lambda
       ((g$stx$8471$Od@c8 g$id$8472$Od@c8 g$filename$8473$Od@c8)
        ((case-lambda
           ((g$filename$8474$Od@c8)
            (begin
              (if (if (string? g$filename$8474$Od@c8)
                    (begin '#f (g$id?$7256$Od@c8 g$id$8472$Od@c8))
                    '#f)
                (void)
                (g$syntax-violation$7640$Od@c8
                  '#f
                  '"invalid syntax"
                  g$stx$8471$Od@c8))
              (cons
                (g$bless$7497$Od@c8 'begin)
                (with-input-from-file
                  g$filename$8474$Od@c8
                  (case-lambda
                    (()
                     ((letrec ((g$f$8475$Od@c8
                                 (case-lambda
                                   ((g$ls$8476$Od@c8)
                                    ((case-lambda
                                       ((g$x$8477$Od@c8)
                                        (if (eof-object? g$x$8477$Od@c8)
                                          (reverse g$ls$8476$Od@c8)
                                          (g$f$8475$Od@c8
                                            (cons
                                              (g$datum->stx$7239$Od@c8
                                                g$id$8472$Od@c8
                                                g$x$8477$Od@c8)
                                              g$ls$8476$Od@c8)))))
                                     (read-annotated))))))
                        g$f$8475$Od@c8)
                      '()))))))))
         (g$stx->datum$7267$Od@c8 g$filename$8473$Od@c8)))))
   (g$include-macro$7522$Od@c8
     g$include-macro$10954$Od@c8
     (case-lambda
       ((g$e$8478$Od@c8)
        ((case-lambda
           ((g$t$8479$Od@c8)
            ((case-lambda
               ((g$ls/false$8480$Od@c8)
                (if g$ls/false$8480$Od@c8
                  (apply
                    (case-lambda
                      ((g$id$8481$Od@c8 g$filename$8482$Od@c8)
                       (g$do-include$7521$Od@c8
                         g$e$8478$Od@c8
                         g$id$8481$Od@c8
                         g$filename$8482$Od@c8)))
                    g$ls/false$8480$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8479$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8479$Od@c8 '(any any)))))
         g$e$8478$Od@c8))))
   (g$include-into-macro$7523$Od@c8
     g$include-into-macro$10955$Od@c8
     (case-lambda
       ((g$e$8483$Od@c8)
        ((case-lambda
           ((g$t$8484$Od@c8)
            ((case-lambda
               ((g$ls/false$8485$Od@c8)
                (if g$ls/false$8485$Od@c8
                  (apply
                    (case-lambda
                      ((g$id$8486$Od@c8 g$filename$8487$Od@c8)
                       (g$do-include$7521$Od@c8
                         g$e$8483$Od@c8
                         g$id$8486$Od@c8
                         g$filename$8487$Od@c8)))
                    g$ls/false$8485$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8484$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$8484$Od@c8 '(_ any any)))))
         g$e$8483$Od@c8))))
   (g$syntax-rules-macro$7524$Od@c8
     g$syntax-rules-macro$10956$Od@c8
     (case-lambda
       ((g$e$8488$Od@c8)
        ((case-lambda
           ((g$t$8489$Od@c8)
            ((case-lambda
               ((g$ls/false$8490$Od@c8)
                (if g$ls/false$8490$Od@c8
                  (apply
                    (case-lambda
                      ((g$lits$8491$Od@c8 g$pat*$8492$Od@c8 g$tmp*$8493$Od@c8)
                       (begin
                         (g$verify-literals$7537$Od@c8
                           g$lits$8491$Od@c8
                           g$e$8488$Od@c8)
                         (g$bless$7497$Od@c8
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8491$Od@c8
                                   (map (case-lambda
                                          ((g$pat$8494$Od@c8 g$tmp$8495$Od@c8)
                                           ((case-lambda
                                              ((g$t$8496$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$8497$Od@c8)
                                                   (if g$ls/false$8497$Od@c8
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8498$Od@c8)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8498$Od@c8)
                                                            (list
                                                              'syntax
                                                              g$tmp$8495$Od@c8))))
                                                       g$ls/false$8497$Od@c8)
                                                     ((case-lambda
                                                        ((g$t$8499$Od@c8)
                                                         ((case-lambda
                                                            ((g$ls/false$8500$Od@c8)
                                                             (if g$ls/false$8500$Od@c8
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7640$Od@c8
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8488$Od@c8
                                                                      g$pat$8494$Od@c8)))
                                                                 g$ls/false$8500$Od@c8)
                                                               (g$syntax-violation$7640$Od@c8
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8499$Od@c8))))
                                                          (g$syntax-dispatch$7534$Od@c8
                                                            g$t$8499$Od@c8
                                                            '_))))
                                                      g$t$8496$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$8496$Od@c8
                                                  '(_ . any)))))
                                            g$pat$8494$Od@c8)))
                                        g$pat*$8492$Od@c8
                                        g$tmp*$8493$Od@c8)))))))))
                    g$ls/false$8490$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$8489$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$8489$Od@c8
               '(_ each-any . #(each (any any)))))))
         g$e$8488$Od@c8))))
   (g$quasiquote-macro$7525$Od@c8
     g$quasiquote-macro$10957$Od@c8
     ((case-lambda
        (()
         (letrec* ((g$datum$8501$Od@c8
                     (case-lambda
                       ((g$x$8632$Od@c8)
                        (list
                          (g$scheme-stx$7477$Od@c8 'quote)
                          (g$mkstx$7244$Od@c8 g$x$8632$Od@c8 '() '() '())))))
                   (g$quasicons*$8517$Od@c8
                     (case-lambda
                       ((g$x$8628$Od@c8 g$y$8629$Od@c8)
                        ((letrec ((g$f$8630$Od@c8
                                    (case-lambda
                                      ((g$x$8631$Od@c8)
                                       (if (null? g$x$8631$Od@c8)
                                         g$y$8629$Od@c8
                                         (g$quasicons$8518$Od@c8
                                           (car g$x$8631$Od@c8)
                                           (g$f$8630$Od@c8
                                             (cdr g$x$8631$Od@c8))))))))
                           g$f$8630$Od@c8)
                         g$x$8628$Od@c8))))
                   (g$quasicons$8518$Od@c8
                     (case-lambda
                       ((g$x$8609$Od@c8 g$y$8610$Od@c8)
                        ((case-lambda
                           ((g$t$8611$Od@c8)
                            ((case-lambda
                               ((g$ls/false$8612$Od@c8)
                                (if g$ls/false$8612$Od@c8
                                  (apply
                                    (case-lambda
                                      ((g$dy$8613$Od@c8)
                                       ((case-lambda
                                          ((g$t$8614$Od@c8)
                                           ((case-lambda
                                              ((g$ls/false$8615$Od@c8)
                                               (if g$ls/false$8615$Od@c8
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8616$Od@c8)
                                                      (list
                                                        (g$scheme-stx$7477$Od@c8
                                                          'quote)
                                                        (cons
                                                          g$dx$8616$Od@c8
                                                          g$dy$8613$Od@c8))))
                                                   g$ls/false$8615$Od@c8)
                                                 ((case-lambda
                                                    ((g$t$8617$Od@c8)
                                                     ((case-lambda
                                                        ((g$ls/false$8618$Od@c8)
                                                         (if g$ls/false$8618$Od@c8
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8619$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8620$Od@c8)
                                                                        (if g$ls/false$8620$Od@c8
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7477$Od@c8
                                                                                   'list)
                                                                                 g$x$8609$Od@c8)))
                                                                            g$ls/false$8620$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$t$8621$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8622$Od@c8)
                                                                                  (if g$ls/false$8622$Od@c8
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7477$Od@c8
                                                                                             'cons)
                                                                                           g$x$8609$Od@c8
                                                                                           g$y$8610$Od@c8)))
                                                                                      g$ls/false$8622$Od@c8)
                                                                                    (g$syntax-violation$7640$Od@c8
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8621$Od@c8))))
                                                                               (g$syntax-dispatch$7534$Od@c8
                                                                                 g$t$8621$Od@c8
                                                                                 '_))))
                                                                           g$t$8619$Od@c8))))
                                                                     (g$syntax-dispatch$7534$Od@c8
                                                                       g$t$8619$Od@c8
                                                                       '()))))
                                                                 g$dy$8613$Od@c8)))
                                                             g$ls/false$8618$Od@c8)
                                                           (g$syntax-violation$7640$Od@c8
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8617$Od@c8))))
                                                      (g$syntax-dispatch$7534$Od@c8
                                                        g$t$8617$Od@c8
                                                        '_))))
                                                  g$t$8614$Od@c8))))
                                            (g$syntax-dispatch$7534$Od@c8
                                              g$t$8614$Od@c8
                                              '(#(scheme-id quote) any)))))
                                        g$x$8609$Od@c8)))
                                    g$ls/false$8612$Od@c8)
                                  ((case-lambda
                                     ((g$t$8623$Od@c8)
                                      ((case-lambda
                                         ((g$ls/false$8624$Od@c8)
                                          (if g$ls/false$8624$Od@c8
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8625$Od@c8)
                                                 (g$cons*$5687$Od@c8
                                                   (g$scheme-stx$7477$Od@c8
                                                     'list)
                                                   g$x$8609$Od@c8
                                                   g$stuff$8625$Od@c8)))
                                              g$ls/false$8624$Od@c8)
                                            ((case-lambda
                                               ((g$t$8626$Od@c8)
                                                ((case-lambda
                                                   ((g$ls/false$8627$Od@c8)
                                                    (if g$ls/false$8627$Od@c8
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7477$Od@c8
                                                               'cons)
                                                             g$x$8609$Od@c8
                                                             g$y$8610$Od@c8)))
                                                        g$ls/false$8627$Od@c8)
                                                      (g$syntax-violation$7640$Od@c8
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8626$Od@c8))))
                                                 (g$syntax-dispatch$7534$Od@c8
                                                   g$t$8626$Od@c8
                                                   '_))))
                                             g$t$8623$Od@c8))))
                                       (g$syntax-dispatch$7534$Od@c8
                                         g$t$8623$Od@c8
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8611$Od@c8))))
                             (g$syntax-dispatch$7534$Od@c8
                               g$t$8611$Od@c8
                               '(#(scheme-id quote) any)))))
                         g$y$8610$Od@c8))))
                   (g$quasiappend$8519$Od@c8
                     (case-lambda
                       ((g$x$8596$Od@c8 g$y$8597$Od@c8)
                        ((case-lambda
                           ((g$ls$8598$Od@c8)
                            (if (null? g$ls$8598$Od@c8)
                              (list (g$scheme-stx$7477$Od@c8 'quote) '())
                              (if (null? (cdr g$ls$8598$Od@c8))
                                (car g$ls$8598$Od@c8)
                                (g$cons*$5687$Od@c8
                                  (g$scheme-stx$7477$Od@c8 'append)
                                  g$ls$8598$Od@c8)))))
                         ((letrec ((g$f$8599$Od@c8
                                     (case-lambda
                                       ((g$x$8600$Od@c8)
                                        (if (null? g$x$8600$Od@c8)
                                          ((case-lambda
                                             ((g$t$8601$Od@c8)
                                              ((case-lambda
                                                 ((g$ls/false$8602$Od@c8)
                                                  (if g$ls/false$8602$Od@c8
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8602$Od@c8)
                                                    ((case-lambda
                                                       ((g$t$8603$Od@c8)
                                                        ((case-lambda
                                                           ((g$ls/false$8604$Od@c8)
                                                            (if g$ls/false$8604$Od@c8
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8597$Od@c8)))
                                                                g$ls/false$8604$Od@c8)
                                                              (g$syntax-violation$7640$Od@c8
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8603$Od@c8))))
                                                         (g$syntax-dispatch$7534$Od@c8
                                                           g$t$8603$Od@c8
                                                           '_))))
                                                     g$t$8601$Od@c8))))
                                               (g$syntax-dispatch$7534$Od@c8
                                                 g$t$8601$Od@c8
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8597$Od@c8)
                                          ((case-lambda
                                             ((g$t$8605$Od@c8)
                                              ((case-lambda
                                                 ((g$ls/false$8606$Od@c8)
                                                  (if g$ls/false$8606$Od@c8
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8599$Od@c8
                                                           (cdr g$x$8600$Od@c8))))
                                                      g$ls/false$8606$Od@c8)
                                                    ((case-lambda
                                                       ((g$t$8607$Od@c8)
                                                        ((case-lambda
                                                           ((g$ls/false$8608$Od@c8)
                                                            (if g$ls/false$8608$Od@c8
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8600$Od@c8)
                                                                     (g$f$8599$Od@c8
                                                                       (cdr g$x$8600$Od@c8)))))
                                                                g$ls/false$8608$Od@c8)
                                                              (g$syntax-violation$7640$Od@c8
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8607$Od@c8))))
                                                         (g$syntax-dispatch$7534$Od@c8
                                                           g$t$8607$Od@c8
                                                           '_))))
                                                     g$t$8605$Od@c8))))
                                               (g$syntax-dispatch$7534$Od@c8
                                                 g$t$8605$Od@c8
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8600$Od@c8)))))))
                            g$f$8599$Od@c8)
                          g$x$8596$Od@c8)))))
                   (g$quasivector$8520$Od@c8
                     (case-lambda
                       ((g$x$8571$Od@c8)
                        ((case-lambda
                           ((g$pat-x$8572$Od@c8)
                            ((case-lambda
                               ((g$t$8573$Od@c8)
                                ((case-lambda
                                   ((g$ls/false$8574$Od@c8)
                                    (if g$ls/false$8574$Od@c8
                                      (apply
                                        (case-lambda
                                          ((g$x*$8575$Od@c8)
                                           (list
                                             (g$scheme-stx$7477$Od@c8 'quote)
                                             (list->vector g$x*$8575$Od@c8))))
                                        g$ls/false$8574$Od@c8)
                                      ((case-lambda
                                         ((g$t$8576$Od@c8)
                                          ((case-lambda
                                             ((g$ls/false$8577$Od@c8)
                                              (if g$ls/false$8577$Od@c8
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8578$Od@c8
                                                                 (case-lambda
                                                                   ((g$x$8579$Od@c8
                                                                      g$k$8580$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$t$8581$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8582$Od@c8)
                                                                            (if g$ls/false$8582$Od@c8
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8583$Od@c8)
                                                                                   (g$k$8580$Od@c8
                                                                                     (map (case-lambda
                                                                                            ((g$x$8584$Od@c8)
                                                                                             (list
                                                                                               (g$scheme-stx$7477$Od@c8
                                                                                                 'quote)
                                                                                               g$x$8584$Od@c8)))
                                                                                          g$x*$8583$Od@c8))))
                                                                                g$ls/false$8582$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$t$8585$Od@c8)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8586$Od@c8)
                                                                                      (if g$ls/false$8586$Od@c8
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8587$Od@c8)
                                                                                             (g$k$8580$Od@c8
                                                                                               g$x*$8587$Od@c8)))
                                                                                          g$ls/false$8586$Od@c8)
                                                                                        ((case-lambda
                                                                                           ((g$t$8588$Od@c8)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8589$Od@c8)
                                                                                                (if g$ls/false$8589$Od@c8
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8590$Od@c8
                                                                                                         g$y$8591$Od@c8)
                                                                                                       (g$f$8578$Od@c8
                                                                                                         g$y$8591$Od@c8
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8592$Od@c8)
                                                                                                            (g$k$8580$Od@c8
                                                                                                              (cons
                                                                                                                g$x$8590$Od@c8
                                                                                                                g$ls$8592$Od@c8)))))))
                                                                                                    g$ls/false$8589$Od@c8)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8593$Od@c8)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8594$Od@c8)
                                                                                                          (if g$ls/false$8594$Od@c8
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7477$Od@c8
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8572$Od@c8)))
                                                                                                              g$ls/false$8594$Od@c8)
                                                                                                            (g$syntax-violation$7640$Od@c8
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8593$Od@c8))))
                                                                                                       (g$syntax-dispatch$7534$Od@c8
                                                                                                         g$t$8593$Od@c8
                                                                                                         '_))))
                                                                                                   g$t$8588$Od@c8))))
                                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                                               g$t$8588$Od@c8
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8585$Od@c8))))
                                                                                   (g$syntax-dispatch$7534$Od@c8
                                                                                     g$t$8585$Od@c8
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8581$Od@c8))))
                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                           g$t$8581$Od@c8
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8579$Od@c8)))))
                                                        g$f$8578$Od@c8)
                                                      g$x$8571$Od@c8
                                                      (case-lambda
                                                        ((g$ls$8595$Od@c8)
                                                         (g$cons*$5687$Od@c8
                                                           (g$scheme-stx$7477$Od@c8
                                                             'vector)
                                                           g$ls$8595$Od@c8))))))
                                                  g$ls/false$8577$Od@c8)
                                                (g$syntax-violation$7640$Od@c8
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8576$Od@c8))))
                                           (g$syntax-dispatch$7534$Od@c8
                                             g$t$8576$Od@c8
                                             '_))))
                                       g$t$8573$Od@c8))))
                                 (g$syntax-dispatch$7534$Od@c8
                                   g$t$8573$Od@c8
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8572$Od@c8)))
                         g$x$8571$Od@c8))))
                   (g$vquasi$8521$Od@c8
                     (case-lambda
                       ((g$p$8554$Od@c8 g$lev$8555$Od@c8)
                        ((case-lambda
                           ((g$t$8556$Od@c8)
                            ((case-lambda
                               ((g$ls/false$8557$Od@c8)
                                (if g$ls/false$8557$Od@c8
                                  (apply
                                    (case-lambda
                                      ((g$p$8558$Od@c8 g$q$8559$Od@c8)
                                       ((case-lambda
                                          ((g$t$8560$Od@c8)
                                           ((case-lambda
                                              ((g$ls/false$8561$Od@c8)
                                               (if g$ls/false$8561$Od@c8
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8562$Od@c8)
                                                      (if (= g$lev$8555$Od@c8
                                                             '0)
                                                        (g$quasicons*$8517$Od@c8
                                                          g$p$8562$Od@c8
                                                          (g$vquasi$8521$Od@c8
                                                            g$q$8559$Od@c8
                                                            g$lev$8555$Od@c8))
                                                        (g$quasicons$8518$Od@c8
                                                          (g$quasicons$8518$Od@c8
                                                            (g$datum$8501$Od@c8
                                                              'unquote)
                                                            (g$quasi$8522$Od@c8
                                                              g$p$8562$Od@c8
                                                              (- g$lev$8555$Od@c8
                                                                 '1)))
                                                          (g$vquasi$8521$Od@c8
                                                            g$q$8559$Od@c8
                                                            g$lev$8555$Od@c8)))))
                                                   g$ls/false$8561$Od@c8)
                                                 ((case-lambda
                                                    ((g$t$8563$Od@c8)
                                                     ((case-lambda
                                                        ((g$ls/false$8564$Od@c8)
                                                         (if g$ls/false$8564$Od@c8
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8565$Od@c8)
                                                                (if (= g$lev$8555$Od@c8
                                                                       '0)
                                                                  (g$quasiappend$8519$Od@c8
                                                                    g$p$8565$Od@c8
                                                                    (g$vquasi$8521$Od@c8
                                                                      g$q$8559$Od@c8
                                                                      g$lev$8555$Od@c8))
                                                                  (g$quasicons$8518$Od@c8
                                                                    (g$quasicons$8518$Od@c8
                                                                      (g$datum$8501$Od@c8
                                                                        'unquote-splicing)
                                                                      (g$quasi$8522$Od@c8
                                                                        g$p$8565$Od@c8
                                                                        (- g$lev$8555$Od@c8
                                                                           '1)))
                                                                    (g$vquasi$8521$Od@c8
                                                                      g$q$8559$Od@c8
                                                                      g$lev$8555$Od@c8)))))
                                                             g$ls/false$8564$Od@c8)
                                                           ((case-lambda
                                                              ((g$t$8566$Od@c8)
                                                               ((case-lambda
                                                                  ((g$ls/false$8567$Od@c8)
                                                                   (if g$ls/false$8567$Od@c8
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8568$Od@c8)
                                                                          (g$quasicons$8518$Od@c8
                                                                            (g$quasi$8522$Od@c8
                                                                              g$p$8568$Od@c8
                                                                              g$lev$8555$Od@c8)
                                                                            (g$vquasi$8521$Od@c8
                                                                              g$q$8559$Od@c8
                                                                              g$lev$8555$Od@c8))))
                                                                       g$ls/false$8567$Od@c8)
                                                                     (g$syntax-violation$7640$Od@c8
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8566$Od@c8))))
                                                                (g$syntax-dispatch$7534$Od@c8
                                                                  g$t$8566$Od@c8
                                                                  'any))))
                                                            g$t$8563$Od@c8))))
                                                      (g$syntax-dispatch$7534$Od@c8
                                                        g$t$8563$Od@c8
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8560$Od@c8))))
                                            (g$syntax-dispatch$7534$Od@c8
                                              g$t$8560$Od@c8
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8558$Od@c8)))
                                    g$ls/false$8557$Od@c8)
                                  ((case-lambda
                                     ((g$t$8569$Od@c8)
                                      ((case-lambda
                                         ((g$ls/false$8570$Od@c8)
                                          (if g$ls/false$8570$Od@c8
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7477$Od@c8
                                                     'quote)
                                                   '())))
                                              g$ls/false$8570$Od@c8)
                                            (g$syntax-violation$7640$Od@c8
                                              '#f
                                              '"invalid syntax"
                                              g$t$8569$Od@c8))))
                                       (g$syntax-dispatch$7534$Od@c8
                                         g$t$8569$Od@c8
                                         '()))))
                                   g$t$8556$Od@c8))))
                             (g$syntax-dispatch$7534$Od@c8
                               g$t$8556$Od@c8
                               '(any . any)))))
                         g$p$8554$Od@c8))))
                   (g$quasi$8522$Od@c8
                     (case-lambda
                       ((g$p$8527$Od@c8 g$lev$8528$Od@c8)
                        ((case-lambda
                           ((g$t$8529$Od@c8)
                            ((case-lambda
                               ((g$ls/false$8530$Od@c8)
                                (if g$ls/false$8530$Od@c8
                                  (apply
                                    (case-lambda
                                      ((g$p$8531$Od@c8)
                                       (if (= g$lev$8528$Od@c8 '0)
                                         g$p$8531$Od@c8
                                         (g$quasicons$8518$Od@c8
                                           (g$datum$8501$Od@c8 'unquote)
                                           (g$quasi$8522$Od@c8
                                             (list g$p$8531$Od@c8)
                                             (- g$lev$8528$Od@c8 '1))))))
                                    g$ls/false$8530$Od@c8)
                                  ((case-lambda
                                     ((g$t$8532$Od@c8)
                                      ((case-lambda
                                         ((g$ls/false$8533$Od@c8)
                                          (if g$ls/false$8533$Od@c8
                                            (apply
                                              (case-lambda
                                                ((g$p$8534$Od@c8 g$q$8535$Od@c8)
                                                 (if (= g$lev$8528$Od@c8 '0)
                                                   (g$quasicons*$8517$Od@c8
                                                     g$p$8534$Od@c8
                                                     (g$quasi$8522$Od@c8
                                                       g$q$8535$Od@c8
                                                       g$lev$8528$Od@c8))
                                                   (g$quasicons$8518$Od@c8
                                                     (g$quasicons$8518$Od@c8
                                                       (g$datum$8501$Od@c8
                                                         'unquote)
                                                       (g$quasi$8522$Od@c8
                                                         g$p$8534$Od@c8
                                                         (- g$lev$8528$Od@c8
                                                            '1)))
                                                     (g$quasi$8522$Od@c8
                                                       g$q$8535$Od@c8
                                                       g$lev$8528$Od@c8)))))
                                              g$ls/false$8533$Od@c8)
                                            ((case-lambda
                                               ((g$t$8536$Od@c8)
                                                ((case-lambda
                                                   ((g$ls/false$8537$Od@c8)
                                                    (if g$ls/false$8537$Od@c8
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8538$Od@c8
                                                             g$q$8539$Od@c8)
                                                           (if (= g$lev$8528$Od@c8
                                                                  '0)
                                                             (g$quasiappend$8519$Od@c8
                                                               g$p$8538$Od@c8
                                                               (g$quasi$8522$Od@c8
                                                                 g$q$8539$Od@c8
                                                                 g$lev$8528$Od@c8))
                                                             (g$quasicons$8518$Od@c8
                                                               (g$quasicons$8518$Od@c8
                                                                 (g$datum$8501$Od@c8
                                                                   'unquote-splicing)
                                                                 (g$quasi$8522$Od@c8
                                                                   g$p$8538$Od@c8
                                                                   (- g$lev$8528$Od@c8
                                                                      '1)))
                                                               (g$quasi$8522$Od@c8
                                                                 g$q$8539$Od@c8
                                                                 g$lev$8528$Od@c8)))))
                                                        g$ls/false$8537$Od@c8)
                                                      ((case-lambda
                                                         ((g$t$8540$Od@c8)
                                                          ((case-lambda
                                                             ((g$ls/false$8541$Od@c8)
                                                              (if g$ls/false$8541$Od@c8
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8542$Od@c8)
                                                                     (g$quasicons$8518$Od@c8
                                                                       (g$datum$8501$Od@c8
                                                                         'quasiquote)
                                                                       (g$quasi$8522$Od@c8
                                                                         (list
                                                                           g$p$8542$Od@c8)
                                                                         (+ g$lev$8528$Od@c8
                                                                            '1)))))
                                                                  g$ls/false$8541$Od@c8)
                                                                ((case-lambda
                                                                   ((g$t$8543$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8544$Od@c8)
                                                                        (if g$ls/false$8544$Od@c8
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8545$Od@c8
                                                                                 g$q$8546$Od@c8)
                                                                               (g$quasicons$8518$Od@c8
                                                                                 (g$quasi$8522$Od@c8
                                                                                   g$p$8545$Od@c8
                                                                                   g$lev$8528$Od@c8)
                                                                                 (g$quasi$8522$Od@c8
                                                                                   g$q$8546$Od@c8
                                                                                   g$lev$8528$Od@c8))))
                                                                            g$ls/false$8544$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$t$8547$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8548$Od@c8)
                                                                                  (if (if g$ls/false$8548$Od@c8
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8549$Od@c8)
                                                                                               (not (g$stx?$7228$Od@c8
                                                                                                      g$x$8549$Od@c8))))
                                                                                            g$ls/false$8548$Od@c8))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8550$Od@c8)
                                                                                         (g$quasivector$8520$Od@c8
                                                                                           (g$vquasi$8521$Od@c8
                                                                                             g$x$8550$Od@c8
                                                                                             g$lev$8528$Od@c8))))
                                                                                      g$ls/false$8548$Od@c8)
                                                                                    ((case-lambda
                                                                                       ((g$t$8551$Od@c8)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8552$Od@c8)
                                                                                            (if g$ls/false$8552$Od@c8
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8553$Od@c8)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7477$Od@c8
                                                                                                       'quote)
                                                                                                     g$p$8553$Od@c8)))
                                                                                                g$ls/false$8552$Od@c8)
                                                                                              (g$syntax-violation$7640$Od@c8
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8551$Od@c8))))
                                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                                           g$t$8551$Od@c8
                                                                                           'any))))
                                                                                     g$t$8547$Od@c8))))
                                                                               (g$syntax-dispatch$7534$Od@c8
                                                                                 g$t$8547$Od@c8
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8543$Od@c8))))
                                                                     (g$syntax-dispatch$7534$Od@c8
                                                                       g$t$8543$Od@c8
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8540$Od@c8))))
                                                           (g$syntax-dispatch$7534$Od@c8
                                                             g$t$8540$Od@c8
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8536$Od@c8))))
                                                 (g$syntax-dispatch$7534$Od@c8
                                                   g$t$8536$Od@c8
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8532$Od@c8))))
                                       (g$syntax-dispatch$7534$Od@c8
                                         g$t$8532$Od@c8
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8529$Od@c8))))
                             (g$syntax-dispatch$7534$Od@c8
                               g$t$8529$Od@c8
                               '(#(scheme-id unquote) any)))))
                         g$p$8527$Od@c8)))))
           (case-lambda
             ((g$x$8523$Od@c8)
              ((case-lambda
                 ((g$t$8524$Od@c8)
                  ((case-lambda
                     ((g$ls/false$8525$Od@c8)
                      (if g$ls/false$8525$Od@c8
                        (apply
                          (case-lambda
                            ((g$e$8526$Od@c8)
                             (g$quasi$8522$Od@c8 g$e$8526$Od@c8 '0)))
                          g$ls/false$8525$Od@c8)
                        (g$syntax-violation$7640$Od@c8
                          '#f
                          '"invalid syntax"
                          g$t$8524$Od@c8))))
                   (g$syntax-dispatch$7534$Od@c8 g$t$8524$Od@c8 '(_ any)))))
               g$x$8523$Od@c8))))))))
   (g$quasisyntax-macro$7526$Od@c8
     g$quasisyntax-macro$10958$Od@c8
     ((case-lambda
        (()
         (letrec* ((g$quasi$8633$Od@c8
                     (case-lambda
                       ((g$p$8647$Od@c8 g$lev$8648$Od@c8)
                        ((case-lambda
                           ((g$t$8649$Od@c8)
                            ((case-lambda
                               ((g$ls/false$8650$Od@c8)
                                (if g$ls/false$8650$Od@c8
                                  (apply
                                    (case-lambda
                                      ((g$p$8651$Od@c8)
                                       (if (= g$lev$8648$Od@c8 '0)
                                         ((case-lambda
                                            ((g$g$8652$Od@c8)
                                             (values
                                               (list g$g$8652$Od@c8)
                                               (list g$p$8651$Od@c8)
                                               g$g$8652$Od@c8)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8633$Od@c8
                                                g$p$8651$Od@c8
                                                (- g$lev$8648$Od@c8 '1))))
                                           (case-lambda
                                             ((g$lhs*$8656$Od@c8
                                                g$rhs*$8657$Od@c8
                                                g$p$8658$Od@c8)
                                              ((case-lambda
                                                 ((g$p$8659$Od@c8
                                                    g$rhs*$8660$Od@c8
                                                    g$lhs*$8661$Od@c8)
                                                  (values
                                                    g$lhs*$8661$Od@c8
                                                    g$rhs*$8660$Od@c8
                                                    (list
                                                      'unsyntax
                                                      g$p$8659$Od@c8))))
                                               g$p$8658$Od@c8
                                               g$rhs*$8657$Od@c8
                                               g$lhs*$8656$Od@c8)))))))
                                    g$ls/false$8650$Od@c8)
                                  ((case-lambda
                                     ((g$t$8662$Od@c8)
                                      ((case-lambda
                                         ((g$ls/false$8663$Od@c8)
                                          (if (if g$ls/false$8663$Od@c8
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8648$Od@c8 '0)))
                                                    g$ls/false$8663$Od@c8))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7640$Od@c8
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8647$Od@c8)))
                                              g$ls/false$8663$Od@c8)
                                            ((case-lambda
                                               ((g$t$8664$Od@c8)
                                                ((case-lambda
                                                   ((g$ls/false$8665$Od@c8)
                                                    (if g$ls/false$8665$Od@c8
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8666$Od@c8
                                                             g$q$8667$Od@c8)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8633$Od@c8
                                                                  g$q$8667$Od@c8
                                                                  g$lev$8648$Od@c8)))
                                                             (case-lambda
                                                               ((g$lhs*$8671$Od@c8
                                                                  g$rhs*$8672$Od@c8
                                                                  g$q$8673$Od@c8)
                                                                ((case-lambda
                                                                   ((g$q$8674$Od@c8
                                                                      g$rhs*$8675$Od@c8
                                                                      g$lhs*$8676$Od@c8)
                                                                    (if (= g$lev$8648$Od@c8
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g$8677$Od@c8)
                                                                          (values
                                                                            (cons
                                                                              (cons
                                                                                g$g$8677$Od@c8
                                                                                '(...))
                                                                              g$lhs*$8676$Od@c8)
                                                                            (cons
                                                                              g$p$8666$Od@c8
                                                                              g$rhs*$8675$Od@c8)
                                                                            (cons
                                                                              g$g$8677$Od@c8
                                                                              (cons
                                                                                '...
                                                                                g$q$8674$Od@c8)))))
                                                                       (gensym))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8633$Od@c8
                                                                             g$p$8666$Od@c8
                                                                             (- g$lev$8648$Od@c8
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8681$Od@c8
                                                                             g$rhs2*$8682$Od@c8
                                                                             g$p$8683$Od@c8)
                                                                           ((case-lambda
                                                                              ((g$p$8684$Od@c8
                                                                                 g$rhs2*$8685$Od@c8
                                                                                 g$lhs2*$8686$Od@c8)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8686$Od@c8
                                                                                   g$lhs*$8676$Od@c8)
                                                                                 (append
                                                                                   g$rhs2*$8685$Od@c8
                                                                                   g$rhs*$8675$Od@c8)
                                                                                 (cons
                                                                                   (list
                                                                                     'unsyntax-splicing
                                                                                     g$p$8684$Od@c8)
                                                                                   g$q$8674$Od@c8))))
                                                                            g$p$8683$Od@c8
                                                                            g$rhs2*$8682$Od@c8
                                                                            g$lhs2*$8681$Od@c8)))))))
                                                                 g$q$8673$Od@c8
                                                                 g$rhs*$8672$Od@c8
                                                                 g$lhs*$8671$Od@c8))))))
                                                        g$ls/false$8665$Od@c8)
                                                      ((case-lambda
                                                         ((g$t$8687$Od@c8)
                                                          ((case-lambda
                                                             ((g$ls/false$8688$Od@c8)
                                                              (if (if g$ls/false$8688$Od@c8
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (= g$lev$8648$Od@c8
                                                                              '0)))
                                                                        g$ls/false$8688$Od@c8))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    (()
                                                                     (g$syntax-violation$7640$Od@c8
                                                                       '#f
                                                                       '"incorrect use of unsyntax-splicing"
                                                                       g$p$8647$Od@c8)))
                                                                  g$ls/false$8688$Od@c8)
                                                                ((case-lambda
                                                                   ((g$t$8689$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8690$Od@c8)
                                                                        (if g$ls/false$8690$Od@c8
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8691$Od@c8)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$quasi$8633$Od@c8
                                                                                      g$p$8691$Od@c8
                                                                                      (+ g$lev$8648$Od@c8
                                                                                         '1))))
                                                                                 (case-lambda
                                                                                   ((g$lhs*$8695$Od@c8
                                                                                      g$rhs*$8696$Od@c8
                                                                                      g$p$8697$Od@c8)
                                                                                    ((case-lambda
                                                                                       ((g$p$8698$Od@c8
                                                                                          g$rhs*$8699$Od@c8
                                                                                          g$lhs*$8700$Od@c8)
                                                                                        (values
                                                                                          g$lhs*$8700$Od@c8
                                                                                          g$rhs*$8699$Od@c8
                                                                                          (list
                                                                                            'quasisyntax
                                                                                            g$p$8698$Od@c8))))
                                                                                     g$p$8697$Od@c8
                                                                                     g$rhs*$8696$Od@c8
                                                                                     g$lhs*$8695$Od@c8))))))
                                                                            g$ls/false$8690$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$t$8701$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8702$Od@c8)
                                                                                  (if g$ls/false$8702$Od@c8
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8703$Od@c8
                                                                                           g$q$8704$Od@c8)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8633$Od@c8
                                                                                                g$p$8703$Od@c8
                                                                                                g$lev$8648$Od@c8)))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8711$Od@c8
                                                                                                g$rhs*$8712$Od@c8
                                                                                                g$p$8713$Od@c8)
                                                                                              (call-with-values
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$quasi$8633$Od@c8
                                                                                                     g$q$8704$Od@c8
                                                                                                     g$lev$8648$Od@c8)))
                                                                                                (case-lambda
                                                                                                  ((g$lhs2*$8714$Od@c8
                                                                                                     g$rhs2*$8715$Od@c8
                                                                                                     g$q$8716$Od@c8)
                                                                                                   ((case-lambda
                                                                                                      ((g$q$8717$Od@c8
                                                                                                         g$rhs2*$8718$Od@c8
                                                                                                         g$lhs2*$8719$Od@c8
                                                                                                         g$p$8720$Od@c8
                                                                                                         g$rhs*$8721$Od@c8
                                                                                                         g$lhs*$8722$Od@c8)
                                                                                                       (values
                                                                                                         (append
                                                                                                           g$lhs2*$8719$Od@c8
                                                                                                           g$lhs*$8722$Od@c8)
                                                                                                         (append
                                                                                                           g$rhs2*$8718$Od@c8
                                                                                                           g$rhs*$8721$Od@c8)
                                                                                                         (cons
                                                                                                           g$p$8720$Od@c8
                                                                                                           g$q$8717$Od@c8))))
                                                                                                    g$q$8716$Od@c8
                                                                                                    g$rhs2*$8715$Od@c8
                                                                                                    g$lhs2*$8714$Od@c8
                                                                                                    g$p$8713$Od@c8
                                                                                                    g$rhs*$8712$Od@c8
                                                                                                    g$lhs*$8711$Od@c8)))))))))
                                                                                      g$ls/false$8702$Od@c8)
                                                                                    ((case-lambda
                                                                                       ((g$t$8723$Od@c8)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8724$Od@c8)
                                                                                            (if (if g$ls/false$8724$Od@c8
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$x$8725$Od@c8)
                                                                                                         (not (g$stx?$7228$Od@c8
                                                                                                                g$p$8647$Od@c8))))
                                                                                                      g$ls/false$8724$Od@c8))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$x$8726$Od@c8)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        ((letrec ((g$f$8730$Od@c8
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$8731$Od@c8)
                                                                                                                       (if (null?
                                                                                                                             g$x$8731$Od@c8)
                                                                                                                         (values
                                                                                                                           '()
                                                                                                                           '()
                                                                                                                           '())
                                                                                                                         (call-with-values
                                                                                                                           (case-lambda
                                                                                                                             (()
                                                                                                                              (g$quasi$8633$Od@c8
                                                                                                                                (car g$x$8731$Od@c8)
                                                                                                                                g$lev$8648$Od@c8)))
                                                                                                                           (case-lambda
                                                                                                                             ((g$lhs*$8735$Od@c8
                                                                                                                                g$rhs*$8736$Od@c8
                                                                                                                                g$a$8737$Od@c8)
                                                                                                                              ((case-lambda
                                                                                                                                 ((g$a$8738$Od@c8
                                                                                                                                    g$rhs*$8739$Od@c8
                                                                                                                                    g$lhs*$8740$Od@c8)
                                                                                                                                  (call-with-values
                                                                                                                                    (case-lambda
                                                                                                                                      (()
                                                                                                                                       (g$f$8730$Od@c8
                                                                                                                                         (cdr g$x$8731$Od@c8))))
                                                                                                                                    (case-lambda
                                                                                                                                      ((g$lhs2*$8744$Od@c8
                                                                                                                                         g$rhs2*$8745$Od@c8
                                                                                                                                         g$d$8746$Od@c8)
                                                                                                                                       ((case-lambda
                                                                                                                                          ((g$d$8747$Od@c8
                                                                                                                                             g$rhs2*$8748$Od@c8
                                                                                                                                             g$lhs2*$8749$Od@c8)
                                                                                                                                           (values
                                                                                                                                             (append
                                                                                                                                               g$lhs*$8740$Od@c8
                                                                                                                                               g$lhs2*$8749$Od@c8)
                                                                                                                                             (append
                                                                                                                                               g$rhs*$8739$Od@c8
                                                                                                                                               g$rhs2*$8748$Od@c8)
                                                                                                                                             (cons
                                                                                                                                               g$a$8738$Od@c8
                                                                                                                                               g$d$8747$Od@c8))))
                                                                                                                                        g$d$8746$Od@c8
                                                                                                                                        g$rhs2*$8745$Od@c8
                                                                                                                                        g$lhs2*$8744$Od@c8))))))
                                                                                                                               g$a$8737$Od@c8
                                                                                                                               g$rhs*$8736$Od@c8
                                                                                                                               g$lhs*$8735$Od@c8)))))))))
                                                                                                           g$f$8730$Od@c8)
                                                                                                         g$x$8726$Od@c8)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8750$Od@c8
                                                                                                          g$rhs*$8751$Od@c8
                                                                                                          g$x*$8752$Od@c8)
                                                                                                        ((case-lambda
                                                                                                           ((g$x*$8753$Od@c8
                                                                                                              g$rhs*$8754$Od@c8
                                                                                                              g$lhs*$8755$Od@c8)
                                                                                                            (values
                                                                                                              g$lhs*$8755$Od@c8
                                                                                                              g$rhs*$8754$Od@c8
                                                                                                              (list->vector
                                                                                                                g$x*$8753$Od@c8))))
                                                                                                         g$x*$8752$Od@c8
                                                                                                         g$rhs*$8751$Od@c8
                                                                                                         g$lhs*$8750$Od@c8))))))
                                                                                                g$ls/false$8724$Od@c8)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8756$Od@c8)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8757$Od@c8)
                                                                                                      (if g$ls/false$8757$Od@c8
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (values
                                                                                                               '()
                                                                                                               '()
                                                                                                               g$p$8647$Od@c8)))
                                                                                                          g$ls/false$8757$Od@c8)
                                                                                                        (g$syntax-violation$7640$Od@c8
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$8756$Od@c8))))
                                                                                                   (g$syntax-dispatch$7534$Od@c8
                                                                                                     g$t$8756$Od@c8
                                                                                                     '_))))
                                                                                               g$t$8723$Od@c8))))
                                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                                           g$t$8723$Od@c8
                                                                                           '#(vector
                                                                                              each-any)))))
                                                                                     g$t$8701$Od@c8))))
                                                                               (g$syntax-dispatch$7534$Od@c8
                                                                                 g$t$8701$Od@c8
                                                                                 '(any .
                                                                                       any)))))
                                                                           g$t$8689$Od@c8))))
                                                                     (g$syntax-dispatch$7534$Od@c8
                                                                       g$t$8689$Od@c8
                                                                       '(#(scheme-id
                                                                           quasisyntax)
                                                                         any)))))
                                                                 g$t$8687$Od@c8))))
                                                           (g$syntax-dispatch$7534$Od@c8
                                                             g$t$8687$Od@c8
                                                             '#(scheme-id
                                                                unsyntax-splicing)))))
                                                       g$t$8664$Od@c8))))
                                                 (g$syntax-dispatch$7534$Od@c8
                                                   g$t$8664$Od@c8
                                                   '((#(scheme-id
                                                        unsyntax-splicing)
                                                      any)
                                                     .
                                                     any)))))
                                             g$t$8662$Od@c8))))
                                       (g$syntax-dispatch$7534$Od@c8
                                         g$t$8662$Od@c8
                                         '#(scheme-id unsyntax)))))
                                   g$t$8649$Od@c8))))
                             (g$syntax-dispatch$7534$Od@c8
                               g$t$8649$Od@c8
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8647$Od@c8)))))
           (case-lambda
             ((g$x$8634$Od@c8)
              ((case-lambda
                 ((g$t$8635$Od@c8)
                  ((case-lambda
                     ((g$ls/false$8636$Od@c8)
                      (if g$ls/false$8636$Od@c8
                        (apply
                          (case-lambda
                            ((g$e$8637$Od@c8)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8633$Od@c8 g$e$8637$Od@c8 '0)))
                               (case-lambda
                                 ((g$lhs*$8641$Od@c8
                                    g$rhs*$8642$Od@c8
                                    g$v$8643$Od@c8)
                                  ((case-lambda
                                     ((g$v$8644$Od@c8
                                        g$rhs*$8645$Od@c8
                                        g$lhs*$8646$Od@c8)
                                      (g$bless$7497$Od@c8
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8645$Od@c8)
                                          '()
                                          (list
                                            g$lhs*$8646$Od@c8
                                            (list 'syntax g$v$8644$Od@c8))))))
                                   g$v$8643$Od@c8
                                   g$rhs*$8642$Od@c8
                                   g$lhs*$8641$Od@c8))))))
                          g$ls/false$8636$Od@c8)
                        (g$syntax-violation$7640$Od@c8
                          '#f
                          '"invalid syntax"
                          g$t$8635$Od@c8))))
                   (g$syntax-dispatch$7534$Od@c8 g$t$8635$Od@c8 '(_ any)))))
               g$x$8634$Od@c8))))))))
   (g$define-struct-macro$7527$Od@c8
     g$define-struct-macro$10959$Od@c8
     (case-lambda
       ((g$stx$8758$Od@c8)
        (g$syntax-violation$7640$Od@c8
          '#f
          '"define-struct not supported"
          g$stx$8758$Od@c8))))
   (g$define-record-type-macro$7528$Od@c8
     g$define-record-type-macro$10960$Od@c8
     (case-lambda
       ((g$x$8759$Od@c8)
        (letrec* ((g$id$8760$Od@c8
                    (case-lambda
                      ((g$ctxt$8996$Od@c8 . g$str*$8997$Od@c8)
                       (g$datum->syntax$7642$Od@c8
                         g$ctxt$8996$Od@c8
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$8998$Od@c8)
                                     (if (symbol? g$x$8998$Od@c8)
                                       (symbol->string g$x$8998$Od@c8)
                                       (if (string? g$x$8998$Od@c8)
                                         g$x$8998$Od@c8
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$8997$Od@c8)))))))
                  (g$get-record-name$8761$Od@c8
                    (case-lambda
                      ((g$spec$8987$Od@c8)
                       ((case-lambda
                          ((g$t$8988$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8989$Od@c8)
                               (if g$ls/false$8989$Od@c8
                                 (apply
                                   (case-lambda
                                     ((g$foo$8990$Od@c8
                                        g$make-foo$8991$Od@c8
                                        g$foo?$8992$Od@c8)
                                      g$foo$8990$Od@c8))
                                   g$ls/false$8989$Od@c8)
                                 ((case-lambda
                                    ((g$t$8993$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8994$Od@c8)
                                         (if g$ls/false$8994$Od@c8
                                           (apply
                                             (case-lambda
                                               ((g$foo$8995$Od@c8)
                                                g$foo$8995$Od@c8))
                                             g$ls/false$8994$Od@c8)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid syntax"
                                             g$t$8993$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8993$Od@c8
                                        'any))))
                                  g$t$8988$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$8988$Od@c8
                              '(any any any)))))
                        g$spec$8987$Od@c8))))
                  (g$get-record-constructor-name$8762$Od@c8
                    (case-lambda
                      ((g$spec$8977$Od@c8)
                       ((case-lambda
                          ((g$t$8978$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8979$Od@c8)
                               (if g$ls/false$8979$Od@c8
                                 (apply
                                   (case-lambda
                                     ((g$foo$8980$Od@c8
                                        g$make-foo$8981$Od@c8
                                        g$foo?$8982$Od@c8)
                                      g$make-foo$8981$Od@c8))
                                   g$ls/false$8979$Od@c8)
                                 ((case-lambda
                                    ((g$t$8983$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8984$Od@c8)
                                         (if (if g$ls/false$8984$Od@c8
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8985$Od@c8)
                                                      (g$id?$7256$Od@c8
                                                        g$foo$8985$Od@c8)))
                                                   g$ls/false$8984$Od@c8))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8986$Od@c8)
                                                (g$id$8760$Od@c8
                                                  g$foo$8986$Od@c8
                                                  '"make-"
                                                  (g$stx->datum$7267$Od@c8
                                                    g$foo$8986$Od@c8))))
                                             g$ls/false$8984$Od@c8)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid syntax"
                                             g$t$8983$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8983$Od@c8
                                        'any))))
                                  g$t$8978$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$8978$Od@c8
                              '(any any any)))))
                        g$spec$8977$Od@c8))))
                  (g$get-record-predicate-name$8763$Od@c8
                    (case-lambda
                      ((g$spec$8967$Od@c8)
                       ((case-lambda
                          ((g$t$8968$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8969$Od@c8)
                               (if g$ls/false$8969$Od@c8
                                 (apply
                                   (case-lambda
                                     ((g$foo$8970$Od@c8
                                        g$make-foo$8971$Od@c8
                                        g$foo?$8972$Od@c8)
                                      g$foo?$8972$Od@c8))
                                   g$ls/false$8969$Od@c8)
                                 ((case-lambda
                                    ((g$t$8973$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8974$Od@c8)
                                         (if (if g$ls/false$8974$Od@c8
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8975$Od@c8)
                                                      (g$id?$7256$Od@c8
                                                        g$foo$8975$Od@c8)))
                                                   g$ls/false$8974$Od@c8))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8976$Od@c8)
                                                (g$id$8760$Od@c8
                                                  g$foo$8976$Od@c8
                                                  (g$stx->datum$7267$Od@c8
                                                    g$foo$8976$Od@c8)
                                                  '"?")))
                                             g$ls/false$8974$Od@c8)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid syntax"
                                             g$t$8973$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8973$Od@c8
                                        'any))))
                                  g$t$8968$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$8968$Od@c8
                              '(any any any)))))
                        g$spec$8967$Od@c8))))
                  (g$get-clause$8764$Od@c8
                    (case-lambda
                      ((g$id$8958$Od@c8 g$ls$8959$Od@c8)
                       ((case-lambda
                          ((g$t$8960$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8961$Od@c8)
                               (if g$ls/false$8961$Od@c8
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8961$Od@c8)
                                 ((case-lambda
                                    ((g$t$8962$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8963$Od@c8)
                                         (if g$ls/false$8963$Od@c8
                                           (apply
                                             (case-lambda
                                               ((g$x$8964$Od@c8
                                                  g$rest$8965$Od@c8
                                                  g$ls$8966$Od@c8)
                                                (if (g$free-id=?$7260$Od@c8
                                                      (g$bless$7497$Od@c8
                                                        g$id$8958$Od@c8)
                                                      g$x$8964$Od@c8)
                                                  (cons
                                                    g$x$8964$Od@c8
                                                    g$rest$8965$Od@c8)
                                                  (g$get-clause$8764$Od@c8
                                                    g$id$8958$Od@c8
                                                    g$ls$8966$Od@c8))))
                                             g$ls/false$8963$Od@c8)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid syntax"
                                             g$t$8962$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8962$Od@c8
                                        '((any . any) . any)))))
                                  g$t$8960$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8 g$t$8960$Od@c8 '()))))
                        g$ls$8959$Od@c8))))
                  (g$foo-rtd-code$8765$Od@c8
                    (case-lambda
                      ((g$name$8912$Od@c8 g$clause*$8913$Od@c8)
                       (letrec* ((g$convert-field-spec*$8914$Od@c8
                                   (case-lambda
                                     ((g$ls$8945$Od@c8)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8946$Od@c8)
                                                ((case-lambda
                                                   ((g$t$8947$Od@c8)
                                                    ((case-lambda
                                                       ((g$ls/false$8948$Od@c8)
                                                        (if g$ls/false$8948$Od@c8
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8949$Od@c8
                                                                 g$rest$8950$Od@c8)
                                                               (list
                                                                 'mutable
                                                                 g$name$8949$Od@c8)))
                                                            g$ls/false$8948$Od@c8)
                                                          ((case-lambda
                                                             ((g$t$8951$Od@c8)
                                                              ((case-lambda
                                                                 ((g$ls/false$8952$Od@c8)
                                                                  (if g$ls/false$8952$Od@c8
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8953$Od@c8
                                                                           g$rest$8954$Od@c8)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8953$Od@c8)))
                                                                      g$ls/false$8952$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$t$8955$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8956$Od@c8)
                                                                            (if g$ls/false$8956$Od@c8
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8957$Od@c8)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8957$Od@c8)))
                                                                                g$ls/false$8956$Od@c8)
                                                                              (g$syntax-violation$7640$Od@c8
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8955$Od@c8))))
                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                           g$t$8955$Od@c8
                                                                           'any))))
                                                                     g$t$8951$Od@c8))))
                                                               (g$syntax-dispatch$7534$Od@c8
                                                                 g$t$8951$Od@c8
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8947$Od@c8))))
                                                     (g$syntax-dispatch$7534$Od@c8
                                                       g$t$8947$Od@c8
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8946$Od@c8)))
                                             g$ls$8945$Od@c8))))))
                         ((case-lambda
                            ((g$parent-rtd-code$8915$Od@c8
                               g$uid-code$8916$Od@c8
                               g$sealed?$8917$Od@c8
                               g$opaque?$8918$Od@c8
                               g$fields$8919$Od@c8)
                             (g$bless$7497$Od@c8
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8912$Od@c8)
                                 g$parent-rtd-code$8915$Od@c8
                                 g$uid-code$8916$Od@c8
                                 g$sealed?$8917$Od@c8
                                 g$opaque?$8918$Od@c8
                                 g$fields$8919$Od@c8))))
                          ((case-lambda
                             ((g$t$8920$Od@c8)
                              ((case-lambda
                                 ((g$ls/false$8921$Od@c8)
                                  (if g$ls/false$8921$Od@c8
                                    (apply
                                      (case-lambda
                                        ((g$name$8922$Od@c8)
                                         (list
                                           'record-type-descriptor
                                           g$name$8922$Od@c8)))
                                      g$ls/false$8921$Od@c8)
                                    ((case-lambda
                                       ((g$t$8923$Od@c8)
                                        ((case-lambda
                                           ((g$ls/false$8924$Od@c8)
                                            (if g$ls/false$8924$Od@c8
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8924$Od@c8)
                                              (g$syntax-violation$7640$Od@c8
                                                '#f
                                                '"invalid syntax"
                                                g$t$8923$Od@c8))))
                                         (g$syntax-dispatch$7534$Od@c8
                                           g$t$8923$Od@c8
                                           '_))))
                                     g$t$8920$Od@c8))))
                               (g$syntax-dispatch$7534$Od@c8
                                 g$t$8920$Od@c8
                                 '(_ any)))))
                           (g$get-clause$8764$Od@c8
                             'parent
                             g$clause*$8913$Od@c8))
                          ((case-lambda
                             ((g$t$8925$Od@c8)
                              ((case-lambda
                                 ((g$ls/false$8926$Od@c8)
                                  (if g$ls/false$8926$Od@c8
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8926$Od@c8)
                                    ((case-lambda
                                       ((g$t$8927$Od@c8)
                                        ((case-lambda
                                           ((g$ls/false$8928$Od@c8)
                                            (if g$ls/false$8928$Od@c8
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8929$Od@c8)
                                                   (list
                                                     'quote
                                                     g$uid$8929$Od@c8)))
                                                g$ls/false$8928$Od@c8)
                                              ((case-lambda
                                                 ((g$t$8930$Od@c8)
                                                  ((case-lambda
                                                     ((g$ls/false$8931$Od@c8)
                                                      (if g$ls/false$8931$Od@c8
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8931$Od@c8)
                                                        (g$syntax-violation$7640$Od@c8
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8930$Od@c8))))
                                                   (g$syntax-dispatch$7534$Od@c8
                                                     g$t$8930$Od@c8
                                                     '_))))
                                               g$t$8927$Od@c8))))
                                         (g$syntax-dispatch$7534$Od@c8
                                           g$t$8927$Od@c8
                                           '(_ any)))))
                                     g$t$8925$Od@c8))))
                               (g$syntax-dispatch$7534$Od@c8
                                 g$t$8925$Od@c8
                                 '(_)))))
                           (g$get-clause$8764$Od@c8
                             'nongenerative
                             g$clause*$8913$Od@c8))
                          ((case-lambda
                             ((g$t$8932$Od@c8)
                              ((case-lambda
                                 ((g$ls/false$8933$Od@c8)
                                  (if g$ls/false$8933$Od@c8
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8933$Od@c8)
                                    ((case-lambda
                                       ((g$t$8934$Od@c8)
                                        ((case-lambda
                                           ((g$ls/false$8935$Od@c8)
                                            (if g$ls/false$8935$Od@c8
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8935$Od@c8)
                                              (g$syntax-violation$7640$Od@c8
                                                '#f
                                                '"invalid syntax"
                                                g$t$8934$Od@c8))))
                                         (g$syntax-dispatch$7534$Od@c8
                                           g$t$8934$Od@c8
                                           '_))))
                                     g$t$8932$Od@c8))))
                               (g$syntax-dispatch$7534$Od@c8
                                 g$t$8932$Od@c8
                                 '(_ #(atom #t))))))
                           (g$get-clause$8764$Od@c8
                             'sealed
                             g$clause*$8913$Od@c8))
                          ((case-lambda
                             ((g$t$8936$Od@c8)
                              ((case-lambda
                                 ((g$ls/false$8937$Od@c8)
                                  (if g$ls/false$8937$Od@c8
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8937$Od@c8)
                                    ((case-lambda
                                       ((g$t$8938$Od@c8)
                                        ((case-lambda
                                           ((g$ls/false$8939$Od@c8)
                                            (if g$ls/false$8939$Od@c8
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8939$Od@c8)
                                              (g$syntax-violation$7640$Od@c8
                                                '#f
                                                '"invalid syntax"
                                                g$t$8938$Od@c8))))
                                         (g$syntax-dispatch$7534$Od@c8
                                           g$t$8938$Od@c8
                                           '_))))
                                     g$t$8936$Od@c8))))
                               (g$syntax-dispatch$7534$Od@c8
                                 g$t$8936$Od@c8
                                 '(_ #(atom #t))))))
                           (g$get-clause$8764$Od@c8
                             'opaque
                             g$clause*$8913$Od@c8))
                          ((case-lambda
                             ((g$t$8940$Od@c8)
                              ((case-lambda
                                 ((g$ls/false$8941$Od@c8)
                                  (if g$ls/false$8941$Od@c8
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8942$Od@c8)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8914$Od@c8
                                             g$field-spec*$8942$Od@c8))))
                                      g$ls/false$8941$Od@c8)
                                    ((case-lambda
                                       ((g$t$8943$Od@c8)
                                        ((case-lambda
                                           ((g$ls/false$8944$Od@c8)
                                            (if g$ls/false$8944$Od@c8
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8944$Od@c8)
                                              (g$syntax-violation$7640$Od@c8
                                                '#f
                                                '"invalid syntax"
                                                g$t$8943$Od@c8))))
                                         (g$syntax-dispatch$7534$Od@c8
                                           g$t$8943$Od@c8
                                           '_))))
                                     g$t$8940$Od@c8))))
                               (g$syntax-dispatch$7534$Od@c8
                                 g$t$8940$Od@c8
                                 '(_ . each-any)))))
                           (g$get-clause$8764$Od@c8
                             'fields
                             g$clause*$8913$Od@c8)))))))
                  (g$foo-rcd-code$8766$Od@c8
                    (case-lambda
                      ((g$clause*$8903$Od@c8
                         g$foo-rtd$8904$Od@c8
                         g$protocol$8905$Od@c8)
                       ((case-lambda
                          ((g$parent-rcd-code$8906$Od@c8)
                           (list
                             'make-record-constructor-descriptor
                             g$foo-rtd$8904$Od@c8
                             g$parent-rcd-code$8906$Od@c8
                             g$protocol$8905$Od@c8)))
                        ((case-lambda
                           ((g$t$8907$Od@c8)
                            ((case-lambda
                               ((g$ls/false$8908$Od@c8)
                                (if g$ls/false$8908$Od@c8
                                  (apply
                                    (case-lambda
                                      ((g$name$8909$Od@c8)
                                       (list
                                         'record-constructor-descriptor
                                         g$name$8909$Od@c8)))
                                    g$ls/false$8908$Od@c8)
                                  ((case-lambda
                                     ((g$t$8910$Od@c8)
                                      ((case-lambda
                                         ((g$ls/false$8911$Od@c8)
                                          (if g$ls/false$8911$Od@c8
                                            (apply
                                              (case-lambda (() '#f))
                                              g$ls/false$8911$Od@c8)
                                            (g$syntax-violation$7640$Od@c8
                                              '#f
                                              '"invalid syntax"
                                              g$t$8910$Od@c8))))
                                       (g$syntax-dispatch$7534$Od@c8
                                         g$t$8910$Od@c8
                                         '_))))
                                   g$t$8907$Od@c8))))
                             (g$syntax-dispatch$7534$Od@c8
                               g$t$8907$Od@c8
                               '(_ any)))))
                         (g$get-clause$8764$Od@c8
                           'parent
                           g$clause*$8903$Od@c8))))))
                  (g$get-protocol-code$8767$Od@c8
                    (case-lambda
                      ((g$clause*$8897$Od@c8)
                       ((case-lambda
                          ((g$t$8898$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8899$Od@c8)
                               (if g$ls/false$8899$Od@c8
                                 (apply
                                   (case-lambda
                                     ((g$expr$8900$Od@c8) g$expr$8900$Od@c8))
                                   g$ls/false$8899$Od@c8)
                                 ((case-lambda
                                    ((g$t$8901$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8902$Od@c8)
                                         (if g$ls/false$8902$Od@c8
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8902$Od@c8)
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid syntax"
                                             g$t$8901$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8901$Od@c8
                                        '_))))
                                  g$t$8898$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$8898$Od@c8
                              '(_ any)))))
                        (g$get-clause$8764$Od@c8
                          'protocol
                          g$clause*$8897$Od@c8)))))
                  (g$get-fields$8768$Od@c8
                    (case-lambda
                      ((g$clause*$8888$Od@c8)
                       ((case-lambda
                          ((g$t$8889$Od@c8)
                           ((case-lambda
                              ((g$ls/false$8890$Od@c8)
                               (if g$ls/false$8890$Od@c8
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8890$Od@c8)
                                 ((case-lambda
                                    ((g$t$8891$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8892$Od@c8)
                                         (if g$ls/false$8892$Od@c8
                                           (apply
                                             (case-lambda
                                               ((g$f*$8893$Od@c8)
                                                g$f*$8893$Od@c8))
                                             g$ls/false$8892$Od@c8)
                                           ((case-lambda
                                              ((g$t$8894$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$8895$Od@c8)
                                                   (if g$ls/false$8895$Od@c8
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8896$Od@c8)
                                                          (g$get-fields$8768$Od@c8
                                                            g$rest$8896$Od@c8)))
                                                       g$ls/false$8895$Od@c8)
                                                     (g$syntax-violation$7640$Od@c8
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8894$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$8894$Od@c8
                                                  '(_ . any)))))
                                            g$t$8891$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8891$Od@c8
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8889$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8 g$t$8889$Od@c8 '()))))
                        g$clause*$8888$Od@c8))))
                  (g$get-mutator-indices$8769$Od@c8
                    (case-lambda
                      ((g$fields$8876$Od@c8)
                       ((letrec ((g$f$8877$Od@c8
                                   (case-lambda
                                     ((g$fields$8878$Od@c8 g$i$8879$Od@c8)
                                      ((case-lambda
                                         ((g$t$8880$Od@c8)
                                          ((case-lambda
                                             ((g$ls/false$8881$Od@c8)
                                              (if g$ls/false$8881$Od@c8
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8881$Od@c8)
                                                ((case-lambda
                                                   ((g$t$8882$Od@c8)
                                                    ((case-lambda
                                                       ((g$ls/false$8883$Od@c8)
                                                        (if g$ls/false$8883$Od@c8
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8884$Od@c8)
                                                               (cons
                                                                 g$i$8879$Od@c8
                                                                 (g$f$8877$Od@c8
                                                                   g$rest$8884$Od@c8
                                                                   (+ g$i$8879$Od@c8
                                                                      '1)))))
                                                            g$ls/false$8883$Od@c8)
                                                          ((case-lambda
                                                             ((g$t$8885$Od@c8)
                                                              ((case-lambda
                                                                 ((g$ls/false$8886$Od@c8)
                                                                  (if g$ls/false$8886$Od@c8
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8887$Od@c8)
                                                                         (g$f$8877$Od@c8
                                                                           g$rest$8887$Od@c8
                                                                           (+ g$i$8879$Od@c8
                                                                              '1))))
                                                                      g$ls/false$8886$Od@c8)
                                                                    (g$syntax-violation$7640$Od@c8
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8885$Od@c8))))
                                                               (g$syntax-dispatch$7534$Od@c8
                                                                 g$t$8885$Od@c8
                                                                 '(_ . any)))))
                                                           g$t$8882$Od@c8))))
                                                     (g$syntax-dispatch$7534$Od@c8
                                                       g$t$8882$Od@c8
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8880$Od@c8))))
                                           (g$syntax-dispatch$7534$Od@c8
                                             g$t$8880$Od@c8
                                             '()))))
                                       g$fields$8878$Od@c8)))))
                          g$f$8877$Od@c8)
                        g$fields$8876$Od@c8
                        '0))))
                  (g$get-mutators$8770$Od@c8
                    (case-lambda
                      ((g$foo$8855$Od@c8 g$fields$8856$Od@c8)
                       (letrec* ((g$gen-name$8857$Od@c8
                                   (case-lambda
                                     ((g$x$8875$Od@c8)
                                      (g$datum->syntax$7642$Od@c8
                                        g$foo$8855$Od@c8
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7643$Od@c8
                                                g$foo$8855$Od@c8))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7643$Od@c8
                                                g$x$8875$Od@c8))
                                            '"-set!")))))))
                         ((letrec ((g$f$8858$Od@c8
                                     (case-lambda
                                       ((g$fields$8859$Od@c8)
                                        ((case-lambda
                                           ((g$t$8860$Od@c8)
                                            ((case-lambda
                                               ((g$ls/false$8861$Od@c8)
                                                (if g$ls/false$8861$Od@c8
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8861$Od@c8)
                                                  ((case-lambda
                                                     ((g$t$8862$Od@c8)
                                                      ((case-lambda
                                                         ((g$ls/false$8863$Od@c8)
                                                          (if g$ls/false$8863$Od@c8
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8864$Od@c8
                                                                   g$accessor$8865$Od@c8
                                                                   g$mutator$8866$Od@c8
                                                                   g$rest$8867$Od@c8)
                                                                 (cons
                                                                   g$mutator$8866$Od@c8
                                                                   (g$f$8858$Od@c8
                                                                     g$rest$8867$Od@c8))))
                                                              g$ls/false$8863$Od@c8)
                                                            ((case-lambda
                                                               ((g$t$8868$Od@c8)
                                                                ((case-lambda
                                                                   ((g$ls/false$8869$Od@c8)
                                                                    (if g$ls/false$8869$Od@c8
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8870$Od@c8
                                                                             g$rest$8871$Od@c8)
                                                                           (cons
                                                                             (g$gen-name$8857$Od@c8
                                                                               g$name$8870$Od@c8)
                                                                             (g$f$8858$Od@c8
                                                                               g$rest$8871$Od@c8))))
                                                                        g$ls/false$8869$Od@c8)
                                                                      ((case-lambda
                                                                         ((g$t$8872$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8873$Od@c8)
                                                                              (if g$ls/false$8873$Od@c8
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8874$Od@c8)
                                                                                     (g$f$8858$Od@c8
                                                                                       g$rest$8874$Od@c8)))
                                                                                  g$ls/false$8873$Od@c8)
                                                                                (g$syntax-violation$7640$Od@c8
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8872$Od@c8))))
                                                                           (g$syntax-dispatch$7534$Od@c8
                                                                             g$t$8872$Od@c8
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8868$Od@c8))))
                                                                 (g$syntax-dispatch$7534$Od@c8
                                                                   g$t$8868$Od@c8
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8862$Od@c8))))
                                                       (g$syntax-dispatch$7534$Od@c8
                                                         g$t$8862$Od@c8
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8860$Od@c8))))
                                             (g$syntax-dispatch$7534$Od@c8
                                               g$t$8860$Od@c8
                                               '()))))
                                         g$fields$8859$Od@c8)))))
                            g$f$8858$Od@c8)
                          g$fields$8856$Od@c8)))))
                  (g$get-accessors$8771$Od@c8
                    (case-lambda
                      ((g$foo$8821$Od@c8 g$fields$8822$Od@c8)
                       (letrec* ((g$gen-name$8823$Od@c8
                                   (case-lambda
                                     ((g$x$8854$Od@c8)
                                      (g$datum->syntax$7642$Od@c8
                                        g$foo$8821$Od@c8
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7643$Od@c8
                                                g$foo$8821$Od@c8))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7643$Od@c8
                                                g$x$8854$Od@c8)))))))))
                         (map (case-lambda
                                ((g$field$8824$Od@c8)
                                 ((case-lambda
                                    ((g$t$8825$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$8826$Od@c8)
                                         (if (if g$ls/false$8826$Od@c8
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8827$Od@c8
                                                        g$accessor$8828$Od@c8
                                                        g$mutator$8829$Od@c8)
                                                      (g$id?$7256$Od@c8
                                                        g$accessor$8828$Od@c8)))
                                                   g$ls/false$8826$Od@c8))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8830$Od@c8
                                                  g$accessor$8831$Od@c8
                                                  g$mutator$8832$Od@c8)
                                                g$accessor$8831$Od@c8))
                                             g$ls/false$8826$Od@c8)
                                           ((case-lambda
                                              ((g$t$8833$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$8834$Od@c8)
                                                   (if (if g$ls/false$8834$Od@c8
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8835$Od@c8
                                                                  g$accessor$8836$Od@c8)
                                                                (g$id?$7256$Od@c8
                                                                  g$accessor$8836$Od@c8)))
                                                             g$ls/false$8834$Od@c8))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8837$Od@c8
                                                            g$accessor$8838$Od@c8)
                                                          g$accessor$8838$Od@c8))
                                                       g$ls/false$8834$Od@c8)
                                                     ((case-lambda
                                                        ((g$t$8839$Od@c8)
                                                         ((case-lambda
                                                            ((g$ls/false$8840$Od@c8)
                                                             (if (if g$ls/false$8840$Od@c8
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8841$Od@c8)
                                                                          (g$id?$7256$Od@c8
                                                                            g$name$8841$Od@c8)))
                                                                       g$ls/false$8840$Od@c8))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8842$Od@c8)
                                                                    (g$gen-name$8823$Od@c8
                                                                      g$name$8842$Od@c8)))
                                                                 g$ls/false$8840$Od@c8)
                                                               ((case-lambda
                                                                  ((g$t$8843$Od@c8)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8844$Od@c8)
                                                                       (if (if g$ls/false$8844$Od@c8
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8845$Od@c8)
                                                                                    (g$id?$7256$Od@c8
                                                                                      g$name$8845$Od@c8)))
                                                                                 g$ls/false$8844$Od@c8))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8846$Od@c8)
                                                                              (g$gen-name$8823$Od@c8
                                                                                g$name$8846$Od@c8)))
                                                                           g$ls/false$8844$Od@c8)
                                                                         ((case-lambda
                                                                            ((g$t$8847$Od@c8)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8848$Od@c8)
                                                                                 (if (if g$ls/false$8848$Od@c8
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8849$Od@c8)
                                                                                              (g$id?$7256$Od@c8
                                                                                                g$name$8849$Od@c8)))
                                                                                           g$ls/false$8848$Od@c8))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8850$Od@c8)
                                                                                        (g$gen-name$8823$Od@c8
                                                                                          g$name$8850$Od@c8)))
                                                                                     g$ls/false$8848$Od@c8)
                                                                                   ((case-lambda
                                                                                      ((g$t$8851$Od@c8)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8852$Od@c8)
                                                                                           (if g$ls/false$8852$Od@c8
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8853$Od@c8)
                                                                                                  (g$syntax-violation$7640$Od@c8
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8824$Od@c8)))
                                                                                               g$ls/false$8852$Od@c8)
                                                                                             (g$syntax-violation$7640$Od@c8
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8851$Od@c8))))
                                                                                        (g$syntax-dispatch$7534$Od@c8
                                                                                          g$t$8851$Od@c8
                                                                                          'any))))
                                                                                    g$t$8847$Od@c8))))
                                                                              (g$syntax-dispatch$7534$Od@c8
                                                                                g$t$8847$Od@c8
                                                                                'any))))
                                                                          g$t$8843$Od@c8))))
                                                                    (g$syntax-dispatch$7534$Od@c8
                                                                      g$t$8843$Od@c8
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8839$Od@c8))))
                                                          (g$syntax-dispatch$7534$Od@c8
                                                            g$t$8839$Od@c8
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8833$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$8833$Od@c8
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8825$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$8825$Od@c8
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8824$Od@c8)))
                              g$fields$8822$Od@c8)))))
                  (g$enumerate$8772$Od@c8
                    (case-lambda
                      ((g$ls$8817$Od@c8)
                       ((letrec ((g$f$8818$Od@c8
                                   (case-lambda
                                     ((g$ls$8819$Od@c8 g$i$8820$Od@c8)
                                      (if (null? g$ls$8819$Od@c8)
                                        '()
                                        (cons
                                          g$i$8820$Od@c8
                                          (g$f$8818$Od@c8
                                            (cdr g$ls$8819$Od@c8)
                                            (+ g$i$8820$Od@c8 '1))))))))
                          g$f$8818$Od@c8)
                        g$ls$8817$Od@c8
                        '0))))
                  (g$do-define-record$8773$Od@c8
                    (case-lambda
                      ((g$namespec$8797$Od@c8 g$clause*$8798$Od@c8)
                       ((case-lambda
                          ((g$foo$8799$Od@c8)
                           ((case-lambda
                              ((g$foo-rtd$8800$Od@c8)
                               ((case-lambda
                                  ((g$foo-rcd$8801$Od@c8)
                                   ((case-lambda
                                      ((g$protocol$8802$Od@c8)
                                       ((case-lambda
                                          ((g$make-foo$8803$Od@c8)
                                           ((case-lambda
                                              ((g$fields$8804$Od@c8)
                                               ((case-lambda
                                                  ((g$idx*$8805$Od@c8)
                                                   ((case-lambda
                                                      ((g$foo-x*$8806$Od@c8)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8807$Od@c8)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8808$Od@c8)
                                                               ((case-lambda
                                                                  ((g$foo?$8809$Od@c8)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8810$Od@c8)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8811$Od@c8)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8812$Od@c8)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7497$Od@c8
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8800$Od@c8
                                                                                           g$foo-rtd-code$8810$Od@c8)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8802$Od@c8
                                                                                             g$protocol-code$8812$Od@c8)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8801$Od@c8
                                                                                               g$foo-rcd-code$8811$Od@c8)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8799$Od@c8
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8800$Od@c8)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8801$Od@c8)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8809$Od@c8
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8800$Od@c8))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8803$Od@c8
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8801$Od@c8))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8813$Od@c8
                                                                                                               g$idx$8814$Od@c8)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8813$Od@c8
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8800$Od@c8
                                                                                                                 g$idx$8814$Od@c8))))
                                                                                                          g$foo-x*$8806$Od@c8
                                                                                                          g$idx*$8805$Od@c8)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8815$Od@c8
                                                                                                               g$idx$8816$Od@c8)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8815$Od@c8
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8800$Od@c8
                                                                                                                 g$idx$8816$Od@c8))))
                                                                                                          g$set-foo-x!*$8807$Od@c8
                                                                                                          g$set-foo-idx*$8808$Od@c8)))))))))))))))
                                                                            (g$get-protocol-code$8767$Od@c8
                                                                              g$clause*$8798$Od@c8))))
                                                                        (g$foo-rcd-code$8766$Od@c8
                                                                          g$clause*$8798$Od@c8
                                                                          g$foo-rtd$8800$Od@c8
                                                                          g$protocol$8802$Od@c8))))
                                                                    (g$foo-rtd-code$8765$Od@c8
                                                                      g$foo$8799$Od@c8
                                                                      g$clause*$8798$Od@c8))))
                                                                (g$get-record-predicate-name$8763$Od@c8
                                                                  g$namespec$8797$Od@c8))))
                                                            (g$get-mutator-indices$8769$Od@c8
                                                              g$fields$8804$Od@c8))))
                                                        (g$get-mutators$8770$Od@c8
                                                          g$foo$8799$Od@c8
                                                          g$fields$8804$Od@c8))))
                                                    (g$get-accessors$8771$Od@c8
                                                      g$foo$8799$Od@c8
                                                      g$fields$8804$Od@c8))))
                                                (g$enumerate$8772$Od@c8
                                                  g$fields$8804$Od@c8))))
                                            (g$get-fields$8768$Od@c8
                                              g$clause*$8798$Od@c8))))
                                        (g$get-record-constructor-name$8762$Od@c8
                                          g$namespec$8797$Od@c8))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8761$Od@c8 g$namespec$8797$Od@c8)))))
                  (g$verify-clauses$8774$Od@c8
                    (case-lambda
                      ((g$x$8779$Od@c8 g$cls*$8780$Od@c8)
                       (letrec* ((g$valid-kwds$8781$Od@c8
                                   (map g$bless$7497$Od@c8
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8782$Od@c8
                                   (case-lambda
                                     ((g$x$8794$Od@c8 g$ls$8795$Od@c8)
                                      (if (pair? g$ls$8795$Od@c8)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8796$Od@c8)
                                              (if g$t$8796$Od@c8
                                                g$t$8796$Od@c8
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8782$Od@c8
                                                    g$x$8794$Od@c8
                                                    (cdr g$ls$8795$Od@c8))))))
                                           (g$free-id=?$7260$Od@c8
                                             g$x$8794$Od@c8
                                             (car g$ls$8795$Od@c8))))
                                        '#f)))))
                         ((letrec ((g$f$8783$Od@c8
                                     (case-lambda
                                       ((g$cls*$8784$Od@c8 g$seen*$8785$Od@c8)
                                        (if (null? g$cls*$8784$Od@c8)
                                          (void)
                                          ((case-lambda
                                             ((g$t$8786$Od@c8)
                                              ((case-lambda
                                                 ((g$ls/false$8787$Od@c8)
                                                  (if g$ls/false$8787$Od@c8
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8788$Od@c8
                                                           g$rest$8789$Od@c8)
                                                         (if ((case-lambda
                                                                ((g$t$8790$Od@c8)
                                                                 (if g$t$8790$Od@c8
                                                                   g$t$8790$Od@c8
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8782$Od@c8
                                                                            g$kwd$8788$Od@c8
                                                                            g$valid-kwds$8781$Od@c8))))))
                                                              (not (g$id?$7256$Od@c8
                                                                     g$kwd$8788$Od@c8)))
                                                           (g$syntax-violation$7640$Od@c8
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8788$Od@c8)
                                                           (if (g$bound-id-member?$7263$Od@c8
                                                                 g$kwd$8788$Od@c8
                                                                 g$seen*$8785$Od@c8)
                                                             (g$syntax-violation$7640$Od@c8
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8779$Od@c8
                                                               g$kwd$8788$Od@c8)
                                                             (g$f$8783$Od@c8
                                                               (cdr g$cls*$8784$Od@c8)
                                                               (cons
                                                                 g$kwd$8788$Od@c8
                                                                 g$seen*$8785$Od@c8))))))
                                                      g$ls/false$8787$Od@c8)
                                                    ((case-lambda
                                                       ((g$t$8791$Od@c8)
                                                        ((case-lambda
                                                           ((g$ls/false$8792$Od@c8)
                                                            (if g$ls/false$8792$Od@c8
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8793$Od@c8)
                                                                   (g$syntax-violation$7640$Od@c8
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8793$Od@c8)))
                                                                g$ls/false$8792$Od@c8)
                                                              (g$syntax-violation$7640$Od@c8
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8791$Od@c8))))
                                                         (g$syntax-dispatch$7534$Od@c8
                                                           g$t$8791$Od@c8
                                                           'any))))
                                                     g$t$8786$Od@c8))))
                                               (g$syntax-dispatch$7534$Od@c8
                                                 g$t$8786$Od@c8
                                                 '(any . any)))))
                                           (car g$cls*$8784$Od@c8)))))))
                            g$f$8783$Od@c8)
                          g$cls*$8780$Od@c8
                          '()))))))
          ((case-lambda
             ((g$t$8775$Od@c8)
              ((case-lambda
                 ((g$ls/false$8776$Od@c8)
                  (if g$ls/false$8776$Od@c8
                    (apply
                      (case-lambda
                        ((g$namespec$8777$Od@c8 g$clause*$8778$Od@c8)
                         (begin
                           (g$verify-clauses$8774$Od@c8
                             g$x$8759$Od@c8
                             g$clause*$8778$Od@c8)
                           (g$do-define-record$8773$Od@c8
                             g$namespec$8777$Od@c8
                             g$clause*$8778$Od@c8))))
                      g$ls/false$8776$Od@c8)
                    (g$syntax-violation$7640$Od@c8
                      '#f
                      '"invalid syntax"
                      g$t$8775$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8
                 g$t$8775$Od@c8
                 '(_ any . each-any)))))
           g$x$8759$Od@c8)))))
   (g$define-condition-type-macro$7529$Od@c8
     g$define-condition-type-macro$10961$Od@c8
     (case-lambda
       ((g$x$8999$Od@c8)
        (letrec* ((g$mkname$9000$Od@c8
                    (case-lambda
                      ((g$name$9023$Od@c8 g$suffix$9024$Od@c8)
                       (g$datum->syntax$7642$Od@c8
                         g$name$9023$Od@c8
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7643$Od@c8 g$name$9023$Od@c8))
                             g$suffix$9024$Od@c8)))))))
          ((case-lambda
             ((g$t$9001$Od@c8)
              ((case-lambda
                 ((g$ls/false$9002$Od@c8)
                  (if (if g$ls/false$9002$Od@c8
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9003$Od@c8
                                 g$name$9004$Od@c8
                                 g$super$9005$Od@c8
                                 g$constructor$9006$Od@c8
                                 g$predicate$9007$Od@c8
                                 g$field*$9008$Od@c8
                                 g$accessor*$9009$Od@c8)
                               (if (g$id?$7256$Od@c8 g$name$9004$Od@c8)
                                 (if (g$id?$7256$Od@c8 g$super$9005$Od@c8)
                                   (if (g$id?$7256$Od@c8
                                         g$constructor$9006$Od@c8)
                                     (if (g$id?$7256$Od@c8
                                           g$predicate$9007$Od@c8)
                                       (if (g$for-all$5685$Od@c8
                                             g$id?$7256$Od@c8
                                             g$field*$9008$Od@c8)
                                         (begin
                                           '#f
                                           (g$for-all$5685$Od@c8
                                             g$id?$7256$Od@c8
                                             g$accessor*$9009$Od@c8))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9002$Od@c8))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9010$Od@c8
                           g$name$9011$Od@c8
                           g$super$9012$Od@c8
                           g$constructor$9013$Od@c8
                           g$predicate$9014$Od@c8
                           g$field*$9015$Od@c8
                           g$accessor*$9016$Od@c8)
                         ((case-lambda
                            ((g$aux-accessor*$9017$Od@c8)
                             (g$bless$7497$Od@c8
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9011$Od@c8
                                         g$constructor$9013$Od@c8
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9012$Od@c8)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9018$Od@c8
                                                       g$aux$9019$Od@c8)
                                                     (list
                                                       'immutable
                                                       g$field$9018$Od@c8
                                                       g$aux$9019$Od@c8)))
                                                  g$field*$9015$Od@c8
                                                  g$aux-accessor*$9017$Od@c8))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9014$Od@c8
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9011$Od@c8)))
                                     (map (case-lambda
                                            ((g$accessor$9020$Od@c8
                                               g$aux$9021$Od@c8)
                                             (list
                                               'define
                                               g$accessor$9020$Od@c8
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9011$Od@c8)
                                                 g$aux$9021$Od@c8))))
                                          g$accessor*$9016$Od@c8
                                          g$aux-accessor*$9017$Od@c8)))))))
                          (map (case-lambda ((g$x$9022$Od@c8) (gensym)))
                               g$accessor*$9016$Od@c8))))
                      g$ls/false$9002$Od@c8)
                    (g$syntax-violation$7640$Od@c8
                      '#f
                      '"invalid syntax"
                      g$t$9001$Od@c8))))
               (g$syntax-dispatch$7534$Od@c8
                 g$t$9001$Od@c8
                 '(any any any any any . #(each (any any)))))))
           g$x$8999$Od@c8)))))
   (g$incorrect-usage-macro$7530$Od@c8
     g$incorrect-usage-macro$10962$Od@c8
     (case-lambda
       ((g$e$9025$Od@c8)
        (g$syntax-violation$7640$Od@c8
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9025$Od@c8))))
   (g$parameterize-transformer$7531$Od@c8
     g$parameterize-transformer$10963$Od@c8
     (case-lambda
       ((g$e$9026$Od@c8 g$r$9027$Od@c8 g$mr$9028$Od@c8)
        ((case-lambda
           ((g$t$9029$Od@c8)
            ((case-lambda
               ((g$ls/false$9030$Od@c8)
                (if g$ls/false$9030$Od@c8
                  (apply
                    (case-lambda
                      ((g$b$9031$Od@c8 g$b*$9032$Od@c8)
                       (g$chi-internal$7563$Od@c8
                         (cons g$b$9031$Od@c8 g$b*$9032$Od@c8)
                         g$r$9027$Od@c8
                         g$mr$9028$Od@c8)))
                    g$ls/false$9030$Od@c8)
                  ((case-lambda
                     ((g$t$9033$Od@c8)
                      ((case-lambda
                         ((g$ls/false$9034$Od@c8)
                          (if g$ls/false$9034$Od@c8
                            (apply
                              (case-lambda
                                ((g$olhs*$9035$Od@c8
                                   g$orhs*$9036$Od@c8
                                   g$b$9037$Od@c8
                                   g$b*$9038$Od@c8)
                                 ((case-lambda
                                    ((g$lhs*$9039$Od@c8
                                       g$rhs*$9040$Od@c8
                                       g$t*$9041$Od@c8
                                       g$swap$9042$Od@c8)
                                     (g$build-let$7189$Od@c8
                                       '#f
                                       (append
                                         g$lhs*$9039$Od@c8
                                         g$rhs*$9040$Od@c8)
                                       (append
                                         (g$chi-expr*$7550$Od@c8
                                           g$olhs*$9035$Od@c8
                                           g$r$9027$Od@c8
                                           g$mr$9028$Od@c8)
                                         (g$chi-expr*$7550$Od@c8
                                           g$orhs*$9036$Od@c8
                                           g$r$9027$Od@c8
                                           g$mr$9028$Od@c8))
                                       (g$build-let$7189$Od@c8
                                         '#f
                                         (list g$swap$9042$Od@c8)
                                         (list
                                           (g$build-lambda$7187$Od@c8
                                             '#f
                                             '()
                                             (g$build-sequence$7190$Od@c8
                                               '#f
                                               (map (case-lambda
                                                      ((g$t$9043$Od@c8
                                                         g$lhs$9044$Od@c8
                                                         g$rhs$9045$Od@c8)
                                                       (g$build-let$7189$Od@c8
                                                         '#f
                                                         (list g$t$9043$Od@c8)
                                                         (list
                                                           (list
                                                             g$lhs$9044$Od@c8))
                                                         (g$build-sequence$7190$Od@c8
                                                           '#f
                                                           (list
                                                             (list
                                                               g$lhs$9044$Od@c8
                                                               g$rhs$9045$Od@c8)
                                                             (list
                                                               'set!
                                                               g$rhs$9045$Od@c8
                                                               g$t$9043$Od@c8))))))
                                                    g$t*$9041$Od@c8
                                                    g$lhs*$9039$Od@c8
                                                    g$rhs*$9040$Od@c8))))
                                         (list
                                           '(primitive dynamic-wind)
                                           g$swap$9042$Od@c8
                                           (g$build-lambda$7187$Od@c8
                                             '#f
                                             '()
                                             (g$chi-internal$7563$Od@c8
                                               (cons
                                                 g$b$9037$Od@c8
                                                 g$b*$9038$Od@c8)
                                               g$r$9027$Od@c8
                                               g$mr$9028$Od@c8))
                                           g$swap$9042$Od@c8)))))
                                  (map (case-lambda
                                         ((g$x$9046$Od@c8)
                                          (g$gen-lexical$7200$Od@c8 'lhs)))
                                       g$olhs*$9035$Od@c8)
                                  (map (case-lambda
                                         ((g$x$9047$Od@c8)
                                          (g$gen-lexical$7200$Od@c8 'rhs)))
                                       g$olhs*$9035$Od@c8)
                                  (map (case-lambda
                                         ((g$x$9048$Od@c8)
                                          (g$gen-lexical$7200$Od@c8 't)))
                                       g$olhs*$9035$Od@c8)
                                  (g$gen-lexical$7200$Od@c8 'swap))))
                              g$ls/false$9034$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$9033$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$9033$Od@c8
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9029$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$9029$Od@c8
               '(_ () any . each-any)))))
         g$e$9026$Od@c8))))
   (g$foreign-call-transformer$7532$Od@c8
     g$foreign-call-transformer$10964$Od@c8
     (case-lambda
       ((g$e$9049$Od@c8 g$r$9050$Od@c8 g$mr$9051$Od@c8)
        ((case-lambda
           ((g$t$9052$Od@c8)
            ((case-lambda
               ((g$ls/false$9053$Od@c8)
                (if g$ls/false$9053$Od@c8
                  (apply
                    (case-lambda
                      ((g$name$9054$Od@c8 g$arg*$9055$Od@c8)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7552$Od@c8
                             g$name$9054$Od@c8
                             g$r$9050$Od@c8
                             g$mr$9051$Od@c8)
                           (g$chi-expr*$7550$Od@c8
                             g$arg*$9055$Od@c8
                             g$r$9050$Od@c8
                             g$mr$9051$Od@c8)))))
                    g$ls/false$9053$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$9052$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$9052$Od@c8
               '(_ any . each-any)))))
         g$e$9049$Od@c8))))
   (g$convert-pattern$7533$Od@c8
     g$convert-pattern$10965$Od@c8
     (case-lambda
       ((g$pattern$9056$Od@c8 g$keys$9057$Od@c8)
        (letrec* ((g$cvt*$9058$Od@c8
                    (case-lambda
                      ((g$p*$9138$Od@c8 g$n$9139$Od@c8 g$ids$9140$Od@c8)
                       (if (null? g$p*$9138$Od@c8)
                         (values '() g$ids$9140$Od@c8)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9058$Od@c8
                                (cdr g$p*$9138$Od@c8)
                                g$n$9139$Od@c8
                                g$ids$9140$Od@c8)))
                           (case-lambda
                             ((g$y$9143$Od@c8 g$ids$9144$Od@c8)
                              ((case-lambda
                                 ((g$ids$9145$Od@c8 g$y$9146$Od@c8)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9059$Od@c8
                                         (car g$p*$9138$Od@c8)
                                         g$n$9139$Od@c8
                                         g$ids$9145$Od@c8)))
                                    (case-lambda
                                      ((g$x$9149$Od@c8 g$ids$9150$Od@c8)
                                       ((case-lambda
                                          ((g$ids$9151$Od@c8 g$x$9152$Od@c8)
                                           (values
                                             (cons
                                               g$x$9152$Od@c8
                                               g$y$9146$Od@c8)
                                             g$ids$9151$Od@c8)))
                                        g$ids$9150$Od@c8
                                        g$x$9149$Od@c8))))))
                               g$ids$9144$Od@c8
                               g$y$9143$Od@c8))))))))
                  (g$cvt$9059$Od@c8
                    (case-lambda
                      ((g$p$9060$Od@c8 g$n$9061$Od@c8 g$ids$9062$Od@c8)
                       ((case-lambda
                          ((g$t$9063$Od@c8)
                           ((case-lambda
                              ((g$ls/false$9064$Od@c8)
                               (if (if g$ls/false$9064$Od@c8
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9065$Od@c8)
                                            (g$id?$7256$Od@c8 g$id$9065$Od@c8)))
                                         g$ls/false$9064$Od@c8))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9066$Od@c8)
                                      (if (g$bound-id-member?$7263$Od@c8
                                            g$p$9060$Od@c8
                                            g$keys$9057$Od@c8)
                                        (values
                                          (vector 'free-id g$p$9060$Od@c8)
                                          g$ids$9062$Od@c8)
                                        (if (g$free-id=?$7260$Od@c8
                                              g$p$9060$Od@c8
                                              (g$scheme-stx$7477$Od@c8 '_))
                                          (values '_ g$ids$9062$Od@c8)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9060$Od@c8
                                                g$n$9061$Od@c8)
                                              g$ids$9062$Od@c8))))))
                                   g$ls/false$9064$Od@c8)
                                 ((case-lambda
                                    ((g$t$9067$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$9068$Od@c8)
                                         (if (if g$ls/false$9068$Od@c8
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9069$Od@c8
                                                        g$dots$9070$Od@c8)
                                                      (g$ellipsis?$7535$Od@c8
                                                        g$dots$9070$Od@c8)))
                                                   g$ls/false$9068$Od@c8))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9071$Od@c8
                                                  g$dots$9072$Od@c8)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9059$Od@c8
                                                       g$p$9071$Od@c8
                                                       (+ g$n$9061$Od@c8 '1)
                                                       g$ids$9062$Od@c8)))
                                                  (case-lambda
                                                    ((g$p$9075$Od@c8
                                                       g$ids$9076$Od@c8)
                                                     ((case-lambda
                                                        ((g$ids$9077$Od@c8
                                                           g$p$9078$Od@c8)
                                                         (values
                                                           (if (eq? g$p$9078$Od@c8
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9078$Od@c8))
                                                           g$ids$9077$Od@c8)))
                                                      g$ids$9076$Od@c8
                                                      g$p$9075$Od@c8))))))
                                             g$ls/false$9068$Od@c8)
                                           ((case-lambda
                                              ((g$t$9079$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$9080$Od@c8)
                                                   (if (if g$ls/false$9080$Od@c8
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9081$Od@c8
                                                                  g$dots$9082$Od@c8
                                                                  g$ys$9083$Od@c8
                                                                  g$z$9084$Od@c8)
                                                                (g$ellipsis?$7535$Od@c8
                                                                  g$dots$9082$Od@c8)))
                                                             g$ls/false$9080$Od@c8))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9085$Od@c8
                                                            g$dots$9086$Od@c8
                                                            g$ys$9087$Od@c8
                                                            g$z$9088$Od@c8)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9059$Od@c8
                                                                 g$z$9088$Od@c8
                                                                 g$n$9061$Od@c8
                                                                 g$ids$9062$Od@c8)))
                                                            (case-lambda
                                                              ((g$z$9091$Od@c8
                                                                 g$ids$9092$Od@c8)
                                                               ((case-lambda
                                                                  ((g$ids$9093$Od@c8
                                                                     g$z$9094$Od@c8)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9058$Od@c8
                                                                          g$ys$9087$Od@c8
                                                                          g$n$9061$Od@c8
                                                                          g$ids$9093$Od@c8)))
                                                                     (case-lambda
                                                                       ((g$ys$9097$Od@c8
                                                                          g$ids$9098$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$ids$9099$Od@c8
                                                                              g$ys$9100$Od@c8)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9059$Od@c8
                                                                                   g$x$9085$Od@c8
                                                                                   (+ g$n$9061$Od@c8
                                                                                      '1)
                                                                                   g$ids$9099$Od@c8)))
                                                                              (case-lambda
                                                                                ((g$x$9103$Od@c8
                                                                                   g$ids$9104$Od@c8)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9105$Od@c8
                                                                                       g$x$9106$Od@c8)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9106$Od@c8
                                                                                         (reverse
                                                                                           g$ys$9100$Od@c8)
                                                                                         g$z$9094$Od@c8)
                                                                                       g$ids$9105$Od@c8)))
                                                                                  g$ids$9104$Od@c8
                                                                                  g$x$9103$Od@c8))))))
                                                                         g$ids$9098$Od@c8
                                                                         g$ys$9097$Od@c8))))))
                                                                g$ids$9092$Od@c8
                                                                g$z$9091$Od@c8))))))
                                                       g$ls/false$9080$Od@c8)
                                                     ((case-lambda
                                                        ((g$t$9107$Od@c8)
                                                         ((case-lambda
                                                            ((g$ls/false$9108$Od@c8)
                                                             (if g$ls/false$9108$Od@c8
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9109$Od@c8
                                                                      g$y$9110$Od@c8)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9059$Od@c8
                                                                           g$y$9110$Od@c8
                                                                           g$n$9061$Od@c8
                                                                           g$ids$9062$Od@c8)))
                                                                      (case-lambda
                                                                        ((g$y$9113$Od@c8
                                                                           g$ids$9114$Od@c8)
                                                                         ((case-lambda
                                                                            ((g$ids$9115$Od@c8
                                                                               g$y$9116$Od@c8)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9059$Od@c8
                                                                                    g$x$9109$Od@c8
                                                                                    g$n$9061$Od@c8
                                                                                    g$ids$9115$Od@c8)))
                                                                               (case-lambda
                                                                                 ((g$x$9119$Od@c8
                                                                                    g$ids$9120$Od@c8)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9121$Od@c8
                                                                                        g$x$9122$Od@c8)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9122$Od@c8
                                                                                          g$y$9116$Od@c8)
                                                                                        g$ids$9121$Od@c8)))
                                                                                   g$ids$9120$Od@c8
                                                                                   g$x$9119$Od@c8))))))
                                                                          g$ids$9114$Od@c8
                                                                          g$y$9113$Od@c8))))))
                                                                 g$ls/false$9108$Od@c8)
                                                               ((case-lambda
                                                                  ((g$t$9123$Od@c8)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9124$Od@c8)
                                                                       (if g$ls/false$9124$Od@c8
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9062$Od@c8)))
                                                                           g$ls/false$9124$Od@c8)
                                                                         ((case-lambda
                                                                            ((g$t$9125$Od@c8)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9126$Od@c8)
                                                                                 (if (if g$ls/false$9126$Od@c8
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9127$Od@c8)
                                                                                              (not (g$stx?$7228$Od@c8
                                                                                                     g$p$9127$Od@c8))))
                                                                                           g$ls/false$9126$Od@c8))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9128$Od@c8)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9059$Od@c8
                                                                                               g$p$9128$Od@c8
                                                                                               g$n$9061$Od@c8
                                                                                               g$ids$9062$Od@c8)))
                                                                                          (case-lambda
                                                                                            ((g$p$9131$Od@c8
                                                                                               g$ids$9132$Od@c8)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9133$Od@c8
                                                                                                   g$p$9134$Od@c8)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9134$Od@c8)
                                                                                                   g$ids$9133$Od@c8)))
                                                                                              g$ids$9132$Od@c8
                                                                                              g$p$9131$Od@c8))))))
                                                                                     g$ls/false$9126$Od@c8)
                                                                                   ((case-lambda
                                                                                      ((g$t$9135$Od@c8)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9136$Od@c8)
                                                                                           (if g$ls/false$9136$Od@c8
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9137$Od@c8)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7267$Od@c8
                                                                                                        g$datum$9137$Od@c8))
                                                                                                    g$ids$9062$Od@c8)))
                                                                                               g$ls/false$9136$Od@c8)
                                                                                             (g$syntax-violation$7640$Od@c8
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9135$Od@c8))))
                                                                                        (g$syntax-dispatch$7534$Od@c8
                                                                                          g$t$9135$Od@c8
                                                                                          'any))))
                                                                                    g$t$9125$Od@c8))))
                                                                              (g$syntax-dispatch$7534$Od@c8
                                                                                g$t$9125$Od@c8
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9123$Od@c8))))
                                                                    (g$syntax-dispatch$7534$Od@c8
                                                                      g$t$9123$Od@c8
                                                                      '()))))
                                                                g$t$9107$Od@c8))))
                                                          (g$syntax-dispatch$7534$Od@c8
                                                            g$t$9107$Od@c8
                                                            '(any . any)))))
                                                      g$t$9079$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$9079$Od@c8
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9067$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$9067$Od@c8
                                        '(any any)))))
                                  g$t$9063$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$9063$Od@c8
                              'any))))
                        g$p$9060$Od@c8)))))
          (g$cvt$9059$Od@c8 g$pattern$9056$Od@c8 '0 '())))))
   (g$syntax-dispatch$7534$Od@c8
     g$syntax-dispatch$10966$Od@c8
     (case-lambda
       ((g$e$9153$Od@c8 g$p$9154$Od@c8)
        (letrec* ((g$stx^$9155$Od@c8
                    (case-lambda
                      ((g$e$9263$Od@c8
                         g$m*$9264$Od@c8
                         g$s*$9265$Od@c8
                         g$ae*$9266$Od@c8)
                       (if (if (null? g$m*$9264$Od@c8)
                             (if (null? g$s*$9265$Od@c8)
                               (begin '#f (null? g$ae*$9266$Od@c8))
                               '#f)
                             '#f)
                         g$e$9263$Od@c8
                         (g$mkstx$7244$Od@c8
                           g$e$9263$Od@c8
                           g$m*$9264$Od@c8
                           g$s*$9265$Od@c8
                           g$ae*$9266$Od@c8)))))
                  (g$match-each$9156$Od@c8
                    (case-lambda
                      ((g$e$9247$Od@c8
                         g$p$9248$Od@c8
                         g$m*$9249$Od@c8
                         g$s*$9250$Od@c8
                         g$ae*$9251$Od@c8)
                       (if (pair? g$e$9247$Od@c8)
                         ((case-lambda
                            ((g$first$9252$Od@c8)
                             (if g$first$9252$Od@c8
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9253$Od@c8)
                                     (if g$rest$9253$Od@c8
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9252$Od@c8
                                           g$rest$9253$Od@c8))
                                       '#f)))
                                  (g$match-each$9156$Od@c8
                                    (cdr g$e$9247$Od@c8)
                                    g$p$9248$Od@c8
                                    g$m*$9249$Od@c8
                                    g$s*$9250$Od@c8
                                    g$ae*$9251$Od@c8)))
                               '#f)))
                          (g$match$9162$Od@c8
                            (car g$e$9247$Od@c8)
                            g$p$9248$Od@c8
                            g$m*$9249$Od@c8
                            g$s*$9250$Od@c8
                            g$ae*$9251$Od@c8
                            '()))
                         (if (null? g$e$9247$Od@c8)
                           '()
                           (if (g$stx?$7228$Od@c8 g$e$9247$Od@c8)
                             (if (not (g$top-marked?$7199$Od@c8
                                        g$m*$9249$Od@c8))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7243$Od@c8
                                        g$m*$9249$Od@c8
                                        g$s*$9250$Od@c8
                                        g$ae*$9251$Od@c8
                                        g$e$9247$Od@c8)))
                                   (case-lambda
                                     ((g$m*$9257$Od@c8
                                        g$s*$9258$Od@c8
                                        g$ae*$9259$Od@c8)
                                      ((case-lambda
                                         ((g$ae*$9260$Od@c8
                                            g$s*$9261$Od@c8
                                            g$m*$9262$Od@c8)
                                          (g$match-each$9156$Od@c8
                                            (g$stx-expr$7230$Od@c8
                                              g$e$9247$Od@c8)
                                            g$p$9248$Od@c8
                                            g$m*$9262$Od@c8
                                            g$s*$9261$Od@c8
                                            g$ae*$9260$Od@c8)))
                                       g$ae*$9259$Od@c8
                                       g$s*$9258$Od@c8
                                       g$m*$9257$Od@c8)))))
                               '#f)
                             (if (annotation? g$e$9247$Od@c8)
                               (g$match-each$9156$Od@c8
                                 (annotation-expression g$e$9247$Od@c8)
                                 g$p$9248$Od@c8
                                 g$m*$9249$Od@c8
                                 g$s*$9250$Od@c8
                                 g$ae*$9251$Od@c8)
                               '#f)))))))
                  (g$match-each+$9157$Od@c8
                    (case-lambda
                      ((g$e$9215$Od@c8
                         g$x-pat$9216$Od@c8
                         g$y-pat$9217$Od@c8
                         g$z-pat$9218$Od@c8
                         g$m*$9219$Od@c8
                         g$s*$9220$Od@c8
                         g$ae*$9221$Od@c8
                         g$r$9222$Od@c8)
                       ((letrec ((g$f$9223$Od@c8
                                   (case-lambda
                                     ((g$e$9224$Od@c8
                                        g$m*$9225$Od@c8
                                        g$s*$9226$Od@c8
                                        g$ae*$9227$Od@c8)
                                      (if (pair? g$e$9224$Od@c8)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9223$Od@c8
                                               (cdr g$e$9224$Od@c8)
                                               g$m*$9225$Od@c8
                                               g$s*$9226$Od@c8
                                               g$ae*$9227$Od@c8)))
                                          (case-lambda
                                            ((g$xr*$9231$Od@c8
                                               g$y-pat$9232$Od@c8
                                               g$r$9233$Od@c8)
                                             ((case-lambda
                                                ((g$r$9234$Od@c8
                                                   g$y-pat$9235$Od@c8
                                                   g$xr*$9236$Od@c8)
                                                 (if g$r$9234$Od@c8
                                                   (if (null?
                                                         g$y-pat$9235$Od@c8)
                                                     ((case-lambda
                                                        ((g$xr$9237$Od@c8)
                                                         (if g$xr$9237$Od@c8
                                                           (values
                                                             (cons
                                                               g$xr$9237$Od@c8
                                                               g$xr*$9236$Od@c8)
                                                             g$y-pat$9235$Od@c8
                                                             g$r$9234$Od@c8)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9162$Od@c8
                                                        (car g$e$9224$Od@c8)
                                                        g$x-pat$9216$Od@c8
                                                        g$m*$9225$Od@c8
                                                        g$s*$9226$Od@c8
                                                        g$ae*$9227$Od@c8
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9235$Od@c8)
                                                       (g$match$9162$Od@c8
                                                         (car g$e$9224$Od@c8)
                                                         (car g$y-pat$9235$Od@c8)
                                                         g$m*$9225$Od@c8
                                                         g$s*$9226$Od@c8
                                                         g$ae*$9227$Od@c8
                                                         g$r$9234$Od@c8)))
                                                   (values '#f '#f '#f))))
                                              g$r$9233$Od@c8
                                              g$y-pat$9232$Od@c8
                                              g$xr*$9231$Od@c8))))
                                        (if (g$stx?$7228$Od@c8 g$e$9224$Od@c8)
                                          (if (g$top-marked?$7199$Od@c8
                                                g$m*$9225$Od@c8)
                                            (values
                                              '()
                                              g$y-pat$9217$Od@c8
                                              (g$match$9162$Od@c8
                                                g$e$9224$Od@c8
                                                g$z-pat$9218$Od@c8
                                                g$m*$9225$Od@c8
                                                g$s*$9226$Od@c8
                                                g$ae*$9227$Od@c8
                                                g$r$9222$Od@c8))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7243$Od@c8
                                                   g$m*$9225$Od@c8
                                                   g$s*$9226$Od@c8
                                                   g$ae*$9227$Od@c8
                                                   g$e$9224$Od@c8)))
                                              (case-lambda
                                                ((g$m*$9241$Od@c8
                                                   g$s*$9242$Od@c8
                                                   g$ae*$9243$Od@c8)
                                                 ((case-lambda
                                                    ((g$ae*$9244$Od@c8
                                                       g$s*$9245$Od@c8
                                                       g$m*$9246$Od@c8)
                                                     (g$f$9223$Od@c8
                                                       (g$stx-expr$7230$Od@c8
                                                         g$e$9224$Od@c8)
                                                       g$m*$9246$Od@c8
                                                       g$s*$9245$Od@c8
                                                       g$ae*$9244$Od@c8)))
                                                  g$ae*$9243$Od@c8
                                                  g$s*$9242$Od@c8
                                                  g$m*$9241$Od@c8)))))
                                          (if (annotation? g$e$9224$Od@c8)
                                            (g$f$9223$Od@c8
                                              (annotation-expression
                                                g$e$9224$Od@c8)
                                              g$m*$9225$Od@c8
                                              g$s*$9226$Od@c8
                                              g$ae*$9227$Od@c8)
                                            (values
                                              '()
                                              g$y-pat$9217$Od@c8
                                              (g$match$9162$Od@c8
                                                g$e$9224$Od@c8
                                                g$z-pat$9218$Od@c8
                                                g$m*$9225$Od@c8
                                                g$s*$9226$Od@c8
                                                g$ae*$9227$Od@c8
                                                g$r$9222$Od@c8)))))))))
                          g$f$9223$Od@c8)
                        g$e$9215$Od@c8
                        g$m*$9219$Od@c8
                        g$s*$9220$Od@c8
                        g$ae*$9221$Od@c8))))
                  (g$match-each-any$9158$Od@c8
                    (case-lambda
                      ((g$e$9201$Od@c8
                         g$m*$9202$Od@c8
                         g$s*$9203$Od@c8
                         g$ae*$9204$Od@c8)
                       (if (pair? g$e$9201$Od@c8)
                         ((case-lambda
                            ((g$l$9205$Od@c8)
                             (if g$l$9205$Od@c8
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9155$Od@c8
                                     (car g$e$9201$Od@c8)
                                     g$m*$9202$Od@c8
                                     g$s*$9203$Od@c8
                                     g$ae*$9204$Od@c8)
                                   g$l$9205$Od@c8))
                               '#f)))
                          (g$match-each-any$9158$Od@c8
                            (cdr g$e$9201$Od@c8)
                            g$m*$9202$Od@c8
                            g$s*$9203$Od@c8
                            g$ae*$9204$Od@c8))
                         (if (null? g$e$9201$Od@c8)
                           '()
                           (if (g$stx?$7228$Od@c8 g$e$9201$Od@c8)
                             (if (not (g$top-marked?$7199$Od@c8
                                        g$m*$9202$Od@c8))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7243$Od@c8
                                        g$m*$9202$Od@c8
                                        g$s*$9203$Od@c8
                                        g$ae*$9204$Od@c8
                                        g$e$9201$Od@c8)))
                                   (case-lambda
                                     ((g$m*$9209$Od@c8
                                        g$s*$9210$Od@c8
                                        g$ae*$9211$Od@c8)
                                      ((case-lambda
                                         ((g$ae*$9212$Od@c8
                                            g$s*$9213$Od@c8
                                            g$m*$9214$Od@c8)
                                          (g$match-each-any$9158$Od@c8
                                            (g$stx-expr$7230$Od@c8
                                              g$e$9201$Od@c8)
                                            g$m*$9214$Od@c8
                                            g$s*$9213$Od@c8
                                            g$ae*$9212$Od@c8)))
                                       g$ae*$9211$Od@c8
                                       g$s*$9210$Od@c8
                                       g$m*$9209$Od@c8)))))
                               '#f)
                             (if (annotation? g$e$9201$Od@c8)
                               (g$match-each-any$9158$Od@c8
                                 (annotation-expression g$e$9201$Od@c8)
                                 g$m*$9202$Od@c8
                                 g$s*$9203$Od@c8
                                 g$ae*$9204$Od@c8)
                               '#f)))))))
                  (g$match-empty$9159$Od@c8
                    (case-lambda
                      ((g$p$9198$Od@c8 g$r$9199$Od@c8)
                       (if (null? g$p$9198$Od@c8)
                         g$r$9199$Od@c8
                         (if (eq? g$p$9198$Od@c8 '_)
                           g$r$9199$Od@c8
                           (if (eq? g$p$9198$Od@c8 'any)
                             (cons '() g$r$9199$Od@c8)
                             (if (pair? g$p$9198$Od@c8)
                               (g$match-empty$9159$Od@c8
                                 (car g$p$9198$Od@c8)
                                 (g$match-empty$9159$Od@c8
                                   (cdr g$p$9198$Od@c8)
                                   g$r$9199$Od@c8))
                               (if (eq? g$p$9198$Od@c8 'each-any)
                                 (cons '() g$r$9199$Od@c8)
                                 ((case-lambda
                                    ((g$t$9200$Od@c8)
                                     (if (eqv? g$t$9200$Od@c8 'each)
                                       (g$match-empty$9159$Od@c8
                                         (vector-ref g$p$9198$Od@c8 '1)
                                         g$r$9199$Od@c8)
                                       (if (eqv? g$t$9200$Od@c8 'each+)
                                         (g$match-empty$9159$Od@c8
                                           (vector-ref g$p$9198$Od@c8 '1)
                                           (g$match-empty$9159$Od@c8
                                             (reverse
                                               (vector-ref g$p$9198$Od@c8 '2))
                                             (g$match-empty$9159$Od@c8
                                               (vector-ref g$p$9198$Od@c8 '3)
                                               g$r$9199$Od@c8)))
                                         (if (memv
                                               g$t$9200$Od@c8
                                               '(free-id atom))
                                           g$r$9199$Od@c8
                                           (if (memv
                                                 g$t$9200$Od@c8
                                                 '(scheme-id atom))
                                             g$r$9199$Od@c8
                                             (if (eqv? g$t$9200$Od@c8 'vector)
                                               (g$match-empty$9159$Od@c8
                                                 (vector-ref g$p$9198$Od@c8 '1)
                                                 g$r$9199$Od@c8)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9198$Od@c8))))))))
                                  (vector-ref g$p$9198$Od@c8 '0))))))))))
                  (g$combine$9160$Od@c8
                    (case-lambda
                      ((g$r*$9196$Od@c8 g$r$9197$Od@c8)
                       (if (null? (car g$r*$9196$Od@c8))
                         g$r$9197$Od@c8
                         (cons
                           (map car g$r*$9196$Od@c8)
                           (g$combine$9160$Od@c8
                             (map cdr g$r*$9196$Od@c8)
                             g$r$9197$Od@c8))))))
                  (g$match*$9161$Od@c8
                    (case-lambda
                      ((g$e$9178$Od@c8
                         g$p$9179$Od@c8
                         g$m*$9180$Od@c8
                         g$s*$9181$Od@c8
                         g$ae*$9182$Od@c8
                         g$r$9183$Od@c8)
                       (if (null? g$p$9179$Od@c8)
                         (if (null? g$e$9178$Od@c8)
                           (begin '#f g$r$9183$Od@c8)
                           '#f)
                         (if (pair? g$p$9179$Od@c8)
                           (if (pair? g$e$9178$Od@c8)
                             (begin
                               '#f
                               (g$match$9162$Od@c8
                                 (car g$e$9178$Od@c8)
                                 (car g$p$9179$Od@c8)
                                 g$m*$9180$Od@c8
                                 g$s*$9181$Od@c8
                                 g$ae*$9182$Od@c8
                                 (g$match$9162$Od@c8
                                   (cdr g$e$9178$Od@c8)
                                   (cdr g$p$9179$Od@c8)
                                   g$m*$9180$Od@c8
                                   g$s*$9181$Od@c8
                                   g$ae*$9182$Od@c8
                                   g$r$9183$Od@c8)))
                             '#f)
                           (if (eq? g$p$9179$Od@c8 'each-any)
                             ((case-lambda
                                ((g$l$9184$Od@c8)
                                 (if g$l$9184$Od@c8
                                   (begin
                                     '#f
                                     (cons g$l$9184$Od@c8 g$r$9183$Od@c8))
                                   '#f)))
                              (g$match-each-any$9158$Od@c8
                                g$e$9178$Od@c8
                                g$m*$9180$Od@c8
                                g$s*$9181$Od@c8
                                g$ae*$9182$Od@c8))
                             ((case-lambda
                                ((g$t$9185$Od@c8)
                                 (if (eqv? g$t$9185$Od@c8 'each)
                                   (if (null? g$e$9178$Od@c8)
                                     (g$match-empty$9159$Od@c8
                                       (vector-ref g$p$9179$Od@c8 '1)
                                       g$r$9183$Od@c8)
                                     ((case-lambda
                                        ((g$r*$9195$Od@c8)
                                         (if g$r*$9195$Od@c8
                                           (begin
                                             '#f
                                             (g$combine$9160$Od@c8
                                               g$r*$9195$Od@c8
                                               g$r$9183$Od@c8))
                                           '#f)))
                                      (g$match-each$9156$Od@c8
                                        g$e$9178$Od@c8
                                        (vector-ref g$p$9179$Od@c8 '1)
                                        g$m*$9180$Od@c8
                                        g$s*$9181$Od@c8
                                        g$ae*$9182$Od@c8)))
                                   (if (eqv? g$t$9185$Od@c8 'free-id)
                                     (if (symbol? g$e$9178$Od@c8)
                                       (if (g$top-marked?$7199$Od@c8
                                             g$m*$9180$Od@c8)
                                         (if (g$free-id=?$7260$Od@c8
                                               (g$stx^$9155$Od@c8
                                                 g$e$9178$Od@c8
                                                 g$m*$9180$Od@c8
                                                 g$s*$9181$Od@c8
                                                 g$ae*$9182$Od@c8)
                                               (vector-ref g$p$9179$Od@c8 '1))
                                           (begin '#f g$r$9183$Od@c8)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv? g$t$9185$Od@c8 'scheme-id)
                                       (if (symbol? g$e$9178$Od@c8)
                                         (if (g$top-marked?$7199$Od@c8
                                               g$m*$9180$Od@c8)
                                           (if (g$free-id=?$7260$Od@c8
                                                 (g$stx^$9155$Od@c8
                                                   g$e$9178$Od@c8
                                                   g$m*$9180$Od@c8
                                                   g$s*$9181$Od@c8
                                                   g$ae*$9182$Od@c8)
                                                 (g$scheme-stx$7477$Od@c8
                                                   (vector-ref
                                                     g$p$9179$Od@c8
                                                     '1)))
                                             (begin '#f g$r$9183$Od@c8)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$9185$Od@c8 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9157$Od@c8
                                                g$e$9178$Od@c8
                                                (vector-ref g$p$9179$Od@c8 '1)
                                                (vector-ref g$p$9179$Od@c8 '2)
                                                (vector-ref g$p$9179$Od@c8 '3)
                                                g$m*$9180$Od@c8
                                                g$s*$9181$Od@c8
                                                g$ae*$9182$Od@c8
                                                g$r$9183$Od@c8)))
                                           (case-lambda
                                             ((g$xr*$9189$Od@c8
                                                g$y-pat$9190$Od@c8
                                                g$r$9191$Od@c8)
                                              ((case-lambda
                                                 ((g$r$9192$Od@c8
                                                    g$y-pat$9193$Od@c8
                                                    g$xr*$9194$Od@c8)
                                                  (if g$r$9192$Od@c8
                                                    (if (null?
                                                          g$y-pat$9193$Od@c8)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9194$Od@c8)
                                                          (g$match-empty$9159$Od@c8
                                                            (vector-ref
                                                              g$p$9179$Od@c8
                                                              '1)
                                                            g$r$9192$Od@c8)
                                                          (g$combine$9160$Od@c8
                                                            g$xr*$9194$Od@c8
                                                            g$r$9192$Od@c8)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9191$Od@c8
                                               g$y-pat$9190$Od@c8
                                               g$xr*$9189$Od@c8))))
                                         (if (eqv? g$t$9185$Od@c8 'atom)
                                           (if (equal?
                                                 (vector-ref g$p$9179$Od@c8 '1)
                                                 (g$strip$7266$Od@c8
                                                   g$e$9178$Od@c8
                                                   g$m*$9180$Od@c8))
                                             (begin '#f g$r$9183$Od@c8)
                                             '#f)
                                           (if (eqv? g$t$9185$Od@c8 'vector)
                                             (if (vector? g$e$9178$Od@c8)
                                               (begin
                                                 '#f
                                                 (g$match$9162$Od@c8
                                                   (vector->list g$e$9178$Od@c8)
                                                   (vector-ref
                                                     g$p$9179$Od@c8
                                                     '1)
                                                   g$m*$9180$Od@c8
                                                   g$s*$9181$Od@c8
                                                   g$ae*$9182$Od@c8
                                                   g$r$9183$Od@c8))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9179$Od@c8)))))))))
                              (vector-ref g$p$9179$Od@c8 '0))))))))
                  (g$match$9162$Od@c8
                    (case-lambda
                      ((g$e$9163$Od@c8
                         g$p$9164$Od@c8
                         g$m*$9165$Od@c8
                         g$s*$9166$Od@c8
                         g$ae*$9167$Od@c8
                         g$r$9168$Od@c8)
                       (if (not g$r$9168$Od@c8)
                         '#f
                         (if (eq? g$p$9164$Od@c8 '_)
                           g$r$9168$Od@c8
                           (if (eq? g$p$9164$Od@c8 'any)
                             (cons
                               (g$stx^$9155$Od@c8
                                 g$e$9163$Od@c8
                                 g$m*$9165$Od@c8
                                 g$s*$9166$Od@c8
                                 g$ae*$9167$Od@c8)
                               g$r$9168$Od@c8)
                             (if (g$stx?$7228$Od@c8 g$e$9163$Od@c8)
                               (if (not (g$top-marked?$7199$Od@c8
                                          g$m*$9165$Od@c8))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7243$Od@c8
                                          g$m*$9165$Od@c8
                                          g$s*$9166$Od@c8
                                          g$ae*$9167$Od@c8
                                          g$e$9163$Od@c8)))
                                     (case-lambda
                                       ((g$m*$9172$Od@c8
                                          g$s*$9173$Od@c8
                                          g$ae*$9174$Od@c8)
                                        ((case-lambda
                                           ((g$ae*$9175$Od@c8
                                              g$s*$9176$Od@c8
                                              g$m*$9177$Od@c8)
                                            (g$match$9162$Od@c8
                                              (g$stx-expr$7230$Od@c8
                                                g$e$9163$Od@c8)
                                              g$p$9164$Od@c8
                                              g$m*$9177$Od@c8
                                              g$s*$9176$Od@c8
                                              g$ae*$9175$Od@c8
                                              g$r$9168$Od@c8)))
                                         g$ae*$9174$Od@c8
                                         g$s*$9173$Od@c8
                                         g$m*$9172$Od@c8)))))
                                 '#f)
                               (if (annotation? g$e$9163$Od@c8)
                                 (g$match$9162$Od@c8
                                   (annotation-expression g$e$9163$Od@c8)
                                   g$p$9164$Od@c8
                                   g$m*$9165$Od@c8
                                   g$s*$9166$Od@c8
                                   g$ae*$9167$Od@c8
                                   g$r$9168$Od@c8)
                                 (g$match*$9161$Od@c8
                                   g$e$9163$Od@c8
                                   g$p$9164$Od@c8
                                   g$m*$9165$Od@c8
                                   g$s*$9166$Od@c8
                                   g$ae*$9167$Od@c8
                                   g$r$9168$Od@c8))))))))))
          (g$match$9162$Od@c8 g$e$9153$Od@c8 g$p$9154$Od@c8 '() '() '() '())))))
   (g$ellipsis?$7535$Od@c8
     g$ellipsis?$10967$Od@c8
     (case-lambda
       ((g$x$9267$Od@c8)
        (if (g$id?$7256$Od@c8 g$x$9267$Od@c8)
          (begin
            '#f
            (g$free-id=?$7260$Od@c8
              g$x$9267$Od@c8
              (g$scheme-stx$7477$Od@c8 '...)))
          '#f))))
   (g$underscore?$7536$Od@c8
     g$underscore?$10968$Od@c8
     (case-lambda
       ((g$x$9268$Od@c8)
        (if (g$id?$7256$Od@c8 g$x$9268$Od@c8)
          (begin
            '#f
            (g$free-id=?$7260$Od@c8
              g$x$9268$Od@c8
              (g$scheme-stx$7477$Od@c8 '_)))
          '#f))))
   (g$verify-literals$7537$Od@c8
     g$verify-literals$10969$Od@c8
     (case-lambda
       ((g$lits$9269$Od@c8 g$expr$9270$Od@c8)
        (for-each
          (case-lambda
            ((g$x$9271$Od@c8)
             (if ((case-lambda
                    ((g$t$9272$Od@c8)
                     (if g$t$9272$Od@c8
                       g$t$9272$Od@c8
                       ((case-lambda
                          ((g$t$9273$Od@c8)
                           (if g$t$9273$Od@c8
                             g$t$9273$Od@c8
                             (begin
                               '#f
                               (g$underscore?$7536$Od@c8 g$x$9271$Od@c8)))))
                        (g$ellipsis?$7535$Od@c8 g$x$9271$Od@c8)))))
                  (not (g$id?$7256$Od@c8 g$x$9271$Od@c8)))
               (g$syntax-violation$7640$Od@c8
                 '#f
                 '"invalid literal"
                 g$expr$9270$Od@c8
                 g$x$9271$Od@c8)
               (void))))
          g$lits$9269$Od@c8))))
   (g$syntax-case-transformer$7538$Od@c8
     g$syntax-case-transformer$10970$Od@c8
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9274$Od@c8
                     (case-lambda
                       ((g$pvars$9331$Od@c8
                          g$expr$9332$Od@c8
                          g$y$9333$Od@c8
                          g$r$9334$Od@c8
                          g$mr$9335$Od@c8)
                        ((case-lambda
                           ((g$ids$9336$Od@c8 g$levels$9337$Od@c8)
                            ((case-lambda
                               ((g$labels$9338$Od@c8 g$new-vars$9339$Od@c8)
                                ((case-lambda
                                   ((g$body$9340$Od@c8)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7187$Od@c8
                                        '#f
                                        g$new-vars$9339$Od@c8
                                        g$body$9340$Od@c8)
                                      g$y$9333$Od@c8)))
                                 (g$chi-expr$7552$Od@c8
                                   (g$add-subst$7246$Od@c8
                                     (g$make-full-rib$7224$Od@c8
                                       g$ids$9336$Od@c8
                                       g$labels$9338$Od@c8)
                                     g$expr$9332$Od@c8)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9341$Od@c8
                                               g$var$9342$Od@c8
                                               g$level$9343$Od@c8)
                                             (cons
                                               g$label$9341$Od@c8
                                               (g$make-binding$7272$Od@c8
                                                 'syntax
                                                 (cons
                                                   g$var$9342$Od@c8
                                                   g$level$9343$Od@c8)))))
                                          g$labels$9338$Od@c8
                                          g$new-vars$9339$Od@c8
                                          (map cdr g$pvars$9331$Od@c8))
                                     g$r$9334$Od@c8)
                                   g$mr$9335$Od@c8))))
                             (map g$gen-label$7202$Od@c8 g$ids$9336$Od@c8)
                             (map g$gen-lexical$7200$Od@c8 g$ids$9336$Od@c8))))
                         (map car g$pvars$9331$Od@c8)
                         (map cdr g$pvars$9331$Od@c8)))))
                   (g$invalid-ids-error$9275$Od@c8
                     (case-lambda
                       ((g$id*$9325$Od@c8 g$e$9326$Od@c8 g$class$9327$Od@c8)
                        ((letrec ((g$find$9328$Od@c8
                                    (case-lambda
                                      ((g$id*$9329$Od@c8 g$ok*$9330$Od@c8)
                                       (if (null? g$id*$9329$Od@c8)
                                         (g$syntax-violation$7640$Od@c8
                                           '#f
                                           '"invalid syntax"
                                           g$e$9326$Od@c8)
                                         (if (g$id?$7256$Od@c8
                                               (car g$id*$9329$Od@c8))
                                           (if (g$bound-id-member?$7263$Od@c8
                                                 (car g$id*$9329$Od@c8)
                                                 g$ok*$9330$Od@c8)
                                             (g$syntax-error$7637$Od@c8
                                               (car g$id*$9329$Od@c8)
                                               '"duplicate "
                                               g$class$9327$Od@c8)
                                             (g$find$9328$Od@c8
                                               (cdr g$id*$9329$Od@c8)
                                               (cons
                                                 (car g$id*$9329$Od@c8)
                                                 g$ok*$9330$Od@c8)))
                                           (g$syntax-error$7637$Od@c8
                                             (car g$id*$9329$Od@c8)
                                             '"invalid "
                                             g$class$9327$Od@c8)))))))
                           g$find$9328$Od@c8)
                         g$id*$9325$Od@c8
                         '()))))
                   (g$gen-clause$9276$Od@c8
                     (case-lambda
                       ((g$x$9305$Od@c8
                          g$keys$9306$Od@c8
                          g$clauses$9307$Od@c8
                          g$r$9308$Od@c8
                          g$mr$9309$Od@c8
                          g$pat$9310$Od@c8
                          g$fender$9311$Od@c8
                          g$expr$9312$Od@c8)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7533$Od@c8
                               g$pat$9310$Od@c8
                               g$keys$9306$Od@c8)))
                          (case-lambda
                            ((g$p$9315$Od@c8 g$pvars$9316$Od@c8)
                             ((case-lambda
                                ((g$pvars$9317$Od@c8 g$p$9318$Od@c8)
                                 (if (not (g$distinct-bound-ids?$7262$Od@c8
                                            (map car g$pvars$9317$Od@c8)))
                                   (g$invalid-ids-error$9275$Od@c8
                                     (map car g$pvars$9317$Od@c8)
                                     g$pat$9310$Od@c8
                                     '"pattern variable")
                                   (if (not (g$for-all$5685$Od@c8
                                              (case-lambda
                                                ((g$x$9319$Od@c8)
                                                 (not (g$ellipsis?$7535$Od@c8
                                                        (car g$x$9319$Od@c8)))))
                                              g$pvars$9317$Od@c8))
                                     (g$syntax-violation$7640$Od@c8
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9310$Od@c8)
                                     ((case-lambda
                                        ((g$y$9320$Od@c8)
                                         ((case-lambda
                                            ((g$test$9321$Od@c8)
                                             ((case-lambda
                                                ((g$conseq$9322$Od@c8)
                                                 ((case-lambda
                                                    ((g$altern$9323$Od@c8)
                                                     (list
                                                       (g$build-lambda$7187$Od@c8
                                                         '#f
                                                         (list g$y$9320$Od@c8)
                                                         (list
                                                           'if
                                                           g$test$9321$Od@c8
                                                           g$conseq$9322$Od@c8
                                                           g$altern$9323$Od@c8))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9305$Od@c8
                                                         (list
                                                           'quote
                                                           g$p$9318$Od@c8)))))
                                                  (g$gen-syntax-case$9277$Od@c8
                                                    g$x$9305$Od@c8
                                                    g$keys$9306$Od@c8
                                                    g$clauses$9307$Od@c8
                                                    g$r$9308$Od@c8
                                                    g$mr$9309$Od@c8))))
                                              (g$build-dispatch-call$9274$Od@c8
                                                g$pvars$9317$Od@c8
                                                g$expr$9312$Od@c8
                                                g$y$9320$Od@c8
                                                g$r$9308$Od@c8
                                                g$mr$9309$Od@c8))))
                                          (if (eq? g$fender$9311$Od@c8 '#t)
                                            g$y$9320$Od@c8
                                            ((case-lambda
                                               ((g$call$9324$Od@c8)
                                                (list
                                                  'if
                                                  g$y$9320$Od@c8
                                                  g$call$9324$Od@c8
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9274$Od@c8
                                               g$pvars$9317$Od@c8
                                               g$fender$9311$Od@c8
                                               g$y$9320$Od@c8
                                               g$r$9308$Od@c8
                                               g$mr$9309$Od@c8))))))
                                      (g$gen-lexical$7200$Od@c8 'tmp))))))
                              g$pvars$9316$Od@c8
                              g$p$9315$Od@c8)))))))
                   (g$gen-syntax-case$9277$Od@c8
                     (case-lambda
                       ((g$x$9288$Od@c8
                          g$keys$9289$Od@c8
                          g$clauses$9290$Od@c8
                          g$r$9291$Od@c8
                          g$mr$9292$Od@c8)
                        (if (null? g$clauses$9290$Od@c8)
                          (list '(primitive syntax-error) g$x$9288$Od@c8)
                          ((case-lambda
                             ((g$t$9293$Od@c8)
                              ((case-lambda
                                 ((g$ls/false$9294$Od@c8)
                                  (if g$ls/false$9294$Od@c8
                                    (apply
                                      (case-lambda
                                        ((g$pat$9295$Od@c8 g$expr$9296$Od@c8)
                                         (if (if (g$id?$7256$Od@c8
                                                   g$pat$9295$Od@c8)
                                               (if (not (g$bound-id-member?$7263$Od@c8
                                                          g$pat$9295$Od@c8
                                                          g$keys$9289$Od@c8))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7535$Od@c8
                                                          g$pat$9295$Od@c8)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7260$Od@c8
                                                 g$pat$9295$Od@c8
                                                 (g$scheme-stx$7477$Od@c8 '_))
                                             (g$chi-expr$7552$Od@c8
                                               g$expr$9296$Od@c8
                                               g$r$9291$Od@c8
                                               g$mr$9292$Od@c8)
                                             ((case-lambda
                                                ((g$lab$9297$Od@c8
                                                   g$lex$9298$Od@c8)
                                                 ((case-lambda
                                                    ((g$body$9299$Od@c8)
                                                     (list
                                                       (g$build-lambda$7187$Od@c8
                                                         '#f
                                                         (list g$lex$9298$Od@c8)
                                                         g$body$9299$Od@c8)
                                                       g$x$9288$Od@c8)))
                                                  (g$chi-expr$7552$Od@c8
                                                    (g$add-subst$7246$Od@c8
                                                      (g$make-full-rib$7224$Od@c8
                                                        (list g$pat$9295$Od@c8)
                                                        (list g$lab$9297$Od@c8))
                                                      g$expr$9296$Od@c8)
                                                    (cons
                                                      (cons
                                                        g$lab$9297$Od@c8
                                                        (g$make-binding$7272$Od@c8
                                                          'syntax
                                                          (cons
                                                            g$lex$9298$Od@c8
                                                            '0)))
                                                      g$r$9291$Od@c8)
                                                    g$mr$9292$Od@c8))))
                                              (g$gen-label$7202$Od@c8
                                                g$pat$9295$Od@c8)
                                              (g$gen-lexical$7200$Od@c8
                                                g$pat$9295$Od@c8)))
                                           (g$gen-clause$9276$Od@c8
                                             g$x$9288$Od@c8
                                             g$keys$9289$Od@c8
                                             (cdr g$clauses$9290$Od@c8)
                                             g$r$9291$Od@c8
                                             g$mr$9292$Od@c8
                                             g$pat$9295$Od@c8
                                             '#t
                                             g$expr$9296$Od@c8))))
                                      g$ls/false$9294$Od@c8)
                                    ((case-lambda
                                       ((g$t$9300$Od@c8)
                                        ((case-lambda
                                           ((g$ls/false$9301$Od@c8)
                                            (if g$ls/false$9301$Od@c8
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9302$Od@c8
                                                     g$fender$9303$Od@c8
                                                     g$expr$9304$Od@c8)
                                                   (g$gen-clause$9276$Od@c8
                                                     g$x$9288$Od@c8
                                                     g$keys$9289$Od@c8
                                                     (cdr g$clauses$9290$Od@c8)
                                                     g$r$9291$Od@c8
                                                     g$mr$9292$Od@c8
                                                     g$pat$9302$Od@c8
                                                     g$fender$9303$Od@c8
                                                     g$expr$9304$Od@c8)))
                                                g$ls/false$9301$Od@c8)
                                              (g$syntax-violation$7640$Od@c8
                                                '#f
                                                '"invalid syntax"
                                                g$t$9300$Od@c8))))
                                         (g$syntax-dispatch$7534$Od@c8
                                           g$t$9300$Od@c8
                                           '(any any any)))))
                                     g$t$9293$Od@c8))))
                               (g$syntax-dispatch$7534$Od@c8
                                 g$t$9293$Od@c8
                                 '(any any)))))
                           (car g$clauses$9290$Od@c8)))))))
           (case-lambda
             ((g$e$9278$Od@c8 g$r$9279$Od@c8 g$mr$9280$Od@c8)
              ((case-lambda
                 ((g$t$9281$Od@c8)
                  ((case-lambda
                     ((g$ls/false$9282$Od@c8)
                      (if g$ls/false$9282$Od@c8
                        (apply
                          (case-lambda
                            ((g$expr$9283$Od@c8
                               g$keys$9284$Od@c8
                               g$clauses$9285$Od@c8)
                             (begin
                               (g$verify-literals$7537$Od@c8
                                 g$keys$9284$Od@c8
                                 g$e$9278$Od@c8)
                               ((case-lambda
                                  ((g$x$9286$Od@c8)
                                   ((case-lambda
                                      ((g$body$9287$Od@c8)
                                       (list
                                         (g$build-lambda$7187$Od@c8
                                           '#f
                                           (list g$x$9286$Od@c8)
                                           g$body$9287$Od@c8)
                                         (g$chi-expr$7552$Od@c8
                                           g$expr$9283$Od@c8
                                           g$r$9279$Od@c8
                                           g$mr$9280$Od@c8))))
                                    (g$gen-syntax-case$9277$Od@c8
                                      g$x$9286$Od@c8
                                      g$keys$9284$Od@c8
                                      g$clauses$9285$Od@c8
                                      g$r$9279$Od@c8
                                      g$mr$9280$Od@c8))))
                                (g$gen-lexical$7200$Od@c8 'tmp)))))
                          g$ls/false$9282$Od@c8)
                        (g$syntax-violation$7640$Od@c8
                          '#f
                          '"invalid syntax"
                          g$t$9281$Od@c8))))
                   (g$syntax-dispatch$7534$Od@c8
                     g$t$9281$Od@c8
                     '(_ any each-any . each-any)))))
               g$e$9278$Od@c8))))))))
   (g$ellipsis-map$7539$Od@c8
     g$ellipsis-map$10971$Od@c8
     (case-lambda
       ((g$proc$9344$Od@c8 g$ls$9345$Od@c8 . g$ls*$9346$Od@c8)
        (letrec* ((g$who$9347$Od@c8 '...))
          (begin
            (if (list? g$ls$9345$Od@c8)
              (void)
              (assertion-violation
                g$who$9347$Od@c8
                '"not a list"
                g$ls$9345$Od@c8))
            (if (null? g$ls*$9346$Od@c8)
              (void)
              ((case-lambda
                 ((g$n$9348$Od@c8)
                  (for-each
                    (case-lambda
                      ((g$x$9349$Od@c8)
                       (begin
                         (if (list? g$x$9349$Od@c8)
                           (void)
                           (assertion-violation
                             g$who$9347$Od@c8
                             '"not a list"
                             g$x$9349$Od@c8))
                         (if (= (length g$x$9349$Od@c8) g$n$9348$Od@c8)
                           (void)
                           (assertion-violation
                             g$who$9347$Od@c8
                             '"length mismatch"
                             g$ls$9345$Od@c8
                             g$x$9349$Od@c8)))))
                    g$ls*$9346$Od@c8)))
               (length g$ls$9345$Od@c8)))
            (apply map g$proc$9344$Od@c8 g$ls$9345$Od@c8 g$ls*$9346$Od@c8))))))
   (g$syntax-transformer$7540$Od@c8
     g$syntax-transformer$10972$Od@c8
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9350$Od@c8
                     (case-lambda
                       ((g$src$9410$Od@c8
                          g$e$9411$Od@c8
                          g$r$9412$Od@c8
                          g$maps$9413$Od@c8
                          g$ellipsis?$9414$Od@c8
                          g$vec?$9415$Od@c8)
                        ((case-lambda
                           ((g$t$9416$Od@c8)
                            ((case-lambda
                               ((g$ls/false$9417$Od@c8)
                                (if (if g$ls/false$9417$Od@c8
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9418$Od@c8)
                                             (g$ellipsis?$9414$Od@c8
                                               g$dots$9418$Od@c8)))
                                          g$ls/false$9417$Od@c8))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9419$Od@c8)
                                       (g$syntax-violation$7640$Od@c8
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9410$Od@c8)))
                                    g$ls/false$9417$Od@c8)
                                  ((case-lambda
                                     ((g$t$9420$Od@c8)
                                      ((case-lambda
                                         ((g$ls/false$9421$Od@c8)
                                          (if (if g$ls/false$9421$Od@c8
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9422$Od@c8)
                                                       (g$id?$7256$Od@c8
                                                         g$id$9422$Od@c8)))
                                                    g$ls/false$9421$Od@c8))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9423$Od@c8)
                                                 ((case-lambda
                                                    ((g$label$9424$Od@c8)
                                                     ((case-lambda
                                                        ((g$b$9425$Od@c8)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7273$Od@c8
                                                                        g$b$9425$Od@c8)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9428$Od@c8)
                                                                        (g$gen-ref$9351$Od@c8
                                                                          g$src$9410$Od@c8
                                                                          (car g$var.lev$9428$Od@c8)
                                                                          (cdr g$var.lev$9428$Od@c8)
                                                                          g$maps$9413$Od@c8)))
                                                                     (g$binding-value$7274$Od@c8
                                                                       g$b$9425$Od@c8))))
                                                                 (case-lambda
                                                                   ((g$var$9429$Od@c8
                                                                      g$maps$9430$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$maps$9431$Od@c8
                                                                          g$var$9432$Od@c8)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9432$Od@c8)
                                                                          g$maps$9431$Od@c8)))
                                                                     g$maps$9430$Od@c8
                                                                     g$var$9429$Od@c8))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9411$Od@c8)
                                                                 g$maps$9413$Od@c8)))))))
                                                      (g$label->binding$7271$Od@c8
                                                        g$label$9424$Od@c8
                                                        g$r$9412$Od@c8))))
                                                  (g$id->label$7269$Od@c8
                                                    g$e$9411$Od@c8))))
                                              g$ls/false$9421$Od@c8)
                                            ((case-lambda
                                               ((g$t$9433$Od@c8)
                                                ((case-lambda
                                                   ((g$ls/false$9434$Od@c8)
                                                    (if (if g$ls/false$9434$Od@c8
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9435$Od@c8
                                                                   g$e$9436$Od@c8)
                                                                 (g$ellipsis?$9414$Od@c8
                                                                   g$dots$9435$Od@c8)))
                                                              g$ls/false$9434$Od@c8))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9437$Od@c8
                                                             g$e$9438$Od@c8)
                                                           (if g$vec?$9415$Od@c8
                                                             (g$syntax-violation$7640$Od@c8
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9410$Od@c8)
                                                             (g$gen-syntax$9350$Od@c8
                                                               g$src$9410$Od@c8
                                                               g$e$9438$Od@c8
                                                               g$r$9412$Od@c8
                                                               g$maps$9413$Od@c8
                                                               (case-lambda
                                                                 ((g$x$9439$Od@c8)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9434$Od@c8)
                                                      ((case-lambda
                                                         ((g$t$9440$Od@c8)
                                                          ((case-lambda
                                                             ((g$ls/false$9441$Od@c8)
                                                              (if (if g$ls/false$9441$Od@c8
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9442$Od@c8
                                                                             g$dots$9443$Od@c8
                                                                             g$y$9444$Od@c8)
                                                                           (g$ellipsis?$9414$Od@c8
                                                                             g$dots$9443$Od@c8)))
                                                                        g$ls/false$9441$Od@c8))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9445$Od@c8
                                                                       g$dots$9446$Od@c8
                                                                       g$y$9447$Od@c8)
                                                                     ((letrec ((g$f$9448$Od@c8
                                                                                 (case-lambda
                                                                                   ((g$y$9449$Od@c8
                                                                                      g$k$9450$Od@c8)
                                                                                    ((case-lambda
                                                                                       ((g$t$9451$Od@c8)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9452$Od@c8)
                                                                                            (if g$ls/false$9452$Od@c8
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9450$Od@c8
                                                                                                     g$maps$9413$Od@c8)))
                                                                                                g$ls/false$9452$Od@c8)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9453$Od@c8)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9454$Od@c8)
                                                                                                      (if (if g$ls/false$9454$Od@c8
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9455$Od@c8
                                                                                                                     g$y$9456$Od@c8)
                                                                                                                   (g$ellipsis?$9414$Od@c8
                                                                                                                     g$dots$9455$Od@c8)))
                                                                                                                g$ls/false$9454$Od@c8))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9457$Od@c8
                                                                                                               g$y$9458$Od@c8)
                                                                                                             (g$f$9448$Od@c8
                                                                                                               g$y$9458$Od@c8
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9459$Od@c8)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9450$Od@c8
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9459$Od@c8))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9462$Od@c8
                                                                                                                         g$maps$9463$Od@c8)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9464$Od@c8
                                                                                                                             g$x$9465$Od@c8)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9464$Od@c8))
                                                                                                                             (g$syntax-violation$7640$Od@c8
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9410$Od@c8)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9353$Od@c8
                                                                                                                                 g$x$9465$Od@c8
                                                                                                                                 (car g$maps$9464$Od@c8))
                                                                                                                               (cdr g$maps$9464$Od@c8)))))
                                                                                                                        g$maps$9463$Od@c8
                                                                                                                        g$x$9462$Od@c8)))))))))
                                                                                                          g$ls/false$9454$Od@c8)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9466$Od@c8)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9467$Od@c8)
                                                                                                                (if g$ls/false$9467$Od@c8
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9350$Od@c8
                                                                                                                              g$src$9410$Od@c8
                                                                                                                              g$y$9449$Od@c8
                                                                                                                              g$r$9412$Od@c8
                                                                                                                              g$maps$9413$Od@c8
                                                                                                                              g$ellipsis?$9414$Od@c8
                                                                                                                              g$vec?$9415$Od@c8)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9470$Od@c8
                                                                                                                              g$maps$9471$Od@c8)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9472$Od@c8
                                                                                                                                  g$y$9473$Od@c8)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9450$Od@c8
                                                                                                                                       g$maps$9472$Od@c8)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9476$Od@c8
                                                                                                                                       g$maps$9477$Od@c8)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9478$Od@c8
                                                                                                                                           g$x$9479$Od@c8)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9352$Od@c8
                                                                                                                                             g$x$9479$Od@c8
                                                                                                                                             g$y$9473$Od@c8)
                                                                                                                                           g$maps$9478$Od@c8)))
                                                                                                                                      g$maps$9477$Od@c8
                                                                                                                                      g$x$9476$Od@c8))))))
                                                                                                                             g$maps$9471$Od@c8
                                                                                                                             g$y$9470$Od@c8))))))
                                                                                                                    g$ls/false$9467$Od@c8)
                                                                                                                  (g$syntax-violation$7640$Od@c8
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9466$Od@c8))))
                                                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                                                               g$t$9466$Od@c8
                                                                                                               '_))))
                                                                                                         g$t$9453$Od@c8))))
                                                                                                   (g$syntax-dispatch$7534$Od@c8
                                                                                                     g$t$9453$Od@c8
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9451$Od@c8))))
                                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                                           g$t$9451$Od@c8
                                                                                           '()))))
                                                                                     g$y$9449$Od@c8)))))
                                                                        g$f$9448$Od@c8)
                                                                      g$y$9447$Od@c8
                                                                      (case-lambda
                                                                        ((g$maps$9480$Od@c8)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9350$Od@c8
                                                                                g$src$9410$Od@c8
                                                                                g$x$9445$Od@c8
                                                                                g$r$9412$Od@c8
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9480$Od@c8)
                                                                                g$ellipsis?$9414$Od@c8
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9483$Od@c8
                                                                                g$maps$9484$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$maps$9485$Od@c8
                                                                                    g$x$9486$Od@c8)
                                                                                  (if (null?
                                                                                        (car g$maps$9485$Od@c8))
                                                                                    (g$syntax-violation$7640$Od@c8
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9410$Od@c8)
                                                                                    (values
                                                                                      (g$gen-map$9354$Od@c8
                                                                                        g$x$9486$Od@c8
                                                                                        (car g$maps$9485$Od@c8))
                                                                                      (cdr g$maps$9485$Od@c8)))))
                                                                               g$maps$9484$Od@c8
                                                                               g$x$9483$Od@c8)))))))))
                                                                  g$ls/false$9441$Od@c8)
                                                                ((case-lambda
                                                                   ((g$t$9487$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9488$Od@c8)
                                                                        (if g$ls/false$9488$Od@c8
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9489$Od@c8
                                                                                 g$y$9490$Od@c8)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9350$Od@c8
                                                                                      g$src$9410$Od@c8
                                                                                      g$x$9489$Od@c8
                                                                                      g$r$9412$Od@c8
                                                                                      g$maps$9413$Od@c8
                                                                                      g$ellipsis?$9414$Od@c8
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9493$Od@c8
                                                                                      g$maps$9494$Od@c8)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9495$Od@c8
                                                                                          g$xnew$9496$Od@c8)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9350$Od@c8
                                                                                               g$src$9410$Od@c8
                                                                                               g$y$9490$Od@c8
                                                                                               g$r$9412$Od@c8
                                                                                               g$maps$9495$Od@c8
                                                                                               g$ellipsis?$9414$Od@c8
                                                                                               g$vec?$9415$Od@c8)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9499$Od@c8
                                                                                               g$maps$9500$Od@c8)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9501$Od@c8
                                                                                                   g$ynew$9502$Od@c8)
                                                                                                 (values
                                                                                                   (g$gen-cons$9355$Od@c8
                                                                                                     g$e$9411$Od@c8
                                                                                                     g$x$9489$Od@c8
                                                                                                     g$y$9490$Od@c8
                                                                                                     g$xnew$9496$Od@c8
                                                                                                     g$ynew$9502$Od@c8)
                                                                                                   g$maps$9501$Od@c8)))
                                                                                              g$maps$9500$Od@c8
                                                                                              g$ynew$9499$Od@c8))))))
                                                                                     g$maps$9494$Od@c8
                                                                                     g$xnew$9493$Od@c8))))))
                                                                            g$ls/false$9488$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$t$9503$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9504$Od@c8)
                                                                                  (if g$ls/false$9504$Od@c8
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9505$Od@c8)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9350$Od@c8
                                                                                                g$src$9410$Od@c8
                                                                                                g$ls$9505$Od@c8
                                                                                                g$r$9412$Od@c8
                                                                                                g$maps$9413$Od@c8
                                                                                                g$ellipsis?$9414$Od@c8
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9508$Od@c8
                                                                                                g$maps$9509$Od@c8)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9510$Od@c8
                                                                                                    g$lsnew$9511$Od@c8)
                                                                                                  (values
                                                                                                    (g$gen-vector$9356$Od@c8
                                                                                                      g$e$9411$Od@c8
                                                                                                      g$ls$9505$Od@c8
                                                                                                      g$lsnew$9511$Od@c8)
                                                                                                    g$maps$9510$Od@c8)))
                                                                                               g$maps$9509$Od@c8
                                                                                               g$lsnew$9508$Od@c8))))))
                                                                                      g$ls/false$9504$Od@c8)
                                                                                    ((case-lambda
                                                                                       ((g$t$9512$Od@c8)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9513$Od@c8)
                                                                                            (if g$ls/false$9513$Od@c8
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9411$Od@c8)
                                                                                                     g$maps$9413$Od@c8)))
                                                                                                g$ls/false$9513$Od@c8)
                                                                                              (g$syntax-violation$7640$Od@c8
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9512$Od@c8))))
                                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                                           g$t$9512$Od@c8
                                                                                           '_))))
                                                                                     g$t$9503$Od@c8))))
                                                                               (g$syntax-dispatch$7534$Od@c8
                                                                                 g$t$9503$Od@c8
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9487$Od@c8))))
                                                                     (g$syntax-dispatch$7534$Od@c8
                                                                       g$t$9487$Od@c8
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9440$Od@c8))))
                                                           (g$syntax-dispatch$7534$Od@c8
                                                             g$t$9440$Od@c8
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9433$Od@c8))))
                                                 (g$syntax-dispatch$7534$Od@c8
                                                   g$t$9433$Od@c8
                                                   '(any any)))))
                                             g$t$9420$Od@c8))))
                                       (g$syntax-dispatch$7534$Od@c8
                                         g$t$9420$Od@c8
                                         'any))))
                                   g$t$9416$Od@c8))))
                             (g$syntax-dispatch$7534$Od@c8
                               g$t$9416$Od@c8
                               'any))))
                         g$e$9411$Od@c8))))
                   (g$gen-ref$9351$Od@c8
                     (case-lambda
                       ((g$src$9397$Od@c8
                          g$var$9398$Od@c8
                          g$level$9399$Od@c8
                          g$maps$9400$Od@c8)
                        (if (= g$level$9399$Od@c8 '0)
                          (values g$var$9398$Od@c8 g$maps$9400$Od@c8)
                          (if (null? g$maps$9400$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9397$Od@c8)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9351$Od@c8
                                   g$src$9397$Od@c8
                                   g$var$9398$Od@c8
                                   (- g$level$9399$Od@c8 '1)
                                   (cdr g$maps$9400$Od@c8))))
                              (case-lambda
                                ((g$outer-var$9403$Od@c8
                                   g$outer-maps$9404$Od@c8)
                                 ((case-lambda
                                    ((g$outer-maps$9405$Od@c8
                                       g$outer-var$9406$Od@c8)
                                     ((case-lambda
                                        ((g$t$9407$Od@c8)
                                         (if g$t$9407$Od@c8
                                           ((case-lambda
                                              ((g$b$9408$Od@c8)
                                               (values
                                                 (cdr g$b$9408$Od@c8)
                                                 g$maps$9400$Od@c8)))
                                            g$t$9407$Od@c8)
                                           ((case-lambda
                                              ((g$inner-var$9409$Od@c8)
                                               (values
                                                 g$inner-var$9409$Od@c8
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9406$Od@c8
                                                       g$inner-var$9409$Od@c8)
                                                     (car g$maps$9400$Od@c8))
                                                   g$outer-maps$9405$Od@c8))))
                                            (g$gen-lexical$7200$Od@c8 'tmp)))))
                                      (assq
                                        g$outer-var$9406$Od@c8
                                        (car g$maps$9400$Od@c8)))))
                                  g$outer-maps$9404$Od@c8
                                  g$outer-var$9403$Od@c8)))))))))
                   (g$gen-append$9352$Od@c8
                     (case-lambda
                       ((g$x$9395$Od@c8 g$y$9396$Od@c8)
                        (if (equal? g$y$9396$Od@c8 ''())
                          g$x$9395$Od@c8
                          (list 'append g$x$9395$Od@c8 g$y$9396$Od@c8)))))
                   (g$gen-mappend$9353$Od@c8
                     (case-lambda
                       ((g$e$9393$Od@c8 g$map-env$9394$Od@c8)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9354$Od@c8
                            g$e$9393$Od@c8
                            g$map-env$9394$Od@c8)))))
                   (g$gen-map$9354$Od@c8
                     (case-lambda
                       ((g$e$9384$Od@c8 g$map-env$9385$Od@c8)
                        ((case-lambda
                           ((g$formals$9386$Od@c8 g$actuals$9387$Od@c8)
                            (if (eq? (car g$e$9384$Od@c8) 'ref)
                              (car g$actuals$9387$Od@c8)
                              (if (g$for-all$5685$Od@c8
                                    (case-lambda
                                      ((g$x$9388$Od@c8)
                                       (if (eq? (car g$x$9388$Od@c8) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5216$Od@c8 g$x$9388$Od@c8)
                                             g$formals$9386$Od@c8))
                                         '#f)))
                                    (cdr g$e$9384$Od@c8))
                                ((case-lambda
                                   ((g$args$9389$Od@c8)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9384$Od@c8))
                                        g$args$9389$Od@c8))))
                                 (map ((case-lambda
                                         ((g$r$9390$Od@c8)
                                          (case-lambda
                                            ((g$x$9391$Od@c8)
                                             (cdr (assq
                                                    (g$cadr$5216$Od@c8
                                                      g$x$9391$Od@c8)
                                                    g$r$9390$Od@c8))))))
                                       (map cons
                                            g$formals$9386$Od@c8
                                            g$actuals$9387$Od@c8))
                                      (cdr g$e$9384$Od@c8)))
                                (g$cons*$5687$Od@c8
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9386$Od@c8
                                    g$e$9384$Od@c8)
                                  g$actuals$9387$Od@c8)))))
                         (map cdr g$map-env$9385$Od@c8)
                         (map (case-lambda
                                ((g$x$9392$Od@c8)
                                 (list 'ref (car g$x$9392$Od@c8))))
                              g$map-env$9385$Od@c8)))))
                   (g$gen-cons$9355$Od@c8
                     (case-lambda
                       ((g$e$9376$Od@c8
                          g$x$9377$Od@c8
                          g$y$9378$Od@c8
                          g$xnew$9379$Od@c8
                          g$ynew$9380$Od@c8)
                        ((case-lambda
                           ((g$t$9381$Od@c8)
                            (if (eqv? g$t$9381$Od@c8 'quote)
                              (if (eq? (car g$xnew$9379$Od@c8) 'quote)
                                ((case-lambda
                                   ((g$xnew$9382$Od@c8 g$ynew$9383$Od@c8)
                                    (if (if (eq? g$xnew$9382$Od@c8
                                                 g$x$9377$Od@c8)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9383$Od@c8
                                                 g$y$9378$Od@c8))
                                          '#f)
                                      (list 'quote g$e$9376$Od@c8)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9382$Od@c8
                                          g$ynew$9383$Od@c8)))))
                                 (g$cadr$5216$Od@c8 g$xnew$9379$Od@c8)
                                 (g$cadr$5216$Od@c8 g$ynew$9380$Od@c8))
                                (if (null?
                                      (g$cadr$5216$Od@c8 g$ynew$9380$Od@c8))
                                  (list 'list g$xnew$9379$Od@c8)
                                  (list
                                    'cons
                                    g$xnew$9379$Od@c8
                                    g$ynew$9380$Od@c8)))
                              (if (eqv? g$t$9381$Od@c8 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9379$Od@c8
                                    (cdr g$ynew$9380$Od@c8)))
                                (list
                                  'cons
                                  g$xnew$9379$Od@c8
                                  g$ynew$9380$Od@c8)))))
                         (car g$ynew$9380$Od@c8)))))
                   (g$gen-vector$9356$Od@c8
                     (case-lambda
                       ((g$e$9373$Od@c8 g$ls$9374$Od@c8 g$lsnew$9375$Od@c8)
                        (if (eq? (car g$lsnew$9375$Od@c8) 'quote)
                          (if (eq? (g$cadr$5216$Od@c8 g$lsnew$9375$Od@c8)
                                   g$ls$9374$Od@c8)
                            (list 'quote g$e$9373$Od@c8)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5216$Od@c8 g$lsnew$9375$Od@c8))))
                          (if (eq? (car g$lsnew$9375$Od@c8) 'list)
                            (cons 'vector (cdr g$lsnew$9375$Od@c8))
                            (list 'list->vector g$lsnew$9375$Od@c8))))))
                   (g$regen$9357$Od@c8
                     (case-lambda
                       ((g$x$9370$Od@c8)
                        ((case-lambda
                           ((g$t$9371$Od@c8)
                            (if (eqv? g$t$9371$Od@c8 'ref)
                              (g$cadr$5216$Od@c8 g$x$9370$Od@c8)
                              (if (eqv? g$t$9371$Od@c8 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$5216$Od@c8 g$x$9370$Od@c8))
                                (if (eqv? g$t$9371$Od@c8 'quote)
                                  (list
                                    'quote
                                    (g$cadr$5216$Od@c8 g$x$9370$Od@c8))
                                  (if (eqv? g$t$9371$Od@c8 'lambda)
                                    (g$build-lambda$7187$Od@c8
                                      '#f
                                      (g$cadr$5216$Od@c8 g$x$9370$Od@c8)
                                      (g$regen$9357$Od@c8
                                        (g$caddr$5222$Od@c8 g$x$9370$Od@c8)))
                                    (if (eqv? g$t$9371$Od@c8 'map)
                                      ((case-lambda
                                         ((g$ls$9372$Od@c8)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9372$Od@c8)))
                                       (map g$regen$9357$Od@c8
                                            (cdr g$x$9370$Od@c8)))
                                      (cons
                                        (list 'primitive (car g$x$9370$Od@c8))
                                        (map g$regen$9357$Od@c8
                                             (cdr g$x$9370$Od@c8))))))))))
                         (car g$x$9370$Od@c8))))))
           (case-lambda
             ((g$e$9358$Od@c8 g$r$9359$Od@c8 g$mr$9360$Od@c8)
              ((case-lambda
                 ((g$t$9361$Od@c8)
                  ((case-lambda
                     ((g$ls/false$9362$Od@c8)
                      (if g$ls/false$9362$Od@c8
                        (apply
                          (case-lambda
                            ((g$x$9363$Od@c8)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9350$Od@c8
                                    g$e$9358$Od@c8
                                    g$x$9363$Od@c8
                                    g$r$9359$Od@c8
                                    '()
                                    g$ellipsis?$7535$Od@c8
                                    '#f)))
                               (case-lambda
                                 ((g$e$9366$Od@c8 g$maps$9367$Od@c8)
                                  ((case-lambda
                                     ((g$maps$9368$Od@c8 g$e$9369$Od@c8)
                                      (g$regen$9357$Od@c8 g$e$9369$Od@c8)))
                                   g$maps$9367$Od@c8
                                   g$e$9366$Od@c8))))))
                          g$ls/false$9362$Od@c8)
                        (g$syntax-violation$7640$Od@c8
                          '#f
                          '"invalid syntax"
                          g$t$9361$Od@c8))))
                   (g$syntax-dispatch$7534$Od@c8 g$t$9361$Od@c8 '(_ any)))))
               g$e$9358$Od@c8))))))))
   (g$core-macro-transformer$7541$Od@c8
     g$core-macro-transformer$10973$Od@c8
     (case-lambda
       ((g$name$9514$Od@c8)
        ((case-lambda
           ((g$t$9515$Od@c8)
            (if (eqv? g$t$9515$Od@c8 'quote)
              g$quote-transformer$7494$Od@c8
              (if (eqv? g$t$9515$Od@c8 'lambda)
                g$lambda-transformer$7496$Od@c8
                (if (eqv? g$t$9515$Od@c8 'case-lambda)
                  g$case-lambda-transformer$7495$Od@c8
                  (if (eqv? g$t$9515$Od@c8 'letrec)
                    g$letrec-transformer$7484$Od@c8
                    (if (eqv? g$t$9515$Od@c8 'letrec*)
                      g$letrec*-transformer$7485$Od@c8
                      (if (eqv? g$t$9515$Od@c8 'case)
                        g$case-transformer$7493$Od@c8
                        (if (eqv? g$t$9515$Od@c8 'if)
                          g$if-transformer$7492$Od@c8
                          (if (eqv? g$t$9515$Od@c8 'when)
                            g$when-transformer$7490$Od@c8
                            (if (eqv? g$t$9515$Od@c8 'unless)
                              g$unless-transformer$7491$Od@c8
                              (if (eqv? g$t$9515$Od@c8 'parameterize)
                                g$parameterize-transformer$7531$Od@c8
                                (if (eqv? g$t$9515$Od@c8 'foreign-call)
                                  g$foreign-call-transformer$7532$Od@c8
                                  (if (eqv? g$t$9515$Od@c8 'syntax-case)
                                    g$syntax-case-transformer$7538$Od@c8
                                    (if (eqv? g$t$9515$Od@c8 'syntax)
                                      g$syntax-transformer$7540$Od@c8
                                      (if (eqv? g$t$9515$Od@c8 'type-descriptor)
                                        g$type-descriptor-transformer$7487$Od@c8
                                        (if (eqv?
                                              g$t$9515$Od@c8
                                              'record-type-descriptor)
                                          g$record-type-descriptor-transformer$7488$Od@c8
                                          (if (eqv?
                                                g$t$9515$Od@c8
                                                'record-constructor-descriptor)
                                            g$record-constructor-descriptor-transformer$7489$Od@c8
                                            (if (eqv?
                                                  g$t$9515$Od@c8
                                                  'fluid-let-syntax)
                                              g$fluid-let-syntax-transformer$7486$Od@c8
                                              (assertion-violation
                                                'macro-transformer
                                                '"BUG: cannot find transformer"
                                                g$name$9514$Od@c8))))))))))))))))))))
         g$name$9514$Od@c8))))
   (g$file-options-macro$7542$Od@c8
     g$file-options-macro$10974$Od@c8
     (case-lambda
       ((g$x$9516$Od@c8)
        ((case-lambda
           ((g$t$9517$Od@c8)
            ((case-lambda
               ((g$ls/false$9518$Od@c8)
                (if (if g$ls/false$9518$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9519$Od@c8)
                             (if (g$for-all$5685$Od@c8
                                   g$id?$7256$Od@c8
                                   g$opt*$9519$Od@c8)
                               (begin
                                 '#f
                                 (g$file-options-spec$6526$Od@c8
                                   (map g$id->sym$7257$Od@c8
                                        g$opt*$9519$Od@c8)))
                               '#f)))
                          g$ls/false$9518$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9520$Od@c8)
                       (g$bless$7497$Od@c8
                         (list
                           'quote
                           (g$file-options-spec$6526$Od@c8
                             (map g$id->sym$7257$Od@c8 g$opt*$9520$Od@c8))))))
                    g$ls/false$9518$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$9517$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$9517$Od@c8 '(_ . each-any)))))
         g$x$9516$Od@c8))))
   (g$symbol-macro$7543$Od@c8
     g$symbol-macro$10975$Od@c8
     (case-lambda
       ((g$x$9521$Od@c8 g$set$9522$Od@c8)
        ((case-lambda
           ((g$t$9523$Od@c8)
            ((case-lambda
               ((g$ls/false$9524$Od@c8)
                (if (if g$ls/false$9524$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9525$Od@c8)
                             (if (g$id?$7256$Od@c8 g$name$9525$Od@c8)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7257$Od@c8 g$name$9525$Od@c8)
                                   g$set$9522$Od@c8))
                               '#f)))
                          g$ls/false$9524$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9526$Od@c8)
                       (g$bless$7497$Od@c8 (list 'quote g$name$9526$Od@c8))))
                    g$ls/false$9524$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$9523$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$9523$Od@c8 '(_ any)))))
         g$x$9521$Od@c8))))
   (g$macro-transformer$7544$Od@c8
     g$macro-transformer$10976$Od@c8
     (case-lambda
       ((g$x$9527$Od@c8)
        (if (procedure? g$x$9527$Od@c8)
          g$x$9527$Od@c8
          (if (symbol? g$x$9527$Od@c8)
            ((case-lambda
               ((g$t$9528$Od@c8)
                (if (eqv? g$t$9528$Od@c8 'define-record-type)
                  g$define-record-type-macro$7528$Od@c8
                  (if (eqv? g$t$9528$Od@c8 'define-struct)
                    g$define-struct-macro$7527$Od@c8
                    (if (eqv? g$t$9528$Od@c8 'include)
                      g$include-macro$7522$Od@c8
                      (if (eqv? g$t$9528$Od@c8 'cond)
                        g$cond-macro$7520$Od@c8
                        (if (eqv? g$t$9528$Od@c8 'let)
                          g$let-macro$7500$Od@c8
                          (if (eqv? g$t$9528$Od@c8 'do)
                            g$do-macro$7516$Od@c8
                            (if (eqv? g$t$9528$Od@c8 'or)
                              g$or-macro$7518$Od@c8
                              (if (eqv? g$t$9528$Od@c8 'and)
                                g$and-macro$7519$Od@c8
                                (if (eqv? g$t$9528$Od@c8 'let*)
                                  g$let*-macro$7517$Od@c8
                                  (if (eqv? g$t$9528$Od@c8 'let-values)
                                    g$let-values-macro$7501$Od@c8
                                    (if (eqv? g$t$9528$Od@c8 'let*-values)
                                      g$let*-values-macro$7502$Od@c8
                                      (if (eqv? g$t$9528$Od@c8 'syntax-rules)
                                        g$syntax-rules-macro$7524$Od@c8
                                        (if (eqv? g$t$9528$Od@c8 'quasiquote)
                                          g$quasiquote-macro$7525$Od@c8
                                          (if (eqv? g$t$9528$Od@c8 'quasisyntax)
                                            g$quasisyntax-macro$7526$Od@c8
                                            (if (eqv?
                                                  g$t$9528$Od@c8
                                                  'with-syntax)
                                              g$with-syntax-macro$7498$Od@c8
                                              (if (eqv?
                                                    g$t$9528$Od@c8
                                                    'identifier-syntax)
                                                g$identifier-syntax-macro$7515$Od@c8
                                                (if (eqv? g$t$9528$Od@c8 'time)
                                                  g$time-macro$7511$Od@c8
                                                  (if (eqv?
                                                        g$t$9528$Od@c8
                                                        'delay)
                                                    g$delay-macro$7512$Od@c8
                                                    (if (eqv?
                                                          g$t$9528$Od@c8
                                                          'assert)
                                                      g$assert-macro$7513$Od@c8
                                                      (if (eqv?
                                                            g$t$9528$Od@c8
                                                            'endianness)
                                                        g$endianness-macro$7514$Od@c8
                                                        (if (eqv?
                                                              g$t$9528$Od@c8
                                                              'guard)
                                                          g$guard-macro$7509$Od@c8
                                                          (if (eqv?
                                                                g$t$9528$Od@c8
                                                                'define-enumeration)
                                                            g$define-enumeration-macro$7510$Od@c8
                                                            (if (eqv?
                                                                  g$t$9528$Od@c8
                                                                  'trace-lambda)
                                                              g$trace-lambda-macro$7503$Od@c8
                                                              (if (eqv?
                                                                    g$t$9528$Od@c8
                                                                    'trace-define)
                                                                g$trace-define-macro$7504$Od@c8
                                                                (if (eqv?
                                                                      g$t$9528$Od@c8
                                                                      'trace-define-syntax)
                                                                  g$trace-define-syntax-macro$7505$Od@c8
                                                                  (if (eqv?
                                                                        g$t$9528$Od@c8
                                                                        'trace-let-syntax)
                                                                    g$trace-let-syntax-macro$7507$Od@c8
                                                                    (if (eqv?
                                                                          g$t$9528$Od@c8
                                                                          'trace-letrec-syntax)
                                                                      g$trace-letrec-syntax-macro$7508$Od@c8
                                                                      (if (eqv?
                                                                            g$t$9528$Od@c8
                                                                            'define-condition-type)
                                                                        g$define-condition-type-macro$7529$Od@c8
                                                                        (if (eqv?
                                                                              g$t$9528$Od@c8
                                                                              'include-into)
                                                                          g$include-into-macro$7523$Od@c8
                                                                          (if (eqv?
                                                                                g$t$9528$Od@c8
                                                                                'eol-style)
                                                                            (case-lambda
                                                                              ((g$x$9531$Od@c8)
                                                                               (g$symbol-macro$7543$Od@c8
                                                                                 g$x$9531$Od@c8
                                                                                 '(none
                                                                                    lf
                                                                                    cr
                                                                                    crlf
                                                                                    nel
                                                                                    crnel
                                                                                    ls))))
                                                                            (if (eqv?
                                                                                  g$t$9528$Od@c8
                                                                                  'error-handling-mode)
                                                                              (case-lambda
                                                                                ((g$x$9530$Od@c8)
                                                                                 (g$symbol-macro$7543$Od@c8
                                                                                   g$x$9530$Od@c8
                                                                                   '(ignore
                                                                                      raise
                                                                                      replace))))
                                                                              (if (eqv?
                                                                                    g$t$9528$Od@c8
                                                                                    'buffer-mode)
                                                                                (case-lambda
                                                                                  ((g$x$9529$Od@c8)
                                                                                   (g$symbol-macro$7543$Od@c8
                                                                                     g$x$9529$Od@c8
                                                                                     '(none
                                                                                        line
                                                                                        block))))
                                                                                (if (eqv?
                                                                                      g$t$9528$Od@c8
                                                                                      'file-options)
                                                                                  g$file-options-macro$7542$Od@c8
                                                                                  (if (memv
                                                                                        g$t$9528$Od@c8
                                                                                        '(... =>
                                                                                              _
                                                                                              else
                                                                                              unquote
                                                                                              unquote-splicing
                                                                                              unsyntax
                                                                                              unsyntax-splicing
                                                                                              fields
                                                                                              mutable
                                                                                              immutable
                                                                                              parent
                                                                                              protocol
                                                                                              sealed
                                                                                              opaque
                                                                                              nongenerative
                                                                                              parent-rtd))
                                                                                    g$incorrect-usage-macro$7530$Od@c8
                                                                                    (error
                                                                                      'macro-transformer
                                                                                      '"BUG: invalid macro"
                                                                                      g$x$9527$Od@c8)))))))))))))))))))))))))))))))))))))
             g$x$9527$Od@c8)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9527$Od@c8))))))
   (g$local-macro-transformer$7545$Od@c8
     g$local-macro-transformer$10977$Od@c8
     (case-lambda ((g$x$9532$Od@c8) (car g$x$9532$Od@c8))))
   (g$do-macro-call$7546$Od@c8
     g$do-macro-call$10978$Od@c8
     (case-lambda
       ((g$transformer$9533$Od@c8 g$expr$9534$Od@c8)
        ((case-lambda
           ((g$out$9535$Od@c8)
            (begin
              ((letrec ((g$f$9536$Od@c8
                          (case-lambda
                            ((g$x$9537$Od@c8)
                             (if (g$stx?$7228$Od@c8 g$x$9537$Od@c8)
                               (void)
                               (if (pair? g$x$9537$Od@c8)
                                 (begin
                                   (g$f$9536$Od@c8 (car g$x$9537$Od@c8))
                                   (g$f$9536$Od@c8 (cdr g$x$9537$Od@c8)))
                                 (if (vector? g$x$9537$Od@c8)
                                   (vector-for-each
                                     g$f$9536$Od@c8
                                     g$x$9537$Od@c8)
                                   (if (symbol? g$x$9537$Od@c8)
                                     (g$syntax-violation$7640$Od@c8
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9534$Od@c8
                                       g$x$9537$Od@c8)
                                     (void)))))))))
                 g$f$9536$Od@c8)
               g$out$9535$Od@c8)
              (g$add-mark$7245$Od@c8
                (g$gen-mark$7240$Od@c8)
                g$out$9535$Od@c8
                g$expr$9534$Od@c8))))
         (g$transformer$9533$Od@c8
           (g$add-mark$7245$Od@c8
             g$anti-mark$7241$Od@c8
             g$expr$9534$Od@c8
             '#f))))))
   (g$chi-macro$7547$Od@c8
     g$chi-macro$10979$Od@c8
     (case-lambda
       ((g$p$9538$Od@c8 g$e$9539$Od@c8)
        (g$do-macro-call$7546$Od@c8
          (g$macro-transformer$7544$Od@c8 g$p$9538$Od@c8)
          g$e$9539$Od@c8))))
   (g$chi-local-macro$7548$Od@c8
     g$chi-local-macro$10980$Od@c8
     (case-lambda
       ((g$p$9540$Od@c8 g$e$9541$Od@c8)
        (g$do-macro-call$7546$Od@c8
          (g$local-macro-transformer$7545$Od@c8 g$p$9540$Od@c8)
          g$e$9541$Od@c8))))
   (g$chi-global-macro$7549$Od@c8
     g$chi-global-macro$10981$Od@c8
     (case-lambda
       ((g$p$9542$Od@c8 g$e$9543$Od@c8)
        ((case-lambda
           ((g$lib$9544$Od@c8 g$loc$9545$Od@c8)
            (begin
              (g$visit-library$7072$Od@c8 g$lib$9544$Od@c8)
              ((case-lambda
                 ((g$x$9546$Od@c8)
                  ((case-lambda
                     ((g$transformer$9547$Od@c8)
                      (g$do-macro-call$7546$Od@c8
                        g$transformer$9547$Od@c8
                        g$e$9543$Od@c8)))
                   (if (procedure? g$x$9546$Od@c8)
                     g$x$9546$Od@c8
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9546$Od@c8)))))
               (symbol-value g$loc$9545$Od@c8)))))
         (car g$p$9542$Od@c8)
         (cdr g$p$9542$Od@c8)))))
   (g$chi-expr*$7550$Od@c8
     g$chi-expr*$10982$Od@c8
     (case-lambda
       ((g$e*$9548$Od@c8 g$r$9549$Od@c8 g$mr$9550$Od@c8)
        (if (null? g$e*$9548$Od@c8)
          '()
          ((case-lambda
             ((g$e$9551$Od@c8)
              (cons
                g$e$9551$Od@c8
                (g$chi-expr*$7550$Od@c8
                  (cdr g$e*$9548$Od@c8)
                  g$r$9549$Od@c8
                  g$mr$9550$Od@c8))))
           (g$chi-expr$7552$Od@c8
             (car g$e*$9548$Od@c8)
             g$r$9549$Od@c8
             g$mr$9550$Od@c8))))))
   (g$chi-application$7551$Od@c8
     g$chi-application$10983$Od@c8
     (case-lambda
       ((g$e$9552$Od@c8 g$r$9553$Od@c8 g$mr$9554$Od@c8)
        ((case-lambda
           ((g$t$9555$Od@c8)
            ((case-lambda
               ((g$ls/false$9556$Od@c8)
                (if g$ls/false$9556$Od@c8
                  (apply
                    (case-lambda
                      ((g$rator$9557$Od@c8 g$rands$9558$Od@c8)
                       ((case-lambda
                          ((g$rator$9559$Od@c8)
                           (cons
                             g$rator$9559$Od@c8
                             (g$chi-expr*$7550$Od@c8
                               g$rands$9558$Od@c8
                               g$r$9553$Od@c8
                               g$mr$9554$Od@c8))))
                        (g$chi-expr$7552$Od@c8
                          g$rator$9557$Od@c8
                          g$r$9553$Od@c8
                          g$mr$9554$Od@c8))))
                    g$ls/false$9556$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$9555$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$9555$Od@c8 '(any . each-any)))))
         g$e$9552$Od@c8))))
   (g$chi-expr$7552$Od@c8
     g$chi-expr$10984$Od@c8
     (case-lambda
       ((g$e$9560$Od@c8 g$r$9561$Od@c8 g$mr$9562$Od@c8)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7276$Od@c8 g$e$9560$Od@c8 g$r$9561$Od@c8)))
          (case-lambda
            ((g$type$9566$Od@c8 g$value$9567$Od@c8 g$kwd$9568$Od@c8)
             ((case-lambda
                ((g$kwd$9569$Od@c8 g$value$9570$Od@c8 g$type$9571$Od@c8)
                 ((case-lambda
                    ((g$t$9572$Od@c8)
                     (if (eqv? g$t$9572$Od@c8 'core-macro)
                       ((case-lambda
                          ((g$transformer$9598$Od@c8)
                           (g$transformer$9598$Od@c8
                             g$e$9560$Od@c8
                             g$r$9561$Od@c8
                             g$mr$9562$Od@c8)))
                        (g$core-macro-transformer$7541$Od@c8
                          g$value$9570$Od@c8))
                       (if (eqv? g$t$9572$Od@c8 'global)
                         ((case-lambda
                            ((g$lib$9596$Od@c8)
                             ((case-lambda
                                ((g$loc$9597$Od@c8)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7586$Od@c8)
                                        g$lib$9596$Od@c8)
                                       g$loc$9597$Od@c8))))))
                              (cdr g$value$9570$Od@c8))))
                          (car g$value$9570$Od@c8))
                         (if (eqv? g$t$9572$Od@c8 'core-prim)
                           ((case-lambda
                              ((g$name$9595$Od@c8)
                               (list 'primitive g$name$9595$Od@c8)))
                            g$value$9570$Od@c8)
                           (if (eqv? g$t$9572$Od@c8 'call)
                             (g$chi-application$7551$Od@c8
                               g$e$9560$Od@c8
                               g$r$9561$Od@c8
                               g$mr$9562$Od@c8)
                             (if (eqv? g$t$9572$Od@c8 'lexical)
                               ((case-lambda
                                  ((g$lex$9594$Od@c8) g$lex$9594$Od@c8))
                                (g$lexical-var$7478$Od@c8 g$value$9570$Od@c8))
                               (if (memv
                                     g$t$9572$Od@c8
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7552$Od@c8
                                   (g$chi-global-macro$7549$Od@c8
                                     g$value$9570$Od@c8
                                     g$e$9560$Od@c8)
                                   g$r$9561$Od@c8
                                   g$mr$9562$Od@c8)
                                 (if (memv
                                       g$t$9572$Od@c8
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7552$Od@c8
                                     (g$chi-local-macro$7548$Od@c8
                                       g$value$9570$Od@c8
                                       g$e$9560$Od@c8)
                                     g$r$9561$Od@c8
                                     g$mr$9562$Od@c8)
                                   (if (memv g$t$9572$Od@c8 '(macro macro!))
                                     (g$chi-expr$7552$Od@c8
                                       (g$chi-macro$7547$Od@c8
                                         g$value$9570$Od@c8
                                         g$e$9560$Od@c8)
                                       g$r$9561$Od@c8
                                       g$mr$9562$Od@c8)
                                     (if (eqv? g$t$9572$Od@c8 'constant)
                                       ((case-lambda
                                          ((g$datum$9593$Od@c8)
                                           (list 'quote g$datum$9593$Od@c8)))
                                        g$value$9570$Od@c8)
                                       (if (eqv? g$t$9572$Od@c8 'set!)
                                         (g$chi-set!$7553$Od@c8
                                           g$e$9560$Od@c8
                                           g$r$9561$Od@c8
                                           g$mr$9562$Od@c8)
                                         (if (eqv? g$t$9572$Od@c8 'begin)
                                           ((case-lambda
                                              ((g$t$9589$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$9590$Od@c8)
                                                   (if g$ls/false$9590$Od@c8
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9591$Od@c8
                                                            g$x*$9592$Od@c8)
                                                          (g$build-sequence$7190$Od@c8
                                                            '#f
                                                            (g$chi-expr*$7550$Od@c8
                                                              (cons
                                                                g$x$9591$Od@c8
                                                                g$x*$9592$Od@c8)
                                                              g$r$9561$Od@c8
                                                              g$mr$9562$Od@c8))))
                                                       g$ls/false$9590$Od@c8)
                                                     (g$syntax-violation$7640$Od@c8
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9589$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$9589$Od@c8
                                                  '(_ any . each-any)))))
                                            g$e$9560$Od@c8)
                                           (if (memv
                                                 g$t$9572$Od@c8
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9574$Od@c8)
                                                 ((case-lambda
                                                    ((g$ls/false$9575$Od@c8)
                                                     (if (if g$ls/false$9575$Od@c8
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9576$Od@c8
                                                                    g$xrhs*$9577$Od@c8
                                                                    g$xbody$9578$Od@c8
                                                                    g$xbody*$9579$Od@c8)
                                                                  (if (g$valid-bound-ids?$7261$Od@c8
                                                                        g$xlhs*$9576$Od@c8)
                                                                    (void)
                                                                    (g$syntax-violation$7640$Od@c8
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9560$Od@c8))))
                                                               g$ls/false$9575$Od@c8))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9580$Od@c8
                                                              g$xrhs*$9581$Od@c8
                                                              g$xbody$9582$Od@c8
                                                              g$xbody*$9583$Od@c8)
                                                            ((case-lambda
                                                               ((g$xlab*$9584$Od@c8)
                                                                ((case-lambda
                                                                   ((g$xrib$9585$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$xb*$9586$Od@c8)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7190$Od@c8
                                                                              '#f
                                                                              (g$chi-expr*$7550$Od@c8
                                                                                (map (case-lambda
                                                                                       ((g$x$9587$Od@c8)
                                                                                        (g$add-subst$7246$Od@c8
                                                                                          g$xrib$9585$Od@c8
                                                                                          g$x$9587$Od@c8)))
                                                                                     (cons
                                                                                       g$xbody$9582$Od@c8
                                                                                       g$xbody*$9583$Od@c8))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9584$Od@c8
                                                                                       g$xb*$9586$Od@c8)
                                                                                  g$r$9561$Od@c8)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9584$Od@c8
                                                                                       g$xb*$9586$Od@c8)
                                                                                  g$mr$9562$Od@c8))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9588$Od@c8)
                                                                             (g$make-eval-transformer$7288$Od@c8
                                                                               (g$expand-transformer$7579$Od@c8
                                                                                 (if (eq? g$type$9571$Od@c8
                                                                                          'let-syntax)
                                                                                   g$x$9588$Od@c8
                                                                                   (g$add-subst$7246$Od@c8
                                                                                     g$xrib$9585$Od@c8
                                                                                     g$x$9588$Od@c8))
                                                                                 g$mr$9562$Od@c8))))
                                                                          g$xrhs*$9581$Od@c8))))
                                                                 (g$make-full-rib$7224$Od@c8
                                                                   g$xlhs*$9580$Od@c8
                                                                   g$xlab*$9584$Od@c8))))
                                                             (map g$gen-label$7202$Od@c8
                                                                  g$xlhs*$9580$Od@c8))))
                                                         g$ls/false$9575$Od@c8)
                                                       (g$syntax-violation$7640$Od@c8
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9574$Od@c8))))
                                                  (g$syntax-dispatch$7534$Od@c8
                                                    g$t$9574$Od@c8
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9560$Od@c8)
                                             (if (eqv?
                                                   g$t$9572$Od@c8
                                                   'displaced-lexical)
                                               (g$syntax-violation$7640$Od@c8
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9560$Od@c8)
                                               (if (eqv? g$t$9572$Od@c8 'syntax)
                                                 (g$syntax-violation$7640$Od@c8
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9560$Od@c8)
                                                 (if (memv
                                                       g$t$9572$Od@c8
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7640$Od@c8
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9573$Od@c8)
                                                           (if (eqv?
                                                                 g$t$9573$Od@c8
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$9573$Od@c8
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$9573$Od@c8
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$9573$Od@c8
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$9573$Od@c8
                                                                         'import)
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9571$Od@c8)
                                                       '" was found where an expression was expected")
                                                     g$e$9560$Od@c8)
                                                   (if (eqv?
                                                         g$t$9572$Od@c8
                                                         'mutable)
                                                     (g$syntax-violation$7640$Od@c8
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9560$Od@c8)
                                                     (g$syntax-violation$7640$Od@c8
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9560$Od@c8)))))))))))))))))))
                  g$type$9571$Od@c8)))
              g$kwd$9568$Od@c8
              g$value$9567$Od@c8
              g$type$9566$Od@c8)))))))
   (g$chi-set!$7553$Od@c8
     g$chi-set!$10985$Od@c8
     (case-lambda
       ((g$e$9599$Od@c8 g$r$9600$Od@c8 g$mr$9601$Od@c8)
        ((case-lambda
           ((g$t$9602$Od@c8)
            ((case-lambda
               ((g$ls/false$9603$Od@c8)
                (if (if g$ls/false$9603$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9604$Od@c8 g$v$9605$Od@c8)
                             (g$id?$7256$Od@c8 g$x$9604$Od@c8)))
                          g$ls/false$9603$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9606$Od@c8 g$v$9607$Od@c8)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7276$Od@c8
                              g$x$9606$Od@c8
                              g$r$9600$Od@c8)))
                         (case-lambda
                           ((g$type$9611$Od@c8
                              g$value$9612$Od@c8
                              g$kwd$9613$Od@c8)
                            ((case-lambda
                               ((g$kwd$9614$Od@c8
                                  g$value$9615$Od@c8
                                  g$type$9616$Od@c8)
                                ((case-lambda
                                   ((g$t$9617$Od@c8)
                                    (if (eqv? g$t$9617$Od@c8 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$7480$Od@c8
                                          g$value$9615$Od@c8
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7478$Od@c8
                                            g$value$9615$Od@c8)
                                          (g$chi-expr$7552$Od@c8
                                            g$v$9607$Od@c8
                                            g$r$9600$Od@c8
                                            g$mr$9601$Od@c8)))
                                      (if (eqv? g$t$9617$Od@c8 'core-prim)
                                        (g$syntax-violation$7640$Od@c8
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9599$Od@c8)
                                        (if (eqv? g$t$9617$Od@c8 'global)
                                          (g$syntax-violation$7640$Od@c8
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9599$Od@c8)
                                          (if (eqv?
                                                g$t$9617$Od@c8
                                                'global-macro!)
                                            (g$chi-expr$7552$Od@c8
                                              (g$chi-global-macro$7549$Od@c8
                                                g$value$9615$Od@c8
                                                g$e$9599$Od@c8)
                                              g$r$9600$Od@c8
                                              g$mr$9601$Od@c8)
                                            (if (eqv?
                                                  g$t$9617$Od@c8
                                                  'local-macro!)
                                              (g$chi-expr$7552$Od@c8
                                                (g$chi-local-macro$7548$Od@c8
                                                  g$value$9615$Od@c8
                                                  g$e$9599$Od@c8)
                                                g$r$9600$Od@c8
                                                g$mr$9601$Od@c8)
                                              (if (eqv? g$t$9617$Od@c8 'mutable)
                                                (g$syntax-violation$7640$Od@c8
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9599$Od@c8)
                                                (g$syntax-violation$7640$Od@c8
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9599$Od@c8)))))))))
                                 g$type$9616$Od@c8)))
                             g$kwd$9613$Od@c8
                             g$value$9612$Od@c8
                             g$type$9611$Od@c8))))))
                    g$ls/false$9603$Od@c8)
                  (g$syntax-violation$7640$Od@c8
                    '#f
                    '"invalid syntax"
                    g$t$9602$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$9602$Od@c8 '(_ any any)))))
         g$e$9599$Od@c8))))
   (g$verify-formals$7554$Od@c8
     g$verify-formals$10986$Od@c8
     (case-lambda
       ((g$fmls$9618$Od@c8 g$stx$9619$Od@c8)
        ((case-lambda
           ((g$t$9620$Od@c8)
            ((case-lambda
               ((g$ls/false$9621$Od@c8)
                (if g$ls/false$9621$Od@c8
                  (apply
                    (case-lambda
                      ((g$x*$9622$Od@c8)
                       (if (g$valid-bound-ids?$7261$Od@c8 g$x*$9622$Od@c8)
                         (void)
                         (g$invalid-fmls-error$7499$Od@c8
                           g$stx$9619$Od@c8
                           g$fmls$9618$Od@c8))))
                    g$ls/false$9621$Od@c8)
                  ((case-lambda
                     ((g$t$9623$Od@c8)
                      ((case-lambda
                         ((g$ls/false$9624$Od@c8)
                          (if g$ls/false$9624$Od@c8
                            (apply
                              (case-lambda
                                ((g$x*$9625$Od@c8 g$x$9626$Od@c8)
                                 (if (g$valid-bound-ids?$7261$Od@c8
                                       (cons g$x$9626$Od@c8 g$x*$9625$Od@c8))
                                   (void)
                                   (g$invalid-fmls-error$7499$Od@c8
                                     g$stx$9619$Od@c8
                                     g$fmls$9618$Od@c8))))
                              g$ls/false$9624$Od@c8)
                            ((case-lambda
                               ((g$t$9627$Od@c8)
                                ((case-lambda
                                   ((g$ls/false$9628$Od@c8)
                                    (if g$ls/false$9628$Od@c8
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9619$Od@c8)))
                                        g$ls/false$9628$Od@c8)
                                      (g$syntax-violation$7640$Od@c8
                                        '#f
                                        '"invalid syntax"
                                        g$t$9627$Od@c8))))
                                 (g$syntax-dispatch$7534$Od@c8
                                   g$t$9627$Od@c8
                                   '_))))
                             g$t$9623$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$9623$Od@c8
                         '#(each+ any () any)))))
                   g$t$9620$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$9620$Od@c8 'each-any))))
         g$fmls$9618$Od@c8))))
   (g$chi-lambda-clause$7555$Od@c8
     g$chi-lambda-clause$10987$Od@c8
     (case-lambda
       ((g$stx$9629$Od@c8
          g$fmls$9630$Od@c8
          g$body*$9631$Od@c8
          g$r$9632$Od@c8
          g$mr$9633$Od@c8)
        ((case-lambda
           ((g$t$9634$Od@c8)
            ((case-lambda
               ((g$ls/false$9635$Od@c8)
                (if g$ls/false$9635$Od@c8
                  (apply
                    (case-lambda
                      ((g$x*$9636$Od@c8)
                       (begin
                         (g$verify-formals$7554$Od@c8
                           g$fmls$9630$Od@c8
                           g$stx$9629$Od@c8)
                         ((case-lambda
                            ((g$lex*$9637$Od@c8 g$lab*$9638$Od@c8)
                             (values
                               g$lex*$9637$Od@c8
                               (g$chi-internal$7563$Od@c8
                                 (g$add-subst$7246$Od@c8
                                   (g$make-full-rib$7224$Od@c8
                                     g$x*$9636$Od@c8
                                     g$lab*$9638$Od@c8)
                                   g$body*$9631$Od@c8)
                                 (g$add-lexicals$7482$Od@c8
                                   g$lab*$9638$Od@c8
                                   g$lex*$9637$Od@c8
                                   g$r$9632$Od@c8)
                                 g$mr$9633$Od@c8))))
                          (map g$gen-lexical$7200$Od@c8 g$x*$9636$Od@c8)
                          (map g$gen-label$7202$Od@c8 g$x*$9636$Od@c8)))))
                    g$ls/false$9635$Od@c8)
                  ((case-lambda
                     ((g$t$9639$Od@c8)
                      ((case-lambda
                         ((g$ls/false$9640$Od@c8)
                          (if g$ls/false$9640$Od@c8
                            (apply
                              (case-lambda
                                ((g$x*$9641$Od@c8 g$x$9642$Od@c8)
                                 (begin
                                   (g$verify-formals$7554$Od@c8
                                     g$fmls$9630$Od@c8
                                     g$stx$9629$Od@c8)
                                   ((case-lambda
                                      ((g$lex*$9643$Od@c8
                                         g$lab*$9644$Od@c8
                                         g$lex$9645$Od@c8
                                         g$lab$9646$Od@c8)
                                       (values
                                         (append
                                           g$lex*$9643$Od@c8
                                           g$lex$9645$Od@c8)
                                         (g$chi-internal$7563$Od@c8
                                           (g$add-subst$7246$Od@c8
                                             (g$make-full-rib$7224$Od@c8
                                               (cons
                                                 g$x$9642$Od@c8
                                                 g$x*$9641$Od@c8)
                                               (cons
                                                 g$lab$9646$Od@c8
                                                 g$lab*$9644$Od@c8))
                                             g$body*$9631$Od@c8)
                                           (g$add-lexicals$7482$Od@c8
                                             (cons
                                               g$lab$9646$Od@c8
                                               g$lab*$9644$Od@c8)
                                             (cons
                                               g$lex$9645$Od@c8
                                               g$lex*$9643$Od@c8)
                                             g$r$9632$Od@c8)
                                           g$mr$9633$Od@c8))))
                                    (map g$gen-lexical$7200$Od@c8
                                         g$x*$9641$Od@c8)
                                    (map g$gen-label$7202$Od@c8 g$x*$9641$Od@c8)
                                    (g$gen-lexical$7200$Od@c8 g$x$9642$Od@c8)
                                    (g$gen-label$7202$Od@c8 g$x$9642$Od@c8)))))
                              g$ls/false$9640$Od@c8)
                            ((case-lambda
                               ((g$t$9647$Od@c8)
                                ((case-lambda
                                   ((g$ls/false$9648$Od@c8)
                                    (if g$ls/false$9648$Od@c8
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7640$Od@c8
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9630$Od@c8)))
                                        g$ls/false$9648$Od@c8)
                                      (g$syntax-violation$7640$Od@c8
                                        '#f
                                        '"invalid syntax"
                                        g$t$9647$Od@c8))))
                                 (g$syntax-dispatch$7534$Od@c8
                                   g$t$9647$Od@c8
                                   '_))))
                             g$t$9639$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$9639$Od@c8
                         '#(each+ any () any)))))
                   g$t$9634$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$9634$Od@c8 'each-any))))
         g$fmls$9630$Od@c8))))
   (g$chi-lambda-clause*$7556$Od@c8
     g$chi-lambda-clause*$10988$Od@c8
     (case-lambda
       ((g$stx$9649$Od@c8
          g$fmls*$9650$Od@c8
          g$body**$9651$Od@c8
          g$r$9652$Od@c8
          g$mr$9653$Od@c8)
        (if (null? g$fmls*$9650$Od@c8)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7555$Od@c8
                 g$stx$9649$Od@c8
                 (car g$fmls*$9650$Od@c8)
                 (car g$body**$9651$Od@c8)
                 g$r$9652$Od@c8
                 g$mr$9653$Od@c8)))
            (case-lambda
              ((g$a$9656$Od@c8 g$b$9657$Od@c8)
               ((case-lambda
                  ((g$b$9658$Od@c8 g$a$9659$Od@c8)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7556$Od@c8
                          g$stx$9649$Od@c8
                          (cdr g$fmls*$9650$Od@c8)
                          (cdr g$body**$9651$Od@c8)
                          g$r$9652$Od@c8
                          g$mr$9653$Od@c8)))
                     (case-lambda
                       ((g$a*$9662$Od@c8 g$b*$9663$Od@c8)
                        ((case-lambda
                           ((g$b*$9664$Od@c8 g$a*$9665$Od@c8)
                            (values
                              (cons g$a$9659$Od@c8 g$a*$9665$Od@c8)
                              (cons g$b$9658$Od@c8 g$b*$9664$Od@c8))))
                         g$b*$9663$Od@c8
                         g$a*$9662$Od@c8))))))
                g$b$9657$Od@c8
                g$a$9656$Od@c8))))))))
   (g$chi-defun$7557$Od@c8
     g$chi-defun$10989$Od@c8
     (case-lambda
       ((g$x$9666$Od@c8 g$r$9667$Od@c8 g$mr$9668$Od@c8)
        ((case-lambda
           ((g$fmls$9669$Od@c8 g$body*$9670$Od@c8)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7555$Od@c8
                   g$fmls$9669$Od@c8
                   g$fmls$9669$Od@c8
                   g$body*$9670$Od@c8
                   g$r$9667$Od@c8
                   g$mr$9668$Od@c8)))
              (case-lambda
                ((g$fmls$9673$Od@c8 g$body$9674$Od@c8)
                 ((case-lambda
                    ((g$body$9675$Od@c8 g$fmls$9676$Od@c8)
                     (g$build-lambda$7187$Od@c8
                       '#f
                       g$fmls$9676$Od@c8
                       g$body$9675$Od@c8)))
                  g$body$9674$Od@c8
                  g$fmls$9673$Od@c8))))))
         (car g$x$9666$Od@c8)
         (cdr g$x$9666$Od@c8)))))
   (g$chi-rhs$7558$Od@c8
     g$chi-rhs$10990$Od@c8
     (case-lambda
       ((g$rhs$9677$Od@c8 g$r$9678$Od@c8 g$mr$9679$Od@c8)
        ((case-lambda
           ((g$t$9680$Od@c8)
            (if (eqv? g$t$9680$Od@c8 'defun)
              (g$chi-defun$7557$Od@c8
                (cdr g$rhs$9677$Od@c8)
                g$r$9678$Od@c8
                g$mr$9679$Od@c8)
              (if (eqv? g$t$9680$Od@c8 'expr)
                ((case-lambda
                   ((g$expr$9682$Od@c8)
                    (g$chi-expr$7552$Od@c8
                      g$expr$9682$Od@c8
                      g$r$9678$Od@c8
                      g$mr$9679$Od@c8)))
                 (cdr g$rhs$9677$Od@c8))
                (if (eqv? g$t$9680$Od@c8 'top-expr)
                  ((case-lambda
                     ((g$expr$9681$Od@c8)
                      (g$build-sequence$7190$Od@c8
                        '#f
                        (list
                          (g$chi-expr$7552$Od@c8
                            g$expr$9681$Od@c8
                            g$r$9678$Od@c8
                            g$mr$9679$Od@c8)
                          (g$build-void$7191$Od@c8)))))
                   (cdr g$rhs$9677$Od@c8))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9677$Od@c8))))))
         (car g$rhs$9677$Od@c8)))))
   (g$expand-interaction-rhs*/init*$7559$Od@c8
     g$expand-interaction-rhs*/init*$10991$Od@c8
     (case-lambda
       ((g$lhs*$9683$Od@c8
          g$rhs*$9684$Od@c8
          g$init*$9685$Od@c8
          g$r$9686$Od@c8
          g$mr$9687$Od@c8)
        ((letrec ((g$f$9688$Od@c8
                    (case-lambda
                      ((g$lhs*$9689$Od@c8 g$rhs*$9690$Od@c8)
                       (if (null? g$lhs*$9689$Od@c8)
                         (map (case-lambda
                                ((g$x$9691$Od@c8)
                                 (g$chi-expr$7552$Od@c8
                                   g$x$9691$Od@c8
                                   g$r$9686$Od@c8
                                   g$mr$9687$Od@c8)))
                              g$init*$9685$Od@c8)
                         ((case-lambda
                            ((g$lhs$9692$Od@c8 g$rhs$9693$Od@c8)
                             ((case-lambda
                                ((g$t$9694$Od@c8)
                                 (if (eqv? g$t$9694$Od@c8 'defun)
                                   ((case-lambda
                                      ((g$rhs$9697$Od@c8)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9692$Od@c8
                                           g$rhs$9697$Od@c8)
                                         (g$f$9688$Od@c8
                                           (cdr g$lhs*$9689$Od@c8)
                                           (cdr g$rhs*$9690$Od@c8)))))
                                    (g$chi-defun$7557$Od@c8
                                      (cdr g$rhs$9693$Od@c8)
                                      g$r$9686$Od@c8
                                      g$mr$9687$Od@c8))
                                   (if (eqv? g$t$9694$Od@c8 'expr)
                                     ((case-lambda
                                        ((g$rhs$9696$Od@c8)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9692$Od@c8
                                             g$rhs$9696$Od@c8)
                                           (g$f$9688$Od@c8
                                             (cdr g$lhs*$9689$Od@c8)
                                             (cdr g$rhs*$9690$Od@c8)))))
                                      (g$chi-expr$7552$Od@c8
                                        (cdr g$rhs$9693$Od@c8)
                                        g$r$9686$Od@c8
                                        g$mr$9687$Od@c8))
                                     (if (eqv? g$t$9694$Od@c8 'top-expr)
                                       ((case-lambda
                                          ((g$e$9695$Od@c8)
                                           (cons
                                             g$e$9695$Od@c8
                                             (g$f$9688$Od@c8
                                               (cdr g$lhs*$9689$Od@c8)
                                               (cdr g$rhs*$9690$Od@c8)))))
                                        (g$chi-expr$7552$Od@c8
                                          (cdr g$rhs$9693$Od@c8)
                                          g$r$9686$Od@c8
                                          g$mr$9687$Od@c8))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9693$Od@c8))))))
                              (car g$rhs$9693$Od@c8))))
                          (car g$lhs*$9689$Od@c8)
                          (car g$rhs*$9690$Od@c8)))))))
           g$f$9688$Od@c8)
         g$lhs*$9683$Od@c8
         g$rhs*$9684$Od@c8))))
   (g$chi-rhs*$7560$Od@c8
     g$chi-rhs*$10992$Od@c8
     (case-lambda
       ((g$rhs*$9698$Od@c8 g$r$9699$Od@c8 g$mr$9700$Od@c8)
        ((letrec ((g$f$9701$Od@c8
                    (case-lambda
                      ((g$ls$9702$Od@c8)
                       (if (null? g$ls$9702$Od@c8)
                         '()
                         ((case-lambda
                            ((g$a$9703$Od@c8)
                             (cons
                               g$a$9703$Od@c8
                               (g$f$9701$Od@c8 (cdr g$ls$9702$Od@c8)))))
                          (g$chi-rhs$7558$Od@c8
                            (car g$ls$9702$Od@c8)
                            g$r$9699$Od@c8
                            g$mr$9700$Od@c8)))))))
           g$f$9701$Od@c8)
         g$rhs*$9698$Od@c8))))
   (g$find-bound=?$7561$Od@c8
     g$find-bound=?$10993$Od@c8
     (case-lambda
       ((g$x$9704$Od@c8 g$lhs*$9705$Od@c8 g$rhs*$9706$Od@c8)
        (if (null? g$lhs*$9705$Od@c8)
          '#f
          (if (g$bound-id=?$7259$Od@c8 g$x$9704$Od@c8 (car g$lhs*$9705$Od@c8))
            (car g$rhs*$9706$Od@c8)
            (g$find-bound=?$7561$Od@c8
              g$x$9704$Od@c8
              (cdr g$lhs*$9705$Od@c8)
              (cdr g$rhs*$9706$Od@c8)))))))
   (g$find-dups$7562$Od@c8
     g$find-dups$10994$Od@c8
     (case-lambda
       ((g$ls$9707$Od@c8)
        ((letrec ((g$f$9708$Od@c8
                    (case-lambda
                      ((g$ls$9709$Od@c8 g$dups$9710$Od@c8)
                       (if (null? g$ls$9709$Od@c8)
                         g$dups$9710$Od@c8
                         ((case-lambda
                            ((g$t$9711$Od@c8)
                             (if g$t$9711$Od@c8
                               ((case-lambda
                                  ((g$x$9712$Od@c8)
                                   (g$f$9708$Od@c8
                                     (cdr g$ls$9709$Od@c8)
                                     (cons
                                       (list
                                         (car g$ls$9709$Od@c8)
                                         g$x$9712$Od@c8)
                                       g$dups$9710$Od@c8))))
                                g$t$9711$Od@c8)
                               (g$f$9708$Od@c8
                                 (cdr g$ls$9709$Od@c8)
                                 g$dups$9710$Od@c8))))
                          (g$find-bound=?$7561$Od@c8
                            (car g$ls$9709$Od@c8)
                            (cdr g$ls$9709$Od@c8)
                            (cdr g$ls$9709$Od@c8))))))))
           g$f$9708$Od@c8)
         g$ls$9707$Od@c8
         '()))))
   (g$chi-internal$7563$Od@c8
     g$chi-internal$10995$Od@c8
     (case-lambda
       ((g$e*$9713$Od@c8 g$r$9714$Od@c8 g$mr$9715$Od@c8)
        ((case-lambda
           ((g$rib$9716$Od@c8)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7578$Od@c8
                   (map (case-lambda
                          ((g$x$9724$Od@c8)
                           (g$add-subst$7246$Od@c8
                             g$rib$9716$Od@c8
                             g$x$9724$Od@c8)))
                        (g$syntax->list$7255$Od@c8 g$e*$9713$Od@c8))
                   g$r$9714$Od@c8
                   g$mr$9715$Od@c8
                   '()
                   '()
                   '()
                   '()
                   g$rib$9716$Od@c8
                   '#f)))
              (case-lambda
                ((g$e*$9725$Od@c8
                   g$r$9726$Od@c8
                   g$mr$9727$Od@c8
                   g$lex*$9728$Od@c8
                   g$rhs*$9729$Od@c8
                   g$mod**$9730$Od@c8
                   g$kwd*$9731$Od@c8)
                 ((case-lambda
                    ((g$kwd*$9732$Od@c8
                       g$mod**$9733$Od@c8
                       g$rhs*$9734$Od@c8
                       g$lex*$9735$Od@c8
                       g$mr$9736$Od@c8
                       g$r$9737$Od@c8
                       g$e*$9738$Od@c8)
                     (begin
                       (if (null? g$e*$9738$Od@c8)
                         (g$syntax-violation$7640$Od@c8
                           '#f
                           '"no expression in body"
                           g$e*$9738$Od@c8)
                         (void))
                       ((case-lambda
                          ((g$init*$9739$Od@c8)
                           ((case-lambda
                              ((g$rhs*$9740$Od@c8)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7193$Od@c8
                                     '#f
                                     (reverse g$lex*$9735$Od@c8)
                                     (reverse g$rhs*$9740$Od@c8)
                                     (g$build-sequence$7190$Od@c8
                                       '#f
                                       g$init*$9739$Od@c8)))))))
                            (g$chi-rhs*$7560$Od@c8
                              g$rhs*$9734$Od@c8
                              g$r$9737$Od@c8
                              g$mr$9736$Od@c8))))
                        (g$chi-expr*$7550$Od@c8
                          (append
                            (apply append (reverse g$mod**$9733$Od@c8))
                            g$e*$9738$Od@c8)
                          g$r$9737$Od@c8
                          g$mr$9736$Od@c8)))))
                  g$kwd*$9731$Od@c8
                  g$mod**$9730$Od@c8
                  g$rhs*$9729$Od@c8
                  g$lex*$9728$Od@c8
                  g$mr$9727$Od@c8
                  g$r$9726$Od@c8
                  g$e*$9725$Od@c8))))))
         (g$make-empty-rib$7219$Od@c8)))))
   (g$parse-module$7564$Od@c8
     g$parse-module$10996$Od@c8
     (case-lambda
       ((g$e$9741$Od@c8)
        ((case-lambda
           ((g$t$9742$Od@c8)
            ((case-lambda
               ((g$ls/false$9743$Od@c8)
                (if g$ls/false$9743$Od@c8
                  (apply
                    (case-lambda
                      ((g$export*$9744$Od@c8 g$b*$9745$Od@c8)
                       (begin
                         (if (g$for-all$5685$Od@c8
                               g$id?$7256$Od@c8
                               g$export*$9744$Od@c8)
                           (void)
                           (g$syntax-violation$7640$Od@c8
                             '#f
                             '"module exports must be identifiers"
                             g$e$9741$Od@c8))
                         (values
                           '#f
                           (list->vector g$export*$9744$Od@c8)
                           g$b*$9745$Od@c8))))
                    g$ls/false$9743$Od@c8)
                  ((case-lambda
                     ((g$t$9746$Od@c8)
                      ((case-lambda
                         ((g$ls/false$9747$Od@c8)
                          (if g$ls/false$9747$Od@c8
                            (apply
                              (case-lambda
                                ((g$name$9748$Od@c8
                                   g$export*$9749$Od@c8
                                   g$b*$9750$Od@c8)
                                 (begin
                                   (if (g$id?$7256$Od@c8 g$name$9748$Od@c8)
                                     (void)
                                     (g$syntax-violation$7640$Od@c8
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9741$Od@c8))
                                   (if (g$for-all$5685$Od@c8
                                         g$id?$7256$Od@c8
                                         g$export*$9749$Od@c8)
                                     (void)
                                     (g$syntax-violation$7640$Od@c8
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9741$Od@c8))
                                   (values
                                     g$name$9748$Od@c8
                                     (list->vector g$export*$9749$Od@c8)
                                     g$b*$9750$Od@c8))))
                              g$ls/false$9747$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$9746$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$9746$Od@c8
                         '(_ any each-any . each-any)))))
                   g$t$9742$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$9742$Od@c8
               '(_ each-any . each-any)))))
         g$e$9741$Od@c8))))
   (g$8129$7565$Od@c8
     g$8129$10997$Od@c8
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8132$Od@c8
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8131$7566$Od@c8 g$8131$10998$Od@c8 '#f)
   (g$8130$7567$Od@c8
     g$8130$10999$Od@c8
     (make-record-constructor-descriptor
       g$8129$7565$Od@c8
       '#f
       g$8131$7566$Od@c8))
   (g$module-interface?$7568$Od@c8
     g$module-interface?$11000$Od@c8
     (record-predicate g$8129$7565$Od@c8))
   (g$make-module-interface$7569$Od@c8
     g$make-module-interface$11001$Od@c8
     (record-constructor g$8130$7567$Od@c8))
   (g$module-interface-first-mark$7570$Od@c8
     g$module-interface-first-mark$11002$Od@c8
     (record-accessor g$8129$7565$Od@c8 '0))
   (g$module-interface-exp-id-vec$7571$Od@c8
     g$module-interface-exp-id-vec$11003$Od@c8
     (record-accessor g$8129$7565$Od@c8 '1))
   (g$module-interface-exp-lab-vec$7572$Od@c8
     g$module-interface-exp-lab-vec$11004$Od@c8
     (record-accessor g$8129$7565$Od@c8 '2))
   (g$set-module-interface-first-mark!$7573$Od@c8
     g$set-module-interface-first-mark!$11005$Od@c8
     (record-mutator g$8129$7565$Od@c8 '0))
   (g$set-module-interface-exp-id-vec!$7574$Od@c8
     g$set-module-interface-exp-id-vec!$11006$Od@c8
     (record-mutator g$8129$7565$Od@c8 '1))
   (g$set-module-interface-exp-lab-vec!$7575$Od@c8
     g$set-module-interface-exp-lab-vec!$11007$Od@c8
     (record-mutator g$8129$7565$Od@c8 '2))
   (g$module-interface-exp-id*$7576$Od@c8
     g$module-interface-exp-id*$11008$Od@c8
     (case-lambda
       ((g$iface$9751$Od@c8 g$id$9752$Od@c8)
        (letrec* ((g$diff-marks$9753$Od@c8
                    (case-lambda
                      ((g$ls$9757$Od@c8 g$x$9758$Od@c8)
                       (begin
                         (if (null? g$ls$9757$Od@c8)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9759$Od@c8)
                             (if (eq? g$a$9759$Od@c8 g$x$9758$Od@c8)
                               '()
                               (cons
                                 g$a$9759$Od@c8
                                 (g$diff-marks$9753$Od@c8
                                   (cdr g$ls$9757$Od@c8)
                                   g$x$9758$Od@c8)))))
                          (car g$ls$9757$Od@c8)))))))
          ((case-lambda
             ((g$diff$9754$Od@c8 g$id-vec$9755$Od@c8)
              (if (null? g$diff$9754$Od@c8)
                g$id-vec$9755$Od@c8
                (vector-map
                  (case-lambda
                    ((g$x$9756$Od@c8)
                     (g$make-stx$7229$Od@c8
                       (g$stx-expr$7230$Od@c8 g$x$9756$Od@c8)
                       (append
                         g$diff$9754$Od@c8
                         (g$stx-mark*$7231$Od@c8 g$x$9756$Od@c8))
                       '()
                       '())))
                  g$id-vec$9755$Od@c8))))
           (g$diff-marks$9753$Od@c8
             (g$stx-mark*$7231$Od@c8 g$id$9752$Od@c8)
             (g$module-interface-first-mark$7570$Od@c8 g$iface$9751$Od@c8))
           (g$module-interface-exp-id-vec$7571$Od@c8 g$iface$9751$Od@c8))))))
   (g$chi-internal-module$7577$Od@c8
     g$chi-internal-module$11009$Od@c8
     (case-lambda
       ((g$e$9760$Od@c8
          g$r$9761$Od@c8
          g$mr$9762$Od@c8
          g$lex*$9763$Od@c8
          g$rhs*$9764$Od@c8
          g$mod**$9765$Od@c8
          g$kwd*$9766$Od@c8)
        (call-with-values
          (case-lambda (() (g$parse-module$7564$Od@c8 g$e$9760$Od@c8)))
          (case-lambda
            ((g$name$9770$Od@c8 g$exp-id*$9771$Od@c8 g$e*$9772$Od@c8)
             ((case-lambda
                ((g$e*$9773$Od@c8 g$exp-id*$9774$Od@c8 g$name$9775$Od@c8)
                 ((case-lambda
                    ((g$rib$9776$Od@c8)
                     ((case-lambda
                        ((g$e*$9777$Od@c8)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7578$Od@c8
                                    g$e*$9777$Od@c8
                                    g$r$9761$Od@c8
                                    g$mr$9762$Od@c8
                                    g$lex*$9763$Od@c8
                                    g$rhs*$9764$Od@c8
                                    g$mod**$9765$Od@c8
                                    g$kwd*$9766$Od@c8
                                    g$rib$9776$Od@c8
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9785$Od@c8
                                    g$r$9786$Od@c8
                                    g$mr$9787$Od@c8
                                    g$lex*$9788$Od@c8
                                    g$rhs*$9789$Od@c8
                                    g$mod**$9790$Od@c8
                                    g$kwd*$9791$Od@c8)
                                  ((case-lambda
                                     ((g$kwd*$9792$Od@c8
                                        g$mod**$9793$Od@c8
                                        g$rhs*$9794$Od@c8
                                        g$lex*$9795$Od@c8
                                        g$mr$9796$Od@c8
                                        g$r$9797$Od@c8
                                        g$e*$9798$Od@c8)
                                      ((case-lambda
                                         ((g$exp-lab*$9799$Od@c8
                                            g$mod**$9800$Od@c8)
                                          (if (not g$name$9775$Od@c8)
                                            (values
                                              g$lex*$9795$Od@c8
                                              g$rhs*$9794$Od@c8
                                              g$exp-id*$9774$Od@c8
                                              g$exp-lab*$9799$Od@c8
                                              g$r$9797$Od@c8
                                              g$mr$9796$Od@c8
                                              g$mod**$9800$Od@c8
                                              g$kwd*$9792$Od@c8)
                                            ((case-lambda
                                               ((g$lab$9801$Od@c8
                                                  g$iface$9802$Od@c8)
                                                (values
                                                  g$lex*$9795$Od@c8
                                                  g$rhs*$9794$Od@c8
                                                  (vector g$name$9775$Od@c8)
                                                  (vector g$lab$9801$Od@c8)
                                                  (cons
                                                    (cons
                                                      g$lab$9801$Od@c8
                                                      (cons
                                                        '$module
                                                        g$iface$9802$Od@c8))
                                                    g$r$9797$Od@c8)
                                                  (cons
                                                    (cons
                                                      g$lab$9801$Od@c8
                                                      (cons
                                                        '$module
                                                        g$iface$9802$Od@c8))
                                                    g$mr$9796$Od@c8)
                                                  g$mod**$9800$Od@c8
                                                  g$kwd*$9792$Od@c8)))
                                             (g$gen-label$7202$Od@c8 'module)
                                             (g$make-module-interface$7569$Od@c8
                                               (car (g$stx-mark*$7231$Od@c8
                                                      g$name$9775$Od@c8))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9803$Od@c8)
                                                    (g$make-stx$7229$Od@c8
                                                      (g$stx-expr$7230$Od@c8
                                                        g$x$9803$Od@c8)
                                                      (g$stx-mark*$7231$Od@c8
                                                        g$x$9803$Od@c8)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9774$Od@c8)
                                               g$exp-lab*$9799$Od@c8)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9804$Od@c8)
                                            ((case-lambda
                                               ((g$t$9805$Od@c8)
                                                (if g$t$9805$Od@c8
                                                  g$t$9805$Od@c8
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7640$Od@c8
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9804$Od@c8)))))
                                             (g$id->label$7269$Od@c8
                                               (g$make-stx$7229$Od@c8
                                                 (g$id->sym$7257$Od@c8
                                                   g$x$9804$Od@c8)
                                                 (g$stx-mark*$7231$Od@c8
                                                   g$x$9804$Od@c8)
                                                 (list g$rib$9776$Od@c8)
                                                 '())))))
                                         g$exp-id*$9774$Od@c8)
                                       (cons
                                         g$e*$9798$Od@c8
                                         g$mod**$9793$Od@c8))))
                                   g$kwd*$9791$Od@c8
                                   g$mod**$9790$Od@c8
                                   g$rhs*$9789$Od@c8
                                   g$lex*$9788$Od@c8
                                   g$mr$9787$Od@c8
                                   g$r$9786$Od@c8
                                   g$e*$9785$Od@c8)))))))))
                      (map (case-lambda
                             ((g$x$9806$Od@c8)
                              (g$add-subst$7246$Od@c8
                                g$rib$9776$Od@c8
                                g$x$9806$Od@c8)))
                           (g$syntax->list$7255$Od@c8 g$e*$9773$Od@c8)))))
                  (g$make-empty-rib$7219$Od@c8))))
              g$e*$9772$Od@c8
              g$exp-id*$9771$Od@c8
              g$name$9770$Od@c8)))))))
   (g$chi-body*$7578$Od@c8
     g$chi-body*$11010$Od@c8
     (case-lambda
       ((g$e*$9807$Od@c8
          g$r$9808$Od@c8
          g$mr$9809$Od@c8
          g$lex*$9810$Od@c8
          g$rhs*$9811$Od@c8
          g$mod**$9812$Od@c8
          g$kwd*$9813$Od@c8
          g$rib$9814$Od@c8
          g$top?$9815$Od@c8)
        (if (null? g$e*$9807$Od@c8)
          (values
            g$e*$9807$Od@c8
            g$r$9808$Od@c8
            g$mr$9809$Od@c8
            g$lex*$9810$Od@c8
            g$rhs*$9811$Od@c8
            g$mod**$9812$Od@c8
            g$kwd*$9813$Od@c8)
          ((case-lambda
             ((g$e$9816$Od@c8)
              (call-with-values
                (case-lambda
                  (() (g$syntax-type$7276$Od@c8 g$e$9816$Od@c8 g$r$9808$Od@c8)))
                (case-lambda
                  ((g$type$9820$Od@c8 g$value$9821$Od@c8 g$kwd$9822$Od@c8)
                   ((case-lambda
                      ((g$kwd$9823$Od@c8 g$value$9824$Od@c8 g$type$9825$Od@c8)
                       ((case-lambda
                          ((g$kwd*$9826$Od@c8)
                           ((case-lambda
                              ((g$t$9827$Od@c8)
                               (if (eqv? g$t$9827$Od@c8 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7474$Od@c8
                                        g$e$9816$Od@c8)))
                                   (case-lambda
                                     ((g$id$9933$Od@c8 g$rhs$9934$Od@c8)
                                      ((case-lambda
                                         ((g$rhs$9935$Od@c8 g$id$9936$Od@c8)
                                          (begin
                                            (if (g$bound-id-member?$7263$Od@c8
                                                  g$id$9936$Od@c8
                                                  g$kwd*$9826$Od@c8)
                                              (g$syntax-violation$7640$Od@c8
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9816$Od@c8)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7204$Od@c8
                                                   g$id$9936$Od@c8
                                                   g$rib$9814$Od@c8)))
                                              (case-lambda
                                                ((g$lab$9939$Od@c8
                                                   g$lex$9940$Od@c8)
                                                 ((case-lambda
                                                    ((g$lex$9941$Od@c8
                                                       g$lab$9942$Od@c8)
                                                     (begin
                                                       (g$extend-rib!$7220$Od@c8
                                                         g$rib$9814$Od@c8
                                                         g$id$9936$Od@c8
                                                         g$lab$9942$Od@c8)
                                                       (g$chi-body*$7578$Od@c8
                                                         (cdr g$e*$9807$Od@c8)
                                                         (g$add-lexical$7481$Od@c8
                                                           g$lab$9942$Od@c8
                                                           g$lex$9941$Od@c8
                                                           g$r$9808$Od@c8)
                                                         g$mr$9809$Od@c8
                                                         (cons
                                                           g$lex$9941$Od@c8
                                                           g$lex*$9810$Od@c8)
                                                         (cons
                                                           g$rhs$9935$Od@c8
                                                           g$rhs*$9811$Od@c8)
                                                         g$mod**$9812$Od@c8
                                                         g$kwd*$9826$Od@c8
                                                         g$rib$9814$Od@c8
                                                         g$top?$9815$Od@c8))))
                                                  g$lex$9940$Od@c8
                                                  g$lab$9939$Od@c8)))))))
                                       g$rhs$9934$Od@c8
                                       g$id$9933$Od@c8))))
                                 (if (eqv? g$t$9827$Od@c8 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7475$Od@c8
                                          g$e$9816$Od@c8)))
                                     (case-lambda
                                       ((g$id$9924$Od@c8 g$rhs$9925$Od@c8)
                                        ((case-lambda
                                           ((g$rhs$9926$Od@c8 g$id$9927$Od@c8)
                                            (begin
                                              (if (g$bound-id-member?$7263$Od@c8
                                                    g$id$9927$Od@c8
                                                    g$kwd*$9826$Od@c8)
                                                (g$syntax-violation$7640$Od@c8
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9816$Od@c8)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9928$Od@c8
                                                    g$expanded-rhs$9929$Od@c8)
                                                  (begin
                                                    (g$extend-rib!$7220$Od@c8
                                                      g$rib$9814$Od@c8
                                                      g$id$9927$Od@c8
                                                      g$lab$9928$Od@c8)
                                                    ((case-lambda
                                                       ((g$b$9930$Od@c8)
                                                        (g$chi-body*$7578$Od@c8
                                                          (cdr g$e*$9807$Od@c8)
                                                          (cons
                                                            (cons
                                                              g$lab$9928$Od@c8
                                                              g$b$9930$Od@c8)
                                                            g$r$9808$Od@c8)
                                                          (cons
                                                            (cons
                                                              g$lab$9928$Od@c8
                                                              g$b$9930$Od@c8)
                                                            g$mr$9809$Od@c8)
                                                          g$lex*$9810$Od@c8
                                                          g$rhs*$9811$Od@c8
                                                          g$mod**$9812$Od@c8
                                                          g$kwd*$9826$Od@c8
                                                          g$rib$9814$Od@c8
                                                          g$top?$9815$Od@c8)))
                                                     (g$make-eval-transformer$7288$Od@c8
                                                       g$expanded-rhs$9929$Od@c8)))))
                                               (g$gen-define-label$7205$Od@c8
                                                 g$id$9927$Od@c8
                                                 g$rib$9814$Od@c8)
                                               (g$expand-transformer$7579$Od@c8
                                                 g$rhs$9926$Od@c8
                                                 g$mr$9809$Od@c8)))))
                                         g$rhs$9925$Od@c8
                                         g$id$9924$Od@c8))))
                                   (if (memv
                                         g$t$9827$Od@c8
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9909$Od@c8)
                                         ((case-lambda
                                            ((g$ls/false$9910$Od@c8)
                                             (if (if g$ls/false$9910$Od@c8
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9911$Od@c8
                                                            g$xrhs*$9912$Od@c8
                                                            g$xbody*$9913$Od@c8)
                                                          (if (g$valid-bound-ids?$7261$Od@c8
                                                                g$xlhs*$9911$Od@c8)
                                                            (void)
                                                            (g$syntax-violation$7640$Od@c8
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9816$Od@c8))))
                                                       g$ls/false$9910$Od@c8))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9914$Od@c8
                                                      g$xrhs*$9915$Od@c8
                                                      g$xbody*$9916$Od@c8)
                                                    ((case-lambda
                                                       ((g$xlab*$9917$Od@c8)
                                                        ((case-lambda
                                                           ((g$xrib$9918$Od@c8)
                                                            ((case-lambda
                                                               ((g$xb*$9919$Od@c8)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7578$Od@c8
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9920$Od@c8)
                                                                                (g$add-subst$7246$Od@c8
                                                                                  g$xrib$9918$Od@c8
                                                                                  g$x$9920$Od@c8)))
                                                                             g$xbody*$9916$Od@c8)
                                                                        (cdr g$e*$9807$Od@c8))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9917$Od@c8
                                                                             g$xb*$9919$Od@c8)
                                                                        g$r$9808$Od@c8)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9917$Od@c8
                                                                             g$xb*$9919$Od@c8)
                                                                        g$mr$9809$Od@c8)
                                                                      g$lex*$9810$Od@c8
                                                                      g$rhs*$9811$Od@c8
                                                                      g$mod**$9812$Od@c8
                                                                      g$kwd*$9826$Od@c8
                                                                      g$rib$9814$Od@c8
                                                                      g$top?$9815$Od@c8))))))
                                                             (map (case-lambda
                                                                    ((g$x$9921$Od@c8)
                                                                     (g$make-eval-transformer$7288$Od@c8
                                                                       (g$expand-transformer$7579$Od@c8
                                                                         (if (eq? g$type$9825$Od@c8
                                                                                  'let-syntax)
                                                                           g$x$9921$Od@c8
                                                                           (g$add-subst$7246$Od@c8
                                                                             g$xrib$9918$Od@c8
                                                                             g$x$9921$Od@c8))
                                                                         g$mr$9809$Od@c8))))
                                                                  g$xrhs*$9915$Od@c8))))
                                                         (g$make-full-rib$7224$Od@c8
                                                           g$xlhs*$9914$Od@c8
                                                           g$xlab*$9917$Od@c8))))
                                                     (map g$gen-label$7202$Od@c8
                                                          g$xlhs*$9914$Od@c8))))
                                                 g$ls/false$9910$Od@c8)
                                               (g$syntax-violation$7640$Od@c8
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9909$Od@c8))))
                                          (g$syntax-dispatch$7534$Od@c8
                                            g$t$9909$Od@c8
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9816$Od@c8)
                                     (if (eqv? g$t$9827$Od@c8 'begin)
                                       ((case-lambda
                                          ((g$t$9906$Od@c8)
                                           ((case-lambda
                                              ((g$ls/false$9907$Od@c8)
                                               (if g$ls/false$9907$Od@c8
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9908$Od@c8)
                                                      (g$chi-body*$7578$Od@c8
                                                        (append
                                                          g$x*$9908$Od@c8
                                                          (cdr g$e*$9807$Od@c8))
                                                        g$r$9808$Od@c8
                                                        g$mr$9809$Od@c8
                                                        g$lex*$9810$Od@c8
                                                        g$rhs*$9811$Od@c8
                                                        g$mod**$9812$Od@c8
                                                        g$kwd*$9826$Od@c8
                                                        g$rib$9814$Od@c8
                                                        g$top?$9815$Od@c8)))
                                                   g$ls/false$9907$Od@c8)
                                                 (g$syntax-violation$7640$Od@c8
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9906$Od@c8))))
                                            (g$syntax-dispatch$7534$Od@c8
                                              g$t$9906$Od@c8
                                              '(_ . each-any)))))
                                        g$e$9816$Od@c8)
                                       (if (memv
                                             g$t$9827$Od@c8
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7578$Od@c8
                                           (cons
                                             (g$add-subst$7246$Od@c8
                                               g$rib$9814$Od@c8
                                               (g$chi-global-macro$7549$Od@c8
                                                 g$value$9824$Od@c8
                                                 g$e$9816$Od@c8))
                                             (cdr g$e*$9807$Od@c8))
                                           g$r$9808$Od@c8
                                           g$mr$9809$Od@c8
                                           g$lex*$9810$Od@c8
                                           g$rhs*$9811$Od@c8
                                           g$mod**$9812$Od@c8
                                           g$kwd*$9826$Od@c8
                                           g$rib$9814$Od@c8
                                           g$top?$9815$Od@c8)
                                         (if (memv
                                               g$t$9827$Od@c8
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7578$Od@c8
                                             (cons
                                               (g$add-subst$7246$Od@c8
                                                 g$rib$9814$Od@c8
                                                 (g$chi-local-macro$7548$Od@c8
                                                   g$value$9824$Od@c8
                                                   g$e$9816$Od@c8))
                                               (cdr g$e*$9807$Od@c8))
                                             g$r$9808$Od@c8
                                             g$mr$9809$Od@c8
                                             g$lex*$9810$Od@c8
                                             g$rhs*$9811$Od@c8
                                             g$mod**$9812$Od@c8
                                             g$kwd*$9826$Od@c8
                                             g$rib$9814$Od@c8
                                             g$top?$9815$Od@c8)
                                           (if (memv
                                                 g$t$9827$Od@c8
                                                 '(macro macro!))
                                             (g$chi-body*$7578$Od@c8
                                               (cons
                                                 (g$add-subst$7246$Od@c8
                                                   g$rib$9814$Od@c8
                                                   (g$chi-macro$7547$Od@c8
                                                     g$value$9824$Od@c8
                                                     g$e$9816$Od@c8))
                                                 (cdr g$e*$9807$Od@c8))
                                               g$r$9808$Od@c8
                                               g$mr$9809$Od@c8
                                               g$lex*$9810$Od@c8
                                               g$rhs*$9811$Od@c8
                                               g$mod**$9812$Od@c8
                                               g$kwd*$9826$Od@c8
                                               g$rib$9814$Od@c8
                                               g$top?$9815$Od@c8)
                                             (if (eqv? g$t$9827$Od@c8 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7577$Od@c8
                                                      g$e$9816$Od@c8
                                                      g$r$9808$Od@c8
                                                      g$mr$9809$Od@c8
                                                      g$lex*$9810$Od@c8
                                                      g$rhs*$9811$Od@c8
                                                      g$mod**$9812$Od@c8
                                                      g$kwd*$9826$Od@c8)))
                                                 (case-lambda
                                                   ((g$lex*$9888$Od@c8
                                                      g$rhs*$9889$Od@c8
                                                      g$m-exp-id*$9890$Od@c8
                                                      g$m-exp-lab*$9891$Od@c8
                                                      g$r$9892$Od@c8
                                                      g$mr$9893$Od@c8
                                                      g$mod**$9894$Od@c8
                                                      g$kwd*$9895$Od@c8)
                                                    ((case-lambda
                                                       ((g$kwd*$9896$Od@c8
                                                          g$mod**$9897$Od@c8
                                                          g$mr$9898$Od@c8
                                                          g$r$9899$Od@c8
                                                          g$m-exp-lab*$9900$Od@c8
                                                          g$m-exp-id*$9901$Od@c8
                                                          g$rhs*$9902$Od@c8
                                                          g$lex*$9903$Od@c8)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9904$Od@c8
                                                                 g$lab$9905$Od@c8)
                                                               (g$extend-rib!$7220$Od@c8
                                                                 g$rib$9814$Od@c8
                                                                 g$id$9904$Od@c8
                                                                 g$lab$9905$Od@c8)))
                                                            g$m-exp-id*$9901$Od@c8
                                                            g$m-exp-lab*$9900$Od@c8)
                                                          (g$chi-body*$7578$Od@c8
                                                            (cdr g$e*$9807$Od@c8)
                                                            g$r$9899$Od@c8
                                                            g$mr$9898$Od@c8
                                                            g$lex*$9903$Od@c8
                                                            g$rhs*$9902$Od@c8
                                                            g$mod**$9897$Od@c8
                                                            g$kwd*$9896$Od@c8
                                                            g$rib$9814$Od@c8
                                                            g$top?$9815$Od@c8))))
                                                     g$kwd*$9895$Od@c8
                                                     g$mod**$9894$Od@c8
                                                     g$mr$9893$Od@c8
                                                     g$r$9892$Od@c8
                                                     g$m-exp-lab*$9891$Od@c8
                                                     g$m-exp-id*$9890$Od@c8
                                                     g$rhs*$9889$Od@c8
                                                     g$lex*$9888$Od@c8))))
                                               (if (eqv?
                                                     g$t$9827$Od@c8
                                                     'library)
                                                 (begin
                                                   (g$library-expander$7627$Od@c8
                                                     (g$stx->datum$7267$Od@c8
                                                       g$e$9816$Od@c8))
                                                   (g$chi-body*$7578$Od@c8
                                                     (cdr g$e*$9807$Od@c8)
                                                     g$r$9808$Od@c8
                                                     g$mr$9809$Od@c8
                                                     g$lex*$9810$Od@c8
                                                     g$rhs*$9811$Od@c8
                                                     g$mod**$9812$Od@c8
                                                     g$kwd*$9826$Od@c8
                                                     g$rib$9814$Od@c8
                                                     g$top?$9815$Od@c8))
                                                 (if (eqv?
                                                       g$t$9827$Od@c8
                                                       'import)
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9828$Od@c8
                                                                     (case-lambda
                                                                       ((g$e$9870$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$t$9871$Od@c8)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9872$Od@c8)
                                                                                (if (if g$ls/false$9872$Od@c8
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9873$Od@c8)
                                                                                             (g$id?$7256$Od@c8
                                                                                               g$id$9873$Od@c8)))
                                                                                          g$ls/false$9872$Od@c8))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9874$Od@c8)
                                                                                       '#t))
                                                                                    g$ls/false$9872$Od@c8)
                                                                                  ((case-lambda
                                                                                     ((g$t$9875$Od@c8)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9876$Od@c8)
                                                                                          (if g$ls/false$9876$Od@c8
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9877$Od@c8)
                                                                                                 '#f))
                                                                                              g$ls/false$9876$Od@c8)
                                                                                            ((case-lambda
                                                                                               ((g$t$9878$Od@c8)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9879$Od@c8)
                                                                                                    (if g$ls/false$9879$Od@c8
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7640$Od@c8
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9870$Od@c8)))
                                                                                                        g$ls/false$9879$Od@c8)
                                                                                                      (g$syntax-violation$7640$Od@c8
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9878$Od@c8))))
                                                                                                 (g$syntax-dispatch$7534$Od@c8
                                                                                                   g$t$9878$Od@c8
                                                                                                   '_))))
                                                                                             g$t$9875$Od@c8))))
                                                                                       (g$syntax-dispatch$7534$Od@c8
                                                                                         g$t$9875$Od@c8
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9871$Od@c8))))
                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                               g$t$9871$Od@c8
                                                                               '(_ any)))))
                                                                         g$e$9870$Od@c8))))
                                                                   (g$module-import$9829$Od@c8
                                                                     (case-lambda
                                                                       ((g$e$9853$Od@c8
                                                                          g$r$9854$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$t$9855$Od@c8)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9856$Od@c8)
                                                                                (if (if g$ls/false$9856$Od@c8
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9857$Od@c8)
                                                                                             (g$id?$7256$Od@c8
                                                                                               g$id$9857$Od@c8)))
                                                                                          g$ls/false$9856$Od@c8))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9858$Od@c8)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7276$Od@c8
                                                                                              g$id$9858$Od@c8
                                                                                              g$r$9854$Od@c8)))
                                                                                         (case-lambda
                                                                                           ((g$type$9862$Od@c8
                                                                                              g$value$9863$Od@c8
                                                                                              g$kwd$9864$Od@c8)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9865$Od@c8
                                                                                                  g$value$9866$Od@c8
                                                                                                  g$type$9867$Od@c8)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9868$Od@c8)
                                                                                                    (if (eqv?
                                                                                                          g$t$9868$Od@c8
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9869$Od@c8)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7576$Od@c8
                                                                                                              g$iface$9869$Od@c8
                                                                                                              g$id$9858$Od@c8)
                                                                                                            (g$module-interface-exp-lab-vec$7572$Od@c8
                                                                                                              g$iface$9869$Od@c8))))
                                                                                                       g$value$9866$Od@c8)
                                                                                                      (g$syntax-violation$7640$Od@c8
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9853$Od@c8))))
                                                                                                 g$type$9867$Od@c8)))
                                                                                             g$kwd$9864$Od@c8
                                                                                             g$value$9863$Od@c8
                                                                                             g$type$9862$Od@c8))))))
                                                                                    g$ls/false$9856$Od@c8)
                                                                                  (g$syntax-violation$7640$Od@c8
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9855$Od@c8))))
                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                               g$t$9855$Od@c8
                                                                               '(_ any)))))
                                                                         g$e$9853$Od@c8))))
                                                                   (g$library-import$9830$Od@c8
                                                                     (case-lambda
                                                                       ((g$e$9839$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$t$9840$Od@c8)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9841$Od@c8)
                                                                                (if g$ls/false$9841$Od@c8
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9842$Od@c8
                                                                                         g$imp*$9843$Od@c8)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7583$Od@c8
                                                                                              (g$syntax->datum$7643$Od@c8
                                                                                                g$imp*$9843$Od@c8))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9846$Od@c8
                                                                                              g$subst-labels$9847$Od@c8)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9848$Od@c8
                                                                                                  g$subst-names$9849$Od@c8)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9850$Od@c8)
                                                                                                       (g$datum->stx$7239$Od@c8
                                                                                                         g$ctxt$9842$Od@c8
                                                                                                         g$name$9850$Od@c8)))
                                                                                                    g$subst-names$9849$Od@c8)
                                                                                                  g$subst-labels$9848$Od@c8)))
                                                                                             g$subst-labels$9847$Od@c8
                                                                                             g$subst-names$9846$Od@c8))))))
                                                                                    g$ls/false$9841$Od@c8)
                                                                                  ((case-lambda
                                                                                     ((g$t$9851$Od@c8)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9852$Od@c8)
                                                                                          (if g$ls/false$9852$Od@c8
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7640$Od@c8
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9839$Od@c8)))
                                                                                              g$ls/false$9852$Od@c8)
                                                                                            (g$syntax-violation$7640$Od@c8
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9851$Od@c8))))
                                                                                       (g$syntax-dispatch$7534$Od@c8
                                                                                         g$t$9851$Od@c8
                                                                                         '_))))
                                                                                   g$t$9840$Od@c8))))
                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                               g$t$9840$Od@c8
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9839$Od@c8)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$9828$Od@c8
                                                                      g$e$9816$Od@c8)
                                                                  (g$module-import$9829$Od@c8
                                                                    g$e$9816$Od@c8
                                                                    g$r$9808$Od@c8)
                                                                  (g$library-import$9830$Od@c8
                                                                    g$e$9816$Od@c8))))
                                                             (case-lambda
                                                               ((g$id*$9833$Od@c8
                                                                  g$lab*$9834$Od@c8)
                                                                ((case-lambda
                                                                   ((g$lab*$9835$Od@c8
                                                                      g$id*$9836$Od@c8)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$9837$Od@c8
                                                                           g$lab$9838$Od@c8)
                                                                         (g$extend-rib!$7220$Od@c8
                                                                           g$rib$9814$Od@c8
                                                                           g$id$9837$Od@c8
                                                                           g$lab$9838$Od@c8)))
                                                                      g$id*$9836$Od@c8
                                                                      g$lab*$9835$Od@c8)))
                                                                 g$lab*$9834$Od@c8
                                                                 g$id*$9833$Od@c8))))))))
                                                     (g$chi-body*$7578$Od@c8
                                                       (cdr g$e*$9807$Od@c8)
                                                       g$r$9808$Od@c8
                                                       g$mr$9809$Od@c8
                                                       g$lex*$9810$Od@c8
                                                       g$rhs*$9811$Od@c8
                                                       g$mod**$9812$Od@c8
                                                       g$kwd*$9826$Od@c8
                                                       g$rib$9814$Od@c8
                                                       g$top?$9815$Od@c8))
                                                   (if g$top?$9815$Od@c8
                                                     (g$chi-body*$7578$Od@c8
                                                       (cdr g$e*$9807$Od@c8)
                                                       g$r$9808$Od@c8
                                                       g$mr$9809$Od@c8
                                                       (cons
                                                         (g$gen-lexical$7200$Od@c8
                                                           'dummy)
                                                         g$lex*$9810$Od@c8)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9816$Od@c8)
                                                         g$rhs*$9811$Od@c8)
                                                       g$mod**$9812$Od@c8
                                                       g$kwd*$9826$Od@c8
                                                       g$rib$9814$Od@c8
                                                       g$top?$9815$Od@c8)
                                                     (values
                                                       g$e*$9807$Od@c8
                                                       g$r$9808$Od@c8
                                                       g$mr$9809$Od@c8
                                                       g$lex*$9810$Od@c8
                                                       g$rhs*$9811$Od@c8
                                                       g$mod**$9812$Od@c8
                                                       g$kwd*$9826$Od@c8))))))))))))))
                            g$type$9825$Od@c8)))
                        (if (g$id?$7256$Od@c8 g$kwd$9823$Od@c8)
                          (cons g$kwd$9823$Od@c8 g$kwd*$9813$Od@c8)
                          g$kwd*$9813$Od@c8))))
                    g$kwd$9822$Od@c8
                    g$value$9821$Od@c8
                    g$type$9820$Od@c8))))))
           (car g$e*$9807$Od@c8))))))
   (g$expand-transformer$7579$Od@c8
     g$expand-transformer$11011$Od@c8
     (case-lambda
       ((g$expr$9943$Od@c8 g$r$9944$Od@c8)
        ((case-lambda
           ((g$rtc$9945$Od@c8)
            ((case-lambda
               ((g$expanded-rhs$9946$Od@c8)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9947$Od@c8)
                        (case-lambda
                          ((g$x$9948$Od@c8)
                           (begin
                             (g$invoke-library$7071$Od@c8 g$x$9948$Od@c8)
                             (g$mark-visit$9947$Od@c8 g$x$9948$Od@c8))))))
                     (g$vis-collector$7587$Od@c8))
                    (g$rtc$9945$Od@c8))
                  g$expanded-rhs$9946$Od@c8)))
             ((case-lambda
                ((g$inv-collector$9953$Od@c8
                   g$vis-collector$9954$Od@c8
                   g$inv-collector$9955$Od@c8
                   g$vis-collector$9956$Od@c8)
                 ((case-lambda
                    ((g$swap$9957$Od@c8)
                     (dynamic-wind
                       g$swap$9957$Od@c8
                       (case-lambda
                         (()
                          (g$chi-expr$7552$Od@c8
                            g$expr$9943$Od@c8
                            g$r$9944$Od@c8
                            g$r$9944$Od@c8)))
                       g$swap$9957$Od@c8)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9958$Od@c8)
                           (begin
                             (g$inv-collector$9953$Od@c8
                               g$inv-collector$9955$Od@c8)
                             (set! g$inv-collector$9955$Od@c8 g$t$9958$Od@c8))))
                        (g$inv-collector$9953$Od@c8))
                       ((case-lambda
                          ((g$t$9959$Od@c8)
                           (begin
                             (g$vis-collector$9954$Od@c8
                               g$vis-collector$9956$Od@c8)
                             (set! g$vis-collector$9956$Od@c8 g$t$9959$Od@c8))))
                        (g$vis-collector$9954$Od@c8))))))))
              g$inv-collector$7586$Od@c8
              g$vis-collector$7587$Od@c8
              g$rtc$9945$Od@c8
              (case-lambda ((g$x$9960$Od@c8) (values)))))))
         (g$make-collector$7585$Od@c8)))))
   (g$parse-exports$7580$Od@c8
     g$parse-exports$11012$Od@c8
     (case-lambda
       ((g$exp*$9961$Od@c8)
        (letrec* ((g$idsyn?$9962$Od@c8
                    (case-lambda
                      ((g$x$9977$Od@c8)
                       (symbol? (g$syntax->datum$7643$Od@c8 g$x$9977$Od@c8))))))
          ((letrec ((g$f$9963$Od@c8
                      (case-lambda
                        ((g$exp*$9964$Od@c8 g$int*$9965$Od@c8 g$ext*$9966$Od@c8)
                         (if (null? g$exp*$9964$Od@c8)
                           (begin
                             ((case-lambda
                                ((g$id*$9967$Od@c8)
                                 (if (g$valid-bound-ids?$7261$Od@c8
                                       g$id*$9967$Od@c8)
                                   (void)
                                   (g$syntax-violation$7640$Od@c8
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7562$Od@c8
                                       g$id*$9967$Od@c8)))))
                              (map (case-lambda
                                     ((g$x$9968$Od@c8)
                                      (g$make-stx$7229$Od@c8
                                        g$x$9968$Od@c8
                                        g$top-mark*$7198$Od@c8
                                        '()
                                        '())))
                                   g$ext*$9966$Od@c8))
                             (values
                               (map g$syntax->datum$7643$Od@c8
                                    g$int*$9965$Od@c8)
                               (map g$syntax->datum$7643$Od@c8
                                    g$ext*$9966$Od@c8)))
                           ((case-lambda
                              ((g$t$9969$Od@c8)
                               ((case-lambda
                                  ((g$ls/false$9970$Od@c8)
                                   (if g$ls/false$9970$Od@c8
                                     (apply
                                       (case-lambda
                                         ((g$rename$9971$Od@c8
                                            g$i*$9972$Od@c8
                                            g$e*$9973$Od@c8)
                                          (begin
                                            (if (if (eq? (g$syntax->datum$7643$Od@c8
                                                           g$rename$9971$Od@c8)
                                                         'rename)
                                                  (if (g$for-all$5685$Od@c8
                                                        g$idsyn?$9962$Od@c8
                                                        g$i*$9972$Od@c8)
                                                    (begin
                                                      '#f
                                                      (g$for-all$5685$Od@c8
                                                        g$idsyn?$9962$Od@c8
                                                        g$e*$9973$Od@c8))
                                                    '#f)
                                                  '#f)
                                              (void)
                                              (g$syntax-violation$7640$Od@c8
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$9964$Od@c8)))
                                            (g$f$9963$Od@c8
                                              (cdr g$exp*$9964$Od@c8)
                                              (append
                                                g$i*$9972$Od@c8
                                                g$int*$9965$Od@c8)
                                              (append
                                                g$e*$9973$Od@c8
                                                g$ext*$9966$Od@c8)))))
                                       g$ls/false$9970$Od@c8)
                                     ((case-lambda
                                        ((g$t$9974$Od@c8)
                                         ((case-lambda
                                            ((g$ls/false$9975$Od@c8)
                                             (if g$ls/false$9975$Od@c8
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$9976$Od@c8)
                                                    (begin
                                                      (if (g$idsyn?$9962$Od@c8
                                                            g$ie$9976$Od@c8)
                                                        (void)
                                                        (g$syntax-violation$7640$Od@c8
                                                          'export
                                                          '"invalid export"
                                                          g$ie$9976$Od@c8))
                                                      (g$f$9963$Od@c8
                                                        (cdr g$exp*$9964$Od@c8)
                                                        (cons
                                                          g$ie$9976$Od@c8
                                                          g$int*$9965$Od@c8)
                                                        (cons
                                                          g$ie$9976$Od@c8
                                                          g$ext*$9966$Od@c8)))))
                                                 g$ls/false$9975$Od@c8)
                                               (g$syntax-violation$7640$Od@c8
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9974$Od@c8))))
                                          (g$syntax-dispatch$7534$Od@c8
                                            g$t$9974$Od@c8
                                            'any))))
                                      g$t$9969$Od@c8))))
                                (g$syntax-dispatch$7534$Od@c8
                                  g$t$9969$Od@c8
                                  '(any . #(each (any any)))))))
                            (car g$exp*$9964$Od@c8)))))))
             g$f$9963$Od@c8)
           g$exp*$9961$Od@c8
           '()
           '())))))
   (g$parse-library-name$7581$Od@c8
     g$parse-library-name$11013$Od@c8
     (case-lambda
       ((g$spec$9978$Od@c8)
        (letrec* ((g$parse$9979$Od@c8
                    (case-lambda
                      ((g$x$9986$Od@c8)
                       ((case-lambda
                          ((g$t$9987$Od@c8)
                           ((case-lambda
                              ((g$ls/false$9988$Od@c8)
                               (if (if g$ls/false$9988$Od@c8
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$9989$Od@c8)
                                            (g$for-all$5685$Od@c8
                                              (case-lambda
                                                ((g$x$9990$Od@c8)
                                                 ((case-lambda
                                                    ((g$x$9991$Od@c8)
                                                     (if (integer?
                                                           g$x$9991$Od@c8)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$9991$Od@c8))
                                                       '#f)))
                                                  (g$syntax->datum$7643$Od@c8
                                                    g$x$9990$Od@c8))))
                                              g$v*$9989$Od@c8)))
                                         g$ls/false$9988$Od@c8))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$9992$Od@c8)
                                      (values
                                        '()
                                        (map g$syntax->datum$7643$Od@c8
                                             g$v*$9992$Od@c8))))
                                   g$ls/false$9988$Od@c8)
                                 ((case-lambda
                                    ((g$t$9993$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$9994$Od@c8)
                                         (if (if g$ls/false$9994$Od@c8
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$9995$Od@c8
                                                        g$rest$9996$Od@c8)
                                                      (symbol?
                                                        (g$syntax->datum$7643$Od@c8
                                                          g$x$9995$Od@c8))))
                                                   g$ls/false$9994$Od@c8))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$9997$Od@c8
                                                  g$rest$9998$Od@c8)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$9979$Od@c8
                                                       g$rest$9998$Od@c8)))
                                                  (case-lambda
                                                    ((g$x*$10001$Od@c8
                                                       g$v*$10002$Od@c8)
                                                     ((case-lambda
                                                        ((g$v*$10003$Od@c8
                                                           g$x*$10004$Od@c8)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7643$Od@c8
                                                               g$x$9997$Od@c8)
                                                             g$x*$10004$Od@c8)
                                                           g$v*$10003$Od@c8)))
                                                      g$v*$10002$Od@c8
                                                      g$x*$10001$Od@c8))))))
                                             g$ls/false$9994$Od@c8)
                                           ((case-lambda
                                              ((g$t$10005$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$10006$Od@c8)
                                                   (if g$ls/false$10006$Od@c8
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10006$Od@c8)
                                                     ((case-lambda
                                                        ((g$t$10007$Od@c8)
                                                         ((case-lambda
                                                            ((g$ls/false$10008$Od@c8)
                                                             (if g$ls/false$10008$Od@c8
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7640$Od@c8
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$9978$Od@c8)))
                                                                 g$ls/false$10008$Od@c8)
                                                               (g$syntax-violation$7640$Od@c8
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10007$Od@c8))))
                                                          (g$syntax-dispatch$7534$Od@c8
                                                            g$t$10007$Od@c8
                                                            '_))))
                                                      g$t$10005$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$10005$Od@c8
                                                  '()))))
                                            g$t$9993$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$9993$Od@c8
                                        '(any . any)))))
                                  g$t$9987$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$9987$Od@c8
                              '(each-any)))))
                        g$x$9986$Od@c8)))))
          (call-with-values
            (case-lambda (() (g$parse$9979$Od@c8 g$spec$9978$Od@c8)))
            (case-lambda
              ((g$name*$9982$Od@c8 g$ver*$9983$Od@c8)
               ((case-lambda
                  ((g$ver*$9984$Od@c8 g$name*$9985$Od@c8)
                   (begin
                     (if (null? g$name*$9985$Od@c8)
                       (g$syntax-violation$7640$Od@c8
                         '#f
                         '"empty library name"
                         g$spec$9978$Od@c8)
                       (void))
                     (values g$name*$9985$Od@c8 g$ver*$9984$Od@c8))))
                g$ver*$9983$Od@c8
                g$name*$9982$Od@c8))))))))
   (g$parse-library$7582$Od@c8
     g$parse-library$11014$Od@c8
     (case-lambda
       ((g$e$10009$Od@c8)
        ((case-lambda
           ((g$t$10010$Od@c8)
            ((case-lambda
               ((g$ls/false$10011$Od@c8)
                (if (if g$ls/false$10011$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10012$Od@c8
                               g$name*$10013$Od@c8
                               g$export$10014$Od@c8
                               g$exp*$10015$Od@c8
                               g$import$10016$Od@c8
                               g$imp*$10017$Od@c8
                               g$b*$10018$Od@c8)
                             (if (eq? (g$syntax->datum$7643$Od@c8
                                        g$export$10014$Od@c8)
                                      'export)
                               (if (eq? (g$syntax->datum$7643$Od@c8
                                          g$import$10016$Od@c8)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7643$Od@c8
                                          g$library$10012$Od@c8)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10011$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10019$Od@c8
                         g$name*$10020$Od@c8
                         g$export$10021$Od@c8
                         g$exp*$10022$Od@c8
                         g$import$10023$Od@c8
                         g$imp*$10024$Od@c8
                         g$b*$10025$Od@c8)
                       (values
                         g$name*$10020$Od@c8
                         g$exp*$10022$Od@c8
                         g$imp*$10024$Od@c8
                         g$b*$10025$Od@c8)))
                    g$ls/false$10011$Od@c8)
                  ((case-lambda
                     ((g$t$10026$Od@c8)
                      ((case-lambda
                         ((g$ls/false$10027$Od@c8)
                          (if g$ls/false$10027$Od@c8
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7640$Od@c8
                                   '#f
                                   '"malformed library"
                                   g$e$10009$Od@c8)))
                              g$ls/false$10027$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$10026$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8 g$t$10026$Od@c8 '_))))
                   g$t$10010$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$10010$Od@c8
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10009$Od@c8))))
   (g$parse-import-spec*$7583$Od@c8
     g$parse-import-spec*$11015$Od@c8
     (case-lambda
       ((g$imp*$10028$Od@c8)
        (letrec* ((g$idsyn?$10029$Od@c8
                    (case-lambda
                      ((g$x$10288$Od@c8)
                       (symbol? (g$syntax->datum$7643$Od@c8 g$x$10288$Od@c8)))))
                  (g$dup-error$10030$Od@c8
                    (case-lambda
                      ((g$name$10287$Od@c8)
                       (g$syntax-violation$7640$Od@c8
                         'import
                         '"two imports with different bindings"
                         g$name$10287$Od@c8))))
                  (g$merge-substs$10031$Od@c8
                    (case-lambda
                      ((g$s$10278$Od@c8 g$subst$10279$Od@c8)
                       (letrec* ((g$insert-to-subst$10280$Od@c8
                                   (case-lambda
                                     ((g$a$10281$Od@c8 g$subst$10282$Od@c8)
                                      ((case-lambda
                                         ((g$name$10283$Od@c8
                                            g$label$10284$Od@c8)
                                          ((case-lambda
                                             ((g$t$10285$Od@c8)
                                              (if g$t$10285$Od@c8
                                                ((case-lambda
                                                   ((g$x$10286$Od@c8)
                                                    (if (eq? (cdr g$x$10286$Od@c8)
                                                             g$label$10284$Od@c8)
                                                      g$subst$10282$Od@c8
                                                      (g$dup-error$10030$Od@c8
                                                        g$name$10283$Od@c8))))
                                                 g$t$10285$Od@c8)
                                                (cons
                                                  g$a$10281$Od@c8
                                                  g$subst$10282$Od@c8))))
                                           (assq
                                             g$name$10283$Od@c8
                                             g$subst$10282$Od@c8))))
                                       (car g$a$10281$Od@c8)
                                       (cdr g$a$10281$Od@c8))))))
                         (if (null? g$s$10278$Od@c8)
                           g$subst$10279$Od@c8
                           (g$insert-to-subst$10280$Od@c8
                             (car g$s$10278$Od@c8)
                             (g$merge-substs$10031$Od@c8
                               (cdr g$s$10278$Od@c8)
                               g$subst$10279$Od@c8)))))))
                  (g$exclude*$10032$Od@c8
                    (case-lambda
                      ((g$sym*$10254$Od@c8 g$subst$10255$Od@c8)
                       (letrec* ((g$exclude$10256$Od@c8
                                   (case-lambda
                                     ((g$sym$10269$Od@c8 g$subst$10270$Od@c8)
                                      (if (null? g$subst$10270$Od@c8)
                                        (g$syntax-violation$7640$Od@c8
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10269$Od@c8)
                                        (if (eq? g$sym$10269$Od@c8
                                                 (g$caar$5215$Od@c8
                                                   g$subst$10270$Od@c8))
                                          (values
                                            (g$cdar$5217$Od@c8
                                              g$subst$10270$Od@c8)
                                            (cdr g$subst$10270$Od@c8))
                                          ((case-lambda
                                             ((g$a$10271$Od@c8)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10256$Od@c8
                                                     g$sym$10269$Od@c8
                                                     (cdr g$subst$10270$Od@c8))))
                                                (case-lambda
                                                  ((g$old$10274$Od@c8
                                                     g$subst$10275$Od@c8)
                                                   ((case-lambda
                                                      ((g$subst$10276$Od@c8
                                                         g$old$10277$Od@c8)
                                                       (values
                                                         g$old$10277$Od@c8
                                                         (cons
                                                           g$a$10271$Od@c8
                                                           g$subst$10276$Od@c8))))
                                                    g$subst$10275$Od@c8
                                                    g$old$10274$Od@c8))))))
                                           (car g$subst$10270$Od@c8))))))))
                         (if (null? g$sym*$10254$Od@c8)
                           (values '() g$subst$10255$Od@c8)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10256$Od@c8
                                  (car g$sym*$10254$Od@c8)
                                  g$subst$10255$Od@c8)))
                             (case-lambda
                               ((g$old$10259$Od@c8 g$subst$10260$Od@c8)
                                ((case-lambda
                                   ((g$subst$10261$Od@c8 g$old$10262$Od@c8)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10032$Od@c8
                                           (cdr g$sym*$10254$Od@c8)
                                           g$subst$10261$Od@c8)))
                                      (case-lambda
                                        ((g$old*$10265$Od@c8
                                           g$subst$10266$Od@c8)
                                         ((case-lambda
                                            ((g$subst$10267$Od@c8
                                               g$old*$10268$Od@c8)
                                             (values
                                               (cons
                                                 g$old$10262$Od@c8
                                                 g$old*$10268$Od@c8)
                                               g$subst$10267$Od@c8)))
                                          g$subst$10266$Od@c8
                                          g$old*$10265$Od@c8))))))
                                 g$subst$10260$Od@c8
                                 g$old$10259$Od@c8)))))))))
                  (g$find*$10033$Od@c8
                    (case-lambda
                      ((g$sym*$10250$Od@c8 g$subst$10251$Od@c8)
                       (map (case-lambda
                              ((g$x$10252$Od@c8)
                               ((case-lambda
                                  ((g$t$10253$Od@c8)
                                   (if g$t$10253$Od@c8
                                     (cdr g$t$10253$Od@c8)
                                     (g$syntax-violation$7640$Od@c8
                                       'import
                                       '"cannot find identifier"
                                       g$x$10252$Od@c8))))
                                (assq g$x$10252$Od@c8 g$subst$10251$Od@c8))))
                            g$sym*$10250$Od@c8))))
                  (g$rem*$10034$Od@c8
                    (case-lambda
                      ((g$sym*$10246$Od@c8 g$subst$10247$Od@c8)
                       ((letrec ((g$f$10248$Od@c8
                                   (case-lambda
                                     ((g$subst$10249$Od@c8)
                                      (if (null? g$subst$10249$Od@c8)
                                        '()
                                        (if (memq
                                              (g$caar$5215$Od@c8
                                                g$subst$10249$Od@c8)
                                              g$sym*$10246$Od@c8)
                                          (g$f$10248$Od@c8
                                            (cdr g$subst$10249$Od@c8))
                                          (cons
                                            (car g$subst$10249$Od@c8)
                                            (g$f$10248$Od@c8
                                              (cdr g$subst$10249$Od@c8)))))))))
                          g$f$10248$Od@c8)
                        g$subst$10247$Od@c8))))
                  (g$remove-dups$10035$Od@c8
                    (case-lambda
                      ((g$ls$10245$Od@c8)
                       (if (null? g$ls$10245$Od@c8)
                         '()
                         (if (memq
                               (car g$ls$10245$Od@c8)
                               (cdr g$ls$10245$Od@c8))
                           (g$remove-dups$10035$Od@c8 (cdr g$ls$10245$Od@c8))
                           (cons
                             (car g$ls$10245$Od@c8)
                             (g$remove-dups$10035$Od@c8
                               (cdr g$ls$10245$Od@c8))))))))
                  (g$parse-library-name$10036$Od@c8
                    (case-lambda
                      ((g$spec$10130$Od@c8)
                       (letrec* ((g$subversion?$10131$Od@c8
                                   (case-lambda
                                     ((g$x$10244$Od@c8)
                                      (if (integer? g$x$10244$Od@c8)
                                        (if (exact? g$x$10244$Od@c8)
                                          (begin '#f (>= g$x$10244$Od@c8 '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$10132$Od@c8
                                   (case-lambda
                                     ((g$x*$10196$Od@c8)
                                      ((case-lambda
                                         ((g$t$10197$Od@c8)
                                          ((case-lambda
                                             ((g$ls/false$10198$Od@c8)
                                              (if (if g$ls/false$10198$Od@c8
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10199$Od@c8)
                                                           (g$subversion?$10131$Od@c8
                                                             (g$syntax->datum$7643$Od@c8
                                                               g$n$10199$Od@c8))))
                                                        g$ls/false$10198$Od@c8))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10200$Od@c8)
                                                     (case-lambda
                                                       ((g$x$10201$Od@c8)
                                                        (= g$x$10201$Od@c8
                                                           (g$syntax->datum$7643$Od@c8
                                                             g$n$10200$Od@c8))))))
                                                  g$ls/false$10198$Od@c8)
                                                ((case-lambda
                                                   ((g$t$10202$Od@c8)
                                                    ((case-lambda
                                                       ((g$ls/false$10203$Od@c8)
                                                        (if (if g$ls/false$10203$Od@c8
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10204$Od@c8
                                                                       g$sub*$10205$Od@c8)
                                                                     (eq? (g$syntax->datum$7643$Od@c8
                                                                            g$p?$10204$Od@c8)
                                                                          'and)))
                                                                  g$ls/false$10203$Od@c8))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10206$Od@c8
                                                                 g$sub*$10207$Od@c8)
                                                               ((case-lambda
                                                                  ((g$p*$10208$Od@c8)
                                                                   (case-lambda
                                                                     ((g$x$10209$Od@c8)
                                                                      (g$for-all$5685$Od@c8
                                                                        (case-lambda
                                                                          ((g$p$10210$Od@c8)
                                                                           (g$p$10210$Od@c8
                                                                             g$x$10209$Od@c8)))
                                                                        g$p*$10208$Od@c8)))))
                                                                (map g$subversion-pred$10132$Od@c8
                                                                     g$sub*$10207$Od@c8))))
                                                            g$ls/false$10203$Od@c8)
                                                          ((case-lambda
                                                             ((g$t$10211$Od@c8)
                                                              ((case-lambda
                                                                 ((g$ls/false$10212$Od@c8)
                                                                  (if (if g$ls/false$10212$Od@c8
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10213$Od@c8
                                                                                 g$sub*$10214$Od@c8)
                                                                               (eq? (g$syntax->datum$7643$Od@c8
                                                                                      g$p?$10213$Od@c8)
                                                                                    'or)))
                                                                            g$ls/false$10212$Od@c8))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10215$Od@c8
                                                                           g$sub*$10216$Od@c8)
                                                                         ((case-lambda
                                                                            ((g$p*$10217$Od@c8)
                                                                             (case-lambda
                                                                               ((g$x$10218$Od@c8)
                                                                                (g$exists$5686$Od@c8
                                                                                  (case-lambda
                                                                                    ((g$p$10219$Od@c8)
                                                                                     (g$p$10219$Od@c8
                                                                                       g$x$10218$Od@c8)))
                                                                                  g$p*$10217$Od@c8)))))
                                                                          (map g$subversion-pred$10132$Od@c8
                                                                               g$sub*$10216$Od@c8))))
                                                                      g$ls/false$10212$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$t$10220$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10221$Od@c8)
                                                                            (if (if g$ls/false$10221$Od@c8
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10222$Od@c8
                                                                                           g$sub$10223$Od@c8)
                                                                                         (eq? (g$syntax->datum$7643$Od@c8
                                                                                                g$p?$10222$Od@c8)
                                                                                              'not)))
                                                                                      g$ls/false$10221$Od@c8))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10224$Od@c8
                                                                                     g$sub$10225$Od@c8)
                                                                                   ((case-lambda
                                                                                      ((g$p$10226$Od@c8)
                                                                                       (case-lambda
                                                                                         ((g$x$10227$Od@c8)
                                                                                          (not (g$p$10226$Od@c8
                                                                                                 g$x$10227$Od@c8))))))
                                                                                    (g$subversion-pred$10132$Od@c8
                                                                                      g$sub$10225$Od@c8))))
                                                                                g$ls/false$10221$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$t$10228$Od@c8)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10229$Od@c8)
                                                                                      (if (if g$ls/false$10229$Od@c8
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10230$Od@c8
                                                                                                     g$n$10231$Od@c8)
                                                                                                   (if (eq? (g$syntax->datum$7643$Od@c8
                                                                                                              g$p?$10230$Od@c8)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10131$Od@c8
                                                                                                         (g$syntax->datum$7643$Od@c8
                                                                                                           g$n$10231$Od@c8)))
                                                                                                     '#f)))
                                                                                                g$ls/false$10229$Od@c8))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10232$Od@c8
                                                                                               g$n$10233$Od@c8)
                                                                                             (case-lambda
                                                                                               ((g$x$10234$Od@c8)
                                                                                                (<= g$x$10234$Od@c8
                                                                                                    (g$syntax->datum$7643$Od@c8
                                                                                                      g$n$10233$Od@c8))))))
                                                                                          g$ls/false$10229$Od@c8)
                                                                                        ((case-lambda
                                                                                           ((g$t$10235$Od@c8)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10236$Od@c8)
                                                                                                (if (if g$ls/false$10236$Od@c8
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10237$Od@c8
                                                                                                               g$n$10238$Od@c8)
                                                                                                             (if (eq? (g$syntax->datum$7643$Od@c8
                                                                                                                        g$p?$10237$Od@c8)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10131$Od@c8
                                                                                                                   g$n$10238$Od@c8))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10236$Od@c8))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10239$Od@c8
                                                                                                         g$n$10240$Od@c8)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10241$Od@c8)
                                                                                                          (>= g$x$10241$Od@c8
                                                                                                              (g$syntax->datum$7643$Od@c8
                                                                                                                g$n$10240$Od@c8))))))
                                                                                                    g$ls/false$10236$Od@c8)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10242$Od@c8)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10243$Od@c8)
                                                                                                          (if g$ls/false$10243$Od@c8
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7640$Od@c8
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10130$Od@c8
                                                                                                                   g$x*$10196$Od@c8)))
                                                                                                              g$ls/false$10243$Od@c8)
                                                                                                            (g$syntax-violation$7640$Od@c8
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10242$Od@c8))))
                                                                                                       (g$syntax-dispatch$7534$Od@c8
                                                                                                         g$t$10242$Od@c8
                                                                                                         '_))))
                                                                                                   g$t$10235$Od@c8))))
                                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                                               g$t$10235$Od@c8
                                                                                               '(any any)))))
                                                                                         g$t$10228$Od@c8))))
                                                                                   (g$syntax-dispatch$7534$Od@c8
                                                                                     g$t$10228$Od@c8
                                                                                     '(any any)))))
                                                                               g$t$10220$Od@c8))))
                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                           g$t$10220$Od@c8
                                                                           '(any any)))))
                                                                     g$t$10211$Od@c8))))
                                                               (g$syntax-dispatch$7534$Od@c8
                                                                 g$t$10211$Od@c8
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10202$Od@c8))))
                                                     (g$syntax-dispatch$7534$Od@c8
                                                       g$t$10202$Od@c8
                                                       '(any . each-any)))))
                                                 g$t$10197$Od@c8))))
                                           (g$syntax-dispatch$7534$Od@c8
                                             g$t$10197$Od@c8
                                             'any))))
                                       g$x*$10196$Od@c8))))
                                 (g$version-pred$10133$Od@c8
                                   (case-lambda
                                     ((g$x*$10156$Od@c8)
                                      ((case-lambda
                                         ((g$t$10157$Od@c8)
                                          ((case-lambda
                                             ((g$ls/false$10158$Od@c8)
                                              (if g$ls/false$10158$Od@c8
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10159$Od@c8)
                                                        '#t))))
                                                  g$ls/false$10158$Od@c8)
                                                ((case-lambda
                                                   ((g$t$10160$Od@c8)
                                                    ((case-lambda
                                                       ((g$ls/false$10161$Od@c8)
                                                        (if (if g$ls/false$10161$Od@c8
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10162$Od@c8
                                                                       g$ver*$10163$Od@c8)
                                                                     (eq? (g$syntax->datum$7643$Od@c8
                                                                            g$c$10162$Od@c8)
                                                                          'and)))
                                                                  g$ls/false$10161$Od@c8))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10164$Od@c8
                                                                 g$ver*$10165$Od@c8)
                                                               ((case-lambda
                                                                  ((g$p*$10166$Od@c8)
                                                                   (case-lambda
                                                                     ((g$x$10167$Od@c8)
                                                                      (g$for-all$5685$Od@c8
                                                                        (case-lambda
                                                                          ((g$p$10168$Od@c8)
                                                                           (g$p$10168$Od@c8
                                                                             g$x$10167$Od@c8)))
                                                                        g$p*$10166$Od@c8)))))
                                                                (map g$version-pred$10133$Od@c8
                                                                     g$ver*$10165$Od@c8))))
                                                            g$ls/false$10161$Od@c8)
                                                          ((case-lambda
                                                             ((g$t$10169$Od@c8)
                                                              ((case-lambda
                                                                 ((g$ls/false$10170$Od@c8)
                                                                  (if (if g$ls/false$10170$Od@c8
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10171$Od@c8
                                                                                 g$ver*$10172$Od@c8)
                                                                               (eq? (g$syntax->datum$7643$Od@c8
                                                                                      g$c$10171$Od@c8)
                                                                                    'or)))
                                                                            g$ls/false$10170$Od@c8))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10173$Od@c8
                                                                           g$ver*$10174$Od@c8)
                                                                         ((case-lambda
                                                                            ((g$p*$10175$Od@c8)
                                                                             (case-lambda
                                                                               ((g$x$10176$Od@c8)
                                                                                (g$exists$5686$Od@c8
                                                                                  (case-lambda
                                                                                    ((g$p$10177$Od@c8)
                                                                                     (g$p$10177$Od@c8
                                                                                       g$x$10176$Od@c8)))
                                                                                  g$p*$10175$Od@c8)))))
                                                                          (map g$version-pred$10133$Od@c8
                                                                               g$ver*$10174$Od@c8))))
                                                                      g$ls/false$10170$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$t$10178$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10179$Od@c8)
                                                                            (if (if g$ls/false$10179$Od@c8
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10180$Od@c8
                                                                                           g$ver$10181$Od@c8)
                                                                                         (eq? (g$syntax->datum$7643$Od@c8
                                                                                                g$c$10180$Od@c8)
                                                                                              'not)))
                                                                                      g$ls/false$10179$Od@c8))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10182$Od@c8
                                                                                     g$ver$10183$Od@c8)
                                                                                   ((case-lambda
                                                                                      ((g$p$10184$Od@c8)
                                                                                       (case-lambda
                                                                                         ((g$x$10185$Od@c8)
                                                                                          (not (g$p$10184$Od@c8
                                                                                                 g$x$10185$Od@c8))))))
                                                                                    (g$version-pred$10133$Od@c8
                                                                                      g$ver$10183$Od@c8))))
                                                                                g$ls/false$10179$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$t$10186$Od@c8)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10187$Od@c8)
                                                                                      (if g$ls/false$10187$Od@c8
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10188$Od@c8)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10189$Od@c8)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10190$Od@c8)
                                                                                                    ((letrec ((g$f$10191$Od@c8
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10192$Od@c8
                                                                                                                     g$x$10193$Od@c8)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10192$Od@c8)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10193$Od@c8)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10192$Od@c8)
                                                                                                                            (car g$x$10193$Od@c8))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10191$Od@c8
                                                                                                                             (cdr g$p*$10192$Od@c8)
                                                                                                                             (cdr g$x$10193$Od@c8)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10191$Od@c8)
                                                                                                     g$p*$10189$Od@c8
                                                                                                     g$x$10190$Od@c8)))))
                                                                                              (map g$subversion-pred$10132$Od@c8
                                                                                                   g$sub*$10188$Od@c8))))
                                                                                          g$ls/false$10187$Od@c8)
                                                                                        ((case-lambda
                                                                                           ((g$t$10194$Od@c8)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10195$Od@c8)
                                                                                                (if g$ls/false$10195$Od@c8
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7640$Od@c8
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10130$Od@c8
                                                                                                         g$x*$10156$Od@c8)))
                                                                                                    g$ls/false$10195$Od@c8)
                                                                                                  (g$syntax-violation$7640$Od@c8
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10194$Od@c8))))
                                                                                             (g$syntax-dispatch$7534$Od@c8
                                                                                               g$t$10194$Od@c8
                                                                                               '_))))
                                                                                         g$t$10186$Od@c8))))
                                                                                   (g$syntax-dispatch$7534$Od@c8
                                                                                     g$t$10186$Od@c8
                                                                                     'each-any))))
                                                                               g$t$10178$Od@c8))))
                                                                         (g$syntax-dispatch$7534$Od@c8
                                                                           g$t$10178$Od@c8
                                                                           '(any any)))))
                                                                     g$t$10169$Od@c8))))
                                                               (g$syntax-dispatch$7534$Od@c8
                                                                 g$t$10169$Od@c8
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10160$Od@c8))))
                                                     (g$syntax-dispatch$7534$Od@c8
                                                       g$t$10160$Od@c8
                                                       '(any . each-any)))))
                                                 g$t$10157$Od@c8))))
                                           (g$syntax-dispatch$7534$Od@c8
                                             g$t$10157$Od@c8
                                             '()))))
                                       g$x*$10156$Od@c8)))))
                         ((letrec ((g$f$10134$Od@c8
                                     (case-lambda
                                       ((g$x$10135$Od@c8)
                                        ((case-lambda
                                           ((g$t$10136$Od@c8)
                                            ((case-lambda
                                               ((g$ls/false$10137$Od@c8)
                                                (if g$ls/false$10137$Od@c8
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10138$Od@c8)
                                                       (values
                                                         '()
                                                         (g$version-pred$10133$Od@c8
                                                           g$version-spec*$10138$Od@c8))))
                                                    g$ls/false$10137$Od@c8)
                                                  ((case-lambda
                                                     ((g$t$10139$Od@c8)
                                                      ((case-lambda
                                                         ((g$ls/false$10140$Od@c8)
                                                          (if (if g$ls/false$10140$Od@c8
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10141$Od@c8
                                                                         g$x*$10142$Od@c8)
                                                                       (g$idsyn?$10029$Od@c8
                                                                         g$x$10141$Od@c8)))
                                                                    g$ls/false$10140$Od@c8))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10143$Od@c8
                                                                   g$x*$10144$Od@c8)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10134$Od@c8
                                                                        g$x*$10144$Od@c8)))
                                                                   (case-lambda
                                                                     ((g$name$10147$Od@c8
                                                                        g$pred$10148$Od@c8)
                                                                      ((case-lambda
                                                                         ((g$pred$10149$Od@c8
                                                                            g$name$10150$Od@c8)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7643$Od@c8
                                                                                g$x$10143$Od@c8)
                                                                              g$name$10150$Od@c8)
                                                                            g$pred$10149$Od@c8)))
                                                                       g$pred$10148$Od@c8
                                                                       g$name$10147$Od@c8))))))
                                                              g$ls/false$10140$Od@c8)
                                                            ((case-lambda
                                                               ((g$t$10151$Od@c8)
                                                                ((case-lambda
                                                                   ((g$ls/false$10152$Od@c8)
                                                                    (if g$ls/false$10152$Od@c8
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10153$Od@c8)
                                                                                '#t)))))
                                                                        g$ls/false$10152$Od@c8)
                                                                      ((case-lambda
                                                                         ((g$t$10154$Od@c8)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10155$Od@c8)
                                                                              (if g$ls/false$10155$Od@c8
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7640$Od@c8
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10130$Od@c8)))
                                                                                  g$ls/false$10155$Od@c8)
                                                                                (g$syntax-violation$7640$Od@c8
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10154$Od@c8))))
                                                                           (g$syntax-dispatch$7534$Od@c8
                                                                             g$t$10154$Od@c8
                                                                             '_))))
                                                                       g$t$10151$Od@c8))))
                                                                 (g$syntax-dispatch$7534$Od@c8
                                                                   g$t$10151$Od@c8
                                                                   '()))))
                                                             g$t$10139$Od@c8))))
                                                       (g$syntax-dispatch$7534$Od@c8
                                                         g$t$10139$Od@c8
                                                         '(any . any)))))
                                                   g$t$10136$Od@c8))))
                                             (g$syntax-dispatch$7534$Od@c8
                                               g$t$10136$Od@c8
                                               '(each-any)))))
                                         g$x$10135$Od@c8)))))
                            g$f$10134$Od@c8)
                          g$spec$10130$Od@c8)))))
                  (g$import-library$10037$Od@c8
                    (case-lambda
                      ((g$spec*$10122$Od@c8)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10036$Od@c8
                              g$spec*$10122$Od@c8)))
                         (case-lambda
                           ((g$name$10125$Od@c8 g$pred$10126$Od@c8)
                            ((case-lambda
                               ((g$pred$10127$Od@c8 g$name$10128$Od@c8)
                                (begin
                                  (if (null? g$name$10128$Od@c8)
                                    (g$syntax-violation$7640$Od@c8
                                      'import
                                      '"empty library name"
                                      g$spec*$10122$Od@c8)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10129$Od@c8)
                                      (begin
                                        (if g$lib$10129$Od@c8
                                          (void)
                                          (g$syntax-violation$7640$Od@c8
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10128$Od@c8))
                                        (if (g$pred$10127$Od@c8
                                              (g$library-version$7024$Od@c8
                                                g$lib$10129$Od@c8))
                                          (void)
                                          (g$syntax-violation$7640$Od@c8
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10122$Od@c8
                                            g$lib$10129$Od@c8))
                                        ((g$imp-collector$7588$Od@c8)
                                         g$lib$10129$Od@c8)
                                        (g$library-subst$7028$Od@c8
                                          g$lib$10129$Od@c8))))
                                   (g$find-library-by-name$7064$Od@c8
                                     g$name$10128$Od@c8)))))
                             g$pred$10126$Od@c8
                             g$name$10125$Od@c8)))))))
                  (g$get-import$10038$Od@c8
                    (case-lambda
                      ((g$spec$10051$Od@c8)
                       ((case-lambda
                          ((g$t$10052$Od@c8)
                           ((case-lambda
                              ((g$ls/false$10053$Od@c8)
                               (if (if g$ls/false$10053$Od@c8
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10054$Od@c8 g$x*$10055$Od@c8)
                                            (not (memq
                                                   (g$syntax->datum$7643$Od@c8
                                                     g$x$10054$Od@c8)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10053$Od@c8))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10056$Od@c8 g$x*$10057$Od@c8)
                                      (g$import-library$10037$Od@c8
                                        (cons
                                          g$x$10056$Od@c8
                                          g$x*$10057$Od@c8))))
                                   g$ls/false$10053$Od@c8)
                                 ((case-lambda
                                    ((g$t$10058$Od@c8)
                                     ((case-lambda
                                        ((g$ls/false$10059$Od@c8)
                                         (if (if g$ls/false$10059$Od@c8
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10060$Od@c8
                                                        g$isp$10061$Od@c8
                                                        g$old*$10062$Od@c8
                                                        g$new*$10063$Od@c8)
                                                      (if (eq? (g$syntax->datum$7643$Od@c8
                                                                 g$rename$10060$Od@c8)
                                                               'rename)
                                                        (if (g$for-all$5685$Od@c8
                                                              g$idsyn?$10029$Od@c8
                                                              g$old*$10062$Od@c8)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5685$Od@c8
                                                              g$idsyn?$10029$Od@c8
                                                              g$new*$10063$Od@c8))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10059$Od@c8))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10064$Od@c8
                                                  g$isp$10065$Od@c8
                                                  g$old*$10066$Od@c8
                                                  g$new*$10067$Od@c8)
                                                ((case-lambda
                                                   ((g$subst$10068$Od@c8
                                                      g$old*$10069$Od@c8
                                                      g$new*$10070$Od@c8)
                                                    ((case-lambda
                                                       ((g$old-label*$10071$Od@c8)
                                                        ((case-lambda
                                                           ((g$subst$10072$Od@c8)
                                                            (g$merge-substs$10031$Od@c8
                                                              (map cons
                                                                   g$new*$10070$Od@c8
                                                                   g$old-label*$10071$Od@c8)
                                                              g$subst$10072$Od@c8)))
                                                         (g$rem*$10034$Od@c8
                                                           g$old*$10069$Od@c8
                                                           g$subst$10068$Od@c8))))
                                                     (g$find*$10033$Od@c8
                                                       g$old*$10069$Od@c8
                                                       g$subst$10068$Od@c8))))
                                                 (g$get-import$10038$Od@c8
                                                   g$isp$10065$Od@c8)
                                                 (map g$syntax->datum$7643$Od@c8
                                                      g$old*$10066$Od@c8)
                                                 (map g$syntax->datum$7643$Od@c8
                                                      g$new*$10067$Od@c8))))
                                             g$ls/false$10059$Od@c8)
                                           ((case-lambda
                                              ((g$t$10073$Od@c8)
                                               ((case-lambda
                                                  ((g$ls/false$10074$Od@c8)
                                                   (if (if g$ls/false$10074$Od@c8
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10075$Od@c8
                                                                  g$isp$10076$Od@c8
                                                                  g$sym*$10077$Od@c8)
                                                                (if (eq? (g$syntax->datum$7643$Od@c8
                                                                           g$except$10075$Od@c8)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5685$Od@c8
                                                                      g$idsyn?$10029$Od@c8
                                                                      g$sym*$10077$Od@c8))
                                                                  '#f)))
                                                             g$ls/false$10074$Od@c8))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10078$Od@c8
                                                            g$isp$10079$Od@c8
                                                            g$sym*$10080$Od@c8)
                                                          ((case-lambda
                                                             ((g$subst$10081$Od@c8)
                                                              (g$rem*$10034$Od@c8
                                                                (map g$syntax->datum$7643$Od@c8
                                                                     g$sym*$10080$Od@c8)
                                                                g$subst$10081$Od@c8)))
                                                           (g$get-import$10038$Od@c8
                                                             g$isp$10079$Od@c8))))
                                                       g$ls/false$10074$Od@c8)
                                                     ((case-lambda
                                                        ((g$t$10082$Od@c8)
                                                         ((case-lambda
                                                            ((g$ls/false$10083$Od@c8)
                                                             (if (if g$ls/false$10083$Od@c8
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10084$Od@c8
                                                                            g$isp$10085$Od@c8
                                                                            g$sym*$10086$Od@c8)
                                                                          (if (eq? (g$syntax->datum$7643$Od@c8
                                                                                     g$only$10084$Od@c8)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5685$Od@c8
                                                                                g$idsyn?$10029$Od@c8
                                                                                g$sym*$10086$Od@c8))
                                                                            '#f)))
                                                                       g$ls/false$10083$Od@c8))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10087$Od@c8
                                                                      g$isp$10088$Od@c8
                                                                      g$sym*$10089$Od@c8)
                                                                    ((case-lambda
                                                                       ((g$subst$10090$Od@c8
                                                                          g$sym*$10091$Od@c8)
                                                                        ((case-lambda
                                                                           ((g$sym*$10092$Od@c8)
                                                                            ((case-lambda
                                                                               ((g$lab*$10093$Od@c8)
                                                                                (map cons
                                                                                     g$sym*$10092$Od@c8
                                                                                     g$lab*$10093$Od@c8)))
                                                                             (g$find*$10033$Od@c8
                                                                               g$sym*$10092$Od@c8
                                                                               g$subst$10090$Od@c8))))
                                                                         (g$remove-dups$10035$Od@c8
                                                                           g$sym*$10091$Od@c8))))
                                                                     (g$get-import$10038$Od@c8
                                                                       g$isp$10088$Od@c8)
                                                                     (map g$syntax->datum$7643$Od@c8
                                                                          g$sym*$10089$Od@c8))))
                                                                 g$ls/false$10083$Od@c8)
                                                               ((case-lambda
                                                                  ((g$t$10094$Od@c8)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10095$Od@c8)
                                                                       (if (if g$ls/false$10095$Od@c8
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10096$Od@c8
                                                                                      g$isp$10097$Od@c8
                                                                                      g$p$10098$Od@c8)
                                                                                    (if (eq? (g$syntax->datum$7643$Od@c8
                                                                                               g$prefix$10096$Od@c8)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10029$Od@c8
                                                                                          g$p$10098$Od@c8))
                                                                                      '#f)))
                                                                                 g$ls/false$10095$Od@c8))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10099$Od@c8
                                                                                g$isp$10100$Od@c8
                                                                                g$p$10101$Od@c8)
                                                                              ((case-lambda
                                                                                 ((g$subst$10102$Od@c8
                                                                                    g$prefix$10103$Od@c8)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10104$Od@c8)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10103$Od@c8
                                                                                                (symbol->string
                                                                                                  (car g$x$10104$Od@c8))))
                                                                                            (cdr g$x$10104$Od@c8))))
                                                                                       g$subst$10102$Od@c8)))
                                                                               (g$get-import$10038$Od@c8
                                                                                 g$isp$10100$Od@c8)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7643$Od@c8
                                                                                   g$p$10101$Od@c8)))))
                                                                           g$ls/false$10095$Od@c8)
                                                                         ((case-lambda
                                                                            ((g$t$10105$Od@c8)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10106$Od@c8)
                                                                                 (if (if g$ls/false$10106$Od@c8
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10107$Od@c8
                                                                                                g$spec*$10108$Od@c8)
                                                                                              (eq? (g$syntax->datum$7643$Od@c8
                                                                                                     g$library$10107$Od@c8)
                                                                                                   'library)))
                                                                                           g$ls/false$10106$Od@c8))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10109$Od@c8
                                                                                          g$spec*$10110$Od@c8)
                                                                                        (g$import-library$10037$Od@c8
                                                                                          g$spec*$10110$Od@c8)))
                                                                                     g$ls/false$10106$Od@c8)
                                                                                   ((case-lambda
                                                                                      ((g$t$10111$Od@c8)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10112$Od@c8)
                                                                                           (if (if g$ls/false$10112$Od@c8
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10113$Od@c8
                                                                                                          g$isp$10114$Od@c8
                                                                                                          g$rest$10115$Od@c8)
                                                                                                        (eq? (g$syntax->datum$7643$Od@c8
                                                                                                               g$for$10113$Od@c8)
                                                                                                             'for)))
                                                                                                     g$ls/false$10112$Od@c8))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10116$Od@c8
                                                                                                    g$isp$10117$Od@c8
                                                                                                    g$rest$10118$Od@c8)
                                                                                                  (g$get-import$10038$Od@c8
                                                                                                    g$isp$10117$Od@c8)))
                                                                                               g$ls/false$10112$Od@c8)
                                                                                             ((case-lambda
                                                                                                ((g$t$10119$Od@c8)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10120$Od@c8)
                                                                                                     (if g$ls/false$10120$Od@c8
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10121$Od@c8)
                                                                                                            (g$syntax-violation$7640$Od@c8
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10121$Od@c8)))
                                                                                                         g$ls/false$10120$Od@c8)
                                                                                                       (g$syntax-violation$7640$Od@c8
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10119$Od@c8))))
                                                                                                  (g$syntax-dispatch$7534$Od@c8
                                                                                                    g$t$10119$Od@c8
                                                                                                    'any))))
                                                                                              g$t$10111$Od@c8))))
                                                                                        (g$syntax-dispatch$7534$Od@c8
                                                                                          g$t$10111$Od@c8
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10105$Od@c8))))
                                                                              (g$syntax-dispatch$7534$Od@c8
                                                                                g$t$10105$Od@c8
                                                                                '(any each-any)))))
                                                                          g$t$10094$Od@c8))))
                                                                    (g$syntax-dispatch$7534$Od@c8
                                                                      g$t$10094$Od@c8
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10082$Od@c8))))
                                                          (g$syntax-dispatch$7534$Od@c8
                                                            g$t$10082$Od@c8
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10073$Od@c8))))
                                                (g$syntax-dispatch$7534$Od@c8
                                                  g$t$10073$Od@c8
                                                  '(any any . each-any)))))
                                            g$t$10058$Od@c8))))
                                      (g$syntax-dispatch$7534$Od@c8
                                        g$t$10058$Od@c8
                                        '(any any . #(each (any any)))))))
                                  g$t$10052$Od@c8))))
                            (g$syntax-dispatch$7534$Od@c8
                              g$t$10052$Od@c8
                              '(any . each-any)))))
                        g$spec$10051$Od@c8))))
                  (g$add-imports!$10039$Od@c8
                    (case-lambda
                      ((g$imp$10043$Od@c8 g$h$10044$Od@c8)
                       ((case-lambda
                          ((g$subst$10045$Od@c8)
                           (for-each
                             (case-lambda
                               ((g$x$10046$Od@c8)
                                ((case-lambda
                                   ((g$name$10047$Od@c8 g$label$10048$Od@c8)
                                    ((case-lambda
                                       ((g$t$10049$Od@c8)
                                        (if g$t$10049$Od@c8
                                          ((case-lambda
                                             ((g$l$10050$Od@c8)
                                              (if (eq? g$l$10050$Od@c8
                                                       g$label$10048$Od@c8)
                                                (void)
                                                (g$dup-error$10030$Od@c8
                                                  g$name$10047$Od@c8))))
                                           g$t$10049$Od@c8)
                                          (g$hashtable-set!$5482$Od@c8
                                            g$h$10044$Od@c8
                                            g$name$10047$Od@c8
                                            g$label$10048$Od@c8))))
                                     (g$hashtable-ref$5481$Od@c8
                                       g$h$10044$Od@c8
                                       g$name$10047$Od@c8
                                       '#f))))
                                 (car g$x$10046$Od@c8)
                                 (cdr g$x$10046$Od@c8))))
                             g$subst$10045$Od@c8)))
                        (g$get-import$10038$Od@c8 g$imp$10043$Od@c8))))))
          ((letrec ((g$f$10040$Od@c8
                      (case-lambda
                        ((g$imp*$10041$Od@c8 g$h$10042$Od@c8)
                         (if (null? g$imp*$10041$Od@c8)
                           (hashtable-entries g$h$10042$Od@c8)
                           (begin
                             (g$add-imports!$10039$Od@c8
                               (car g$imp*$10041$Od@c8)
                               g$h$10042$Od@c8)
                             (g$f$10040$Od@c8
                               (cdr g$imp*$10041$Od@c8)
                               g$h$10042$Od@c8)))))))
             g$f$10040$Od@c8)
           g$imp*$10028$Od@c8
           (g$make-eq-hashtable$5478$Od@c8))))))
   (g$make-top-rib$7584$Od@c8
     g$make-top-rib$11016$Od@c8
     (case-lambda
       ((g$names$10289$Od@c8 g$labels$10290$Od@c8)
        ((case-lambda
           ((g$rib$10291$Od@c8)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10292$Od@c8 g$label$10293$Od@c8)
                   (begin
                     (if (symbol? g$name$10292$Od@c8)
                       (void)
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10292$Od@c8))
                     (g$extend-rib!$7220$Od@c8
                       g$rib$10291$Od@c8
                       (g$make-stx$7229$Od@c8
                         g$name$10292$Od@c8
                         g$top-mark*$7198$Od@c8
                         '()
                         '())
                       g$label$10293$Od@c8))))
                g$names$10289$Od@c8
                g$labels$10290$Od@c8)
              g$rib$10291$Od@c8)))
         (g$make-empty-rib$7219$Od@c8)))))
   (g$make-collector$7585$Od@c8
     g$make-collector$11017$Od@c8
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10294$Od@c8)
            (case-lambda
              (() g$ls$10294$Od@c8)
              ((g$x$10295$Od@c8)
               (set! g$ls$10294$Od@c8
                 (g$set-cons$7195$Od@c8 g$x$10295$Od@c8 g$ls$10294$Od@c8))))))
         '()))))
   (g$inv-collector$7586$Od@c8
     g$inv-collector$11018$Od@c8
     (g$make-parameter$6525$Od@c8
       (case-lambda
         (g$args$10296$Od@c8
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10297$Od@c8)
          (begin
            (if (procedure? g$x$10297$Od@c8)
              (void)
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10297$Od@c8))
            g$x$10297$Od@c8)))))
   (g$vis-collector$7587$Od@c8
     g$vis-collector$11019$Od@c8
     (g$make-parameter$6525$Od@c8
       (case-lambda
         (g$args$10298$Od@c8
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10299$Od@c8)
          (begin
            (if (procedure? g$x$10299$Od@c8)
              (void)
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10299$Od@c8))
            g$x$10299$Od@c8)))))
   (g$imp-collector$7588$Od@c8
     g$imp-collector$11020$Od@c8
     (g$make-parameter$6525$Od@c8
       (case-lambda
         (g$args$10300$Od@c8
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10301$Od@c8)
          (begin
            (if (procedure? g$x$10301$Od@c8)
              (void)
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10301$Od@c8))
            g$x$10301$Od@c8)))))
   (g$chi-library-internal$7589$Od@c8
     g$chi-library-internal$11021$Od@c8
     (case-lambda
       ((g$e*$10302$Od@c8 g$rib$10303$Od@c8 g$top?$10304$Od@c8)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7578$Od@c8
               g$e*$10302$Od@c8
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10303$Od@c8
               g$top?$10304$Od@c8)))
          (case-lambda
            ((g$e*$10312$Od@c8
               g$r$10313$Od@c8
               g$mr$10314$Od@c8
               g$lex*$10315$Od@c8
               g$rhs*$10316$Od@c8
               g$mod**$10317$Od@c8
               g$_kwd*$10318$Od@c8)
             ((case-lambda
                ((g$_kwd*$10319$Od@c8
                   g$mod**$10320$Od@c8
                   g$rhs*$10321$Od@c8
                   g$lex*$10322$Od@c8
                   g$mr$10323$Od@c8
                   g$r$10324$Od@c8
                   g$e*$10325$Od@c8)
                 (values
                   (append
                     (apply append (reverse g$mod**$10320$Od@c8))
                     g$e*$10325$Od@c8)
                   g$r$10324$Od@c8
                   g$mr$10323$Od@c8
                   (reverse g$lex*$10322$Od@c8)
                   (reverse g$rhs*$10321$Od@c8))))
              g$_kwd*$10318$Od@c8
              g$mod**$10317$Od@c8
              g$rhs*$10316$Od@c8
              g$lex*$10315$Od@c8
              g$mr$10314$Od@c8
              g$r$10313$Od@c8
              g$e*$10312$Od@c8)))))))
   (g$chi-interaction-expr$7590$Od@c8
     g$chi-interaction-expr$11022$Od@c8
     (case-lambda
       ((g$e$10326$Od@c8 g$rib$10327$Od@c8 g$r$10328$Od@c8)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7578$Od@c8
               (list g$e$10326$Od@c8)
               g$r$10328$Od@c8
               g$r$10328$Od@c8
               '()
               '()
               '()
               '()
               g$rib$10327$Od@c8
               '#t)))
          (case-lambda
            ((g$e*$10336$Od@c8
               g$r$10337$Od@c8
               g$mr$10338$Od@c8
               g$lex*$10339$Od@c8
               g$rhs*$10340$Od@c8
               g$mod**$10341$Od@c8
               g$_kwd*$10342$Od@c8)
             ((case-lambda
                ((g$_kwd*$10343$Od@c8
                   g$mod**$10344$Od@c8
                   g$rhs*$10345$Od@c8
                   g$lex*$10346$Od@c8
                   g$mr$10347$Od@c8
                   g$r$10348$Od@c8
                   g$e*$10349$Od@c8)
                 ((case-lambda
                    ((g$e*$10350$Od@c8)
                     ((case-lambda
                        ((g$e$10351$Od@c8)
                         (values g$e$10351$Od@c8 g$r$10348$Od@c8)))
                      (if (null? g$e*$10350$Od@c8)
                        (g$build-void$7191$Od@c8)
                        (if (null? (cdr g$e*$10350$Od@c8))
                          (car g$e*$10350$Od@c8)
                          (g$build-sequence$7190$Od@c8
                            '#f
                            g$e*$10350$Od@c8))))))
                  (g$expand-interaction-rhs*/init*$7559$Od@c8
                    (reverse g$lex*$10346$Od@c8)
                    (reverse g$rhs*$10345$Od@c8)
                    (append
                      (apply append (reverse g$mod**$10344$Od@c8))
                      g$e*$10349$Od@c8)
                    g$r$10348$Od@c8
                    g$mr$10347$Od@c8))))
              g$_kwd*$10342$Od@c8
              g$mod**$10341$Od@c8
              g$rhs*$10340$Od@c8
              g$lex*$10339$Od@c8
              g$mr$10338$Od@c8
              g$r$10337$Od@c8
              g$e*$10336$Od@c8)))))))
   (g$library-body-expander$7591$Od@c8
     g$library-body-expander$11023$Od@c8
     (case-lambda
       ((g$name$10352$Od@c8
          g$exp*$10353$Od@c8
          g$imp*$10354$Od@c8
          g$b*$10355$Od@c8
          g$top?$10356$Od@c8)
        (letrec* ((g$itc$10357$Od@c8 (g$make-collector$7585$Od@c8)))
          ((case-lambda
             ((g$imp-collector$10362$Od@c8
                g$top-level-context$10363$Od@c8
                g$imp-collector$10364$Od@c8
                g$top-level-context$10365$Od@c8)
              ((case-lambda
                 ((g$swap$10366$Od@c8)
                  (dynamic-wind
                    g$swap$10366$Od@c8
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (() (g$parse-exports$7580$Od@c8 g$exp*$10353$Od@c8)))
                         (case-lambda
                           ((g$exp-int*$10369$Od@c8 g$exp-ext*$10370$Od@c8)
                            ((case-lambda
                               ((g$exp-ext*$10371$Od@c8 g$exp-int*$10372$Od@c8)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7583$Od@c8
                                       g$imp*$10354$Od@c8)))
                                  (case-lambda
                                    ((g$subst-names$10375$Od@c8
                                       g$subst-labels$10376$Od@c8)
                                     ((case-lambda
                                        ((g$subst-labels$10377$Od@c8
                                           g$subst-names$10378$Od@c8)
                                         ((case-lambda
                                            ((g$rib$10379$Od@c8)
                                             ((case-lambda
                                                ((g$b*$10380$Od@c8
                                                   g$rtc$10381$Od@c8
                                                   g$vtc$10382$Od@c8)
                                                 ((case-lambda
                                                    ((g$inv-collector$10387$Od@c8
                                                       g$vis-collector$10388$Od@c8
                                                       g$inv-collector$10389$Od@c8
                                                       g$vis-collector$10390$Od@c8)
                                                     ((case-lambda
                                                        ((g$swap$10391$Od@c8)
                                                         (dynamic-wind
                                                           g$swap$10391$Od@c8
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7589$Od@c8
                                                                     g$b*$10380$Od@c8
                                                                     g$rib$10379$Od@c8
                                                                     g$top?$10356$Od@c8)))
                                                                (case-lambda
                                                                  ((g$init*$10397$Od@c8
                                                                     g$r$10398$Od@c8
                                                                     g$mr$10399$Od@c8
                                                                     g$lex*$10400$Od@c8
                                                                     g$rhs*$10401$Od@c8)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10402$Od@c8
                                                                         g$lex*$10403$Od@c8
                                                                         g$mr$10404$Od@c8
                                                                         g$r$10405$Od@c8
                                                                         g$init*$10406$Od@c8)
                                                                       (begin
                                                                         (g$seal-rib!$7222$Od@c8
                                                                           g$rib$10379$Od@c8)
                                                                         ((case-lambda
                                                                            ((g$init*$10407$Od@c8)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10408$Od@c8)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7223$Od@c8
                                                                                         g$rib$10379$Od@c8)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10409$Od@c8
                                                                                             g$export-subst$10410$Od@c8)
                                                                                           (letrec* ((g$errstr$10411$Od@c8
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7632$Od@c8
                                                                                                    g$lex*$10403$Od@c8
                                                                                                    g$loc*$10409$Od@c8
                                                                                                    g$r$10405$Od@c8)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10415$Od@c8
                                                                                                    g$global*$10416$Od@c8
                                                                                                    g$macro*$10417$Od@c8)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10418$Od@c8
                                                                                                        g$global*$10419$Od@c8
                                                                                                        g$export-env$10420$Od@c8)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10421$Od@c8)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10422$Od@c8
                                                                                                                   g$label$10423$Od@c8)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10424$Od@c8)
                                                                                                                     (if g$p$10424$Od@c8
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10425$Od@c8)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10426$Od@c8)
                                                                                                                               (if (eq? g$type$10426$Od@c8
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7640$Od@c8
                                                                                                                                   'export
                                                                                                                                   g$errstr$10411$Od@c8
                                                                                                                                   g$name$10422$Od@c8)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10425$Od@c8))))
                                                                                                                        (cdr g$p$10424$Od@c8))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10423$Od@c8
                                                                                                                    g$export-env$10420$Od@c8))))
                                                                                                              (car g$s$10421$Od@c8)
                                                                                                              (cdr g$s$10421$Od@c8))))
                                                                                                          g$export-subst$10410$Od@c8)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10427$Od@c8
                                                                                                              g$invoke-definitions$10428$Od@c8)
                                                                                                            (values
                                                                                                              (g$itc$10357$Od@c8)
                                                                                                              (g$rtc$10381$Od@c8)
                                                                                                              (g$vtc$10382$Od@c8)
                                                                                                              (g$build-sequence$7190$Od@c8
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10428$Od@c8
                                                                                                                  (list
                                                                                                                    g$invoke-body$10427$Od@c8)))
                                                                                                              g$macro*$10418$Od@c8
                                                                                                              g$export-subst$10410$Od@c8
                                                                                                              g$export-env$10420$Od@c8)))
                                                                                                         (g$build-library-letrec*$7194$Od@c8
                                                                                                           '#f
                                                                                                           g$name$10352$Od@c8
                                                                                                           g$lex*$10403$Od@c8
                                                                                                           g$loc*$10409$Od@c8
                                                                                                           g$rhs*$10408$Od@c8
                                                                                                           (if (null?
                                                                                                                 g$init*$10407$Od@c8)
                                                                                                             (g$build-void$7191$Od@c8)
                                                                                                             (g$build-sequence$7190$Od@c8
                                                                                                               '#f
                                                                                                               g$init*$10407$Od@c8)))
                                                                                                         (map g$build-global-define$7186$Od@c8
                                                                                                              (map cdr
                                                                                                                   g$global*$10419$Od@c8))))))
                                                                                                   g$macro*$10417$Od@c8
                                                                                                   g$global*$10416$Od@c8
                                                                                                   g$export-env$10415$Od@c8)))))))
                                                                                        (map g$gen-global$7201$Od@c8
                                                                                             g$lex*$10403$Od@c8)
                                                                                        (g$make-export-subst$7631$Od@c8
                                                                                          g$exp-int*$10372$Od@c8
                                                                                          g$exp-ext*$10371$Od@c8
                                                                                          g$rib$10379$Od@c8))))))))
                                                                              (g$chi-rhs*$7560$Od@c8
                                                                                g$rhs*$10402$Od@c8
                                                                                g$r$10405$Od@c8
                                                                                g$mr$10404$Od@c8))))
                                                                          (g$chi-expr*$7550$Od@c8
                                                                            g$init*$10406$Od@c8
                                                                            g$r$10405$Od@c8
                                                                            g$mr$10404$Od@c8)))))
                                                                    g$rhs*$10401$Od@c8
                                                                    g$lex*$10400$Od@c8
                                                                    g$mr$10399$Od@c8
                                                                    g$r$10398$Od@c8
                                                                    g$init*$10397$Od@c8))))))
                                                           g$swap$10391$Od@c8)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10429$Od@c8)
                                                               (begin
                                                                 (g$inv-collector$10387$Od@c8
                                                                   g$inv-collector$10389$Od@c8)
                                                                 (set! g$inv-collector$10389$Od@c8
                                                                   g$t$10429$Od@c8))))
                                                            (g$inv-collector$10387$Od@c8))
                                                           ((case-lambda
                                                              ((g$t$10430$Od@c8)
                                                               (begin
                                                                 (g$vis-collector$10388$Od@c8
                                                                   g$vis-collector$10390$Od@c8)
                                                                 (set! g$vis-collector$10390$Od@c8
                                                                   g$t$10430$Od@c8))))
                                                            (g$vis-collector$10388$Od@c8))))))))
                                                  g$inv-collector$7586$Od@c8
                                                  g$vis-collector$7587$Od@c8
                                                  g$rtc$10381$Od@c8
                                                  g$vtc$10382$Od@c8)))
                                              (map (case-lambda
                                                     ((g$x$10431$Od@c8)
                                                      (g$make-stx$7229$Od@c8
                                                        g$x$10431$Od@c8
                                                        g$top-mark*$7198$Od@c8
                                                        (list g$rib$10379$Od@c8)
                                                        '())))
                                                   g$b*$10355$Od@c8)
                                              (g$make-collector$7585$Od@c8)
                                              (g$make-collector$7585$Od@c8))))
                                          (g$make-top-rib$7584$Od@c8
                                            g$subst-names$10378$Od@c8
                                            g$subst-labels$10377$Od@c8))))
                                      g$subst-labels$10376$Od@c8
                                      g$subst-names$10375$Od@c8))))))
                             g$exp-ext*$10370$Od@c8
                             g$exp-int*$10369$Od@c8))))))
                    g$swap$10366$Od@c8)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10432$Od@c8)
                        (begin
                          (g$imp-collector$10362$Od@c8
                            g$imp-collector$10364$Od@c8)
                          (set! g$imp-collector$10364$Od@c8 g$t$10432$Od@c8))))
                     (g$imp-collector$10362$Od@c8))
                    ((case-lambda
                       ((g$t$10433$Od@c8)
                        (begin
                          (g$top-level-context$10363$Od@c8
                            g$top-level-context$10365$Od@c8)
                          (set! g$top-level-context$10365$Od@c8
                            g$t$10433$Od@c8))))
                     (g$top-level-context$10363$Od@c8))))))))
           g$imp-collector$7588$Od@c8
           g$top-level-context$7647$Od@c8
           g$itc$10357$Od@c8
           '#f)))))
   (g$core-library-expander$7592$Od@c8
     g$core-library-expander$11024$Od@c8
     (case-lambda
       ((g$e$10434$Od@c8 g$verify-name$10435$Od@c8)
        (call-with-values
          (case-lambda (() (g$parse-library$7582$Od@c8 g$e$10434$Od@c8)))
          (case-lambda
            ((g$name*$10440$Od@c8
               g$exp*$10441$Od@c8
               g$imp*$10442$Od@c8
               g$b*$10443$Od@c8)
             ((case-lambda
                ((g$b*$10444$Od@c8
                   g$imp*$10445$Od@c8
                   g$exp*$10446$Od@c8
                   g$name*$10447$Od@c8)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$7581$Od@c8 g$name*$10447$Od@c8)))
                   (case-lambda
                     ((g$name$10450$Od@c8 g$ver$10451$Od@c8)
                      ((case-lambda
                         ((g$ver$10452$Od@c8 g$name$10453$Od@c8)
                          (begin
                            (g$verify-name$10435$Od@c8 g$name$10453$Od@c8)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7591$Od@c8
                                   g$name$10453$Od@c8
                                   g$exp*$10446$Od@c8
                                   g$imp*$10445$Od@c8
                                   g$b*$10444$Od@c8
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10461$Od@c8
                                   g$invoke-req*$10462$Od@c8
                                   g$visit-req*$10463$Od@c8
                                   g$invoke-code$10464$Od@c8
                                   g$visit-code$10465$Od@c8
                                   g$export-subst$10466$Od@c8
                                   g$export-env$10467$Od@c8)
                                 ((case-lambda
                                    ((g$export-env$10468$Od@c8
                                       g$export-subst$10469$Od@c8
                                       g$visit-code$10470$Od@c8
                                       g$invoke-code$10471$Od@c8
                                       g$visit-req*$10472$Od@c8
                                       g$invoke-req*$10473$Od@c8
                                       g$imp*$10474$Od@c8)
                                     (values
                                       g$name$10453$Od@c8
                                       g$ver$10452$Od@c8
                                       g$imp*$10474$Od@c8
                                       g$invoke-req*$10473$Od@c8
                                       g$visit-req*$10472$Od@c8
                                       g$invoke-code$10471$Od@c8
                                       g$visit-code$10470$Od@c8
                                       g$export-subst$10469$Od@c8
                                       g$export-env$10468$Od@c8)))
                                  g$export-env$10467$Od@c8
                                  g$export-subst$10466$Od@c8
                                  g$visit-code$10465$Od@c8
                                  g$invoke-code$10464$Od@c8
                                  g$visit-req*$10463$Od@c8
                                  g$invoke-req*$10462$Od@c8
                                  g$imp*$10461$Od@c8)))))))
                       g$ver$10451$Od@c8
                       g$name$10450$Od@c8))))))
              g$b*$10443$Od@c8
              g$imp*$10442$Od@c8
              g$exp*$10441$Od@c8
              g$name*$10440$Od@c8)))))))
   (g$parse-top-level-program$7593$Od@c8
     g$parse-top-level-program$11025$Od@c8
     (case-lambda
       ((g$e*$10475$Od@c8)
        ((case-lambda
           ((g$t$10476$Od@c8)
            ((case-lambda
               ((g$ls/false$10477$Od@c8)
                (if (if g$ls/false$10477$Od@c8
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10478$Od@c8
                               g$imp*$10479$Od@c8
                               g$b*$10480$Od@c8)
                             (eq? (g$syntax->datum$7643$Od@c8
                                    g$import$10478$Od@c8)
                                  'import)))
                          g$ls/false$10477$Od@c8))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10481$Od@c8
                         g$imp*$10482$Od@c8
                         g$b*$10483$Od@c8)
                       (values g$imp*$10482$Od@c8 g$b*$10483$Od@c8)))
                    g$ls/false$10477$Od@c8)
                  ((case-lambda
                     ((g$t$10484$Od@c8)
                      ((case-lambda
                         ((g$ls/false$10485$Od@c8)
                          (if (if g$ls/false$10485$Od@c8
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10486$Od@c8
                                         g$x$10487$Od@c8
                                         g$y$10488$Od@c8)
                                       (eq? (g$syntax->datum$7643$Od@c8
                                              g$import$10486$Od@c8)
                                            'import)))
                                    g$ls/false$10485$Od@c8))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10489$Od@c8
                                   g$x$10490$Od@c8
                                   g$y$10491$Od@c8)
                                 (g$syntax-violation$7640$Od@c8
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7253$Od@c8 g$e*$10475$Od@c8))))
                              g$ls/false$10485$Od@c8)
                            ((case-lambda
                               ((g$t$10492$Od@c8)
                                ((case-lambda
                                   ((g$ls/false$10493$Od@c8)
                                    (if g$ls/false$10493$Od@c8
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10493$Od@c8)
                                      (g$syntax-violation$7640$Od@c8
                                        '#f
                                        '"invalid syntax"
                                        g$t$10492$Od@c8))))
                                 (g$syntax-dispatch$7534$Od@c8
                                   g$t$10492$Od@c8
                                   '_))))
                             g$t$10484$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8
                         g$t$10484$Od@c8
                         '((any . any) . any)))))
                   g$t$10476$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8
               g$t$10476$Od@c8
               '((any . each-any) . each-any)))))
         g$e*$10475$Od@c8))))
   (g$top-level-expander$7594$Od@c8
     g$top-level-expander$11026$Od@c8
     (case-lambda
       ((g$e*$10494$Od@c8)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7593$Od@c8 g$e*$10494$Od@c8)))
          (case-lambda
            ((g$imp*$10497$Od@c8 g$b*$10498$Od@c8)
             ((case-lambda
                ((g$b*$10499$Od@c8 g$imp*$10500$Od@c8)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7591$Od@c8
                        '()
                        '()
                        g$imp*$10500$Od@c8
                        g$b*$10499$Od@c8
                        '#t)))
                   (case-lambda
                     ((g$imp*$10508$Od@c8
                        g$invoke-req*$10509$Od@c8
                        g$visit-req*$10510$Od@c8
                        g$invoke-code$10511$Od@c8
                        g$visit-code$10512$Od@c8
                        g$export-subst$10513$Od@c8
                        g$export-env$10514$Od@c8)
                      ((case-lambda
                         ((g$export-env$10515$Od@c8
                            g$export-subst$10516$Od@c8
                            g$visit-code$10517$Od@c8
                            g$invoke-code$10518$Od@c8
                            g$visit-req*$10519$Od@c8
                            g$invoke-req*$10520$Od@c8
                            g$imp*$10521$Od@c8)
                          (values
                            g$invoke-req*$10520$Od@c8
                            g$invoke-code$10518$Od@c8)))
                       g$export-env$10514$Od@c8
                       g$export-subst$10513$Od@c8
                       g$visit-code$10512$Od@c8
                       g$invoke-code$10511$Od@c8
                       g$visit-req*$10510$Od@c8
                       g$invoke-req*$10509$Od@c8
                       g$imp*$10508$Od@c8))))))
              g$b*$10498$Od@c8
              g$imp*$10497$Od@c8)))))))
   (g$8166$7595$Od@c8
     g$8166$11027$Od@c8
     (make-record-type-descriptor
       'env
       '#f
       'g$8169$Od@c8
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8168$7596$Od@c8 g$8168$11028$Od@c8 '#f)
   (g$8167$7597$Od@c8
     g$8167$11029$Od@c8
     (make-record-constructor-descriptor
       g$8166$7595$Od@c8
       '#f
       g$8168$7596$Od@c8))
   (g$env?$7598$Od@c8 g$env?$11030$Od@c8 (record-predicate g$8166$7595$Od@c8))
   (g$make-env$7599$Od@c8
     g$make-env$11031$Od@c8
     (record-constructor g$8167$7597$Od@c8))
   (g$env-names$7600$Od@c8
     g$env-names$11032$Od@c8
     (record-accessor g$8166$7595$Od@c8 '0))
   (g$env-labels$7601$Od@c8
     g$env-labels$11033$Od@c8
     (record-accessor g$8166$7595$Od@c8 '1))
   (g$env-itc$7602$Od@c8
     g$env-itc$11034$Od@c8
     (record-accessor g$8166$7595$Od@c8 '2))
   (g$set-env-names!$7603$Od@c8
     g$set-env-names!$11035$Od@c8
     (record-mutator g$8166$7595$Od@c8 '0))
   (g$set-env-labels!$7604$Od@c8
     g$set-env-labels!$11036$Od@c8
     (record-mutator g$8166$7595$Od@c8 '1))
   (g$set-env-itc!$7605$Od@c8
     g$set-env-itc!$11037$Od@c8
     (record-mutator g$8166$7595$Od@c8 '2))
   (g$rp$7606$Od@c8
     g$rp$11038$Od@c8
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10522$Od@c8 g$p$10523$Od@c8)
          (display '"#<environment>" g$p$10523$Od@c8)))))
   (g$8185$7607$Od@c8
     g$8185$11039$Od@c8
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8188$Od@c8
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8187$7608$Od@c8 g$8187$11040$Od@c8 '#f)
   (g$8186$7609$Od@c8
     g$8186$11041$Od@c8
     (make-record-constructor-descriptor
       g$8185$7607$Od@c8
       '#f
       g$8187$7608$Od@c8))
   (g$interaction-env?$7610$Od@c8
     g$interaction-env?$11042$Od@c8
     (record-predicate g$8185$7607$Od@c8))
   (g$make-interaction-env$7611$Od@c8
     g$make-interaction-env$11043$Od@c8
     (record-constructor g$8186$7609$Od@c8))
   (g$interaction-env-rib$7612$Od@c8
     g$interaction-env-rib$11044$Od@c8
     (record-accessor g$8185$7607$Od@c8 '0))
   (g$interaction-env-r$7613$Od@c8
     g$interaction-env-r$11045$Od@c8
     (record-accessor g$8185$7607$Od@c8 '1))
   (g$interaction-env-locs$7614$Od@c8
     g$interaction-env-locs$11046$Od@c8
     (record-accessor g$8185$7607$Od@c8 '2))
   (g$set-interaction-env-rib!$7615$Od@c8
     g$set-interaction-env-rib!$11047$Od@c8
     (record-mutator g$8185$7607$Od@c8 '0))
   (g$set-interaction-env-r!$7616$Od@c8
     g$set-interaction-env-r!$11048$Od@c8
     (record-mutator g$8185$7607$Od@c8 '1))
   (g$set-interaction-env-locs!$7617$Od@c8
     g$set-interaction-env-locs!$11049$Od@c8
     (record-mutator g$8185$7607$Od@c8 '2))
   (g$rp$7618$Od@c8
     g$rp$11050$Od@c8
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10524$Od@c8 g$p$10525$Od@c8)
          (display '"#<environment>" g$p$10525$Od@c8)))))
   (g$interaction-environment-symbols$7619$Od@c8
     g$interaction-environment-symbols$11051$Od@c8
     (case-lambda
       (()
        (map (case-lambda ((g$x$10526$Od@c8) g$x$10526$Od@c8))
             (g$rib-sym*$7211$Od@c8
               (g$interaction-env-rib$7612$Od@c8
                 (g$interaction-environment$7646$Od@c8)))))))
   (g$environment-symbols$7620$Od@c8
     g$environment-symbols$11052$Od@c8
     (case-lambda
       ((g$e$10527$Od@c8)
        (vector->list (g$env-names$7600$Od@c8 g$e$10527$Od@c8)))))
   (g$environment?$7621$Od@c8
     g$environment?$11053$Od@c8
     (case-lambda
       ((g$x$10528$Od@c8)
        ((case-lambda
           ((g$t$10529$Od@c8)
            (if g$t$10529$Od@c8
              g$t$10529$Od@c8
              (begin '#f (g$interaction-env?$7610$Od@c8 g$x$10528$Od@c8)))))
         (g$env?$7598$Od@c8 g$x$10528$Od@c8)))))
   (g$environment$7622$Od@c8
     g$environment$11054$Od@c8
     (case-lambda
       (g$imp*$10530$Od@c8
        ((case-lambda
           ((g$itc$10531$Od@c8)
            ((case-lambda
               ((g$imp-collector$10534$Od@c8 g$imp-collector$10535$Od@c8)
                ((case-lambda
                   ((g$swap$10536$Od@c8)
                    (dynamic-wind
                      g$swap$10536$Od@c8
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7583$Od@c8
                                g$imp*$10530$Od@c8)))
                           (case-lambda
                             ((g$subst-names$10539$Od@c8
                                g$subst-labels$10540$Od@c8)
                              ((case-lambda
                                 ((g$subst-labels$10541$Od@c8
                                    g$subst-names$10542$Od@c8)
                                  (g$make-env$7599$Od@c8
                                    g$subst-names$10542$Od@c8
                                    g$subst-labels$10541$Od@c8
                                    g$itc$10531$Od@c8)))
                               g$subst-labels$10540$Od@c8
                               g$subst-names$10539$Od@c8))))))
                      g$swap$10536$Od@c8)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10543$Od@c8)
                        (begin
                          (g$imp-collector$10534$Od@c8
                            g$imp-collector$10535$Od@c8)
                          (set! g$imp-collector$10535$Od@c8 g$t$10543$Od@c8))))
                     (g$imp-collector$10534$Od@c8)))))))
             g$imp-collector$7588$Od@c8
             g$itc$10531$Od@c8)))
         (g$make-collector$7585$Od@c8)))))
   (g$null-environment$7623$Od@c8
     g$null-environment$11055$Od@c8
     (case-lambda
       ((g$n$10544$Od@c8)
        (begin
          (if (eqv? g$n$10544$Od@c8 '5)
            (void)
            (assertion-violation 'null-environment '"not 5" g$n$10544$Od@c8))
          (g$environment$7622$Od@c8 '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7624$Od@c8
     g$scheme-report-environment$11056$Od@c8
     (case-lambda
       ((g$n$10545$Od@c8)
        (begin
          (if (eqv? g$n$10545$Od@c8 '5)
            (void)
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10545$Od@c8))
          (g$environment$7622$Od@c8 '(psyntax scheme-report-environment-5))))))
   (g$expand$7625$Od@c8
     g$expand$11057$Od@c8
     (case-lambda
       ((g$x$10546$Od@c8 g$env$10547$Od@c8)
        (if (g$env?$7598$Od@c8 g$env$10547$Od@c8)
          ((case-lambda
             ((g$rib$10548$Od@c8)
              ((case-lambda
                 ((g$x$10549$Od@c8
                    g$itc$10550$Od@c8
                    g$rtc$10551$Od@c8
                    g$vtc$10552$Od@c8)
                  ((case-lambda
                     ((g$x$10553$Od@c8)
                      (begin
                        (g$seal-rib!$7222$Od@c8 g$rib$10548$Od@c8)
                        (values g$x$10553$Od@c8 (g$rtc$10551$Od@c8)))))
                   ((case-lambda
                      ((g$inv-collector$10560$Od@c8
                         g$vis-collector$10561$Od@c8
                         g$imp-collector$10562$Od@c8
                         g$inv-collector$10563$Od@c8
                         g$vis-collector$10564$Od@c8
                         g$imp-collector$10565$Od@c8)
                       ((case-lambda
                          ((g$swap$10566$Od@c8)
                           (dynamic-wind
                             g$swap$10566$Od@c8
                             (case-lambda
                               (()
                                (g$chi-expr$7552$Od@c8
                                  g$x$10549$Od@c8
                                  '()
                                  '())))
                             g$swap$10566$Od@c8)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10567$Od@c8)
                                 (begin
                                   (g$inv-collector$10560$Od@c8
                                     g$inv-collector$10563$Od@c8)
                                   (set! g$inv-collector$10563$Od@c8
                                     g$t$10567$Od@c8))))
                              (g$inv-collector$10560$Od@c8))
                             ((case-lambda
                                ((g$t$10568$Od@c8)
                                 (begin
                                   (g$vis-collector$10561$Od@c8
                                     g$vis-collector$10564$Od@c8)
                                   (set! g$vis-collector$10564$Od@c8
                                     g$t$10568$Od@c8))))
                              (g$vis-collector$10561$Od@c8))
                             ((case-lambda
                                ((g$t$10569$Od@c8)
                                 (begin
                                   (g$imp-collector$10562$Od@c8
                                     g$imp-collector$10565$Od@c8)
                                   (set! g$imp-collector$10565$Od@c8
                                     g$t$10569$Od@c8))))
                              (g$imp-collector$10562$Od@c8))))))))
                    g$inv-collector$7586$Od@c8
                    g$vis-collector$7587$Od@c8
                    g$imp-collector$7588$Od@c8
                    g$rtc$10551$Od@c8
                    g$vtc$10552$Od@c8
                    g$itc$10550$Od@c8))))
               (g$make-stx$7229$Od@c8
                 g$x$10546$Od@c8
                 g$top-mark*$7198$Od@c8
                 (list g$rib$10548$Od@c8)
                 '())
               (g$env-itc$7602$Od@c8 g$env$10547$Od@c8)
               (g$make-collector$7585$Od@c8)
               (g$make-collector$7585$Od@c8))))
           (g$make-top-rib$7584$Od@c8
             (g$env-names$7600$Od@c8 g$env$10547$Od@c8)
             (g$env-labels$7601$Od@c8 g$env$10547$Od@c8)))
          (if (g$interaction-env?$7610$Od@c8 g$env$10547$Od@c8)
            ((case-lambda
               ((g$rib$10570$Od@c8 g$r$10571$Od@c8 g$rtc$10572$Od@c8)
                ((case-lambda
                   ((g$x$10573$Od@c8)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10584$Od@c8
                               g$inv-collector$10585$Od@c8
                               g$vis-collector$10586$Od@c8
                               g$imp-collector$10587$Od@c8
                               g$top-level-context$10588$Od@c8
                               g$inv-collector$10589$Od@c8
                               g$vis-collector$10590$Od@c8
                               g$imp-collector$10591$Od@c8)
                             ((case-lambda
                                ((g$swap$10592$Od@c8)
                                 (dynamic-wind
                                   g$swap$10592$Od@c8
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7590$Od@c8
                                        g$x$10573$Od@c8
                                        g$rib$10570$Od@c8
                                        g$r$10571$Od@c8)))
                                   g$swap$10592$Od@c8)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10593$Od@c8)
                                       (begin
                                         (g$top-level-context$10584$Od@c8
                                           g$top-level-context$10588$Od@c8)
                                         (set! g$top-level-context$10588$Od@c8
                                           g$t$10593$Od@c8))))
                                    (g$top-level-context$10584$Od@c8))
                                   ((case-lambda
                                      ((g$t$10594$Od@c8)
                                       (begin
                                         (g$inv-collector$10585$Od@c8
                                           g$inv-collector$10589$Od@c8)
                                         (set! g$inv-collector$10589$Od@c8
                                           g$t$10594$Od@c8))))
                                    (g$inv-collector$10585$Od@c8))
                                   ((case-lambda
                                      ((g$t$10595$Od@c8)
                                       (begin
                                         (g$vis-collector$10586$Od@c8
                                           g$vis-collector$10590$Od@c8)
                                         (set! g$vis-collector$10590$Od@c8
                                           g$t$10595$Od@c8))))
                                    (g$vis-collector$10586$Od@c8))
                                   ((case-lambda
                                      ((g$t$10596$Od@c8)
                                       (begin
                                         (g$imp-collector$10587$Od@c8
                                           g$imp-collector$10591$Od@c8)
                                         (set! g$imp-collector$10591$Od@c8
                                           g$t$10596$Od@c8))))
                                    (g$imp-collector$10587$Od@c8))))))))
                          g$top-level-context$7647$Od@c8
                          g$inv-collector$7586$Od@c8
                          g$vis-collector$7587$Od@c8
                          g$imp-collector$7588$Od@c8
                          g$env$10547$Od@c8
                          g$rtc$10572$Od@c8
                          (g$make-collector$7585$Od@c8)
                          (g$make-collector$7585$Od@c8))))
                      (case-lambda
                        ((g$e$10597$Od@c8 g$r^$10598$Od@c8)
                         ((case-lambda
                            ((g$r^$10599$Od@c8 g$e$10600$Od@c8)
                             (begin
                               (g$set-interaction-env-r!$7616$Od@c8
                                 g$env$10547$Od@c8
                                 g$r^$10599$Od@c8)
                               (values g$e$10600$Od@c8 (g$rtc$10572$Od@c8)))))
                          g$r^$10598$Od@c8
                          g$e$10597$Od@c8))))))
                 (g$make-stx$7229$Od@c8
                   g$x$10546$Od@c8
                   g$top-mark*$7198$Od@c8
                   (list g$rib$10570$Od@c8)
                   '()))))
             (g$interaction-env-rib$7612$Od@c8 g$env$10547$Od@c8)
             (g$interaction-env-r$7613$Od@c8 g$env$10547$Od@c8)
             (g$make-collector$7585$Od@c8))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10547$Od@c8))))))
   (g$eval$7626$Od@c8
     g$eval$11058$Od@c8
     (case-lambda
       ((g$x$10601$Od@c8 g$env$10602$Od@c8)
        (begin
          (if (g$environment?$7621$Od@c8 g$env$10602$Od@c8)
            (void)
            (error 'eval '"not an environment" g$env$10602$Od@c8))
          (call-with-values
            (case-lambda
              (() (g$expand$7625$Od@c8 g$x$10601$Od@c8 g$env$10602$Od@c8)))
            (case-lambda
              ((g$x$10605$Od@c8 g$invoke-req*$10606$Od@c8)
               ((case-lambda
                  ((g$invoke-req*$10607$Od@c8 g$x$10608$Od@c8)
                   (begin
                     (for-each
                       g$invoke-library$7071$Od@c8
                       g$invoke-req*$10607$Od@c8)
                     (eval-core
                       (g$expanded->core$6770$Od@c8 g$x$10608$Od@c8)))))
                g$invoke-req*$10606$Od@c8
                g$x$10605$Od@c8))))))))
   (g$library-expander$7627$Od@c8
     g$library-expander$11059$Od@c8
     (case-lambda
       ((g$x$10609$Od@c8 g$filename$10610$Od@c8 g$verify-name$10611$Od@c8)
        (letrec* ((g$build-visit-code$10612$Od@c8
                    (case-lambda
                      ((g$macro*$10655$Od@c8)
                       (if (null? g$macro*$10655$Od@c8)
                         (g$build-void$7191$Od@c8)
                         (g$build-sequence$7190$Od@c8
                           '#f
                           (map (case-lambda
                                  ((g$x$10656$Od@c8)
                                   ((case-lambda
                                      ((g$loc$10657$Od@c8 g$src$10658$Od@c8)
                                       (list
                                         'set!
                                         g$loc$10657$Od@c8
                                         g$src$10658$Od@c8)))
                                    (car g$x$10656$Od@c8)
                                    (g$cddr$5218$Od@c8 g$x$10656$Od@c8))))
                                g$macro*$10655$Od@c8))))))
                  (g$visit!$10613$Od@c8
                    (case-lambda
                      ((g$macro*$10651$Od@c8)
                       (for-each
                         (case-lambda
                           ((g$x$10652$Od@c8)
                            ((case-lambda
                               ((g$loc$10653$Od@c8 g$proc$10654$Od@c8)
                                (set-symbol-value!
                                  g$loc$10653$Od@c8
                                  g$proc$10654$Od@c8)))
                             (car g$x$10652$Od@c8)
                             (g$cadr$5216$Od@c8 g$x$10652$Od@c8))))
                         g$macro*$10651$Od@c8)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7592$Od@c8
                 g$x$10609$Od@c8
                 g$verify-name$10611$Od@c8)))
            (case-lambda
              ((g$name$10623$Od@c8
                 g$ver$10624$Od@c8
                 g$imp*$10625$Od@c8
                 g$inv*$10626$Od@c8
                 g$vis*$10627$Od@c8
                 g$invoke-code$10628$Od@c8
                 g$macro*$10629$Od@c8
                 g$export-subst$10630$Od@c8
                 g$export-env$10631$Od@c8)
               ((case-lambda
                  ((g$export-env$10632$Od@c8
                     g$export-subst$10633$Od@c8
                     g$macro*$10634$Od@c8
                     g$invoke-code$10635$Od@c8
                     g$vis*$10636$Od@c8
                     g$inv*$10637$Od@c8
                     g$imp*$10638$Od@c8
                     g$ver$10639$Od@c8
                     g$name$10640$Od@c8)
                   ((case-lambda
                      ((g$id$10641$Od@c8
                         g$name$10642$Od@c8
                         g$ver$10643$Od@c8
                         g$imp*$10644$Od@c8
                         g$vis*$10645$Od@c8
                         g$inv*$10646$Od@c8
                         g$visit-proc$10647$Od@c8
                         g$invoke-proc$10648$Od@c8
                         g$visit-code$10649$Od@c8
                         g$invoke-code$10650$Od@c8)
                       (begin
                         (g$install-library$7069$Od@c8
                           g$id$10641$Od@c8
                           g$name$10642$Od@c8
                           g$ver$10643$Od@c8
                           g$imp*$10644$Od@c8
                           g$vis*$10645$Od@c8
                           g$inv*$10646$Od@c8
                           g$export-subst$10633$Od@c8
                           g$export-env$10632$Od@c8
                           g$visit-proc$10647$Od@c8
                           g$invoke-proc$10648$Od@c8
                           g$visit-code$10649$Od@c8
                           g$invoke-code$10650$Od@c8
                           '#t
                           g$filename$10610$Od@c8)
                         (values
                           g$id$10641$Od@c8
                           g$name$10642$Od@c8
                           g$ver$10643$Od@c8
                           g$imp*$10644$Od@c8
                           g$vis*$10645$Od@c8
                           g$inv*$10646$Od@c8
                           g$invoke-code$10650$Od@c8
                           g$visit-code$10649$Od@c8
                           g$export-subst$10633$Od@c8
                           g$export-env$10632$Od@c8))))
                    (gensym)
                    g$name$10640$Od@c8
                    g$ver$10639$Od@c8
                    (map g$library-spec$7075$Od@c8 g$imp*$10638$Od@c8)
                    (map g$library-spec$7075$Od@c8 g$vis*$10636$Od@c8)
                    (map g$library-spec$7075$Od@c8 g$inv*$10637$Od@c8)
                    (case-lambda
                      (() (g$visit!$10613$Od@c8 g$macro*$10634$Od@c8)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6770$Od@c8
                           g$invoke-code$10635$Od@c8))))
                    (g$build-visit-code$10612$Od@c8 g$macro*$10634$Od@c8)
                    g$invoke-code$10635$Od@c8)))
                g$export-env$10631$Od@c8
                g$export-subst$10630$Od@c8
                g$macro*$10629$Od@c8
                g$invoke-code$10628$Od@c8
                g$vis*$10627$Od@c8
                g$inv*$10626$Od@c8
                g$imp*$10625$Od@c8
                g$ver$10624$Od@c8
                g$name$10623$Od@c8))))))
       ((g$x$10659$Od@c8 g$filename$10660$Od@c8)
        (g$library-expander$7627$Od@c8
          g$x$10659$Od@c8
          g$filename$10660$Od@c8
          (case-lambda ((g$x$10661$Od@c8) (values)))))
       ((g$x$10662$Od@c8)
        (g$library-expander$7627$Od@c8
          g$x$10662$Od@c8
          '#f
          (case-lambda ((g$x$10663$Od@c8) (values)))))))
   (g$boot-library-expand$7628$Od@c8
     g$boot-library-expand$11060$Od@c8
     (case-lambda
       ((g$x$10664$Od@c8)
        (call-with-values
          (case-lambda (() (g$library-expander$7627$Od@c8 g$x$10664$Od@c8)))
          (case-lambda
            ((g$id$10675$Od@c8
               g$name$10676$Od@c8
               g$ver$10677$Od@c8
               g$imp*$10678$Od@c8
               g$vis*$10679$Od@c8
               g$inv*$10680$Od@c8
               g$invoke-code$10681$Od@c8
               g$visit-code$10682$Od@c8
               g$export-subst$10683$Od@c8
               g$export-env$10684$Od@c8)
             ((case-lambda
                ((g$export-env$10685$Od@c8
                   g$export-subst$10686$Od@c8
                   g$visit-code$10687$Od@c8
                   g$invoke-code$10688$Od@c8
                   g$inv*$10689$Od@c8
                   g$vis*$10690$Od@c8
                   g$imp*$10691$Od@c8
                   g$ver$10692$Od@c8
                   g$name$10693$Od@c8
                   g$id$10694$Od@c8)
                 (values
                   g$name$10693$Od@c8
                   g$invoke-code$10688$Od@c8
                   g$export-subst$10686$Od@c8
                   g$export-env$10685$Od@c8)))
              g$export-env$10684$Od@c8
              g$export-subst$10683$Od@c8
              g$visit-code$10682$Od@c8
              g$invoke-code$10681$Od@c8
              g$inv*$10680$Od@c8
              g$vis*$10679$Od@c8
              g$imp*$10678$Od@c8
              g$ver$10677$Od@c8
              g$name$10676$Od@c8
              g$id$10675$Od@c8)))))))
   (g$rev-map-append$7629$Od@c8
     g$rev-map-append$11061$Od@c8
     (case-lambda
       ((g$f$10695$Od@c8 g$ls$10696$Od@c8 g$ac$10697$Od@c8)
        (if (null? g$ls$10696$Od@c8)
          g$ac$10697$Od@c8
          (g$rev-map-append$7629$Od@c8
            g$f$10695$Od@c8
            (cdr g$ls$10696$Od@c8)
            (cons
              (g$f$10695$Od@c8 (car g$ls$10696$Od@c8))
              g$ac$10697$Od@c8))))))
   (g$build-exports$7630$Od@c8
     g$build-exports$11062$Od@c8
     (case-lambda
       ((g$lex*+loc*$10698$Od@c8 g$init*$10699$Od@c8)
        (g$build-sequence$7190$Od@c8
          '#f
          (cons
            (g$build-void$7191$Od@c8)
            (g$rev-map-append$7629$Od@c8
              (case-lambda
                ((g$x$10700$Od@c8)
                 (list 'set! (cdr g$x$10700$Od@c8) (car g$x$10700$Od@c8))))
              g$lex*+loc*$10698$Od@c8
              g$init*$10699$Od@c8))))))
   (g$make-export-subst$7631$Od@c8
     g$make-export-subst$11063$Od@c8
     (case-lambda
       ((g$int*$10701$Od@c8 g$ext*$10702$Od@c8 g$rib$10703$Od@c8)
        (map (case-lambda
               ((g$int$10704$Od@c8 g$ext$10705$Od@c8)
                ((case-lambda
                   ((g$id$10706$Od@c8)
                    ((case-lambda
                       ((g$label$10707$Od@c8)
                        ((case-lambda
                           (()
                            (begin
                              (if g$label$10707$Od@c8
                                (void)
                                (g$syntax-violation$7640$Od@c8
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10706$Od@c8))
                              (cons g$ext$10705$Od@c8 g$label$10707$Od@c8)))))))
                     (g$id->label$7269$Od@c8 g$id$10706$Od@c8))))
                 (g$make-stx$7229$Od@c8
                   g$int$10704$Od@c8
                   g$top-mark*$7198$Od@c8
                   (list g$rib$10703$Od@c8)
                   '()))))
             g$int*$10701$Od@c8
             g$ext*$10702$Od@c8))))
   (g$make-export-env/macros$7632$Od@c8
     g$make-export-env/macros$11064$Od@c8
     (case-lambda
       ((g$lex*$10708$Od@c8 g$loc*$10709$Od@c8 g$r$10710$Od@c8)
        (letrec* ((g$lookup$10711$Od@c8
                    (case-lambda
                      ((g$x$10726$Od@c8)
                       ((letrec ((g$f$10727$Od@c8
                                   (case-lambda
                                     ((g$x$10728$Od@c8
                                        g$lex*$10729$Od@c8
                                        g$loc*$10730$Od@c8)
                                      (if (pair? g$lex*$10729$Od@c8)
                                        (if (eq? g$x$10728$Od@c8
                                                 (car g$lex*$10729$Od@c8))
                                          (car g$loc*$10730$Od@c8)
                                          (g$f$10727$Od@c8
                                            g$x$10728$Od@c8
                                            (cdr g$lex*$10729$Od@c8)
                                            (cdr g$loc*$10730$Od@c8)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10727$Od@c8)
                        g$x$10726$Od@c8
                        g$lex*$10708$Od@c8
                        g$loc*$10709$Od@c8)))))
          ((letrec ((g$f$10712$Od@c8
                      (case-lambda
                        ((g$r$10713$Od@c8
                           g$env$10714$Od@c8
                           g$global*$10715$Od@c8
                           g$macro*$10716$Od@c8)
                         (if (null? g$r$10713$Od@c8)
                           (values
                             g$env$10714$Od@c8
                             g$global*$10715$Od@c8
                             g$macro*$10716$Od@c8)
                           ((case-lambda
                              ((g$x$10717$Od@c8)
                               ((case-lambda
                                  ((g$label$10718$Od@c8 g$b$10719$Od@c8)
                                   ((case-lambda
                                      ((g$t$10720$Od@c8)
                                       (if (eqv? g$t$10720$Od@c8 'lexical)
                                         ((case-lambda
                                            ((g$v$10723$Od@c8)
                                             ((case-lambda
                                                ((g$loc$10724$Od@c8
                                                   g$type$10725$Od@c8)
                                                 (g$f$10712$Od@c8
                                                   (cdr g$r$10713$Od@c8)
                                                   (cons
                                                     (g$cons*$5687$Od@c8
                                                       g$label$10718$Od@c8
                                                       g$type$10725$Od@c8
                                                       g$loc$10724$Od@c8)
                                                     g$env$10714$Od@c8)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7478$Od@c8
                                                         g$v$10723$Od@c8)
                                                       g$loc$10724$Od@c8)
                                                     g$global*$10715$Od@c8)
                                                   g$macro*$10716$Od@c8)))
                                              (g$lookup$10711$Od@c8
                                                (g$lexical-var$7478$Od@c8
                                                  g$v$10723$Od@c8))
                                              (if (g$lexical-mutable?$7479$Od@c8
                                                    g$v$10723$Od@c8)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7274$Od@c8
                                            g$b$10719$Od@c8))
                                         (if (eqv? g$t$10720$Od@c8 'local-macro)
                                           ((case-lambda
                                              ((g$loc$10722$Od@c8)
                                               (g$f$10712$Od@c8
                                                 (cdr g$r$10713$Od@c8)
                                                 (cons
                                                   (g$cons*$5687$Od@c8
                                                     g$label$10718$Od@c8
                                                     'global-macro
                                                     g$loc$10722$Od@c8)
                                                   g$env$10714$Od@c8)
                                                 g$global*$10715$Od@c8
                                                 (cons
                                                   (cons
                                                     g$loc$10722$Od@c8
                                                     (g$binding-value$7274$Od@c8
                                                       g$b$10719$Od@c8))
                                                   g$macro*$10716$Od@c8))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$10720$Od@c8
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$10721$Od@c8)
                                                 (g$f$10712$Od@c8
                                                   (cdr g$r$10713$Od@c8)
                                                   (cons
                                                     (g$cons*$5687$Od@c8
                                                       g$label$10718$Od@c8
                                                       'global-macro!
                                                       g$loc$10721$Od@c8)
                                                     g$env$10714$Od@c8)
                                                   g$global*$10715$Od@c8
                                                   (cons
                                                     (cons
                                                       g$loc$10721$Od@c8
                                                       (g$binding-value$7274$Od@c8
                                                         g$b$10719$Od@c8))
                                                     g$macro*$10716$Od@c8))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10720$Od@c8
                                                   '($rtd $module))
                                               (g$f$10712$Od@c8
                                                 (cdr g$r$10713$Od@c8)
                                                 (cons
                                                   g$x$10717$Od@c8
                                                   g$env$10714$Od@c8)
                                                 g$global*$10715$Od@c8
                                                 g$macro*$10716$Od@c8)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7273$Od@c8
                                                   g$b$10719$Od@c8)
                                                 (g$binding-value$7274$Od@c8
                                                   g$b$10719$Od@c8))))))))
                                    (g$binding-type$7273$Od@c8
                                      g$b$10719$Od@c8))))
                                (car g$x$10717$Od@c8)
                                (cdr g$x$10717$Od@c8))))
                            (car g$r$10713$Od@c8)))))))
             g$f$10712$Od@c8)
           g$r$10710$Od@c8
           '()
           '()
           '())))))
   (g$generate-temporaries$7633$Od@c8
     g$generate-temporaries$11065$Od@c8
     (case-lambda
       ((g$ls$10731$Od@c8)
        ((case-lambda
           ((g$t$10732$Od@c8)
            ((case-lambda
               ((g$ls/false$10733$Od@c8)
                (if g$ls/false$10733$Od@c8
                  (apply
                    (case-lambda
                      ((g$ls$10734$Od@c8)
                       (map (case-lambda
                              ((g$x$10735$Od@c8)
                               (g$make-stx$7229$Od@c8
                                 ((case-lambda
                                    ((g$x$10736$Od@c8)
                                     (if ((case-lambda
                                            ((g$t$10737$Od@c8)
                                             (if g$t$10737$Od@c8
                                               g$t$10737$Od@c8
                                               (begin
                                                 '#f
                                                 (string? g$x$10736$Od@c8)))))
                                          (symbol? g$x$10736$Od@c8))
                                       (gensym g$x$10736$Od@c8)
                                       (gensym 't))))
                                  (g$syntax->datum$7643$Od@c8 g$x$10735$Od@c8))
                                 g$top-mark*$7198$Od@c8
                                 '()
                                 '())))
                            g$ls$10734$Od@c8)))
                    g$ls/false$10733$Od@c8)
                  ((case-lambda
                     ((g$t$10738$Od@c8)
                      ((case-lambda
                         ((g$ls/false$10739$Od@c8)
                          (if g$ls/false$10739$Od@c8
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10739$Od@c8)
                            (g$syntax-violation$7640$Od@c8
                              '#f
                              '"invalid syntax"
                              g$t$10738$Od@c8))))
                       (g$syntax-dispatch$7534$Od@c8 g$t$10738$Od@c8 '_))))
                   g$t$10732$Od@c8))))
             (g$syntax-dispatch$7534$Od@c8 g$t$10732$Od@c8 'each-any))))
         g$ls$10731$Od@c8))))
   (g$free-identifier=?$7634$Od@c8
     g$free-identifier=?$11066$Od@c8
     (case-lambda
       ((g$x$10740$Od@c8 g$y$10741$Od@c8)
        (if (g$id?$7256$Od@c8 g$x$10740$Od@c8)
          (if (g$id?$7256$Od@c8 g$y$10741$Od@c8)
            (g$free-id=?$7260$Od@c8 g$x$10740$Od@c8 g$y$10741$Od@c8)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10741$Od@c8))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10740$Od@c8)))))
   (g$bound-identifier=?$7635$Od@c8
     g$bound-identifier=?$11067$Od@c8
     (case-lambda
       ((g$x$10742$Od@c8 g$y$10743$Od@c8)
        (if (g$id?$7256$Od@c8 g$x$10742$Od@c8)
          (if (g$id?$7256$Od@c8 g$y$10743$Od@c8)
            (g$bound-id=?$7259$Od@c8 g$x$10742$Od@c8 g$y$10743$Od@c8)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10743$Od@c8))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10742$Od@c8)))))
   (g$extract-position-condition$7636$Od@c8
     g$extract-position-condition$11068$Od@c8
     (case-lambda
       ((g$x$10744$Od@c8)
        (letrec* ((g$11049$10745$Od@c8
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11052$Od@c8
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11051$10746$Od@c8 '#f)
                  (g$11050$10747$Od@c8
                    (make-record-constructor-descriptor
                      g$11049$10745$Od@c8
                      &condition-rcd
                      g$11051$10746$Od@c8))
                  (g$11048$10748$Od@c8 (record-predicate g$11049$10745$Od@c8))
                  (g$make-source-condition$10749$Od@c8
                    (record-constructor g$11050$10747$Od@c8))
                  (g$11046$10750$Od@c8 (record-accessor g$11049$10745$Od@c8 '0))
                  (g$11047$10751$Od@c8 (record-accessor g$11049$10745$Od@c8 '1))
                  (g$source-condition?$10752$Od@c8
                    (condition-predicate g$11049$10745$Od@c8))
                  (g$source-filename$10753$Od@c8
                    (condition-accessor
                      g$11049$10745$Od@c8
                      g$11046$10750$Od@c8))
                  (g$source-character$10754$Od@c8
                    (condition-accessor
                      g$11049$10745$Od@c8
                      g$11047$10751$Od@c8)))
          (if (g$stx?$7228$Od@c8 g$x$10744$Od@c8)
            ((case-lambda
               ((g$x$10755$Od@c8)
                (if (annotation? g$x$10755$Od@c8)
                  ((case-lambda
                     ((g$src$10756$Od@c8)
                      (if (pair? g$src$10756$Od@c8)
                        (g$make-source-condition$10749$Od@c8
                          (car g$src$10756$Od@c8)
                          (cdr g$src$10756$Od@c8))
                        (condition))))
                   (annotation-source g$x$10755$Od@c8))
                  (condition))))
             (g$stx-expr$7230$Od@c8 g$x$10744$Od@c8))
            (condition))))))
   (g$syntax-error$7637$Od@c8
     g$syntax-error$11069$Od@c8
     (case-lambda
       ((g$x$10757$Od@c8 . g$args$10758$Od@c8)
        (begin
          (if (g$for-all$5685$Od@c8 string? g$args$10758$Od@c8)
            (void)
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10758$Od@c8))
          (raise
            (condition
              (g$make-message-condition$5939$Od@c8
                (if (null? g$args$10758$Od@c8)
                  '"invalid syntax"
                  (apply string-append g$args$10758$Od@c8)))
              (g$make-syntax-violation$6011$Od@c8
                (g$syntax->datum$7643$Od@c8 g$x$10757$Od@c8)
                '#f)
              (g$extract-position-condition$7636$Od@c8 g$x$10757$Od@c8)
              (g$extract-trace$7638$Od@c8 g$x$10757$Od@c8)))))))
   (g$extract-trace$7638$Od@c8
     g$extract-trace$11070$Od@c8
     (case-lambda
       ((g$x$10759$Od@c8)
        (letrec* ((g$11073$10760$Od@c8
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11076$Od@c8
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11075$10761$Od@c8 '#f)
                  (g$11074$10762$Od@c8
                    (make-record-constructor-descriptor
                      g$11073$10760$Od@c8
                      &condition-rcd
                      g$11075$10761$Od@c8))
                  (g$11072$10763$Od@c8 (record-predicate g$11073$10760$Od@c8))
                  (g$make-trace$10764$Od@c8
                    (record-constructor g$11074$10762$Od@c8))
                  (g$11071$10765$Od@c8 (record-accessor g$11073$10760$Od@c8 '0))
                  (g$trace?$10766$Od@c8
                    (condition-predicate g$11073$10760$Od@c8))
                  (g$trace-form$10767$Od@c8
                    (condition-accessor
                      g$11073$10760$Od@c8
                      g$11071$10765$Od@c8)))
          ((letrec ((g$f$10768$Od@c8
                      (case-lambda
                        ((g$x$10769$Od@c8)
                         (if (g$stx?$7228$Od@c8 g$x$10769$Od@c8)
                           (apply
                             condition
                             (g$make-trace$10764$Od@c8 g$x$10769$Od@c8)
                             (map g$f$10768$Od@c8
                                  (g$stx-ae*$7233$Od@c8 g$x$10769$Od@c8)))
                           (if (annotation? g$x$10769$Od@c8)
                             (g$make-trace$10764$Od@c8
                               (g$make-stx$7229$Od@c8
                                 g$x$10769$Od@c8
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10768$Od@c8)
           g$x$10759$Od@c8)))))
   (g$syntax-violation*$7639$Od@c8
     g$syntax-violation*$11071$Od@c8
     (case-lambda
       ((g$who$10770$Od@c8
          g$msg$10771$Od@c8
          g$form$10772$Od@c8
          g$condition-object$10773$Od@c8)
        (begin
          (if (string? g$msg$10771$Od@c8)
            (void)
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10771$Od@c8))
          ((case-lambda
             ((g$who$10774$Od@c8)
              (raise
                (condition
                  (if g$who$10774$Od@c8
                    (g$make-who-condition$5985$Od@c8 g$who$10774$Od@c8)
                    (condition))
                  (g$make-message-condition$5939$Od@c8 g$msg$10771$Od@c8)
                  g$condition-object$10773$Od@c8
                  (g$extract-position-condition$7636$Od@c8 g$form$10772$Od@c8)
                  (g$extract-trace$7638$Od@c8 g$form$10772$Od@c8)))))
           (if ((case-lambda
                  ((g$t$10775$Od@c8)
                   (if g$t$10775$Od@c8
                     g$t$10775$Od@c8
                     (begin '#f (symbol? g$who$10770$Od@c8)))))
                (string? g$who$10770$Od@c8))
             g$who$10770$Od@c8
             (if (not g$who$10770$Od@c8)
               ((case-lambda
                  ((g$t$10776$Od@c8)
                   ((case-lambda
                      ((g$ls/false$10777$Od@c8)
                       (if (if g$ls/false$10777$Od@c8
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10778$Od@c8)
                                    (g$id?$7256$Od@c8 g$id$10778$Od@c8)))
                                 g$ls/false$10777$Od@c8))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10779$Od@c8)
                              (g$syntax->datum$7643$Od@c8 g$id$10779$Od@c8)))
                           g$ls/false$10777$Od@c8)
                         ((case-lambda
                            ((g$t$10780$Od@c8)
                             ((case-lambda
                                ((g$ls/false$10781$Od@c8)
                                 (if (if g$ls/false$10781$Od@c8
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10782$Od@c8
                                                g$rest$10783$Od@c8)
                                              (g$id?$7256$Od@c8
                                                g$id$10782$Od@c8)))
                                           g$ls/false$10781$Od@c8))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10784$Od@c8 g$rest$10785$Od@c8)
                                        (g$syntax->datum$7643$Od@c8
                                          g$id$10784$Od@c8)))
                                     g$ls/false$10781$Od@c8)
                                   ((case-lambda
                                      ((g$t$10786$Od@c8)
                                       ((case-lambda
                                          ((g$ls/false$10787$Od@c8)
                                           (if g$ls/false$10787$Od@c8
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10787$Od@c8)
                                             (g$syntax-violation$7640$Od@c8
                                               '#f
                                               '"invalid syntax"
                                               g$t$10786$Od@c8))))
                                        (g$syntax-dispatch$7534$Od@c8
                                          g$t$10786$Od@c8
                                          '_))))
                                    g$t$10780$Od@c8))))
                              (g$syntax-dispatch$7534$Od@c8
                                g$t$10780$Od@c8
                                '(any . any)))))
                          g$t$10776$Od@c8))))
                    (g$syntax-dispatch$7534$Od@c8 g$t$10776$Od@c8 'any))))
                g$form$10772$Od@c8)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10770$Od@c8))))))))
   (g$syntax-violation$7640$Od@c8
     g$syntax-violation$11072$Od@c8
     (case-lambda
       ((g$who$10788$Od@c8 g$msg$10789$Od@c8 g$form$10790$Od@c8)
        (g$syntax-violation$7640$Od@c8
          g$who$10788$Od@c8
          g$msg$10789$Od@c8
          g$form$10790$Od@c8
          '#f))
       ((g$who$10791$Od@c8
          g$msg$10792$Od@c8
          g$form$10793$Od@c8
          g$subform$10794$Od@c8)
        (g$syntax-violation*$7639$Od@c8
          g$who$10791$Od@c8
          g$msg$10792$Od@c8
          g$form$10793$Od@c8
          (g$make-syntax-violation$6011$Od@c8
            (g$syntax->datum$7643$Od@c8 g$form$10793$Od@c8)
            (g$syntax->datum$7643$Od@c8 g$subform$10794$Od@c8))))))
   (g$identifier?$7641$Od@c8
     g$identifier?$11073$Od@c8
     (case-lambda ((g$x$10795$Od@c8) (g$id?$7256$Od@c8 g$x$10795$Od@c8))))
   (g$datum->syntax$7642$Od@c8
     g$datum->syntax$11074$Od@c8
     (case-lambda
       ((g$id$10796$Od@c8 g$datum$10797$Od@c8)
        (if (g$id?$7256$Od@c8 g$id$10796$Od@c8)
          (g$datum->stx$7239$Od@c8 g$id$10796$Od@c8 g$datum$10797$Od@c8)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10796$Od@c8)))))
   (g$syntax->datum$7643$Od@c8
     g$syntax->datum$11075$Od@c8
     (case-lambda
       ((g$x$10798$Od@c8) (g$stx->datum$7267$Od@c8 g$x$10798$Od@c8))))
   (g$compile-r6rs-top-level$7644$Od@c8
     g$compile-r6rs-top-level$11076$Od@c8
     (case-lambda
       ((g$x*$10799$Od@c8)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7594$Od@c8 g$x*$10799$Od@c8)))
          (case-lambda
            ((g$lib*$10802$Od@c8 g$invoke-code$10803$Od@c8)
             ((case-lambda
                ((g$invoke-code$10804$Od@c8 g$lib*$10805$Od@c8)
                 (case-lambda
                   (()
                    (begin
                      (for-each g$invoke-library$7071$Od@c8 g$lib*$10805$Od@c8)
                      (eval-core
                        (g$expanded->core$6770$Od@c8
                          g$invoke-code$10804$Od@c8)))))))
              g$invoke-code$10803$Od@c8
              g$lib*$10802$Od@c8)))))))
   (g$pre-compile-r6rs-top-level$7645$Od@c8
     g$pre-compile-r6rs-top-level$11077$Od@c8
     (case-lambda
       ((g$x*$10806$Od@c8)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7594$Od@c8 g$x*$10806$Od@c8)))
          (case-lambda
            ((g$lib*$10809$Od@c8 g$invoke-code$10810$Od@c8)
             ((case-lambda
                ((g$invoke-code$10811$Od@c8 g$lib*$10812$Od@c8)
                 (begin
                   (for-each g$invoke-library$7071$Od@c8 g$lib*$10812$Od@c8)
                   (compile-core
                     (g$expanded->core$6770$Od@c8 g$invoke-code$10811$Od@c8)))))
              g$invoke-code$10810$Od@c8
              g$lib*$10809$Od@c8)))))))
   (g$interaction-environment$7646$Od@c8
     g$interaction-environment$11078$Od@c8
     ((case-lambda
        ((g$the-env$10813$Od@c8)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10814$Od@c8)
                (if g$t$10814$Od@c8
                  g$t$10814$Od@c8
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10815$Od@c8 g$rib$10816$Od@c8)
                        (begin
                          ((case-lambda
                             ((g$subst$10817$Od@c8)
                              (begin
                                (g$set-rib-sym*!$7215$Od@c8
                                  g$rib$10816$Od@c8
                                  (map car g$subst$10817$Od@c8))
                                (g$set-rib-mark**!$7216$Od@c8
                                  g$rib$10816$Od@c8
                                  (map (case-lambda
                                         ((g$x$10818$Od@c8)
                                          g$top-mark*$7198$Od@c8))
                                       g$subst$10817$Od@c8))
                                (g$set-rib-label*!$7217$Od@c8
                                  g$rib$10816$Od@c8
                                  (map cdr g$subst$10817$Od@c8)))))
                           (g$library-subst$7028$Od@c8 g$lib$10815$Od@c8))
                          ((case-lambda
                             ((g$env$10819$Od@c8)
                              (begin
                                (set! g$the-env$10813$Od@c8 g$env$10819$Od@c8)
                                g$env$10819$Od@c8)))
                           (g$make-interaction-env$7611$Od@c8
                             g$rib$10816$Od@c8
                             '()
                             '())))))
                     (g$find-library-by-name$7064$Od@c8 '(ironscheme))
                     (g$make-empty-rib$7219$Od@c8))))))
             g$the-env$10813$Od@c8)))))
      '#f))
   (g$top-level-context$7647$Od@c8
     g$top-level-context$11079$Od@c8
     (g$make-parameter$6525$Od@c8 '#f)))
  (g$current-library-expander$7061$Od@c8 g$library-expander$7627$Od@c8))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6767$Od@c8
      (case-lambda
        ((g$x$11114$Od@c8)
         ((case-lambda
            ((g$t$11115$Od@c8) (if g$t$11115$Od@c8 (cdr g$t$11115$Od@c8) '#f)))
          (assq
            g$x$11114$Od@c8
            '((ellipsis-map . g$ellipsis-map$10971$Od@c8)
              (ironscheme-build . g$ironscheme-build$11108$Od@c8)
              (syntax-error . g$syntax-error$11069$Od@c8)
              (syntax-dispatch . g$syntax-dispatch$10966$Od@c8)
              (compile-system-libraries
                .
                g$compile-system-libraries$11110$Od@c8)
              (compile->closure . g$compile->closure$11112$Od@c8)
              (compile . g$compile$11111$Od@c8)
              (load . g$load$11107$Od@c8)
              (interaction-environment . g$interaction-environment$11078$Od@c8)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10904$Od@c8)
              (variable-transformer? . g$variable-transformer?$10903$Od@c8)
              (make-variable-transformer
                .
                g$make-variable-transformer$10902$Od@c8)
              (identifier? . g$identifier?$11073$Od@c8)
              (generate-temporaries . g$generate-temporaries$11065$Od@c8)
              (free-identifier=? . g$free-identifier=?$11066$Od@c8)
              (syntax->datum . g$syntax->datum$11075$Od@c8)
              (datum->syntax . g$datum->syntax$11074$Od@c8)
              (bound-identifier=? . g$bound-identifier=?$11067$Od@c8)
              (delete-file . g$delete-file$5557$Od@c8)
              (file-exists? . g$file-exists?$5556$Od@c8)
              (list-sort . g$list-sort$6073$Od@c8)
              (make-eqv-hashtable . g$make-eqv-hashtable$5479$Od@c8)
              (make-eq-hashtable . g$make-eq-hashtable$5478$Od@c8)
              (hashtable-update! . g$hashtable-update!$5485$Od@c8)
              (hashtable-size . g$hashtable-size$5480$Od@c8)
              (hashtable-set! . g$hashtable-set!$5482$Od@c8)
              (hashtable-ref . g$hashtable-ref$5481$Od@c8)
              (hashtable-delete! . g$hashtable-delete!$5483$Od@c8)
              (hashtable-contains? . g$hashtable-contains?$5484$Od@c8)
              (hashtable-clear! . g$hashtable-clear!$5486$Od@c8)
              (open-string-output-port . g$open-string-output-port$6415$Od@c8)
              (make-i/o-write-error . g$make-i/o-write-error$6344$Od@c8)
              (make-i/o-read-error . g$make-i/o-read-error$6338$Od@c8)
              (make-i/o-port-error . g$make-i/o-port-error$6390$Od@c8)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6350$Od@c8)
              (make-i/o-filename-error . g$make-i/o-filename-error$6358$Od@c8)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6366$Od@c8)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6372$Od@c8)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6384$Od@c8)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6378$Od@c8)
              (make-i/o-error . g$make-i/o-error$6332$Od@c8)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6404$Od@c8)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6398$Od@c8)
              (i/o-write-error? . g$i/o-write-error?$6345$Od@c8)
              (i/o-read-error? . g$i/o-read-error?$6339$Od@c8)
              (i/o-port-error? . g$i/o-port-error?$6392$Od@c8)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6352$Od@c8)
              (i/o-filename-error? . g$i/o-filename-error?$6360$Od@c8)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6367$Od@c8)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6373$Od@c8)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6385$Od@c8)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6379$Od@c8)
              (i/o-error? . g$i/o-error?$6333$Od@c8)
              (i/o-error-port . g$i/o-error-port$6393$Od@c8)
              (i/o-error-filename . g$i/o-error-filename$6361$Od@c8)
              (i/o-encoding-error? . g$i/o-encoding-error?$6406$Od@c8)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6407$Od@c8)
              (i/o-decoding-error? . g$i/o-decoding-error?$6399$Od@c8)
              (scheme-report-environment
                .
                g$scheme-report-environment$11056$Od@c8)
              (quotient . g$quotient$6042$Od@c8)
              (null-environment . g$null-environment$11055$Od@c8)
              (remainder . g$remainder$6043$Od@c8)
              (modulo . g$modulo$6044$Od@c8)
              (remove . g$remove$5690$Od@c8)
              (remv . g$remv$5691$Od@c8)
              (remp . g$remp$5676$Od@c8)
              (remq . g$remq$5692$Od@c8)
              (partition . g$partition$5675$Od@c8)
              (memp . g$memp$5682$Od@c8)
              (member . g$member$5681$Od@c8)
              (exists . g$exists$5686$Od@c8)
              (for-all . g$for-all$5685$Od@c8)
              (fold-right . g$fold-right$5689$Od@c8)
              (fold-left . g$fold-left$5688$Od@c8)
              (find . g$find$5674$Od@c8)
              (filter . g$filter$5677$Od@c8)
              (cons* . g$cons*$5687$Od@c8)
              (assv . g$assv$5678$Od@c8)
              (assp . g$assp$5680$Od@c8)
              (assoc . g$assoc$5679$Od@c8)
              (eval . g$eval$11058$Od@c8)
              (environment . g$environment$11054$Od@c8)
              (who-condition? . g$who-condition?$5987$Od@c8)
              (warning? . g$warning?$5948$Od@c8)
              (violation? . g$violation?$5966$Od@c8)
              (undefined-violation? . g$undefined-violation?$6022$Od@c8)
              (syntax-violation? . g$syntax-violation?$6014$Od@c8)
              (syntax-violation-subform . g$syntax-violation-subform$6016$Od@c8)
              (syntax-violation-form . g$syntax-violation-form$6015$Od@c8)
              (syntax-violation . g$syntax-violation$11072$Od@c8)
              (serious-condition? . g$serious-condition?$5954$Od@c8)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5994$Od@c8)
              (message-condition? . g$message-condition?$5941$Od@c8)
              (make-who-condition . g$make-who-condition$5985$Od@c8)
              (make-warning . g$make-warning$5947$Od@c8)
              (make-violation . g$make-violation$5965$Od@c8)
              (make-undefined-violation . g$make-undefined-violation$6021$Od@c8)
              (make-syntax-violation . g$make-syntax-violation$6011$Od@c8)
              (make-serious-condition . g$make-serious-condition$5953$Od@c8)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5993$Od@c8)
              (make-message-condition . g$make-message-condition$5939$Od@c8)
              (make-lexical-violation . g$make-lexical-violation$6005$Od@c8)
              (make-irritants-condition . g$make-irritants-condition$5977$Od@c8)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5999$Od@c8)
              (make-error . g$make-error$5959$Od@c8)
              (make-assertion-violation . g$make-assertion-violation$5971$Od@c8)
              (lexical-violation? . g$lexical-violation?$6006$Od@c8)
              (irritants-condition? . g$irritants-condition?$5979$Od@c8)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6000$Od@c8)
              (error? . g$error?$5960$Od@c8)
              (condition-who . g$condition-who$5988$Od@c8)
              (condition-message . g$condition-message$5942$Od@c8)
              (condition-irritants . g$condition-irritants$5980$Od@c8)
              (assertion-violation? . g$assertion-violation?$5972$Od@c8)
              (native-endianness . g$native-endianness$5804$Od@c8)
              (bytevector-u64-set! . g$bytevector-u64-set!$5825$Od@c8)
              (bytevector-u64-ref . g$bytevector-u64-ref$5821$Od@c8)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5827$Od@c8)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5823$Od@c8)
              (bytevector-u32-set! . g$bytevector-u32-set!$5817$Od@c8)
              (bytevector-u32-ref . g$bytevector-u32-ref$5813$Od@c8)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5819$Od@c8)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5815$Od@c8)
              (bytevector-u16-set! . g$bytevector-u16-set!$5809$Od@c8)
              (bytevector-u16-ref . g$bytevector-u16-ref$5805$Od@c8)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5811$Od@c8)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5807$Od@c8)
              (bytevector-s64-set! . g$bytevector-s64-set!$5826$Od@c8)
              (bytevector-s64-ref . g$bytevector-s64-ref$5822$Od@c8)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5828$Od@c8)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5824$Od@c8)
              (bytevector-s32-set! . g$bytevector-s32-set!$5818$Od@c8)
              (bytevector-s32-ref . g$bytevector-s32-ref$5814$Od@c8)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5820$Od@c8)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5816$Od@c8)
              (bytevector-s16-set! . g$bytevector-s16-set!$5810$Od@c8)
              (bytevector-s16-ref . g$bytevector-s16-ref$5806$Od@c8)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5812$Od@c8)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5808$Od@c8)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5831$Od@c8)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5829$Od@c8)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5832$Od@c8)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5830$Od@c8)
              (no-nans-violation? . g$no-nans-violation?$6247$Od@c8)
              (no-infinities-violation? . g$no-infinities-violation?$6241$Od@c8)
              (make-no-nans-violation . g$make-no-nans-violation$6246$Od@c8)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6240$Od@c8)
              (fxrotate-bit-field . g$fxrotate-bit-field$6223$Od@c8)
              (fxif . g$fxif$6217$Od@c8)
              (fxcopy-bit-field . g$fxcopy-bit-field$6220$Od@c8)
              (fxcopy-bit . g$fxcopy-bit$6218$Od@c8)
              (fxbit-field . g$fxbit-field$6219$Od@c8)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6222$Od@c8)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6221$Od@c8)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6168$Od@c8)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$6169$Od@c8)
              (bitwise-if . g$bitwise-if$6162$Od@c8)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6165$Od@c8)
              (bitwise-copy-bit . g$bitwise-copy-bit$6163$Od@c8)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6167$Od@c8)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6166$Od@c8)
              (rationalize . g$rationalize$5243$Od@c8)
              (cddddr . g$cddddr$5242$Od@c8)
              (cdddar . g$cdddar$5241$Od@c8)
              (cddadr . g$cddadr$5240$Od@c8)
              (cddaar . g$cddaar$5239$Od@c8)
              (cdaddr . g$cdaddr$5238$Od@c8)
              (cdadar . g$cdadar$5237$Od@c8)
              (cdaadr . g$cdaadr$5236$Od@c8)
              (cdaaar . g$cdaaar$5235$Od@c8)
              (cadddr . g$cadddr$5234$Od@c8)
              (caddar . g$caddar$5233$Od@c8)
              (cadadr . g$cadadr$5232$Od@c8)
              (cadaar . g$cadaar$5231$Od@c8)
              (caaddr . g$caaddr$5230$Od@c8)
              (caadar . g$caadar$5229$Od@c8)
              (caaadr . g$caaadr$5228$Od@c8)
              (caaaar . g$caaaar$5227$Od@c8)
              (cdddr . g$cdddr$5226$Od@c8)
              (cddar . g$cddar$5225$Od@c8)
              (cdadr . g$cdadr$5224$Od@c8)
              (cdaar . g$cdaar$5223$Od@c8)
              (caddr . g$caddr$5222$Od@c8)
              (cadar . g$cadar$5221$Od@c8)
              (caadr . g$caadr$5220$Od@c8)
              (caaar . g$caaar$5219$Od@c8)
              (cddr . g$cddr$5218$Od@c8)
              (cdar . g$cdar$5217$Od@c8)
              (cadr . g$cadr$5216$Od@c8)
              (caar . g$caar$5215$Od@c8)
              (printf . g$printf$6439$Od@c8)
              (fprintf . g$fprintf$6440$Od@c8)
              (format . g$format$6441$Od@c8)
              (make-traced-macro . g$make-traced-macro$6445$Od@c8)
              (make-parameter . g$make-parameter$6525$Od@c8)
              (environment-symbols . g$environment-symbols$11052$Od@c8)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11051$Od@c8)
              (library-path . g$library-path$7053$Od@c8)
              (library-extensions . g$library-extensions$7054$Od@c8)
              (installed-libraries . g$installed-libraries$7074$Od@c8)
              (expand . g$expand$11057$Od@c8)))))))
    (g$install-library$7069$Od@c8
      'g$11821$Od@c8
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$11758$Od@c8)
        (cosh . g$11757$Od@c8)
        (sinh . g$11756$Od@c8)
        (make-guid . g$11755$Od@c8)
        (unspecified? . g$11754$Od@c8)
        (make-trace . g$11753$Od@c8)
        (make-list . g$11752$Od@c8)
        (last-pair . g$11751$Od@c8)
        (load-r5rs . g$11750$Od@c8)
        (license . g$11749$Od@c8)
        (stacktrace . g$11748$Od@c8)
        (ironscheme-build . g$11142$Od@c8)
        (set-symbol-value! . g$11734$Od@c8)
        (symbol-value . g$11733$Od@c8)
        (ungensym . g$11732$Od@c8)
        (gensym . g$11731$Od@c8)
        (void . g$11730$Od@c8)
        (compile-system-libraries . g$11144$Od@c8)
        (compile->closure . g$11146$Od@c8)
        (compile . g$11145$Od@c8)
        (load . g$11141$Od@c8)
        (interaction-environment . g$8231$Od@c8)
        (string-upcase . g$11726$Od@c8)
        (string-titlecase . g$11725$Od@c8)
        (string-normalize-nfkd . g$11724$Od@c8)
        (string-normalize-nfkc . g$11723$Od@c8)
        (string-normalize-nfd . g$11722$Od@c8)
        (string-normalize-nfc . g$11721$Od@c8)
        (string-foldcase . g$11720$Od@c8)
        (string-downcase . g$11719$Od@c8)
        (string-ci>? . g$11718$Od@c8)
        (string-ci>=? . g$11717$Od@c8)
        (string-ci=? . g$11716$Od@c8)
        (string-ci<? . g$11715$Od@c8)
        (string-ci<=? . g$11714$Od@c8)
        (char-whitespace? . g$11713$Od@c8)
        (char-upper-case? . g$11712$Od@c8)
        (char-title-case? . g$11711$Od@c8)
        (char-numeric? . g$11710$Od@c8)
        (char-lower-case? . g$11709$Od@c8)
        (char-general-category . g$11708$Od@c8)
        (char-upcase . g$11707$Od@c8)
        (char-titlecase . g$11706$Od@c8)
        (char-foldcase . g$11705$Od@c8)
        (char-downcase . g$11704$Od@c8)
        (char-ci>? . g$11703$Od@c8)
        (char-ci>=? . g$11702$Od@c8)
        (char-ci=? . g$11701$Od@c8)
        (char-ci<? . g$11700$Od@c8)
        (char-ci<=? . g$11699$Od@c8)
        (char-alphabetic? . g$11698$Od@c8)
        (variable-transformer-procedure . g$7835$Od@c8)
        (variable-transformer? . g$7834$Od@c8)
        (make-variable-transformer . g$7833$Od@c8)
        (identifier? . g$8226$Od@c8)
        (generate-temporaries . g$8218$Od@c8)
        (free-identifier=? . g$8219$Od@c8)
        (syntax->datum . g$8228$Od@c8)
        (datum->syntax . g$8227$Od@c8)
        (bound-identifier=? . g$8220$Od@c8)
        (record-type-descriptor? . g$11697$Od@c8)
        (record-predicate . g$11696$Od@c8)
        (record-mutator . g$11695$Od@c8)
        (record-constructor . g$11694$Od@c8)
        (record-accessor . g$11693$Od@c8)
        (make-record-type-descriptor . g$11692$Od@c8)
        (make-record-constructor-descriptor . g$11691$Od@c8)
        (record? . g$11690$Od@c8)
        (record-type-uid . g$11689$Od@c8)
        (record-type-sealed? . g$11688$Od@c8)
        (record-type-parent . g$11687$Od@c8)
        (record-type-opaque? . g$11686$Od@c8)
        (record-type-name . g$11685$Od@c8)
        (record-type-generative? . g$11684$Od@c8)
        (record-type-field-names . g$11683$Od@c8)
        (record-rtd . g$11682$Od@c8)
        (record-field-mutable? . g$11681$Od@c8)
        (delete-file . g$6016$Od@c8)
        (file-exists? . g$6015$Od@c8)
        (vector-sort! . g$11680$Od@c8)
        (vector-sort . g$11679$Od@c8)
        (list-sort . g$6523$Od@c8)
        (symbol-hash . g$11678$Od@c8)
        (string-ci-hash . g$11677$Od@c8)
        (string-hash . g$11676$Od@c8)
        (equal-hash . g$11675$Od@c8)
        (hashtable-equivalence-function . g$11674$Od@c8)
        (make-hashtable . g$11673$Od@c8)
        (hashtable-hash-function . g$11672$Od@c8)
        (make-eqv-hashtable . g$5983$Od@c8)
        (make-eq-hashtable . g$5982$Od@c8)
        (hashtable? . g$11671$Od@c8)
        (hashtable-update! . g$5989$Od@c8)
        (hashtable-size . g$5984$Od@c8)
        (hashtable-set! . g$5986$Od@c8)
        (hashtable-ref . g$5985$Od@c8)
        (hashtable-mutable? . g$11670$Od@c8)
        (hashtable-keys . g$11669$Od@c8)
        (hashtable-entries . g$11668$Od@c8)
        (hashtable-delete! . g$5987$Od@c8)
        (hashtable-copy . g$11667$Od@c8)
        (hashtable-contains? . g$5988$Od@c8)
        (hashtable-clear! . g$5990$Od@c8)
        (call-with-output-file . g$11666$Od@c8)
        (call-with-input-file . g$11665$Od@c8)
        (write-char . g$11664$Od@c8)
        (write . g$11663$Od@c8)
        (with-output-to-file . g$11662$Od@c8)
        (with-input-from-file . g$11661$Od@c8)
        (read-char . g$11660$Od@c8)
        (read . g$11659$Od@c8)
        (peek-char . g$11658$Od@c8)
        (open-output-file . g$11657$Od@c8)
        (open-input-file . g$11656$Od@c8)
        (newline . g$11655$Od@c8)
        (display . g$11654$Od@c8)
        (close-output-port . g$11653$Od@c8)
        (close-input-port . g$11652$Od@c8)
        (eof-object? . g$11651$Od@c8)
        (eof-object . g$11650$Od@c8)
        (current-error-port . g$11649$Od@c8)
        (current-output-port . g$11648$Od@c8)
        (current-input-port . g$11647$Od@c8)
        (output-port? . g$11646$Od@c8)
        (input-port? . g$11645$Od@c8)
        (utf-8-codec . g$11644$Od@c8)
        (utf-16-codec . g$11643$Od@c8)
        (transcoder-error-handling-mode . g$11642$Od@c8)
        (transcoder-eol-style . g$11641$Od@c8)
        (transcoder-codec . g$11640$Od@c8)
        (transcoded-port . g$11639$Od@c8)
        (textual-port? . g$11638$Od@c8)
        (string->bytevector . g$11637$Od@c8)
        (standard-output-port . g$11636$Od@c8)
        (standard-input-port . g$11635$Od@c8)
        (standard-error-port . g$11634$Od@c8)
        (set-port-position! . g$11633$Od@c8)
        (put-u8 . g$11632$Od@c8)
        (put-string . g$11631$Od@c8)
        (put-datum . g$11630$Od@c8)
        (put-char . g$11629$Od@c8)
        (put-bytevector . g$11628$Od@c8)
        (port? . g$11627$Od@c8)
        (port-transcoder . g$11626$Od@c8)
        (port-position . g$11625$Od@c8)
        (port-has-set-port-position!? . g$11624$Od@c8)
        (port-has-port-position? . g$11623$Od@c8)
        (port-eof? . g$11622$Od@c8)
        (output-port-buffer-mode . g$11621$Od@c8)
        (open-string-output-port . g$6914$Od@c8)
        (open-string-input-port . g$11620$Od@c8)
        (open-file-output-port . g$11619$Od@c8)
        (open-file-input/output-port . g$11618$Od@c8)
        (open-file-input-port . g$11617$Od@c8)
        (open-bytevector-output-port . g$11616$Od@c8)
        (open-bytevector-input-port . g$11615$Od@c8)
        (native-transcoder . g$11614$Od@c8)
        (native-eol-style . g$11613$Od@c8)
        (make-transcoder . g$11612$Od@c8)
        (latin-1-codec . g$11611$Od@c8)
        (make-i/o-write-error . g$6771$Od@c8)
        (make-i/o-read-error . g$6757$Od@c8)
        (make-i/o-port-error . g$6876$Od@c8)
        (make-i/o-invalid-position-error . g$6786$Od@c8)
        (make-i/o-filename-error . g$6803$Od@c8)
        (make-i/o-file-protection-error . g$6819$Od@c8)
        (make-i/o-file-is-read-only-error . g$6833$Od@c8)
        (make-i/o-file-does-not-exist-error . g$6861$Od@c8)
        (make-i/o-file-already-exists-error . g$6847$Od@c8)
        (make-i/o-error . g$6743$Od@c8)
        (make-i/o-encoding-error . g$6907$Od@c8)
        (make-i/o-decoding-error . g$6892$Od@c8)
        (make-custom-textual-output-port . g$11610$Od@c8)
        (make-custom-textual-input/output-port . g$11609$Od@c8)
        (make-custom-textual-input-port . g$11608$Od@c8)
        (make-custom-binary-output-port . g$11607$Od@c8)
        (make-custom-binary-input/output-port . g$11606$Od@c8)
        (make-custom-binary-input-port . g$11605$Od@c8)
        (make-bytevector . g$11604$Od@c8)
        (lookahead-u8 . g$11603$Od@c8)
        (lookahead-char . g$11602$Od@c8)
        (i/o-write-error? . g$6772$Od@c8)
        (i/o-read-error? . g$6758$Od@c8)
        (i/o-port-error? . g$6878$Od@c8)
        (i/o-invalid-position-error? . g$6788$Od@c8)
        (i/o-filename-error? . g$6805$Od@c8)
        (i/o-file-protection-error? . g$6820$Od@c8)
        (i/o-file-is-read-only-error? . g$6834$Od@c8)
        (i/o-file-does-not-exist-error? . g$6862$Od@c8)
        (i/o-file-already-exists-error? . g$6848$Od@c8)
        (i/o-error? . g$6744$Od@c8)
        (i/o-error-port . g$6879$Od@c8)
        (i/o-error-filename . g$6806$Od@c8)
        (i/o-encoding-error? . g$6909$Od@c8)
        (i/o-encoding-error-char . g$6910$Od@c8)
        (i/o-decoding-error? . g$6893$Od@c8)
        (get-u8 . g$11601$Od@c8)
        (get-string-n! . g$11600$Od@c8)
        (get-string-n . g$11599$Od@c8)
        (get-string-all . g$11598$Od@c8)
        (get-line . g$11597$Od@c8)
        (get-datum . g$11596$Od@c8)
        (get-char . g$11595$Od@c8)
        (get-bytevector-some . g$11594$Od@c8)
        (get-bytevector-n! . g$11593$Od@c8)
        (get-bytevector-n . g$11592$Od@c8)
        (get-bytevector-all . g$11591$Od@c8)
        (flush-output-port . g$11590$Od@c8)
        (close-port . g$11589$Od@c8)
        (call-with-string-output-port . g$11588$Od@c8)
        (call-with-port . g$11587$Od@c8)
        (call-with-bytevector-output-port . g$11586$Od@c8)
        (bytevector->string . g$11585$Od@c8)
        (buffer-mode? . g$11584$Od@c8)
        (binary-port? . g$11583$Od@c8)
        (scheme-report-environment . g$8209$Od@c8)
        (quotient . g$6510$Od@c8)
        (null-environment . g$8208$Od@c8)
        (remainder . g$6511$Od@c8)
        (modulo . g$6512$Od@c8)
        (inexact->exact . g$11582$Od@c8)
        (force . g$11581$Od@c8)
        (exact->inexact . g$11580$Od@c8)
        (exit . g$11579$Od@c8)
        (command-line . g$11578$Od@c8)
        (string-fill! . g$11577$Od@c8)
        (string-set! . g$11576$Od@c8)
        (set-cdr! . g$11575$Od@c8)
        (set-car! . g$11574$Od@c8)
        (remove . g$6096$Od@c8)
        (remv . g$6097$Od@c8)
        (remp . g$6082$Od@c8)
        (remq . g$6098$Od@c8)
        (partition . g$6081$Od@c8)
        (memv . g$11573$Od@c8)
        (memq . g$11572$Od@c8)
        (memp . g$6088$Od@c8)
        (member . g$6087$Od@c8)
        (exists . g$6092$Od@c8)
        (for-all . g$6091$Od@c8)
        (fold-right . g$6095$Od@c8)
        (fold-left . g$6094$Od@c8)
        (find . g$6080$Od@c8)
        (filter . g$6083$Od@c8)
        (cons* . g$6093$Od@c8)
        (assv . g$6084$Od@c8)
        (assq . g$11571$Od@c8)
        (assp . g$6086$Od@c8)
        (assoc . g$6085$Od@c8)
        (with-exception-handler . g$11570$Od@c8)
        (raise-continuable . g$11569$Od@c8)
        (raise . g$11568$Od@c8)
        (eval . g$8211$Od@c8)
        (environment . g$8207$Od@c8)
        (make-enumeration . g$11567$Od@c8)
        (enum-set=? . g$11566$Od@c8)
        (enum-set-universe . g$11565$Od@c8)
        (enum-set-union . g$11564$Od@c8)
        (enum-set-subset? . g$11563$Od@c8)
        (enum-set-projection . g$11562$Od@c8)
        (enum-set-member? . g$11561$Od@c8)
        (enum-set-intersection . g$11560$Od@c8)
        (enum-set-indexer . g$11559$Od@c8)
        (enum-set-difference . g$11558$Od@c8)
        (enum-set-constructor . g$11557$Od@c8)
        (enum-set-complement . g$11556$Od@c8)
        (enum-set->list . g$11555$Od@c8)
        (who-condition? . g$6421$Od@c8)
        (warning? . g$6332$Od@c8)
        (violation? . g$6374$Od@c8)
        (undefined-violation? . g$6498$Od@c8)
        (syntax-violation? . g$6482$Od@c8)
        (syntax-violation-subform . g$6484$Od@c8)
        (syntax-violation-form . g$6483$Od@c8)
        (syntax-violation . g$8225$Od@c8)
        (simple-conditions . g$11554$Od@c8)
        (serious-condition? . g$6346$Od@c8)
        (non-continuable-violation? . g$6436$Od@c8)
        (message-condition? . g$6317$Od@c8)
        (make-who-condition . g$6419$Od@c8)
        (make-warning . g$6331$Od@c8)
        (make-violation . g$6373$Od@c8)
        (make-undefined-violation . g$6497$Od@c8)
        (make-syntax-violation . g$6479$Od@c8)
        (make-serious-condition . g$6345$Od@c8)
        (make-non-continuable-violation . g$6435$Od@c8)
        (make-message-condition . g$6315$Od@c8)
        (make-lexical-violation . g$6463$Od@c8)
        (make-irritants-condition . g$6402$Od@c8)
        (make-implementation-restriction-violation . g$6449$Od@c8)
        (make-error . g$6359$Od@c8)
        (make-assertion-violation . g$6387$Od@c8)
        (lexical-violation? . g$6464$Od@c8)
        (irritants-condition? . g$6404$Od@c8)
        (implementation-restriction-violation? . g$6450$Od@c8)
        (error? . g$6360$Od@c8)
        (condition-who . g$6422$Od@c8)
        (condition-predicate . g$11553$Od@c8)
        (condition-message . g$6318$Od@c8)
        (condition-irritants . g$6405$Od@c8)
        (condition-accessor . g$11552$Od@c8)
        (condition . g$11551$Od@c8)
        (assertion-violation? . g$6388$Od@c8)
        (condition? . g$11550$Od@c8)
        (utf32->string . g$11549$Od@c8)
        (utf16->string . g$11548$Od@c8)
        (utf8->string . g$11547$Od@c8)
        (uint-list->bytevector . g$11546$Od@c8)
        (u8-list->bytevector . g$11545$Od@c8)
        (string->utf8 . g$11544$Od@c8)
        (string->utf32 . g$11543$Od@c8)
        (string->utf16 . g$11542$Od@c8)
        (sint-list->bytevector . g$11541$Od@c8)
        (native-endianness . g$6172$Od@c8)
        (bytevector? . g$11540$Od@c8)
        (bytevector=? . g$11539$Od@c8)
        (bytevector-uint-set! . g$11538$Od@c8)
        (bytevector-uint-ref . g$11537$Od@c8)
        (bytevector-u8-set! . g$11536$Od@c8)
        (bytevector-u8-ref . g$11535$Od@c8)
        (bytevector-u64-set! . g$6193$Od@c8)
        (bytevector-u64-ref . g$6189$Od@c8)
        (bytevector-u64-native-set! . g$6195$Od@c8)
        (bytevector-u64-native-ref . g$6191$Od@c8)
        (bytevector-u32-set! . g$6185$Od@c8)
        (bytevector-u32-ref . g$6181$Od@c8)
        (bytevector-u32-native-set! . g$6187$Od@c8)
        (bytevector-u32-native-ref . g$6183$Od@c8)
        (bytevector-u16-set! . g$6177$Od@c8)
        (bytevector-u16-ref . g$6173$Od@c8)
        (bytevector-u16-native-set! . g$6179$Od@c8)
        (bytevector-u16-native-ref . g$6175$Od@c8)
        (bytevector-sint-set! . g$11534$Od@c8)
        (bytevector-sint-ref . g$11533$Od@c8)
        (bytevector-s8-set! . g$11532$Od@c8)
        (bytevector-s8-ref . g$11531$Od@c8)
        (bytevector-s64-set! . g$6194$Od@c8)
        (bytevector-s64-ref . g$6190$Od@c8)
        (bytevector-s64-native-set! . g$6196$Od@c8)
        (bytevector-s64-native-ref . g$6192$Od@c8)
        (bytevector-s32-set! . g$6186$Od@c8)
        (bytevector-s32-ref . g$6182$Od@c8)
        (bytevector-s32-native-set! . g$6188$Od@c8)
        (bytevector-s32-native-ref . g$6184$Od@c8)
        (bytevector-s16-set! . g$6178$Od@c8)
        (bytevector-s16-ref . g$6174$Od@c8)
        (bytevector-s16-native-set! . g$6180$Od@c8)
        (bytevector-s16-native-ref . g$6176$Od@c8)
        (bytevector-length . g$11530$Od@c8)
        (bytevector-ieee-single-set! . g$11529$Od@c8)
        (bytevector-ieee-single-ref . g$11528$Od@c8)
        (bytevector-ieee-single-native-set! . g$6199$Od@c8)
        (bytevector-ieee-single-native-ref . g$6197$Od@c8)
        (bytevector-ieee-double-set! . g$11527$Od@c8)
        (bytevector-ieee-double-ref . g$11526$Od@c8)
        (bytevector-ieee-double-native-set! . g$6200$Od@c8)
        (bytevector-ieee-double-native-ref . g$6198$Od@c8)
        (bytevector-fill! . g$11525$Od@c8)
        (bytevector-copy! . g$11524$Od@c8)
        (bytevector-copy . g$11523$Od@c8)
        (bytevector->uint-list . g$11522$Od@c8)
        (bytevector->u8-list . g$11521$Od@c8)
        (bytevector->sint-list . g$11520$Od@c8)
        (no-nans-violation? . g$6729$Od@c8)
        (no-infinities-violation? . g$6715$Od@c8)
        (make-no-nans-violation . g$6728$Od@c8)
        (make-no-infinities-violation . g$6714$Od@c8)
        (real->flonum . g$11519$Od@c8)
        (flzero? . g$11518$Od@c8)
        (fltruncate . g$11517$Od@c8)
        (fltan . g$11516$Od@c8)
        (flsqrt . g$11515$Od@c8)
        (flsin . g$11514$Od@c8)
        (flround . g$11513$Od@c8)
        (flpositive? . g$11512$Od@c8)
        (flonum? . g$11511$Od@c8)
        (flodd? . g$11510$Od@c8)
        (flnumerator . g$11509$Od@c8)
        (flnegative? . g$11508$Od@c8)
        (flnan? . g$11507$Od@c8)
        (flmod0 . g$11506$Od@c8)
        (flmod . g$11505$Od@c8)
        (flmin . g$11504$Od@c8)
        (flmax . g$11503$Od@c8)
        (fllog . g$11502$Od@c8)
        (flinteger? . g$11501$Od@c8)
        (flinfinite? . g$11500$Od@c8)
        (flfloor . g$11499$Od@c8)
        (flfinite? . g$11498$Od@c8)
        (flexpt . g$11497$Od@c8)
        (flexp . g$11496$Od@c8)
        (fleven? . g$11495$Od@c8)
        (fldiv0-and-mod0 . g$11494$Od@c8)
        (fldiv0 . g$11493$Od@c8)
        (fldiv-and-mod . g$11492$Od@c8)
        (fldiv . g$11491$Od@c8)
        (fldenominator . g$11490$Od@c8)
        (flcos . g$11489$Od@c8)
        (flceiling . g$11488$Od@c8)
        (flatan . g$11487$Od@c8)
        (flasin . g$11486$Od@c8)
        (flacos . g$11485$Od@c8)
        (flabs . g$11484$Od@c8)
        (fl>? . g$11483$Od@c8)
        (fl>=? . g$11482$Od@c8)
        (fl=? . g$11481$Od@c8)
        (fl<? . g$11480$Od@c8)
        (fl<=? . g$11479$Od@c8)
        (fl/ . g$11478$Od@c8)
        (fl- . g$11477$Od@c8)
        (fl+ . g$11476$Od@c8)
        (fl* . g$11475$Od@c8)
        (fixnum->flonum . g$11474$Od@c8)
        (fxzero? . g$11473$Od@c8)
        (fxxor . g$11472$Od@c8)
        (fxrotate-bit-field . g$6660$Od@c8)
        (fxreverse-bit-field . g$11471$Od@c8)
        (fxpositive? . g$11470$Od@c8)
        (fxodd? . g$11469$Od@c8)
        (fxnot . g$11468$Od@c8)
        (fxnegative? . g$11467$Od@c8)
        (fxmod0 . g$11466$Od@c8)
        (fxmod . g$11465$Od@c8)
        (fxmin . g$11464$Od@c8)
        (fxmax . g$11463$Od@c8)
        (fxlength . g$11462$Od@c8)
        (fxior . g$11461$Od@c8)
        (fxif . g$6654$Od@c8)
        (fxfirst-bit-set . g$11460$Od@c8)
        (fxeven? . g$11459$Od@c8)
        (fxdiv0-and-mod0 . g$11458$Od@c8)
        (fxdiv0 . g$11457$Od@c8)
        (fxdiv-and-mod . g$11456$Od@c8)
        (fxdiv . g$11455$Od@c8)
        (fxcopy-bit-field . g$6657$Od@c8)
        (fxcopy-bit . g$6655$Od@c8)
        (fxbit-set? . g$11454$Od@c8)
        (fxbit-field . g$6656$Od@c8)
        (fxbit-count . g$11453$Od@c8)
        (fxarithmetic-shift-right . g$6659$Od@c8)
        (fxarithmetic-shift-left . g$6658$Od@c8)
        (fxarithmetic-shift . g$11452$Od@c8)
        (fxand . g$11451$Od@c8)
        (fx>? . g$11450$Od@c8)
        (fx>=? . g$11449$Od@c8)
        (fx=? . g$11448$Od@c8)
        (fx<? . g$11447$Od@c8)
        (fx<=? . g$11446$Od@c8)
        (fx-/carry . g$11445$Od@c8)
        (fx- . g$11444$Od@c8)
        (fx+/carry . g$11443$Od@c8)
        (fx+ . g$11442$Od@c8)
        (fx*/carry . g$11441$Od@c8)
        (fx* . g$11440$Od@c8)
        (greatest-fixnum . g$11439$Od@c8)
        (least-fixnum . g$11438$Od@c8)
        (fixnum-width . g$11437$Od@c8)
        (fixnum? . g$11436$Od@c8)
        (bitwise-rotate-bit-field . g$6608$Od@c8)
        (bitwise-reverse-bit-field . g$6609$Od@c8)
        (bitwise-length . g$11435$Od@c8)
        (bitwise-if . g$6602$Od@c8)
        (bitwise-first-bit-set . g$11434$Od@c8)
        (bitwise-copy-bit-field . g$6605$Od@c8)
        (bitwise-copy-bit . g$6603$Od@c8)
        (bitwise-bit-set? . g$11433$Od@c8)
        (bitwise-bit-field . g$11432$Od@c8)
        (bitwise-bit-count . g$11431$Od@c8)
        (bitwise-xor . g$11430$Od@c8)
        (bitwise-ior . g$11429$Od@c8)
        (bitwise-and . g$11428$Od@c8)
        (bitwise-not . g$11427$Od@c8)
        (bitwise-arithmetic-shift-right . g$6607$Od@c8)
        (bitwise-arithmetic-shift-left . g$6606$Od@c8)
        (bitwise-arithmetic-shift . g$11426$Od@c8)
        (zero? . g$11425$Od@c8)
        (vector? . g$11424$Od@c8)
        (vector-set! . g$11423$Od@c8)
        (vector-ref . g$11422$Od@c8)
        (vector-map . g$11421$Od@c8)
        (vector-length . g$11420$Od@c8)
        (vector-for-each . g$11419$Od@c8)
        (vector-fill! . g$11418$Od@c8)
        (vector->list . g$11417$Od@c8)
        (vector . g$11416$Od@c8)
        (values . g$11415$Od@c8)
        (truncate . g$11414$Od@c8)
        (tan . g$11413$Od@c8)
        (symbol? . g$11412$Od@c8)
        (symbol=? . g$11411$Od@c8)
        (symbol->string . g$11410$Od@c8)
        (substring . g$11409$Od@c8)
        (string? . g$11408$Od@c8)
        (string>? . g$11407$Od@c8)
        (string>=? . g$11406$Od@c8)
        (string=? . g$11405$Od@c8)
        (string<? . g$11404$Od@c8)
        (string<=? . g$11403$Od@c8)
        (string-ref . g$11402$Od@c8)
        (string-length . g$11401$Od@c8)
        (string-for-each . g$11400$Od@c8)
        (string-copy . g$11399$Od@c8)
        (string-append . g$11398$Od@c8)
        (string->symbol . g$11397$Od@c8)
        (string->number . g$11396$Od@c8)
        (string->list . g$11395$Od@c8)
        (string . g$11394$Od@c8)
        (sqrt . g$11393$Od@c8)
        (sin . g$11392$Od@c8)
        (round . g$11391$Od@c8)
        (reverse . g$11390$Od@c8)
        (real? . g$11389$Od@c8)
        (real-valued? . g$11388$Od@c8)
        (real-part . g$11387$Od@c8)
        (rationalize . g$5633$Od@c8)
        (rational? . g$11386$Od@c8)
        (rational-valued? . g$11385$Od@c8)
        (procedure? . g$11384$Od@c8)
        (positive? . g$11383$Od@c8)
        (pair? . g$11382$Od@c8)
        (odd? . g$11381$Od@c8)
        (numerator . g$11380$Od@c8)
        (number? . g$11379$Od@c8)
        (number->string . g$11378$Od@c8)
        (null? . g$11377$Od@c8)
        (not . g$11376$Od@c8)
        (negative? . g$11375$Od@c8)
        (nan? . g$11374$Od@c8)
        (min . g$11373$Od@c8)
        (max . g$11372$Od@c8)
        (map . g$11371$Od@c8)
        (make-vector . g$11370$Od@c8)
        (make-string . g$11369$Od@c8)
        (make-rectangular . g$11368$Od@c8)
        (make-polar . g$11367$Od@c8)
        (magnitude . g$11366$Od@c8)
        (log . g$11365$Od@c8)
        (list? . g$11364$Od@c8)
        (list-tail . g$11363$Od@c8)
        (list-ref . g$11362$Od@c8)
        (list->vector . g$11361$Od@c8)
        (list->string . g$11360$Od@c8)
        (list . g$11359$Od@c8)
        (length . g$11358$Od@c8)
        (lcm . g$11357$Od@c8)
        (integer? . g$11356$Od@c8)
        (integer-valued? . g$11355$Od@c8)
        (integer->char . g$11354$Od@c8)
        (infinite? . g$11353$Od@c8)
        (inexact? . g$11352$Od@c8)
        (inexact . g$11351$Od@c8)
        (imag-part . g$11350$Od@c8)
        (gcd . g$11349$Od@c8)
        (for-each . g$11348$Od@c8)
        (floor . g$11347$Od@c8)
        (finite? . g$11346$Od@c8)
        (expt . g$11345$Od@c8)
        (exp . g$11344$Od@c8)
        (exact? . g$11343$Od@c8)
        (exact-integer-sqrt . g$11342$Od@c8)
        (exact . g$11341$Od@c8)
        (even? . g$11340$Od@c8)
        (error . g$11339$Od@c8)
        (eqv? . g$11338$Od@c8)
        (equal? . g$11337$Od@c8)
        (eq? . g$11336$Od@c8)
        (dynamic-wind . g$11335$Od@c8)
        (div0-and-mod0 . g$11334$Od@c8)
        (mod0 . g$11333$Od@c8)
        (div0 . g$11332$Od@c8)
        (div-and-mod . g$11331$Od@c8)
        (mod . g$11330$Od@c8)
        (div . g$11329$Od@c8)
        (denominator . g$11328$Od@c8)
        (cos . g$11327$Od@c8)
        (cons . g$11326$Od@c8)
        (complex? . g$11325$Od@c8)
        (char? . g$11324$Od@c8)
        (char>? . g$11323$Od@c8)
        (char>=? . g$11322$Od@c8)
        (char=? . g$11321$Od@c8)
        (char<? . g$11320$Od@c8)
        (char<=? . g$11319$Od@c8)
        (char->integer . g$11318$Od@c8)
        (ceiling . g$11317$Od@c8)
        (call-with-values . g$11316$Od@c8)
        (call/cc . g$11315$Od@c8)
        (call-with-current-continuation . g$11314$Od@c8)
        (cddddr . g$5632$Od@c8)
        (cdddar . g$5631$Od@c8)
        (cddadr . g$5630$Od@c8)
        (cddaar . g$5629$Od@c8)
        (cdaddr . g$5628$Od@c8)
        (cdadar . g$5627$Od@c8)
        (cdaadr . g$5626$Od@c8)
        (cdaaar . g$5625$Od@c8)
        (cadddr . g$5624$Od@c8)
        (caddar . g$5623$Od@c8)
        (cadadr . g$5622$Od@c8)
        (cadaar . g$5621$Od@c8)
        (caaddr . g$5620$Od@c8)
        (caadar . g$5619$Od@c8)
        (caaadr . g$5618$Od@c8)
        (caaaar . g$5617$Od@c8)
        (cdddr . g$5616$Od@c8)
        (cddar . g$5615$Od@c8)
        (cdadr . g$5614$Od@c8)
        (cdaar . g$5613$Od@c8)
        (caddr . g$5612$Od@c8)
        (cadar . g$5611$Od@c8)
        (caadr . g$5610$Od@c8)
        (caaar . g$5609$Od@c8)
        (cddr . g$5608$Od@c8)
        (cdar . g$5607$Od@c8)
        (cadr . g$5606$Od@c8)
        (caar . g$5605$Od@c8)
        (cdr . g$11313$Od@c8)
        (car . g$11312$Od@c8)
        (boolean? . g$11311$Od@c8)
        (boolean=? . g$11310$Od@c8)
        (atan . g$11309$Od@c8)
        (assertion-violation . g$11308$Od@c8)
        (asin . g$11307$Od@c8)
        (apply . g$11306$Od@c8)
        (append . g$11305$Od@c8)
        (angle . g$11304$Od@c8)
        (acos . g$11303$Od@c8)
        (abs . g$11302$Od@c8)
        (/ . g$11301$Od@c8)
        (* . g$11300$Od@c8)
        (- . g$11299$Od@c8)
        (+ . g$11298$Od@c8)
        (>= . g$11297$Od@c8)
        (> . g$11296$Od@c8)
        (= . g$11295$Od@c8)
        (<= . g$11294$Od@c8)
        (< . g$11293$Od@c8)
        (printf . g$6923$Od@c8)
        (fprintf . g$6924$Od@c8)
        (format . g$6925$Od@c8)
        (get-arity . g$11288$Od@c8)
        (gc-collect . g$11287$Od@c8)
        (clr-type? . g$11286$Od@c8)
        (get-clr-type . g$11285$Od@c8)
        (vector-append . g$11284$Od@c8)
        (vector-filter . g$11283$Od@c8)
        (vector-reverse! . g$11282$Od@c8)
        (vector-contains? . g$11281$Od@c8)
        (vector-index-of . g$11280$Od@c8)
        (vector-copy . g$11279$Od@c8)
        (vector-binary-search . g$11278$Od@c8)
        (get-output-string . g$11277$Od@c8)
        (open-output-string . g$11276$Od@c8)
        (open-input-string . g$11275$Od@c8)
        (string-format . g$11274$Od@c8)
        (make-traced-procedure . g$11273$Od@c8)
        (make-traced-macro . g$6944$Od@c8)
        (pmap . g$11272$Od@c8)
        (time-it . g$11271$Od@c8)
        (make-parameter . g$6949$Od@c8)
        (library-locator . g$11270$Od@c8)
        (get-library-paths . g$11269$Od@c8)
        (environment-symbols . g$8205$Od@c8)
        (interaction-environment-symbols . g$8204$Od@c8)
        (library-path . g$7374$Od@c8)
        (library-extensions . g$7375$Od@c8)
        (installed-libraries . g$7395$Od@c8)
        (expand . g$8210$Od@c8)
        (&no-nans . g$11268$Od@c8)
        (&no-infinities . g$11267$Od@c8)
        (&i/o-encoding . g$11266$Od@c8)
        (&i/o-decoding . g$11265$Od@c8)
        (&i/o-port . g$11264$Od@c8)
        (&i/o-file-does-not-exist . g$11263$Od@c8)
        (&i/o-file-already-exists . g$11262$Od@c8)
        (&i/o-file-is-read-only . g$11261$Od@c8)
        (&i/o-file-protection . g$11260$Od@c8)
        (&i/o-filename . g$11259$Od@c8)
        (&i/o-invalid-position . g$11258$Od@c8)
        (&i/o-write . g$11257$Od@c8)
        (&i/o-read . g$11256$Od@c8)
        (&i/o . g$11255$Od@c8)
        (&non-continuable . g$11254$Od@c8)
        (&undefined . g$11253$Od@c8)
        (&syntax . g$11252$Od@c8)
        (&lexical . g$11251$Od@c8)
        (&implementation-restriction . g$11250$Od@c8)
        (&who . g$11248$Od@c8)
        (&irritants . g$11247$Od@c8)
        (&assertion . g$11246$Od@c8)
        (&violation . g$11245$Od@c8)
        (&error . g$11244$Od@c8)
        (&serious . g$11243$Od@c8)
        (&warning . g$11242$Od@c8)
        (&message . g$11241$Od@c8)
        (&condition . g$11240$Od@c8)
        (define-condition-type . g$11239$Od@c8)
        (define-enumeration . g$11238$Od@c8)
        (define-record-type . g$11237$Od@c8)
        (parent-rtd . g$11236$Od@c8)
        (nongenerative . g$11235$Od@c8)
        (opaque . g$11234$Od@c8)
        (sealed . g$11233$Od@c8)
        (protocol . g$11232$Od@c8)
        (parent . g$11231$Od@c8)
        (immutable . g$11230$Od@c8)
        (mutable . g$11229$Od@c8)
        (fields . g$11228$Od@c8)
        (error-handling-mode . g$11227$Od@c8)
        (file-options . g$11226$Od@c8)
        (buffer-mode . g$11225$Od@c8)
        (eol-style . g$11224$Od@c8)
        (guard . g$11223$Od@c8)
        (trace-letrec-syntax . g$11222$Od@c8)
        (trace-let-syntax . g$11221$Od@c8)
        (trace-define-syntax . g$11220$Od@c8)
        (trace-define . g$11219$Od@c8)
        (trace-lambda . g$11218$Od@c8)
        (unsyntax-splicing . g$11217$Od@c8)
        (unsyntax . g$11216$Od@c8)
        (unquote-splicing . g$11215$Od@c8)
        (unquote . g$11214$Od@c8)
        (_ . g$11213$Od@c8)
        (else . g$11212$Od@c8)
        (=> . g$11211$Od@c8)
        (... . g$11210$Od@c8)
        (assert . g$11209$Od@c8)
        (endianness . g$11208$Od@c8)
        (delay . g$11207$Od@c8)
        (time . g$11206$Od@c8)
        (or . g$11205$Od@c8)
        (and . g$11204$Od@c8)
        (do . g$11203$Od@c8)
        (cond . g$11202$Od@c8)
        (let* . g$11201$Od@c8)
        (let . g$11200$Od@c8)
        (identifier-syntax . g$11199$Od@c8)
        (with-syntax . g$11198$Od@c8)
        (quasisyntax . g$11197$Od@c8)
        (quasiquote . g$11196$Od@c8)
        (syntax-rules . g$11195$Od@c8)
        (include-into . g$11194$Od@c8)
        (include . g$11193$Od@c8)
        (let-values . g$11191$Od@c8)
        (let*-values . g$11190$Od@c8)
        (record-constructor-descriptor . g$11189$Od@c8)
        (record-type-descriptor . g$11188$Od@c8)
        (fluid-let-syntax . g$11187$Od@c8)
        (case . g$11186$Od@c8)
        (parameterize . g$11185$Od@c8)
        (unless . g$11184$Od@c8)
        (when . g$11183$Od@c8)
        (if . g$11182$Od@c8)
        (letrec* . g$11181$Od@c8)
        (letrec . g$11180$Od@c8)
        (case-lambda . g$11178$Od@c8)
        (lambda . g$11177$Od@c8)
        (syntax . g$11176$Od@c8)
        (syntax-case . g$11175$Od@c8)
        (quote . g$11174$Od@c8)
        (letrec-syntax . g$11172$Od@c8)
        (let-syntax . g$11171$Od@c8)
        (set! . g$11170$Od@c8)
        (import . g$11169$Od@c8)
        (library . g$11168$Od@c8)
        (begin . g$11167$Od@c8)
        (module . g$11166$Od@c8)
        (define-syntax . g$11165$Od@c8)
        (define . g$11164$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11822$Od@c8
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11269$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$Od@c8
      'g$11823$Od@c8
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$11763$Od@c8)
        (annotation-source . g$11762$Od@c8)
        (annotation-expression . g$11761$Od@c8)
        (annotation? . g$11760$Od@c8)
        (read-annotated . g$11759$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$Od@c8
      'g$11824$Od@c8
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$11729$Od@c8)
        (serialize-library . g$11728$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$Od@c8
      'g$11825$Od@c8
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$7835$Od@c8)
        (variable-transformer? . g$7834$Od@c8)
        (eqv-hash . g$11291$Od@c8)
        (eq-hash . g$11290$Od@c8)
        (reverse! . g$11289$Od@c8)
        (make-traced-procedure . g$11273$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$Od@c8
      'g$11826$Od@c8
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11292$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11827$Od@c8
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$11747$Od@c8)
        (clr-field-set!-internal . g$11746$Od@c8)
        (clr-field-get-internal . g$11745$Od@c8)
        (clr-cast-internal . g$11744$Od@c8)
        (clr-call-internal . g$11743$Od@c8)
        (clr-new-internal . g$11742$Od@c8)
        (clr-new-array-internal . g$11741$Od@c8)
        (clr-is-internal . g$11740$Od@c8)
        (clr-reference-internal . g$11739$Od@c8)
        (clr-using-internal . g$11738$Od@c8)
        (clr-clear-usings-internal . g$11737$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11828$Od@c8
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11215$Od@c8)
        (unquote . g$11214$Od@c8)
        (delay . g$11207$Od@c8)
        (or . g$11205$Od@c8)
        (and . g$11204$Od@c8)
        (do . g$11203$Od@c8)
        (cond . g$11202$Od@c8)
        (let* . g$11201$Od@c8)
        (let . g$11200$Od@c8)
        (quasiquote . g$11196$Od@c8)
        (syntax-rules . g$11195$Od@c8)
        (case . g$11186$Od@c8)
        (if . g$11182$Od@c8)
        (letrec . g$11180$Od@c8)
        (lambda . g$11177$Od@c8)
        (quote . g$11174$Od@c8)
        (letrec-syntax . g$11172$Od@c8)
        (let-syntax . g$11171$Od@c8)
        (set! . g$11170$Od@c8)
        (begin . g$11167$Od@c8)
        (define-syntax . g$11165$Od@c8)
        (define . g$11164$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$Od@c8
      'g$11829$Od@c8
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8231$Od@c8)
        (char-ready? . g$11727$Od@c8)
        (string-ci>? . g$11718$Od@c8)
        (string-ci>=? . g$11717$Od@c8)
        (string-ci=? . g$11716$Od@c8)
        (string-ci<? . g$11715$Od@c8)
        (string-ci<=? . g$11714$Od@c8)
        (char-whitespace? . g$11713$Od@c8)
        (char-upper-case? . g$11712$Od@c8)
        (char-numeric? . g$11710$Od@c8)
        (char-lower-case? . g$11709$Od@c8)
        (char-upcase . g$11707$Od@c8)
        (char-downcase . g$11704$Od@c8)
        (char-ci>? . g$11703$Od@c8)
        (char-ci>=? . g$11702$Od@c8)
        (char-ci=? . g$11701$Od@c8)
        (char-ci<? . g$11700$Od@c8)
        (char-ci<=? . g$11699$Od@c8)
        (char-alphabetic? . g$11698$Od@c8)
        (call-with-output-file . g$11666$Od@c8)
        (call-with-input-file . g$11665$Od@c8)
        (write-char . g$11664$Od@c8)
        (write . g$11663$Od@c8)
        (with-output-to-file . g$11662$Od@c8)
        (with-input-from-file . g$11661$Od@c8)
        (read-char . g$11660$Od@c8)
        (read . g$11659$Od@c8)
        (peek-char . g$11658$Od@c8)
        (open-output-file . g$11657$Od@c8)
        (open-input-file . g$11656$Od@c8)
        (newline . g$11655$Od@c8)
        (display . g$11654$Od@c8)
        (close-output-port . g$11653$Od@c8)
        (close-input-port . g$11652$Od@c8)
        (eof-object? . g$11651$Od@c8)
        (eof-object . g$11650$Od@c8)
        (current-error-port . g$11649$Od@c8)
        (current-output-port . g$11648$Od@c8)
        (current-input-port . g$11647$Od@c8)
        (output-port? . g$11646$Od@c8)
        (input-port? . g$11645$Od@c8)
        (scheme-report-environment . g$8209$Od@c8)
        (quotient . g$6510$Od@c8)
        (null-environment . g$8208$Od@c8)
        (remainder . g$6511$Od@c8)
        (modulo . g$6512$Od@c8)
        (inexact->exact . g$11582$Od@c8)
        (force . g$11581$Od@c8)
        (exact->inexact . g$11580$Od@c8)
        (string-fill! . g$11577$Od@c8)
        (string-set! . g$11576$Od@c8)
        (set-cdr! . g$11575$Od@c8)
        (set-car! . g$11574$Od@c8)
        (memv . g$11573$Od@c8)
        (memq . g$11572$Od@c8)
        (member . g$6087$Od@c8)
        (assv . g$6084$Od@c8)
        (assq . g$11571$Od@c8)
        (assoc . g$6085$Od@c8)
        (eval . g$8211$Od@c8)
        (zero? . g$11425$Od@c8)
        (vector? . g$11424$Od@c8)
        (vector-set! . g$11423$Od@c8)
        (vector-ref . g$11422$Od@c8)
        (vector-length . g$11420$Od@c8)
        (vector-fill! . g$11418$Od@c8)
        (vector->list . g$11417$Od@c8)
        (vector . g$11416$Od@c8)
        (values . g$11415$Od@c8)
        (truncate . g$11414$Od@c8)
        (tan . g$11413$Od@c8)
        (symbol? . g$11412$Od@c8)
        (symbol->string . g$11410$Od@c8)
        (substring . g$11409$Od@c8)
        (string? . g$11408$Od@c8)
        (string>? . g$11407$Od@c8)
        (string>=? . g$11406$Od@c8)
        (string=? . g$11405$Od@c8)
        (string<? . g$11404$Od@c8)
        (string<=? . g$11403$Od@c8)
        (string-ref . g$11402$Od@c8)
        (string-length . g$11401$Od@c8)
        (string-copy . g$11399$Od@c8)
        (string-append . g$11398$Od@c8)
        (string->symbol . g$11397$Od@c8)
        (string->number . g$11396$Od@c8)
        (string->list . g$11395$Od@c8)
        (string . g$11394$Od@c8)
        (sqrt . g$11393$Od@c8)
        (sin . g$11392$Od@c8)
        (round . g$11391$Od@c8)
        (reverse . g$11390$Od@c8)
        (real? . g$11389$Od@c8)
        (real-part . g$11387$Od@c8)
        (rationalize . g$5633$Od@c8)
        (rational? . g$11386$Od@c8)
        (procedure? . g$11384$Od@c8)
        (positive? . g$11383$Od@c8)
        (pair? . g$11382$Od@c8)
        (odd? . g$11381$Od@c8)
        (numerator . g$11380$Od@c8)
        (number? . g$11379$Od@c8)
        (number->string . g$11378$Od@c8)
        (null? . g$11377$Od@c8)
        (not . g$11376$Od@c8)
        (negative? . g$11375$Od@c8)
        (min . g$11373$Od@c8)
        (max . g$11372$Od@c8)
        (map . g$11371$Od@c8)
        (make-vector . g$11370$Od@c8)
        (make-string . g$11369$Od@c8)
        (make-rectangular . g$11368$Od@c8)
        (make-polar . g$11367$Od@c8)
        (magnitude . g$11366$Od@c8)
        (log . g$11365$Od@c8)
        (list? . g$11364$Od@c8)
        (list-tail . g$11363$Od@c8)
        (list-ref . g$11362$Od@c8)
        (list->vector . g$11361$Od@c8)
        (list->string . g$11360$Od@c8)
        (list . g$11359$Od@c8)
        (length . g$11358$Od@c8)
        (lcm . g$11357$Od@c8)
        (integer? . g$11356$Od@c8)
        (integer->char . g$11354$Od@c8)
        (inexact? . g$11352$Od@c8)
        (imag-part . g$11350$Od@c8)
        (gcd . g$11349$Od@c8)
        (for-each . g$11348$Od@c8)
        (floor . g$11347$Od@c8)
        (expt . g$11345$Od@c8)
        (exp . g$11344$Od@c8)
        (exact? . g$11343$Od@c8)
        (even? . g$11340$Od@c8)
        (eqv? . g$11338$Od@c8)
        (equal? . g$11337$Od@c8)
        (eq? . g$11336$Od@c8)
        (dynamic-wind . g$11335$Od@c8)
        (denominator . g$11328$Od@c8)
        (cos . g$11327$Od@c8)
        (cons . g$11326$Od@c8)
        (complex? . g$11325$Od@c8)
        (char? . g$11324$Od@c8)
        (char>? . g$11323$Od@c8)
        (char>=? . g$11322$Od@c8)
        (char=? . g$11321$Od@c8)
        (char<? . g$11320$Od@c8)
        (char<=? . g$11319$Od@c8)
        (char->integer . g$11318$Od@c8)
        (ceiling . g$11317$Od@c8)
        (call-with-values . g$11316$Od@c8)
        (call-with-current-continuation . g$11314$Od@c8)
        (cddddr . g$5632$Od@c8)
        (cdddar . g$5631$Od@c8)
        (cddadr . g$5630$Od@c8)
        (cddaar . g$5629$Od@c8)
        (cdaddr . g$5628$Od@c8)
        (cdadar . g$5627$Od@c8)
        (cdaadr . g$5626$Od@c8)
        (cdaaar . g$5625$Od@c8)
        (cadddr . g$5624$Od@c8)
        (caddar . g$5623$Od@c8)
        (cadadr . g$5622$Od@c8)
        (cadaar . g$5621$Od@c8)
        (caaddr . g$5620$Od@c8)
        (caadar . g$5619$Od@c8)
        (caaadr . g$5618$Od@c8)
        (caaaar . g$5617$Od@c8)
        (cdddr . g$5616$Od@c8)
        (cddar . g$5615$Od@c8)
        (cdadr . g$5614$Od@c8)
        (cdaar . g$5613$Od@c8)
        (caddr . g$5612$Od@c8)
        (cadar . g$5611$Od@c8)
        (caadr . g$5610$Od@c8)
        (caaar . g$5609$Od@c8)
        (cddr . g$5608$Od@c8)
        (cdar . g$5607$Od@c8)
        (cadr . g$5606$Od@c8)
        (caar . g$5605$Od@c8)
        (cdr . g$11313$Od@c8)
        (car . g$11312$Od@c8)
        (boolean? . g$11311$Od@c8)
        (atan . g$11309$Od@c8)
        (asin . g$11307$Od@c8)
        (apply . g$11306$Od@c8)
        (append . g$11305$Od@c8)
        (angle . g$11304$Od@c8)
        (acos . g$11303$Od@c8)
        (abs . g$11302$Od@c8)
        (/ . g$11301$Od@c8)
        (* . g$11300$Od@c8)
        (- . g$11299$Od@c8)
        (+ . g$11298$Od@c8)
        (>= . g$11297$Od@c8)
        (> . g$11296$Od@c8)
        (= . g$11295$Od@c8)
        (<= . g$11294$Od@c8)
        (< . g$11293$Od@c8)
        (unquote-splicing . g$11215$Od@c8)
        (unquote . g$11214$Od@c8)
        (else . g$11212$Od@c8)
        (=> . g$11211$Od@c8)
        (... . g$11210$Od@c8)
        (delay . g$11207$Od@c8)
        (or . g$11205$Od@c8)
        (and . g$11204$Od@c8)
        (do . g$11203$Od@c8)
        (cond . g$11202$Od@c8)
        (let* . g$11201$Od@c8)
        (let . g$11200$Od@c8)
        (quasiquote . g$11196$Od@c8)
        (syntax-rules . g$11195$Od@c8)
        (case . g$11186$Od@c8)
        (if . g$11182$Od@c8)
        (letrec . g$11180$Od@c8)
        (lambda . g$11177$Od@c8)
        (quote . g$11174$Od@c8)
        (letrec-syntax . g$11172$Od@c8)
        (let-syntax . g$11171$Od@c8)
        (set! . g$11170$Od@c8)
        (begin . g$11167$Od@c8)
        (define-syntax . g$11165$Od@c8)
        (define . g$11164$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$Od@c8
      'g$11830$Od@c8
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11726$Od@c8)
        (string-titlecase . g$11725$Od@c8)
        (string-normalize-nfkd . g$11724$Od@c8)
        (string-normalize-nfkc . g$11723$Od@c8)
        (string-normalize-nfd . g$11722$Od@c8)
        (string-normalize-nfc . g$11721$Od@c8)
        (string-foldcase . g$11720$Od@c8)
        (string-downcase . g$11719$Od@c8)
        (string-ci>? . g$11718$Od@c8)
        (string-ci>=? . g$11717$Od@c8)
        (string-ci=? . g$11716$Od@c8)
        (string-ci<? . g$11715$Od@c8)
        (string-ci<=? . g$11714$Od@c8)
        (char-whitespace? . g$11713$Od@c8)
        (char-upper-case? . g$11712$Od@c8)
        (char-title-case? . g$11711$Od@c8)
        (char-numeric? . g$11710$Od@c8)
        (char-lower-case? . g$11709$Od@c8)
        (char-general-category . g$11708$Od@c8)
        (char-upcase . g$11707$Od@c8)
        (char-titlecase . g$11706$Od@c8)
        (char-foldcase . g$11705$Od@c8)
        (char-downcase . g$11704$Od@c8)
        (char-ci>? . g$11703$Od@c8)
        (char-ci>=? . g$11702$Od@c8)
        (char-ci=? . g$11701$Od@c8)
        (char-ci<? . g$11700$Od@c8)
        (char-ci<=? . g$11699$Od@c8)
        (char-alphabetic? . g$11698$Od@c8)
        (make-variable-transformer . g$7833$Od@c8)
        (identifier? . g$8226$Od@c8)
        (generate-temporaries . g$8218$Od@c8)
        (free-identifier=? . g$8219$Od@c8)
        (syntax->datum . g$8228$Od@c8)
        (datum->syntax . g$8227$Od@c8)
        (bound-identifier=? . g$8220$Od@c8)
        (record-type-descriptor? . g$11697$Od@c8)
        (record-predicate . g$11696$Od@c8)
        (record-mutator . g$11695$Od@c8)
        (record-constructor . g$11694$Od@c8)
        (record-accessor . g$11693$Od@c8)
        (make-record-type-descriptor . g$11692$Od@c8)
        (make-record-constructor-descriptor . g$11691$Od@c8)
        (record? . g$11690$Od@c8)
        (record-type-uid . g$11689$Od@c8)
        (record-type-sealed? . g$11688$Od@c8)
        (record-type-parent . g$11687$Od@c8)
        (record-type-opaque? . g$11686$Od@c8)
        (record-type-name . g$11685$Od@c8)
        (record-type-generative? . g$11684$Od@c8)
        (record-type-field-names . g$11683$Od@c8)
        (record-rtd . g$11682$Od@c8)
        (record-field-mutable? . g$11681$Od@c8)
        (delete-file . g$6016$Od@c8)
        (file-exists? . g$6015$Od@c8)
        (vector-sort! . g$11680$Od@c8)
        (vector-sort . g$11679$Od@c8)
        (list-sort . g$6523$Od@c8)
        (symbol-hash . g$11678$Od@c8)
        (string-ci-hash . g$11677$Od@c8)
        (string-hash . g$11676$Od@c8)
        (equal-hash . g$11675$Od@c8)
        (hashtable-equivalence-function . g$11674$Od@c8)
        (make-hashtable . g$11673$Od@c8)
        (hashtable-hash-function . g$11672$Od@c8)
        (make-eqv-hashtable . g$5983$Od@c8)
        (make-eq-hashtable . g$5982$Od@c8)
        (hashtable? . g$11671$Od@c8)
        (hashtable-update! . g$5989$Od@c8)
        (hashtable-size . g$5984$Od@c8)
        (hashtable-set! . g$5986$Od@c8)
        (hashtable-ref . g$5985$Od@c8)
        (hashtable-mutable? . g$11670$Od@c8)
        (hashtable-keys . g$11669$Od@c8)
        (hashtable-entries . g$11668$Od@c8)
        (hashtable-delete! . g$5987$Od@c8)
        (hashtable-copy . g$11667$Od@c8)
        (hashtable-contains? . g$5988$Od@c8)
        (hashtable-clear! . g$5990$Od@c8)
        (call-with-output-file . g$11666$Od@c8)
        (call-with-input-file . g$11665$Od@c8)
        (write-char . g$11664$Od@c8)
        (write . g$11663$Od@c8)
        (with-output-to-file . g$11662$Od@c8)
        (with-input-from-file . g$11661$Od@c8)
        (read-char . g$11660$Od@c8)
        (read . g$11659$Od@c8)
        (peek-char . g$11658$Od@c8)
        (open-output-file . g$11657$Od@c8)
        (open-input-file . g$11656$Od@c8)
        (newline . g$11655$Od@c8)
        (display . g$11654$Od@c8)
        (close-output-port . g$11653$Od@c8)
        (close-input-port . g$11652$Od@c8)
        (eof-object? . g$11651$Od@c8)
        (eof-object . g$11650$Od@c8)
        (current-error-port . g$11649$Od@c8)
        (current-output-port . g$11648$Od@c8)
        (current-input-port . g$11647$Od@c8)
        (output-port? . g$11646$Od@c8)
        (input-port? . g$11645$Od@c8)
        (utf-8-codec . g$11644$Od@c8)
        (utf-16-codec . g$11643$Od@c8)
        (transcoder-error-handling-mode . g$11642$Od@c8)
        (transcoder-eol-style . g$11641$Od@c8)
        (transcoder-codec . g$11640$Od@c8)
        (transcoded-port . g$11639$Od@c8)
        (textual-port? . g$11638$Od@c8)
        (string->bytevector . g$11637$Od@c8)
        (standard-output-port . g$11636$Od@c8)
        (standard-input-port . g$11635$Od@c8)
        (standard-error-port . g$11634$Od@c8)
        (set-port-position! . g$11633$Od@c8)
        (put-u8 . g$11632$Od@c8)
        (put-string . g$11631$Od@c8)
        (put-datum . g$11630$Od@c8)
        (put-char . g$11629$Od@c8)
        (put-bytevector . g$11628$Od@c8)
        (port? . g$11627$Od@c8)
        (port-transcoder . g$11626$Od@c8)
        (port-position . g$11625$Od@c8)
        (port-has-set-port-position!? . g$11624$Od@c8)
        (port-has-port-position? . g$11623$Od@c8)
        (port-eof? . g$11622$Od@c8)
        (output-port-buffer-mode . g$11621$Od@c8)
        (open-string-output-port . g$6914$Od@c8)
        (open-string-input-port . g$11620$Od@c8)
        (open-file-output-port . g$11619$Od@c8)
        (open-file-input/output-port . g$11618$Od@c8)
        (open-file-input-port . g$11617$Od@c8)
        (open-bytevector-output-port . g$11616$Od@c8)
        (open-bytevector-input-port . g$11615$Od@c8)
        (native-transcoder . g$11614$Od@c8)
        (native-eol-style . g$11613$Od@c8)
        (make-transcoder . g$11612$Od@c8)
        (latin-1-codec . g$11611$Od@c8)
        (make-i/o-write-error . g$6771$Od@c8)
        (make-i/o-read-error . g$6757$Od@c8)
        (make-i/o-port-error . g$6876$Od@c8)
        (make-i/o-invalid-position-error . g$6786$Od@c8)
        (make-i/o-filename-error . g$6803$Od@c8)
        (make-i/o-file-protection-error . g$6819$Od@c8)
        (make-i/o-file-is-read-only-error . g$6833$Od@c8)
        (make-i/o-file-does-not-exist-error . g$6861$Od@c8)
        (make-i/o-file-already-exists-error . g$6847$Od@c8)
        (make-i/o-error . g$6743$Od@c8)
        (make-i/o-encoding-error . g$6907$Od@c8)
        (make-i/o-decoding-error . g$6892$Od@c8)
        (make-custom-textual-output-port . g$11610$Od@c8)
        (make-custom-textual-input/output-port . g$11609$Od@c8)
        (make-custom-textual-input-port . g$11608$Od@c8)
        (make-custom-binary-output-port . g$11607$Od@c8)
        (make-custom-binary-input/output-port . g$11606$Od@c8)
        (make-custom-binary-input-port . g$11605$Od@c8)
        (make-bytevector . g$11604$Od@c8)
        (lookahead-u8 . g$11603$Od@c8)
        (lookahead-char . g$11602$Od@c8)
        (i/o-write-error? . g$6772$Od@c8)
        (i/o-read-error? . g$6758$Od@c8)
        (i/o-port-error? . g$6878$Od@c8)
        (i/o-invalid-position-error? . g$6788$Od@c8)
        (i/o-filename-error? . g$6805$Od@c8)
        (i/o-file-protection-error? . g$6820$Od@c8)
        (i/o-file-is-read-only-error? . g$6834$Od@c8)
        (i/o-file-does-not-exist-error? . g$6862$Od@c8)
        (i/o-file-already-exists-error? . g$6848$Od@c8)
        (i/o-error? . g$6744$Od@c8)
        (i/o-error-port . g$6879$Od@c8)
        (i/o-error-filename . g$6806$Od@c8)
        (i/o-encoding-error? . g$6909$Od@c8)
        (i/o-encoding-error-char . g$6910$Od@c8)
        (i/o-decoding-error? . g$6893$Od@c8)
        (get-u8 . g$11601$Od@c8)
        (get-string-n! . g$11600$Od@c8)
        (get-string-n . g$11599$Od@c8)
        (get-string-all . g$11598$Od@c8)
        (get-line . g$11597$Od@c8)
        (get-datum . g$11596$Od@c8)
        (get-char . g$11595$Od@c8)
        (get-bytevector-some . g$11594$Od@c8)
        (get-bytevector-n! . g$11593$Od@c8)
        (get-bytevector-n . g$11592$Od@c8)
        (get-bytevector-all . g$11591$Od@c8)
        (flush-output-port . g$11590$Od@c8)
        (close-port . g$11589$Od@c8)
        (call-with-string-output-port . g$11588$Od@c8)
        (call-with-port . g$11587$Od@c8)
        (call-with-bytevector-output-port . g$11586$Od@c8)
        (bytevector->string . g$11585$Od@c8)
        (buffer-mode? . g$11584$Od@c8)
        (binary-port? . g$11583$Od@c8)
        (exit . g$11579$Od@c8)
        (command-line . g$11578$Od@c8)
        (remove . g$6096$Od@c8)
        (remv . g$6097$Od@c8)
        (remp . g$6082$Od@c8)
        (remq . g$6098$Od@c8)
        (partition . g$6081$Od@c8)
        (memv . g$11573$Od@c8)
        (memq . g$11572$Od@c8)
        (memp . g$6088$Od@c8)
        (member . g$6087$Od@c8)
        (exists . g$6092$Od@c8)
        (for-all . g$6091$Od@c8)
        (fold-right . g$6095$Od@c8)
        (fold-left . g$6094$Od@c8)
        (find . g$6080$Od@c8)
        (filter . g$6083$Od@c8)
        (cons* . g$6093$Od@c8)
        (assv . g$6084$Od@c8)
        (assq . g$11571$Od@c8)
        (assp . g$6086$Od@c8)
        (assoc . g$6085$Od@c8)
        (with-exception-handler . g$11570$Od@c8)
        (raise-continuable . g$11569$Od@c8)
        (raise . g$11568$Od@c8)
        (make-enumeration . g$11567$Od@c8)
        (enum-set=? . g$11566$Od@c8)
        (enum-set-universe . g$11565$Od@c8)
        (enum-set-union . g$11564$Od@c8)
        (enum-set-subset? . g$11563$Od@c8)
        (enum-set-projection . g$11562$Od@c8)
        (enum-set-member? . g$11561$Od@c8)
        (enum-set-intersection . g$11560$Od@c8)
        (enum-set-indexer . g$11559$Od@c8)
        (enum-set-difference . g$11558$Od@c8)
        (enum-set-constructor . g$11557$Od@c8)
        (enum-set-complement . g$11556$Od@c8)
        (enum-set->list . g$11555$Od@c8)
        (who-condition? . g$6421$Od@c8)
        (warning? . g$6332$Od@c8)
        (violation? . g$6374$Od@c8)
        (undefined-violation? . g$6498$Od@c8)
        (syntax-violation? . g$6482$Od@c8)
        (syntax-violation-subform . g$6484$Od@c8)
        (syntax-violation-form . g$6483$Od@c8)
        (syntax-violation . g$8225$Od@c8)
        (simple-conditions . g$11554$Od@c8)
        (serious-condition? . g$6346$Od@c8)
        (non-continuable-violation? . g$6436$Od@c8)
        (message-condition? . g$6317$Od@c8)
        (make-who-condition . g$6419$Od@c8)
        (make-warning . g$6331$Od@c8)
        (make-violation . g$6373$Od@c8)
        (make-undefined-violation . g$6497$Od@c8)
        (make-syntax-violation . g$6479$Od@c8)
        (make-serious-condition . g$6345$Od@c8)
        (make-non-continuable-violation . g$6435$Od@c8)
        (make-message-condition . g$6315$Od@c8)
        (make-lexical-violation . g$6463$Od@c8)
        (make-irritants-condition . g$6402$Od@c8)
        (make-implementation-restriction-violation . g$6449$Od@c8)
        (make-error . g$6359$Od@c8)
        (make-assertion-violation . g$6387$Od@c8)
        (lexical-violation? . g$6464$Od@c8)
        (irritants-condition? . g$6404$Od@c8)
        (implementation-restriction-violation? . g$6450$Od@c8)
        (error? . g$6360$Od@c8)
        (condition-who . g$6422$Od@c8)
        (condition-predicate . g$11553$Od@c8)
        (condition-message . g$6318$Od@c8)
        (condition-irritants . g$6405$Od@c8)
        (condition-accessor . g$11552$Od@c8)
        (condition . g$11551$Od@c8)
        (assertion-violation? . g$6388$Od@c8)
        (condition? . g$11550$Od@c8)
        (utf32->string . g$11549$Od@c8)
        (utf16->string . g$11548$Od@c8)
        (utf8->string . g$11547$Od@c8)
        (uint-list->bytevector . g$11546$Od@c8)
        (u8-list->bytevector . g$11545$Od@c8)
        (string->utf8 . g$11544$Od@c8)
        (string->utf32 . g$11543$Od@c8)
        (string->utf16 . g$11542$Od@c8)
        (sint-list->bytevector . g$11541$Od@c8)
        (native-endianness . g$6172$Od@c8)
        (bytevector? . g$11540$Od@c8)
        (bytevector=? . g$11539$Od@c8)
        (bytevector-uint-set! . g$11538$Od@c8)
        (bytevector-uint-ref . g$11537$Od@c8)
        (bytevector-u8-set! . g$11536$Od@c8)
        (bytevector-u8-ref . g$11535$Od@c8)
        (bytevector-u64-set! . g$6193$Od@c8)
        (bytevector-u64-ref . g$6189$Od@c8)
        (bytevector-u64-native-set! . g$6195$Od@c8)
        (bytevector-u64-native-ref . g$6191$Od@c8)
        (bytevector-u32-set! . g$6185$Od@c8)
        (bytevector-u32-ref . g$6181$Od@c8)
        (bytevector-u32-native-set! . g$6187$Od@c8)
        (bytevector-u32-native-ref . g$6183$Od@c8)
        (bytevector-u16-set! . g$6177$Od@c8)
        (bytevector-u16-ref . g$6173$Od@c8)
        (bytevector-u16-native-set! . g$6179$Od@c8)
        (bytevector-u16-native-ref . g$6175$Od@c8)
        (bytevector-sint-set! . g$11534$Od@c8)
        (bytevector-sint-ref . g$11533$Od@c8)
        (bytevector-s8-set! . g$11532$Od@c8)
        (bytevector-s8-ref . g$11531$Od@c8)
        (bytevector-s64-set! . g$6194$Od@c8)
        (bytevector-s64-ref . g$6190$Od@c8)
        (bytevector-s64-native-set! . g$6196$Od@c8)
        (bytevector-s64-native-ref . g$6192$Od@c8)
        (bytevector-s32-set! . g$6186$Od@c8)
        (bytevector-s32-ref . g$6182$Od@c8)
        (bytevector-s32-native-set! . g$6188$Od@c8)
        (bytevector-s32-native-ref . g$6184$Od@c8)
        (bytevector-s16-set! . g$6178$Od@c8)
        (bytevector-s16-ref . g$6174$Od@c8)
        (bytevector-s16-native-set! . g$6180$Od@c8)
        (bytevector-s16-native-ref . g$6176$Od@c8)
        (bytevector-length . g$11530$Od@c8)
        (bytevector-ieee-single-set! . g$11529$Od@c8)
        (bytevector-ieee-single-ref . g$11528$Od@c8)
        (bytevector-ieee-single-native-set! . g$6199$Od@c8)
        (bytevector-ieee-single-native-ref . g$6197$Od@c8)
        (bytevector-ieee-double-set! . g$11527$Od@c8)
        (bytevector-ieee-double-ref . g$11526$Od@c8)
        (bytevector-ieee-double-native-set! . g$6200$Od@c8)
        (bytevector-ieee-double-native-ref . g$6198$Od@c8)
        (bytevector-fill! . g$11525$Od@c8)
        (bytevector-copy! . g$11524$Od@c8)
        (bytevector-copy . g$11523$Od@c8)
        (bytevector->uint-list . g$11522$Od@c8)
        (bytevector->u8-list . g$11521$Od@c8)
        (bytevector->sint-list . g$11520$Od@c8)
        (no-nans-violation? . g$6729$Od@c8)
        (no-infinities-violation? . g$6715$Od@c8)
        (make-no-nans-violation . g$6728$Od@c8)
        (make-no-infinities-violation . g$6714$Od@c8)
        (real->flonum . g$11519$Od@c8)
        (flzero? . g$11518$Od@c8)
        (fltruncate . g$11517$Od@c8)
        (fltan . g$11516$Od@c8)
        (flsqrt . g$11515$Od@c8)
        (flsin . g$11514$Od@c8)
        (flround . g$11513$Od@c8)
        (flpositive? . g$11512$Od@c8)
        (flonum? . g$11511$Od@c8)
        (flodd? . g$11510$Od@c8)
        (flnumerator . g$11509$Od@c8)
        (flnegative? . g$11508$Od@c8)
        (flnan? . g$11507$Od@c8)
        (flmod0 . g$11506$Od@c8)
        (flmod . g$11505$Od@c8)
        (flmin . g$11504$Od@c8)
        (flmax . g$11503$Od@c8)
        (fllog . g$11502$Od@c8)
        (flinteger? . g$11501$Od@c8)
        (flinfinite? . g$11500$Od@c8)
        (flfloor . g$11499$Od@c8)
        (flfinite? . g$11498$Od@c8)
        (flexpt . g$11497$Od@c8)
        (flexp . g$11496$Od@c8)
        (fleven? . g$11495$Od@c8)
        (fldiv0-and-mod0 . g$11494$Od@c8)
        (fldiv0 . g$11493$Od@c8)
        (fldiv-and-mod . g$11492$Od@c8)
        (fldiv . g$11491$Od@c8)
        (fldenominator . g$11490$Od@c8)
        (flcos . g$11489$Od@c8)
        (flceiling . g$11488$Od@c8)
        (flatan . g$11487$Od@c8)
        (flasin . g$11486$Od@c8)
        (flacos . g$11485$Od@c8)
        (flabs . g$11484$Od@c8)
        (fl>? . g$11483$Od@c8)
        (fl>=? . g$11482$Od@c8)
        (fl=? . g$11481$Od@c8)
        (fl<? . g$11480$Od@c8)
        (fl<=? . g$11479$Od@c8)
        (fl/ . g$11478$Od@c8)
        (fl- . g$11477$Od@c8)
        (fl+ . g$11476$Od@c8)
        (fl* . g$11475$Od@c8)
        (fixnum->flonum . g$11474$Od@c8)
        (fxzero? . g$11473$Od@c8)
        (fxxor . g$11472$Od@c8)
        (fxrotate-bit-field . g$6660$Od@c8)
        (fxreverse-bit-field . g$11471$Od@c8)
        (fxpositive? . g$11470$Od@c8)
        (fxodd? . g$11469$Od@c8)
        (fxnot . g$11468$Od@c8)
        (fxnegative? . g$11467$Od@c8)
        (fxmod0 . g$11466$Od@c8)
        (fxmod . g$11465$Od@c8)
        (fxmin . g$11464$Od@c8)
        (fxmax . g$11463$Od@c8)
        (fxlength . g$11462$Od@c8)
        (fxior . g$11461$Od@c8)
        (fxif . g$6654$Od@c8)
        (fxfirst-bit-set . g$11460$Od@c8)
        (fxeven? . g$11459$Od@c8)
        (fxdiv0-and-mod0 . g$11458$Od@c8)
        (fxdiv0 . g$11457$Od@c8)
        (fxdiv-and-mod . g$11456$Od@c8)
        (fxdiv . g$11455$Od@c8)
        (fxcopy-bit-field . g$6657$Od@c8)
        (fxcopy-bit . g$6655$Od@c8)
        (fxbit-set? . g$11454$Od@c8)
        (fxbit-field . g$6656$Od@c8)
        (fxbit-count . g$11453$Od@c8)
        (fxarithmetic-shift-right . g$6659$Od@c8)
        (fxarithmetic-shift-left . g$6658$Od@c8)
        (fxarithmetic-shift . g$11452$Od@c8)
        (fxand . g$11451$Od@c8)
        (fx>? . g$11450$Od@c8)
        (fx>=? . g$11449$Od@c8)
        (fx=? . g$11448$Od@c8)
        (fx<? . g$11447$Od@c8)
        (fx<=? . g$11446$Od@c8)
        (fx-/carry . g$11445$Od@c8)
        (fx- . g$11444$Od@c8)
        (fx+/carry . g$11443$Od@c8)
        (fx+ . g$11442$Od@c8)
        (fx*/carry . g$11441$Od@c8)
        (fx* . g$11440$Od@c8)
        (greatest-fixnum . g$11439$Od@c8)
        (least-fixnum . g$11438$Od@c8)
        (fixnum-width . g$11437$Od@c8)
        (fixnum? . g$11436$Od@c8)
        (bitwise-rotate-bit-field . g$6608$Od@c8)
        (bitwise-reverse-bit-field . g$6609$Od@c8)
        (bitwise-length . g$11435$Od@c8)
        (bitwise-if . g$6602$Od@c8)
        (bitwise-first-bit-set . g$11434$Od@c8)
        (bitwise-copy-bit-field . g$6605$Od@c8)
        (bitwise-copy-bit . g$6603$Od@c8)
        (bitwise-bit-set? . g$11433$Od@c8)
        (bitwise-bit-field . g$11432$Od@c8)
        (bitwise-bit-count . g$11431$Od@c8)
        (bitwise-xor . g$11430$Od@c8)
        (bitwise-ior . g$11429$Od@c8)
        (bitwise-and . g$11428$Od@c8)
        (bitwise-not . g$11427$Od@c8)
        (bitwise-arithmetic-shift-right . g$6607$Od@c8)
        (bitwise-arithmetic-shift-left . g$6606$Od@c8)
        (bitwise-arithmetic-shift . g$11426$Od@c8)
        (zero? . g$11425$Od@c8)
        (vector? . g$11424$Od@c8)
        (vector-set! . g$11423$Od@c8)
        (vector-ref . g$11422$Od@c8)
        (vector-map . g$11421$Od@c8)
        (vector-length . g$11420$Od@c8)
        (vector-for-each . g$11419$Od@c8)
        (vector-fill! . g$11418$Od@c8)
        (vector->list . g$11417$Od@c8)
        (vector . g$11416$Od@c8)
        (values . g$11415$Od@c8)
        (truncate . g$11414$Od@c8)
        (tan . g$11413$Od@c8)
        (symbol? . g$11412$Od@c8)
        (symbol=? . g$11411$Od@c8)
        (symbol->string . g$11410$Od@c8)
        (substring . g$11409$Od@c8)
        (string? . g$11408$Od@c8)
        (string>? . g$11407$Od@c8)
        (string>=? . g$11406$Od@c8)
        (string=? . g$11405$Od@c8)
        (string<? . g$11404$Od@c8)
        (string<=? . g$11403$Od@c8)
        (string-ref . g$11402$Od@c8)
        (string-length . g$11401$Od@c8)
        (string-for-each . g$11400$Od@c8)
        (string-copy . g$11399$Od@c8)
        (string-append . g$11398$Od@c8)
        (string->symbol . g$11397$Od@c8)
        (string->number . g$11396$Od@c8)
        (string->list . g$11395$Od@c8)
        (string . g$11394$Od@c8)
        (sqrt . g$11393$Od@c8)
        (sin . g$11392$Od@c8)
        (round . g$11391$Od@c8)
        (reverse . g$11390$Od@c8)
        (real? . g$11389$Od@c8)
        (real-valued? . g$11388$Od@c8)
        (real-part . g$11387$Od@c8)
        (rationalize . g$5633$Od@c8)
        (rational? . g$11386$Od@c8)
        (rational-valued? . g$11385$Od@c8)
        (procedure? . g$11384$Od@c8)
        (positive? . g$11383$Od@c8)
        (pair? . g$11382$Od@c8)
        (odd? . g$11381$Od@c8)
        (numerator . g$11380$Od@c8)
        (number? . g$11379$Od@c8)
        (number->string . g$11378$Od@c8)
        (null? . g$11377$Od@c8)
        (not . g$11376$Od@c8)
        (negative? . g$11375$Od@c8)
        (nan? . g$11374$Od@c8)
        (min . g$11373$Od@c8)
        (max . g$11372$Od@c8)
        (map . g$11371$Od@c8)
        (make-vector . g$11370$Od@c8)
        (make-string . g$11369$Od@c8)
        (make-rectangular . g$11368$Od@c8)
        (make-polar . g$11367$Od@c8)
        (magnitude . g$11366$Od@c8)
        (log . g$11365$Od@c8)
        (list? . g$11364$Od@c8)
        (list-tail . g$11363$Od@c8)
        (list-ref . g$11362$Od@c8)
        (list->vector . g$11361$Od@c8)
        (list->string . g$11360$Od@c8)
        (list . g$11359$Od@c8)
        (length . g$11358$Od@c8)
        (lcm . g$11357$Od@c8)
        (integer? . g$11356$Od@c8)
        (integer-valued? . g$11355$Od@c8)
        (integer->char . g$11354$Od@c8)
        (infinite? . g$11353$Od@c8)
        (inexact? . g$11352$Od@c8)
        (inexact . g$11351$Od@c8)
        (imag-part . g$11350$Od@c8)
        (gcd . g$11349$Od@c8)
        (for-each . g$11348$Od@c8)
        (floor . g$11347$Od@c8)
        (finite? . g$11346$Od@c8)
        (expt . g$11345$Od@c8)
        (exp . g$11344$Od@c8)
        (exact? . g$11343$Od@c8)
        (exact-integer-sqrt . g$11342$Od@c8)
        (exact . g$11341$Od@c8)
        (even? . g$11340$Od@c8)
        (error . g$11339$Od@c8)
        (eqv? . g$11338$Od@c8)
        (equal? . g$11337$Od@c8)
        (eq? . g$11336$Od@c8)
        (dynamic-wind . g$11335$Od@c8)
        (div0-and-mod0 . g$11334$Od@c8)
        (mod0 . g$11333$Od@c8)
        (div0 . g$11332$Od@c8)
        (div-and-mod . g$11331$Od@c8)
        (mod . g$11330$Od@c8)
        (div . g$11329$Od@c8)
        (denominator . g$11328$Od@c8)
        (cos . g$11327$Od@c8)
        (cons . g$11326$Od@c8)
        (complex? . g$11325$Od@c8)
        (char? . g$11324$Od@c8)
        (char>? . g$11323$Od@c8)
        (char>=? . g$11322$Od@c8)
        (char=? . g$11321$Od@c8)
        (char<? . g$11320$Od@c8)
        (char<=? . g$11319$Od@c8)
        (char->integer . g$11318$Od@c8)
        (ceiling . g$11317$Od@c8)
        (call-with-values . g$11316$Od@c8)
        (call/cc . g$11315$Od@c8)
        (call-with-current-continuation . g$11314$Od@c8)
        (cddddr . g$5632$Od@c8)
        (cdddar . g$5631$Od@c8)
        (cddadr . g$5630$Od@c8)
        (cddaar . g$5629$Od@c8)
        (cdaddr . g$5628$Od@c8)
        (cdadar . g$5627$Od@c8)
        (cdaadr . g$5626$Od@c8)
        (cdaaar . g$5625$Od@c8)
        (cadddr . g$5624$Od@c8)
        (caddar . g$5623$Od@c8)
        (cadadr . g$5622$Od@c8)
        (cadaar . g$5621$Od@c8)
        (caaddr . g$5620$Od@c8)
        (caadar . g$5619$Od@c8)
        (caaadr . g$5618$Od@c8)
        (caaaar . g$5617$Od@c8)
        (cdddr . g$5616$Od@c8)
        (cddar . g$5615$Od@c8)
        (cdadr . g$5614$Od@c8)
        (cdaar . g$5613$Od@c8)
        (caddr . g$5612$Od@c8)
        (cadar . g$5611$Od@c8)
        (caadr . g$5610$Od@c8)
        (caaar . g$5609$Od@c8)
        (cddr . g$5608$Od@c8)
        (cdar . g$5607$Od@c8)
        (cadr . g$5606$Od@c8)
        (caar . g$5605$Od@c8)
        (cdr . g$11313$Od@c8)
        (car . g$11312$Od@c8)
        (boolean? . g$11311$Od@c8)
        (boolean=? . g$11310$Od@c8)
        (atan . g$11309$Od@c8)
        (assertion-violation . g$11308$Od@c8)
        (asin . g$11307$Od@c8)
        (apply . g$11306$Od@c8)
        (append . g$11305$Od@c8)
        (angle . g$11304$Od@c8)
        (acos . g$11303$Od@c8)
        (abs . g$11302$Od@c8)
        (/ . g$11301$Od@c8)
        (* . g$11300$Od@c8)
        (- . g$11299$Od@c8)
        (+ . g$11298$Od@c8)
        (>= . g$11297$Od@c8)
        (> . g$11296$Od@c8)
        (= . g$11295$Od@c8)
        (<= . g$11294$Od@c8)
        (< . g$11293$Od@c8)
        (&no-nans . g$11268$Od@c8)
        (&no-infinities . g$11267$Od@c8)
        (&i/o-encoding . g$11266$Od@c8)
        (&i/o-decoding . g$11265$Od@c8)
        (&i/o-port . g$11264$Od@c8)
        (&i/o-file-does-not-exist . g$11263$Od@c8)
        (&i/o-file-already-exists . g$11262$Od@c8)
        (&i/o-file-is-read-only . g$11261$Od@c8)
        (&i/o-file-protection . g$11260$Od@c8)
        (&i/o-filename . g$11259$Od@c8)
        (&i/o-invalid-position . g$11258$Od@c8)
        (&i/o-write . g$11257$Od@c8)
        (&i/o-read . g$11256$Od@c8)
        (&i/o . g$11255$Od@c8)
        (&non-continuable . g$11254$Od@c8)
        (&undefined . g$11253$Od@c8)
        (&syntax . g$11252$Od@c8)
        (&lexical . g$11251$Od@c8)
        (&implementation-restriction . g$11250$Od@c8)
        (&who . g$11248$Od@c8)
        (&irritants . g$11247$Od@c8)
        (&assertion . g$11246$Od@c8)
        (&violation . g$11245$Od@c8)
        (&error . g$11244$Od@c8)
        (&serious . g$11243$Od@c8)
        (&warning . g$11242$Od@c8)
        (&message . g$11241$Od@c8)
        (&condition . g$11240$Od@c8)
        (define-condition-type . g$11239$Od@c8)
        (define-enumeration . g$11238$Od@c8)
        (define-record-type . g$11237$Od@c8)
        (parent-rtd . g$11236$Od@c8)
        (nongenerative . g$11235$Od@c8)
        (opaque . g$11234$Od@c8)
        (sealed . g$11233$Od@c8)
        (protocol . g$11232$Od@c8)
        (parent . g$11231$Od@c8)
        (immutable . g$11230$Od@c8)
        (mutable . g$11229$Od@c8)
        (fields . g$11228$Od@c8)
        (error-handling-mode . g$11227$Od@c8)
        (file-options . g$11226$Od@c8)
        (buffer-mode . g$11225$Od@c8)
        (eol-style . g$11224$Od@c8)
        (guard . g$11223$Od@c8)
        (unsyntax-splicing . g$11217$Od@c8)
        (unsyntax . g$11216$Od@c8)
        (unquote-splicing . g$11215$Od@c8)
        (unquote . g$11214$Od@c8)
        (_ . g$11213$Od@c8)
        (else . g$11212$Od@c8)
        (=> . g$11211$Od@c8)
        (... . g$11210$Od@c8)
        (assert . g$11209$Od@c8)
        (endianness . g$11208$Od@c8)
        (or . g$11205$Od@c8)
        (and . g$11204$Od@c8)
        (do . g$11203$Od@c8)
        (cond . g$11202$Od@c8)
        (let* . g$11201$Od@c8)
        (let . g$11200$Od@c8)
        (identifier-syntax . g$11199$Od@c8)
        (with-syntax . g$11198$Od@c8)
        (quasisyntax . g$11197$Od@c8)
        (quasiquote . g$11196$Od@c8)
        (syntax-rules . g$11195$Od@c8)
        (let-values . g$11191$Od@c8)
        (let*-values . g$11190$Od@c8)
        (record-constructor-descriptor . g$11189$Od@c8)
        (record-type-descriptor . g$11188$Od@c8)
        (case . g$11186$Od@c8)
        (unless . g$11184$Od@c8)
        (when . g$11183$Od@c8)
        (if . g$11182$Od@c8)
        (letrec* . g$11181$Od@c8)
        (letrec . g$11180$Od@c8)
        (case-lambda . g$11178$Od@c8)
        (lambda . g$11177$Od@c8)
        (syntax . g$11176$Od@c8)
        (syntax-case . g$11175$Od@c8)
        (quote . g$11174$Od@c8)
        (letrec-syntax . g$11172$Od@c8)
        (let-syntax . g$11171$Od@c8)
        (set! . g$11170$Od@c8)
        (import . g$11169$Od@c8)
        (library . g$11168$Od@c8)
        (begin . g$11167$Od@c8)
        (define-syntax . g$11165$Od@c8)
        (define . g$11164$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11831$Od@c8
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8231$Od@c8)
        (scheme-report-environment . g$8209$Od@c8)
        (quotient . g$6510$Od@c8)
        (null-environment . g$8208$Od@c8)
        (remainder . g$6511$Od@c8)
        (modulo . g$6512$Od@c8)
        (inexact->exact . g$11582$Od@c8)
        (force . g$11581$Od@c8)
        (exact->inexact . g$11580$Od@c8)
        (delay . g$11207$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11832$Od@c8
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11203$Od@c8)
        (unless . g$11184$Od@c8)
        (when . g$11183$Od@c8)
        (case-lambda . g$11178$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11833$Od@c8
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8211$Od@c8) (environment . g$8207$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11834$Od@c8
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11575$Od@c8) (set-car! . g$11574$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11835$Od@c8
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11577$Od@c8) (string-set! . g$11576$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11836$Od@c8
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11579$Od@c8) (command-line . g$11578$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11837$Od@c8
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$7833$Od@c8)
        (identifier? . g$8226$Od@c8)
        (generate-temporaries . g$8218$Od@c8)
        (free-identifier=? . g$8219$Od@c8)
        (syntax->datum . g$8228$Od@c8)
        (datum->syntax . g$8227$Od@c8)
        (bound-identifier=? . g$8220$Od@c8)
        (syntax-violation . g$8225$Od@c8)
        (unsyntax-splicing . g$11217$Od@c8)
        (unsyntax . g$11216$Od@c8)
        (_ . g$11213$Od@c8)
        (... . g$11210$Od@c8)
        (with-syntax . g$11198$Od@c8)
        (quasisyntax . g$11197$Od@c8)
        (syntax . g$11176$Od@c8)
        (syntax-case . g$11175$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11838$Od@c8
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6016$Od@c8)
        (file-exists? . g$6015$Od@c8)
        (make-i/o-write-error . g$6771$Od@c8)
        (make-i/o-read-error . g$6757$Od@c8)
        (make-i/o-port-error . g$6876$Od@c8)
        (make-i/o-invalid-position-error . g$6786$Od@c8)
        (make-i/o-filename-error . g$6803$Od@c8)
        (make-i/o-file-protection-error . g$6819$Od@c8)
        (make-i/o-file-is-read-only-error . g$6833$Od@c8)
        (make-i/o-file-does-not-exist-error . g$6861$Od@c8)
        (make-i/o-file-already-exists-error . g$6847$Od@c8)
        (make-i/o-error . g$6743$Od@c8)
        (i/o-write-error? . g$6772$Od@c8)
        (i/o-read-error? . g$6758$Od@c8)
        (i/o-port-error? . g$6878$Od@c8)
        (i/o-invalid-position-error? . g$6788$Od@c8)
        (i/o-filename-error? . g$6805$Od@c8)
        (i/o-file-protection-error? . g$6820$Od@c8)
        (i/o-file-is-read-only-error? . g$6834$Od@c8)
        (i/o-file-does-not-exist-error? . g$6862$Od@c8)
        (i/o-file-already-exists-error? . g$6848$Od@c8)
        (i/o-error? . g$6744$Od@c8)
        (i/o-error-port . g$6879$Od@c8)
        (i/o-error-filename . g$6806$Od@c8)
        (&i/o-port . g$11264$Od@c8)
        (&i/o-file-does-not-exist . g$11263$Od@c8)
        (&i/o-file-already-exists . g$11262$Od@c8)
        (&i/o-file-is-read-only . g$11261$Od@c8)
        (&i/o-file-protection . g$11260$Od@c8)
        (&i/o-filename . g$11259$Od@c8)
        (&i/o-invalid-position . g$11258$Od@c8)
        (&i/o-write . g$11257$Od@c8)
        (&i/o-read . g$11256$Od@c8)
        (&i/o . g$11255$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11839$Od@c8
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$11680$Od@c8)
        (vector-sort . g$11679$Od@c8)
        (list-sort . g$6523$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11840$Od@c8
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$11425$Od@c8)
        (vector? . g$11424$Od@c8)
        (vector-set! . g$11423$Od@c8)
        (vector-ref . g$11422$Od@c8)
        (vector-map . g$11421$Od@c8)
        (vector-length . g$11420$Od@c8)
        (vector-for-each . g$11419$Od@c8)
        (vector-fill! . g$11418$Od@c8)
        (vector->list . g$11417$Od@c8)
        (vector . g$11416$Od@c8)
        (values . g$11415$Od@c8)
        (truncate . g$11414$Od@c8)
        (tan . g$11413$Od@c8)
        (symbol? . g$11412$Od@c8)
        (symbol=? . g$11411$Od@c8)
        (symbol->string . g$11410$Od@c8)
        (substring . g$11409$Od@c8)
        (string? . g$11408$Od@c8)
        (string>? . g$11407$Od@c8)
        (string>=? . g$11406$Od@c8)
        (string=? . g$11405$Od@c8)
        (string<? . g$11404$Od@c8)
        (string<=? . g$11403$Od@c8)
        (string-ref . g$11402$Od@c8)
        (string-length . g$11401$Od@c8)
        (string-for-each . g$11400$Od@c8)
        (string-copy . g$11399$Od@c8)
        (string-append . g$11398$Od@c8)
        (string->symbol . g$11397$Od@c8)
        (string->number . g$11396$Od@c8)
        (string->list . g$11395$Od@c8)
        (string . g$11394$Od@c8)
        (sqrt . g$11393$Od@c8)
        (sin . g$11392$Od@c8)
        (round . g$11391$Od@c8)
        (reverse . g$11390$Od@c8)
        (real? . g$11389$Od@c8)
        (real-valued? . g$11388$Od@c8)
        (real-part . g$11387$Od@c8)
        (rationalize . g$5633$Od@c8)
        (rational? . g$11386$Od@c8)
        (rational-valued? . g$11385$Od@c8)
        (procedure? . g$11384$Od@c8)
        (positive? . g$11383$Od@c8)
        (pair? . g$11382$Od@c8)
        (odd? . g$11381$Od@c8)
        (numerator . g$11380$Od@c8)
        (number? . g$11379$Od@c8)
        (number->string . g$11378$Od@c8)
        (null? . g$11377$Od@c8)
        (not . g$11376$Od@c8)
        (negative? . g$11375$Od@c8)
        (nan? . g$11374$Od@c8)
        (min . g$11373$Od@c8)
        (max . g$11372$Od@c8)
        (map . g$11371$Od@c8)
        (make-vector . g$11370$Od@c8)
        (make-string . g$11369$Od@c8)
        (make-rectangular . g$11368$Od@c8)
        (make-polar . g$11367$Od@c8)
        (magnitude . g$11366$Od@c8)
        (log . g$11365$Od@c8)
        (list? . g$11364$Od@c8)
        (list-tail . g$11363$Od@c8)
        (list-ref . g$11362$Od@c8)
        (list->vector . g$11361$Od@c8)
        (list->string . g$11360$Od@c8)
        (list . g$11359$Od@c8)
        (length . g$11358$Od@c8)
        (lcm . g$11357$Od@c8)
        (integer? . g$11356$Od@c8)
        (integer-valued? . g$11355$Od@c8)
        (integer->char . g$11354$Od@c8)
        (infinite? . g$11353$Od@c8)
        (inexact? . g$11352$Od@c8)
        (inexact . g$11351$Od@c8)
        (imag-part . g$11350$Od@c8)
        (gcd . g$11349$Od@c8)
        (for-each . g$11348$Od@c8)
        (floor . g$11347$Od@c8)
        (finite? . g$11346$Od@c8)
        (expt . g$11345$Od@c8)
        (exp . g$11344$Od@c8)
        (exact? . g$11343$Od@c8)
        (exact-integer-sqrt . g$11342$Od@c8)
        (exact . g$11341$Od@c8)
        (even? . g$11340$Od@c8)
        (error . g$11339$Od@c8)
        (eqv? . g$11338$Od@c8)
        (equal? . g$11337$Od@c8)
        (eq? . g$11336$Od@c8)
        (dynamic-wind . g$11335$Od@c8)
        (div0-and-mod0 . g$11334$Od@c8)
        (mod0 . g$11333$Od@c8)
        (div0 . g$11332$Od@c8)
        (div-and-mod . g$11331$Od@c8)
        (mod . g$11330$Od@c8)
        (div . g$11329$Od@c8)
        (denominator . g$11328$Od@c8)
        (cos . g$11327$Od@c8)
        (cons . g$11326$Od@c8)
        (complex? . g$11325$Od@c8)
        (char? . g$11324$Od@c8)
        (char>? . g$11323$Od@c8)
        (char>=? . g$11322$Od@c8)
        (char=? . g$11321$Od@c8)
        (char<? . g$11320$Od@c8)
        (char<=? . g$11319$Od@c8)
        (char->integer . g$11318$Od@c8)
        (ceiling . g$11317$Od@c8)
        (call-with-values . g$11316$Od@c8)
        (call/cc . g$11315$Od@c8)
        (call-with-current-continuation . g$11314$Od@c8)
        (cddddr . g$5632$Od@c8)
        (cdddar . g$5631$Od@c8)
        (cddadr . g$5630$Od@c8)
        (cddaar . g$5629$Od@c8)
        (cdaddr . g$5628$Od@c8)
        (cdadar . g$5627$Od@c8)
        (cdaadr . g$5626$Od@c8)
        (cdaaar . g$5625$Od@c8)
        (cadddr . g$5624$Od@c8)
        (caddar . g$5623$Od@c8)
        (cadadr . g$5622$Od@c8)
        (cadaar . g$5621$Od@c8)
        (caaddr . g$5620$Od@c8)
        (caadar . g$5619$Od@c8)
        (caaadr . g$5618$Od@c8)
        (caaaar . g$5617$Od@c8)
        (cdddr . g$5616$Od@c8)
        (cddar . g$5615$Od@c8)
        (cdadr . g$5614$Od@c8)
        (cdaar . g$5613$Od@c8)
        (caddr . g$5612$Od@c8)
        (cadar . g$5611$Od@c8)
        (caadr . g$5610$Od@c8)
        (caaar . g$5609$Od@c8)
        (cddr . g$5608$Od@c8)
        (cdar . g$5607$Od@c8)
        (cadr . g$5606$Od@c8)
        (caar . g$5605$Od@c8)
        (cdr . g$11313$Od@c8)
        (car . g$11312$Od@c8)
        (boolean? . g$11311$Od@c8)
        (boolean=? . g$11310$Od@c8)
        (atan . g$11309$Od@c8)
        (assertion-violation . g$11308$Od@c8)
        (asin . g$11307$Od@c8)
        (apply . g$11306$Od@c8)
        (append . g$11305$Od@c8)
        (angle . g$11304$Od@c8)
        (acos . g$11303$Od@c8)
        (abs . g$11302$Od@c8)
        (/ . g$11301$Od@c8)
        (* . g$11300$Od@c8)
        (- . g$11299$Od@c8)
        (+ . g$11298$Od@c8)
        (>= . g$11297$Od@c8)
        (> . g$11296$Od@c8)
        (= . g$11295$Od@c8)
        (<= . g$11294$Od@c8)
        (< . g$11293$Od@c8)
        (unquote-splicing . g$11215$Od@c8)
        (unquote . g$11214$Od@c8)
        (_ . g$11213$Od@c8)
        (else . g$11212$Od@c8)
        (=> . g$11211$Od@c8)
        (... . g$11210$Od@c8)
        (assert . g$11209$Od@c8)
        (or . g$11205$Od@c8)
        (and . g$11204$Od@c8)
        (cond . g$11202$Od@c8)
        (let* . g$11201$Od@c8)
        (let . g$11200$Od@c8)
        (identifier-syntax . g$11199$Od@c8)
        (quasiquote . g$11196$Od@c8)
        (syntax-rules . g$11195$Od@c8)
        (let-values . g$11191$Od@c8)
        (let*-values . g$11190$Od@c8)
        (case . g$11186$Od@c8)
        (if . g$11182$Od@c8)
        (letrec* . g$11181$Od@c8)
        (letrec . g$11180$Od@c8)
        (lambda . g$11177$Od@c8)
        (quote . g$11174$Od@c8)
        (letrec-syntax . g$11172$Od@c8)
        (let-syntax . g$11171$Od@c8)
        (set! . g$11170$Od@c8)
        (begin . g$11167$Od@c8)
        (define-syntax . g$11165$Od@c8)
        (define . g$11164$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11841$Od@c8
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6096$Od@c8)
        (remv . g$6097$Od@c8)
        (remp . g$6082$Od@c8)
        (remq . g$6098$Od@c8)
        (partition . g$6081$Od@c8)
        (memv . g$11573$Od@c8)
        (memq . g$11572$Od@c8)
        (memp . g$6088$Od@c8)
        (member . g$6087$Od@c8)
        (exists . g$6092$Od@c8)
        (for-all . g$6091$Od@c8)
        (fold-right . g$6095$Od@c8)
        (fold-left . g$6094$Od@c8)
        (find . g$6080$Od@c8)
        (filter . g$6083$Od@c8)
        (cons* . g$6093$Od@c8)
        (assv . g$6084$Od@c8)
        (assq . g$11571$Od@c8)
        (assp . g$6086$Od@c8)
        (assoc . g$6085$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11842$Od@c8
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$11666$Od@c8)
        (call-with-input-file . g$11665$Od@c8)
        (write-char . g$11664$Od@c8)
        (write . g$11663$Od@c8)
        (with-output-to-file . g$11662$Od@c8)
        (with-input-from-file . g$11661$Od@c8)
        (read-char . g$11660$Od@c8)
        (read . g$11659$Od@c8)
        (peek-char . g$11658$Od@c8)
        (open-output-file . g$11657$Od@c8)
        (open-input-file . g$11656$Od@c8)
        (newline . g$11655$Od@c8)
        (display . g$11654$Od@c8)
        (close-output-port . g$11653$Od@c8)
        (close-input-port . g$11652$Od@c8)
        (eof-object? . g$11651$Od@c8)
        (eof-object . g$11650$Od@c8)
        (current-error-port . g$11649$Od@c8)
        (current-output-port . g$11648$Od@c8)
        (current-input-port . g$11647$Od@c8)
        (output-port? . g$11646$Od@c8)
        (input-port? . g$11645$Od@c8)
        (make-i/o-write-error . g$6771$Od@c8)
        (make-i/o-read-error . g$6757$Od@c8)
        (make-i/o-port-error . g$6876$Od@c8)
        (make-i/o-invalid-position-error . g$6786$Od@c8)
        (make-i/o-filename-error . g$6803$Od@c8)
        (make-i/o-file-protection-error . g$6819$Od@c8)
        (make-i/o-file-is-read-only-error . g$6833$Od@c8)
        (make-i/o-file-does-not-exist-error . g$6861$Od@c8)
        (make-i/o-file-already-exists-error . g$6847$Od@c8)
        (make-i/o-error . g$6743$Od@c8)
        (i/o-write-error? . g$6772$Od@c8)
        (i/o-read-error? . g$6758$Od@c8)
        (i/o-port-error? . g$6878$Od@c8)
        (i/o-invalid-position-error? . g$6788$Od@c8)
        (i/o-filename-error? . g$6805$Od@c8)
        (i/o-file-protection-error? . g$6820$Od@c8)
        (i/o-file-is-read-only-error? . g$6834$Od@c8)
        (i/o-file-does-not-exist-error? . g$6862$Od@c8)
        (i/o-file-already-exists-error? . g$6848$Od@c8)
        (i/o-error? . g$6744$Od@c8)
        (i/o-error-port . g$6879$Od@c8)
        (i/o-error-filename . g$6806$Od@c8)
        (&i/o-port . g$11264$Od@c8)
        (&i/o-file-does-not-exist . g$11263$Od@c8)
        (&i/o-file-already-exists . g$11262$Od@c8)
        (&i/o-file-is-read-only . g$11261$Od@c8)
        (&i/o-file-protection . g$11260$Od@c8)
        (&i/o-filename . g$11259$Od@c8)
        (&i/o-invalid-position . g$11258$Od@c8)
        (&i/o-write . g$11257$Od@c8)
        (&i/o-read . g$11256$Od@c8)
        (&i/o . g$11255$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11843$Od@c8
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11604$Od@c8)
        (utf32->string . g$11549$Od@c8)
        (utf16->string . g$11548$Od@c8)
        (utf8->string . g$11547$Od@c8)
        (uint-list->bytevector . g$11546$Od@c8)
        (u8-list->bytevector . g$11545$Od@c8)
        (string->utf8 . g$11544$Od@c8)
        (string->utf32 . g$11543$Od@c8)
        (string->utf16 . g$11542$Od@c8)
        (sint-list->bytevector . g$11541$Od@c8)
        (native-endianness . g$6172$Od@c8)
        (bytevector? . g$11540$Od@c8)
        (bytevector=? . g$11539$Od@c8)
        (bytevector-uint-set! . g$11538$Od@c8)
        (bytevector-uint-ref . g$11537$Od@c8)
        (bytevector-u8-set! . g$11536$Od@c8)
        (bytevector-u8-ref . g$11535$Od@c8)
        (bytevector-u64-set! . g$6193$Od@c8)
        (bytevector-u64-ref . g$6189$Od@c8)
        (bytevector-u64-native-set! . g$6195$Od@c8)
        (bytevector-u64-native-ref . g$6191$Od@c8)
        (bytevector-u32-set! . g$6185$Od@c8)
        (bytevector-u32-ref . g$6181$Od@c8)
        (bytevector-u32-native-set! . g$6187$Od@c8)
        (bytevector-u32-native-ref . g$6183$Od@c8)
        (bytevector-u16-set! . g$6177$Od@c8)
        (bytevector-u16-ref . g$6173$Od@c8)
        (bytevector-u16-native-set! . g$6179$Od@c8)
        (bytevector-u16-native-ref . g$6175$Od@c8)
        (bytevector-sint-set! . g$11534$Od@c8)
        (bytevector-sint-ref . g$11533$Od@c8)
        (bytevector-s8-set! . g$11532$Od@c8)
        (bytevector-s8-ref . g$11531$Od@c8)
        (bytevector-s64-set! . g$6194$Od@c8)
        (bytevector-s64-ref . g$6190$Od@c8)
        (bytevector-s64-native-set! . g$6196$Od@c8)
        (bytevector-s64-native-ref . g$6192$Od@c8)
        (bytevector-s32-set! . g$6186$Od@c8)
        (bytevector-s32-ref . g$6182$Od@c8)
        (bytevector-s32-native-set! . g$6188$Od@c8)
        (bytevector-s32-native-ref . g$6184$Od@c8)
        (bytevector-s16-set! . g$6178$Od@c8)
        (bytevector-s16-ref . g$6174$Od@c8)
        (bytevector-s16-native-set! . g$6180$Od@c8)
        (bytevector-s16-native-ref . g$6176$Od@c8)
        (bytevector-length . g$11530$Od@c8)
        (bytevector-ieee-single-set! . g$11529$Od@c8)
        (bytevector-ieee-single-ref . g$11528$Od@c8)
        (bytevector-ieee-single-native-set! . g$6199$Od@c8)
        (bytevector-ieee-single-native-ref . g$6197$Od@c8)
        (bytevector-ieee-double-set! . g$11527$Od@c8)
        (bytevector-ieee-double-ref . g$11526$Od@c8)
        (bytevector-ieee-double-native-set! . g$6200$Od@c8)
        (bytevector-ieee-double-native-ref . g$6198$Od@c8)
        (bytevector-fill! . g$11525$Od@c8)
        (bytevector-copy! . g$11524$Od@c8)
        (bytevector-copy . g$11523$Od@c8)
        (bytevector->uint-list . g$11522$Od@c8)
        (bytevector->u8-list . g$11521$Od@c8)
        (bytevector->sint-list . g$11520$Od@c8)
        (endianness . g$11208$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11844$Od@c8
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11726$Od@c8)
        (string-titlecase . g$11725$Od@c8)
        (string-normalize-nfkd . g$11724$Od@c8)
        (string-normalize-nfkc . g$11723$Od@c8)
        (string-normalize-nfd . g$11722$Od@c8)
        (string-normalize-nfc . g$11721$Od@c8)
        (string-foldcase . g$11720$Od@c8)
        (string-downcase . g$11719$Od@c8)
        (string-ci>? . g$11718$Od@c8)
        (string-ci>=? . g$11717$Od@c8)
        (string-ci=? . g$11716$Od@c8)
        (string-ci<? . g$11715$Od@c8)
        (string-ci<=? . g$11714$Od@c8)
        (char-whitespace? . g$11713$Od@c8)
        (char-upper-case? . g$11712$Od@c8)
        (char-title-case? . g$11711$Od@c8)
        (char-numeric? . g$11710$Od@c8)
        (char-lower-case? . g$11709$Od@c8)
        (char-general-category . g$11708$Od@c8)
        (char-upcase . g$11707$Od@c8)
        (char-titlecase . g$11706$Od@c8)
        (char-foldcase . g$11705$Od@c8)
        (char-downcase . g$11704$Od@c8)
        (char-ci>? . g$11703$Od@c8)
        (char-ci>=? . g$11702$Od@c8)
        (char-ci=? . g$11701$Od@c8)
        (char-ci<? . g$11700$Od@c8)
        (char-ci<=? . g$11699$Od@c8)
        (char-alphabetic? . g$11698$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11845$Od@c8
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11570$Od@c8)
        (raise-continuable . g$11569$Od@c8)
        (raise . g$11568$Od@c8)
        (guard . g$11223$Od@c8)
        (else . g$11212$Od@c8)
        (=> . g$11211$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11846$Od@c8
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6608$Od@c8)
        (bitwise-reverse-bit-field . g$6609$Od@c8)
        (bitwise-length . g$11435$Od@c8)
        (bitwise-if . g$6602$Od@c8)
        (bitwise-first-bit-set . g$11434$Od@c8)
        (bitwise-copy-bit-field . g$6605$Od@c8)
        (bitwise-copy-bit . g$6603$Od@c8)
        (bitwise-bit-set? . g$11433$Od@c8)
        (bitwise-bit-field . g$11432$Od@c8)
        (bitwise-bit-count . g$11431$Od@c8)
        (bitwise-xor . g$11430$Od@c8)
        (bitwise-ior . g$11429$Od@c8)
        (bitwise-and . g$11428$Od@c8)
        (bitwise-not . g$11427$Od@c8)
        (bitwise-arithmetic-shift-right . g$6607$Od@c8)
        (bitwise-arithmetic-shift-left . g$6606$Od@c8)
        (bitwise-arithmetic-shift . g$11426$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11847$Od@c8
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$11473$Od@c8)
        (fxxor . g$11472$Od@c8)
        (fxrotate-bit-field . g$6660$Od@c8)
        (fxreverse-bit-field . g$11471$Od@c8)
        (fxpositive? . g$11470$Od@c8)
        (fxodd? . g$11469$Od@c8)
        (fxnot . g$11468$Od@c8)
        (fxnegative? . g$11467$Od@c8)
        (fxmod0 . g$11466$Od@c8)
        (fxmod . g$11465$Od@c8)
        (fxmin . g$11464$Od@c8)
        (fxmax . g$11463$Od@c8)
        (fxlength . g$11462$Od@c8)
        (fxior . g$11461$Od@c8)
        (fxif . g$6654$Od@c8)
        (fxfirst-bit-set . g$11460$Od@c8)
        (fxeven? . g$11459$Od@c8)
        (fxdiv0-and-mod0 . g$11458$Od@c8)
        (fxdiv0 . g$11457$Od@c8)
        (fxdiv-and-mod . g$11456$Od@c8)
        (fxdiv . g$11455$Od@c8)
        (fxcopy-bit-field . g$6657$Od@c8)
        (fxcopy-bit . g$6655$Od@c8)
        (fxbit-set? . g$11454$Od@c8)
        (fxbit-field . g$6656$Od@c8)
        (fxbit-count . g$11453$Od@c8)
        (fxarithmetic-shift-right . g$6659$Od@c8)
        (fxarithmetic-shift-left . g$6658$Od@c8)
        (fxarithmetic-shift . g$11452$Od@c8)
        (fxand . g$11451$Od@c8)
        (fx>? . g$11450$Od@c8)
        (fx>=? . g$11449$Od@c8)
        (fx=? . g$11448$Od@c8)
        (fx<? . g$11447$Od@c8)
        (fx<=? . g$11446$Od@c8)
        (fx-/carry . g$11445$Od@c8)
        (fx- . g$11444$Od@c8)
        (fx+/carry . g$11443$Od@c8)
        (fx+ . g$11442$Od@c8)
        (fx*/carry . g$11441$Od@c8)
        (fx* . g$11440$Od@c8)
        (greatest-fixnum . g$11439$Od@c8)
        (least-fixnum . g$11438$Od@c8)
        (fixnum-width . g$11437$Od@c8)
        (fixnum? . g$11436$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11848$Od@c8
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6729$Od@c8)
        (no-infinities-violation? . g$6715$Od@c8)
        (make-no-nans-violation . g$6728$Od@c8)
        (make-no-infinities-violation . g$6714$Od@c8)
        (real->flonum . g$11519$Od@c8)
        (flzero? . g$11518$Od@c8)
        (fltruncate . g$11517$Od@c8)
        (fltan . g$11516$Od@c8)
        (flsqrt . g$11515$Od@c8)
        (flsin . g$11514$Od@c8)
        (flround . g$11513$Od@c8)
        (flpositive? . g$11512$Od@c8)
        (flonum? . g$11511$Od@c8)
        (flodd? . g$11510$Od@c8)
        (flnumerator . g$11509$Od@c8)
        (flnegative? . g$11508$Od@c8)
        (flnan? . g$11507$Od@c8)
        (flmod0 . g$11506$Od@c8)
        (flmod . g$11505$Od@c8)
        (flmin . g$11504$Od@c8)
        (flmax . g$11503$Od@c8)
        (fllog . g$11502$Od@c8)
        (flinteger? . g$11501$Od@c8)
        (flinfinite? . g$11500$Od@c8)
        (flfloor . g$11499$Od@c8)
        (flfinite? . g$11498$Od@c8)
        (flexpt . g$11497$Od@c8)
        (flexp . g$11496$Od@c8)
        (fleven? . g$11495$Od@c8)
        (fldiv0-and-mod0 . g$11494$Od@c8)
        (fldiv0 . g$11493$Od@c8)
        (fldiv-and-mod . g$11492$Od@c8)
        (fldiv . g$11491$Od@c8)
        (fldenominator . g$11490$Od@c8)
        (flcos . g$11489$Od@c8)
        (flceiling . g$11488$Od@c8)
        (flatan . g$11487$Od@c8)
        (flasin . g$11486$Od@c8)
        (flacos . g$11485$Od@c8)
        (flabs . g$11484$Od@c8)
        (fl>? . g$11483$Od@c8)
        (fl>=? . g$11482$Od@c8)
        (fl=? . g$11481$Od@c8)
        (fl<? . g$11480$Od@c8)
        (fl<=? . g$11479$Od@c8)
        (fl/ . g$11478$Od@c8)
        (fl- . g$11477$Od@c8)
        (fl+ . g$11476$Od@c8)
        (fl* . g$11475$Od@c8)
        (fixnum->flonum . g$11474$Od@c8)
        (&no-nans . g$11268$Od@c8)
        (&no-infinities . g$11267$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11849$Od@c8
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$11678$Od@c8)
        (string-ci-hash . g$11677$Od@c8)
        (string-hash . g$11676$Od@c8)
        (equal-hash . g$11675$Od@c8)
        (hashtable-equivalence-function . g$11674$Od@c8)
        (make-hashtable . g$11673$Od@c8)
        (hashtable-hash-function . g$11672$Od@c8)
        (make-eqv-hashtable . g$5983$Od@c8)
        (make-eq-hashtable . g$5982$Od@c8)
        (hashtable? . g$11671$Od@c8)
        (hashtable-update! . g$5989$Od@c8)
        (hashtable-size . g$5984$Od@c8)
        (hashtable-set! . g$5986$Od@c8)
        (hashtable-ref . g$5985$Od@c8)
        (hashtable-mutable? . g$11670$Od@c8)
        (hashtable-keys . g$11669$Od@c8)
        (hashtable-entries . g$11668$Od@c8)
        (hashtable-delete! . g$5987$Od@c8)
        (hashtable-copy . g$11667$Od@c8)
        (hashtable-contains? . g$5988$Od@c8)
        (hashtable-clear! . g$5990$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11850$Od@c8
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11651$Od@c8)
        (eof-object . g$11650$Od@c8)
        (current-error-port . g$11649$Od@c8)
        (current-output-port . g$11648$Od@c8)
        (current-input-port . g$11647$Od@c8)
        (output-port? . g$11646$Od@c8)
        (input-port? . g$11645$Od@c8)
        (utf-8-codec . g$11644$Od@c8)
        (utf-16-codec . g$11643$Od@c8)
        (transcoder-error-handling-mode . g$11642$Od@c8)
        (transcoder-eol-style . g$11641$Od@c8)
        (transcoder-codec . g$11640$Od@c8)
        (transcoded-port . g$11639$Od@c8)
        (textual-port? . g$11638$Od@c8)
        (string->bytevector . g$11637$Od@c8)
        (standard-output-port . g$11636$Od@c8)
        (standard-input-port . g$11635$Od@c8)
        (standard-error-port . g$11634$Od@c8)
        (set-port-position! . g$11633$Od@c8)
        (put-u8 . g$11632$Od@c8)
        (put-string . g$11631$Od@c8)
        (put-datum . g$11630$Od@c8)
        (put-char . g$11629$Od@c8)
        (put-bytevector . g$11628$Od@c8)
        (port? . g$11627$Od@c8)
        (port-transcoder . g$11626$Od@c8)
        (port-position . g$11625$Od@c8)
        (port-has-set-port-position!? . g$11624$Od@c8)
        (port-has-port-position? . g$11623$Od@c8)
        (port-eof? . g$11622$Od@c8)
        (output-port-buffer-mode . g$11621$Od@c8)
        (open-string-output-port . g$6914$Od@c8)
        (open-string-input-port . g$11620$Od@c8)
        (open-file-output-port . g$11619$Od@c8)
        (open-file-input/output-port . g$11618$Od@c8)
        (open-file-input-port . g$11617$Od@c8)
        (open-bytevector-output-port . g$11616$Od@c8)
        (open-bytevector-input-port . g$11615$Od@c8)
        (native-transcoder . g$11614$Od@c8)
        (native-eol-style . g$11613$Od@c8)
        (make-transcoder . g$11612$Od@c8)
        (latin-1-codec . g$11611$Od@c8)
        (make-i/o-write-error . g$6771$Od@c8)
        (make-i/o-read-error . g$6757$Od@c8)
        (make-i/o-port-error . g$6876$Od@c8)
        (make-i/o-invalid-position-error . g$6786$Od@c8)
        (make-i/o-filename-error . g$6803$Od@c8)
        (make-i/o-file-protection-error . g$6819$Od@c8)
        (make-i/o-file-is-read-only-error . g$6833$Od@c8)
        (make-i/o-file-does-not-exist-error . g$6861$Od@c8)
        (make-i/o-file-already-exists-error . g$6847$Od@c8)
        (make-i/o-error . g$6743$Od@c8)
        (make-i/o-encoding-error . g$6907$Od@c8)
        (make-i/o-decoding-error . g$6892$Od@c8)
        (make-custom-textual-output-port . g$11610$Od@c8)
        (make-custom-textual-input/output-port . g$11609$Od@c8)
        (make-custom-textual-input-port . g$11608$Od@c8)
        (make-custom-binary-output-port . g$11607$Od@c8)
        (make-custom-binary-input/output-port . g$11606$Od@c8)
        (make-custom-binary-input-port . g$11605$Od@c8)
        (lookahead-u8 . g$11603$Od@c8)
        (lookahead-char . g$11602$Od@c8)
        (i/o-write-error? . g$6772$Od@c8)
        (i/o-read-error? . g$6758$Od@c8)
        (i/o-port-error? . g$6878$Od@c8)
        (i/o-invalid-position-error? . g$6788$Od@c8)
        (i/o-filename-error? . g$6805$Od@c8)
        (i/o-file-protection-error? . g$6820$Od@c8)
        (i/o-file-is-read-only-error? . g$6834$Od@c8)
        (i/o-file-does-not-exist-error? . g$6862$Od@c8)
        (i/o-file-already-exists-error? . g$6848$Od@c8)
        (i/o-error? . g$6744$Od@c8)
        (i/o-error-port . g$6879$Od@c8)
        (i/o-error-filename . g$6806$Od@c8)
        (i/o-encoding-error? . g$6909$Od@c8)
        (i/o-encoding-error-char . g$6910$Od@c8)
        (i/o-decoding-error? . g$6893$Od@c8)
        (get-u8 . g$11601$Od@c8)
        (get-string-n! . g$11600$Od@c8)
        (get-string-n . g$11599$Od@c8)
        (get-string-all . g$11598$Od@c8)
        (get-line . g$11597$Od@c8)
        (get-datum . g$11596$Od@c8)
        (get-char . g$11595$Od@c8)
        (get-bytevector-some . g$11594$Od@c8)
        (get-bytevector-n! . g$11593$Od@c8)
        (get-bytevector-n . g$11592$Od@c8)
        (get-bytevector-all . g$11591$Od@c8)
        (flush-output-port . g$11590$Od@c8)
        (close-port . g$11589$Od@c8)
        (call-with-string-output-port . g$11588$Od@c8)
        (call-with-port . g$11587$Od@c8)
        (call-with-bytevector-output-port . g$11586$Od@c8)
        (bytevector->string . g$11585$Od@c8)
        (buffer-mode? . g$11584$Od@c8)
        (binary-port? . g$11583$Od@c8)
        (&i/o-encoding . g$11266$Od@c8)
        (&i/o-decoding . g$11265$Od@c8)
        (&i/o-port . g$11264$Od@c8)
        (&i/o-file-does-not-exist . g$11263$Od@c8)
        (&i/o-file-already-exists . g$11262$Od@c8)
        (&i/o-file-is-read-only . g$11261$Od@c8)
        (&i/o-file-protection . g$11260$Od@c8)
        (&i/o-filename . g$11259$Od@c8)
        (&i/o-invalid-position . g$11258$Od@c8)
        (&i/o-write . g$11257$Od@c8)
        (&i/o-read . g$11256$Od@c8)
        (&i/o . g$11255$Od@c8)
        (error-handling-mode . g$11227$Od@c8)
        (file-options . g$11226$Od@c8)
        (buffer-mode . g$11225$Od@c8)
        (eol-style . g$11224$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11851$Od@c8
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$11567$Od@c8)
        (enum-set=? . g$11566$Od@c8)
        (enum-set-universe . g$11565$Od@c8)
        (enum-set-union . g$11564$Od@c8)
        (enum-set-subset? . g$11563$Od@c8)
        (enum-set-projection . g$11562$Od@c8)
        (enum-set-member? . g$11561$Od@c8)
        (enum-set-intersection . g$11560$Od@c8)
        (enum-set-indexer . g$11559$Od@c8)
        (enum-set-difference . g$11558$Od@c8)
        (enum-set-constructor . g$11557$Od@c8)
        (enum-set-complement . g$11556$Od@c8)
        (enum-set->list . g$11555$Od@c8)
        (define-enumeration . g$11238$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11852$Od@c8
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6421$Od@c8)
        (warning? . g$6332$Od@c8)
        (violation? . g$6374$Od@c8)
        (undefined-violation? . g$6498$Od@c8)
        (syntax-violation? . g$6482$Od@c8)
        (syntax-violation-subform . g$6484$Od@c8)
        (syntax-violation-form . g$6483$Od@c8)
        (syntax-violation . g$8225$Od@c8)
        (simple-conditions . g$11554$Od@c8)
        (serious-condition? . g$6346$Od@c8)
        (non-continuable-violation? . g$6436$Od@c8)
        (message-condition? . g$6317$Od@c8)
        (make-who-condition . g$6419$Od@c8)
        (make-warning . g$6331$Od@c8)
        (make-violation . g$6373$Od@c8)
        (make-undefined-violation . g$6497$Od@c8)
        (make-syntax-violation . g$6479$Od@c8)
        (make-serious-condition . g$6345$Od@c8)
        (make-non-continuable-violation . g$6435$Od@c8)
        (make-message-condition . g$6315$Od@c8)
        (make-lexical-violation . g$6463$Od@c8)
        (make-irritants-condition . g$6402$Od@c8)
        (make-implementation-restriction-violation . g$6449$Od@c8)
        (make-error . g$6359$Od@c8)
        (make-assertion-violation . g$6387$Od@c8)
        (lexical-violation? . g$6464$Od@c8)
        (irritants-condition? . g$6404$Od@c8)
        (implementation-restriction-violation? . g$6450$Od@c8)
        (error? . g$6360$Od@c8)
        (condition-who . g$6422$Od@c8)
        (condition-predicate . g$11553$Od@c8)
        (condition-message . g$6318$Od@c8)
        (condition-irritants . g$6405$Od@c8)
        (condition-accessor . g$11552$Od@c8)
        (condition . g$11551$Od@c8)
        (assertion-violation? . g$6388$Od@c8)
        (condition? . g$11550$Od@c8)
        (&non-continuable . g$11254$Od@c8)
        (&undefined . g$11253$Od@c8)
        (&syntax . g$11252$Od@c8)
        (&lexical . g$11251$Od@c8)
        (&implementation-restriction . g$11250$Od@c8)
        (&who . g$11248$Od@c8)
        (&irritants . g$11247$Od@c8)
        (&assertion . g$11246$Od@c8)
        (&violation . g$11245$Od@c8)
        (&error . g$11244$Od@c8)
        (&serious . g$11243$Od@c8)
        (&warning . g$11242$Od@c8)
        (&message . g$11241$Od@c8)
        (&condition . g$11240$Od@c8)
        (define-condition-type . g$11239$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11853$Od@c8
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$11690$Od@c8)
        (record-type-uid . g$11689$Od@c8)
        (record-type-sealed? . g$11688$Od@c8)
        (record-type-parent . g$11687$Od@c8)
        (record-type-opaque? . g$11686$Od@c8)
        (record-type-name . g$11685$Od@c8)
        (record-type-generative? . g$11684$Od@c8)
        (record-type-field-names . g$11683$Od@c8)
        (record-rtd . g$11682$Od@c8)
        (record-field-mutable? . g$11681$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11854$Od@c8
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$11697$Od@c8)
        (record-predicate . g$11696$Od@c8)
        (record-mutator . g$11695$Od@c8)
        (record-constructor . g$11694$Od@c8)
        (record-accessor . g$11693$Od@c8)
        (make-record-type-descriptor . g$11692$Od@c8)
        (make-record-constructor-descriptor . g$11691$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11855$Od@c8
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11237$Od@c8)
        (parent-rtd . g$11236$Od@c8)
        (nongenerative . g$11235$Od@c8)
        (opaque . g$11234$Od@c8)
        (sealed . g$11233$Od@c8)
        (protocol . g$11232$Od@c8)
        (parent . g$11231$Od@c8)
        (immutable . g$11230$Od@c8)
        (mutable . g$11229$Od@c8)
        (fields . g$11228$Od@c8)
        (record-constructor-descriptor . g$11189$Od@c8)
        (record-type-descriptor . g$11188$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$Od@c8
      'g$11856$Od@c8
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8103$Od@c8)
        (&no-nans-rcd . g$11820$Od@c8)
        (&no-nans-rtd . g$11819$Od@c8)
        (&no-infinities-rcd . g$11818$Od@c8)
        (&no-infinities-rtd . g$11817$Od@c8)
        (&i/o-encoding-rcd . g$11816$Od@c8)
        (&i/o-encoding-rtd . g$11815$Od@c8)
        (&i/o-decoding-rcd . g$11814$Od@c8)
        (&i/o-decoding-rtd . g$11813$Od@c8)
        (&i/o-port-rcd . g$11812$Od@c8)
        (&i/o-port-rtd . g$11811$Od@c8)
        (&i/o-file-does-not-exist-rcd . g$11810$Od@c8)
        (&i/o-file-does-not-exist-rtd . g$11809$Od@c8)
        (&i/o-file-already-exists-rcd . g$11808$Od@c8)
        (&i/o-file-already-exists-rtd . g$11807$Od@c8)
        (&i/o-fie-is-read-only-rcd . g$11806$Od@c8)
        (&i/o-fie-is-read-only-rtd . g$11805$Od@c8)
        (&i/o-file-protection-rcd . g$11804$Od@c8)
        (&i/o-file-protection-rtd . g$11803$Od@c8)
        (&i/o-filename-rcd . g$11802$Od@c8)
        (&i/o-filename-rtd . g$11801$Od@c8)
        (&i/o-invalid-position-rcd . g$11800$Od@c8)
        (&i/o-invalid-position-rtd . g$11799$Od@c8)
        (&i/o-write-rcd . g$11798$Od@c8)
        (&i/o-write-rtd . g$11797$Od@c8)
        (&i/o-read-rcd . g$11796$Od@c8)
        (&i/o-read-rtd . g$11795$Od@c8)
        (&i/o-rcd . g$11794$Od@c8)
        (&i/o-rtd . g$11793$Od@c8)
        (&undefined-rcd . g$11792$Od@c8)
        (&undefined-rtd . g$11791$Od@c8)
        (&syntax-rcd . g$11790$Od@c8)
        (&syntax-rtd . g$11789$Od@c8)
        (&lexical-rcd . g$11788$Od@c8)
        (&lexical-rtd . g$11787$Od@c8)
        (&implementation-restriction-rcd . g$11786$Od@c8)
        (&implementation-restriction-rtd . g$11785$Od@c8)
        (&non-continuable-rcd . g$11784$Od@c8)
        (&non-continuable-rtd . g$11783$Od@c8)
        (&who-rcd . g$11782$Od@c8)
        (&who-rtd . g$11781$Od@c8)
        (&irritants-rcd . g$11780$Od@c8)
        (&irritants-rtd . g$11779$Od@c8)
        (&assertion-rcd . g$11778$Od@c8)
        (&assertion-rtd . g$11777$Od@c8)
        (&violation-rcd . g$11776$Od@c8)
        (&violation-rtd . g$11775$Od@c8)
        (&error-rcd . g$11774$Od@c8)
        (&error-rtd . g$11773$Od@c8)
        (&serious-rcd . g$11772$Od@c8)
        (&serious-rtd . g$11771$Od@c8)
        (&warning-rcd . g$11770$Od@c8)
        (&warning-rtd . g$11769$Od@c8)
        (&message-rcd . g$11768$Od@c8)
        (&message-rtd . g$11767$Od@c8)
        (&condition-rcd . g$11766$Od@c8)
        (&condition-rtd . g$11765$Od@c8)
        (library-letrec* . g$11764$Od@c8)
        (annotation-stripped . g$11763$Od@c8)
        (annotation-source . g$11762$Od@c8)
        (annotation-expression . g$11761$Od@c8)
        (annotation? . g$11760$Od@c8)
        (read-annotated . g$11759$Od@c8)
        (tanh . g$11758$Od@c8)
        (cosh . g$11757$Od@c8)
        (sinh . g$11756$Od@c8)
        (make-guid . g$11755$Od@c8)
        (unspecified? . g$11754$Od@c8)
        (make-trace . g$11753$Od@c8)
        (make-list . g$11752$Od@c8)
        (last-pair . g$11751$Od@c8)
        (load-r5rs . g$11750$Od@c8)
        (license . g$11749$Od@c8)
        (stacktrace . g$11748$Od@c8)
        (ironscheme-build . g$11142$Od@c8)
        (define-clr-class-internal . g$11747$Od@c8)
        (clr-field-set!-internal . g$11746$Od@c8)
        (clr-field-get-internal . g$11745$Od@c8)
        (clr-cast-internal . g$11744$Od@c8)
        (clr-call-internal . g$11743$Od@c8)
        (clr-new-internal . g$11742$Od@c8)
        (clr-new-array-internal . g$11741$Od@c8)
        (clr-is-internal . g$11740$Od@c8)
        (clr-reference-internal . g$11739$Od@c8)
        (clr-using-internal . g$11738$Od@c8)
        (clr-clear-usings-internal . g$11737$Od@c8)
        (syntax-error . g$8222$Od@c8)
        (syntax-dispatch . g$8098$Od@c8)
        (compile-core . g$11736$Od@c8)
        (eval-core . g$11735$Od@c8)
        (set-symbol-value! . g$11734$Od@c8)
        (symbol-value . g$11733$Od@c8)
        (ungensym . g$11732$Od@c8)
        (gensym . g$11731$Od@c8)
        (void . g$11730$Od@c8)
        (load-serialized-library . g$11729$Od@c8)
        (serialize-library . g$11728$Od@c8)
        (compile-system-libraries . g$11144$Od@c8)
        (compile->closure . g$11146$Od@c8)
        (compile . g$11145$Od@c8)
        (load . g$11141$Od@c8)
        (interaction-environment . g$8231$Od@c8)
        (char-ready? . g$11727$Od@c8)
        (string-upcase . g$11726$Od@c8)
        (string-titlecase . g$11725$Od@c8)
        (string-normalize-nfkd . g$11724$Od@c8)
        (string-normalize-nfkc . g$11723$Od@c8)
        (string-normalize-nfd . g$11722$Od@c8)
        (string-normalize-nfc . g$11721$Od@c8)
        (string-foldcase . g$11720$Od@c8)
        (string-downcase . g$11719$Od@c8)
        (string-ci>? . g$11718$Od@c8)
        (string-ci>=? . g$11717$Od@c8)
        (string-ci=? . g$11716$Od@c8)
        (string-ci<? . g$11715$Od@c8)
        (string-ci<=? . g$11714$Od@c8)
        (char-whitespace? . g$11713$Od@c8)
        (char-upper-case? . g$11712$Od@c8)
        (char-title-case? . g$11711$Od@c8)
        (char-numeric? . g$11710$Od@c8)
        (char-lower-case? . g$11709$Od@c8)
        (char-general-category . g$11708$Od@c8)
        (char-upcase . g$11707$Od@c8)
        (char-titlecase . g$11706$Od@c8)
        (char-foldcase . g$11705$Od@c8)
        (char-downcase . g$11704$Od@c8)
        (char-ci>? . g$11703$Od@c8)
        (char-ci>=? . g$11702$Od@c8)
        (char-ci=? . g$11701$Od@c8)
        (char-ci<? . g$11700$Od@c8)
        (char-ci<=? . g$11699$Od@c8)
        (char-alphabetic? . g$11698$Od@c8)
        (variable-transformer-procedure . g$7835$Od@c8)
        (variable-transformer? . g$7834$Od@c8)
        (make-variable-transformer . g$7833$Od@c8)
        (identifier? . g$8226$Od@c8)
        (generate-temporaries . g$8218$Od@c8)
        (free-identifier=? . g$8219$Od@c8)
        (syntax->datum . g$8228$Od@c8)
        (datum->syntax . g$8227$Od@c8)
        (bound-identifier=? . g$8220$Od@c8)
        (record-type-descriptor? . g$11697$Od@c8)
        (record-predicate . g$11696$Od@c8)
        (record-mutator . g$11695$Od@c8)
        (record-constructor . g$11694$Od@c8)
        (record-accessor . g$11693$Od@c8)
        (make-record-type-descriptor . g$11692$Od@c8)
        (make-record-constructor-descriptor . g$11691$Od@c8)
        (record? . g$11690$Od@c8)
        (record-type-uid . g$11689$Od@c8)
        (record-type-sealed? . g$11688$Od@c8)
        (record-type-parent . g$11687$Od@c8)
        (record-type-opaque? . g$11686$Od@c8)
        (record-type-name . g$11685$Od@c8)
        (record-type-generative? . g$11684$Od@c8)
        (record-type-field-names . g$11683$Od@c8)
        (record-rtd . g$11682$Od@c8)
        (record-field-mutable? . g$11681$Od@c8)
        (delete-file . g$6016$Od@c8)
        (file-exists? . g$6015$Od@c8)
        (vector-sort! . g$11680$Od@c8)
        (vector-sort . g$11679$Od@c8)
        (list-sort . g$6523$Od@c8)
        (symbol-hash . g$11678$Od@c8)
        (string-ci-hash . g$11677$Od@c8)
        (string-hash . g$11676$Od@c8)
        (equal-hash . g$11675$Od@c8)
        (hashtable-equivalence-function . g$11674$Od@c8)
        (make-hashtable . g$11673$Od@c8)
        (hashtable-hash-function . g$11672$Od@c8)
        (make-eqv-hashtable . g$5983$Od@c8)
        (make-eq-hashtable . g$5982$Od@c8)
        (hashtable? . g$11671$Od@c8)
        (hashtable-update! . g$5989$Od@c8)
        (hashtable-size . g$5984$Od@c8)
        (hashtable-set! . g$5986$Od@c8)
        (hashtable-ref . g$5985$Od@c8)
        (hashtable-mutable? . g$11670$Od@c8)
        (hashtable-keys . g$11669$Od@c8)
        (hashtable-entries . g$11668$Od@c8)
        (hashtable-delete! . g$5987$Od@c8)
        (hashtable-copy . g$11667$Od@c8)
        (hashtable-contains? . g$5988$Od@c8)
        (hashtable-clear! . g$5990$Od@c8)
        (call-with-output-file . g$11666$Od@c8)
        (call-with-input-file . g$11665$Od@c8)
        (write-char . g$11664$Od@c8)
        (write . g$11663$Od@c8)
        (with-output-to-file . g$11662$Od@c8)
        (with-input-from-file . g$11661$Od@c8)
        (read-char . g$11660$Od@c8)
        (read . g$11659$Od@c8)
        (peek-char . g$11658$Od@c8)
        (open-output-file . g$11657$Od@c8)
        (open-input-file . g$11656$Od@c8)
        (newline . g$11655$Od@c8)
        (display . g$11654$Od@c8)
        (close-output-port . g$11653$Od@c8)
        (close-input-port . g$11652$Od@c8)
        (eof-object? . g$11651$Od@c8)
        (eof-object . g$11650$Od@c8)
        (current-error-port . g$11649$Od@c8)
        (current-output-port . g$11648$Od@c8)
        (current-input-port . g$11647$Od@c8)
        (output-port? . g$11646$Od@c8)
        (input-port? . g$11645$Od@c8)
        (utf-8-codec . g$11644$Od@c8)
        (utf-16-codec . g$11643$Od@c8)
        (transcoder-error-handling-mode . g$11642$Od@c8)
        (transcoder-eol-style . g$11641$Od@c8)
        (transcoder-codec . g$11640$Od@c8)
        (transcoded-port . g$11639$Od@c8)
        (textual-port? . g$11638$Od@c8)
        (string->bytevector . g$11637$Od@c8)
        (standard-output-port . g$11636$Od@c8)
        (standard-input-port . g$11635$Od@c8)
        (standard-error-port . g$11634$Od@c8)
        (set-port-position! . g$11633$Od@c8)
        (put-u8 . g$11632$Od@c8)
        (put-string . g$11631$Od@c8)
        (put-datum . g$11630$Od@c8)
        (put-char . g$11629$Od@c8)
        (put-bytevector . g$11628$Od@c8)
        (port? . g$11627$Od@c8)
        (port-transcoder . g$11626$Od@c8)
        (port-position . g$11625$Od@c8)
        (port-has-set-port-position!? . g$11624$Od@c8)
        (port-has-port-position? . g$11623$Od@c8)
        (port-eof? . g$11622$Od@c8)
        (output-port-buffer-mode . g$11621$Od@c8)
        (open-string-output-port . g$6914$Od@c8)
        (open-string-input-port . g$11620$Od@c8)
        (open-file-output-port . g$11619$Od@c8)
        (open-file-input/output-port . g$11618$Od@c8)
        (open-file-input-port . g$11617$Od@c8)
        (open-bytevector-output-port . g$11616$Od@c8)
        (open-bytevector-input-port . g$11615$Od@c8)
        (native-transcoder . g$11614$Od@c8)
        (native-eol-style . g$11613$Od@c8)
        (make-transcoder . g$11612$Od@c8)
        (latin-1-codec . g$11611$Od@c8)
        (make-i/o-write-error . g$6771$Od@c8)
        (make-i/o-read-error . g$6757$Od@c8)
        (make-i/o-port-error . g$6876$Od@c8)
        (make-i/o-invalid-position-error . g$6786$Od@c8)
        (make-i/o-filename-error . g$6803$Od@c8)
        (make-i/o-file-protection-error . g$6819$Od@c8)
        (make-i/o-file-is-read-only-error . g$6833$Od@c8)
        (make-i/o-file-does-not-exist-error . g$6861$Od@c8)
        (make-i/o-file-already-exists-error . g$6847$Od@c8)
        (make-i/o-error . g$6743$Od@c8)
        (make-i/o-encoding-error . g$6907$Od@c8)
        (make-i/o-decoding-error . g$6892$Od@c8)
        (make-custom-textual-output-port . g$11610$Od@c8)
        (make-custom-textual-input/output-port . g$11609$Od@c8)
        (make-custom-textual-input-port . g$11608$Od@c8)
        (make-custom-binary-output-port . g$11607$Od@c8)
        (make-custom-binary-input/output-port . g$11606$Od@c8)
        (make-custom-binary-input-port . g$11605$Od@c8)
        (make-bytevector . g$11604$Od@c8)
        (lookahead-u8 . g$11603$Od@c8)
        (lookahead-char . g$11602$Od@c8)
        (i/o-write-error? . g$6772$Od@c8)
        (i/o-read-error? . g$6758$Od@c8)
        (i/o-port-error? . g$6878$Od@c8)
        (i/o-invalid-position-error? . g$6788$Od@c8)
        (i/o-filename-error? . g$6805$Od@c8)
        (i/o-file-protection-error? . g$6820$Od@c8)
        (i/o-file-is-read-only-error? . g$6834$Od@c8)
        (i/o-file-does-not-exist-error? . g$6862$Od@c8)
        (i/o-file-already-exists-error? . g$6848$Od@c8)
        (i/o-error? . g$6744$Od@c8)
        (i/o-error-port . g$6879$Od@c8)
        (i/o-error-filename . g$6806$Od@c8)
        (i/o-encoding-error? . g$6909$Od@c8)
        (i/o-encoding-error-char . g$6910$Od@c8)
        (i/o-decoding-error? . g$6893$Od@c8)
        (get-u8 . g$11601$Od@c8)
        (get-string-n! . g$11600$Od@c8)
        (get-string-n . g$11599$Od@c8)
        (get-string-all . g$11598$Od@c8)
        (get-line . g$11597$Od@c8)
        (get-datum . g$11596$Od@c8)
        (get-char . g$11595$Od@c8)
        (get-bytevector-some . g$11594$Od@c8)
        (get-bytevector-n! . g$11593$Od@c8)
        (get-bytevector-n . g$11592$Od@c8)
        (get-bytevector-all . g$11591$Od@c8)
        (flush-output-port . g$11590$Od@c8)
        (close-port . g$11589$Od@c8)
        (call-with-string-output-port . g$11588$Od@c8)
        (call-with-port . g$11587$Od@c8)
        (call-with-bytevector-output-port . g$11586$Od@c8)
        (bytevector->string . g$11585$Od@c8)
        (buffer-mode? . g$11584$Od@c8)
        (binary-port? . g$11583$Od@c8)
        (scheme-report-environment . g$8209$Od@c8)
        (quotient . g$6510$Od@c8)
        (null-environment . g$8208$Od@c8)
        (remainder . g$6511$Od@c8)
        (modulo . g$6512$Od@c8)
        (inexact->exact . g$11582$Od@c8)
        (force . g$11581$Od@c8)
        (exact->inexact . g$11580$Od@c8)
        (exit . g$11579$Od@c8)
        (command-line . g$11578$Od@c8)
        (string-fill! . g$11577$Od@c8)
        (string-set! . g$11576$Od@c8)
        (set-cdr! . g$11575$Od@c8)
        (set-car! . g$11574$Od@c8)
        (remove . g$6096$Od@c8)
        (remv . g$6097$Od@c8)
        (remp . g$6082$Od@c8)
        (remq . g$6098$Od@c8)
        (partition . g$6081$Od@c8)
        (memv . g$11573$Od@c8)
        (memq . g$11572$Od@c8)
        (memp . g$6088$Od@c8)
        (member . g$6087$Od@c8)
        (exists . g$6092$Od@c8)
        (for-all . g$6091$Od@c8)
        (fold-right . g$6095$Od@c8)
        (fold-left . g$6094$Od@c8)
        (find . g$6080$Od@c8)
        (filter . g$6083$Od@c8)
        (cons* . g$6093$Od@c8)
        (assv . g$6084$Od@c8)
        (assq . g$11571$Od@c8)
        (assp . g$6086$Od@c8)
        (assoc . g$6085$Od@c8)
        (with-exception-handler . g$11570$Od@c8)
        (raise-continuable . g$11569$Od@c8)
        (raise . g$11568$Od@c8)
        (eval . g$8211$Od@c8)
        (environment . g$8207$Od@c8)
        (make-enumeration . g$11567$Od@c8)
        (enum-set=? . g$11566$Od@c8)
        (enum-set-universe . g$11565$Od@c8)
        (enum-set-union . g$11564$Od@c8)
        (enum-set-subset? . g$11563$Od@c8)
        (enum-set-projection . g$11562$Od@c8)
        (enum-set-member? . g$11561$Od@c8)
        (enum-set-intersection . g$11560$Od@c8)
        (enum-set-indexer . g$11559$Od@c8)
        (enum-set-difference . g$11558$Od@c8)
        (enum-set-constructor . g$11557$Od@c8)
        (enum-set-complement . g$11556$Od@c8)
        (enum-set->list . g$11555$Od@c8)
        (who-condition? . g$6421$Od@c8)
        (warning? . g$6332$Od@c8)
        (violation? . g$6374$Od@c8)
        (undefined-violation? . g$6498$Od@c8)
        (syntax-violation? . g$6482$Od@c8)
        (syntax-violation-subform . g$6484$Od@c8)
        (syntax-violation-form . g$6483$Od@c8)
        (syntax-violation . g$8225$Od@c8)
        (simple-conditions . g$11554$Od@c8)
        (serious-condition? . g$6346$Od@c8)
        (non-continuable-violation? . g$6436$Od@c8)
        (message-condition? . g$6317$Od@c8)
        (make-who-condition . g$6419$Od@c8)
        (make-warning . g$6331$Od@c8)
        (make-violation . g$6373$Od@c8)
        (make-undefined-violation . g$6497$Od@c8)
        (make-syntax-violation . g$6479$Od@c8)
        (make-serious-condition . g$6345$Od@c8)
        (make-non-continuable-violation . g$6435$Od@c8)
        (make-message-condition . g$6315$Od@c8)
        (make-lexical-violation . g$6463$Od@c8)
        (make-irritants-condition . g$6402$Od@c8)
        (make-implementation-restriction-violation . g$6449$Od@c8)
        (make-error . g$6359$Od@c8)
        (make-assertion-violation . g$6387$Od@c8)
        (lexical-violation? . g$6464$Od@c8)
        (irritants-condition? . g$6404$Od@c8)
        (implementation-restriction-violation? . g$6450$Od@c8)
        (error? . g$6360$Od@c8)
        (condition-who . g$6422$Od@c8)
        (condition-predicate . g$11553$Od@c8)
        (condition-message . g$6318$Od@c8)
        (condition-irritants . g$6405$Od@c8)
        (condition-accessor . g$11552$Od@c8)
        (condition . g$11551$Od@c8)
        (assertion-violation? . g$6388$Od@c8)
        (condition? . g$11550$Od@c8)
        (utf32->string . g$11549$Od@c8)
        (utf16->string . g$11548$Od@c8)
        (utf8->string . g$11547$Od@c8)
        (uint-list->bytevector . g$11546$Od@c8)
        (u8-list->bytevector . g$11545$Od@c8)
        (string->utf8 . g$11544$Od@c8)
        (string->utf32 . g$11543$Od@c8)
        (string->utf16 . g$11542$Od@c8)
        (sint-list->bytevector . g$11541$Od@c8)
        (native-endianness . g$6172$Od@c8)
        (bytevector? . g$11540$Od@c8)
        (bytevector=? . g$11539$Od@c8)
        (bytevector-uint-set! . g$11538$Od@c8)
        (bytevector-uint-ref . g$11537$Od@c8)
        (bytevector-u8-set! . g$11536$Od@c8)
        (bytevector-u8-ref . g$11535$Od@c8)
        (bytevector-u64-set! . g$6193$Od@c8)
        (bytevector-u64-ref . g$6189$Od@c8)
        (bytevector-u64-native-set! . g$6195$Od@c8)
        (bytevector-u64-native-ref . g$6191$Od@c8)
        (bytevector-u32-set! . g$6185$Od@c8)
        (bytevector-u32-ref . g$6181$Od@c8)
        (bytevector-u32-native-set! . g$6187$Od@c8)
        (bytevector-u32-native-ref . g$6183$Od@c8)
        (bytevector-u16-set! . g$6177$Od@c8)
        (bytevector-u16-ref . g$6173$Od@c8)
        (bytevector-u16-native-set! . g$6179$Od@c8)
        (bytevector-u16-native-ref . g$6175$Od@c8)
        (bytevector-sint-set! . g$11534$Od@c8)
        (bytevector-sint-ref . g$11533$Od@c8)
        (bytevector-s8-set! . g$11532$Od@c8)
        (bytevector-s8-ref . g$11531$Od@c8)
        (bytevector-s64-set! . g$6194$Od@c8)
        (bytevector-s64-ref . g$6190$Od@c8)
        (bytevector-s64-native-set! . g$6196$Od@c8)
        (bytevector-s64-native-ref . g$6192$Od@c8)
        (bytevector-s32-set! . g$6186$Od@c8)
        (bytevector-s32-ref . g$6182$Od@c8)
        (bytevector-s32-native-set! . g$6188$Od@c8)
        (bytevector-s32-native-ref . g$6184$Od@c8)
        (bytevector-s16-set! . g$6178$Od@c8)
        (bytevector-s16-ref . g$6174$Od@c8)
        (bytevector-s16-native-set! . g$6180$Od@c8)
        (bytevector-s16-native-ref . g$6176$Od@c8)
        (bytevector-length . g$11530$Od@c8)
        (bytevector-ieee-single-set! . g$11529$Od@c8)
        (bytevector-ieee-single-ref . g$11528$Od@c8)
        (bytevector-ieee-single-native-set! . g$6199$Od@c8)
        (bytevector-ieee-single-native-ref . g$6197$Od@c8)
        (bytevector-ieee-double-set! . g$11527$Od@c8)
        (bytevector-ieee-double-ref . g$11526$Od@c8)
        (bytevector-ieee-double-native-set! . g$6200$Od@c8)
        (bytevector-ieee-double-native-ref . g$6198$Od@c8)
        (bytevector-fill! . g$11525$Od@c8)
        (bytevector-copy! . g$11524$Od@c8)
        (bytevector-copy . g$11523$Od@c8)
        (bytevector->uint-list . g$11522$Od@c8)
        (bytevector->u8-list . g$11521$Od@c8)
        (bytevector->sint-list . g$11520$Od@c8)
        (no-nans-violation? . g$6729$Od@c8)
        (no-infinities-violation? . g$6715$Od@c8)
        (make-no-nans-violation . g$6728$Od@c8)
        (make-no-infinities-violation . g$6714$Od@c8)
        (real->flonum . g$11519$Od@c8)
        (flzero? . g$11518$Od@c8)
        (fltruncate . g$11517$Od@c8)
        (fltan . g$11516$Od@c8)
        (flsqrt . g$11515$Od@c8)
        (flsin . g$11514$Od@c8)
        (flround . g$11513$Od@c8)
        (flpositive? . g$11512$Od@c8)
        (flonum? . g$11511$Od@c8)
        (flodd? . g$11510$Od@c8)
        (flnumerator . g$11509$Od@c8)
        (flnegative? . g$11508$Od@c8)
        (flnan? . g$11507$Od@c8)
        (flmod0 . g$11506$Od@c8)
        (flmod . g$11505$Od@c8)
        (flmin . g$11504$Od@c8)
        (flmax . g$11503$Od@c8)
        (fllog . g$11502$Od@c8)
        (flinteger? . g$11501$Od@c8)
        (flinfinite? . g$11500$Od@c8)
        (flfloor . g$11499$Od@c8)
        (flfinite? . g$11498$Od@c8)
        (flexpt . g$11497$Od@c8)
        (flexp . g$11496$Od@c8)
        (fleven? . g$11495$Od@c8)
        (fldiv0-and-mod0 . g$11494$Od@c8)
        (fldiv0 . g$11493$Od@c8)
        (fldiv-and-mod . g$11492$Od@c8)
        (fldiv . g$11491$Od@c8)
        (fldenominator . g$11490$Od@c8)
        (flcos . g$11489$Od@c8)
        (flceiling . g$11488$Od@c8)
        (flatan . g$11487$Od@c8)
        (flasin . g$11486$Od@c8)
        (flacos . g$11485$Od@c8)
        (flabs . g$11484$Od@c8)
        (fl>? . g$11483$Od@c8)
        (fl>=? . g$11482$Od@c8)
        (fl=? . g$11481$Od@c8)
        (fl<? . g$11480$Od@c8)
        (fl<=? . g$11479$Od@c8)
        (fl/ . g$11478$Od@c8)
        (fl- . g$11477$Od@c8)
        (fl+ . g$11476$Od@c8)
        (fl* . g$11475$Od@c8)
        (fixnum->flonum . g$11474$Od@c8)
        (fxzero? . g$11473$Od@c8)
        (fxxor . g$11472$Od@c8)
        (fxrotate-bit-field . g$6660$Od@c8)
        (fxreverse-bit-field . g$11471$Od@c8)
        (fxpositive? . g$11470$Od@c8)
        (fxodd? . g$11469$Od@c8)
        (fxnot . g$11468$Od@c8)
        (fxnegative? . g$11467$Od@c8)
        (fxmod0 . g$11466$Od@c8)
        (fxmod . g$11465$Od@c8)
        (fxmin . g$11464$Od@c8)
        (fxmax . g$11463$Od@c8)
        (fxlength . g$11462$Od@c8)
        (fxior . g$11461$Od@c8)
        (fxif . g$6654$Od@c8)
        (fxfirst-bit-set . g$11460$Od@c8)
        (fxeven? . g$11459$Od@c8)
        (fxdiv0-and-mod0 . g$11458$Od@c8)
        (fxdiv0 . g$11457$Od@c8)
        (fxdiv-and-mod . g$11456$Od@c8)
        (fxdiv . g$11455$Od@c8)
        (fxcopy-bit-field . g$6657$Od@c8)
        (fxcopy-bit . g$6655$Od@c8)
        (fxbit-set? . g$11454$Od@c8)
        (fxbit-field . g$6656$Od@c8)
        (fxbit-count . g$11453$Od@c8)
        (fxarithmetic-shift-right . g$6659$Od@c8)
        (fxarithmetic-shift-left . g$6658$Od@c8)
        (fxarithmetic-shift . g$11452$Od@c8)
        (fxand . g$11451$Od@c8)
        (fx>? . g$11450$Od@c8)
        (fx>=? . g$11449$Od@c8)
        (fx=? . g$11448$Od@c8)
        (fx<? . g$11447$Od@c8)
        (fx<=? . g$11446$Od@c8)
        (fx-/carry . g$11445$Od@c8)
        (fx- . g$11444$Od@c8)
        (fx+/carry . g$11443$Od@c8)
        (fx+ . g$11442$Od@c8)
        (fx*/carry . g$11441$Od@c8)
        (fx* . g$11440$Od@c8)
        (greatest-fixnum . g$11439$Od@c8)
        (least-fixnum . g$11438$Od@c8)
        (fixnum-width . g$11437$Od@c8)
        (fixnum? . g$11436$Od@c8)
        (bitwise-rotate-bit-field . g$6608$Od@c8)
        (bitwise-reverse-bit-field . g$6609$Od@c8)
        (bitwise-length . g$11435$Od@c8)
        (bitwise-if . g$6602$Od@c8)
        (bitwise-first-bit-set . g$11434$Od@c8)
        (bitwise-copy-bit-field . g$6605$Od@c8)
        (bitwise-copy-bit . g$6603$Od@c8)
        (bitwise-bit-set? . g$11433$Od@c8)
        (bitwise-bit-field . g$11432$Od@c8)
        (bitwise-bit-count . g$11431$Od@c8)
        (bitwise-xor . g$11430$Od@c8)
        (bitwise-ior . g$11429$Od@c8)
        (bitwise-and . g$11428$Od@c8)
        (bitwise-not . g$11427$Od@c8)
        (bitwise-arithmetic-shift-right . g$6607$Od@c8)
        (bitwise-arithmetic-shift-left . g$6606$Od@c8)
        (bitwise-arithmetic-shift . g$11426$Od@c8)
        (zero? . g$11425$Od@c8)
        (vector? . g$11424$Od@c8)
        (vector-set! . g$11423$Od@c8)
        (vector-ref . g$11422$Od@c8)
        (vector-map . g$11421$Od@c8)
        (vector-length . g$11420$Od@c8)
        (vector-for-each . g$11419$Od@c8)
        (vector-fill! . g$11418$Od@c8)
        (vector->list . g$11417$Od@c8)
        (vector . g$11416$Od@c8)
        (values . g$11415$Od@c8)
        (truncate . g$11414$Od@c8)
        (tan . g$11413$Od@c8)
        (symbol? . g$11412$Od@c8)
        (symbol=? . g$11411$Od@c8)
        (symbol->string . g$11410$Od@c8)
        (substring . g$11409$Od@c8)
        (string? . g$11408$Od@c8)
        (string>? . g$11407$Od@c8)
        (string>=? . g$11406$Od@c8)
        (string=? . g$11405$Od@c8)
        (string<? . g$11404$Od@c8)
        (string<=? . g$11403$Od@c8)
        (string-ref . g$11402$Od@c8)
        (string-length . g$11401$Od@c8)
        (string-for-each . g$11400$Od@c8)
        (string-copy . g$11399$Od@c8)
        (string-append . g$11398$Od@c8)
        (string->symbol . g$11397$Od@c8)
        (string->number . g$11396$Od@c8)
        (string->list . g$11395$Od@c8)
        (string . g$11394$Od@c8)
        (sqrt . g$11393$Od@c8)
        (sin . g$11392$Od@c8)
        (round . g$11391$Od@c8)
        (reverse . g$11390$Od@c8)
        (real? . g$11389$Od@c8)
        (real-valued? . g$11388$Od@c8)
        (real-part . g$11387$Od@c8)
        (rationalize . g$5633$Od@c8)
        (rational? . g$11386$Od@c8)
        (rational-valued? . g$11385$Od@c8)
        (procedure? . g$11384$Od@c8)
        (positive? . g$11383$Od@c8)
        (pair? . g$11382$Od@c8)
        (odd? . g$11381$Od@c8)
        (numerator . g$11380$Od@c8)
        (number? . g$11379$Od@c8)
        (number->string . g$11378$Od@c8)
        (null? . g$11377$Od@c8)
        (not . g$11376$Od@c8)
        (negative? . g$11375$Od@c8)
        (nan? . g$11374$Od@c8)
        (min . g$11373$Od@c8)
        (max . g$11372$Od@c8)
        (map . g$11371$Od@c8)
        (make-vector . g$11370$Od@c8)
        (make-string . g$11369$Od@c8)
        (make-rectangular . g$11368$Od@c8)
        (make-polar . g$11367$Od@c8)
        (magnitude . g$11366$Od@c8)
        (log . g$11365$Od@c8)
        (list? . g$11364$Od@c8)
        (list-tail . g$11363$Od@c8)
        (list-ref . g$11362$Od@c8)
        (list->vector . g$11361$Od@c8)
        (list->string . g$11360$Od@c8)
        (list . g$11359$Od@c8)
        (length . g$11358$Od@c8)
        (lcm . g$11357$Od@c8)
        (integer? . g$11356$Od@c8)
        (integer-valued? . g$11355$Od@c8)
        (integer->char . g$11354$Od@c8)
        (infinite? . g$11353$Od@c8)
        (inexact? . g$11352$Od@c8)
        (inexact . g$11351$Od@c8)
        (imag-part . g$11350$Od@c8)
        (gcd . g$11349$Od@c8)
        (for-each . g$11348$Od@c8)
        (floor . g$11347$Od@c8)
        (finite? . g$11346$Od@c8)
        (expt . g$11345$Od@c8)
        (exp . g$11344$Od@c8)
        (exact? . g$11343$Od@c8)
        (exact-integer-sqrt . g$11342$Od@c8)
        (exact . g$11341$Od@c8)
        (even? . g$11340$Od@c8)
        (error . g$11339$Od@c8)
        (eqv? . g$11338$Od@c8)
        (equal? . g$11337$Od@c8)
        (eq? . g$11336$Od@c8)
        (dynamic-wind . g$11335$Od@c8)
        (div0-and-mod0 . g$11334$Od@c8)
        (mod0 . g$11333$Od@c8)
        (div0 . g$11332$Od@c8)
        (div-and-mod . g$11331$Od@c8)
        (mod . g$11330$Od@c8)
        (div . g$11329$Od@c8)
        (denominator . g$11328$Od@c8)
        (cos . g$11327$Od@c8)
        (cons . g$11326$Od@c8)
        (complex? . g$11325$Od@c8)
        (char? . g$11324$Od@c8)
        (char>? . g$11323$Od@c8)
        (char>=? . g$11322$Od@c8)
        (char=? . g$11321$Od@c8)
        (char<? . g$11320$Od@c8)
        (char<=? . g$11319$Od@c8)
        (char->integer . g$11318$Od@c8)
        (ceiling . g$11317$Od@c8)
        (call-with-values . g$11316$Od@c8)
        (call/cc . g$11315$Od@c8)
        (call-with-current-continuation . g$11314$Od@c8)
        (cddddr . g$5632$Od@c8)
        (cdddar . g$5631$Od@c8)
        (cddadr . g$5630$Od@c8)
        (cddaar . g$5629$Od@c8)
        (cdaddr . g$5628$Od@c8)
        (cdadar . g$5627$Od@c8)
        (cdaadr . g$5626$Od@c8)
        (cdaaar . g$5625$Od@c8)
        (cadddr . g$5624$Od@c8)
        (caddar . g$5623$Od@c8)
        (cadadr . g$5622$Od@c8)
        (cadaar . g$5621$Od@c8)
        (caaddr . g$5620$Od@c8)
        (caadar . g$5619$Od@c8)
        (caaadr . g$5618$Od@c8)
        (caaaar . g$5617$Od@c8)
        (cdddr . g$5616$Od@c8)
        (cddar . g$5615$Od@c8)
        (cdadr . g$5614$Od@c8)
        (cdaar . g$5613$Od@c8)
        (caddr . g$5612$Od@c8)
        (cadar . g$5611$Od@c8)
        (caadr . g$5610$Od@c8)
        (caaar . g$5609$Od@c8)
        (cddr . g$5608$Od@c8)
        (cdar . g$5607$Od@c8)
        (cadr . g$5606$Od@c8)
        (caar . g$5605$Od@c8)
        (cdr . g$11313$Od@c8)
        (car . g$11312$Od@c8)
        (boolean? . g$11311$Od@c8)
        (boolean=? . g$11310$Od@c8)
        (atan . g$11309$Od@c8)
        (assertion-violation . g$11308$Od@c8)
        (asin . g$11307$Od@c8)
        (apply . g$11306$Od@c8)
        (append . g$11305$Od@c8)
        (angle . g$11304$Od@c8)
        (acos . g$11303$Od@c8)
        (abs . g$11302$Od@c8)
        (/ . g$11301$Od@c8)
        (* . g$11300$Od@c8)
        (- . g$11299$Od@c8)
        (+ . g$11298$Od@c8)
        (>= . g$11297$Od@c8)
        (> . g$11296$Od@c8)
        (= . g$11295$Od@c8)
        (<= . g$11294$Od@c8)
        (< . g$11293$Od@c8)
        (make-record-printer . g$11292$Od@c8)
        (eqv-hash . g$11291$Od@c8)
        (eq-hash . g$11290$Od@c8)
        (reverse! . g$11289$Od@c8)
        (printf . g$6923$Od@c8)
        (fprintf . g$6924$Od@c8)
        (format . g$6925$Od@c8)
        (get-arity . g$11288$Od@c8)
        (gc-collect . g$11287$Od@c8)
        (clr-type? . g$11286$Od@c8)
        (get-clr-type . g$11285$Od@c8)
        (vector-append . g$11284$Od@c8)
        (vector-filter . g$11283$Od@c8)
        (vector-reverse! . g$11282$Od@c8)
        (vector-contains? . g$11281$Od@c8)
        (vector-index-of . g$11280$Od@c8)
        (vector-copy . g$11279$Od@c8)
        (vector-binary-search . g$11278$Od@c8)
        (get-output-string . g$11277$Od@c8)
        (open-output-string . g$11276$Od@c8)
        (open-input-string . g$11275$Od@c8)
        (string-format . g$11274$Od@c8)
        (make-traced-procedure . g$11273$Od@c8)
        (make-traced-macro . g$6944$Od@c8)
        (pmap . g$11272$Od@c8)
        (time-it . g$11271$Od@c8)
        (make-parameter . g$6949$Od@c8)
        (library-locator . g$11270$Od@c8)
        (get-library-paths . g$11269$Od@c8)
        (environment-symbols . g$8205$Od@c8)
        (interaction-environment-symbols . g$8204$Od@c8)
        (library-path . g$7374$Od@c8)
        (library-extensions . g$7375$Od@c8)
        (installed-libraries . g$7395$Od@c8)
        (expand . g$8210$Od@c8)
        (&no-nans . g$11268$Od@c8)
        (&no-infinities . g$11267$Od@c8)
        (&i/o-encoding . g$11266$Od@c8)
        (&i/o-decoding . g$11265$Od@c8)
        (&i/o-port . g$11264$Od@c8)
        (&i/o-file-does-not-exist . g$11263$Od@c8)
        (&i/o-file-already-exists . g$11262$Od@c8)
        (&i/o-file-is-read-only . g$11261$Od@c8)
        (&i/o-file-protection . g$11260$Od@c8)
        (&i/o-filename . g$11259$Od@c8)
        (&i/o-invalid-position . g$11258$Od@c8)
        (&i/o-write . g$11257$Od@c8)
        (&i/o-read . g$11256$Od@c8)
        (&i/o . g$11255$Od@c8)
        (&non-continuable . g$11254$Od@c8)
        (&undefined . g$11253$Od@c8)
        (&syntax . g$11252$Od@c8)
        (&lexical . g$11251$Od@c8)
        (&implementation-restriction . g$11250$Od@c8)
        (&non . g$11249$Od@c8)
        (&who . g$11248$Od@c8)
        (&irritants . g$11247$Od@c8)
        (&assertion . g$11246$Od@c8)
        (&violation . g$11245$Od@c8)
        (&error . g$11244$Od@c8)
        (&serious . g$11243$Od@c8)
        (&warning . g$11242$Od@c8)
        (&message . g$11241$Od@c8)
        (&condition . g$11240$Od@c8)
        (define-condition-type . g$11239$Od@c8)
        (define-enumeration . g$11238$Od@c8)
        (define-record-type . g$11237$Od@c8)
        (parent-rtd . g$11236$Od@c8)
        (nongenerative . g$11235$Od@c8)
        (opaque . g$11234$Od@c8)
        (sealed . g$11233$Od@c8)
        (protocol . g$11232$Od@c8)
        (parent . g$11231$Od@c8)
        (immutable . g$11230$Od@c8)
        (mutable . g$11229$Od@c8)
        (fields . g$11228$Od@c8)
        (error-handling-mode . g$11227$Od@c8)
        (file-options . g$11226$Od@c8)
        (buffer-mode . g$11225$Od@c8)
        (eol-style . g$11224$Od@c8)
        (guard . g$11223$Od@c8)
        (trace-letrec-syntax . g$11222$Od@c8)
        (trace-let-syntax . g$11221$Od@c8)
        (trace-define-syntax . g$11220$Od@c8)
        (trace-define . g$11219$Od@c8)
        (trace-lambda . g$11218$Od@c8)
        (unsyntax-splicing . g$11217$Od@c8)
        (unsyntax . g$11216$Od@c8)
        (unquote-splicing . g$11215$Od@c8)
        (unquote . g$11214$Od@c8)
        (_ . g$11213$Od@c8)
        (else . g$11212$Od@c8)
        (=> . g$11211$Od@c8)
        (... . g$11210$Od@c8)
        (assert . g$11209$Od@c8)
        (endianness . g$11208$Od@c8)
        (delay . g$11207$Od@c8)
        (time . g$11206$Od@c8)
        (or . g$11205$Od@c8)
        (and . g$11204$Od@c8)
        (do . g$11203$Od@c8)
        (cond . g$11202$Od@c8)
        (let* . g$11201$Od@c8)
        (let . g$11200$Od@c8)
        (identifier-syntax . g$11199$Od@c8)
        (with-syntax . g$11198$Od@c8)
        (quasisyntax . g$11197$Od@c8)
        (quasiquote . g$11196$Od@c8)
        (syntax-rules . g$11195$Od@c8)
        (include-into . g$11194$Od@c8)
        (include . g$11193$Od@c8)
        (define-struct . g$11192$Od@c8)
        (let-values . g$11191$Od@c8)
        (let*-values . g$11190$Od@c8)
        (record-constructor-descriptor . g$11189$Od@c8)
        (record-type-descriptor . g$11188$Od@c8)
        (fluid-let-syntax . g$11187$Od@c8)
        (case . g$11186$Od@c8)
        (parameterize . g$11185$Od@c8)
        (unless . g$11184$Od@c8)
        (when . g$11183$Od@c8)
        (if . g$11182$Od@c8)
        (letrec* . g$11181$Od@c8)
        (letrec . g$11180$Od@c8)
        (type-descriptor . g$11179$Od@c8)
        (case-lambda . g$11178$Od@c8)
        (lambda . g$11177$Od@c8)
        (syntax . g$11176$Od@c8)
        (syntax-case . g$11175$Od@c8)
        (quote . g$11174$Od@c8)
        (foreign-call . g$11173$Od@c8)
        (letrec-syntax . g$11172$Od@c8)
        (let-syntax . g$11171$Od@c8)
        (set! . g$11170$Od@c8)
        (import . g$11169$Od@c8)
        (library . g$11168$Od@c8)
        (begin . g$11167$Od@c8)
        (module . g$11166$Od@c8)
        (define-syntax . g$11165$Od@c8)
        (define . g$11164$Od@c8))
      '((g$8103$Od@c8 core-prim . ellipsis-map)
        (g$11820$Od@c8 core-prim . &no-nans-rcd)
        (g$11819$Od@c8 core-prim . &no-nans-rtd)
        (g$11818$Od@c8 core-prim . &no-infinities-rcd)
        (g$11817$Od@c8 core-prim . &no-infinities-rtd)
        (g$11816$Od@c8 core-prim . &i/o-encoding-rcd)
        (g$11815$Od@c8 core-prim . &i/o-encoding-rtd)
        (g$11814$Od@c8 core-prim . &i/o-decoding-rcd)
        (g$11813$Od@c8 core-prim . &i/o-decoding-rtd)
        (g$11812$Od@c8 core-prim . &i/o-port-rcd)
        (g$11811$Od@c8 core-prim . &i/o-port-rtd)
        (g$11810$Od@c8 core-prim . &i/o-file-does-not-exist-rcd)
        (g$11809$Od@c8 core-prim . &i/o-file-does-not-exist-rtd)
        (g$11808$Od@c8 core-prim . &i/o-file-already-exists-rcd)
        (g$11807$Od@c8 core-prim . &i/o-file-already-exists-rtd)
        (g$11806$Od@c8 core-prim . &i/o-fie-is-read-only-rcd)
        (g$11805$Od@c8 core-prim . &i/o-fie-is-read-only-rtd)
        (g$11804$Od@c8 core-prim . &i/o-file-protection-rcd)
        (g$11803$Od@c8 core-prim . &i/o-file-protection-rtd)
        (g$11802$Od@c8 core-prim . &i/o-filename-rcd)
        (g$11801$Od@c8 core-prim . &i/o-filename-rtd)
        (g$11800$Od@c8 core-prim . &i/o-invalid-position-rcd)
        (g$11799$Od@c8 core-prim . &i/o-invalid-position-rtd)
        (g$11798$Od@c8 core-prim . &i/o-write-rcd)
        (g$11797$Od@c8 core-prim . &i/o-write-rtd)
        (g$11796$Od@c8 core-prim . &i/o-read-rcd)
        (g$11795$Od@c8 core-prim . &i/o-read-rtd)
        (g$11794$Od@c8 core-prim . &i/o-rcd)
        (g$11793$Od@c8 core-prim . &i/o-rtd)
        (g$11792$Od@c8 core-prim . &undefined-rcd)
        (g$11791$Od@c8 core-prim . &undefined-rtd)
        (g$11790$Od@c8 core-prim . &syntax-rcd)
        (g$11789$Od@c8 core-prim . &syntax-rtd)
        (g$11788$Od@c8 core-prim . &lexical-rcd)
        (g$11787$Od@c8 core-prim . &lexical-rtd)
        (g$11786$Od@c8 core-prim . &implementation-restriction-rcd)
        (g$11785$Od@c8 core-prim . &implementation-restriction-rtd)
        (g$11784$Od@c8 core-prim . &non-continuable-rcd)
        (g$11783$Od@c8 core-prim . &non-continuable-rtd)
        (g$11782$Od@c8 core-prim . &who-rcd)
        (g$11781$Od@c8 core-prim . &who-rtd)
        (g$11780$Od@c8 core-prim . &irritants-rcd)
        (g$11779$Od@c8 core-prim . &irritants-rtd)
        (g$11778$Od@c8 core-prim . &assertion-rcd)
        (g$11777$Od@c8 core-prim . &assertion-rtd)
        (g$11776$Od@c8 core-prim . &violation-rcd)
        (g$11775$Od@c8 core-prim . &violation-rtd)
        (g$11774$Od@c8 core-prim . &error-rcd)
        (g$11773$Od@c8 core-prim . &error-rtd)
        (g$11772$Od@c8 core-prim . &serious-rcd)
        (g$11771$Od@c8 core-prim . &serious-rtd)
        (g$11770$Od@c8 core-prim . &warning-rcd)
        (g$11769$Od@c8 core-prim . &warning-rtd)
        (g$11768$Od@c8 core-prim . &message-rcd)
        (g$11767$Od@c8 core-prim . &message-rtd)
        (g$11766$Od@c8 core-prim . &condition-rcd)
        (g$11765$Od@c8 core-prim . &condition-rtd)
        (g$11764$Od@c8 core-prim . library-letrec*)
        (g$11763$Od@c8 core-prim . annotation-stripped)
        (g$11762$Od@c8 core-prim . annotation-source)
        (g$11761$Od@c8 core-prim . annotation-expression)
        (g$11760$Od@c8 core-prim . annotation?)
        (g$11759$Od@c8 core-prim . read-annotated)
        (g$11758$Od@c8 core-prim . tanh)
        (g$11757$Od@c8 core-prim . cosh)
        (g$11756$Od@c8 core-prim . sinh)
        (g$11755$Od@c8 core-prim . make-guid)
        (g$11754$Od@c8 core-prim . unspecified?)
        (g$11753$Od@c8 core-prim . make-trace)
        (g$11752$Od@c8 core-prim . make-list)
        (g$11751$Od@c8 core-prim . last-pair)
        (g$11750$Od@c8 core-prim . load-r5rs)
        (g$11749$Od@c8 core-prim . license)
        (g$11748$Od@c8 core-prim . stacktrace)
        (g$11142$Od@c8 core-prim . ironscheme-build)
        (g$11747$Od@c8 core-prim . define-clr-class-internal)
        (g$11746$Od@c8 core-prim . clr-field-set!-internal)
        (g$11745$Od@c8 core-prim . clr-field-get-internal)
        (g$11744$Od@c8 core-prim . clr-cast-internal)
        (g$11743$Od@c8 core-prim . clr-call-internal)
        (g$11742$Od@c8 core-prim . clr-new-internal)
        (g$11741$Od@c8 core-prim . clr-new-array-internal)
        (g$11740$Od@c8 core-prim . clr-is-internal)
        (g$11739$Od@c8 core-prim . clr-reference-internal)
        (g$11738$Od@c8 core-prim . clr-using-internal)
        (g$11737$Od@c8 core-prim . clr-clear-usings-internal)
        (g$8222$Od@c8 core-prim . syntax-error)
        (g$8098$Od@c8 core-prim . syntax-dispatch)
        (g$11736$Od@c8 core-prim . compile-core)
        (g$11735$Od@c8 core-prim . eval-core)
        (g$11734$Od@c8 core-prim . set-symbol-value!)
        (g$11733$Od@c8 core-prim . symbol-value)
        (g$11732$Od@c8 core-prim . ungensym)
        (g$11731$Od@c8 core-prim . gensym)
        (g$11730$Od@c8 core-prim . void)
        (g$11729$Od@c8 core-prim . load-serialized-library)
        (g$11728$Od@c8 core-prim . serialize-library)
        (g$11144$Od@c8 core-prim . compile-system-libraries)
        (g$11146$Od@c8 core-prim . compile->closure)
        (g$11145$Od@c8 core-prim . compile)
        (g$11141$Od@c8 core-prim . load)
        (g$8231$Od@c8 core-prim . interaction-environment)
        (g$11727$Od@c8 core-prim . char-ready?)
        (g$11726$Od@c8 core-prim . string-upcase)
        (g$11725$Od@c8 core-prim . string-titlecase)
        (g$11724$Od@c8 core-prim . string-normalize-nfkd)
        (g$11723$Od@c8 core-prim . string-normalize-nfkc)
        (g$11722$Od@c8 core-prim . string-normalize-nfd)
        (g$11721$Od@c8 core-prim . string-normalize-nfc)
        (g$11720$Od@c8 core-prim . string-foldcase)
        (g$11719$Od@c8 core-prim . string-downcase)
        (g$11718$Od@c8 core-prim . string-ci>?)
        (g$11717$Od@c8 core-prim . string-ci>=?)
        (g$11716$Od@c8 core-prim . string-ci=?)
        (g$11715$Od@c8 core-prim . string-ci<?)
        (g$11714$Od@c8 core-prim . string-ci<=?)
        (g$11713$Od@c8 core-prim . char-whitespace?)
        (g$11712$Od@c8 core-prim . char-upper-case?)
        (g$11711$Od@c8 core-prim . char-title-case?)
        (g$11710$Od@c8 core-prim . char-numeric?)
        (g$11709$Od@c8 core-prim . char-lower-case?)
        (g$11708$Od@c8 core-prim . char-general-category)
        (g$11707$Od@c8 core-prim . char-upcase)
        (g$11706$Od@c8 core-prim . char-titlecase)
        (g$11705$Od@c8 core-prim . char-foldcase)
        (g$11704$Od@c8 core-prim . char-downcase)
        (g$11703$Od@c8 core-prim . char-ci>?)
        (g$11702$Od@c8 core-prim . char-ci>=?)
        (g$11701$Od@c8 core-prim . char-ci=?)
        (g$11700$Od@c8 core-prim . char-ci<?)
        (g$11699$Od@c8 core-prim . char-ci<=?)
        (g$11698$Od@c8 core-prim . char-alphabetic?)
        (g$7835$Od@c8 core-prim . variable-transformer-procedure)
        (g$7834$Od@c8 core-prim . variable-transformer?)
        (g$7833$Od@c8 core-prim . make-variable-transformer)
        (g$8226$Od@c8 core-prim . identifier?)
        (g$8218$Od@c8 core-prim . generate-temporaries)
        (g$8219$Od@c8 core-prim . free-identifier=?)
        (g$8228$Od@c8 core-prim . syntax->datum)
        (g$8227$Od@c8 core-prim . datum->syntax)
        (g$8220$Od@c8 core-prim . bound-identifier=?)
        (g$11697$Od@c8 core-prim . record-type-descriptor?)
        (g$11696$Od@c8 core-prim . record-predicate)
        (g$11695$Od@c8 core-prim . record-mutator)
        (g$11694$Od@c8 core-prim . record-constructor)
        (g$11693$Od@c8 core-prim . record-accessor)
        (g$11692$Od@c8 core-prim . make-record-type-descriptor)
        (g$11691$Od@c8 core-prim . make-record-constructor-descriptor)
        (g$11690$Od@c8 core-prim . record?)
        (g$11689$Od@c8 core-prim . record-type-uid)
        (g$11688$Od@c8 core-prim . record-type-sealed?)
        (g$11687$Od@c8 core-prim . record-type-parent)
        (g$11686$Od@c8 core-prim . record-type-opaque?)
        (g$11685$Od@c8 core-prim . record-type-name)
        (g$11684$Od@c8 core-prim . record-type-generative?)
        (g$11683$Od@c8 core-prim . record-type-field-names)
        (g$11682$Od@c8 core-prim . record-rtd)
        (g$11681$Od@c8 core-prim . record-field-mutable?)
        (g$6016$Od@c8 core-prim . delete-file)
        (g$6015$Od@c8 core-prim . file-exists?)
        (g$11680$Od@c8 core-prim . vector-sort!)
        (g$11679$Od@c8 core-prim . vector-sort)
        (g$6523$Od@c8 core-prim . list-sort)
        (g$11678$Od@c8 core-prim . symbol-hash)
        (g$11677$Od@c8 core-prim . string-ci-hash)
        (g$11676$Od@c8 core-prim . string-hash)
        (g$11675$Od@c8 core-prim . equal-hash)
        (g$11674$Od@c8 core-prim . hashtable-equivalence-function)
        (g$11673$Od@c8 core-prim . make-hashtable)
        (g$11672$Od@c8 core-prim . hashtable-hash-function)
        (g$5983$Od@c8 core-prim . make-eqv-hashtable)
        (g$5982$Od@c8 core-prim . make-eq-hashtable)
        (g$11671$Od@c8 core-prim . hashtable?)
        (g$5989$Od@c8 core-prim . hashtable-update!)
        (g$5984$Od@c8 core-prim . hashtable-size)
        (g$5986$Od@c8 core-prim . hashtable-set!)
        (g$5985$Od@c8 core-prim . hashtable-ref)
        (g$11670$Od@c8 core-prim . hashtable-mutable?)
        (g$11669$Od@c8 core-prim . hashtable-keys)
        (g$11668$Od@c8 core-prim . hashtable-entries)
        (g$5987$Od@c8 core-prim . hashtable-delete!)
        (g$11667$Od@c8 core-prim . hashtable-copy)
        (g$5988$Od@c8 core-prim . hashtable-contains?)
        (g$5990$Od@c8 core-prim . hashtable-clear!)
        (g$11666$Od@c8 core-prim . call-with-output-file)
        (g$11665$Od@c8 core-prim . call-with-input-file)
        (g$11664$Od@c8 core-prim . write-char)
        (g$11663$Od@c8 core-prim . write)
        (g$11662$Od@c8 core-prim . with-output-to-file)
        (g$11661$Od@c8 core-prim . with-input-from-file)
        (g$11660$Od@c8 core-prim . read-char)
        (g$11659$Od@c8 core-prim . read)
        (g$11658$Od@c8 core-prim . peek-char)
        (g$11657$Od@c8 core-prim . open-output-file)
        (g$11656$Od@c8 core-prim . open-input-file)
        (g$11655$Od@c8 core-prim . newline)
        (g$11654$Od@c8 core-prim . display)
        (g$11653$Od@c8 core-prim . close-output-port)
        (g$11652$Od@c8 core-prim . close-input-port)
        (g$11651$Od@c8 core-prim . eof-object?)
        (g$11650$Od@c8 core-prim . eof-object)
        (g$11649$Od@c8 core-prim . current-error-port)
        (g$11648$Od@c8 core-prim . current-output-port)
        (g$11647$Od@c8 core-prim . current-input-port)
        (g$11646$Od@c8 core-prim . output-port?)
        (g$11645$Od@c8 core-prim . input-port?)
        (g$11644$Od@c8 core-prim . utf-8-codec)
        (g$11643$Od@c8 core-prim . utf-16-codec)
        (g$11642$Od@c8 core-prim . transcoder-error-handling-mode)
        (g$11641$Od@c8 core-prim . transcoder-eol-style)
        (g$11640$Od@c8 core-prim . transcoder-codec)
        (g$11639$Od@c8 core-prim . transcoded-port)
        (g$11638$Od@c8 core-prim . textual-port?)
        (g$11637$Od@c8 core-prim . string->bytevector)
        (g$11636$Od@c8 core-prim . standard-output-port)
        (g$11635$Od@c8 core-prim . standard-input-port)
        (g$11634$Od@c8 core-prim . standard-error-port)
        (g$11633$Od@c8 core-prim . set-port-position!)
        (g$11632$Od@c8 core-prim . put-u8)
        (g$11631$Od@c8 core-prim . put-string)
        (g$11630$Od@c8 core-prim . put-datum)
        (g$11629$Od@c8 core-prim . put-char)
        (g$11628$Od@c8 core-prim . put-bytevector)
        (g$11627$Od@c8 core-prim . port?)
        (g$11626$Od@c8 core-prim . port-transcoder)
        (g$11625$Od@c8 core-prim . port-position)
        (g$11624$Od@c8 core-prim . port-has-set-port-position!?)
        (g$11623$Od@c8 core-prim . port-has-port-position?)
        (g$11622$Od@c8 core-prim . port-eof?)
        (g$11621$Od@c8 core-prim . output-port-buffer-mode)
        (g$6914$Od@c8 core-prim . open-string-output-port)
        (g$11620$Od@c8 core-prim . open-string-input-port)
        (g$11619$Od@c8 core-prim . open-file-output-port)
        (g$11618$Od@c8 core-prim . open-file-input/output-port)
        (g$11617$Od@c8 core-prim . open-file-input-port)
        (g$11616$Od@c8 core-prim . open-bytevector-output-port)
        (g$11615$Od@c8 core-prim . open-bytevector-input-port)
        (g$11614$Od@c8 core-prim . native-transcoder)
        (g$11613$Od@c8 core-prim . native-eol-style)
        (g$11612$Od@c8 core-prim . make-transcoder)
        (g$11611$Od@c8 core-prim . latin-1-codec)
        (g$6771$Od@c8 core-prim . make-i/o-write-error)
        (g$6757$Od@c8 core-prim . make-i/o-read-error)
        (g$6876$Od@c8 core-prim . make-i/o-port-error)
        (g$6786$Od@c8 core-prim . make-i/o-invalid-position-error)
        (g$6803$Od@c8 core-prim . make-i/o-filename-error)
        (g$6819$Od@c8 core-prim . make-i/o-file-protection-error)
        (g$6833$Od@c8 core-prim . make-i/o-file-is-read-only-error)
        (g$6861$Od@c8 core-prim . make-i/o-file-does-not-exist-error)
        (g$6847$Od@c8 core-prim . make-i/o-file-already-exists-error)
        (g$6743$Od@c8 core-prim . make-i/o-error)
        (g$6907$Od@c8 core-prim . make-i/o-encoding-error)
        (g$6892$Od@c8 core-prim . make-i/o-decoding-error)
        (g$11610$Od@c8 core-prim . make-custom-textual-output-port)
        (g$11609$Od@c8 core-prim . make-custom-textual-input/output-port)
        (g$11608$Od@c8 core-prim . make-custom-textual-input-port)
        (g$11607$Od@c8 core-prim . make-custom-binary-output-port)
        (g$11606$Od@c8 core-prim . make-custom-binary-input/output-port)
        (g$11605$Od@c8 core-prim . make-custom-binary-input-port)
        (g$11604$Od@c8 core-prim . make-bytevector)
        (g$11603$Od@c8 core-prim . lookahead-u8)
        (g$11602$Od@c8 core-prim . lookahead-char)
        (g$6772$Od@c8 core-prim . i/o-write-error?)
        (g$6758$Od@c8 core-prim . i/o-read-error?)
        (g$6878$Od@c8 core-prim . i/o-port-error?)
        (g$6788$Od@c8 core-prim . i/o-invalid-position-error?)
        (g$6805$Od@c8 core-prim . i/o-filename-error?)
        (g$6820$Od@c8 core-prim . i/o-file-protection-error?)
        (g$6834$Od@c8 core-prim . i/o-file-is-read-only-error?)
        (g$6862$Od@c8 core-prim . i/o-file-does-not-exist-error?)
        (g$6848$Od@c8 core-prim . i/o-file-already-exists-error?)
        (g$6744$Od@c8 core-prim . i/o-error?)
        (g$6879$Od@c8 core-prim . i/o-error-port)
        (g$6806$Od@c8 core-prim . i/o-error-filename)
        (g$6909$Od@c8 core-prim . i/o-encoding-error?)
        (g$6910$Od@c8 core-prim . i/o-encoding-error-char)
        (g$6893$Od@c8 core-prim . i/o-decoding-error?)
        (g$11601$Od@c8 core-prim . get-u8)
        (g$11600$Od@c8 core-prim . get-string-n!)
        (g$11599$Od@c8 core-prim . get-string-n)
        (g$11598$Od@c8 core-prim . get-string-all)
        (g$11597$Od@c8 core-prim . get-line)
        (g$11596$Od@c8 core-prim . get-datum)
        (g$11595$Od@c8 core-prim . get-char)
        (g$11594$Od@c8 core-prim . get-bytevector-some)
        (g$11593$Od@c8 core-prim . get-bytevector-n!)
        (g$11592$Od@c8 core-prim . get-bytevector-n)
        (g$11591$Od@c8 core-prim . get-bytevector-all)
        (g$11590$Od@c8 core-prim . flush-output-port)
        (g$11589$Od@c8 core-prim . close-port)
        (g$11588$Od@c8 core-prim . call-with-string-output-port)
        (g$11587$Od@c8 core-prim . call-with-port)
        (g$11586$Od@c8 core-prim . call-with-bytevector-output-port)
        (g$11585$Od@c8 core-prim . bytevector->string)
        (g$11584$Od@c8 core-prim . buffer-mode?)
        (g$11583$Od@c8 core-prim . binary-port?)
        (g$8209$Od@c8 core-prim . scheme-report-environment)
        (g$6510$Od@c8 core-prim . quotient)
        (g$8208$Od@c8 core-prim . null-environment)
        (g$6511$Od@c8 core-prim . remainder)
        (g$6512$Od@c8 core-prim . modulo)
        (g$11582$Od@c8 core-prim . inexact->exact)
        (g$11581$Od@c8 core-prim . force)
        (g$11580$Od@c8 core-prim . exact->inexact)
        (g$11579$Od@c8 core-prim . exit)
        (g$11578$Od@c8 core-prim . command-line)
        (g$11577$Od@c8 core-prim . string-fill!)
        (g$11576$Od@c8 core-prim . string-set!)
        (g$11575$Od@c8 core-prim . set-cdr!)
        (g$11574$Od@c8 core-prim . set-car!)
        (g$6096$Od@c8 core-prim . remove)
        (g$6097$Od@c8 core-prim . remv)
        (g$6082$Od@c8 core-prim . remp)
        (g$6098$Od@c8 core-prim . remq)
        (g$6081$Od@c8 core-prim . partition)
        (g$11573$Od@c8 core-prim . memv)
        (g$11572$Od@c8 core-prim . memq)
        (g$6088$Od@c8 core-prim . memp)
        (g$6087$Od@c8 core-prim . member)
        (g$6092$Od@c8 core-prim . exists)
        (g$6091$Od@c8 core-prim . for-all)
        (g$6095$Od@c8 core-prim . fold-right)
        (g$6094$Od@c8 core-prim . fold-left)
        (g$6080$Od@c8 core-prim . find)
        (g$6083$Od@c8 core-prim . filter)
        (g$6093$Od@c8 core-prim . cons*)
        (g$6084$Od@c8 core-prim . assv)
        (g$11571$Od@c8 core-prim . assq)
        (g$6086$Od@c8 core-prim . assp)
        (g$6085$Od@c8 core-prim . assoc)
        (g$11570$Od@c8 core-prim . with-exception-handler)
        (g$11569$Od@c8 core-prim . raise-continuable)
        (g$11568$Od@c8 core-prim . raise)
        (g$8211$Od@c8 core-prim . eval)
        (g$8207$Od@c8 core-prim . environment)
        (g$11567$Od@c8 core-prim . make-enumeration)
        (g$11566$Od@c8 core-prim . enum-set=?)
        (g$11565$Od@c8 core-prim . enum-set-universe)
        (g$11564$Od@c8 core-prim . enum-set-union)
        (g$11563$Od@c8 core-prim . enum-set-subset?)
        (g$11562$Od@c8 core-prim . enum-set-projection)
        (g$11561$Od@c8 core-prim . enum-set-member?)
        (g$11560$Od@c8 core-prim . enum-set-intersection)
        (g$11559$Od@c8 core-prim . enum-set-indexer)
        (g$11558$Od@c8 core-prim . enum-set-difference)
        (g$11557$Od@c8 core-prim . enum-set-constructor)
        (g$11556$Od@c8 core-prim . enum-set-complement)
        (g$11555$Od@c8 core-prim . enum-set->list)
        (g$6421$Od@c8 core-prim . who-condition?)
        (g$6332$Od@c8 core-prim . warning?)
        (g$6374$Od@c8 core-prim . violation?)
        (g$6498$Od@c8 core-prim . undefined-violation?)
        (g$6482$Od@c8 core-prim . syntax-violation?)
        (g$6484$Od@c8 core-prim . syntax-violation-subform)
        (g$6483$Od@c8 core-prim . syntax-violation-form)
        (g$8225$Od@c8 core-prim . syntax-violation)
        (g$11554$Od@c8 core-prim . simple-conditions)
        (g$6346$Od@c8 core-prim . serious-condition?)
        (g$6436$Od@c8 core-prim . non-continuable-violation?)
        (g$6317$Od@c8 core-prim . message-condition?)
        (g$6419$Od@c8 core-prim . make-who-condition)
        (g$6331$Od@c8 core-prim . make-warning)
        (g$6373$Od@c8 core-prim . make-violation)
        (g$6497$Od@c8 core-prim . make-undefined-violation)
        (g$6479$Od@c8 core-prim . make-syntax-violation)
        (g$6345$Od@c8 core-prim . make-serious-condition)
        (g$6435$Od@c8 core-prim . make-non-continuable-violation)
        (g$6315$Od@c8 core-prim . make-message-condition)
        (g$6463$Od@c8 core-prim . make-lexical-violation)
        (g$6402$Od@c8 core-prim . make-irritants-condition)
        (g$6449$Od@c8 core-prim . make-implementation-restriction-violation)
        (g$6359$Od@c8 core-prim . make-error)
        (g$6387$Od@c8 core-prim . make-assertion-violation)
        (g$6464$Od@c8 core-prim . lexical-violation?)
        (g$6404$Od@c8 core-prim . irritants-condition?)
        (g$6450$Od@c8 core-prim . implementation-restriction-violation?)
        (g$6360$Od@c8 core-prim . error?)
        (g$6422$Od@c8 core-prim . condition-who)
        (g$11553$Od@c8 core-prim . condition-predicate)
        (g$6318$Od@c8 core-prim . condition-message)
        (g$6405$Od@c8 core-prim . condition-irritants)
        (g$11552$Od@c8 core-prim . condition-accessor)
        (g$11551$Od@c8 core-prim . condition)
        (g$6388$Od@c8 core-prim . assertion-violation?)
        (g$11550$Od@c8 core-prim . condition?)
        (g$11549$Od@c8 core-prim . utf32->string)
        (g$11548$Od@c8 core-prim . utf16->string)
        (g$11547$Od@c8 core-prim . utf8->string)
        (g$11546$Od@c8 core-prim . uint-list->bytevector)
        (g$11545$Od@c8 core-prim . u8-list->bytevector)
        (g$11544$Od@c8 core-prim . string->utf8)
        (g$11543$Od@c8 core-prim . string->utf32)
        (g$11542$Od@c8 core-prim . string->utf16)
        (g$11541$Od@c8 core-prim . sint-list->bytevector)
        (g$6172$Od@c8 core-prim . native-endianness)
        (g$11540$Od@c8 core-prim . bytevector?)
        (g$11539$Od@c8 core-prim . bytevector=?)
        (g$11538$Od@c8 core-prim . bytevector-uint-set!)
        (g$11537$Od@c8 core-prim . bytevector-uint-ref)
        (g$11536$Od@c8 core-prim . bytevector-u8-set!)
        (g$11535$Od@c8 core-prim . bytevector-u8-ref)
        (g$6193$Od@c8 core-prim . bytevector-u64-set!)
        (g$6189$Od@c8 core-prim . bytevector-u64-ref)
        (g$6195$Od@c8 core-prim . bytevector-u64-native-set!)
        (g$6191$Od@c8 core-prim . bytevector-u64-native-ref)
        (g$6185$Od@c8 core-prim . bytevector-u32-set!)
        (g$6181$Od@c8 core-prim . bytevector-u32-ref)
        (g$6187$Od@c8 core-prim . bytevector-u32-native-set!)
        (g$6183$Od@c8 core-prim . bytevector-u32-native-ref)
        (g$6177$Od@c8 core-prim . bytevector-u16-set!)
        (g$6173$Od@c8 core-prim . bytevector-u16-ref)
        (g$6179$Od@c8 core-prim . bytevector-u16-native-set!)
        (g$6175$Od@c8 core-prim . bytevector-u16-native-ref)
        (g$11534$Od@c8 core-prim . bytevector-sint-set!)
        (g$11533$Od@c8 core-prim . bytevector-sint-ref)
        (g$11532$Od@c8 core-prim . bytevector-s8-set!)
        (g$11531$Od@c8 core-prim . bytevector-s8-ref)
        (g$6194$Od@c8 core-prim . bytevector-s64-set!)
        (g$6190$Od@c8 core-prim . bytevector-s64-ref)
        (g$6196$Od@c8 core-prim . bytevector-s64-native-set!)
        (g$6192$Od@c8 core-prim . bytevector-s64-native-ref)
        (g$6186$Od@c8 core-prim . bytevector-s32-set!)
        (g$6182$Od@c8 core-prim . bytevector-s32-ref)
        (g$6188$Od@c8 core-prim . bytevector-s32-native-set!)
        (g$6184$Od@c8 core-prim . bytevector-s32-native-ref)
        (g$6178$Od@c8 core-prim . bytevector-s16-set!)
        (g$6174$Od@c8 core-prim . bytevector-s16-ref)
        (g$6180$Od@c8 core-prim . bytevector-s16-native-set!)
        (g$6176$Od@c8 core-prim . bytevector-s16-native-ref)
        (g$11530$Od@c8 core-prim . bytevector-length)
        (g$11529$Od@c8 core-prim . bytevector-ieee-single-set!)
        (g$11528$Od@c8 core-prim . bytevector-ieee-single-ref)
        (g$6199$Od@c8 core-prim . bytevector-ieee-single-native-set!)
        (g$6197$Od@c8 core-prim . bytevector-ieee-single-native-ref)
        (g$11527$Od@c8 core-prim . bytevector-ieee-double-set!)
        (g$11526$Od@c8 core-prim . bytevector-ieee-double-ref)
        (g$6200$Od@c8 core-prim . bytevector-ieee-double-native-set!)
        (g$6198$Od@c8 core-prim . bytevector-ieee-double-native-ref)
        (g$11525$Od@c8 core-prim . bytevector-fill!)
        (g$11524$Od@c8 core-prim . bytevector-copy!)
        (g$11523$Od@c8 core-prim . bytevector-copy)
        (g$11522$Od@c8 core-prim . bytevector->uint-list)
        (g$11521$Od@c8 core-prim . bytevector->u8-list)
        (g$11520$Od@c8 core-prim . bytevector->sint-list)
        (g$6729$Od@c8 core-prim . no-nans-violation?)
        (g$6715$Od@c8 core-prim . no-infinities-violation?)
        (g$6728$Od@c8 core-prim . make-no-nans-violation)
        (g$6714$Od@c8 core-prim . make-no-infinities-violation)
        (g$11519$Od@c8 core-prim . real->flonum)
        (g$11518$Od@c8 core-prim . flzero?)
        (g$11517$Od@c8 core-prim . fltruncate)
        (g$11516$Od@c8 core-prim . fltan)
        (g$11515$Od@c8 core-prim . flsqrt)
        (g$11514$Od@c8 core-prim . flsin)
        (g$11513$Od@c8 core-prim . flround)
        (g$11512$Od@c8 core-prim . flpositive?)
        (g$11511$Od@c8 core-prim . flonum?)
        (g$11510$Od@c8 core-prim . flodd?)
        (g$11509$Od@c8 core-prim . flnumerator)
        (g$11508$Od@c8 core-prim . flnegative?)
        (g$11507$Od@c8 core-prim . flnan?)
        (g$11506$Od@c8 core-prim . flmod0)
        (g$11505$Od@c8 core-prim . flmod)
        (g$11504$Od@c8 core-prim . flmin)
        (g$11503$Od@c8 core-prim . flmax)
        (g$11502$Od@c8 core-prim . fllog)
        (g$11501$Od@c8 core-prim . flinteger?)
        (g$11500$Od@c8 core-prim . flinfinite?)
        (g$11499$Od@c8 core-prim . flfloor)
        (g$11498$Od@c8 core-prim . flfinite?)
        (g$11497$Od@c8 core-prim . flexpt)
        (g$11496$Od@c8 core-prim . flexp)
        (g$11495$Od@c8 core-prim . fleven?)
        (g$11494$Od@c8 core-prim . fldiv0-and-mod0)
        (g$11493$Od@c8 core-prim . fldiv0)
        (g$11492$Od@c8 core-prim . fldiv-and-mod)
        (g$11491$Od@c8 core-prim . fldiv)
        (g$11490$Od@c8 core-prim . fldenominator)
        (g$11489$Od@c8 core-prim . flcos)
        (g$11488$Od@c8 core-prim . flceiling)
        (g$11487$Od@c8 core-prim . flatan)
        (g$11486$Od@c8 core-prim . flasin)
        (g$11485$Od@c8 core-prim . flacos)
        (g$11484$Od@c8 core-prim . flabs)
        (g$11483$Od@c8 core-prim . fl>?)
        (g$11482$Od@c8 core-prim . fl>=?)
        (g$11481$Od@c8 core-prim . fl=?)
        (g$11480$Od@c8 core-prim . fl<?)
        (g$11479$Od@c8 core-prim . fl<=?)
        (g$11478$Od@c8 core-prim . fl/)
        (g$11477$Od@c8 core-prim . fl-)
        (g$11476$Od@c8 core-prim . fl+)
        (g$11475$Od@c8 core-prim . fl*)
        (g$11474$Od@c8 core-prim . fixnum->flonum)
        (g$11473$Od@c8 core-prim . fxzero?)
        (g$11472$Od@c8 core-prim . fxxor)
        (g$6660$Od@c8 core-prim . fxrotate-bit-field)
        (g$11471$Od@c8 core-prim . fxreverse-bit-field)
        (g$11470$Od@c8 core-prim . fxpositive?)
        (g$11469$Od@c8 core-prim . fxodd?)
        (g$11468$Od@c8 core-prim . fxnot)
        (g$11467$Od@c8 core-prim . fxnegative?)
        (g$11466$Od@c8 core-prim . fxmod0)
        (g$11465$Od@c8 core-prim . fxmod)
        (g$11464$Od@c8 core-prim . fxmin)
        (g$11463$Od@c8 core-prim . fxmax)
        (g$11462$Od@c8 core-prim . fxlength)
        (g$11461$Od@c8 core-prim . fxior)
        (g$6654$Od@c8 core-prim . fxif)
        (g$11460$Od@c8 core-prim . fxfirst-bit-set)
        (g$11459$Od@c8 core-prim . fxeven?)
        (g$11458$Od@c8 core-prim . fxdiv0-and-mod0)
        (g$11457$Od@c8 core-prim . fxdiv0)
        (g$11456$Od@c8 core-prim . fxdiv-and-mod)
        (g$11455$Od@c8 core-prim . fxdiv)
        (g$6657$Od@c8 core-prim . fxcopy-bit-field)
        (g$6655$Od@c8 core-prim . fxcopy-bit)
        (g$11454$Od@c8 core-prim . fxbit-set?)
        (g$6656$Od@c8 core-prim . fxbit-field)
        (g$11453$Od@c8 core-prim . fxbit-count)
        (g$6659$Od@c8 core-prim . fxarithmetic-shift-right)
        (g$6658$Od@c8 core-prim . fxarithmetic-shift-left)
        (g$11452$Od@c8 core-prim . fxarithmetic-shift)
        (g$11451$Od@c8 core-prim . fxand)
        (g$11450$Od@c8 core-prim . fx>?)
        (g$11449$Od@c8 core-prim . fx>=?)
        (g$11448$Od@c8 core-prim . fx=?)
        (g$11447$Od@c8 core-prim . fx<?)
        (g$11446$Od@c8 core-prim . fx<=?)
        (g$11445$Od@c8 core-prim . fx-/carry)
        (g$11444$Od@c8 core-prim . fx-)
        (g$11443$Od@c8 core-prim . fx+/carry)
        (g$11442$Od@c8 core-prim . fx+)
        (g$11441$Od@c8 core-prim . fx*/carry)
        (g$11440$Od@c8 core-prim . fx*)
        (g$11439$Od@c8 core-prim . greatest-fixnum)
        (g$11438$Od@c8 core-prim . least-fixnum)
        (g$11437$Od@c8 core-prim . fixnum-width)
        (g$11436$Od@c8 core-prim . fixnum?)
        (g$6608$Od@c8 core-prim . bitwise-rotate-bit-field)
        (g$6609$Od@c8 core-prim . bitwise-reverse-bit-field)
        (g$11435$Od@c8 core-prim . bitwise-length)
        (g$6602$Od@c8 core-prim . bitwise-if)
        (g$11434$Od@c8 core-prim . bitwise-first-bit-set)
        (g$6605$Od@c8 core-prim . bitwise-copy-bit-field)
        (g$6603$Od@c8 core-prim . bitwise-copy-bit)
        (g$11433$Od@c8 core-prim . bitwise-bit-set?)
        (g$11432$Od@c8 core-prim . bitwise-bit-field)
        (g$11431$Od@c8 core-prim . bitwise-bit-count)
        (g$11430$Od@c8 core-prim . bitwise-xor)
        (g$11429$Od@c8 core-prim . bitwise-ior)
        (g$11428$Od@c8 core-prim . bitwise-and)
        (g$11427$Od@c8 core-prim . bitwise-not)
        (g$6607$Od@c8 core-prim . bitwise-arithmetic-shift-right)
        (g$6606$Od@c8 core-prim . bitwise-arithmetic-shift-left)
        (g$11426$Od@c8 core-prim . bitwise-arithmetic-shift)
        (g$11425$Od@c8 core-prim . zero?)
        (g$11424$Od@c8 core-prim . vector?)
        (g$11423$Od@c8 core-prim . vector-set!)
        (g$11422$Od@c8 core-prim . vector-ref)
        (g$11421$Od@c8 core-prim . vector-map)
        (g$11420$Od@c8 core-prim . vector-length)
        (g$11419$Od@c8 core-prim . vector-for-each)
        (g$11418$Od@c8 core-prim . vector-fill!)
        (g$11417$Od@c8 core-prim . vector->list)
        (g$11416$Od@c8 core-prim . vector)
        (g$11415$Od@c8 core-prim . values)
        (g$11414$Od@c8 core-prim . truncate)
        (g$11413$Od@c8 core-prim . tan)
        (g$11412$Od@c8 core-prim . symbol?)
        (g$11411$Od@c8 core-prim . symbol=?)
        (g$11410$Od@c8 core-prim . symbol->string)
        (g$11409$Od@c8 core-prim . substring)
        (g$11408$Od@c8 core-prim . string?)
        (g$11407$Od@c8 core-prim . string>?)
        (g$11406$Od@c8 core-prim . string>=?)
        (g$11405$Od@c8 core-prim . string=?)
        (g$11404$Od@c8 core-prim . string<?)
        (g$11403$Od@c8 core-prim . string<=?)
        (g$11402$Od@c8 core-prim . string-ref)
        (g$11401$Od@c8 core-prim . string-length)
        (g$11400$Od@c8 core-prim . string-for-each)
        (g$11399$Od@c8 core-prim . string-copy)
        (g$11398$Od@c8 core-prim . string-append)
        (g$11397$Od@c8 core-prim . string->symbol)
        (g$11396$Od@c8 core-prim . string->number)
        (g$11395$Od@c8 core-prim . string->list)
        (g$11394$Od@c8 core-prim . string)
        (g$11393$Od@c8 core-prim . sqrt)
        (g$11392$Od@c8 core-prim . sin)
        (g$11391$Od@c8 core-prim . round)
        (g$11390$Od@c8 core-prim . reverse)
        (g$11389$Od@c8 core-prim . real?)
        (g$11388$Od@c8 core-prim . real-valued?)
        (g$11387$Od@c8 core-prim . real-part)
        (g$5633$Od@c8 core-prim . rationalize)
        (g$11386$Od@c8 core-prim . rational?)
        (g$11385$Od@c8 core-prim . rational-valued?)
        (g$11384$Od@c8 core-prim . procedure?)
        (g$11383$Od@c8 core-prim . positive?)
        (g$11382$Od@c8 core-prim . pair?)
        (g$11381$Od@c8 core-prim . odd?)
        (g$11380$Od@c8 core-prim . numerator)
        (g$11379$Od@c8 core-prim . number?)
        (g$11378$Od@c8 core-prim . number->string)
        (g$11377$Od@c8 core-prim . null?)
        (g$11376$Od@c8 core-prim . not)
        (g$11375$Od@c8 core-prim . negative?)
        (g$11374$Od@c8 core-prim . nan?)
        (g$11373$Od@c8 core-prim . min)
        (g$11372$Od@c8 core-prim . max)
        (g$11371$Od@c8 core-prim . map)
        (g$11370$Od@c8 core-prim . make-vector)
        (g$11369$Od@c8 core-prim . make-string)
        (g$11368$Od@c8 core-prim . make-rectangular)
        (g$11367$Od@c8 core-prim . make-polar)
        (g$11366$Od@c8 core-prim . magnitude)
        (g$11365$Od@c8 core-prim . log)
        (g$11364$Od@c8 core-prim . list?)
        (g$11363$Od@c8 core-prim . list-tail)
        (g$11362$Od@c8 core-prim . list-ref)
        (g$11361$Od@c8 core-prim . list->vector)
        (g$11360$Od@c8 core-prim . list->string)
        (g$11359$Od@c8 core-prim . list)
        (g$11358$Od@c8 core-prim . length)
        (g$11357$Od@c8 core-prim . lcm)
        (g$11356$Od@c8 core-prim . integer?)
        (g$11355$Od@c8 core-prim . integer-valued?)
        (g$11354$Od@c8 core-prim . integer->char)
        (g$11353$Od@c8 core-prim . infinite?)
        (g$11352$Od@c8 core-prim . inexact?)
        (g$11351$Od@c8 core-prim . inexact)
        (g$11350$Od@c8 core-prim . imag-part)
        (g$11349$Od@c8 core-prim . gcd)
        (g$11348$Od@c8 core-prim . for-each)
        (g$11347$Od@c8 core-prim . floor)
        (g$11346$Od@c8 core-prim . finite?)
        (g$11345$Od@c8 core-prim . expt)
        (g$11344$Od@c8 core-prim . exp)
        (g$11343$Od@c8 core-prim . exact?)
        (g$11342$Od@c8 core-prim . exact-integer-sqrt)
        (g$11341$Od@c8 core-prim . exact)
        (g$11340$Od@c8 core-prim . even?)
        (g$11339$Od@c8 core-prim . error)
        (g$11338$Od@c8 core-prim . eqv?)
        (g$11337$Od@c8 core-prim . equal?)
        (g$11336$Od@c8 core-prim . eq?)
        (g$11335$Od@c8 core-prim . dynamic-wind)
        (g$11334$Od@c8 core-prim . div0-and-mod0)
        (g$11333$Od@c8 core-prim . mod0)
        (g$11332$Od@c8 core-prim . div0)
        (g$11331$Od@c8 core-prim . div-and-mod)
        (g$11330$Od@c8 core-prim . mod)
        (g$11329$Od@c8 core-prim . div)
        (g$11328$Od@c8 core-prim . denominator)
        (g$11327$Od@c8 core-prim . cos)
        (g$11326$Od@c8 core-prim . cons)
        (g$11325$Od@c8 core-prim . complex?)
        (g$11324$Od@c8 core-prim . char?)
        (g$11323$Od@c8 core-prim . char>?)
        (g$11322$Od@c8 core-prim . char>=?)
        (g$11321$Od@c8 core-prim . char=?)
        (g$11320$Od@c8 core-prim . char<?)
        (g$11319$Od@c8 core-prim . char<=?)
        (g$11318$Od@c8 core-prim . char->integer)
        (g$11317$Od@c8 core-prim . ceiling)
        (g$11316$Od@c8 core-prim . call-with-values)
        (g$11315$Od@c8 core-prim . call/cc)
        (g$11314$Od@c8 core-prim . call-with-current-continuation)
        (g$5632$Od@c8 core-prim . cddddr)
        (g$5631$Od@c8 core-prim . cdddar)
        (g$5630$Od@c8 core-prim . cddadr)
        (g$5629$Od@c8 core-prim . cddaar)
        (g$5628$Od@c8 core-prim . cdaddr)
        (g$5627$Od@c8 core-prim . cdadar)
        (g$5626$Od@c8 core-prim . cdaadr)
        (g$5625$Od@c8 core-prim . cdaaar)
        (g$5624$Od@c8 core-prim . cadddr)
        (g$5623$Od@c8 core-prim . caddar)
        (g$5622$Od@c8 core-prim . cadadr)
        (g$5621$Od@c8 core-prim . cadaar)
        (g$5620$Od@c8 core-prim . caaddr)
        (g$5619$Od@c8 core-prim . caadar)
        (g$5618$Od@c8 core-prim . caaadr)
        (g$5617$Od@c8 core-prim . caaaar)
        (g$5616$Od@c8 core-prim . cdddr)
        (g$5615$Od@c8 core-prim . cddar)
        (g$5614$Od@c8 core-prim . cdadr)
        (g$5613$Od@c8 core-prim . cdaar)
        (g$5612$Od@c8 core-prim . caddr)
        (g$5611$Od@c8 core-prim . cadar)
        (g$5610$Od@c8 core-prim . caadr)
        (g$5609$Od@c8 core-prim . caaar)
        (g$5608$Od@c8 core-prim . cddr)
        (g$5607$Od@c8 core-prim . cdar)
        (g$5606$Od@c8 core-prim . cadr)
        (g$5605$Od@c8 core-prim . caar)
        (g$11313$Od@c8 core-prim . cdr)
        (g$11312$Od@c8 core-prim . car)
        (g$11311$Od@c8 core-prim . boolean?)
        (g$11310$Od@c8 core-prim . boolean=?)
        (g$11309$Od@c8 core-prim . atan)
        (g$11308$Od@c8 core-prim . assertion-violation)
        (g$11307$Od@c8 core-prim . asin)
        (g$11306$Od@c8 core-prim . apply)
        (g$11305$Od@c8 core-prim . append)
        (g$11304$Od@c8 core-prim . angle)
        (g$11303$Od@c8 core-prim . acos)
        (g$11302$Od@c8 core-prim . abs)
        (g$11301$Od@c8 core-prim . /)
        (g$11300$Od@c8 core-prim . *)
        (g$11299$Od@c8 core-prim . -)
        (g$11298$Od@c8 core-prim . +)
        (g$11297$Od@c8 core-prim . >=)
        (g$11296$Od@c8 core-prim . >)
        (g$11295$Od@c8 core-prim . =)
        (g$11294$Od@c8 core-prim . <=)
        (g$11293$Od@c8 core-prim . <)
        (g$11292$Od@c8 core-prim . make-record-printer)
        (g$11291$Od@c8 core-prim . eqv-hash)
        (g$11290$Od@c8 core-prim . eq-hash)
        (g$11289$Od@c8 core-prim . reverse!)
        (g$6923$Od@c8 core-prim . printf)
        (g$6924$Od@c8 core-prim . fprintf)
        (g$6925$Od@c8 core-prim . format)
        (g$11288$Od@c8 core-prim . get-arity)
        (g$11287$Od@c8 core-prim . gc-collect)
        (g$11286$Od@c8 core-prim . clr-type?)
        (g$11285$Od@c8 core-prim . get-clr-type)
        (g$11284$Od@c8 core-prim . vector-append)
        (g$11283$Od@c8 core-prim . vector-filter)
        (g$11282$Od@c8 core-prim . vector-reverse!)
        (g$11281$Od@c8 core-prim . vector-contains?)
        (g$11280$Od@c8 core-prim . vector-index-of)
        (g$11279$Od@c8 core-prim . vector-copy)
        (g$11278$Od@c8 core-prim . vector-binary-search)
        (g$11277$Od@c8 core-prim . get-output-string)
        (g$11276$Od@c8 core-prim . open-output-string)
        (g$11275$Od@c8 core-prim . open-input-string)
        (g$11274$Od@c8 core-prim . string-format)
        (g$11273$Od@c8 core-prim . make-traced-procedure)
        (g$6944$Od@c8 core-prim . make-traced-macro)
        (g$11272$Od@c8 core-prim . pmap)
        (g$11271$Od@c8 core-prim . time-it)
        (g$6949$Od@c8 core-prim . make-parameter)
        (g$11270$Od@c8 core-prim . library-locator)
        (g$11269$Od@c8 core-prim . get-library-paths)
        (g$8205$Od@c8 core-prim . environment-symbols)
        (g$8204$Od@c8 core-prim . interaction-environment-symbols)
        (g$7374$Od@c8 core-prim . library-path)
        (g$7375$Od@c8 core-prim . library-extensions)
        (g$7395$Od@c8 core-prim . installed-libraries)
        (g$8210$Od@c8 core-prim . expand)
        (g$11268$Od@c8 $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11267$Od@c8 $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11266$Od@c8 $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11265$Od@c8 $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11264$Od@c8 $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11263$Od@c8
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11262$Od@c8
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11261$Od@c8
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11260$Od@c8
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11259$Od@c8 $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11258$Od@c8
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11257$Od@c8 $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11256$Od@c8 $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11255$Od@c8 $core-rtd &i/o-rtd &i/o-rcd)
        (g$11254$Od@c8 $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11253$Od@c8 $core-rtd &undefined-rtd &undefined-rcd)
        (g$11252$Od@c8 $core-rtd &syntax-rtd &syntax-rcd)
        (g$11251$Od@c8 $core-rtd &lexical-rtd &lexical-rcd)
        (g$11250$Od@c8
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11249$Od@c8 $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11248$Od@c8 $core-rtd &who-rtd &who-rcd)
        (g$11247$Od@c8 $core-rtd &irritants-rtd &irritants-rcd)
        (g$11246$Od@c8 $core-rtd &assertion-rtd &assertion-rcd)
        (g$11245$Od@c8 $core-rtd &violation-rtd &violation-rcd)
        (g$11244$Od@c8 $core-rtd &error-rtd &error-rcd)
        (g$11243$Od@c8 $core-rtd &serious-rtd &serious-rcd)
        (g$11242$Od@c8 $core-rtd &warning-rtd &warning-rcd)
        (g$11241$Od@c8 $core-rtd &message-rtd &message-rcd)
        (g$11240$Od@c8 $core-rtd &condition-rtd &condition-rcd)
        (g$11239$Od@c8 macro . define-condition-type)
        (g$11238$Od@c8 macro . define-enumeration)
        (g$11237$Od@c8 macro . define-record-type)
        (g$11236$Od@c8 macro . parent-rtd)
        (g$11235$Od@c8 macro . nongenerative)
        (g$11234$Od@c8 macro . opaque)
        (g$11233$Od@c8 macro . sealed)
        (g$11232$Od@c8 macro . protocol)
        (g$11231$Od@c8 macro . parent)
        (g$11230$Od@c8 macro . immutable)
        (g$11229$Od@c8 macro . mutable)
        (g$11228$Od@c8 macro . fields)
        (g$11227$Od@c8 macro . error-handling-mode)
        (g$11226$Od@c8 macro . file-options)
        (g$11225$Od@c8 macro . buffer-mode)
        (g$11224$Od@c8 macro . eol-style)
        (g$11223$Od@c8 macro . guard)
        (g$11222$Od@c8 macro . trace-letrec-syntax)
        (g$11221$Od@c8 macro . trace-let-syntax)
        (g$11220$Od@c8 macro . trace-define-syntax)
        (g$11219$Od@c8 macro . trace-define)
        (g$11218$Od@c8 macro . trace-lambda)
        (g$11217$Od@c8 macro . unsyntax-splicing)
        (g$11216$Od@c8 macro . unsyntax)
        (g$11215$Od@c8 macro . unquote-splicing)
        (g$11214$Od@c8 macro . unquote)
        (g$11213$Od@c8 macro . _)
        (g$11212$Od@c8 macro . else)
        (g$11211$Od@c8 macro . =>)
        (g$11210$Od@c8 macro . ...)
        (g$11209$Od@c8 macro . assert)
        (g$11208$Od@c8 macro . endianness)
        (g$11207$Od@c8 macro . delay)
        (g$11206$Od@c8 macro . time)
        (g$11205$Od@c8 macro . or)
        (g$11204$Od@c8 macro . and)
        (g$11203$Od@c8 macro . do)
        (g$11202$Od@c8 macro . cond)
        (g$11201$Od@c8 macro . let*)
        (g$11200$Od@c8 macro . let)
        (g$11199$Od@c8 macro . identifier-syntax)
        (g$11198$Od@c8 macro . with-syntax)
        (g$11197$Od@c8 macro . quasisyntax)
        (g$11196$Od@c8 macro . quasiquote)
        (g$11195$Od@c8 macro . syntax-rules)
        (g$11194$Od@c8 macro . include-into)
        (g$11193$Od@c8 macro . include)
        (g$11192$Od@c8 macro . define-struct)
        (g$11191$Od@c8 macro . let-values)
        (g$11190$Od@c8 macro . let*-values)
        (g$11189$Od@c8 core-macro . record-constructor-descriptor)
        (g$11188$Od@c8 core-macro . record-type-descriptor)
        (g$11187$Od@c8 core-macro . fluid-let-syntax)
        (g$11186$Od@c8 core-macro . case)
        (g$11185$Od@c8 core-macro . parameterize)
        (g$11184$Od@c8 core-macro . unless)
        (g$11183$Od@c8 core-macro . when)
        (g$11182$Od@c8 core-macro . if)
        (g$11181$Od@c8 core-macro . letrec*)
        (g$11180$Od@c8 core-macro . letrec)
        (g$11179$Od@c8 core-macro . type-descriptor)
        (g$11178$Od@c8 core-macro . case-lambda)
        (g$11177$Od@c8 core-macro . lambda)
        (g$11176$Od@c8 core-macro . syntax)
        (g$11175$Od@c8 core-macro . syntax-case)
        (g$11174$Od@c8 core-macro . quote)
        (g$11173$Od@c8 core-macro . foreign-call)
        (g$11172$Od@c8 letrec-syntax)
        (g$11171$Od@c8 let-syntax)
        (g$11170$Od@c8 set!)
        (g$11169$Od@c8 import)
        (g$11168$Od@c8 library)
        (g$11167$Od@c8 begin)
        (g$11166$Od@c8 module)
        (g$11165$Od@c8 define-syntax)
        (g$11164$Od@c8 define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$Od@c8
      'g$11857$Od@c8
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$11736$Od@c8)
        (eval-core . g$11735$Od@c8)
        (set-symbol-value! . g$11734$Od@c8)
        (symbol-value . g$11733$Od@c8)
        (gensym . g$11731$Od@c8)
        (void . g$11730$Od@c8))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$local-library-path$11080$Od@c8
     g$local-library-path$11106$Od@c8
     (case-lambda
       ((g$filename$11089$Od@c8)
        (cons
          (g$get-directory-name$5571$Od@c8 g$filename$11089$Od@c8)
          (g$library-path$7053$Od@c8)))))
   (g$load$11081$Od@c8
     g$load$11107$Od@c8
     (case-lambda
       ((g$filename$11090$Od@c8)
        (begin
          (g$load-r6rs-top-level$11087$Od@c8 g$filename$11090$Od@c8 'load)
          (void)))))
   (g$ironscheme-build$11082$Od@c8
     g$ironscheme-build$11108$Od@c8
     (case-lambda (() (g$load$11081$Od@c8 '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11083$Od@c8
     g$eval-top-level$11109$Od@c8
     (case-lambda
       ((g$x$11091$Od@c8)
        (g$eval$11058$Od@c8
          g$x$11091$Od@c8
          (g$interaction-environment$11078$Od@c8)))))
   (g$compile-system-libraries$11084$Od@c8
     g$compile-system-libraries$11110$Od@c8
     (case-lambda
       (()
        (g$eval-top-level$11083$Od@c8
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11085$Od@c8
     g$compile$11111$Od@c8
     (case-lambda
       ((g$filename$11092$Od@c8)
        (g$load-r6rs-top-level$11087$Od@c8 g$filename$11092$Od@c8 'compile))))
   (g$compile->closure$11086$Od@c8
     g$compile->closure$11112$Od@c8
     (case-lambda
       ((g$filename$11093$Od@c8)
        (g$load-r6rs-top-level$11087$Od@c8 g$filename$11093$Od@c8 'closure))))
   (g$load-r6rs-top-level$11087$Od@c8
     g$load-r6rs-top-level$11113$Od@c8
     (case-lambda
       ((g$filename$11094$Od@c8 g$how$11095$Od@c8)
        ((case-lambda
           ((g$library-path$11098$Od@c8 g$library-path$11099$Od@c8)
            ((case-lambda
               ((g$swap$11100$Od@c8)
                (dynamic-wind
                  g$swap$11100$Od@c8
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11101$Od@c8)
                         ((case-lambda
                            ((g$t$11102$Od@c8)
                             (if (eqv? g$t$11102$Od@c8 'closure)
                               (g$pre-compile-r6rs-top-level$11077$Od@c8
                                 g$x*$11101$Od@c8)
                               (if (eqv? g$t$11102$Od@c8 'load)
                                 ((g$compile-r6rs-top-level$11076$Od@c8
                                    g$x*$11101$Od@c8))
                                 (if (eqv? g$t$11102$Od@c8 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$11076$Od@c8
                                       g$x*$11101$Od@c8)
                                     (g$serialize-all$7057$Od@c8
                                       serialize-library
                                       g$compile-core-expr$6771$Od@c8))
                                   (void))))))
                          g$how$11095$Od@c8)))
                      (with-input-from-file
                        g$filename$11094$Od@c8
                        (case-lambda
                          (()
                           ((letrec ((g$f$11103$Od@c8
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11104$Od@c8)
                                              (if (eof-object? g$x$11104$Od@c8)
                                                '()
                                                (cons
                                                  g$x$11104$Od@c8
                                                  (g$f$11103$Od@c8)))))
                                           (read-annotated))))))
                              g$f$11103$Od@c8))))))))
                  g$swap$11100$Od@c8)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11105$Od@c8)
                    (begin
                      (g$library-path$11098$Od@c8 g$library-path$11099$Od@c8)
                      (set! g$library-path$11099$Od@c8 g$t$11105$Od@c8))))
                 (g$library-path$11098$Od@c8)))))))
         g$library-path$7053$Od@c8
         (g$local-library-path$11080$Od@c8 g$filename$11094$Od@c8))))))
  (begin
    (g$current-precompiled-library-loader$7058$Od@c8 load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11088$Od@c8)
         (if (g$serious-condition?$5954$Od@c8 g$ex$11088$Od@c8)
           (raise g$ex$11088$Od@c8)
           (begin (display g$ex$11088$Od@c8) (newline))))))
    (set-symbol-value! 'load g$load$11081$Od@c8)
    (set-symbol-value! 'compile g$compile$11085$Od@c8)
    (set-symbol-value! 'compile->closure g$compile->closure$11086$Od@c8)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11083$Od@c8)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11051$Od@c8)
    (set-symbol-value! 'expanded2core g$expanded->core$6770$Od@c8)
    (g$library-path$7053$Od@c8 (get-library-paths))))

