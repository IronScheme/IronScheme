;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4807$Pld94
     g$caar$4879$Pld94
     (case-lambda ((g$x$4838$Pld94) (car (car g$x$4838$Pld94)))))
   (g$cadr$4808$Pld94
     g$cadr$4880$Pld94
     (case-lambda ((g$x$4839$Pld94) (car (cdr g$x$4839$Pld94)))))
   (g$cdar$4809$Pld94
     g$cdar$4881$Pld94
     (case-lambda ((g$x$4840$Pld94) (cdr (car g$x$4840$Pld94)))))
   (g$cddr$4810$Pld94
     g$cddr$4882$Pld94
     (case-lambda ((g$x$4841$Pld94) (cdr (cdr g$x$4841$Pld94)))))
   (g$caaar$4811$Pld94
     g$caaar$4883$Pld94
     (case-lambda
       ((g$x$4842$Pld94) (g$caar$4807$Pld94 (car g$x$4842$Pld94)))))
   (g$caadr$4812$Pld94
     g$caadr$4884$Pld94
     (case-lambda
       ((g$x$4843$Pld94) (g$caar$4807$Pld94 (cdr g$x$4843$Pld94)))))
   (g$cadar$4813$Pld94
     g$cadar$4885$Pld94
     (case-lambda
       ((g$x$4844$Pld94) (g$cadr$4808$Pld94 (car g$x$4844$Pld94)))))
   (g$caddr$4814$Pld94
     g$caddr$4886$Pld94
     (case-lambda
       ((g$x$4845$Pld94) (g$cadr$4808$Pld94 (cdr g$x$4845$Pld94)))))
   (g$cdaar$4815$Pld94
     g$cdaar$4887$Pld94
     (case-lambda
       ((g$x$4846$Pld94) (g$cdar$4809$Pld94 (car g$x$4846$Pld94)))))
   (g$cdadr$4816$Pld94
     g$cdadr$4888$Pld94
     (case-lambda
       ((g$x$4847$Pld94) (g$cdar$4809$Pld94 (cdr g$x$4847$Pld94)))))
   (g$cddar$4817$Pld94
     g$cddar$4889$Pld94
     (case-lambda
       ((g$x$4848$Pld94) (g$cddr$4810$Pld94 (car g$x$4848$Pld94)))))
   (g$cdddr$4818$Pld94
     g$cdddr$4890$Pld94
     (case-lambda
       ((g$x$4849$Pld94) (g$cddr$4810$Pld94 (cdr g$x$4849$Pld94)))))
   (g$caaaar$4819$Pld94
     g$caaaar$4891$Pld94
     (case-lambda
       ((g$x$4850$Pld94) (g$caaar$4811$Pld94 (car g$x$4850$Pld94)))))
   (g$caaadr$4820$Pld94
     g$caaadr$4892$Pld94
     (case-lambda
       ((g$x$4851$Pld94) (g$caaar$4811$Pld94 (cdr g$x$4851$Pld94)))))
   (g$caadar$4821$Pld94
     g$caadar$4893$Pld94
     (case-lambda
       ((g$x$4852$Pld94) (g$caadr$4812$Pld94 (car g$x$4852$Pld94)))))
   (g$caaddr$4822$Pld94
     g$caaddr$4894$Pld94
     (case-lambda
       ((g$x$4853$Pld94) (g$caadr$4812$Pld94 (cdr g$x$4853$Pld94)))))
   (g$cadaar$4823$Pld94
     g$cadaar$4895$Pld94
     (case-lambda
       ((g$x$4854$Pld94) (g$cadar$4813$Pld94 (car g$x$4854$Pld94)))))
   (g$cadadr$4824$Pld94
     g$cadadr$4896$Pld94
     (case-lambda
       ((g$x$4855$Pld94) (g$cadar$4813$Pld94 (cdr g$x$4855$Pld94)))))
   (g$caddar$4825$Pld94
     g$caddar$4897$Pld94
     (case-lambda
       ((g$x$4856$Pld94) (g$caddr$4814$Pld94 (car g$x$4856$Pld94)))))
   (g$cadddr$4826$Pld94
     g$cadddr$4898$Pld94
     (case-lambda
       ((g$x$4857$Pld94) (g$caddr$4814$Pld94 (cdr g$x$4857$Pld94)))))
   (g$cdaaar$4827$Pld94
     g$cdaaar$4899$Pld94
     (case-lambda
       ((g$x$4858$Pld94) (g$cdaar$4815$Pld94 (car g$x$4858$Pld94)))))
   (g$cdaadr$4828$Pld94
     g$cdaadr$4900$Pld94
     (case-lambda
       ((g$x$4859$Pld94) (g$cdaar$4815$Pld94 (cdr g$x$4859$Pld94)))))
   (g$cdadar$4829$Pld94
     g$cdadar$4901$Pld94
     (case-lambda
       ((g$x$4860$Pld94) (g$cdadr$4816$Pld94 (car g$x$4860$Pld94)))))
   (g$cdaddr$4830$Pld94
     g$cdaddr$4902$Pld94
     (case-lambda
       ((g$x$4861$Pld94) (g$cdadr$4816$Pld94 (cdr g$x$4861$Pld94)))))
   (g$cddaar$4831$Pld94
     g$cddaar$4903$Pld94
     (case-lambda
       ((g$x$4862$Pld94) (g$cddar$4817$Pld94 (car g$x$4862$Pld94)))))
   (g$cddadr$4832$Pld94
     g$cddadr$4904$Pld94
     (case-lambda
       ((g$x$4863$Pld94) (g$cddar$4817$Pld94 (cdr g$x$4863$Pld94)))))
   (g$cdddar$4833$Pld94
     g$cdddar$4905$Pld94
     (case-lambda
       ((g$x$4864$Pld94) (g$cdddr$4818$Pld94 (car g$x$4864$Pld94)))))
   (g$cddddr$4834$Pld94
     g$cddddr$4906$Pld94
     (case-lambda
       ((g$x$4865$Pld94) (g$cdddr$4818$Pld94 (cdr g$x$4865$Pld94)))))
   (g$rationalize$4835$Pld94
     g$rationalize$4907$Pld94
     (case-lambda
       ((g$x$4866$Pld94 g$e$4867$Pld94)
        (apply / (g$find-ratio$4836$Pld94 g$x$4866$Pld94 g$e$4867$Pld94)))))
   (g$find-ratio$4836$Pld94
     g$find-ratio$4908$Pld94
     (case-lambda
       ((g$x$4868$Pld94 g$e$4869$Pld94)
        (g$find-ratio-between$4837$Pld94
          (- g$x$4868$Pld94 g$e$4869$Pld94)
          (+ g$x$4868$Pld94 g$e$4869$Pld94)))))
   (g$find-ratio-between$4837$Pld94
     g$find-ratio-between$4909$Pld94
     (case-lambda
       ((g$x$4870$Pld94 g$y$4871$Pld94)
        (letrec* ((g$sr$4872$Pld94
                    (case-lambda
                      ((g$x$4874$Pld94 g$y$4875$Pld94)
                       ((case-lambda
                          ((g$fx$4876$Pld94 g$fy$4877$Pld94)
                           (if (>= g$fx$4876$Pld94 g$x$4874$Pld94)
                             (list g$fx$4876$Pld94 '1)
                             (if (= g$fx$4876$Pld94 g$fy$4877$Pld94)
                               ((case-lambda
                                  ((g$rat$4878$Pld94)
                                   (list
                                     (+ (g$cadr$4808$Pld94 g$rat$4878$Pld94)
                                        (* g$fx$4876$Pld94
                                           (car g$rat$4878$Pld94)))
                                     (car g$rat$4878$Pld94))))
                                (g$sr$4872$Pld94
                                  (/ (- g$y$4875$Pld94 g$fy$4877$Pld94))
                                  (/ (- g$x$4874$Pld94 g$fx$4876$Pld94))))
                               (list (+ '1 g$fx$4876$Pld94) '1)))))
                        (exact (floor g$x$4874$Pld94))
                        (exact (floor g$y$4875$Pld94)))))))
          (if (< g$y$4871$Pld94 g$x$4870$Pld94)
            (g$find-ratio-between$4837$Pld94 g$y$4871$Pld94 g$x$4870$Pld94)
            (if (>= g$x$4870$Pld94 g$y$4871$Pld94)
              (list g$x$4870$Pld94 '1)
              (if (positive? g$x$4870$Pld94)
                (g$sr$4872$Pld94 g$x$4870$Pld94 g$y$4871$Pld94)
                (if (negative? g$y$4871$Pld94)
                  ((case-lambda
                     ((g$rat$4873$Pld94)
                      (list
                        (- (car g$rat$4873$Pld94))
                        (g$cadr$4808$Pld94 g$rat$4873$Pld94))))
                   (g$sr$4872$Pld94 (- g$y$4871$Pld94) (- g$x$4870$Pld94)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5105$Pld94 g$using$5140$Pld94 (clr-using-internal 'system))
   (g$using$5107$Pld94
     g$using$5141$Pld94
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5108$Pld94
     g$make-eq-hashtable$5142$Pld94
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5119$Pld94)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5119$Pld94)))))
   (g$make-eqv-hashtable$5109$Pld94
     g$make-eqv-hashtable$5143$Pld94
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5120$Pld94) (make-hashtable eqv-hash eqv? g$k$5120$Pld94))))
   (g$hashtable-size$5110$Pld94
     g$hashtable-size$5144$Pld94
     (case-lambda
       ((g$ht$5121$Pld94)
        (clr-call-internal 'hashtable 'get_count g$ht$5121$Pld94))))
   (g$hashtable-ref$5111$Pld94
     g$hashtable-ref$5145$Pld94
     (case-lambda
       ((g$ht$5122$Pld94 g$key$5123$Pld94 g$default$5124$Pld94)
        (letrec* ((g$r$5125$Pld94
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5122$Pld94
                      g$key$5123$Pld94)))
          (if (not (null? g$r$5125$Pld94))
            g$r$5125$Pld94
            g$default$5124$Pld94)))))
   (g$hashtable-set!$5112$Pld94
     g$hashtable-set!$5146$Pld94
     (case-lambda
       ((g$ht$5126$Pld94 g$key$5127$Pld94 g$obj$5128$Pld94)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5126$Pld94
          g$key$5127$Pld94
          g$obj$5128$Pld94))))
   (g$hashtable-delete!$5113$Pld94
     g$hashtable-delete!$5147$Pld94
     (case-lambda
       ((g$ht$5129$Pld94 g$key$5130$Pld94)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5129$Pld94
          g$key$5130$Pld94))))
   (g$hashtable-contains?$5114$Pld94
     g$hashtable-contains?$5148$Pld94
     (case-lambda
       ((g$ht$5131$Pld94 g$key$5132$Pld94)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5131$Pld94
          g$key$5132$Pld94))))
   (g$hashtable-update!$5115$Pld94
     g$hashtable-update!$5149$Pld94
     (case-lambda
       ((g$ht$5133$Pld94
          g$key$5134$Pld94
          g$proc$5135$Pld94
          g$default$5136$Pld94)
        (g$hashtable-set!$5112$Pld94
          g$ht$5133$Pld94
          g$key$5134$Pld94
          (g$proc$5135$Pld94
            (g$hashtable-ref$5111$Pld94
              g$ht$5133$Pld94
              g$key$5134$Pld94
              g$default$5136$Pld94))))))
   (g$hashtable-clear!$5116$Pld94
     g$hashtable-clear!$5150$Pld94
     (case-lambda
       ((g$ht$5137$Pld94)
        (clr-call-internal 'hashtable 'clear g$ht$5137$Pld94))
       ((g$ht$5138$Pld94 g$k$5139$Pld94)
        (clr-call-internal 'hashtable 'clear g$ht$5138$Pld94))))
   (g$clear-usings$5118$Pld94
     g$clear-usings$5151$Pld94
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5153$Pld94 g$using$5219$Pld94 (clr-using-internal 'system.io))
   (g$file-exists?$5154$Pld94
     g$file-exists?$5220$Pld94
     (case-lambda
       ((g$fn$5182$Pld94)
        (clr-call-internal 'file 'exists '() g$fn$5182$Pld94))))
   (g$delete-file$5155$Pld94
     g$delete-file$5221$Pld94
     (case-lambda
       ((g$fn$5183$Pld94)
        (clr-call-internal 'file 'delete '() g$fn$5183$Pld94))))
   (g$file-copy$5156$Pld94
     g$file-copy$5222$Pld94
     (case-lambda
       ((g$from$5184$Pld94 g$to$5185$Pld94)
        (g$file-copy$5156$Pld94 g$from$5184$Pld94 g$to$5185$Pld94 '#f))
       ((g$from$5186$Pld94 g$to$5187$Pld94 g$overwrite?$5188$Pld94)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5186$Pld94
          g$to$5187$Pld94
          g$overwrite?$5188$Pld94))))
   (g$file-move$5157$Pld94
     g$file-move$5223$Pld94
     (case-lambda
       ((g$from$5189$Pld94 g$to$5190$Pld94)
        (clr-call-internal 'file 'move '() g$from$5189$Pld94 g$to$5190$Pld94))))
   (g$file-create-time$5158$Pld94
     g$file-create-time$5224$Pld94
     (case-lambda
       ((g$fn$5191$Pld94)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5191$Pld94))))
   (g$file-access-time$5159$Pld94
     g$file-access-time$5225$Pld94
     (case-lambda
       ((g$fn$5192$Pld94)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5192$Pld94))))
   (g$file-modified-time$5160$Pld94
     g$file-modified-time$5226$Pld94
     (case-lambda
       ((g$fn$5193$Pld94)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5193$Pld94))))
   (g$directory-exists?$5161$Pld94
     g$directory-exists?$5227$Pld94
     (case-lambda
       ((g$fn$5194$Pld94)
        (clr-call-internal 'directory 'exists '() g$fn$5194$Pld94))))
   (g$delete-directory$5162$Pld94
     g$delete-directory$5228$Pld94
     (case-lambda
       ((g$dir$5195$Pld94)
        (g$delete-directory$5162$Pld94 g$dir$5195$Pld94 '#f))
       ((g$dir$5196$Pld94 g$recursive?$5197$Pld94)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5196$Pld94
          g$recursive?$5197$Pld94))))
   (g$directory-move$5163$Pld94
     g$directory-move$5229$Pld94
     (case-lambda
       ((g$from$5198$Pld94 g$to$5199$Pld94)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5198$Pld94
          g$to$5199$Pld94))))
   (g$create-directory$5164$Pld94
     g$create-directory$5230$Pld94
     (case-lambda
       ((g$name$5200$Pld94)
        (clr-call-internal 'directory 'createdirectory '() g$name$5200$Pld94))))
   (g$get-files$5165$Pld94
     g$get-files$5231$Pld94
     (case-lambda
       ((g$dir$5201$Pld94) (g$get-files$5165$Pld94 g$dir$5201$Pld94 '"*"))
       ((g$dir$5202$Pld94 g$pattern$5203$Pld94)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5202$Pld94
          g$pattern$5203$Pld94))))
   (g$get-directories$5166$Pld94
     g$get-directories$5232$Pld94
     (case-lambda
       ((g$dir$5204$Pld94)
        (g$get-directories$5166$Pld94 g$dir$5204$Pld94 '"*"))
       ((g$dir$5205$Pld94 g$pattern$5206$Pld94)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5205$Pld94
          g$pattern$5206$Pld94))))
   (g$change-extension$5167$Pld94
     g$change-extension$5233$Pld94
     (case-lambda
       ((g$path$5207$Pld94 g$extension$5208$Pld94)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5207$Pld94
          g$extension$5208$Pld94))))
   (g$path-combine$5168$Pld94
     g$path-combine$5234$Pld94
     (case-lambda
       ((g$path1$5209$Pld94 g$path2$5210$Pld94)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5209$Pld94
          g$path2$5210$Pld94))))
   (g$get-directory-name$5169$Pld94
     g$get-directory-name$5235$Pld94
     (case-lambda
       ((g$path$5211$Pld94)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5211$Pld94))))
   (g$get-extension$5170$Pld94
     g$get-extension$5236$Pld94
     (case-lambda
       ((g$path$5212$Pld94)
        (clr-call-internal 'path 'getextension '() g$path$5212$Pld94))))
   (g$get-filename$5171$Pld94
     g$get-filename$5237$Pld94
     (case-lambda
       ((g$path$5213$Pld94)
        (clr-call-internal 'path 'getfilename '() g$path$5213$Pld94))))
   (g$get-filename-without-extension$5172$Pld94
     g$get-filename-without-extension$5238$Pld94
     (case-lambda
       ((g$path$5214$Pld94)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5214$Pld94))))
   (g$get-full-path$5173$Pld94
     g$get-full-path$5239$Pld94
     (case-lambda
       ((g$path$5215$Pld94)
        (clr-call-internal 'path 'getfullpath '() g$path$5215$Pld94))))
   (g$get-path-root$5174$Pld94
     g$get-path-root$5240$Pld94
     (case-lambda
       ((g$path$5216$Pld94)
        (clr-call-internal 'path 'getpathroot '() g$path$5216$Pld94))))
   (g$get-random-filename$5175$Pld94
     g$get-random-filename$5241$Pld94
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5176$Pld94
     g$get-temp-filename$5242$Pld94
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5177$Pld94
     g$get-temp-path$5243$Pld94
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5178$Pld94
     g$path-rooted?$5244$Pld94
     (case-lambda
       ((g$path$5217$Pld94)
        (clr-call-internal 'path 'ispathrooted '() g$path$5217$Pld94))))
   (g$path-has-extension?$5179$Pld94
     g$path-has-extension?$5245$Pld94
     (case-lambda
       ((g$path$5218$Pld94)
        (clr-call-internal 'path 'hasextension '() g$path$5218$Pld94))))
   (g$clear-usings$5181$Pld94
     g$clear-usings$5246$Pld94
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5247$Pld94
     g$find$5338$Pld94
     (case-lambda
       ((g$proc$5266$Pld94 g$l$5267$Pld94)
        (if (null? g$l$5267$Pld94)
          '#f
          ((case-lambda
             ((g$e$5268$Pld94)
              (if (g$proc$5266$Pld94 g$e$5268$Pld94)
                g$e$5268$Pld94
                (g$find$5247$Pld94 g$proc$5266$Pld94 (cdr g$l$5267$Pld94)))))
           (car g$l$5267$Pld94))))))
   (g$partition$5248$Pld94
     g$partition$5339$Pld94
     (case-lambda
       ((g$proc$5269$Pld94 g$l$5270$Pld94)
        ((letrec ((g$f$5271$Pld94
                    (case-lambda
                      ((g$l$5272$Pld94 g$a$5273$Pld94 g$b$5274$Pld94)
                       (if (null? g$l$5272$Pld94)
                         (values
                           (reverse! g$a$5273$Pld94)
                           (reverse! g$b$5274$Pld94))
                         ((case-lambda
                            ((g$e$5275$Pld94)
                             (if (g$proc$5269$Pld94 g$e$5275$Pld94)
                               (g$f$5271$Pld94
                                 (cdr g$l$5272$Pld94)
                                 (cons g$e$5275$Pld94 g$a$5273$Pld94)
                                 g$b$5274$Pld94)
                               (g$f$5271$Pld94
                                 (cdr g$l$5272$Pld94)
                                 g$a$5273$Pld94
                                 (cons g$e$5275$Pld94 g$b$5274$Pld94)))))
                          (car g$l$5272$Pld94)))))))
           g$f$5271$Pld94)
         g$l$5270$Pld94
         '()
         '()))))
   (g$remp$5249$Pld94
     g$remp$5340$Pld94
     (case-lambda
       ((g$proc$5276$Pld94 g$l$5277$Pld94)
        ((letrec ((g$f$5278$Pld94
                    (case-lambda
                      ((g$l$5279$Pld94 g$a$5280$Pld94)
                       (if (null? g$l$5279$Pld94)
                         (reverse! g$a$5280$Pld94)
                         ((case-lambda
                            ((g$e$5281$Pld94)
                             (if (g$proc$5276$Pld94 g$e$5281$Pld94)
                               (g$f$5278$Pld94
                                 (cdr g$l$5279$Pld94)
                                 g$a$5280$Pld94)
                               (g$f$5278$Pld94
                                 (cdr g$l$5279$Pld94)
                                 (cons g$e$5281$Pld94 g$a$5280$Pld94)))))
                          (car g$l$5279$Pld94)))))))
           g$f$5278$Pld94)
         g$l$5277$Pld94
         '()))))
   (g$filter$5250$Pld94
     g$filter$5341$Pld94
     (case-lambda
       ((g$proc$5282$Pld94 g$l$5283$Pld94)
        ((letrec ((g$f$5284$Pld94
                    (case-lambda
                      ((g$l$5285$Pld94 g$a$5286$Pld94)
                       (if (null? g$l$5285$Pld94)
                         (reverse! g$a$5286$Pld94)
                         ((case-lambda
                            ((g$e$5287$Pld94)
                             (if (g$proc$5282$Pld94 g$e$5287$Pld94)
                               (g$f$5284$Pld94
                                 (cdr g$l$5285$Pld94)
                                 (cons g$e$5287$Pld94 g$a$5286$Pld94))
                               (g$f$5284$Pld94
                                 (cdr g$l$5285$Pld94)
                                 g$a$5286$Pld94))))
                          (car g$l$5285$Pld94)))))))
           g$f$5284$Pld94)
         g$l$5283$Pld94
         '()))))
   (g$assv$5251$Pld94
     g$assv$5342$Pld94
     (case-lambda
       ((g$obj$5288$Pld94 g$lst$5289$Pld94)
        (if (null? g$lst$5289$Pld94)
          '#f
          ((case-lambda
             ((g$c$5290$Pld94)
              (if (eqv? g$obj$5288$Pld94 (car g$c$5290$Pld94))
                g$c$5290$Pld94
                (g$assv$5251$Pld94 g$obj$5288$Pld94 (cdr g$lst$5289$Pld94)))))
           (car g$lst$5289$Pld94))))))
   (g$assoc$5252$Pld94
     g$assoc$5343$Pld94
     (case-lambda
       ((g$obj$5291$Pld94 g$lst$5292$Pld94)
        (if (null? g$lst$5292$Pld94)
          '#f
          ((case-lambda
             ((g$c$5293$Pld94)
              (if (equal? g$obj$5291$Pld94 (car g$c$5293$Pld94))
                g$c$5293$Pld94
                (g$assoc$5252$Pld94 g$obj$5291$Pld94 (cdr g$lst$5292$Pld94)))))
           (car g$lst$5292$Pld94))))))
   (g$assp$5253$Pld94
     g$assp$5344$Pld94
     (case-lambda
       ((g$p?$5294$Pld94 g$lst$5295$Pld94)
        (if (null? g$lst$5295$Pld94)
          '#f
          ((case-lambda
             ((g$c$5296$Pld94)
              (if (g$p?$5294$Pld94 (car g$c$5296$Pld94))
                g$c$5296$Pld94
                (g$assp$5253$Pld94 g$p?$5294$Pld94 (cdr g$lst$5295$Pld94)))))
           (car g$lst$5295$Pld94))))))
   (g$member$5254$Pld94
     g$member$5345$Pld94
     (case-lambda
       ((g$obj$5297$Pld94 g$lst$5298$Pld94)
        (if (null? g$lst$5298$Pld94)
          '#f
          (if (equal? g$obj$5297$Pld94 (car g$lst$5298$Pld94))
            g$lst$5298$Pld94
            (g$member$5254$Pld94 g$obj$5297$Pld94 (cdr g$lst$5298$Pld94)))))))
   (g$memp$5255$Pld94
     g$memp$5346$Pld94
     (case-lambda
       ((g$p?$5299$Pld94 g$lst$5300$Pld94)
        (if (null? g$lst$5300$Pld94)
          '#f
          (if (g$p?$5299$Pld94 (car g$lst$5300$Pld94))
            g$lst$5300$Pld94
            (g$memp$5255$Pld94 g$p?$5299$Pld94 (cdr g$lst$5300$Pld94)))))))
   (g$all-empty?$5256$Pld94
     g$all-empty?$5347$Pld94
     (case-lambda
       ((g$ls$5301$Pld94)
        ((case-lambda
           ((g$t$5302$Pld94)
            (if g$t$5302$Pld94
              g$t$5302$Pld94
              (begin
                '#f
                (if (null? (car g$ls$5301$Pld94))
                  (begin '#f (g$all-empty?$5256$Pld94 (cdr g$ls$5301$Pld94)))
                  '#f)))))
         (null? g$ls$5301$Pld94)))))
   (g$split$5257$Pld94
     g$split$5348$Pld94
     (case-lambda
       ((g$ls$5303$Pld94)
        (if (null? g$ls$5303$Pld94)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5257$Pld94 (cdr g$ls$5303$Pld94))))
            (case-lambda
              ((g$cars$5304$Pld94 g$cdrs$5305$Pld94)
               ((case-lambda
                  ((g$a$5306$Pld94)
                   (values
                     (cons (car g$a$5306$Pld94) g$cars$5304$Pld94)
                     (cons (cdr g$a$5306$Pld94) g$cdrs$5305$Pld94))))
                (car g$ls$5303$Pld94)))))))))
   (g$for-all$5258$Pld94
     g$for-all$5349$Pld94
     (case-lambda
       ((g$f$5307$Pld94 . g$args$5308$Pld94)
        (if (g$all-empty?$5256$Pld94 g$args$5308$Pld94)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5257$Pld94 g$args$5308$Pld94)))
            (case-lambda
              ((g$cars$5309$Pld94 g$cdrs$5310$Pld94)
               (if (apply g$f$5307$Pld94 g$cars$5309$Pld94)
                 (begin
                   '#f
                   (apply
                     g$for-all$5258$Pld94
                     g$f$5307$Pld94
                     g$cdrs$5310$Pld94))
                 '#f))))))))
   (g$exists$5259$Pld94
     g$exists$5350$Pld94
     (case-lambda
       ((g$f$5311$Pld94 . g$args$5312$Pld94)
        (if (g$all-empty?$5256$Pld94 g$args$5312$Pld94)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5257$Pld94 g$args$5312$Pld94)))
            (case-lambda
              ((g$cars$5313$Pld94 g$cdrs$5314$Pld94)
               ((case-lambda
                  ((g$t$5315$Pld94)
                   (if g$t$5315$Pld94
                     g$t$5315$Pld94
                     (begin
                       '#f
                       (apply
                         g$exists$5259$Pld94
                         g$f$5311$Pld94
                         g$cdrs$5314$Pld94)))))
                (apply g$f$5311$Pld94 g$cars$5313$Pld94)))))))))
   (g$cons*$5260$Pld94
     g$cons*$5351$Pld94
     (case-lambda
       ((g$a$5316$Pld94 . g$rest$5317$Pld94)
        ((letrec ((g$f$5318$Pld94
                    (case-lambda
                      ((g$a$5319$Pld94 g$rest$5320$Pld94)
                       (if (null? g$rest$5320$Pld94)
                         g$a$5319$Pld94
                         (cons
                           g$a$5319$Pld94
                           (g$f$5318$Pld94
                             (car g$rest$5320$Pld94)
                             (cdr g$rest$5320$Pld94))))))))
           g$f$5318$Pld94)
         g$a$5316$Pld94
         g$rest$5317$Pld94))))
   (g$fold-left$5261$Pld94
     g$fold-left$5352$Pld94
     (case-lambda
       ((g$combine$5321$Pld94
          g$nil$5322$Pld94
          g$list1$5323$Pld94
          .
          g$lists$5324$Pld94)
        (if (null? g$list1$5323$Pld94)
          g$nil$5322$Pld94
          (apply
            g$fold-left$5261$Pld94
            (g$cons*$5260$Pld94
              g$combine$5321$Pld94
              (apply
                g$combine$5321$Pld94
                (g$cons*$5260$Pld94
                  g$nil$5322$Pld94
                  (car g$list1$5323$Pld94)
                  (map car g$lists$5324$Pld94)))
              (cdr g$list1$5323$Pld94)
              (map cdr g$lists$5324$Pld94)))))))
   (g$fold-right$5262$Pld94
     g$fold-right$5353$Pld94
     (case-lambda
       ((g$combine$5325$Pld94
          g$nil$5326$Pld94
          g$list1$5327$Pld94
          .
          g$lists$5328$Pld94)
        (if (null? g$list1$5327$Pld94)
          g$nil$5326$Pld94
          (apply
            g$combine$5325$Pld94
            (append
              (list (car g$list1$5327$Pld94))
              (map car g$lists$5328$Pld94)
              (list
                (apply
                  g$fold-right$5262$Pld94
                  (g$cons*$5260$Pld94
                    g$combine$5325$Pld94
                    g$nil$5326$Pld94
                    (cdr g$list1$5327$Pld94)
                    (map cdr g$lists$5328$Pld94))))))))))
   (g$remove$5263$Pld94
     g$remove$5354$Pld94
     (case-lambda
       ((g$obj$5329$Pld94 g$list$5330$Pld94)
        (g$remp$5249$Pld94
          (case-lambda
            ((g$x$5331$Pld94) (equal? g$obj$5329$Pld94 g$x$5331$Pld94)))
          g$list$5330$Pld94))))
   (g$remv$5264$Pld94
     g$remv$5355$Pld94
     (case-lambda
       ((g$obj$5332$Pld94 g$list$5333$Pld94)
        (g$remp$5249$Pld94
          (case-lambda
            ((g$x$5334$Pld94) (eqv? g$obj$5332$Pld94 g$x$5334$Pld94)))
          g$list$5333$Pld94))))
   (g$remq$5265$Pld94
     g$remq$5356$Pld94
     (case-lambda
       ((g$obj$5335$Pld94 g$list$5336$Pld94)
        (g$remp$5249$Pld94
          (case-lambda ((g$x$5337$Pld94) (eq? g$obj$5335$Pld94 g$x$5337$Pld94)))
          g$list$5336$Pld94)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5357$Pld94
     g$native-endianness$5468$Pld94
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5358$Pld94
     g$bytevector-u16-ref$5469$Pld94
     (case-lambda
       ((g$bytevector$5386$Pld94 g$k$5387$Pld94 g$endianness$5388$Pld94)
        (bytevector-uint-ref
          g$bytevector$5386$Pld94
          g$k$5387$Pld94
          g$endianness$5388$Pld94
          '2))))
   (g$bytevector-s16-ref$5359$Pld94
     g$bytevector-s16-ref$5470$Pld94
     (case-lambda
       ((g$bytevector$5389$Pld94 g$k$5390$Pld94 g$endianness$5391$Pld94)
        (bytevector-sint-ref
          g$bytevector$5389$Pld94
          g$k$5390$Pld94
          g$endianness$5391$Pld94
          '2))))
   (g$bytevector-u16-native-ref$5360$Pld94
     g$bytevector-u16-native-ref$5471$Pld94
     (case-lambda
       ((g$bytevector$5392$Pld94 g$k$5393$Pld94)
        (bytevector-uint-ref
          g$bytevector$5392$Pld94
          g$k$5393$Pld94
          (g$native-endianness$5357$Pld94)
          '2))))
   (g$bytevector-s16-native-ref$5361$Pld94
     g$bytevector-s16-native-ref$5472$Pld94
     (case-lambda
       ((g$bytevector$5394$Pld94 g$k$5395$Pld94)
        (bytevector-sint-ref
          g$bytevector$5394$Pld94
          g$k$5395$Pld94
          (g$native-endianness$5357$Pld94)
          '2))))
   (g$bytevector-u16-set!$5362$Pld94
     g$bytevector-u16-set!$5473$Pld94
     (case-lambda
       ((g$bytevector$5396$Pld94
          g$k$5397$Pld94
          g$n$5398$Pld94
          g$endianness$5399$Pld94)
        (bytevector-uint-ref
          g$bytevector$5396$Pld94
          g$k$5397$Pld94
          g$endianness$5399$Pld94
          '2))))
   (g$bytevector-s16-set!$5363$Pld94
     g$bytevector-s16-set!$5474$Pld94
     (case-lambda
       ((g$bytevector$5400$Pld94
          g$k$5401$Pld94
          g$n$5402$Pld94
          g$endianness$5403$Pld94)
        (bytevector-sint-ref
          g$bytevector$5400$Pld94
          g$k$5401$Pld94
          g$endianness$5403$Pld94
          '2))))
   (g$bytevector-u16-native-set!$5364$Pld94
     g$bytevector-u16-native-set!$5475$Pld94
     (case-lambda
       ((g$bytevector$5404$Pld94 g$k$5405$Pld94 g$n$5406$Pld94)
        (bytevector-uint-ref
          g$bytevector$5404$Pld94
          g$k$5405$Pld94
          (g$native-endianness$5357$Pld94)
          '2))))
   (g$bytevector-s16-native-set!$5365$Pld94
     g$bytevector-s16-native-set!$5476$Pld94
     (case-lambda
       ((g$bytevector$5407$Pld94 g$k$5408$Pld94 g$n$5409$Pld94)
        (bytevector-sint-ref
          g$bytevector$5407$Pld94
          g$k$5408$Pld94
          (g$native-endianness$5357$Pld94)
          '2))))
   (g$bytevector-u32-ref$5366$Pld94
     g$bytevector-u32-ref$5477$Pld94
     (case-lambda
       ((g$bytevector$5410$Pld94 g$k$5411$Pld94 g$endianness$5412$Pld94)
        (bytevector-uint-ref
          g$bytevector$5410$Pld94
          g$k$5411$Pld94
          g$endianness$5412$Pld94
          '4))))
   (g$bytevector-s32-ref$5367$Pld94
     g$bytevector-s32-ref$5478$Pld94
     (case-lambda
       ((g$bytevector$5413$Pld94 g$k$5414$Pld94 g$endianness$5415$Pld94)
        (bytevector-sint-ref
          g$bytevector$5413$Pld94
          g$k$5414$Pld94
          g$endianness$5415$Pld94
          '4))))
   (g$bytevector-u32-native-ref$5368$Pld94
     g$bytevector-u32-native-ref$5479$Pld94
     (case-lambda
       ((g$bytevector$5416$Pld94 g$k$5417$Pld94)
        (bytevector-uint-ref
          g$bytevector$5416$Pld94
          g$k$5417$Pld94
          (g$native-endianness$5357$Pld94)
          '4))))
   (g$bytevector-s32-native-ref$5369$Pld94
     g$bytevector-s32-native-ref$5480$Pld94
     (case-lambda
       ((g$bytevector$5418$Pld94 g$k$5419$Pld94)
        (bytevector-sint-ref
          g$bytevector$5418$Pld94
          g$k$5419$Pld94
          (g$native-endianness$5357$Pld94)
          '4))))
   (g$bytevector-u32-set!$5370$Pld94
     g$bytevector-u32-set!$5481$Pld94
     (case-lambda
       ((g$bytevector$5420$Pld94
          g$k$5421$Pld94
          g$n$5422$Pld94
          g$endianness$5423$Pld94)
        (bytevector-uint-ref
          g$bytevector$5420$Pld94
          g$k$5421$Pld94
          g$endianness$5423$Pld94
          '4))))
   (g$bytevector-s32-set!$5371$Pld94
     g$bytevector-s32-set!$5482$Pld94
     (case-lambda
       ((g$bytevector$5424$Pld94
          g$k$5425$Pld94
          g$n$5426$Pld94
          g$endianness$5427$Pld94)
        (bytevector-sint-ref
          g$bytevector$5424$Pld94
          g$k$5425$Pld94
          g$endianness$5427$Pld94
          '4))))
   (g$bytevector-u32-native-set!$5372$Pld94
     g$bytevector-u32-native-set!$5483$Pld94
     (case-lambda
       ((g$bytevector$5428$Pld94 g$k$5429$Pld94 g$n$5430$Pld94)
        (bytevector-uint-ref
          g$bytevector$5428$Pld94
          g$k$5429$Pld94
          (g$native-endianness$5357$Pld94)
          '4))))
   (g$bytevector-s32-native-set!$5373$Pld94
     g$bytevector-s32-native-set!$5484$Pld94
     (case-lambda
       ((g$bytevector$5431$Pld94 g$k$5432$Pld94 g$n$5433$Pld94)
        (bytevector-sint-ref
          g$bytevector$5431$Pld94
          g$k$5432$Pld94
          (g$native-endianness$5357$Pld94)
          '4))))
   (g$bytevector-u64-ref$5374$Pld94
     g$bytevector-u64-ref$5485$Pld94
     (case-lambda
       ((g$bytevector$5434$Pld94 g$k$5435$Pld94 g$endianness$5436$Pld94)
        (bytevector-uint-ref
          g$bytevector$5434$Pld94
          g$k$5435$Pld94
          g$endianness$5436$Pld94
          '8))))
   (g$bytevector-s64-ref$5375$Pld94
     g$bytevector-s64-ref$5486$Pld94
     (case-lambda
       ((g$bytevector$5437$Pld94 g$k$5438$Pld94 g$endianness$5439$Pld94)
        (bytevector-sint-ref
          g$bytevector$5437$Pld94
          g$k$5438$Pld94
          g$endianness$5439$Pld94
          '8))))
   (g$bytevector-u64-native-ref$5376$Pld94
     g$bytevector-u64-native-ref$5487$Pld94
     (case-lambda
       ((g$bytevector$5440$Pld94 g$k$5441$Pld94)
        (bytevector-uint-ref
          g$bytevector$5440$Pld94
          g$k$5441$Pld94
          (g$native-endianness$5357$Pld94)
          '8))))
   (g$bytevector-s64-native-ref$5377$Pld94
     g$bytevector-s64-native-ref$5488$Pld94
     (case-lambda
       ((g$bytevector$5442$Pld94 g$k$5443$Pld94)
        (bytevector-sint-ref
          g$bytevector$5442$Pld94
          g$k$5443$Pld94
          (g$native-endianness$5357$Pld94)
          '8))))
   (g$bytevector-u64-set!$5378$Pld94
     g$bytevector-u64-set!$5489$Pld94
     (case-lambda
       ((g$bytevector$5444$Pld94
          g$k$5445$Pld94
          g$n$5446$Pld94
          g$endianness$5447$Pld94)
        (bytevector-uint-ref
          g$bytevector$5444$Pld94
          g$k$5445$Pld94
          g$endianness$5447$Pld94
          '8))))
   (g$bytevector-s64-set!$5379$Pld94
     g$bytevector-s64-set!$5490$Pld94
     (case-lambda
       ((g$bytevector$5448$Pld94
          g$k$5449$Pld94
          g$n$5450$Pld94
          g$endianness$5451$Pld94)
        (bytevector-sint-ref
          g$bytevector$5448$Pld94
          g$k$5449$Pld94
          g$endianness$5451$Pld94
          '8))))
   (g$bytevector-u64-native-set!$5380$Pld94
     g$bytevector-u64-native-set!$5491$Pld94
     (case-lambda
       ((g$bytevector$5452$Pld94 g$k$5453$Pld94 g$n$5454$Pld94)
        (bytevector-uint-ref
          g$bytevector$5452$Pld94
          g$k$5453$Pld94
          (g$native-endianness$5357$Pld94)
          '8))))
   (g$bytevector-s64-native-set!$5381$Pld94
     g$bytevector-s64-native-set!$5492$Pld94
     (case-lambda
       ((g$bytevector$5455$Pld94 g$k$5456$Pld94 g$n$5457$Pld94)
        (bytevector-sint-ref
          g$bytevector$5455$Pld94
          g$k$5456$Pld94
          (g$native-endianness$5357$Pld94)
          '8))))
   (g$bytevector-ieee-single-native-ref$5382$Pld94
     g$bytevector-ieee-single-native-ref$5493$Pld94
     (case-lambda
       ((g$bytevector$5458$Pld94 g$k$5459$Pld94)
        (bytevector-ieee-single-ref
          g$bytevector$5458$Pld94
          g$k$5459$Pld94
          (g$native-endianness$5357$Pld94)))))
   (g$bytevector-ieee-double-native-ref$5383$Pld94
     g$bytevector-ieee-double-native-ref$5494$Pld94
     (case-lambda
       ((g$bytevector$5460$Pld94 g$k$5461$Pld94)
        (bytevector-ieee-double-ref
          g$bytevector$5460$Pld94
          g$k$5461$Pld94
          (g$native-endianness$5357$Pld94)))))
   (g$bytevector-ieee-single-native-set!$5384$Pld94
     g$bytevector-ieee-single-native-set!$5495$Pld94
     (case-lambda
       ((g$bytevector$5462$Pld94 g$k$5463$Pld94 g$x$5464$Pld94)
        (bytevector-ieee-single-set!
          g$bytevector$5462$Pld94
          g$k$5463$Pld94
          g$x$5464$Pld94
          (g$native-endianness$5357$Pld94)))))
   (g$bytevector-ieee-double-native-set!$5385$Pld94
     g$bytevector-ieee-double-native-set!$5496$Pld94
     (case-lambda
       ((g$bytevector$5465$Pld94 g$k$5466$Pld94 g$x$5467$Pld94)
        (bytevector-ieee-double-set!
          g$bytevector$5465$Pld94
          g$k$5466$Pld94
          g$x$5467$Pld94
          (g$native-endianness$5357$Pld94))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme enums) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6266$5497$Pld94
     g$6266$5592$Pld94
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6269$Pld94
       '#f
       '#f
       '#()))
   (g$6268$5498$Pld94 g$6268$5593$Pld94 '#f)
   (g$6267$5499$Pld94
     g$6267$5594$Pld94
     (make-record-constructor-descriptor
       g$6266$5497$Pld94
       '#f
       g$6268$5498$Pld94))
   (g$&condition?$5500$Pld94
     g$&condition?$5595$Pld94
     (record-predicate g$6266$5497$Pld94))
   (g$make-&condition$5501$Pld94
     g$make-&condition$5596$Pld94
     (record-constructor g$6267$5499$Pld94))
   (g$&condition-rtd$5502$Pld94
     g$&condition-rtd$5597$Pld94
     g$6266$5497$Pld94)
   (g$&condition-rcd$5503$Pld94
     g$&condition-rcd$5598$Pld94
     g$6267$5499$Pld94)
   (g$6282$5504$Pld94
     g$6282$5599$Pld94
     (make-record-type-descriptor
       '&message
       g$6266$5497$Pld94
       'g$6285$Pld94
       '#f
       '#f
       '#((immutable message))))
   (g$6284$5505$Pld94 g$6284$5600$Pld94 '#f)
   (g$6283$5506$Pld94
     g$6283$5601$Pld94
     (make-record-constructor-descriptor
       g$6282$5504$Pld94
       g$6267$5499$Pld94
       g$6284$5505$Pld94))
   (g$6281$5507$Pld94
     g$6281$5602$Pld94
     (record-predicate g$6282$5504$Pld94))
   (g$make-message-condition$5508$Pld94
     g$make-message-condition$5603$Pld94
     (record-constructor g$6283$5506$Pld94))
   (g$6280$5509$Pld94
     g$6280$5604$Pld94
     (record-accessor g$6282$5504$Pld94 '0))
   (g$message-condition?$5510$Pld94
     g$message-condition?$5605$Pld94
     (condition-predicate g$6282$5504$Pld94))
   (g$condition-message$5511$Pld94
     g$condition-message$5606$Pld94
     (condition-accessor g$6282$5504$Pld94 g$6280$5509$Pld94))
   (g$6298$5512$Pld94
     g$6298$5607$Pld94
     (make-record-type-descriptor
       '&warning
       g$6266$5497$Pld94
       'g$6301$Pld94
       '#f
       '#f
       '#()))
   (g$6300$5513$Pld94 g$6300$5608$Pld94 '#f)
   (g$6299$5514$Pld94
     g$6299$5609$Pld94
     (make-record-constructor-descriptor
       g$6298$5512$Pld94
       g$6267$5499$Pld94
       g$6300$5513$Pld94))
   (g$6297$5515$Pld94
     g$6297$5610$Pld94
     (record-predicate g$6298$5512$Pld94))
   (g$make-warning$5516$Pld94
     g$make-warning$5611$Pld94
     (record-constructor g$6299$5514$Pld94))
   (g$warning?$5517$Pld94
     g$warning?$5612$Pld94
     (condition-predicate g$6298$5512$Pld94))
   (g$6312$5518$Pld94
     g$6312$5613$Pld94
     (make-record-type-descriptor
       '&serious
       g$6266$5497$Pld94
       'g$6315$Pld94
       '#f
       '#f
       '#()))
   (g$6314$5519$Pld94 g$6314$5614$Pld94 '#f)
   (g$6313$5520$Pld94
     g$6313$5615$Pld94
     (make-record-constructor-descriptor
       g$6312$5518$Pld94
       g$6267$5499$Pld94
       g$6314$5519$Pld94))
   (g$6311$5521$Pld94
     g$6311$5616$Pld94
     (record-predicate g$6312$5518$Pld94))
   (g$make-serious-condition$5522$Pld94
     g$make-serious-condition$5617$Pld94
     (record-constructor g$6313$5520$Pld94))
   (g$serious-condition?$5523$Pld94
     g$serious-condition?$5618$Pld94
     (condition-predicate g$6312$5518$Pld94))
   (g$6326$5524$Pld94
     g$6326$5619$Pld94
     (make-record-type-descriptor
       '&error
       g$6312$5518$Pld94
       'g$6329$Pld94
       '#f
       '#f
       '#()))
   (g$6328$5525$Pld94 g$6328$5620$Pld94 '#f)
   (g$6327$5526$Pld94
     g$6327$5621$Pld94
     (make-record-constructor-descriptor
       g$6326$5524$Pld94
       g$6313$5520$Pld94
       g$6328$5525$Pld94))
   (g$6325$5527$Pld94
     g$6325$5622$Pld94
     (record-predicate g$6326$5524$Pld94))
   (g$make-error$5528$Pld94
     g$make-error$5623$Pld94
     (record-constructor g$6327$5526$Pld94))
   (g$error?$5529$Pld94
     g$error?$5624$Pld94
     (condition-predicate g$6326$5524$Pld94))
   (g$6340$5530$Pld94
     g$6340$5625$Pld94
     (make-record-type-descriptor
       '&violation
       g$6312$5518$Pld94
       'g$6343$Pld94
       '#f
       '#f
       '#()))
   (g$6342$5531$Pld94 g$6342$5626$Pld94 '#f)
   (g$6341$5532$Pld94
     g$6341$5627$Pld94
     (make-record-constructor-descriptor
       g$6340$5530$Pld94
       g$6313$5520$Pld94
       g$6342$5531$Pld94))
   (g$6339$5533$Pld94
     g$6339$5628$Pld94
     (record-predicate g$6340$5530$Pld94))
   (g$make-violation$5534$Pld94
     g$make-violation$5629$Pld94
     (record-constructor g$6341$5532$Pld94))
   (g$violation?$5535$Pld94
     g$violation?$5630$Pld94
     (condition-predicate g$6340$5530$Pld94))
   (g$6354$5536$Pld94
     g$6354$5631$Pld94
     (make-record-type-descriptor
       '&assertion
       g$6340$5530$Pld94
       'g$6357$Pld94
       '#f
       '#f
       '#()))
   (g$6356$5537$Pld94 g$6356$5632$Pld94 '#f)
   (g$6355$5538$Pld94
     g$6355$5633$Pld94
     (make-record-constructor-descriptor
       g$6354$5536$Pld94
       g$6341$5532$Pld94
       g$6356$5537$Pld94))
   (g$6353$5539$Pld94
     g$6353$5634$Pld94
     (record-predicate g$6354$5536$Pld94))
   (g$make-assertion-violation$5540$Pld94
     g$make-assertion-violation$5635$Pld94
     (record-constructor g$6355$5538$Pld94))
   (g$assertion-violation?$5541$Pld94
     g$assertion-violation?$5636$Pld94
     (condition-predicate g$6354$5536$Pld94))
   (g$6369$5542$Pld94
     g$6369$5637$Pld94
     (make-record-type-descriptor
       '&irritants
       g$6266$5497$Pld94
       'g$6372$Pld94
       '#f
       '#f
       '#((immutable irritants))))
   (g$6371$5543$Pld94 g$6371$5638$Pld94 '#f)
   (g$6370$5544$Pld94
     g$6370$5639$Pld94
     (make-record-constructor-descriptor
       g$6369$5542$Pld94
       g$6267$5499$Pld94
       g$6371$5543$Pld94))
   (g$6368$5545$Pld94
     g$6368$5640$Pld94
     (record-predicate g$6369$5542$Pld94))
   (g$make-irritants-condition$5546$Pld94
     g$make-irritants-condition$5641$Pld94
     (record-constructor g$6370$5544$Pld94))
   (g$6367$5547$Pld94
     g$6367$5642$Pld94
     (record-accessor g$6369$5542$Pld94 '0))
   (g$irritants-condition?$5548$Pld94
     g$irritants-condition?$5643$Pld94
     (condition-predicate g$6369$5542$Pld94))
   (g$condition-irritants$5549$Pld94
     g$condition-irritants$5644$Pld94
     (condition-accessor g$6369$5542$Pld94 g$6367$5547$Pld94))
   (g$6386$5550$Pld94
     g$6386$5645$Pld94
     (make-record-type-descriptor
       '&who
       g$6266$5497$Pld94
       'g$6389$Pld94
       '#f
       '#f
       '#((immutable who))))
   (g$6388$5551$Pld94 g$6388$5646$Pld94 '#f)
   (g$6387$5552$Pld94
     g$6387$5647$Pld94
     (make-record-constructor-descriptor
       g$6386$5550$Pld94
       g$6267$5499$Pld94
       g$6388$5551$Pld94))
   (g$6385$5553$Pld94
     g$6385$5648$Pld94
     (record-predicate g$6386$5550$Pld94))
   (g$make-who-condition$5554$Pld94
     g$make-who-condition$5649$Pld94
     (record-constructor g$6387$5552$Pld94))
   (g$6384$5555$Pld94
     g$6384$5650$Pld94
     (record-accessor g$6386$5550$Pld94 '0))
   (g$who-condition?$5556$Pld94
     g$who-condition?$5651$Pld94
     (condition-predicate g$6386$5550$Pld94))
   (g$condition-who$5557$Pld94
     g$condition-who$5652$Pld94
     (condition-accessor g$6386$5550$Pld94 g$6384$5555$Pld94))
   (g$6402$5558$Pld94
     g$6402$5653$Pld94
     (make-record-type-descriptor
       '&non-continuable
       g$6340$5530$Pld94
       'g$6405$Pld94
       '#f
       '#f
       '#()))
   (g$6404$5559$Pld94 g$6404$5654$Pld94 '#f)
   (g$6403$5560$Pld94
     g$6403$5655$Pld94
     (make-record-constructor-descriptor
       g$6402$5558$Pld94
       g$6341$5532$Pld94
       g$6404$5559$Pld94))
   (g$6401$5561$Pld94
     g$6401$5656$Pld94
     (record-predicate g$6402$5558$Pld94))
   (g$make-non-continuable-violation$5562$Pld94
     g$make-non-continuable-violation$5657$Pld94
     (record-constructor g$6403$5560$Pld94))
   (g$non-continuable-violation?$5563$Pld94
     g$non-continuable-violation?$5658$Pld94
     (condition-predicate g$6402$5558$Pld94))
   (g$6416$5564$Pld94
     g$6416$5659$Pld94
     (make-record-type-descriptor
       '&implementation-restriction
       g$6340$5530$Pld94
       'g$6419$Pld94
       '#f
       '#f
       '#()))
   (g$6418$5565$Pld94 g$6418$5660$Pld94 '#f)
   (g$6417$5566$Pld94
     g$6417$5661$Pld94
     (make-record-constructor-descriptor
       g$6416$5564$Pld94
       g$6341$5532$Pld94
       g$6418$5565$Pld94))
   (g$6415$5567$Pld94
     g$6415$5662$Pld94
     (record-predicate g$6416$5564$Pld94))
   (g$make-implementation-restriction-violation$5568$Pld94
     g$make-implementation-restriction-violation$5663$Pld94
     (record-constructor g$6417$5566$Pld94))
   (g$implementation-restriction-violation?$5569$Pld94
     g$implementation-restriction-violation?$5664$Pld94
     (condition-predicate g$6416$5564$Pld94))
   (g$6430$5570$Pld94
     g$6430$5665$Pld94
     (make-record-type-descriptor
       '&lexical
       g$6340$5530$Pld94
       'g$6433$Pld94
       '#f
       '#f
       '#()))
   (g$6432$5571$Pld94 g$6432$5666$Pld94 '#f)
   (g$6431$5572$Pld94
     g$6431$5667$Pld94
     (make-record-constructor-descriptor
       g$6430$5570$Pld94
       g$6341$5532$Pld94
       g$6432$5571$Pld94))
   (g$6429$5573$Pld94
     g$6429$5668$Pld94
     (record-predicate g$6430$5570$Pld94))
   (g$make-lexical-violation$5574$Pld94
     g$make-lexical-violation$5669$Pld94
     (record-constructor g$6431$5572$Pld94))
   (g$lexical-violation?$5575$Pld94
     g$lexical-violation?$5670$Pld94
     (condition-predicate g$6430$5570$Pld94))
   (g$6446$5576$Pld94
     g$6446$5671$Pld94
     (make-record-type-descriptor
       '&syntax
       g$6340$5530$Pld94
       'g$6449$Pld94
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6448$5577$Pld94 g$6448$5672$Pld94 '#f)
   (g$6447$5578$Pld94
     g$6447$5673$Pld94
     (make-record-constructor-descriptor
       g$6446$5576$Pld94
       g$6341$5532$Pld94
       g$6448$5577$Pld94))
   (g$6445$5579$Pld94
     g$6445$5674$Pld94
     (record-predicate g$6446$5576$Pld94))
   (g$make-syntax-violation$5580$Pld94
     g$make-syntax-violation$5675$Pld94
     (record-constructor g$6447$5578$Pld94))
   (g$6443$5581$Pld94
     g$6443$5676$Pld94
     (record-accessor g$6446$5576$Pld94 '0))
   (g$6444$5582$Pld94
     g$6444$5677$Pld94
     (record-accessor g$6446$5576$Pld94 '1))
   (g$syntax-violation?$5583$Pld94
     g$syntax-violation?$5678$Pld94
     (condition-predicate g$6446$5576$Pld94))
   (g$syntax-violation-form$5584$Pld94
     g$syntax-violation-form$5679$Pld94
     (condition-accessor g$6446$5576$Pld94 g$6443$5581$Pld94))
   (g$syntax-violation-subform$5585$Pld94
     g$syntax-violation-subform$5680$Pld94
     (condition-accessor g$6446$5576$Pld94 g$6444$5582$Pld94))
   (g$6464$5586$Pld94
     g$6464$5681$Pld94
     (make-record-type-descriptor
       '&undefined
       g$6340$5530$Pld94
       'g$6467$Pld94
       '#f
       '#f
       '#()))
   (g$6466$5587$Pld94 g$6466$5682$Pld94 '#f)
   (g$6465$5588$Pld94
     g$6465$5683$Pld94
     (make-record-constructor-descriptor
       g$6464$5586$Pld94
       g$6341$5532$Pld94
       g$6466$5587$Pld94))
   (g$6463$5589$Pld94
     g$6463$5684$Pld94
     (record-predicate g$6464$5586$Pld94))
   (g$make-undefined-violation$5590$Pld94
     g$make-undefined-violation$5685$Pld94
     (record-constructor g$6465$5588$Pld94))
   (g$undefined-violation?$5591$Pld94
     g$undefined-violation?$5686$Pld94
     (condition-predicate g$6464$5586$Pld94)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5687$Pld94
     g$append!$5693$Pld94
     (case-lambda
       ((g$a$5688$Pld94 . g$b$5689$Pld94)
        (if (null? g$a$5688$Pld94)
          g$b$5689$Pld94
          (if (null? g$b$5689$Pld94)
            g$a$5688$Pld94
            (begin
              ((letrec ((g$f$5690$Pld94
                          (case-lambda
                            ((g$a$5691$Pld94)
                             ((case-lambda
                                ((g$n$5692$Pld94)
                                 (if (null? g$n$5692$Pld94)
                                   (set-cdr! g$a$5691$Pld94 g$b$5689$Pld94)
                                   (g$f$5690$Pld94 g$n$5692$Pld94))))
                              (cdr g$a$5691$Pld94))))))
                 g$f$5690$Pld94)
               g$a$5688$Pld94)
              g$a$5688$Pld94)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5694$Pld94
     g$sign$5705$Pld94
     (case-lambda
       ((g$n$5698$Pld94)
        (if (> g$n$5698$Pld94 '0) '1 (if (< g$n$5698$Pld94 '0) '-1 '0)))))
   (g$quotient$5695$Pld94
     g$quotient$5706$Pld94
     (case-lambda
       ((g$n1$5699$Pld94 g$n2$5700$Pld94)
        (* (g$sign$5694$Pld94 g$n1$5699$Pld94)
           (g$sign$5694$Pld94 g$n2$5700$Pld94)
           (div (abs g$n1$5699$Pld94) (abs g$n2$5700$Pld94))))))
   (g$remainder$5696$Pld94
     g$remainder$5707$Pld94
     (case-lambda
       ((g$n1$5701$Pld94 g$n2$5702$Pld94)
        (* (g$sign$5694$Pld94 g$n1$5701$Pld94)
           (mod (abs g$n1$5701$Pld94) (abs g$n2$5702$Pld94))))))
   (g$modulo$5697$Pld94
     g$modulo$5708$Pld94
     (case-lambda
       ((g$n1$5703$Pld94 g$n2$5704$Pld94)
        (* (g$sign$5694$Pld94 g$n2$5704$Pld94)
           (mod (* (g$sign$5694$Pld94 g$n2$5704$Pld94) g$n1$5703$Pld94)
                (abs g$n2$5704$Pld94)))))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5709$Pld94
     g$split$5735$Pld94
     (case-lambda
       ((g$ls$5712$Pld94)
        ((letrec ((g$loop$5713$Pld94
                    (case-lambda
                      ((g$rest$5714$Pld94 g$left$5715$Pld94 g$right$5716$Pld94)
                       (if (null? g$rest$5714$Pld94)
                         (cons g$left$5715$Pld94 g$right$5716$Pld94)
                         (if (null? (cdr g$rest$5714$Pld94))
                           (cons
                             (cons (car g$rest$5714$Pld94) g$left$5715$Pld94)
                             g$right$5716$Pld94)
                           (g$loop$5713$Pld94
                             (g$cddr$4882$Pld94 g$rest$5714$Pld94)
                             (cons (car g$rest$5714$Pld94) g$left$5715$Pld94)
                             (cons
                               (g$cadr$4880$Pld94 g$rest$5714$Pld94)
                               g$right$5716$Pld94))))))))
           g$loop$5713$Pld94)
         g$ls$5712$Pld94
         '()
         '()))))
   (g$reverse-it$5710$Pld94
     g$reverse-it$5736$Pld94
     (case-lambda
       ((g$head$5717$Pld94 g$tail$5718$Pld94)
        (if (null? g$head$5717$Pld94)
          g$tail$5718$Pld94
          ((case-lambda
             ((g$hd$5719$Pld94 g$tl$5720$Pld94)
              (g$reverse-it$5710$Pld94
                g$tl$5720$Pld94
                (cons g$hd$5719$Pld94 g$tail$5718$Pld94))))
           (car g$head$5717$Pld94)
           (cdr g$head$5717$Pld94))))))
   (g$list-sort$5711$Pld94
     g$list-sort$5737$Pld94
     (case-lambda
       ((g$precedes?$5721$Pld94 g$ls$5722$Pld94)
        ((case-lambda
           ((g$merge$5723$Pld94)
            ((case-lambda
               (()
                (if (null? g$ls$5722$Pld94)
                  '()
                  ((letrec ((g$helper$5724$Pld94
                              (case-lambda
                                ((g$piece$5725$Pld94)
                                 (if (null? (cdr g$piece$5725$Pld94))
                                   g$piece$5725$Pld94
                                   ((case-lambda
                                      ((g$parts$5726$Pld94)
                                       (g$merge$5723$Pld94
                                         (g$helper$5724$Pld94
                                           (car g$parts$5726$Pld94))
                                         (g$helper$5724$Pld94
                                           (cdr g$parts$5726$Pld94)))))
                                    (g$split$5709$Pld94
                                      g$piece$5725$Pld94)))))))
                     g$helper$5724$Pld94)
                   g$ls$5722$Pld94)))))))
         (case-lambda
           ((g$list-1$5727$Pld94 g$list-2$5728$Pld94)
            ((letrec ((g$loop$5729$Pld94
                        (case-lambda
                          ((g$source-1$5730$Pld94
                             g$source-2$5731$Pld94
                             g$so-far$5732$Pld94)
                           (if (null? g$source-1$5730$Pld94)
                             (g$reverse-it$5710$Pld94
                               g$so-far$5732$Pld94
                               g$source-2$5731$Pld94)
                             (if (null? g$source-2$5731$Pld94)
                               (g$reverse-it$5710$Pld94
                                 g$so-far$5732$Pld94
                                 g$source-1$5730$Pld94)
                               ((case-lambda
                                  ((g$car-1$5733$Pld94 g$car-2$5734$Pld94)
                                   (if (g$precedes?$5721$Pld94
                                         g$car-2$5734$Pld94
                                         g$car-1$5733$Pld94)
                                     (g$loop$5729$Pld94
                                       g$source-1$5730$Pld94
                                       (cdr g$source-2$5731$Pld94)
                                       (cons
                                         g$car-2$5734$Pld94
                                         g$so-far$5732$Pld94))
                                     (g$loop$5729$Pld94
                                       g$source-2$5731$Pld94
                                       (cdr g$source-1$5730$Pld94)
                                       (cons
                                         g$car-1$5733$Pld94
                                         g$so-far$5732$Pld94)))))
                                (car g$source-1$5730$Pld94)
                                (car g$source-2$5731$Pld94))))))))
               g$loop$5729$Pld94)
             g$list-1$5727$Pld94
             g$list-2$5728$Pld94
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5775$Pld94
     g$bitwise-if$5826$Pld94
     (case-lambda
       ((g$ei1$5783$Pld94 g$ei2$5784$Pld94 g$ei3$5785$Pld94)
        (bitwise-ior
          (bitwise-and g$ei1$5783$Pld94 g$ei2$5784$Pld94)
          (bitwise-and (bitwise-not g$ei1$5783$Pld94) g$ei3$5785$Pld94)))))
   (g$bitwise-copy-bit$5776$Pld94
     g$bitwise-copy-bit$5827$Pld94
     (case-lambda
       ((g$ei1$5786$Pld94 g$ei2$5787$Pld94 g$ei3$5788$Pld94)
        ((case-lambda
           ((g$mask$5789$Pld94)
            ((case-lambda
               (()
                (g$bitwise-if$5775$Pld94
                  g$mask$5789$Pld94
                  (g$bitwise-arithmetic-shift-left$5779$Pld94
                    g$ei3$5788$Pld94
                    g$ei2$5787$Pld94)
                  g$ei1$5786$Pld94))))))
         (g$bitwise-arithmetic-shift-left$5779$Pld94 '1 g$ei2$5787$Pld94)))))
   (g$bitwise-bit-field$5777$Pld94
     g$bitwise-bit-field$5828$Pld94
     (case-lambda
       ((g$ei1$5790$Pld94 g$ei2$5791$Pld94 g$ei3$5792$Pld94)
        ((case-lambda
           ((g$mask$5793$Pld94)
            (g$bitwise-arithmetic-shift-right$5780$Pld94
              (bitwise-and g$ei1$5790$Pld94 g$mask$5793$Pld94)
              g$ei2$5791$Pld94)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5779$Pld94
             '-1
             g$ei3$5792$Pld94))))))
   (g$bitwise-copy-bit-field$5778$Pld94
     g$bitwise-copy-bit-field$5829$Pld94
     (case-lambda
       ((g$ei1$5794$Pld94 g$ei2$5795$Pld94 g$ei3$5796$Pld94 g$ei4$5797$Pld94)
        ((case-lambda
           ((g$to$5798$Pld94)
            ((case-lambda
               ((g$start$5799$Pld94)
                ((case-lambda
                   ((g$end$5800$Pld94)
                    ((case-lambda
                       ((g$from$5801$Pld94)
                        ((case-lambda
                           ((g$mask1$5802$Pld94)
                            ((case-lambda
                               ((g$mask2$5803$Pld94)
                                ((case-lambda
                                   ((g$mask$5804$Pld94)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5775$Pld94
                                          g$mask$5804$Pld94
                                          (g$bitwise-arithmetic-shift-left$5779$Pld94
                                            g$from$5801$Pld94
                                            g$start$5799$Pld94)
                                          g$to$5798$Pld94))))))
                                 (bitwise-and
                                   g$mask1$5802$Pld94
                                   g$mask2$5803$Pld94))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5779$Pld94
                                 '-1
                                 g$end$5800$Pld94)))))
                         (g$bitwise-arithmetic-shift-left$5779$Pld94
                           '-1
                           g$start$5799$Pld94))))
                     g$ei4$5797$Pld94)))
                 g$ei3$5796$Pld94)))
             g$ei2$5795$Pld94)))
         g$ei1$5794$Pld94))))
   (g$bitwise-arithmetic-shift-left$5779$Pld94
     g$bitwise-arithmetic-shift-left$5830$Pld94
     (case-lambda
       ((g$ei1$5805$Pld94 g$ei2$5806$Pld94)
        (bitwise-arithmetic-shift g$ei1$5805$Pld94 g$ei2$5806$Pld94))))
   (g$bitwise-arithmetic-shift-right$5780$Pld94
     g$bitwise-arithmetic-shift-right$5831$Pld94
     (case-lambda
       ((g$ei1$5807$Pld94 g$ei2$5808$Pld94)
        (bitwise-arithmetic-shift g$ei1$5807$Pld94 (- g$ei2$5808$Pld94)))))
   (g$bitwise-rotate-bit-field$5781$Pld94
     g$bitwise-rotate-bit-field$5832$Pld94
     (case-lambda
       ((g$ei1$5809$Pld94 g$ei2$5810$Pld94 g$ei3$5811$Pld94 g$ei4$5812$Pld94)
        ((case-lambda
           ((g$n$5813$Pld94)
            ((case-lambda
               ((g$start$5814$Pld94)
                ((case-lambda
                   ((g$end$5815$Pld94)
                    ((case-lambda
                       ((g$count$5816$Pld94)
                        ((case-lambda
                           ((g$width$5817$Pld94)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5817$Pld94)
                                  ((case-lambda
                                     ((g$count$5818$Pld94)
                                      ((case-lambda
                                         ((g$field0$5819$Pld94)
                                          ((case-lambda
                                             ((g$field1$5820$Pld94)
                                              ((case-lambda
                                                 ((g$field2$5821$Pld94)
                                                  ((case-lambda
                                                     ((g$field$5822$Pld94)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5778$Pld94
                                                            g$n$5813$Pld94
                                                            g$start$5814$Pld94
                                                            g$end$5815$Pld94
                                                            g$field$5822$Pld94))))))
                                                   (bitwise-ior
                                                     g$field1$5820$Pld94
                                                     g$field2$5821$Pld94))))
                                               (g$bitwise-arithmetic-shift-right$5780$Pld94
                                                 g$field0$5819$Pld94
                                                 (- g$width$5817$Pld94
                                                    g$count$5818$Pld94)))))
                                           (g$bitwise-arithmetic-shift-left$5779$Pld94
                                             g$field0$5819$Pld94
                                             g$count$5818$Pld94))))
                                       (g$bitwise-bit-field$5777$Pld94
                                         g$n$5813$Pld94
                                         g$start$5814$Pld94
                                         g$end$5815$Pld94))))
                                   (mod g$count$5816$Pld94 g$width$5817$Pld94))
                                  g$n$5813$Pld94))))))
                         (- g$end$5815$Pld94 g$start$5814$Pld94))))
                     g$ei4$5812$Pld94)))
                 g$ei3$5811$Pld94)))
             g$ei2$5810$Pld94)))
         g$ei1$5809$Pld94))))
   (g$bitwise-reverse-bit-field$5782$Pld94
     g$bitwise-reverse-bit-field$5833$Pld94
     (case-lambda
       ((g$ei1$5823$Pld94 g$ei2$5824$Pld94 g$ei3$5825$Pld94) 'TODO))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5834$Pld94
     g$fxif$5881$Pld94
     (case-lambda
       ((g$fx1$5841$Pld94 g$fx2$5842$Pld94 g$fx3$5843$Pld94)
        (fxior
          (fxand g$fx1$5841$Pld94 g$fx2$5842$Pld94)
          (fxand (fxnot g$fx1$5841$Pld94) g$fx3$5843$Pld94)))))
   (g$fxcopy-bit$5835$Pld94
     g$fxcopy-bit$5882$Pld94
     (case-lambda
       ((g$fx1$5844$Pld94 g$fx2$5845$Pld94 g$fx3$5846$Pld94)
        ((case-lambda
           ((g$mask$5847$Pld94)
            ((case-lambda
               (()
                (g$fxif$5834$Pld94
                  g$mask$5847$Pld94
                  (g$fxarithmetic-shift-left$5838$Pld94
                    g$fx3$5846$Pld94
                    g$fx2$5845$Pld94)
                  g$fx1$5844$Pld94))))))
         (g$fxarithmetic-shift-left$5838$Pld94 '1 g$fx2$5845$Pld94)))))
   (g$fxbit-field$5836$Pld94
     g$fxbit-field$5883$Pld94
     (case-lambda
       ((g$fx1$5848$Pld94 g$fx2$5849$Pld94 g$fx3$5850$Pld94)
        ((case-lambda
           ((g$mask$5851$Pld94)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5839$Pld94
                  (fxand g$fx1$5848$Pld94 g$mask$5851$Pld94)
                  g$fx2$5849$Pld94))))))
         (fxnot (g$fxarithmetic-shift-left$5838$Pld94 '-1 g$fx3$5850$Pld94))))))
   (g$fxcopy-bit-field$5837$Pld94
     g$fxcopy-bit-field$5884$Pld94
     (case-lambda
       ((g$fx1$5852$Pld94 g$fx2$5853$Pld94 g$fx3$5854$Pld94 g$fx4$5855$Pld94)
        ((case-lambda
           ((g$to$5856$Pld94)
            ((case-lambda
               ((g$start$5857$Pld94)
                ((case-lambda
                   ((g$end$5858$Pld94)
                    ((case-lambda
                       ((g$from$5859$Pld94)
                        ((case-lambda
                           ((g$mask1$5860$Pld94)
                            ((case-lambda
                               ((g$mask2$5861$Pld94)
                                ((case-lambda
                                   ((g$mask$5862$Pld94)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5834$Pld94
                                          g$mask$5862$Pld94
                                          (g$fxarithmetic-shift-left$5838$Pld94
                                            g$from$5859$Pld94
                                            g$start$5857$Pld94)
                                          g$to$5856$Pld94))))))
                                 (fxand
                                   g$mask1$5860$Pld94
                                   g$mask2$5861$Pld94))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5838$Pld94
                                 '-1
                                 g$end$5858$Pld94)))))
                         (g$fxarithmetic-shift-left$5838$Pld94
                           '-1
                           g$start$5857$Pld94))))
                     g$fx4$5855$Pld94)))
                 g$fx3$5854$Pld94)))
             g$fx2$5853$Pld94)))
         g$fx1$5852$Pld94))))
   (g$fxarithmetic-shift-left$5838$Pld94
     g$fxarithmetic-shift-left$5885$Pld94
     (case-lambda
       ((g$fx1$5863$Pld94 g$fx2$5864$Pld94)
        (fxarithmetic-shift g$fx1$5863$Pld94 g$fx2$5864$Pld94))))
   (g$fxarithmetic-shift-right$5839$Pld94
     g$fxarithmetic-shift-right$5886$Pld94
     (case-lambda
       ((g$fx1$5865$Pld94 g$fx2$5866$Pld94)
        (fxarithmetic-shift g$fx1$5865$Pld94 (- g$fx2$5866$Pld94)))))
   (g$fxrotate-bit-field$5840$Pld94
     g$fxrotate-bit-field$5887$Pld94
     (case-lambda
       ((g$fx1$5867$Pld94 g$fx2$5868$Pld94 g$fx3$5869$Pld94 g$fx4$5870$Pld94)
        ((case-lambda
           ((g$n$5871$Pld94)
            ((case-lambda
               ((g$start$5872$Pld94)
                ((case-lambda
                   ((g$end$5873$Pld94)
                    ((case-lambda
                       ((g$count$5874$Pld94)
                        ((case-lambda
                           ((g$width$5875$Pld94)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5875$Pld94)
                                  ((case-lambda
                                     ((g$count$5876$Pld94)
                                      ((case-lambda
                                         ((g$field0$5877$Pld94)
                                          ((case-lambda
                                             ((g$field1$5878$Pld94)
                                              ((case-lambda
                                                 ((g$field2$5879$Pld94)
                                                  ((case-lambda
                                                     ((g$field$5880$Pld94)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5837$Pld94
                                                            g$n$5871$Pld94
                                                            g$start$5872$Pld94
                                                            g$end$5873$Pld94
                                                            g$field$5880$Pld94))))))
                                                   (fxior
                                                     g$field1$5878$Pld94
                                                     g$field2$5879$Pld94))))
                                               (g$fxarithmetic-shift-right$5839$Pld94
                                                 g$field0$5877$Pld94
                                                 (- g$width$5875$Pld94
                                                    g$count$5876$Pld94)))))
                                           (g$fxarithmetic-shift-left$5838$Pld94
                                             g$field0$5877$Pld94
                                             g$count$5876$Pld94))))
                                       (g$fxbit-field$5836$Pld94
                                         g$n$5871$Pld94
                                         g$start$5872$Pld94
                                         g$end$5873$Pld94))))
                                   (mod g$count$5874$Pld94 g$width$5875$Pld94))
                                  g$n$5871$Pld94))))))
                         (- g$end$5873$Pld94 g$start$5872$Pld94))))
                     g$fx4$5870$Pld94)))
                 g$fx3$5869$Pld94)))
             g$fx2$5868$Pld94)))
         g$fx1$5867$Pld94)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$6681$5888$Pld94
     g$6681$5900$Pld94
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$6684$Pld94
       '#f
       '#f
       '#()))
   (g$6683$5889$Pld94 g$6683$5901$Pld94 '#f)
   (g$6682$5890$Pld94
     g$6682$5902$Pld94
     (make-record-constructor-descriptor
       g$6681$5888$Pld94
       &implementation-restriction-rcd
       g$6683$5889$Pld94))
   (g$6680$5891$Pld94
     g$6680$5903$Pld94
     (record-predicate g$6681$5888$Pld94))
   (g$make-no-infinities-violation$5892$Pld94
     g$make-no-infinities-violation$5904$Pld94
     (record-constructor g$6682$5890$Pld94))
   (g$no-infinities-violation?$5893$Pld94
     g$no-infinities-violation?$5905$Pld94
     (condition-predicate g$6681$5888$Pld94))
   (g$6695$5894$Pld94
     g$6695$5906$Pld94
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$6698$Pld94
       '#f
       '#f
       '#()))
   (g$6697$5895$Pld94 g$6697$5907$Pld94 '#f)
   (g$6696$5896$Pld94
     g$6696$5908$Pld94
     (make-record-constructor-descriptor
       g$6695$5894$Pld94
       &implementation-restriction-rcd
       g$6697$5895$Pld94))
   (g$6694$5897$Pld94
     g$6694$5909$Pld94
     (record-predicate g$6695$5894$Pld94))
   (g$make-no-nans-violation$5898$Pld94
     g$make-no-nans-violation$5910$Pld94
     (record-constructor g$6696$5896$Pld94))
   (g$no-nans-violation?$5899$Pld94
     g$no-nans-violation?$5911$Pld94
     (condition-predicate g$6695$5894$Pld94)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$6710$5912$Pld94
     g$6710$5992$Pld94
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$6713$Pld94
       '#f
       '#f
       '#()))
   (g$6712$5913$Pld94 g$6712$5993$Pld94 '#f)
   (g$6711$5914$Pld94
     g$6711$5994$Pld94
     (make-record-constructor-descriptor
       g$6710$5912$Pld94
       &error-rcd
       g$6712$5913$Pld94))
   (g$6709$5915$Pld94
     g$6709$5995$Pld94
     (record-predicate g$6710$5912$Pld94))
   (g$make-i/o-error$5916$Pld94
     g$make-i/o-error$5996$Pld94
     (record-constructor g$6711$5914$Pld94))
   (g$i/o-error?$5917$Pld94
     g$i/o-error?$5997$Pld94
     (condition-predicate g$6710$5912$Pld94))
   (g$6724$5918$Pld94
     g$6724$5998$Pld94
     (make-record-type-descriptor
       '&i/o-read
       g$6710$5912$Pld94
       'g$6727$Pld94
       '#f
       '#f
       '#()))
   (g$6726$5919$Pld94 g$6726$5999$Pld94 '#f)
   (g$6725$5920$Pld94
     g$6725$6000$Pld94
     (make-record-constructor-descriptor
       g$6724$5918$Pld94
       g$6711$5914$Pld94
       g$6726$5919$Pld94))
   (g$6723$5921$Pld94
     g$6723$6001$Pld94
     (record-predicate g$6724$5918$Pld94))
   (g$make-i/o-read-error$5922$Pld94
     g$make-i/o-read-error$6002$Pld94
     (record-constructor g$6725$5920$Pld94))
   (g$i/o-read-error?$5923$Pld94
     g$i/o-read-error?$6003$Pld94
     (condition-predicate g$6724$5918$Pld94))
   (g$6738$5924$Pld94
     g$6738$6004$Pld94
     (make-record-type-descriptor
       '&i/o-write
       g$6710$5912$Pld94
       'g$6741$Pld94
       '#f
       '#f
       '#()))
   (g$6740$5925$Pld94 g$6740$6005$Pld94 '#f)
   (g$6739$5926$Pld94
     g$6739$6006$Pld94
     (make-record-constructor-descriptor
       g$6738$5924$Pld94
       g$6711$5914$Pld94
       g$6740$5925$Pld94))
   (g$6737$5927$Pld94
     g$6737$6007$Pld94
     (record-predicate g$6738$5924$Pld94))
   (g$make-i/o-write-error$5928$Pld94
     g$make-i/o-write-error$6008$Pld94
     (record-constructor g$6739$5926$Pld94))
   (g$i/o-write-error?$5929$Pld94
     g$i/o-write-error?$6009$Pld94
     (condition-predicate g$6738$5924$Pld94))
   (g$6753$5930$Pld94
     g$6753$6010$Pld94
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6710$5912$Pld94
       'g$6756$Pld94
       '#f
       '#f
       '#((immutable position))))
   (g$6755$5931$Pld94 g$6755$6011$Pld94 '#f)
   (g$6754$5932$Pld94
     g$6754$6012$Pld94
     (make-record-constructor-descriptor
       g$6753$5930$Pld94
       g$6711$5914$Pld94
       g$6755$5931$Pld94))
   (g$6752$5933$Pld94
     g$6752$6013$Pld94
     (record-predicate g$6753$5930$Pld94))
   (g$make-i/o-invalid-position-error$5934$Pld94
     g$make-i/o-invalid-position-error$6014$Pld94
     (record-constructor g$6754$5932$Pld94))
   (g$6751$5935$Pld94
     g$6751$6015$Pld94
     (record-accessor g$6753$5930$Pld94 '0))
   (g$i/o-invalid-position-error?$5936$Pld94
     g$i/o-invalid-position-error?$6016$Pld94
     (condition-predicate g$6753$5930$Pld94))
   (g$i/o-error-position$5937$Pld94
     g$i/o-error-position$6017$Pld94
     (condition-accessor g$6753$5930$Pld94 g$6751$5935$Pld94))
   (g$6770$5938$Pld94
     g$6770$6018$Pld94
     (make-record-type-descriptor
       '&i/o-filename
       g$6710$5912$Pld94
       'g$6773$Pld94
       '#f
       '#f
       '#((immutable filename))))
   (g$6772$5939$Pld94 g$6772$6019$Pld94 '#f)
   (g$6771$5940$Pld94
     g$6771$6020$Pld94
     (make-record-constructor-descriptor
       g$6770$5938$Pld94
       g$6711$5914$Pld94
       g$6772$5939$Pld94))
   (g$6769$5941$Pld94
     g$6769$6021$Pld94
     (record-predicate g$6770$5938$Pld94))
   (g$make-i/o-filename-error$5942$Pld94
     g$make-i/o-filename-error$6022$Pld94
     (record-constructor g$6771$5940$Pld94))
   (g$6768$5943$Pld94
     g$6768$6023$Pld94
     (record-accessor g$6770$5938$Pld94 '0))
   (g$i/o-filename-error?$5944$Pld94
     g$i/o-filename-error?$6024$Pld94
     (condition-predicate g$6770$5938$Pld94))
   (g$i/o-error-filename$5945$Pld94
     g$i/o-error-filename$6025$Pld94
     (condition-accessor g$6770$5938$Pld94 g$6768$5943$Pld94))
   (g$6786$5946$Pld94
     g$6786$6026$Pld94
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6710$5912$Pld94
       'g$6789$Pld94
       '#f
       '#f
       '#()))
   (g$6788$5947$Pld94 g$6788$6027$Pld94 '#f)
   (g$6787$5948$Pld94
     g$6787$6028$Pld94
     (make-record-constructor-descriptor
       g$6786$5946$Pld94
       g$6711$5914$Pld94
       g$6788$5947$Pld94))
   (g$6785$5949$Pld94
     g$6785$6029$Pld94
     (record-predicate g$6786$5946$Pld94))
   (g$make-i/o-file-protection-error$5950$Pld94
     g$make-i/o-file-protection-error$6030$Pld94
     (record-constructor g$6787$5948$Pld94))
   (g$i/o-file-protection-error?$5951$Pld94
     g$i/o-file-protection-error?$6031$Pld94
     (condition-predicate g$6786$5946$Pld94))
   (g$6800$5952$Pld94
     g$6800$6032$Pld94
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6786$5946$Pld94
       'g$6803$Pld94
       '#f
       '#f
       '#()))
   (g$6802$5953$Pld94 g$6802$6033$Pld94 '#f)
   (g$6801$5954$Pld94
     g$6801$6034$Pld94
     (make-record-constructor-descriptor
       g$6800$5952$Pld94
       g$6787$5948$Pld94
       g$6802$5953$Pld94))
   (g$6799$5955$Pld94
     g$6799$6035$Pld94
     (record-predicate g$6800$5952$Pld94))
   (g$make-i/o-file-is-read-only-error$5956$Pld94
     g$make-i/o-file-is-read-only-error$6036$Pld94
     (record-constructor g$6801$5954$Pld94))
   (g$i/o-file-is-read-only-error?$5957$Pld94
     g$i/o-file-is-read-only-error?$6037$Pld94
     (condition-predicate g$6800$5952$Pld94))
   (g$6814$5958$Pld94
     g$6814$6038$Pld94
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6770$5938$Pld94
       'g$6817$Pld94
       '#f
       '#f
       '#()))
   (g$6816$5959$Pld94 g$6816$6039$Pld94 '#f)
   (g$6815$5960$Pld94
     g$6815$6040$Pld94
     (make-record-constructor-descriptor
       g$6814$5958$Pld94
       g$6771$5940$Pld94
       g$6816$5959$Pld94))
   (g$6813$5961$Pld94
     g$6813$6041$Pld94
     (record-predicate g$6814$5958$Pld94))
   (g$make-i/o-file-already-exists-error$5962$Pld94
     g$make-i/o-file-already-exists-error$6042$Pld94
     (record-constructor g$6815$5960$Pld94))
   (g$i/o-file-already-exists-error?$5963$Pld94
     g$i/o-file-already-exists-error?$6043$Pld94
     (condition-predicate g$6814$5958$Pld94))
   (g$6828$5964$Pld94
     g$6828$6044$Pld94
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6770$5938$Pld94
       'g$6831$Pld94
       '#f
       '#f
       '#()))
   (g$6830$5965$Pld94 g$6830$6045$Pld94 '#f)
   (g$6829$5966$Pld94
     g$6829$6046$Pld94
     (make-record-constructor-descriptor
       g$6828$5964$Pld94
       g$6771$5940$Pld94
       g$6830$5965$Pld94))
   (g$6827$5967$Pld94
     g$6827$6047$Pld94
     (record-predicate g$6828$5964$Pld94))
   (g$make-i/o-file-does-not-exist-error$5968$Pld94
     g$make-i/o-file-does-not-exist-error$6048$Pld94
     (record-constructor g$6829$5966$Pld94))
   (g$i/o-file-does-not-exist-error?$5969$Pld94
     g$i/o-file-does-not-exist-error?$6049$Pld94
     (condition-predicate g$6828$5964$Pld94))
   (g$6843$5970$Pld94
     g$6843$6050$Pld94
     (make-record-type-descriptor
       '&i/o-port
       g$6710$5912$Pld94
       'g$6846$Pld94
       '#f
       '#f
       '#((immutable port))))
   (g$6845$5971$Pld94 g$6845$6051$Pld94 '#f)
   (g$6844$5972$Pld94
     g$6844$6052$Pld94
     (make-record-constructor-descriptor
       g$6843$5970$Pld94
       g$6711$5914$Pld94
       g$6845$5971$Pld94))
   (g$6842$5973$Pld94
     g$6842$6053$Pld94
     (record-predicate g$6843$5970$Pld94))
   (g$make-i/o-port-error$5974$Pld94
     g$make-i/o-port-error$6054$Pld94
     (record-constructor g$6844$5972$Pld94))
   (g$6841$5975$Pld94
     g$6841$6055$Pld94
     (record-accessor g$6843$5970$Pld94 '0))
   (g$i/o-port-error?$5976$Pld94
     g$i/o-port-error?$6056$Pld94
     (condition-predicate g$6843$5970$Pld94))
   (g$i/o-error-port$5977$Pld94
     g$i/o-error-port$6057$Pld94
     (condition-accessor g$6843$5970$Pld94 g$6841$5975$Pld94))
   (g$6859$5978$Pld94
     g$6859$6058$Pld94
     (make-record-type-descriptor
       '&i/o-decoding
       g$6843$5970$Pld94
       'g$6862$Pld94
       '#f
       '#f
       '#()))
   (g$6861$5979$Pld94 g$6861$6059$Pld94 '#f)
   (g$6860$5980$Pld94
     g$6860$6060$Pld94
     (make-record-constructor-descriptor
       g$6859$5978$Pld94
       g$6844$5972$Pld94
       g$6861$5979$Pld94))
   (g$6858$5981$Pld94
     g$6858$6061$Pld94
     (record-predicate g$6859$5978$Pld94))
   (g$make-i/o-decoding-error$5982$Pld94
     g$make-i/o-decoding-error$6062$Pld94
     (record-constructor g$6860$5980$Pld94))
   (g$i/o-decoding-error?$5983$Pld94
     g$i/o-decoding-error?$6063$Pld94
     (condition-predicate g$6859$5978$Pld94))
   (g$6874$5984$Pld94
     g$6874$6064$Pld94
     (make-record-type-descriptor
       '&i/o-encoding
       g$6843$5970$Pld94
       'g$6877$Pld94
       '#f
       '#f
       '#((immutable char))))
   (g$6876$5985$Pld94 g$6876$6065$Pld94 '#f)
   (g$6875$5986$Pld94
     g$6875$6066$Pld94
     (make-record-constructor-descriptor
       g$6874$5984$Pld94
       g$6844$5972$Pld94
       g$6876$5985$Pld94))
   (g$6873$5987$Pld94
     g$6873$6067$Pld94
     (record-predicate g$6874$5984$Pld94))
   (g$make-i/o-encoding-error$5988$Pld94
     g$make-i/o-encoding-error$6068$Pld94
     (record-constructor g$6875$5986$Pld94))
   (g$6872$5989$Pld94
     g$6872$6069$Pld94
     (record-accessor g$6874$5984$Pld94 '0))
   (g$i/o-encoding-error?$5990$Pld94
     g$i/o-encoding-error?$6070$Pld94
     (condition-predicate g$6874$5984$Pld94))
   (g$i/o-encoding-error-char$5991$Pld94
     g$i/o-encoding-error-char$6071$Pld94
     (condition-accessor g$6874$5984$Pld94 g$6872$5989$Pld94)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6072$Pld94
     g$get-output-string$6077$Pld94
     (case-lambda
       ((g$port$6075$Pld94)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6075$Pld94))))
   (g$open-output-string$6073$Pld94
     g$open-output-string$6078$Pld94
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6074$Pld94
     g$open-string-output-port$6079$Pld94
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6076$Pld94)
            (values
              g$p$6076$Pld94
              (case-lambda
                (() (g$get-output-string$6072$Pld94 g$p$6076$Pld94))))))
         (g$open-output-string$6073$Pld94))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme format)
  ((g$dofmt$6080$Pld94
     g$dofmt$6102$Pld94
     (case-lambda
       ((g$p$6084$Pld94 g$cntl$6085$Pld94 g$args$6086$Pld94)
        ((case-lambda
           ((g$nmax$6087$Pld94)
            ((letrec ((g$loop$6088$Pld94
                        (case-lambda
                          ((g$n$6089$Pld94 g$a$6090$Pld94)
                           (if (fx<=? g$n$6089$Pld94 g$nmax$6087$Pld94)
                             ((case-lambda
                                ((g$c$6091$Pld94)
                                 (if (if (char=? g$c$6091$Pld94 '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6089$Pld94
                                           g$nmax$6087$Pld94))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6092$Pld94)
                                       (if (eqv? g$t$6092$Pld94 '#\a)
                                         (begin
                                           (display
                                             (car g$a$6090$Pld94)
                                             g$p$6084$Pld94)
                                           (g$loop$6088$Pld94
                                             (fx+ g$n$6089$Pld94 '2)
                                             (cdr g$a$6090$Pld94)))
                                         (if (eqv? g$t$6092$Pld94 '#\s)
                                           (begin
                                             (write
                                               (car g$a$6090$Pld94)
                                               g$p$6084$Pld94)
                                             (g$loop$6088$Pld94
                                               (fx+ g$n$6089$Pld94 '2)
                                               (cdr g$a$6090$Pld94)))
                                           (if (eqv? g$t$6092$Pld94 '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6090$Pld94)
                                                   '2)
                                                 g$p$6084$Pld94)
                                               (g$loop$6088$Pld94
                                                 (fx+ g$n$6089$Pld94 '2)
                                                 (cdr g$a$6090$Pld94)))
                                             (if (eqv? g$t$6092$Pld94 '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6090$Pld94)
                                                     '8)
                                                   g$p$6084$Pld94)
                                                 (g$loop$6088$Pld94
                                                   (fx+ g$n$6089$Pld94 '2)
                                                   (cdr g$a$6090$Pld94)))
                                               (if (eqv? g$t$6092$Pld94 '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6090$Pld94)
                                                       '16)
                                                     g$p$6084$Pld94)
                                                   (g$loop$6088$Pld94
                                                     (fx+ g$n$6089$Pld94 '2)
                                                     (cdr g$a$6090$Pld94)))
                                                 (if (eqv? g$t$6092$Pld94 '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6090$Pld94)
                                                         '10)
                                                       g$p$6084$Pld94)
                                                     (g$loop$6088$Pld94
                                                       (fx+ g$n$6089$Pld94 '2)
                                                       (cdr g$a$6090$Pld94)))
                                                   (if (eqv?
                                                         g$t$6092$Pld94
                                                         '#\~)
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6084$Pld94)
                                                       (g$loop$6088$Pld94
                                                         (fx+ g$n$6089$Pld94 '2)
                                                         g$a$6090$Pld94))
                                                     (begin
                                                       (write-char
                                                         g$c$6091$Pld94
                                                         g$p$6084$Pld94)
                                                       (g$loop$6088$Pld94
                                                         (fx+ g$n$6089$Pld94 '1)
                                                         g$a$6090$Pld94)))))))))))
                                    (string-ref
                                      g$cntl$6085$Pld94
                                      (fx+ g$n$6089$Pld94 '1)))
                                   (begin
                                     (write-char g$c$6091$Pld94 g$p$6084$Pld94)
                                     (g$loop$6088$Pld94
                                       (fx+ g$n$6089$Pld94 '1)
                                       g$a$6090$Pld94)))))
                              (string-ref g$cntl$6085$Pld94 g$n$6089$Pld94))
                             (void))))))
               g$loop$6088$Pld94)
             '0
             g$args$6086$Pld94)))
         (fx- (string-length g$cntl$6085$Pld94) '1)))))
   (g$printf$6081$Pld94
     g$printf$6103$Pld94
     (case-lambda
       ((g$control$6093$Pld94 . g$args$6094$Pld94)
        (g$dofmt$6080$Pld94
          (current-output-port)
          g$control$6093$Pld94
          g$args$6094$Pld94))))
   (g$fprintf$6082$Pld94
     g$fprintf$6104$Pld94
     (case-lambda
       ((g$p$6095$Pld94 g$control$6096$Pld94 . g$args$6097$Pld94)
        (g$dofmt$6080$Pld94
          g$p$6095$Pld94
          g$control$6096$Pld94
          g$args$6097$Pld94))))
   (g$format$6083$Pld94
     g$format$6105$Pld94
     (case-lambda
       ((g$control$6098$Pld94 . g$args$6099$Pld94)
        (call-with-values
          g$open-string-output-port$6079$Pld94
          (case-lambda
            ((g$p$6100$Pld94 g$c$6101$Pld94)
             (begin
               (g$dofmt$6080$Pld94
                 g$p$6100$Pld94
                 g$control$6098$Pld94
                 g$args$6099$Pld94)
               (g$c$6101$Pld94)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6106$Pld94
     g$make-traced-macro$6109$Pld94
     (case-lambda
       ((g$name$6107$Pld94 g$x$6108$Pld94)
        (if (procedure? g$x$6108$Pld94)
          (make-traced-procedure
            g$name$6107$Pld94
            g$x$6108$Pld94
            g$syntax->datum$10742$Pld94)
          (if (g$variable-transformer?$10570$Pld94 g$x$6108$Pld94)
            (g$make-variable-transformer$10569$Pld94
              (make-traced-procedure
                g$name$6107$Pld94
                (g$variable-transformer-procedure$10571$Pld94 g$x$6108$Pld94)
                g$syntax->datum$10742$Pld94))
            g$x$6108$Pld94))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6110$Pld94
     g$read-library-source-file$6188$Pld94
     (case-lambda
       ((g$file-name$6180$Pld94)
        (with-input-from-file g$file-name$6180$Pld94 read-annotated))))
   (g$make-parameter$6111$Pld94
     g$make-parameter$6189$Pld94
     (case-lambda
       ((g$x$6181$Pld94)
        (g$make-parameter$6111$Pld94
          g$x$6181$Pld94
          (case-lambda ((g$x$6182$Pld94) g$x$6182$Pld94))))
       ((g$x$6183$Pld94 g$fender$6184$Pld94)
        (begin
          (if (procedure? g$fender$6184$Pld94)
            (void)
            (assertion-violation
              'assert
              '"assertion failed"
              '(procedure? fender)))
          ((case-lambda
             ((g$x$6185$Pld94)
              (case-lambda
                (() g$x$6185$Pld94)
                ((g$v$6186$Pld94)
                 (set! g$x$6185$Pld94 (g$fender$6184$Pld94 g$v$6186$Pld94))))))
           (g$fender$6184$Pld94 g$x$6183$Pld94))))))
   (g$file-options-spec$6179$Pld94
     g$file-options-spec$6190$Pld94
     (case-lambda ((g$x$6187$Pld94) g$x$6187$Pld94))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6387$Pld94
     g$current-primitive-locations$6432$Pld94
     (g$make-parameter$6189$Pld94
       (case-lambda ((g$x$6393$Pld94) '#f))
       (case-lambda
         ((g$p$6394$Pld94)
          (begin
            (if (procedure? g$p$6394$Pld94)
              (void)
              (assertion-violation 'assert '"assertion failed" '(procedure? p)))
            g$p$6394$Pld94)))))
   (g$mutable?$6388$Pld94
     g$mutable?$6433$Pld94
     (case-lambda
       ((g$x$6395$Pld94)
        (letrec* ((g$simple?$6396$Pld94
                    (case-lambda
                      ((g$x$6397$Pld94)
                       ((case-lambda
                          ((g$t$6398$Pld94)
                           (if g$t$6398$Pld94
                             g$t$6398$Pld94
                             ((case-lambda
                                ((g$t$6399$Pld94)
                                 (if g$t$6399$Pld94
                                   g$t$6399$Pld94
                                   ((case-lambda
                                      ((g$t$6400$Pld94)
                                       (if g$t$6400$Pld94
                                         g$t$6400$Pld94
                                         ((case-lambda
                                            ((g$t$6401$Pld94)
                                             (if g$t$6401$Pld94
                                               g$t$6401$Pld94
                                               ((case-lambda
                                                  ((g$t$6402$Pld94)
                                                   (if g$t$6402$Pld94
                                                     g$t$6402$Pld94
                                                     ((case-lambda
                                                        ((g$t$6403$Pld94)
                                                         (if g$t$6403$Pld94
                                                           g$t$6403$Pld94
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6397$Pld94)))))
                                                      (bytevector?
                                                        g$x$6397$Pld94)))))
                                                (string? g$x$6397$Pld94)))))
                                          (boolean? g$x$6397$Pld94)))))
                                    (symbol? g$x$6397$Pld94)))))
                              (char? g$x$6397$Pld94)))))
                        (null? g$x$6397$Pld94))))))
          (not (g$simple?$6396$Pld94 g$x$6395$Pld94))))))
   (g$rewriter$6389$Pld94
     g$rewriter$6434$Pld94
     (case-lambda
       ((g$quote-hack?$6404$Pld94)
        (letrec* ((g$f$6405$Pld94
                    (case-lambda
                      ((g$x$6406$Pld94)
                       (if (pair? g$x$6406$Pld94)
                         ((case-lambda
                            ((g$t$6407$Pld94)
                             (if (eqv? g$t$6407$Pld94 'quote)
                               (if (if g$quote-hack?$6404$Pld94
                                     (begin
                                       '#f
                                       (g$mutable?$6388$Pld94
                                         (g$cadr$4880$Pld94 g$x$6406$Pld94)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6427$Pld94)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6427$Pld94
                                         (g$cadr$4880$Pld94 g$x$6406$Pld94))
                                       g$g$6427$Pld94)))
                                  (gensym))
                                 g$x$6406$Pld94)
                               (if (eqv? g$t$6407$Pld94 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6426$Pld94)
                                           (cons
                                             (car g$x$6426$Pld94)
                                             (map g$f$6405$Pld94
                                                  (cdr g$x$6426$Pld94)))))
                                        (cdr g$x$6406$Pld94)))
                                 (if (eqv? g$t$6407$Pld94 'lambda)
                                   (g$cons*$5351$Pld94
                                     'lambda
                                     (g$cadr$4880$Pld94 g$x$6406$Pld94)
                                     (map g$f$6405$Pld94
                                          (g$cddr$4882$Pld94 g$x$6406$Pld94)))
                                   (if (eqv? g$t$6407$Pld94 'letrec)
                                     ((case-lambda
                                        ((g$bindings$6422$Pld94
                                           g$body*$6423$Pld94)
                                         ((case-lambda
                                            ((g$lhs*$6424$Pld94
                                               g$rhs*$6425$Pld94)
                                             (g$cons*$5351$Pld94
                                               'letrec
                                               (map list
                                                    g$lhs*$6424$Pld94
                                                    (map g$f$6405$Pld94
                                                         g$rhs*$6425$Pld94))
                                               (map g$f$6405$Pld94
                                                    g$body*$6423$Pld94))))
                                          (map car g$bindings$6422$Pld94)
                                          (map g$cadr$4880$Pld94
                                               g$bindings$6422$Pld94))))
                                      (g$cadr$4880$Pld94 g$x$6406$Pld94)
                                      (g$cddr$4882$Pld94 g$x$6406$Pld94))
                                     (if (eqv? g$t$6407$Pld94 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$6418$Pld94
                                             g$body*$6419$Pld94)
                                           ((case-lambda
                                              ((g$lhs*$6420$Pld94
                                                 g$rhs*$6421$Pld94)
                                               (g$cons*$5351$Pld94
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6420$Pld94
                                                      (map g$f$6405$Pld94
                                                           g$rhs*$6421$Pld94))
                                                 (map g$f$6405$Pld94
                                                      g$body*$6419$Pld94))))
                                            (map car g$bindings$6418$Pld94)
                                            (map g$cadr$4880$Pld94
                                                 g$bindings$6418$Pld94))))
                                        (g$cadr$4880$Pld94 g$x$6406$Pld94)
                                        (g$cddr$4882$Pld94 g$x$6406$Pld94))
                                       (if (eqv?
                                             g$t$6407$Pld94
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$6411$Pld94 g$x$6412$Pld94)
                                             ((case-lambda
                                                ((g$bindings$6413$Pld94
                                                   g$body*$6414$Pld94)
                                                 ((case-lambda
                                                    ((g$lhs*$6415$Pld94
                                                       g$lhs**$6416$Pld94
                                                       g$rhs*$6417$Pld94)
                                                     (g$cons*$5351$Pld94
                                                       'library-letrec*
                                                       g$name$6411$Pld94
                                                       (map list
                                                            g$lhs*$6415$Pld94
                                                            g$lhs**$6416$Pld94
                                                            (map g$f$6405$Pld94
                                                                 g$rhs*$6417$Pld94))
                                                       (map g$f$6405$Pld94
                                                            g$body*$6414$Pld94))))
                                                  (map car
                                                       g$bindings$6413$Pld94)
                                                  (map g$cadr$4880$Pld94
                                                       g$bindings$6413$Pld94)
                                                  (map g$caddr$4886$Pld94
                                                       g$bindings$6413$Pld94))))
                                              (g$cadr$4880$Pld94 g$x$6412$Pld94)
                                              (g$cddr$4882$Pld94
                                                g$x$6412$Pld94))))
                                          (g$cadr$4880$Pld94 g$x$6406$Pld94)
                                          (cdr g$x$6406$Pld94))
                                         (if (eqv? g$t$6407$Pld94 'begin)
                                           (cons
                                             'begin
                                             (map g$f$6405$Pld94
                                                  (cdr g$x$6406$Pld94)))
                                           (if (eqv? g$t$6407$Pld94 'set!)
                                             (list
                                               'set!
                                               (g$cadr$4880$Pld94
                                                 g$x$6406$Pld94)
                                               (g$f$6405$Pld94
                                                 (g$caddr$4886$Pld94
                                                   g$x$6406$Pld94)))
                                             (if (eqv?
                                                   g$t$6407$Pld94
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$6408$Pld94)
                                                   ((case-lambda
                                                      ((g$t$6409$Pld94)
                                                       (if g$t$6409$Pld94
                                                         ((case-lambda
                                                            ((g$loc$6410$Pld94)
                                                             g$loc$6410$Pld94))
                                                          g$t$6409$Pld94)
                                                         g$op$6408$Pld94)))
                                                    ((g$current-primitive-locations$6387$Pld94)
                                                     g$op$6408$Pld94))))
                                                (g$cadr$4880$Pld94
                                                  g$x$6406$Pld94))
                                               (if (eqv? g$t$6407$Pld94 'define)
                                                 g$x$6406$Pld94
                                                 (if (list? g$x$6406$Pld94)
                                                   (map g$f$6405$Pld94
                                                        g$x$6406$Pld94)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6406$Pld94
                                                     (list?
                                                       g$x$6406$Pld94)))))))))))))))
                          (car g$x$6406$Pld94))
                         g$x$6406$Pld94)))))
          g$f$6405$Pld94))))
   (g$expanded->core$6390$Pld94
     g$expanded->core$6435$Pld94
     (case-lambda
       ((g$x$6428$Pld94) ((g$rewriter$6389$Pld94 '#t) g$x$6428$Pld94))))
   (g$compile-core-expr$6391$Pld94
     g$compile-core-expr$6436$Pld94
     (case-lambda
       ((g$x$6429$Pld94) ((g$rewriter$6389$Pld94 '#f) g$x$6429$Pld94))))
   (g$compile-core-expr-to-port$6392$Pld94
     g$compile-core-expr-to-port$6437$Pld94
     (case-lambda
       ((g$x$6430$Pld94 g$p$6431$Pld94)
        (g$pretty-print$6386$Pld94
          ((g$rewriter$6389$Pld94 '#f) g$x$6430$Pld94)
          g$p$6431$Pld94)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6476$Pld94
     g$make-collection$6680$Pld94
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6537$Pld94)
            (letrec* ((g$set-cons$6538$Pld94
                        (case-lambda
                          ((g$x$6540$Pld94 g$ls$6541$Pld94)
                           (if (memq g$x$6540$Pld94 g$ls$6541$Pld94)
                             g$ls$6541$Pld94
                             (cons g$x$6540$Pld94 g$ls$6541$Pld94))))))
              (case-lambda
                (() g$set$6537$Pld94)
                ((g$x$6539$Pld94)
                 (set! g$set$6537$Pld94
                   (g$set-cons$6538$Pld94 g$x$6539$Pld94 g$set$6537$Pld94)))))))
         '()))))
   (g$current-library-collection$6477$Pld94
     g$current-library-collection$6681$Pld94
     (g$make-parameter$6189$Pld94
       (g$make-collection$6476$Pld94)
       (case-lambda
         ((g$x$6542$Pld94)
          (begin
            (if (procedure? g$x$6542$Pld94)
              (void)
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6542$Pld94))
            g$x$6542$Pld94)))))
   (g$7309$6478$Pld94
     g$7309$6682$Pld94
     (make-record-type-descriptor
       'library
       '#f
       'g$7312$Pld94
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7311$6479$Pld94 g$7311$6683$Pld94 '#f)
   (g$7310$6480$Pld94
     g$7310$6684$Pld94
     (make-record-constructor-descriptor
       g$7309$6478$Pld94
       '#f
       g$7311$6479$Pld94))
   (g$library?$6481$Pld94
     g$library?$6685$Pld94
     (record-predicate g$7309$6478$Pld94))
   (g$make-library$6482$Pld94
     g$make-library$6686$Pld94
     (record-constructor g$7310$6480$Pld94))
   (g$library-id$6483$Pld94
     g$library-id$6687$Pld94
     (record-accessor g$7309$6478$Pld94 '0))
   (g$library-name$6484$Pld94
     g$library-name$6688$Pld94
     (record-accessor g$7309$6478$Pld94 '1))
   (g$library-version$6485$Pld94
     g$library-version$6689$Pld94
     (record-accessor g$7309$6478$Pld94 '2))
   (g$library-imp*$6486$Pld94
     g$library-imp*$6690$Pld94
     (record-accessor g$7309$6478$Pld94 '3))
   (g$library-vis*$6487$Pld94
     g$library-vis*$6691$Pld94
     (record-accessor g$7309$6478$Pld94 '4))
   (g$library-inv*$6488$Pld94
     g$library-inv*$6692$Pld94
     (record-accessor g$7309$6478$Pld94 '5))
   (g$library-subst$6489$Pld94
     g$library-subst$6693$Pld94
     (record-accessor g$7309$6478$Pld94 '6))
   (g$library-env$6490$Pld94
     g$library-env$6694$Pld94
     (record-accessor g$7309$6478$Pld94 '7))
   (g$library-visit-state$6491$Pld94
     g$library-visit-state$6695$Pld94
     (record-accessor g$7309$6478$Pld94 '8))
   (g$library-invoke-state$6492$Pld94
     g$library-invoke-state$6696$Pld94
     (record-accessor g$7309$6478$Pld94 '9))
   (g$library-visit-code$6493$Pld94
     g$library-visit-code$6697$Pld94
     (record-accessor g$7309$6478$Pld94 '10))
   (g$library-invoke-code$6494$Pld94
     g$library-invoke-code$6698$Pld94
     (record-accessor g$7309$6478$Pld94 '11))
   (g$library-visible?$6495$Pld94
     g$library-visible?$6699$Pld94
     (record-accessor g$7309$6478$Pld94 '12))
   (g$library-source-file-name$6496$Pld94
     g$library-source-file-name$6700$Pld94
     (record-accessor g$7309$6478$Pld94 '13))
   (g$set-library-id!$6497$Pld94
     g$set-library-id!$6701$Pld94
     (record-mutator g$7309$6478$Pld94 '0))
   (g$set-library-name!$6498$Pld94
     g$set-library-name!$6702$Pld94
     (record-mutator g$7309$6478$Pld94 '1))
   (g$set-library-version!$6499$Pld94
     g$set-library-version!$6703$Pld94
     (record-mutator g$7309$6478$Pld94 '2))
   (g$set-library-imp*!$6500$Pld94
     g$set-library-imp*!$6704$Pld94
     (record-mutator g$7309$6478$Pld94 '3))
   (g$set-library-vis*!$6501$Pld94
     g$set-library-vis*!$6705$Pld94
     (record-mutator g$7309$6478$Pld94 '4))
   (g$set-library-inv*!$6502$Pld94
     g$set-library-inv*!$6706$Pld94
     (record-mutator g$7309$6478$Pld94 '5))
   (g$set-library-subst!$6503$Pld94
     g$set-library-subst!$6707$Pld94
     (record-mutator g$7309$6478$Pld94 '6))
   (g$set-library-env!$6504$Pld94
     g$set-library-env!$6708$Pld94
     (record-mutator g$7309$6478$Pld94 '7))
   (g$set-library-visit-state!$6505$Pld94
     g$set-library-visit-state!$6709$Pld94
     (record-mutator g$7309$6478$Pld94 '8))
   (g$set-library-invoke-state!$6506$Pld94
     g$set-library-invoke-state!$6710$Pld94
     (record-mutator g$7309$6478$Pld94 '9))
   (g$set-library-visit-code!$6507$Pld94
     g$set-library-visit-code!$6711$Pld94
     (record-mutator g$7309$6478$Pld94 '10))
   (g$set-library-invoke-code!$6508$Pld94
     g$set-library-invoke-code!$6712$Pld94
     (record-mutator g$7309$6478$Pld94 '11))
   (g$set-library-visible?!$6509$Pld94
     g$set-library-visible?!$6713$Pld94
     (record-mutator g$7309$6478$Pld94 '12))
   (g$set-library-source-file-name!$6510$Pld94
     g$set-library-source-file-name!$6714$Pld94
     (record-mutator g$7309$6478$Pld94 '13))
   (g$rp$6511$Pld94
     g$rp$6715$Pld94
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6543$Pld94 g$p$6544$Pld94)
          (begin
            (if (g$library?$6481$Pld94 g$x$6543$Pld94)
              (void)
              (assertion-violation 'record-type-printer '"not a library"))
            (display
              (g$format$6105$Pld94
                '"#<library ~s>"
                (if (null? (g$library-version$6485$Pld94 g$x$6543$Pld94))
                  (g$library-name$6484$Pld94 g$x$6543$Pld94)
                  (append
                    (g$library-name$6484$Pld94 g$x$6543$Pld94)
                    (list (g$library-version$6485$Pld94 g$x$6543$Pld94)))))
              g$p$6544$Pld94))))))
   (g$find-dependencies$6512$Pld94
     g$find-dependencies$6716$Pld94
     (case-lambda
       ((g$ls$6545$Pld94)
        (if (null? g$ls$6545$Pld94)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6513$Pld94
     g$find-library-by$6717$Pld94
     (case-lambda
       ((g$pred$6546$Pld94)
        ((letrec ((g$f$6547$Pld94
                    (case-lambda
                      ((g$ls$6548$Pld94)
                       (if (null? g$ls$6548$Pld94)
                         '#f
                         (if (g$pred$6546$Pld94 (car g$ls$6548$Pld94))
                           (car g$ls$6548$Pld94)
                           (g$f$6547$Pld94 (cdr g$ls$6548$Pld94))))))))
           g$f$6547$Pld94)
         ((g$current-library-collection$6477$Pld94))))))
   (g$library-path$6514$Pld94
     g$library-path$6718$Pld94
     (g$make-parameter$6189$Pld94
       '(".")
       (case-lambda
         ((g$x$6549$Pld94)
          (if (if (list? g$x$6549$Pld94)
                (begin '#f (g$for-all$5349$Pld94 string? g$x$6549$Pld94))
                '#f)
            (map (case-lambda ((g$x$6550$Pld94) g$x$6550$Pld94)) g$x$6549$Pld94)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6549$Pld94))))))
   (g$library-extensions$6515$Pld94
     g$library-extensions$6719$Pld94
     (g$make-parameter$6189$Pld94
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6551$Pld94)
          (if (if (list? g$x$6551$Pld94)
                (begin '#f (g$for-all$5349$Pld94 string? g$x$6551$Pld94))
                '#f)
            (map (case-lambda ((g$x$6552$Pld94) g$x$6552$Pld94)) g$x$6551$Pld94)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6551$Pld94))))))
   (g$library-name->file-name$6516$Pld94
     g$library-name->file-name$6720$Pld94
     (case-lambda
       ((g$x$6553$Pld94)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6079$Pld94)))
          (case-lambda
            ((g$p$6556$Pld94 g$extract$6557$Pld94)
             ((case-lambda
                ((g$extract$6558$Pld94 g$p$6559$Pld94)
                 (letrec* ((g$display-hex$6560$Pld94
                             (case-lambda
                               ((g$n$6568$Pld94)
                                (if (<= '0 g$n$6568$Pld94 '9)
                                  (display g$n$6568$Pld94 g$p$6559$Pld94)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6568$Pld94 '10)))
                                    g$p$6559$Pld94))))))
                   (begin
                     ((letrec ((g$f$6561$Pld94
                                 (case-lambda
                                   ((g$ls$6562$Pld94)
                                    (if (null? g$ls$6562$Pld94)
                                      (void)
                                      (begin
                                        (display '"/" g$p$6559$Pld94)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6563$Pld94)
                                             (if ((case-lambda
                                                    ((g$t$6564$Pld94)
                                                     (if g$t$6564$Pld94
                                                       g$t$6564$Pld94
                                                       ((case-lambda
                                                          ((g$t$6565$Pld94)
                                                           (if g$t$6565$Pld94
                                                             g$t$6565$Pld94
                                                             ((case-lambda
                                                                ((g$t$6566$Pld94)
                                                                 (if g$t$6566$Pld94
                                                                   g$t$6566$Pld94
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$6563$Pld94
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$6563$Pld94
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$6563$Pld94
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$6563$Pld94
                                                    '#\z))
                                               (display
                                                 g$c$6563$Pld94
                                                 g$p$6559$Pld94)
                                               (begin
                                                 (display '"%" g$p$6559$Pld94)
                                                 ((case-lambda
                                                    ((g$n$6567$Pld94)
                                                     (begin
                                                       (g$display-hex$6560$Pld94
                                                         (g$quotient$5706$Pld94
                                                           g$n$6567$Pld94
                                                           '16))
                                                       (g$display-hex$6560$Pld94
                                                         (g$remainder$5707$Pld94
                                                           g$n$6567$Pld94
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6563$Pld94))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6562$Pld94))))
                                        (g$f$6561$Pld94
                                          (cdr g$ls$6562$Pld94))))))))
                        g$f$6561$Pld94)
                      g$x$6553$Pld94)
                     (g$extract$6558$Pld94)))))
              g$extract$6557$Pld94
              g$p$6556$Pld94)))))))
   (g$file-locator$6517$Pld94
     g$file-locator$6721$Pld94
     (g$make-parameter$6189$Pld94
       (case-lambda
         ((g$x$6569$Pld94)
          ((case-lambda
             ((g$str$6570$Pld94)
              ((letrec ((g$f$6571$Pld94
                          (case-lambda
                            ((g$ls$6572$Pld94
                               g$exts$6573$Pld94
                               g$failed-list$6574$Pld94)
                             (if (null? g$ls$6572$Pld94)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$7414$6575$Pld94
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$7417$Pld94
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$7416$6576$Pld94 '#f)
                                             (g$7415$6577$Pld94
                                               (make-record-constructor-descriptor
                                                 g$7414$6575$Pld94
                                                 &condition-rcd
                                                 g$7416$6576$Pld94))
                                             (g$7413$6578$Pld94
                                               (record-predicate
                                                 g$7414$6575$Pld94))
                                             (g$make-library-resolution-condition$6579$Pld94
                                               (record-constructor
                                                 g$7415$6577$Pld94))
                                             (g$7411$6580$Pld94
                                               (record-accessor
                                                 g$7414$6575$Pld94
                                                 '0))
                                             (g$7412$6581$Pld94
                                               (record-accessor
                                                 g$7414$6575$Pld94
                                                 '1))
                                             (g$library-resolution-condition?$6582$Pld94
                                               (condition-predicate
                                                 g$7414$6575$Pld94))
                                             (g$condition-library$6583$Pld94
                                               (condition-accessor
                                                 g$7414$6575$Pld94
                                                 g$7411$6580$Pld94))
                                             (g$condition-files$6584$Pld94
                                               (condition-accessor
                                                 g$7414$6575$Pld94
                                                 g$7412$6581$Pld94)))
                                     (raise
                                       (condition
                                         (g$make-error$5623$Pld94)
                                         (g$make-who-condition$5649$Pld94
                                           'expander)
                                         (g$make-message-condition$5603$Pld94
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6579$Pld94
                                           g$x$6569$Pld94
                                           (reverse
                                             g$failed-list$6574$Pld94))))))))
                               (if (null? g$exts$6573$Pld94)
                                 (g$f$6571$Pld94
                                   (cdr g$ls$6572$Pld94)
                                   (g$library-extensions$6515$Pld94)
                                   g$failed-list$6574$Pld94)
                                 ((case-lambda
                                    ((g$name$6585$Pld94)
                                     (if (g$file-exists?$5220$Pld94
                                           g$name$6585$Pld94)
                                       g$name$6585$Pld94
                                       (g$f$6571$Pld94
                                         g$ls$6572$Pld94
                                         (cdr g$exts$6573$Pld94)
                                         (cons
                                           g$name$6585$Pld94
                                           g$failed-list$6574$Pld94)))))
                                  (string-append
                                    (car g$ls$6572$Pld94)
                                    g$str$6570$Pld94
                                    (car g$exts$6573$Pld94)))))))))
                 g$f$6571$Pld94)
               (g$library-path$6514$Pld94)
               (g$library-extensions$6515$Pld94)
               '())))
           (g$library-name->file-name$6516$Pld94 g$x$6569$Pld94))))
       (case-lambda
         ((g$f$6586$Pld94)
          (if (procedure? g$f$6586$Pld94)
            g$f$6586$Pld94
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6586$Pld94))))))
   (g$serialize-all$6518$Pld94
     g$serialize-all$6722$Pld94
     (case-lambda
       ((g$serialize$6587$Pld94 g$compile$6588$Pld94)
        (letrec* ((g$library-desc$6589$Pld94
                    (case-lambda
                      ((g$x$6591$Pld94)
                       (list
                         (g$library-id$6483$Pld94 g$x$6591$Pld94)
                         (g$library-name$6484$Pld94 g$x$6591$Pld94))))))
          (for-each
            (case-lambda
              ((g$x$6590$Pld94)
               (if (g$library-source-file-name$6496$Pld94 g$x$6590$Pld94)
                 (g$serialize$6587$Pld94
                   (g$library-source-file-name$6496$Pld94 g$x$6590$Pld94)
                   (list
                     (g$library-id$6483$Pld94 g$x$6590$Pld94)
                     (g$library-name$6484$Pld94 g$x$6590$Pld94)
                     (g$library-version$6485$Pld94 g$x$6590$Pld94)
                     (map g$library-desc$6589$Pld94
                          (g$library-imp*$6486$Pld94 g$x$6590$Pld94))
                     (map g$library-desc$6589$Pld94
                          (g$library-vis*$6487$Pld94 g$x$6590$Pld94))
                     (map g$library-desc$6589$Pld94
                          (g$library-inv*$6488$Pld94 g$x$6590$Pld94))
                     (g$library-subst$6489$Pld94 g$x$6590$Pld94)
                     (g$library-env$6490$Pld94 g$x$6590$Pld94)
                     (g$compile$6588$Pld94
                       (g$library-visit-code$6493$Pld94 g$x$6590$Pld94))
                     (g$compile$6588$Pld94
                       (g$library-invoke-code$6494$Pld94 g$x$6590$Pld94))
                     (g$library-visible?$6495$Pld94 g$x$6590$Pld94)))
                 (void))))
            ((g$current-library-collection$6477$Pld94)))))))
   (g$current-precompiled-library-loader$6519$Pld94
     g$current-precompiled-library-loader$6723$Pld94
     (g$make-parameter$6189$Pld94
       (case-lambda ((g$filename$6592$Pld94 g$sk$6593$Pld94) '#f))))
   (g$try-load-from-file$6520$Pld94
     g$try-load-from-file$6724$Pld94
     (case-lambda
       ((g$filename$6594$Pld94)
        ((g$current-precompiled-library-loader$6519$Pld94)
         g$filename$6594$Pld94
         (case-lambda
           ((g$id$6595$Pld94
              g$name$6596$Pld94
              g$ver$6597$Pld94
              g$imp*$6598$Pld94
              g$vis*$6599$Pld94
              g$inv*$6600$Pld94
              g$exp-subst$6601$Pld94
              g$exp-env$6602$Pld94
              g$visit-proc$6603$Pld94
              g$invoke-proc$6604$Pld94
              g$visible?$6605$Pld94)
            ((letrec ((g$f$6606$Pld94
                        (case-lambda
                          ((g$deps$6607$Pld94)
                           (if (null? g$deps$6607$Pld94)
                             (begin
                               (g$install-library$6530$Pld94
                                 g$id$6595$Pld94
                                 g$name$6596$Pld94
                                 g$ver$6597$Pld94
                                 g$imp*$6598$Pld94
                                 g$vis*$6599$Pld94
                                 g$inv*$6600$Pld94
                                 g$exp-subst$6601$Pld94
                                 g$exp-env$6602$Pld94
                                 g$visit-proc$6603$Pld94
                                 g$invoke-proc$6604$Pld94
                                 '#f
                                 '#f
                                 g$visible?$6605$Pld94
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6608$Pld94)
                                 ((case-lambda
                                    ((g$label$6609$Pld94 g$dname$6610$Pld94)
                                     ((case-lambda
                                        ((g$l$6611$Pld94)
                                         (if (if (g$library?$6481$Pld94
                                                   g$l$6611$Pld94)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6609$Pld94
                                                      (g$library-id$6483$Pld94
                                                        g$l$6611$Pld94)))
                                               '#f)
                                           (g$f$6606$Pld94
                                             (cdr g$deps$6607$Pld94))
                                           (begin
                                             (g$fprintf$6104$Pld94
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\
                           source.
"
                                               g$name$6596$Pld94
                                               g$dname$6610$Pld94
                                               g$filename$6594$Pld94)
                                             '#f))))
                                      (g$find-library-by-name$6525$Pld94
                                        g$dname$6610$Pld94))))
                                  (car g$d$6608$Pld94)
                                  (g$cadr$4880$Pld94 g$d$6608$Pld94))))
                              (car g$deps$6607$Pld94)))))))
               g$f$6606$Pld94)
             (append g$imp*$6598$Pld94 g$vis*$6599$Pld94 g$inv*$6600$Pld94)))
           (g$others$6612$Pld94 '#f))))))
   (g$library-loader$6521$Pld94
     g$library-loader$6725$Pld94
     (g$make-parameter$6189$Pld94
       (case-lambda
         ((g$x$6613$Pld94)
          ((case-lambda
             ((g$file-name$6614$Pld94)
              (if (not g$file-name$6614$Pld94)
                (assertion-violation '#f '"cannot file library" g$x$6613$Pld94)
                ((case-lambda
                   ((g$t$6615$Pld94)
                    (if g$t$6615$Pld94
                      g$t$6615$Pld94
                      (begin
                        '#f
                        ((g$current-library-expander$6522$Pld94)
                         (g$read-library-source-file$6188$Pld94
                           g$file-name$6614$Pld94)
                         g$file-name$6614$Pld94
                         (case-lambda
                           ((g$name$6616$Pld94)
                            (if (equal? g$name$6616$Pld94 g$x$6613$Pld94)
                              (void)
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6079$Pld94)))
                                  (case-lambda
                                    ((g$p$6619$Pld94 g$e$6620$Pld94)
                                     ((case-lambda
                                        ((g$e$6621$Pld94 g$p$6622$Pld94)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6622$Pld94)
                                           (write g$x$6613$Pld94 g$p$6622$Pld94)
                                           (display '" in file " g$p$6622$Pld94)
                                           (display
                                             g$file-name$6614$Pld94
                                             g$p$6622$Pld94)
                                           (display '", found " g$p$6622$Pld94)
                                           (write
                                             g$name$6616$Pld94
                                             g$p$6622$Pld94)
                                           (display '" instead" g$p$6622$Pld94)
                                           (g$e$6621$Pld94))))
                                      g$e$6620$Pld94
                                      g$p$6619$Pld94)))))))))))))
                 (g$try-load-from-file$6520$Pld94 g$file-name$6614$Pld94)))))
           ((g$file-locator$6517$Pld94) g$x$6613$Pld94))))
       (case-lambda
         ((g$f$6623$Pld94)
          (if (procedure? g$f$6623$Pld94)
            g$f$6623$Pld94
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6623$Pld94))))))
   (g$current-library-expander$6522$Pld94
     g$current-library-expander$6726$Pld94
     (g$make-parameter$6189$Pld94
       (case-lambda
         ((g$x$6624$Pld94)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6625$Pld94)
          (if (procedure? g$f$6625$Pld94)
            g$f$6625$Pld94
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6625$Pld94))))))
   (g$external-pending-libraries$6523$Pld94
     g$external-pending-libraries$6727$Pld94
     (g$make-parameter$6189$Pld94 '()))
   (g$find-external-library$6524$Pld94
     g$find-external-library$6728$Pld94
     (case-lambda
       ((g$name$6626$Pld94)
        (begin
          (if (g$member$5345$Pld94
                g$name$6626$Pld94
                (g$external-pending-libraries$6523$Pld94))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6626$Pld94)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6629$Pld94
                g$external-pending-libraries$6630$Pld94)
              ((case-lambda
                 ((g$swap$6631$Pld94)
                  (dynamic-wind
                    g$swap$6631$Pld94
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6521$Pld94) g$name$6626$Pld94)
                         ((case-lambda
                            ((g$t$6632$Pld94)
                             (if g$t$6632$Pld94
                               g$t$6632$Pld94
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6626$Pld94)))))
                          (g$find-library-by$6513$Pld94
                            (case-lambda
                              ((g$x$6633$Pld94)
                               (equal?
                                 (g$library-name$6484$Pld94 g$x$6633$Pld94)
                                 g$name$6626$Pld94))))))))
                    g$swap$6631$Pld94)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6634$Pld94)
                      (begin
                        (g$external-pending-libraries$6629$Pld94
                          g$external-pending-libraries$6630$Pld94)
                        (set! g$external-pending-libraries$6630$Pld94
                          g$t$6634$Pld94))))
                   (g$external-pending-libraries$6629$Pld94)))))))
           g$external-pending-libraries$6523$Pld94
           (cons
             g$name$6626$Pld94
             (g$external-pending-libraries$6523$Pld94)))))))
   (g$find-library-by-name$6525$Pld94
     g$find-library-by-name$6729$Pld94
     (case-lambda
       ((g$name$6635$Pld94)
        ((case-lambda
           ((g$t$6636$Pld94)
            (if g$t$6636$Pld94
              g$t$6636$Pld94
              (begin
                '#f
                (g$find-external-library$6524$Pld94 g$name$6635$Pld94)))))
         (g$find-library-by$6513$Pld94
           (case-lambda
             ((g$x$6637$Pld94)
              (equal?
                (g$library-name$6484$Pld94 g$x$6637$Pld94)
                g$name$6635$Pld94))))))))
   (g$library-exists?$6526$Pld94
     g$library-exists?$6730$Pld94
     (case-lambda
       ((g$name$6638$Pld94)
        (if (g$find-library-by$6513$Pld94
              (case-lambda
                ((g$x$6639$Pld94)
                 (equal?
                   (g$library-name$6484$Pld94 g$x$6639$Pld94)
                   g$name$6638$Pld94))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6527$Pld94
     g$find-library-by-spec/die$6731$Pld94
     (case-lambda
       ((g$spec$6640$Pld94)
        ((case-lambda
           ((g$id$6641$Pld94)
            ((case-lambda
               ((g$t$6642$Pld94)
                (if g$t$6642$Pld94
                  g$t$6642$Pld94
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6640$Pld94)))))
             (g$find-library-by$6513$Pld94
               (case-lambda
                 ((g$x$6643$Pld94)
                  (eq? g$id$6641$Pld94
                       (g$library-id$6483$Pld94 g$x$6643$Pld94))))))))
         (car g$spec$6640$Pld94)))))
   (g$label->binding-table$6528$Pld94
     g$label->binding-table$6732$Pld94
     (g$make-eq-hashtable$5142$Pld94))
   (g$install-library-record$6529$Pld94
     g$install-library-record$6733$Pld94
     (case-lambda
       ((g$lib$6644$Pld94)
        (begin
          ((case-lambda
             ((g$exp-env$6645$Pld94)
              (for-each
                (case-lambda
                  ((g$x$6646$Pld94)
                   ((case-lambda
                      ((g$label$6647$Pld94 g$binding$6648$Pld94)
                       ((case-lambda
                          ((g$binding$6649$Pld94)
                           (g$hashtable-set!$5146$Pld94
                             g$label->binding-table$6528$Pld94
                             g$label$6647$Pld94
                             g$binding$6649$Pld94)))
                        ((case-lambda
                           ((g$t$6650$Pld94)
                            (if (eqv? g$t$6650$Pld94 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$6644$Pld94
                                  (cdr g$binding$6648$Pld94)))
                              (if (eqv? g$t$6650$Pld94 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6644$Pld94
                                    (cdr g$binding$6648$Pld94)))
                                (if (eqv? g$t$6650$Pld94 'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6644$Pld94
                                      (cdr g$binding$6648$Pld94)))
                                  g$binding$6648$Pld94)))))
                         (car g$binding$6648$Pld94)))))
                    (car g$x$6646$Pld94)
                    (cdr g$x$6646$Pld94))))
                g$exp-env$6645$Pld94)))
           (g$library-env$6490$Pld94 g$lib$6644$Pld94))
          ((g$current-library-collection$6477$Pld94) g$lib$6644$Pld94)))))
   (g$install-library$6530$Pld94
     g$install-library$6734$Pld94
     (case-lambda
       ((g$id$6651$Pld94
          g$name$6652$Pld94
          g$ver$6653$Pld94
          g$imp*$6654$Pld94
          g$vis*$6655$Pld94
          g$inv*$6656$Pld94
          g$exp-subst$6657$Pld94
          g$exp-env$6658$Pld94
          g$visit-proc$6659$Pld94
          g$invoke-proc$6660$Pld94
          g$visit-code$6661$Pld94
          g$invoke-code$6662$Pld94
          g$visible?$6663$Pld94
          g$source-file-name$6664$Pld94)
        ((case-lambda
           ((g$imp-lib*$6665$Pld94 g$vis-lib*$6666$Pld94 g$inv-lib*$6667$Pld94)
            (begin
              (if (if (symbol? g$id$6651$Pld94)
                    (if (list? g$name$6652$Pld94)
                      (begin '#f (list? g$ver$6653$Pld94))
                      '#f)
                    '#f)
                (void)
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6651$Pld94
                  g$name$6652$Pld94
                  g$ver$6653$Pld94))
              (if (g$library-exists?$6526$Pld94 g$name$6652$Pld94)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6652$Pld94)
                (void))
              ((case-lambda
                 ((g$lib$6668$Pld94)
                  (g$install-library-record$6529$Pld94 g$lib$6668$Pld94)))
               (g$make-library$6482$Pld94
                 g$id$6651$Pld94
                 g$name$6652$Pld94
                 g$ver$6653$Pld94
                 g$imp-lib*$6665$Pld94
                 g$vis-lib*$6666$Pld94
                 g$inv-lib*$6667$Pld94
                 g$exp-subst$6657$Pld94
                 g$exp-env$6658$Pld94
                 g$visit-proc$6659$Pld94
                 g$invoke-proc$6660$Pld94
                 g$visit-code$6661$Pld94
                 g$invoke-code$6662$Pld94
                 g$visible?$6663$Pld94
                 g$source-file-name$6664$Pld94)))))
         (map g$find-library-by-spec/die$6527$Pld94 g$imp*$6654$Pld94)
         (map g$find-library-by-spec/die$6527$Pld94 g$vis*$6655$Pld94)
         (map g$find-library-by-spec/die$6527$Pld94 g$inv*$6656$Pld94)))))
   (g$imported-label->binding$6531$Pld94
     g$imported-label->binding$6735$Pld94
     (case-lambda
       ((g$lab$6669$Pld94)
        (g$hashtable-ref$5145$Pld94
          g$label->binding-table$6528$Pld94
          g$lab$6669$Pld94
          '#f))))
   (g$invoke-library$6532$Pld94
     g$invoke-library$6736$Pld94
     (case-lambda
       ((g$lib$6670$Pld94)
        ((case-lambda
           ((g$invoke$6671$Pld94)
            (if (procedure? g$invoke$6671$Pld94)
              (begin
                (g$set-library-invoke-state!$6506$Pld94
                  g$lib$6670$Pld94
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$6670$Pld94))))
                (for-each
                  g$invoke-library$6532$Pld94
                  (g$library-inv*$6488$Pld94 g$lib$6670$Pld94))
                (g$set-library-invoke-state!$6506$Pld94
                  g$lib$6670$Pld94
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$6670$Pld94))))
                (g$invoke$6671$Pld94)
                (g$set-library-invoke-state!$6506$Pld94 g$lib$6670$Pld94 '#t))
              (void))))
         (g$library-invoke-state$6492$Pld94 g$lib$6670$Pld94)))))
   (g$visit-library$6533$Pld94
     g$visit-library$6737$Pld94
     (case-lambda
       ((g$lib$6672$Pld94)
        ((case-lambda
           ((g$visit$6673$Pld94)
            (if (procedure? g$visit$6673$Pld94)
              (begin
                (g$set-library-visit-state!$6505$Pld94
                  g$lib$6672$Pld94
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$6672$Pld94))))
                (for-each
                  g$invoke-library$6532$Pld94
                  (g$library-vis*$6487$Pld94 g$lib$6672$Pld94))
                (g$set-library-visit-state!$6505$Pld94
                  g$lib$6672$Pld94
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$6672$Pld94))))
                (g$visit$6673$Pld94)
                (g$set-library-visit-state!$6505$Pld94 g$lib$6672$Pld94 '#t))
              (void))))
         (g$library-visit-state$6491$Pld94 g$lib$6672$Pld94)))))
   (g$invoke-library-by-spec$6534$Pld94
     g$invoke-library-by-spec$6738$Pld94
     (case-lambda
       ((g$spec$6674$Pld94)
        (g$invoke-library$6532$Pld94
          (g$find-library-by-spec/die$6527$Pld94 g$spec$6674$Pld94)))))
   (g$installed-libraries$6535$Pld94
     g$installed-libraries$6739$Pld94
     (case-lambda
       ((g$all?$6675$Pld94)
        ((letrec ((g$f$6676$Pld94
                    (case-lambda
                      ((g$ls$6677$Pld94)
                       (if (null? g$ls$6677$Pld94)
                         '()
                         (if ((case-lambda
                                ((g$t$6678$Pld94)
                                 (if g$t$6678$Pld94
                                   g$t$6678$Pld94
                                   (begin
                                     '#f
                                     (g$library-visible?$6495$Pld94
                                       (car g$ls$6677$Pld94))))))
                              g$all?$6675$Pld94)
                           (cons
                             (car g$ls$6677$Pld94)
                             (g$f$6676$Pld94 (cdr g$ls$6677$Pld94)))
                           (g$f$6676$Pld94 (cdr g$ls$6677$Pld94))))))))
           g$f$6676$Pld94)
         ((g$current-library-collection$6477$Pld94))))
       (() (g$installed-libraries$6535$Pld94 '#f))))
   (g$library-spec$6536$Pld94
     g$library-spec$6740$Pld94
     (case-lambda
       ((g$x$6679$Pld94)
        (begin
          (if (g$library?$6481$Pld94 g$x$6679$Pld94)
            (void)
            (assertion-violation 'library-spec '"not a library" g$x$6679$Pld94))
          (list
            (g$library-id$6483$Pld94 g$x$6679$Pld94)
            (g$library-name$6484$Pld94 g$x$6679$Pld94)
            (g$library-version$6485$Pld94 g$x$6679$Pld94)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$6741$Pld94
     g$build-global-define$6851$Pld94
     (case-lambda ((g$x$6822$Pld94) (g$build-void$6818$Pld94))))
   (g$build-lambda$6790$Pld94
     g$build-lambda$6852$Pld94
     (case-lambda
       ((g$ae$6823$Pld94 g$vars$6824$Pld94 g$exp$6825$Pld94)
        (list 'case-lambda (list g$vars$6824$Pld94 g$exp$6825$Pld94)))))
   (g$build-case-lambda$6791$Pld94
     g$build-case-lambda$6853$Pld94
     (case-lambda
       ((g$ae$6826$Pld94 g$vars*$6827$Pld94 g$exp*$6828$Pld94)
        (cons 'case-lambda (map list g$vars*$6827$Pld94 g$exp*$6828$Pld94)))))
   (g$build-let$6792$Pld94
     g$build-let$6854$Pld94
     (case-lambda
       ((g$ae$6829$Pld94 g$lhs*$6830$Pld94 g$rhs*$6831$Pld94 g$body$6832$Pld94)
        (cons
          (g$build-lambda$6790$Pld94
            g$ae$6829$Pld94
            g$lhs*$6830$Pld94
            g$body$6832$Pld94)
          g$rhs*$6831$Pld94))))
   (g$build-sequence$6817$Pld94
     g$build-sequence$6855$Pld94
     (case-lambda
       ((g$ae$6833$Pld94 g$exps$6834$Pld94)
        ((letrec ((g$loop$6835$Pld94
                    (case-lambda
                      ((g$exps$6836$Pld94)
                       (if (null? (cdr g$exps$6836$Pld94))
                         (car g$exps$6836$Pld94)
                         (if (equal?
                               (car g$exps$6836$Pld94)
                               (g$build-void$6818$Pld94))
                           (g$loop$6835$Pld94 (cdr g$exps$6836$Pld94))
                           (cons 'begin g$exps$6836$Pld94)))))))
           g$loop$6835$Pld94)
         g$exps$6834$Pld94))))
   (g$build-void$6818$Pld94
     g$build-void$6856$Pld94
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$6819$Pld94
     g$build-letrec$6857$Pld94
     (case-lambda
       ((g$ae$6837$Pld94
          g$vars$6838$Pld94
          g$val-exps$6839$Pld94
          g$body-exp$6840$Pld94)
        (if (null? g$vars$6838$Pld94)
          g$body-exp$6840$Pld94
          (list
            'letrec
            (map list g$vars$6838$Pld94 g$val-exps$6839$Pld94)
            g$body-exp$6840$Pld94)))))
   (g$build-letrec*$6820$Pld94
     g$build-letrec*$6858$Pld94
     (case-lambda
       ((g$ae$6841$Pld94
          g$vars$6842$Pld94
          g$val-exps$6843$Pld94
          g$body-exp$6844$Pld94)
        (if (null? g$vars$6842$Pld94)
          g$body-exp$6844$Pld94
          (list
            'letrec*
            (map list g$vars$6842$Pld94 g$val-exps$6843$Pld94)
            g$body-exp$6844$Pld94)))))
   (g$build-library-letrec*$6821$Pld94
     g$build-library-letrec*$6859$Pld94
     (case-lambda
       ((g$ae$6845$Pld94
          g$name$6846$Pld94
          g$vars$6847$Pld94
          g$locs$6848$Pld94
          g$val-exps$6849$Pld94
          g$body-exp$6850$Pld94)
        (list
          'library-letrec*
          g$name$6846$Pld94
          (map list g$vars$6847$Pld94 g$locs$6848$Pld94 g$val-exps$6849$Pld94)
          g$body-exp$6850$Pld94)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$6860$Pld94
     g$set-cons$10487$Pld94
     (case-lambda
       ((g$x$7313$Pld94 g$ls$7314$Pld94)
        (if (memq g$x$7313$Pld94 g$ls$7314$Pld94)
          g$ls$7314$Pld94
          (cons g$x$7313$Pld94 g$ls$7314$Pld94)))))
   (g$set-union$6861$Pld94
     g$set-union$10488$Pld94
     (case-lambda
       ((g$ls1$7315$Pld94 g$ls2$7316$Pld94)
        (if (null? g$ls1$7315$Pld94)
          g$ls2$7316$Pld94
          (if (memq (car g$ls1$7315$Pld94) g$ls2$7316$Pld94)
            (g$set-union$6861$Pld94 (cdr g$ls1$7315$Pld94) g$ls2$7316$Pld94)
            (cons
              (car g$ls1$7315$Pld94)
              (g$set-union$6861$Pld94
                (cdr g$ls1$7315$Pld94)
                g$ls2$7316$Pld94)))))))
   (g$top-mark*$6863$Pld94 g$top-mark*$10489$Pld94 '(top))
   (g$top-marked?$6864$Pld94
     g$top-marked?$10490$Pld94
     (case-lambda ((g$m*$7317$Pld94) (memq 'top g$m*$7317$Pld94))))
   (g$gen-lexical$6865$Pld94
     g$gen-lexical$10491$Pld94
     (case-lambda
       ((g$sym$7318$Pld94)
        (if (symbol? g$sym$7318$Pld94)
          (gensym g$sym$7318$Pld94)
          (if (g$stx?$6893$Pld94 g$sym$7318$Pld94)
            (g$gen-lexical$6865$Pld94 (g$id->sym$6922$Pld94 g$sym$7318$Pld94))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7318$Pld94))))))
   (g$gen-global$6866$Pld94
     g$gen-global$10492$Pld94
     (case-lambda
       ((g$x$7319$Pld94) (g$gen-lexical$6865$Pld94 g$x$7319$Pld94))))
   (g$gen-label$6867$Pld94
     g$gen-label$10493$Pld94
     (case-lambda ((g$_$7320$Pld94) (gensym))))
   (g$gen-top-level-label$6868$Pld94
     g$gen-top-level-label$10494$Pld94
     (case-lambda
       ((g$id$7321$Pld94 g$rib$7322$Pld94)
        (letrec* ((g$find$7323$Pld94
                    (case-lambda
                      ((g$sym$7329$Pld94
                         g$mark*$7330$Pld94
                         g$sym*$7331$Pld94
                         g$mark**$7332$Pld94
                         g$label*$7333$Pld94)
                       (if (pair? g$sym*$7331$Pld94)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7329$Pld94
                                        (car g$sym*$7331$Pld94))
                                 (begin
                                   '#f
                                   (g$same-marks?$6923$Pld94
                                     g$mark*$7330$Pld94
                                     (car g$mark**$7332$Pld94)))
                                 '#f)
                             (car g$label*$7333$Pld94)
                             (g$find$7323$Pld94
                               g$sym$7329$Pld94
                               g$mark*$7330$Pld94
                               (cdr g$sym*$7331$Pld94)
                               (cdr g$mark**$7332$Pld94)
                               (cdr g$label*$7333$Pld94))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7324$Pld94 g$mark*$7325$Pld94)
              ((case-lambda
                 ((g$sym*$7326$Pld94)
                  ((case-lambda
                     ((g$t$7327$Pld94)
                      (if g$t$7327$Pld94
                        ((case-lambda
                           ((g$label$7328$Pld94)
                            (if (g$imported-label->binding$6735$Pld94
                                  g$label$7328$Pld94)
                              (gensym)
                              g$label$7328$Pld94)))
                         g$t$7327$Pld94)
                        (gensym))))
                   (if (memq
                         g$sym$7324$Pld94
                         (g$rib-sym*$6876$Pld94 g$rib$7322$Pld94))
                     (begin
                       '#f
                       (g$find$7323$Pld94
                         g$sym$7324$Pld94
                         g$mark*$7325$Pld94
                         g$sym*$7326$Pld94
                         (g$rib-mark**$6877$Pld94 g$rib$7322$Pld94)
                         (g$rib-label*$6878$Pld94 g$rib$7322$Pld94)))
                     '#f))))
               (g$rib-sym*$6876$Pld94 g$rib$7322$Pld94))))
           (g$id->sym$6922$Pld94 g$id$7321$Pld94)
           (g$stx-mark*$6896$Pld94 g$id$7321$Pld94))))))
   (g$gen-define-label+loc$6869$Pld94
     g$gen-define-label+loc$10495$Pld94
     (case-lambda
       ((g$id$7334$Pld94 g$rib$7335$Pld94)
        ((case-lambda
           ((g$t$7336$Pld94)
            (if g$t$7336$Pld94
              ((case-lambda
                 ((g$env$7337$Pld94)
                  ((case-lambda
                     ((g$label$7338$Pld94 g$locs$7339$Pld94)
                      (values
                        g$label$7338$Pld94
                        ((case-lambda
                           ((g$t$7340$Pld94)
                            (if g$t$7340$Pld94
                              (cdr g$t$7340$Pld94)
                              ((case-lambda
                                 ((g$loc$7341$Pld94)
                                  (begin
                                    (g$set-interaction-env-locs!$7282$Pld94
                                      g$env$7337$Pld94
                                      (cons
                                        (cons
                                          g$label$7338$Pld94
                                          g$loc$7341$Pld94)
                                        g$locs$7339$Pld94))
                                    g$loc$7341$Pld94)))
                               (g$gen-lexical$6865$Pld94 g$id$7334$Pld94)))))
                         (assq g$label$7338$Pld94 g$locs$7339$Pld94)))))
                   (g$gen-top-level-label$6868$Pld94
                     g$id$7334$Pld94
                     g$rib$7335$Pld94)
                   (g$interaction-env-locs$7279$Pld94 g$env$7337$Pld94))))
               g$t$7336$Pld94)
              (values (gensym) (g$gen-lexical$6865$Pld94 g$id$7334$Pld94)))))
         (g$top-level-context$7312$Pld94)))))
   (g$gen-define-label$6870$Pld94
     g$gen-define-label$10496$Pld94
     (case-lambda
       ((g$id$7342$Pld94 g$rib$7343$Pld94)
        (if (g$top-level-context$7312$Pld94)
          (g$gen-top-level-label$6868$Pld94 g$id$7342$Pld94 g$rib$7343$Pld94)
          (gensym)))))
   (g$7711$6871$Pld94
     g$7711$10497$Pld94
     (make-record-type-descriptor
       'rib
       '#f
       'g$7714$Pld94
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$7713$6872$Pld94 g$7713$10498$Pld94 '#f)
   (g$7712$6873$Pld94
     g$7712$10499$Pld94
     (make-record-constructor-descriptor
       g$7711$6871$Pld94
       '#f
       g$7713$6872$Pld94))
   (g$rib?$6874$Pld94
     g$rib?$10500$Pld94
     (record-predicate g$7711$6871$Pld94))
   (g$make-rib$6875$Pld94
     g$make-rib$10501$Pld94
     (record-constructor g$7712$6873$Pld94))
   (g$rib-sym*$6876$Pld94
     g$rib-sym*$10502$Pld94
     (record-accessor g$7711$6871$Pld94 '0))
   (g$rib-mark**$6877$Pld94
     g$rib-mark**$10503$Pld94
     (record-accessor g$7711$6871$Pld94 '1))
   (g$rib-label*$6878$Pld94
     g$rib-label*$10504$Pld94
     (record-accessor g$7711$6871$Pld94 '2))
   (g$rib-sealed/freq$6879$Pld94
     g$rib-sealed/freq$10505$Pld94
     (record-accessor g$7711$6871$Pld94 '3))
   (g$set-rib-sym*!$6880$Pld94
     g$set-rib-sym*!$10506$Pld94
     (record-mutator g$7711$6871$Pld94 '0))
   (g$set-rib-mark**!$6881$Pld94
     g$set-rib-mark**!$10507$Pld94
     (record-mutator g$7711$6871$Pld94 '1))
   (g$set-rib-label*!$6882$Pld94
     g$set-rib-label*!$10508$Pld94
     (record-mutator g$7711$6871$Pld94 '2))
   (g$set-rib-sealed/freq!$6883$Pld94
     g$set-rib-sealed/freq!$10509$Pld94
     (record-mutator g$7711$6871$Pld94 '3))
   (g$make-empty-rib$6884$Pld94
     g$make-empty-rib$10510$Pld94
     (case-lambda (() (g$make-rib$6875$Pld94 '() '() '() '#f))))
   (g$extend-rib!$6885$Pld94
     g$extend-rib!$10511$Pld94
     (case-lambda
       ((g$rib$7344$Pld94 g$id$7345$Pld94 g$label$7346$Pld94)
        (letrec* ((g$find$7347$Pld94
                    (case-lambda
                      ((g$sym$7353$Pld94
                         g$mark*$7354$Pld94
                         g$sym*$7355$Pld94
                         g$mark**$7356$Pld94
                         g$label*$7357$Pld94)
                       (if (pair? g$sym*$7355$Pld94)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7353$Pld94
                                        (car g$sym*$7355$Pld94))
                                 (begin
                                   '#f
                                   (g$same-marks?$6923$Pld94
                                     g$mark*$7354$Pld94
                                     (car g$mark**$7356$Pld94)))
                                 '#f)
                             g$label*$7357$Pld94
                             (g$find$7347$Pld94
                               g$sym$7353$Pld94
                               g$mark*$7354$Pld94
                               (cdr g$sym*$7355$Pld94)
                               (cdr g$mark**$7356$Pld94)
                               (cdr g$label*$7357$Pld94))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$6879$Pld94 g$rib$7344$Pld94)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7344$Pld94)
              (void))
            ((case-lambda
               ((g$sym$7348$Pld94 g$mark*$7349$Pld94)
                ((case-lambda
                   ((g$sym*$7350$Pld94)
                    ((case-lambda
                       ((g$t$7351$Pld94)
                        (if g$t$7351$Pld94
                          ((case-lambda
                             ((g$p$7352$Pld94)
                              (if (eq? g$label$7346$Pld94 (car g$p$7352$Pld94))
                                (void)
                                (if (g$top-level-context$7312$Pld94)
                                  (set-car! g$p$7352$Pld94 g$label$7346$Pld94)
                                  (g$syntax-violation$7305$Pld94
                                    '#f
                                    '"cannot redefine"
                                    g$id$7345$Pld94)))))
                           g$t$7351$Pld94)
                          (begin
                            (g$set-rib-sym*!$6880$Pld94
                              g$rib$7344$Pld94
                              (cons g$sym$7348$Pld94 g$sym*$7350$Pld94))
                            (g$set-rib-mark**!$6881$Pld94
                              g$rib$7344$Pld94
                              (cons
                                g$mark*$7349$Pld94
                                (g$rib-mark**$6877$Pld94 g$rib$7344$Pld94)))
                            (g$set-rib-label*!$6882$Pld94
                              g$rib$7344$Pld94
                              (cons
                                g$label$7346$Pld94
                                (g$rib-label*$6878$Pld94 g$rib$7344$Pld94)))))))
                     (if (memq
                           g$sym$7348$Pld94
                           (g$rib-sym*$6876$Pld94 g$rib$7344$Pld94))
                       (begin
                         '#f
                         (g$find$7347$Pld94
                           g$sym$7348$Pld94
                           g$mark*$7349$Pld94
                           g$sym*$7350$Pld94
                           (g$rib-mark**$6877$Pld94 g$rib$7344$Pld94)
                           (g$rib-label*$6878$Pld94 g$rib$7344$Pld94)))
                       '#f))))
                 (g$rib-sym*$6876$Pld94 g$rib$7344$Pld94))))
             (g$id->sym$6922$Pld94 g$id$7345$Pld94)
             (g$stx-mark*$6896$Pld94 g$id$7345$Pld94)))))))
   (g$make-rib-map$6886$Pld94
     g$make-rib-map$10512$Pld94
     (case-lambda
       ((g$sym*$7358$Pld94)
        ((case-lambda
           ((g$ht$7359$Pld94)
            ((letrec ((g$f$7360$Pld94
                        (case-lambda
                          ((g$i$7361$Pld94 g$sym*$7362$Pld94)
                           (if (null? g$sym*$7362$Pld94)
                             g$ht$7359$Pld94
                             (begin
                               (g$hashtable-update!$5149$Pld94
                                 g$ht$7359$Pld94
                                 (car g$sym*$7362$Pld94)
                                 (case-lambda
                                   ((g$x$7363$Pld94)
                                    (cons g$i$7361$Pld94 g$x$7363$Pld94)))
                                 '())
                               (g$f$7360$Pld94
                                 (+ g$i$7361$Pld94 '1)
                                 (cdr g$sym*$7362$Pld94))))))))
               g$f$7360$Pld94)
             '0
             g$sym*$7358$Pld94)))
         (g$make-eq-hashtable$5142$Pld94)))))
   (g$seal-rib!$6887$Pld94
     g$seal-rib!$10513$Pld94
     (case-lambda
       ((g$rib$7364$Pld94)
        ((case-lambda
           ((g$sym*$7365$Pld94)
            (if (null? g$sym*$7365$Pld94)
              (void)
              (begin
                (g$set-rib-sym*!$6880$Pld94
                  g$rib$7364$Pld94
                  (list->vector g$sym*$7365$Pld94))
                (g$set-rib-mark**!$6881$Pld94
                  g$rib$7364$Pld94
                  (list->vector (g$rib-mark**$6877$Pld94 g$rib$7364$Pld94)))
                (g$set-rib-label*!$6882$Pld94
                  g$rib$7364$Pld94
                  (list->vector (g$rib-label*$6878$Pld94 g$rib$7364$Pld94)))
                (g$set-rib-sealed/freq!$6883$Pld94
                  g$rib$7364$Pld94
                  (g$make-rib-map$6886$Pld94 g$sym*$7365$Pld94))))))
         (g$rib-sym*$6876$Pld94 g$rib$7364$Pld94)))))
   (g$unseal-rib!$6888$Pld94
     g$unseal-rib!$10514$Pld94
     (case-lambda
       ((g$rib$7366$Pld94)
        (if (g$rib-sealed/freq$6879$Pld94 g$rib$7366$Pld94)
          (begin
            (g$set-rib-sealed/freq!$6883$Pld94 g$rib$7366$Pld94 '#f)
            (g$set-rib-sym*!$6880$Pld94
              g$rib$7366$Pld94
              (vector->list (g$rib-sym*$6876$Pld94 g$rib$7366$Pld94)))
            (g$set-rib-mark**!$6881$Pld94
              g$rib$7366$Pld94
              (vector->list (g$rib-mark**$6877$Pld94 g$rib$7366$Pld94)))
            (g$set-rib-label*!$6882$Pld94
              g$rib$7366$Pld94
              (vector->list (g$rib-label*$6878$Pld94 g$rib$7366$Pld94))))
          (void)))))
   (g$make-full-rib$6889$Pld94
     g$make-full-rib$10515$Pld94
     (case-lambda
       ((g$id*$7367$Pld94 g$label*$7368$Pld94)
        ((case-lambda
           ((g$r$7369$Pld94)
            (begin (g$seal-rib!$6887$Pld94 g$r$7369$Pld94) g$r$7369$Pld94)))
         (g$make-rib$6875$Pld94
           (map g$id->sym$6922$Pld94 g$id*$7367$Pld94)
           (map g$stx-mark*$6896$Pld94 g$id*$7367$Pld94)
           g$label*$7368$Pld94
           '#f)))))
   (g$7737$6890$Pld94
     g$7737$10516$Pld94
     (make-record-type-descriptor
       'stx
       '#f
       'g$7740$Pld94
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$7739$6891$Pld94 g$7739$10517$Pld94 '#f)
   (g$7738$6892$Pld94
     g$7738$10518$Pld94
     (make-record-constructor-descriptor
       g$7737$6890$Pld94
       '#f
       g$7739$6891$Pld94))
   (g$stx?$6893$Pld94
     g$stx?$10519$Pld94
     (record-predicate g$7737$6890$Pld94))
   (g$make-stx$6894$Pld94
     g$make-stx$10520$Pld94
     (record-constructor g$7738$6892$Pld94))
   (g$stx-expr$6895$Pld94
     g$stx-expr$10521$Pld94
     (record-accessor g$7737$6890$Pld94 '0))
   (g$stx-mark*$6896$Pld94
     g$stx-mark*$10522$Pld94
     (record-accessor g$7737$6890$Pld94 '1))
   (g$stx-subst*$6897$Pld94
     g$stx-subst*$10523$Pld94
     (record-accessor g$7737$6890$Pld94 '2))
   (g$stx-ae*$6898$Pld94
     g$stx-ae*$10524$Pld94
     (record-accessor g$7737$6890$Pld94 '3))
   (g$set-stx-expr!$6899$Pld94
     g$set-stx-expr!$10525$Pld94
     (record-mutator g$7737$6890$Pld94 '0))
   (g$set-stx-mark*!$6900$Pld94
     g$set-stx-mark*!$10526$Pld94
     (record-mutator g$7737$6890$Pld94 '1))
   (g$set-stx-subst*!$6901$Pld94
     g$set-stx-subst*!$10527$Pld94
     (record-mutator g$7737$6890$Pld94 '2))
   (g$set-stx-ae*!$6902$Pld94
     g$set-stx-ae*!$10528$Pld94
     (record-mutator g$7737$6890$Pld94 '3))
   (g$rp$6903$Pld94
     g$rp$10529$Pld94
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7370$Pld94 g$p$7371$Pld94)
          (begin
            (display '"#<syntax " g$p$7371$Pld94)
            (write (g$stx->datum$6932$Pld94 g$x$7370$Pld94) g$p$7371$Pld94)
            ((case-lambda
               ((g$expr$7372$Pld94)
                (if (annotation? g$expr$7372$Pld94)
                  ((case-lambda
                     ((g$src$7373$Pld94)
                      (if (pair? g$src$7373$Pld94)
                        (begin
                          (display '" [" g$p$7371$Pld94)
                          (display (cdr g$src$7373$Pld94) g$p$7371$Pld94)
                          (display '" of " g$p$7371$Pld94)
                          (display (car g$src$7373$Pld94) g$p$7371$Pld94)
                          (display '"]" g$p$7371$Pld94))
                        (void))))
                   (annotation-source g$expr$7372$Pld94))
                  (void))))
             (g$stx-expr$6895$Pld94 g$x$7370$Pld94))
            (display '">" g$p$7371$Pld94))))))
   (g$datum->stx$6904$Pld94
     g$datum->stx$10530$Pld94
     (case-lambda
       ((g$id$7374$Pld94 g$datum$7375$Pld94)
        (g$make-stx$6894$Pld94
          g$datum$7375$Pld94
          (g$stx-mark*$6896$Pld94 g$id$7374$Pld94)
          (g$stx-subst*$6897$Pld94 g$id$7374$Pld94)
          (g$stx-ae*$6898$Pld94 g$id$7374$Pld94)))))
   (g$gen-mark$6905$Pld94
     g$gen-mark$10531$Pld94
     (case-lambda (() (string '#\m))))
   (g$anti-mark$6906$Pld94 g$anti-mark$10532$Pld94 '#f)
   (g$anti-mark?$6907$Pld94 g$anti-mark?$10533$Pld94 not)
   (g$join-wraps$6908$Pld94
     g$join-wraps$10534$Pld94
     (case-lambda
       ((g$m1*$7376$Pld94 g$s1*$7377$Pld94 g$ae1*$7378$Pld94 g$e$7379$Pld94)
        (letrec* ((g$cancel$7380$Pld94
                    (case-lambda
                      ((g$ls1$7384$Pld94 g$ls2$7385$Pld94)
                       ((letrec ((g$f$7386$Pld94
                                   (case-lambda
                                     ((g$x$7387$Pld94 g$ls1$7388$Pld94)
                                      (if (null? g$ls1$7388$Pld94)
                                        (cdr g$ls2$7385$Pld94)
                                        (cons
                                          g$x$7387$Pld94
                                          (g$f$7386$Pld94
                                            (car g$ls1$7388$Pld94)
                                            (cdr g$ls1$7388$Pld94))))))))
                          g$f$7386$Pld94)
                        (car g$ls1$7384$Pld94)
                        (cdr g$ls1$7384$Pld94))))))
          ((case-lambda
             ((g$m2*$7381$Pld94 g$s2*$7382$Pld94 g$ae2*$7383$Pld94)
              (if (if (not (null? g$m1*$7376$Pld94))
                    (if (not (null? g$m2*$7381$Pld94))
                      (begin
                        '#f
                        (g$anti-mark?$6907$Pld94 (car g$m2*$7381$Pld94)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7380$Pld94 g$m1*$7376$Pld94 g$m2*$7381$Pld94)
                  (g$cancel$7380$Pld94 g$s1*$7377$Pld94 g$s2*$7382$Pld94)
                  (g$cancel$7380$Pld94 g$ae1*$7378$Pld94 g$ae2*$7383$Pld94))
                (values
                  (append g$m1*$7376$Pld94 g$m2*$7381$Pld94)
                  (append g$s1*$7377$Pld94 g$s2*$7382$Pld94)
                  (append g$ae1*$7378$Pld94 g$ae2*$7383$Pld94)))))
           (g$stx-mark*$6896$Pld94 g$e$7379$Pld94)
           (g$stx-subst*$6897$Pld94 g$e$7379$Pld94)
           (g$stx-ae*$6898$Pld94 g$e$7379$Pld94))))))
   (g$mkstx$6909$Pld94
     g$mkstx$10535$Pld94
     (case-lambda
       ((g$e$7389$Pld94 g$m*$7390$Pld94 g$s*$7391$Pld94 g$ae*$7392$Pld94)
        (if (g$stx?$6893$Pld94 g$e$7389$Pld94)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$6908$Pld94
                 g$m*$7390$Pld94
                 g$s*$7391$Pld94
                 g$ae*$7392$Pld94
                 g$e$7389$Pld94)))
            (case-lambda
              ((g$m*$7396$Pld94 g$s*$7397$Pld94 g$ae*$7398$Pld94)
               ((case-lambda
                  ((g$ae*$7399$Pld94 g$s*$7400$Pld94 g$m*$7401$Pld94)
                   (g$make-stx$6894$Pld94
                     (g$stx-expr$6895$Pld94 g$e$7389$Pld94)
                     g$m*$7401$Pld94
                     g$s*$7400$Pld94
                     g$ae*$7399$Pld94)))
                g$ae*$7398$Pld94
                g$s*$7397$Pld94
                g$m*$7396$Pld94))))
          (g$make-stx$6894$Pld94
            g$e$7389$Pld94
            g$m*$7390$Pld94
            g$s*$7391$Pld94
            g$ae*$7392$Pld94)))))
   (g$add-mark$6910$Pld94
     g$add-mark$10536$Pld94
     (case-lambda
       ((g$m$7402$Pld94 g$e$7403$Pld94 g$ae$7404$Pld94)
        (g$mkstx$6909$Pld94
          g$e$7403$Pld94
          (list g$m$7402$Pld94)
          '(shift)
          (list g$ae$7404$Pld94)))))
   (g$add-subst$6911$Pld94
     g$add-subst$10537$Pld94
     (case-lambda
       ((g$subst$7405$Pld94 g$e$7406$Pld94)
        (g$mkstx$6909$Pld94 g$e$7406$Pld94 '() (list g$subst$7405$Pld94) '()))))
   (g$syntax-kind?$6912$Pld94
     g$syntax-kind?$10538$Pld94
     (case-lambda
       ((g$x$7407$Pld94 g$p?$7408$Pld94)
        (if (g$stx?$6893$Pld94 g$x$7407$Pld94)
          (g$syntax-kind?$6912$Pld94
            (g$stx-expr$6895$Pld94 g$x$7407$Pld94)
            g$p?$7408$Pld94)
          (if (annotation? g$x$7407$Pld94)
            (g$syntax-kind?$6912$Pld94
              (annotation-expression g$x$7407$Pld94)
              g$p?$7408$Pld94)
            (g$p?$7408$Pld94 g$x$7407$Pld94))))))
   (g$syntax-vector->list$6913$Pld94
     g$syntax-vector->list$10539$Pld94
     (case-lambda
       ((g$x$7409$Pld94)
        (if (g$stx?$6893$Pld94 g$x$7409$Pld94)
          ((case-lambda
             ((g$ls$7410$Pld94 g$m*$7411$Pld94 g$s*$7412$Pld94 g$ae*$7413$Pld94)
              (map (case-lambda
                     ((g$x$7414$Pld94)
                      (g$mkstx$6909$Pld94
                        g$x$7414$Pld94
                        g$m*$7411$Pld94
                        g$s*$7412$Pld94
                        g$ae*$7413$Pld94)))
                   g$ls$7410$Pld94)))
           (g$syntax-vector->list$6913$Pld94
             (g$stx-expr$6895$Pld94 g$x$7409$Pld94))
           (g$stx-mark*$6896$Pld94 g$x$7409$Pld94)
           (g$stx-subst*$6897$Pld94 g$x$7409$Pld94)
           (g$stx-ae*$6898$Pld94 g$x$7409$Pld94))
          (if (annotation? g$x$7409$Pld94)
            (g$syntax-vector->list$6913$Pld94
              (annotation-expression g$x$7409$Pld94))
            (if (vector? g$x$7409$Pld94)
              (vector->list g$x$7409$Pld94)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7409$Pld94)))))))
   (g$syntax-pair?$6914$Pld94
     g$syntax-pair?$10540$Pld94
     (case-lambda
       ((g$x$7415$Pld94) (g$syntax-kind?$6912$Pld94 g$x$7415$Pld94 pair?))))
   (g$syntax-vector?$6915$Pld94
     g$syntax-vector?$10541$Pld94
     (case-lambda
       ((g$x$7416$Pld94) (g$syntax-kind?$6912$Pld94 g$x$7416$Pld94 vector?))))
   (g$syntax-null?$6916$Pld94
     g$syntax-null?$10542$Pld94
     (case-lambda
       ((g$x$7417$Pld94) (g$syntax-kind?$6912$Pld94 g$x$7417$Pld94 null?))))
   (g$syntax-list?$6917$Pld94
     g$syntax-list?$10543$Pld94
     (case-lambda
       ((g$x$7418$Pld94)
        ((case-lambda
           ((g$t$7419$Pld94)
            (if g$t$7419$Pld94
              g$t$7419$Pld94
              (begin
                '#f
                (if (g$syntax-pair?$6914$Pld94 g$x$7418$Pld94)
                  (begin
                    '#f
                    (g$syntax-list?$6917$Pld94
                      (g$syntax-cdr$6919$Pld94 g$x$7418$Pld94)))
                  '#f)))))
         (g$syntax-null?$6916$Pld94 g$x$7418$Pld94)))))
   (g$syntax-car$6918$Pld94
     g$syntax-car$10544$Pld94
     (case-lambda
       ((g$x$7420$Pld94)
        (if (g$stx?$6893$Pld94 g$x$7420$Pld94)
          (g$mkstx$6909$Pld94
            (g$syntax-car$6918$Pld94 (g$stx-expr$6895$Pld94 g$x$7420$Pld94))
            (g$stx-mark*$6896$Pld94 g$x$7420$Pld94)
            (g$stx-subst*$6897$Pld94 g$x$7420$Pld94)
            (g$stx-ae*$6898$Pld94 g$x$7420$Pld94))
          (if (annotation? g$x$7420$Pld94)
            (g$syntax-car$6918$Pld94 (annotation-expression g$x$7420$Pld94))
            (if (pair? g$x$7420$Pld94)
              (car g$x$7420$Pld94)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7420$Pld94)))))))
   (g$syntax-cdr$6919$Pld94
     g$syntax-cdr$10545$Pld94
     (case-lambda
       ((g$x$7421$Pld94)
        (if (g$stx?$6893$Pld94 g$x$7421$Pld94)
          (g$mkstx$6909$Pld94
            (g$syntax-cdr$6919$Pld94 (g$stx-expr$6895$Pld94 g$x$7421$Pld94))
            (g$stx-mark*$6896$Pld94 g$x$7421$Pld94)
            (g$stx-subst*$6897$Pld94 g$x$7421$Pld94)
            (g$stx-ae*$6898$Pld94 g$x$7421$Pld94))
          (if (annotation? g$x$7421$Pld94)
            (g$syntax-cdr$6919$Pld94 (annotation-expression g$x$7421$Pld94))
            (if (pair? g$x$7421$Pld94)
              (cdr g$x$7421$Pld94)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7421$Pld94)))))))
   (g$syntax->list$6920$Pld94
     g$syntax->list$10546$Pld94
     (case-lambda
       ((g$x$7422$Pld94)
        (if (g$syntax-pair?$6914$Pld94 g$x$7422$Pld94)
          (cons
            (g$syntax-car$6918$Pld94 g$x$7422$Pld94)
            (g$syntax->list$6920$Pld94
              (g$syntax-cdr$6919$Pld94 g$x$7422$Pld94)))
          (if (g$syntax-null?$6916$Pld94 g$x$7422$Pld94)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7422$Pld94))))))
   (g$id?$6921$Pld94
     g$id?$10547$Pld94
     (case-lambda
       ((g$x$7423$Pld94)
        (if (g$stx?$6893$Pld94 g$x$7423$Pld94)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7424$Pld94)
                (symbol?
                  (if (annotation? g$expr$7424$Pld94)
                    (annotation-stripped g$expr$7424$Pld94)
                    g$expr$7424$Pld94))))
             (g$stx-expr$6895$Pld94 g$x$7423$Pld94)))
          '#f))))
   (g$id->sym$6922$Pld94
     g$id->sym$10548$Pld94
     (case-lambda
       ((g$x$7425$Pld94)
        (begin
          (if (g$stx?$6893$Pld94 g$x$7425$Pld94)
            (void)
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7425$Pld94))
          ((case-lambda
             ((g$expr$7426$Pld94)
              ((case-lambda
                 ((g$sym$7427$Pld94)
                  (if (symbol? g$sym$7427$Pld94)
                    g$sym$7427$Pld94
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7425$Pld94))))
               (if (annotation? g$expr$7426$Pld94)
                 (annotation-stripped g$expr$7426$Pld94)
                 g$expr$7426$Pld94))))
           (g$stx-expr$6895$Pld94 g$x$7425$Pld94))))))
   (g$same-marks?$6923$Pld94
     g$same-marks?$10549$Pld94
     (case-lambda
       ((g$x$7428$Pld94 g$y$7429$Pld94)
        ((case-lambda
           ((g$t$7430$Pld94)
            (if g$t$7430$Pld94
              g$t$7430$Pld94
              (begin
                '#f
                (if (pair? g$x$7428$Pld94)
                  (if (pair? g$y$7429$Pld94)
                    (if (eq? (car g$x$7428$Pld94) (car g$y$7429$Pld94))
                      (begin
                        '#f
                        (g$same-marks?$6923$Pld94
                          (cdr g$x$7428$Pld94)
                          (cdr g$y$7429$Pld94)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7428$Pld94) (begin '#f (null? g$y$7429$Pld94)) '#f)))))
   (g$bound-id=?$6924$Pld94
     g$bound-id=?$10550$Pld94
     (case-lambda
       ((g$x$7431$Pld94 g$y$7432$Pld94)
        (if (eq? (g$id->sym$6922$Pld94 g$x$7431$Pld94)
                 (g$id->sym$6922$Pld94 g$y$7432$Pld94))
          (begin
            '#f
            (g$same-marks?$6923$Pld94
              (g$stx-mark*$6896$Pld94 g$x$7431$Pld94)
              (g$stx-mark*$6896$Pld94 g$y$7432$Pld94)))
          '#f))))
   (g$free-id=?$6925$Pld94
     g$free-id=?$10551$Pld94
     (case-lambda
       ((g$i$7433$Pld94 g$j$7434$Pld94)
        ((case-lambda
           ((g$t0$7435$Pld94 g$t1$7436$Pld94)
            (if ((case-lambda
                   ((g$t$7437$Pld94)
                    (if g$t$7437$Pld94
                      g$t$7437$Pld94
                      (begin '#f g$t1$7436$Pld94))))
                 g$t0$7435$Pld94)
              (eq? g$t0$7435$Pld94 g$t1$7436$Pld94)
              (eq? (g$id->sym$6922$Pld94 g$i$7433$Pld94)
                   (g$id->sym$6922$Pld94 g$j$7434$Pld94)))))
         (g$id->real-label$6935$Pld94 g$i$7433$Pld94)
         (g$id->real-label$6935$Pld94 g$j$7434$Pld94)))))
   (g$valid-bound-ids?$6926$Pld94
     g$valid-bound-ids?$10552$Pld94
     (case-lambda
       ((g$id*$7438$Pld94)
        (if (g$for-all$5349$Pld94 g$id?$6921$Pld94 g$id*$7438$Pld94)
          (begin '#f (g$distinct-bound-ids?$6927$Pld94 g$id*$7438$Pld94))
          '#f))))
   (g$distinct-bound-ids?$6927$Pld94
     g$distinct-bound-ids?$10553$Pld94
     (case-lambda
       ((g$id*$7439$Pld94)
        ((case-lambda
           ((g$t$7440$Pld94)
            (if g$t$7440$Pld94
              g$t$7440$Pld94
              (begin
                '#f
                (if (not (g$bound-id-member?$6928$Pld94
                           (car g$id*$7439$Pld94)
                           (cdr g$id*$7439$Pld94)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$6927$Pld94 (cdr g$id*$7439$Pld94)))
                  '#f)))))
         (null? g$id*$7439$Pld94)))))
   (g$bound-id-member?$6928$Pld94
     g$bound-id-member?$10554$Pld94
     (case-lambda
       ((g$id$7441$Pld94 g$id*$7442$Pld94)
        (if (pair? g$id*$7442$Pld94)
          (begin
            '#f
            ((case-lambda
               ((g$t$7443$Pld94)
                (if g$t$7443$Pld94
                  g$t$7443$Pld94
                  (begin
                    '#f
                    (g$bound-id-member?$6928$Pld94
                      g$id$7441$Pld94
                      (cdr g$id*$7442$Pld94))))))
             (g$bound-id=?$6924$Pld94 g$id$7441$Pld94 (car g$id*$7442$Pld94))))
          '#f))))
   (g$self-evaluating?$6929$Pld94
     g$self-evaluating?$10555$Pld94
     (case-lambda
       ((g$x$7444$Pld94)
        ((case-lambda
           ((g$t$7445$Pld94)
            (if g$t$7445$Pld94
              g$t$7445$Pld94
              ((case-lambda
                 ((g$t$7446$Pld94)
                  (if g$t$7446$Pld94
                    g$t$7446$Pld94
                    ((case-lambda
                       ((g$t$7447$Pld94)
                        (if g$t$7447$Pld94
                          g$t$7447$Pld94
                          ((case-lambda
                             ((g$t$7448$Pld94)
                              (if g$t$7448$Pld94
                                g$t$7448$Pld94
                                (begin '#f (bytevector? g$x$7444$Pld94)))))
                           (boolean? g$x$7444$Pld94)))))
                     (char? g$x$7444$Pld94)))))
               (string? g$x$7444$Pld94)))))
         (number? g$x$7444$Pld94)))))
   (g$strip-annotations$6930$Pld94
     g$strip-annotations$10556$Pld94
     (case-lambda
       ((g$x$7449$Pld94)
        (if (pair? g$x$7449$Pld94)
          (cons
            (g$strip-annotations$6930$Pld94 (car g$x$7449$Pld94))
            (g$strip-annotations$6930$Pld94 (cdr g$x$7449$Pld94)))
          (if (vector? g$x$7449$Pld94)
            (vector-map g$strip-annotations$6930$Pld94 g$x$7449$Pld94)
            (if (annotation? g$x$7449$Pld94)
              (annotation-stripped g$x$7449$Pld94)
              g$x$7449$Pld94))))))
   (g$strip$6931$Pld94
     g$strip$10557$Pld94
     (case-lambda
       ((g$x$7450$Pld94 g$m*$7451$Pld94)
        (if (g$top-marked?$6864$Pld94 g$m*$7451$Pld94)
          (if ((case-lambda
                 ((g$t$7452$Pld94)
                  (if g$t$7452$Pld94
                    g$t$7452$Pld94
                    ((case-lambda
                       ((g$t$7453$Pld94)
                        (if g$t$7453$Pld94
                          g$t$7453$Pld94
                          (begin
                            '#f
                            (if (vector? g$x$7450$Pld94)
                              (if (> (vector-length g$x$7450$Pld94) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7450$Pld94 '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7450$Pld94)
                       (begin '#f (annotation? (car g$x$7450$Pld94)))
                       '#f)))))
               (annotation? g$x$7450$Pld94))
            (g$strip-annotations$6930$Pld94 g$x$7450$Pld94)
            g$x$7450$Pld94)
          ((letrec ((g$f$7454$Pld94
                      (case-lambda
                        ((g$x$7455$Pld94)
                         (if (g$stx?$6893$Pld94 g$x$7455$Pld94)
                           (g$strip$6931$Pld94
                             (g$stx-expr$6895$Pld94 g$x$7455$Pld94)
                             (g$stx-mark*$6896$Pld94 g$x$7455$Pld94))
                           (if (annotation? g$x$7455$Pld94)
                             (annotation-stripped g$x$7455$Pld94)
                             (if (pair? g$x$7455$Pld94)
                               ((case-lambda
                                  ((g$a$7456$Pld94 g$d$7457$Pld94)
                                   (if (if (eq? g$a$7456$Pld94
                                                (car g$x$7455$Pld94))
                                         (begin
                                           '#f
                                           (eq? g$d$7457$Pld94
                                                (cdr g$x$7455$Pld94)))
                                         '#f)
                                     g$x$7455$Pld94
                                     (cons g$a$7456$Pld94 g$d$7457$Pld94))))
                                (g$f$7454$Pld94 (car g$x$7455$Pld94))
                                (g$f$7454$Pld94 (cdr g$x$7455$Pld94)))
                               (if (vector? g$x$7455$Pld94)
                                 ((case-lambda
                                    ((g$old$7458$Pld94)
                                     ((case-lambda
                                        ((g$new$7459$Pld94)
                                         (if (g$for-all$5349$Pld94
                                               eq?
                                               g$old$7458$Pld94
                                               g$new$7459$Pld94)
                                           g$x$7455$Pld94
                                           (list->vector g$new$7459$Pld94))))
                                      (map g$f$7454$Pld94 g$old$7458$Pld94))))
                                  (vector->list g$x$7455$Pld94))
                                 g$x$7455$Pld94))))))))
             g$f$7454$Pld94)
           g$x$7450$Pld94)))))
   (g$stx->datum$6932$Pld94
     g$stx->datum$10558$Pld94
     (case-lambda
       ((g$x$7460$Pld94) (g$strip$6931$Pld94 g$x$7460$Pld94 '()))))
   (g$same-marks*?$6933$Pld94
     g$same-marks*?$10559$Pld94
     (case-lambda
       ((g$mark*$7461$Pld94 g$mark**$7462$Pld94 g$si$7463$Pld94)
        (if (null? g$si$7463$Pld94)
          '#f
          (if (g$same-marks?$6923$Pld94
                g$mark*$7461$Pld94
                (vector-ref g$mark**$7462$Pld94 (car g$si$7463$Pld94)))
            (car g$si$7463$Pld94)
            (g$same-marks*?$6933$Pld94
              g$mark*$7461$Pld94
              g$mark**$7462$Pld94
              (cdr g$si$7463$Pld94)))))))
   (g$id->label$6934$Pld94
     g$id->label$10560$Pld94
     (case-lambda
       ((g$id$7464$Pld94)
        ((case-lambda
           ((g$t$7465$Pld94)
            (if g$t$7465$Pld94
              g$t$7465$Pld94
              (begin
                '#f
                ((case-lambda
                   ((g$t$7466$Pld94)
                    (if g$t$7466$Pld94
                      ((case-lambda
                         ((g$env$7467$Pld94)
                          ((case-lambda
                             ((g$rib$7468$Pld94)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$6869$Pld94
                                     g$id$7464$Pld94
                                     g$rib$7468$Pld94)))
                                (case-lambda
                                  ((g$lab$7471$Pld94 g$loc_$7472$Pld94)
                                   ((case-lambda
                                      ((g$loc_$7473$Pld94 g$lab$7474$Pld94)
                                       (begin
                                         (g$extend-rib!$6885$Pld94
                                           g$rib$7468$Pld94
                                           g$id$7464$Pld94
                                           g$lab$7474$Pld94)
                                         g$lab$7474$Pld94)))
                                    g$loc_$7472$Pld94
                                    g$lab$7471$Pld94))))))
                           (g$interaction-env-rib$7277$Pld94
                             g$env$7467$Pld94))))
                       g$t$7466$Pld94)
                      '#f)))
                 (g$top-level-context$7312$Pld94))))))
         (g$id->real-label$6935$Pld94 g$id$7464$Pld94)))))
   (g$id->real-label$6935$Pld94
     g$id->real-label$10561$Pld94
     (case-lambda
       ((g$id$7475$Pld94)
        ((case-lambda
           ((g$sym$7476$Pld94)
            ((letrec ((g$search$7477$Pld94
                        (case-lambda
                          ((g$subst*$7478$Pld94 g$mark*$7479$Pld94)
                           (if (null? g$subst*$7478$Pld94)
                             '#f
                             (if (eq? (car g$subst*$7478$Pld94) 'shift)
                               (g$search$7477$Pld94
                                 (cdr g$subst*$7478$Pld94)
                                 (cdr g$mark*$7479$Pld94))
                               ((case-lambda
                                  ((g$rib$7480$Pld94)
                                   ((case-lambda
                                      ((g$t$7481$Pld94)
                                       (if g$t$7481$Pld94
                                         ((case-lambda
                                            ((g$ht$7482$Pld94)
                                             ((case-lambda
                                                ((g$si$7483$Pld94)
                                                 ((case-lambda
                                                    ((g$i$7484$Pld94)
                                                     (if g$i$7484$Pld94
                                                       (vector-ref
                                                         (g$rib-label*$6878$Pld94
                                                           g$rib$7480$Pld94)
                                                         g$i$7484$Pld94)
                                                       (g$search$7477$Pld94
                                                         (cdr g$subst*$7478$Pld94)
                                                         g$mark*$7479$Pld94))))
                                                  (if g$si$7483$Pld94
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$6933$Pld94
                                                        g$mark*$7479$Pld94
                                                        (g$rib-mark**$6877$Pld94
                                                          g$rib$7480$Pld94)
                                                        (reverse
                                                          g$si$7483$Pld94)))
                                                    '#f))))
                                              (g$hashtable-ref$5145$Pld94
                                                g$ht$7482$Pld94
                                                g$sym$7476$Pld94
                                                '#f))))
                                          g$t$7481$Pld94)
                                         ((letrec ((g$f$7485$Pld94
                                                     (case-lambda
                                                       ((g$sym*$7486$Pld94
                                                          g$mark**$7487$Pld94
                                                          g$label*$7488$Pld94)
                                                        (if (null?
                                                              g$sym*$7486$Pld94)
                                                          (g$search$7477$Pld94
                                                            (cdr g$subst*$7478$Pld94)
                                                            g$mark*$7479$Pld94)
                                                          (if (if (eq? (car g$sym*$7486$Pld94)
                                                                       g$sym$7476$Pld94)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$6923$Pld94
                                                                    (car g$mark**$7487$Pld94)
                                                                    g$mark*$7479$Pld94))
                                                                '#f)
                                                            (car g$label*$7488$Pld94)
                                                            (g$f$7485$Pld94
                                                              (cdr g$sym*$7486$Pld94)
                                                              (cdr g$mark**$7487$Pld94)
                                                              (cdr g$label*$7488$Pld94))))))))
                                            g$f$7485$Pld94)
                                          (g$rib-sym*$6876$Pld94
                                            g$rib$7480$Pld94)
                                          (g$rib-mark**$6877$Pld94
                                            g$rib$7480$Pld94)
                                          (g$rib-label*$6878$Pld94
                                            g$rib$7480$Pld94)))))
                                    (g$rib-sealed/freq$6879$Pld94
                                      g$rib$7480$Pld94))))
                                (car g$subst*$7478$Pld94))))))))
               g$search$7477$Pld94)
             (g$stx-subst*$6897$Pld94 g$id$7475$Pld94)
             (g$stx-mark*$6896$Pld94 g$id$7475$Pld94))))
         (g$id->sym$6922$Pld94 g$id$7475$Pld94)))))
   (g$label->binding$6936$Pld94
     g$label->binding$10562$Pld94
     (case-lambda
       ((g$x$7489$Pld94 g$r$7490$Pld94)
        ((case-lambda
           ((g$t$7491$Pld94)
            (if g$t$7491$Pld94
              ((case-lambda
                 ((g$b$7492$Pld94)
                  (if (if (pair? g$b$7492$Pld94)
                        (begin '#f (eq? (car g$b$7492$Pld94) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7162$Pld94 (cdr g$b$7492$Pld94)))
                    (if (if (pair? g$b$7492$Pld94)
                          (begin '#f (eq? (car g$b$7492$Pld94) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7493$Pld94 g$loc$7494$Pld94)
                          (cons '$rtd (symbol-value g$loc$7494$Pld94))))
                       (g$cadr$4880$Pld94 g$b$7492$Pld94)
                       (g$cddr$4882$Pld94 g$b$7492$Pld94))
                      g$b$7492$Pld94))))
               g$t$7491$Pld94)
              ((case-lambda
                 ((g$t$7495$Pld94)
                  (if g$t$7495$Pld94
                    (cdr g$t$7495$Pld94)
                    ((case-lambda
                       ((g$t$7496$Pld94)
                        (if g$t$7496$Pld94
                          ((case-lambda
                             ((g$env$7497$Pld94)
                              ((case-lambda
                                 ((g$t$7498$Pld94)
                                  (if g$t$7498$Pld94
                                    ((case-lambda
                                       ((g$p$7499$Pld94)
                                        (g$cons*$5351$Pld94
                                          'lexical
                                          (cdr g$p$7499$Pld94)
                                          '#f)))
                                     g$t$7498$Pld94)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7489$Pld94
                                 (g$interaction-env-locs$7279$Pld94
                                   g$env$7497$Pld94)))))
                           g$t$7496$Pld94)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7312$Pld94)))))
               (assq g$x$7489$Pld94 g$r$7490$Pld94)))))
         (g$imported-label->binding$6735$Pld94 g$x$7489$Pld94)))))
   (g$make-binding$6937$Pld94 g$make-binding$10563$Pld94 cons)
   (g$binding-type$6938$Pld94 g$binding-type$10564$Pld94 car)
   (g$binding-value$6939$Pld94 g$binding-value$10565$Pld94 cdr)
   (g$raise-unbound-error$6940$Pld94
     g$raise-unbound-error$10566$Pld94
     (case-lambda
       ((g$id$7500$Pld94)
        (g$syntax-violation*$7304$Pld94
          '#f
          '"unbound identifier"
          g$id$7500$Pld94
          (g$make-undefined-violation$5685$Pld94)))))
   (g$syntax-type$6941$Pld94
     g$syntax-type$10567$Pld94
     (case-lambda
       ((g$e$7501$Pld94 g$r$7502$Pld94)
        (if (g$id?$6921$Pld94 g$e$7501$Pld94)
          ((case-lambda
             ((g$id$7503$Pld94)
              ((case-lambda
                 ((g$label$7504$Pld94)
                  ((case-lambda
                     ((g$b$7505$Pld94)
                      ((case-lambda
                         ((g$type$7506$Pld94)
                          ((case-lambda
                             (()
                              (begin
                                (if g$label$7504$Pld94
                                  (void)
                                  (g$raise-unbound-error$6940$Pld94
                                    g$id$7503$Pld94))
                                ((case-lambda
                                   ((g$t$7507$Pld94)
                                    (if (memv
                                          g$t$7507$Pld94
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7506$Pld94
                                        (g$binding-value$6939$Pld94
                                          g$b$7505$Pld94)
                                        g$id$7503$Pld94)
                                      (values 'other '#f '#f))))
                                 g$type$7506$Pld94)))))))
                       (g$binding-type$6938$Pld94 g$b$7505$Pld94))))
                   (g$label->binding$6936$Pld94
                     g$label$7504$Pld94
                     g$r$7502$Pld94))))
               (g$id->label$6934$Pld94 g$id$7503$Pld94))))
           g$e$7501$Pld94)
          (if (g$syntax-pair?$6914$Pld94 g$e$7501$Pld94)
            ((case-lambda
               ((g$id$7508$Pld94)
                (if (g$id?$6921$Pld94 g$id$7508$Pld94)
                  ((case-lambda
                     ((g$label$7509$Pld94)
                      ((case-lambda
                         ((g$b$7510$Pld94)
                          ((case-lambda
                             ((g$type$7511$Pld94)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if g$label$7509$Pld94
                                      (void)
                                      (g$raise-unbound-error$6940$Pld94
                                        g$id$7508$Pld94))
                                    ((case-lambda
                                       ((g$t$7512$Pld94)
                                        (if (memv
                                              g$t$7512$Pld94
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7511$Pld94
                                            (g$binding-value$6939$Pld94
                                              g$b$7510$Pld94)
                                            g$id$7508$Pld94)
                                          (values 'call '#f '#f))))
                                     g$type$7511$Pld94)))))))
                           (g$binding-type$6938$Pld94 g$b$7510$Pld94))))
                       (g$label->binding$6936$Pld94
                         g$label$7509$Pld94
                         g$r$7502$Pld94))))
                   (g$id->label$6934$Pld94 g$id$7508$Pld94))
                  (values 'call '#f '#f))))
             (g$syntax-car$6918$Pld94 g$e$7501$Pld94))
            ((case-lambda
               ((g$d$7513$Pld94)
                (if (g$self-evaluating?$6929$Pld94 g$d$7513$Pld94)
                  (values 'constant g$d$7513$Pld94 '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$6932$Pld94 g$e$7501$Pld94)))))))
   (g$sanitize-binding$6949$Pld94
     g$sanitize-binding$10568$Pld94
     (case-lambda
       ((g$x$7514$Pld94 g$src$7515$Pld94)
        (if (procedure? g$x$7514$Pld94)
          (g$cons*$5351$Pld94 'local-macro g$x$7514$Pld94 g$src$7515$Pld94)
          (if (if (pair? g$x$7514$Pld94)
                (if (eq? (car g$x$7514$Pld94) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7514$Pld94)))
                  '#f)
                '#f)
            (g$cons*$5351$Pld94
              'local-macro!
              (cdr g$x$7514$Pld94)
              g$src$7515$Pld94)
            (if (if (pair? g$x$7514$Pld94)
                  (begin '#f (eq? (car g$x$7514$Pld94) '$rtd))
                  '#f)
              g$x$7514$Pld94
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7514$Pld94)))))))
   (g$make-variable-transformer$6950$Pld94
     g$make-variable-transformer$10569$Pld94
     (case-lambda
       ((g$x$7516$Pld94)
        (if (procedure? g$x$7516$Pld94)
          (cons 'macro! g$x$7516$Pld94)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7516$Pld94)))))
   (g$variable-transformer?$6951$Pld94
     g$variable-transformer?$10570$Pld94
     (case-lambda
       ((g$x$7517$Pld94)
        (if (pair? g$x$7517$Pld94)
          (if (eq? (car g$x$7517$Pld94) 'macro!)
            (begin '#f (procedure? (cdr g$x$7517$Pld94)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$6952$Pld94
     g$variable-transformer-procedure$10571$Pld94
     (case-lambda
       ((g$x$7518$Pld94)
        (if (g$variable-transformer?$6951$Pld94 g$x$7518$Pld94)
          (cdr g$x$7518$Pld94)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7518$Pld94)))))
   (g$make-eval-transformer$6953$Pld94
     g$make-eval-transformer$10572$Pld94
     (case-lambda
       ((g$x$7519$Pld94)
        (g$sanitize-binding$6949$Pld94
          (eval-core (g$expanded->core$6435$Pld94 g$x$7519$Pld94))
          g$x$7519$Pld94))))
   (g$parse-define$7139$Pld94
     g$parse-define$10573$Pld94
     (case-lambda
       ((g$x$7520$Pld94)
        ((case-lambda
           ((g$t$7521$Pld94)
            ((case-lambda
               ((g$ls/false$7522$Pld94)
                (if (if g$ls/false$7522$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7523$Pld94
                               g$fmls$7524$Pld94
                               g$b$7525$Pld94
                               g$b*$7526$Pld94)
                             (g$id?$6921$Pld94 g$id$7523$Pld94)))
                          g$ls/false$7522$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7527$Pld94
                         g$fmls$7528$Pld94
                         g$b$7529$Pld94
                         g$b*$7530$Pld94)
                       (begin
                         (g$verify-formals$7219$Pld94
                           g$fmls$7528$Pld94
                           g$x$7520$Pld94)
                         (values
                           g$id$7527$Pld94
                           (cons
                             'defun
                             (cons
                               g$fmls$7528$Pld94
                               (cons g$b$7529$Pld94 g$b*$7530$Pld94)))))))
                    g$ls/false$7522$Pld94)
                  ((case-lambda
                     ((g$t$7531$Pld94)
                      ((case-lambda
                         ((g$ls/false$7532$Pld94)
                          (if (if g$ls/false$7532$Pld94
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7533$Pld94 g$val$7534$Pld94)
                                       (g$id?$6921$Pld94 g$id$7533$Pld94)))
                                    g$ls/false$7532$Pld94))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7535$Pld94 g$val$7536$Pld94)
                                 (values
                                   g$id$7535$Pld94
                                   (cons 'expr g$val$7536$Pld94))))
                              g$ls/false$7532$Pld94)
                            ((case-lambda
                               ((g$t$7537$Pld94)
                                ((case-lambda
                                   ((g$ls/false$7538$Pld94)
                                    (if (if g$ls/false$7538$Pld94
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7539$Pld94)
                                                 (g$id?$6921$Pld94
                                                   g$id$7539$Pld94)))
                                              g$ls/false$7538$Pld94))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7540$Pld94)
                                           (values
                                             g$id$7540$Pld94
                                             (cons
                                               'expr
                                               (g$bless$7162$Pld94 '(void))))))
                                        g$ls/false$7538$Pld94)
                                      (g$syntax-violation$7305$Pld94
                                        '#f
                                        '"invalid syntax"
                                        g$t$7537$Pld94))))
                                 (g$syntax-dispatch$7199$Pld94
                                   g$t$7537$Pld94
                                   '(_ any)))))
                             g$t$7531$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$7531$Pld94
                         '(_ any any)))))
                   g$t$7521$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7521$Pld94
               '(_ (any . any) any . each-any)))))
         g$x$7520$Pld94))))
   (g$parse-define-syntax$7140$Pld94
     g$parse-define-syntax$10574$Pld94
     (case-lambda
       ((g$x$7541$Pld94)
        ((case-lambda
           ((g$t$7542$Pld94)
            ((case-lambda
               ((g$ls/false$7543$Pld94)
                (if (if g$ls/false$7543$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7544$Pld94 g$val$7545$Pld94)
                             (g$id?$6921$Pld94 g$id$7544$Pld94)))
                          g$ls/false$7543$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7546$Pld94 g$val$7547$Pld94)
                       (values g$id$7546$Pld94 g$val$7547$Pld94)))
                    g$ls/false$7543$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7542$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$7542$Pld94 '(_ any any)))))
         g$x$7541$Pld94))))
   (g$scheme-stx-hashtable$7141$Pld94
     g$scheme-stx-hashtable$10575$Pld94
     (g$make-eq-hashtable$5142$Pld94))
   (g$scheme-stx$7142$Pld94
     g$scheme-stx$10576$Pld94
     (case-lambda
       ((g$sym$7548$Pld94)
        ((case-lambda
           ((g$t$7549$Pld94)
            (if g$t$7549$Pld94
              g$t$7549$Pld94
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7550$Pld94)
                    ((case-lambda
                       ((g$stx$7551$Pld94)
                        ((case-lambda
                           ((g$stx$7552$Pld94)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5146$Pld94
                                    g$scheme-stx-hashtable$7141$Pld94
                                    g$sym$7548$Pld94
                                    g$stx$7552$Pld94)
                                  g$stx$7552$Pld94))))))
                         ((case-lambda
                            ((g$t$7553$Pld94)
                             (if g$t$7553$Pld94
                               ((case-lambda
                                  ((g$x$7554$Pld94)
                                   ((case-lambda
                                      ((g$name$7555$Pld94 g$label$7556$Pld94)
                                       (g$add-subst$6911$Pld94
                                         (g$make-rib$6875$Pld94
                                           (list g$name$7555$Pld94)
                                           (list g$top-mark*$6863$Pld94)
                                           (list g$label$7556$Pld94)
                                           '#f)
                                         g$stx$7551$Pld94)))
                                    (car g$x$7554$Pld94)
                                    (cdr g$x$7554$Pld94))))
                                g$t$7553$Pld94)
                               g$stx$7551$Pld94)))
                          (assq g$sym$7548$Pld94 g$subst$7550$Pld94)))))
                     (g$make-stx$6894$Pld94
                       g$sym$7548$Pld94
                       g$top-mark*$6863$Pld94
                       '()
                       '()))))
                 (g$library-subst$6693$Pld94
                   (g$find-library-by-name$6729$Pld94
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5145$Pld94
           g$scheme-stx-hashtable$7141$Pld94
           g$sym$7548$Pld94
           '#f)))))
   (g$lexical-var$7143$Pld94 g$lexical-var$10577$Pld94 car)
   (g$lexical-mutable?$7144$Pld94 g$lexical-mutable?$10578$Pld94 cdr)
   (g$set-lexical-mutable!$7145$Pld94
     g$set-lexical-mutable!$10579$Pld94
     set-cdr!)
   (g$add-lexical$7146$Pld94
     g$add-lexical$10580$Pld94
     (case-lambda
       ((g$lab$7557$Pld94 g$lex$7558$Pld94 g$r$7559$Pld94)
        (cons
          (g$cons*$5351$Pld94 g$lab$7557$Pld94 'lexical g$lex$7558$Pld94 '#f)
          g$r$7559$Pld94))))
   (g$add-lexicals$7147$Pld94
     g$add-lexicals$10581$Pld94
     (case-lambda
       ((g$lab*$7560$Pld94 g$lex*$7561$Pld94 g$r$7562$Pld94)
        (if (null? g$lab*$7560$Pld94)
          g$r$7562$Pld94
          (g$add-lexicals$7147$Pld94
            (cdr g$lab*$7560$Pld94)
            (cdr g$lex*$7561$Pld94)
            (g$add-lexical$7146$Pld94
              (car g$lab*$7560$Pld94)
              (car g$lex*$7561$Pld94)
              g$r$7562$Pld94))))))
   (g$letrec-helper$7148$Pld94
     g$letrec-helper$10582$Pld94
     (case-lambda
       ((g$e$7563$Pld94 g$r$7564$Pld94 g$mr$7565$Pld94 g$build$7566$Pld94)
        ((case-lambda
           ((g$t$7567$Pld94)
            ((case-lambda
               ((g$ls/false$7568$Pld94)
                (if g$ls/false$7568$Pld94
                  (apply
                    (case-lambda
                      ((g$lhs*$7569$Pld94
                         g$rhs*$7570$Pld94
                         g$b$7571$Pld94
                         g$b*$7572$Pld94)
                       (if (not (g$valid-bound-ids?$6926$Pld94
                                  g$lhs*$7569$Pld94))
                         (g$invalid-fmls-error$7164$Pld94
                           g$e$7563$Pld94
                           g$lhs*$7569$Pld94)
                         ((case-lambda
                            ((g$lex*$7573$Pld94 g$lab*$7574$Pld94)
                             ((case-lambda
                                ((g$rib$7575$Pld94 g$r$7576$Pld94)
                                 ((case-lambda
                                    ((g$body$7577$Pld94 g$rhs*$7578$Pld94)
                                     (g$build$7566$Pld94
                                       '#f
                                       g$lex*$7573$Pld94
                                       g$rhs*$7578$Pld94
                                       g$body$7577$Pld94)))
                                  (g$chi-internal$7228$Pld94
                                    (g$add-subst$6911$Pld94
                                      g$rib$7575$Pld94
                                      (cons g$b$7571$Pld94 g$b*$7572$Pld94))
                                    g$r$7576$Pld94
                                    g$mr$7565$Pld94)
                                  (g$chi-expr*$7215$Pld94
                                    (map (case-lambda
                                           ((g$x$7579$Pld94)
                                            (g$add-subst$6911$Pld94
                                              g$rib$7575$Pld94
                                              g$x$7579$Pld94)))
                                         g$rhs*$7570$Pld94)
                                    g$r$7576$Pld94
                                    g$mr$7565$Pld94))))
                              (g$make-full-rib$6889$Pld94
                                g$lhs*$7569$Pld94
                                g$lab*$7574$Pld94)
                              (g$add-lexicals$7147$Pld94
                                g$lab*$7574$Pld94
                                g$lex*$7573$Pld94
                                g$r$7564$Pld94))))
                          (map g$gen-lexical$6865$Pld94 g$lhs*$7569$Pld94)
                          (map g$gen-label$6867$Pld94 g$lhs*$7569$Pld94)))))
                    g$ls/false$7568$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7567$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7567$Pld94
               '(_ #(each (any any)) any . each-any)))))
         g$e$7563$Pld94))))
   (g$letrec-transformer$7149$Pld94
     g$letrec-transformer$10583$Pld94
     (case-lambda
       ((g$e$7580$Pld94 g$r$7581$Pld94 g$mr$7582$Pld94)
        (g$letrec-helper$7148$Pld94
          g$e$7580$Pld94
          g$r$7581$Pld94
          g$mr$7582$Pld94
          g$build-letrec$6857$Pld94))))
   (g$letrec*-transformer$7150$Pld94
     g$letrec*-transformer$10584$Pld94
     (case-lambda
       ((g$e$7583$Pld94 g$r$7584$Pld94 g$mr$7585$Pld94)
        (g$letrec-helper$7148$Pld94
          g$e$7583$Pld94
          g$r$7584$Pld94
          g$mr$7585$Pld94
          g$build-letrec*$6858$Pld94))))
   (g$fluid-let-syntax-transformer$7151$Pld94
     g$fluid-let-syntax-transformer$10585$Pld94
     (case-lambda
       ((g$e$7586$Pld94 g$r$7587$Pld94 g$mr$7588$Pld94)
        (letrec* ((g$lookup$7589$Pld94
                    (case-lambda
                      ((g$x$7599$Pld94)
                       ((case-lambda
                          ((g$t$7600$Pld94)
                           (if g$t$7600$Pld94
                             g$t$7600$Pld94
                             (begin
                               '#f
                               (g$syntax-violation$7305$Pld94
                                 '#f
                                 '"unbound identifier"
                                 g$e$7586$Pld94
                                 g$x$7599$Pld94)))))
                        (g$id->label$6934$Pld94 g$x$7599$Pld94))))))
          ((case-lambda
             ((g$t$7590$Pld94)
              ((case-lambda
                 ((g$ls/false$7591$Pld94)
                  (if g$ls/false$7591$Pld94
                    (apply
                      (case-lambda
                        ((g$lhs*$7592$Pld94
                           g$rhs*$7593$Pld94
                           g$b$7594$Pld94
                           g$b*$7595$Pld94)
                         (if (not (g$valid-bound-ids?$6926$Pld94
                                    g$lhs*$7592$Pld94))
                           (g$invalid-fmls-error$7164$Pld94
                             g$e$7586$Pld94
                             g$lhs*$7592$Pld94)
                           ((case-lambda
                              ((g$lab*$7596$Pld94 g$rhs*$7597$Pld94)
                               (g$chi-internal$7228$Pld94
                                 (cons g$b$7594$Pld94 g$b*$7595$Pld94)
                                 (append
                                   (map cons
                                        g$lab*$7596$Pld94
                                        g$rhs*$7597$Pld94)
                                   g$r$7587$Pld94)
                                 (append
                                   (map cons
                                        g$lab*$7596$Pld94
                                        g$rhs*$7597$Pld94)
                                   g$mr$7588$Pld94))))
                            (map g$lookup$7589$Pld94 g$lhs*$7592$Pld94)
                            (map (case-lambda
                                   ((g$x$7598$Pld94)
                                    (g$make-eval-transformer$6953$Pld94
                                      (g$expand-transformer$7244$Pld94
                                        g$x$7598$Pld94
                                        g$mr$7588$Pld94))))
                                 g$rhs*$7593$Pld94)))))
                      g$ls/false$7591$Pld94)
                    (g$syntax-violation$7305$Pld94
                      '#f
                      '"invalid syntax"
                      g$t$7590$Pld94))))
               (g$syntax-dispatch$7199$Pld94
                 g$t$7590$Pld94
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7586$Pld94)))))
   (g$type-descriptor-transformer$7152$Pld94
     g$type-descriptor-transformer$10586$Pld94
     (case-lambda
       ((g$e$7601$Pld94 g$r$7602$Pld94 g$mr$7603$Pld94)
        ((case-lambda
           ((g$t$7604$Pld94)
            ((case-lambda
               ((g$ls/false$7605$Pld94)
                (if (if g$ls/false$7605$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7606$Pld94)
                             (g$id?$6921$Pld94 g$id$7606$Pld94)))
                          g$ls/false$7605$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7607$Pld94)
                       ((case-lambda
                          ((g$lab$7608$Pld94)
                           ((case-lambda
                              ((g$b$7609$Pld94)
                               ((case-lambda
                                  ((g$type$7610$Pld94)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7608$Pld94
                                           (void)
                                           (g$raise-unbound-error$6940$Pld94
                                             g$id$7607$Pld94))
                                         (if (if (eq? g$type$7610$Pld94 '$rtd)
                                               (begin
                                                 '#f
                                                 (not (list?
                                                        (g$binding-value$6939$Pld94
                                                          g$b$7609$Pld94))))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"not a record type"
                                             g$e$7601$Pld94))
                                         (list
                                           'quote
                                           (g$binding-value$6939$Pld94
                                             g$b$7609$Pld94))))))))
                                (g$binding-type$6938$Pld94 g$b$7609$Pld94))))
                            (g$label->binding$6936$Pld94
                              g$lab$7608$Pld94
                              g$r$7602$Pld94))))
                        (g$id->label$6934$Pld94 g$id$7607$Pld94))))
                    g$ls/false$7605$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7604$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$7604$Pld94 '(_ any)))))
         g$e$7601$Pld94))))
   (g$record-type-descriptor-transformer$7153$Pld94
     g$record-type-descriptor-transformer$10587$Pld94
     (case-lambda
       ((g$e$7611$Pld94 g$r$7612$Pld94 g$mr$7613$Pld94)
        ((case-lambda
           ((g$t$7614$Pld94)
            ((case-lambda
               ((g$ls/false$7615$Pld94)
                (if (if g$ls/false$7615$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7616$Pld94)
                             (g$id?$6921$Pld94 g$id$7616$Pld94)))
                          g$ls/false$7615$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7617$Pld94)
                       ((case-lambda
                          ((g$lab$7618$Pld94)
                           ((case-lambda
                              ((g$b$7619$Pld94)
                               ((case-lambda
                                  ((g$type$7620$Pld94)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7618$Pld94
                                           (void)
                                           (g$raise-unbound-error$6940$Pld94
                                             g$id$7617$Pld94))
                                         (if (if (eq? g$type$7620$Pld94 '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$6939$Pld94
                                                     g$b$7619$Pld94)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"not a record type"
                                             g$e$7611$Pld94))
                                         (g$chi-expr$7217$Pld94
                                           (car (g$binding-value$6939$Pld94
                                                  g$b$7619$Pld94))
                                           g$r$7612$Pld94
                                           g$mr$7613$Pld94)))))))
                                (g$binding-type$6938$Pld94 g$b$7619$Pld94))))
                            (g$label->binding$6936$Pld94
                              g$lab$7618$Pld94
                              g$r$7612$Pld94))))
                        (g$id->label$6934$Pld94 g$id$7617$Pld94))))
                    g$ls/false$7615$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7614$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$7614$Pld94 '(_ any)))))
         g$e$7611$Pld94))))
   (g$record-constructor-descriptor-transformer$7154$Pld94
     g$record-constructor-descriptor-transformer$10588$Pld94
     (case-lambda
       ((g$e$7621$Pld94 g$r$7622$Pld94 g$mr$7623$Pld94)
        ((case-lambda
           ((g$t$7624$Pld94)
            ((case-lambda
               ((g$ls/false$7625$Pld94)
                (if (if g$ls/false$7625$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7626$Pld94)
                             (g$id?$6921$Pld94 g$id$7626$Pld94)))
                          g$ls/false$7625$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7627$Pld94)
                       ((case-lambda
                          ((g$lab$7628$Pld94)
                           ((case-lambda
                              ((g$b$7629$Pld94)
                               ((case-lambda
                                  ((g$type$7630$Pld94)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if g$lab$7628$Pld94
                                           (void)
                                           (g$raise-unbound-error$6940$Pld94
                                             g$id$7627$Pld94))
                                         (if (if (eq? g$type$7630$Pld94 '$rtd)
                                               (begin
                                                 '#f
                                                 (list?
                                                   (g$binding-value$6939$Pld94
                                                     g$b$7629$Pld94)))
                                               '#f)
                                           (void)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid type"
                                             g$e$7621$Pld94))
                                         (g$chi-expr$7217$Pld94
                                           (g$cadr$4880$Pld94
                                             (g$binding-value$6939$Pld94
                                               g$b$7629$Pld94))
                                           g$r$7622$Pld94
                                           g$mr$7623$Pld94)))))))
                                (g$binding-type$6938$Pld94 g$b$7629$Pld94))))
                            (g$label->binding$6936$Pld94
                              g$lab$7628$Pld94
                              g$r$7622$Pld94))))
                        (g$id->label$6934$Pld94 g$id$7627$Pld94))))
                    g$ls/false$7625$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7624$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$7624$Pld94 '(_ any)))))
         g$e$7621$Pld94))))
   (g$when-transformer$7155$Pld94
     g$when-transformer$10589$Pld94
     (case-lambda
       ((g$e$7631$Pld94 g$r$7632$Pld94 g$mr$7633$Pld94)
        ((case-lambda
           ((g$t$7634$Pld94)
            ((case-lambda
               ((g$ls/false$7635$Pld94)
                (if g$ls/false$7635$Pld94
                  (apply
                    (case-lambda
                      ((g$test$7636$Pld94 g$e$7637$Pld94 g$e*$7638$Pld94)
                       (list
                         'if
                         (g$chi-expr$7217$Pld94
                           g$test$7636$Pld94
                           g$r$7632$Pld94
                           g$mr$7633$Pld94)
                         (g$build-sequence$6855$Pld94
                           '#f
                           (g$chi-expr*$7215$Pld94
                             (cons g$e$7637$Pld94 g$e*$7638$Pld94)
                             g$r$7632$Pld94
                             g$mr$7633$Pld94))
                         (g$build-void$6856$Pld94))))
                    g$ls/false$7635$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7634$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7634$Pld94
               '(_ any any . each-any)))))
         g$e$7631$Pld94))))
   (g$unless-transformer$7156$Pld94
     g$unless-transformer$10590$Pld94
     (case-lambda
       ((g$e$7639$Pld94 g$r$7640$Pld94 g$mr$7641$Pld94)
        ((case-lambda
           ((g$t$7642$Pld94)
            ((case-lambda
               ((g$ls/false$7643$Pld94)
                (if g$ls/false$7643$Pld94
                  (apply
                    (case-lambda
                      ((g$test$7644$Pld94 g$e$7645$Pld94 g$e*$7646$Pld94)
                       (list
                         'if
                         (g$chi-expr$7217$Pld94
                           g$test$7644$Pld94
                           g$r$7640$Pld94
                           g$mr$7641$Pld94)
                         (g$build-void$6856$Pld94)
                         (g$build-sequence$6855$Pld94
                           '#f
                           (g$chi-expr*$7215$Pld94
                             (cons g$e$7645$Pld94 g$e*$7646$Pld94)
                             g$r$7640$Pld94
                             g$mr$7641$Pld94)))))
                    g$ls/false$7643$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7642$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7642$Pld94
               '(_ any any . each-any)))))
         g$e$7639$Pld94))))
   (g$if-transformer$7157$Pld94
     g$if-transformer$10591$Pld94
     (case-lambda
       ((g$e$7647$Pld94 g$r$7648$Pld94 g$mr$7649$Pld94)
        ((case-lambda
           ((g$t$7650$Pld94)
            ((case-lambda
               ((g$ls/false$7651$Pld94)
                (if g$ls/false$7651$Pld94
                  (apply
                    (case-lambda
                      ((g$e0$7652$Pld94 g$e1$7653$Pld94 g$e2$7654$Pld94)
                       (list
                         'if
                         (g$chi-expr$7217$Pld94
                           g$e0$7652$Pld94
                           g$r$7648$Pld94
                           g$mr$7649$Pld94)
                         (g$chi-expr$7217$Pld94
                           g$e1$7653$Pld94
                           g$r$7648$Pld94
                           g$mr$7649$Pld94)
                         (g$chi-expr$7217$Pld94
                           g$e2$7654$Pld94
                           g$r$7648$Pld94
                           g$mr$7649$Pld94))))
                    g$ls/false$7651$Pld94)
                  ((case-lambda
                     ((g$t$7655$Pld94)
                      ((case-lambda
                         ((g$ls/false$7656$Pld94)
                          (if g$ls/false$7656$Pld94
                            (apply
                              (case-lambda
                                ((g$e0$7657$Pld94 g$e1$7658$Pld94)
                                 (list
                                   'if
                                   (g$chi-expr$7217$Pld94
                                     g$e0$7657$Pld94
                                     g$r$7648$Pld94
                                     g$mr$7649$Pld94)
                                   (g$chi-expr$7217$Pld94
                                     g$e1$7658$Pld94
                                     g$r$7648$Pld94
                                     g$mr$7649$Pld94)
                                   (g$build-void$6856$Pld94))))
                              g$ls/false$7656$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$7655$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$7655$Pld94
                         '(_ any any)))))
                   g$t$7650$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$7650$Pld94 '(_ any any any)))))
         g$e$7647$Pld94))))
   (g$case-transformer$7158$Pld94
     g$case-transformer$10592$Pld94
     (case-lambda
       ((g$e$7659$Pld94 g$r$7660$Pld94 g$mr$7661$Pld94)
        (letrec* ((g$build-one$7662$Pld94
                    (case-lambda
                      ((g$t$7691$Pld94 g$cls$7692$Pld94 g$rest$7693$Pld94)
                       ((case-lambda
                          ((g$t$7694$Pld94)
                           ((case-lambda
                              ((g$ls/false$7695$Pld94)
                               (if g$ls/false$7695$Pld94
                                 (apply
                                   (case-lambda
                                     ((g$d*$7696$Pld94
                                        g$e$7697$Pld94
                                        g$e*$7698$Pld94)
                                      (list
                                        'if
                                        ((case-lambda
                                           ((g$data$7699$Pld94)
                                            (if (= '1
                                                   (length g$data$7699$Pld94))
                                              (list
                                                '(primitive eqv?)
                                                g$t$7691$Pld94
                                                (list
                                                  'quote
                                                  (car g$data$7699$Pld94)))
                                              (list
                                                '(primitive memv)
                                                g$t$7691$Pld94
                                                (list
                                                  'quote
                                                  g$data$7699$Pld94)))))
                                         (g$stx->datum$6932$Pld94
                                           g$d*$7696$Pld94))
                                        (g$build-sequence$6855$Pld94
                                          '#f
                                          (g$chi-expr*$7215$Pld94
                                            (cons
                                              g$e$7697$Pld94
                                              g$e*$7698$Pld94)
                                            g$r$7660$Pld94
                                            g$mr$7661$Pld94))
                                        g$rest$7693$Pld94)))
                                   g$ls/false$7695$Pld94)
                                 ((case-lambda
                                    ((g$t$7700$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$7701$Pld94)
                                         (if g$ls/false$7701$Pld94
                                           (apply
                                             (case-lambda
                                               ((g$else$7702$Pld94)
                                                (g$syntax-violation$7305$Pld94
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$7659$Pld94)))
                                             g$ls/false$7701$Pld94)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid syntax"
                                             g$t$7700$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$7700$Pld94
                                        'any))))
                                  g$t$7694$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$7694$Pld94
                              '(each-any any . each-any)))))
                        g$cls$7692$Pld94))))
                  (g$build-last$7663$Pld94
                    (case-lambda
                      ((g$t$7676$Pld94 g$cls$7677$Pld94)
                       ((case-lambda
                          ((g$t$7678$Pld94)
                           ((case-lambda
                              ((g$ls/false$7679$Pld94)
                               (if g$ls/false$7679$Pld94
                                 (apply
                                   (case-lambda
                                     ((g$d*$7680$Pld94
                                        g$e$7681$Pld94
                                        g$e*$7682$Pld94)
                                      (g$build-one$7662$Pld94
                                        g$t$7676$Pld94
                                        g$cls$7677$Pld94
                                        (g$build-void$6856$Pld94))))
                                   g$ls/false$7679$Pld94)
                                 ((case-lambda
                                    ((g$t$7683$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$7684$Pld94)
                                         (if g$ls/false$7684$Pld94
                                           (apply
                                             (case-lambda
                                               ((g$else-kwd$7685$Pld94
                                                  g$x$7686$Pld94
                                                  g$x*$7687$Pld94)
                                                (if (if (g$id?$6921$Pld94
                                                          g$else-kwd$7685$Pld94)
                                                      (begin
                                                        '#f
                                                        (g$free-id=?$6925$Pld94
                                                          g$else-kwd$7685$Pld94
                                                          (g$scheme-stx$7142$Pld94
                                                            'else)))
                                                      '#f)
                                                  (g$build-sequence$6855$Pld94
                                                    '#f
                                                    (g$chi-expr*$7215$Pld94
                                                      (cons
                                                        g$x$7686$Pld94
                                                        g$x*$7687$Pld94)
                                                      g$r$7660$Pld94
                                                      g$mr$7661$Pld94))
                                                  (g$syntax-violation$7305$Pld94
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$7659$Pld94))))
                                             g$ls/false$7684$Pld94)
                                           ((case-lambda
                                              ((g$t$7688$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$7689$Pld94)
                                                   (if g$ls/false$7689$Pld94
                                                     (apply
                                                       (case-lambda
                                                         ((g$else$7690$Pld94)
                                                          (g$syntax-violation$7305$Pld94
                                                            '#f
                                                            '"invalid syntax"
                                                            g$e$7659$Pld94)))
                                                       g$ls/false$7689$Pld94)
                                                     (g$syntax-violation$7305$Pld94
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$7688$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$7688$Pld94
                                                  'any))))
                                            g$t$7683$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$7683$Pld94
                                        '(any any . each-any)))))
                                  g$t$7678$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$7678$Pld94
                              '(each-any any . each-any)))))
                        g$cls$7677$Pld94)))))
          ((case-lambda
             ((g$t$7664$Pld94)
              ((case-lambda
                 ((g$ls/false$7665$Pld94)
                  (if g$ls/false$7665$Pld94
                    (apply
                      (case-lambda
                        ((g$expr$7666$Pld94)
                         (g$build-sequence$6855$Pld94
                           '#f
                           (list
                             (g$chi-expr$7217$Pld94
                               g$expr$7666$Pld94
                               g$r$7660$Pld94
                               g$mr$7661$Pld94)
                             (g$build-void$6856$Pld94)))))
                      g$ls/false$7665$Pld94)
                    ((case-lambda
                       ((g$t$7667$Pld94)
                        ((case-lambda
                           ((g$ls/false$7668$Pld94)
                            (if g$ls/false$7668$Pld94
                              (apply
                                (case-lambda
                                  ((g$expr$7669$Pld94
                                     g$cls$7670$Pld94
                                     g$cls*$7671$Pld94)
                                   ((case-lambda
                                      ((g$t$7672$Pld94)
                                       (g$build-let$6854$Pld94
                                         '#f
                                         (list g$t$7672$Pld94)
                                         (list
                                           (g$chi-expr$7217$Pld94
                                             g$expr$7669$Pld94
                                             g$r$7660$Pld94
                                             g$mr$7661$Pld94))
                                         ((letrec ((g$f$7673$Pld94
                                                     (case-lambda
                                                       ((g$cls$7674$Pld94
                                                          g$cls*$7675$Pld94)
                                                        (if (null?
                                                              g$cls*$7675$Pld94)
                                                          (g$build-last$7663$Pld94
                                                            g$t$7672$Pld94
                                                            g$cls$7674$Pld94)
                                                          (g$build-one$7662$Pld94
                                                            g$t$7672$Pld94
                                                            g$cls$7674$Pld94
                                                            (g$f$7673$Pld94
                                                              (car g$cls*$7675$Pld94)
                                                              (cdr g$cls*$7675$Pld94))))))))
                                            g$f$7673$Pld94)
                                          g$cls$7670$Pld94
                                          g$cls*$7671$Pld94))))
                                    (g$gen-lexical$6865$Pld94 't))))
                                g$ls/false$7668$Pld94)
                              (g$syntax-violation$7305$Pld94
                                '#f
                                '"invalid syntax"
                                g$t$7667$Pld94))))
                         (g$syntax-dispatch$7199$Pld94
                           g$t$7667$Pld94
                           '(_ any any . each-any)))))
                     g$t$7664$Pld94))))
               (g$syntax-dispatch$7199$Pld94 g$t$7664$Pld94 '(_ any)))))
           g$e$7659$Pld94)))))
   (g$quote-transformer$7159$Pld94
     g$quote-transformer$10593$Pld94
     (case-lambda
       ((g$e$7703$Pld94 g$r$7704$Pld94 g$mr$7705$Pld94)
        ((case-lambda
           ((g$t$7706$Pld94)
            ((case-lambda
               ((g$ls/false$7707$Pld94)
                (if g$ls/false$7707$Pld94
                  (apply
                    (case-lambda
                      ((g$datum$7708$Pld94)
                       (list
                         'quote
                         (g$stx->datum$6932$Pld94 g$datum$7708$Pld94))))
                    g$ls/false$7707$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7706$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$7706$Pld94 '(_ any)))))
         g$e$7703$Pld94))))
   (g$case-lambda-transformer$7160$Pld94
     g$case-lambda-transformer$10594$Pld94
     (case-lambda
       ((g$e$7709$Pld94 g$r$7710$Pld94 g$mr$7711$Pld94)
        ((case-lambda
           ((g$t$7712$Pld94)
            ((case-lambda
               ((g$ls/false$7713$Pld94)
                (if g$ls/false$7713$Pld94
                  (apply
                    (case-lambda
                      ((g$fmls*$7714$Pld94 g$b*$7715$Pld94 g$b**$7716$Pld94)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7221$Pld94
                              g$e$7709$Pld94
                              g$fmls*$7714$Pld94
                              (map cons g$b*$7715$Pld94 g$b**$7716$Pld94)
                              g$r$7710$Pld94
                              g$mr$7711$Pld94)))
                         (case-lambda
                           ((g$fmls*$7719$Pld94 g$body*$7720$Pld94)
                            ((case-lambda
                               ((g$body*$7721$Pld94 g$fmls*$7722$Pld94)
                                (g$build-case-lambda$6853$Pld94
                                  '#f
                                  g$fmls*$7722$Pld94
                                  g$body*$7721$Pld94)))
                             g$body*$7720$Pld94
                             g$fmls*$7719$Pld94))))))
                    g$ls/false$7713$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7712$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7712$Pld94
               '(_ . #(each (any any . each-any)))))))
         g$e$7709$Pld94))))
   (g$lambda-transformer$7161$Pld94
     g$lambda-transformer$10595$Pld94
     (case-lambda
       ((g$e$7723$Pld94 g$r$7724$Pld94 g$mr$7725$Pld94)
        ((case-lambda
           ((g$t$7726$Pld94)
            ((case-lambda
               ((g$ls/false$7727$Pld94)
                (if g$ls/false$7727$Pld94
                  (apply
                    (case-lambda
                      ((g$fmls$7728$Pld94 g$b$7729$Pld94 g$b*$7730$Pld94)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7220$Pld94
                              g$e$7723$Pld94
                              g$fmls$7728$Pld94
                              (cons g$b$7729$Pld94 g$b*$7730$Pld94)
                              g$r$7724$Pld94
                              g$mr$7725$Pld94)))
                         (case-lambda
                           ((g$fmls$7733$Pld94 g$body$7734$Pld94)
                            ((case-lambda
                               ((g$body$7735$Pld94 g$fmls$7736$Pld94)
                                (g$build-lambda$6852$Pld94
                                  '#f
                                  g$fmls$7736$Pld94
                                  g$body$7735$Pld94)))
                             g$body$7734$Pld94
                             g$fmls$7733$Pld94))))))
                    g$ls/false$7727$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7726$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7726$Pld94
               '(_ any any . each-any)))))
         g$e$7723$Pld94))))
   (g$bless$7162$Pld94
     g$bless$10596$Pld94
     (case-lambda
       ((g$x$7737$Pld94)
        (g$mkstx$6909$Pld94
          ((letrec ((g$f$7738$Pld94
                      (case-lambda
                        ((g$x$7739$Pld94)
                         (if (g$stx?$6893$Pld94 g$x$7739$Pld94)
                           g$x$7739$Pld94
                           (if (pair? g$x$7739$Pld94)
                             (cons
                               (g$f$7738$Pld94 (car g$x$7739$Pld94))
                               (g$f$7738$Pld94 (cdr g$x$7739$Pld94)))
                             (if (symbol? g$x$7739$Pld94)
                               (g$scheme-stx$7142$Pld94 g$x$7739$Pld94)
                               (if (vector? g$x$7739$Pld94)
                                 (vector-map g$f$7738$Pld94 g$x$7739$Pld94)
                                 g$x$7739$Pld94))))))))
             g$f$7738$Pld94)
           g$x$7737$Pld94)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7163$Pld94
     g$with-syntax-macro$10597$Pld94
     (case-lambda
       ((g$e$7740$Pld94)
        ((case-lambda
           ((g$t$7741$Pld94)
            ((case-lambda
               ((g$ls/false$7742$Pld94)
                (if g$ls/false$7742$Pld94
                  (apply
                    (case-lambda
                      ((g$pat*$7743$Pld94
                         g$expr*$7744$Pld94
                         g$b$7745$Pld94
                         g$b*$7746$Pld94)
                       ((case-lambda
                          ((g$idn*$7747$Pld94)
                           (begin
                             (g$verify-formals$7219$Pld94
                               (map car g$idn*$7747$Pld94)
                               g$e$7740$Pld94)
                             ((case-lambda
                                ((g$t*$7748$Pld94)
                                 (g$bless$7162$Pld94
                                   (list
                                     'let
                                     (map list
                                          g$t*$7748$Pld94
                                          g$expr*$7744$Pld94)
                                     ((letrec ((g$f$7749$Pld94
                                                 (case-lambda
                                                   ((g$pat*$7750$Pld94
                                                      g$t*$7751$Pld94)
                                                    (if (null?
                                                          g$pat*$7750$Pld94)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$7745$Pld94
                                                            g$b*$7746$Pld94)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$7751$Pld94)
                                                        '()
                                                        (list
                                                          (car g$pat*$7750$Pld94)
                                                          (g$f$7749$Pld94
                                                            (cdr g$pat*$7750$Pld94)
                                                            (cdr g$t*$7751$Pld94)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$7750$Pld94))
                                                            (car g$t*$7751$Pld94)))))))))
                                        g$f$7749$Pld94)
                                      g$pat*$7743$Pld94
                                      g$t*$7748$Pld94)))))
                              (g$generate-temporaries$7298$Pld94
                                g$expr*$7744$Pld94)))))
                        ((letrec ((g$f$7752$Pld94
                                    (case-lambda
                                      ((g$pat*$7753$Pld94)
                                       (if (null? g$pat*$7753$Pld94)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7198$Pld94
                                                (car g$pat*$7753$Pld94)
                                                '())))
                                           (case-lambda
                                             ((g$pat$7756$Pld94
                                                g$idn*$7757$Pld94)
                                              ((case-lambda
                                                 ((g$idn*$7758$Pld94
                                                    g$pat$7759$Pld94)
                                                  (append
                                                    g$idn*$7758$Pld94
                                                    (g$f$7752$Pld94
                                                      (cdr g$pat*$7753$Pld94)))))
                                               g$idn*$7757$Pld94
                                               g$pat$7756$Pld94)))))))))
                           g$f$7752$Pld94)
                         g$pat*$7743$Pld94))))
                    g$ls/false$7742$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7741$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7741$Pld94
               '(_ #(each (any any)) any . each-any)))))
         g$e$7740$Pld94))))
   (g$invalid-fmls-error$7164$Pld94
     g$invalid-fmls-error$10598$Pld94
     (case-lambda
       ((g$stx$7760$Pld94 g$fmls$7761$Pld94)
        ((case-lambda
           ((g$t$7762$Pld94)
            ((case-lambda
               ((g$ls/false$7763$Pld94)
                (if g$ls/false$7763$Pld94
                  (apply
                    (case-lambda
                      ((g$id*$7764$Pld94 g$last$7765$Pld94)
                       ((letrec ((g$f$7766$Pld94
                                   (case-lambda
                                     ((g$id*$7767$Pld94)
                                      (if (null? g$id*$7767$Pld94)
                                        (values)
                                        (if (not (g$id?$6921$Pld94
                                                   (car g$id*$7767$Pld94)))
                                          (g$syntax-violation$7305$Pld94
                                            '#f
                                            '"not an identifier"
                                            g$stx$7760$Pld94
                                            (car g$id*$7767$Pld94))
                                          (begin
                                            (g$f$7766$Pld94
                                              (cdr g$id*$7767$Pld94))
                                            (if (g$bound-id-member?$6928$Pld94
                                                  (car g$id*$7767$Pld94)
                                                  (cdr g$id*$7767$Pld94))
                                              (g$syntax-violation$7305$Pld94
                                                '#f
                                                '"duplicate binding"
                                                g$stx$7760$Pld94
                                                (car g$id*$7767$Pld94))
                                              (void)))))))))
                          g$f$7766$Pld94)
                        (if (g$id?$6921$Pld94 g$last$7765$Pld94)
                          (cons g$last$7765$Pld94 g$id*$7764$Pld94)
                          (if (g$syntax-null?$6916$Pld94 g$last$7765$Pld94)
                            g$id*$7764$Pld94
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"not an identifier"
                              g$stx$7760$Pld94
                              g$last$7765$Pld94))))))
                    g$ls/false$7763$Pld94)
                  ((case-lambda
                     ((g$t$7768$Pld94)
                      ((case-lambda
                         ((g$ls/false$7769$Pld94)
                          (if g$ls/false$7769$Pld94
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7305$Pld94
                                   '#f
                                   '"malformed binding form"
                                   g$stx$7760$Pld94
                                   g$fmls$7761$Pld94)))
                              g$ls/false$7769$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$7768$Pld94))))
                       (g$syntax-dispatch$7199$Pld94 g$t$7768$Pld94 '_))))
                   g$t$7762$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7762$Pld94
               '#(each+ any () any)))))
         g$fmls$7761$Pld94))))
   (g$let-macro$7165$Pld94
     g$let-macro$10599$Pld94
     (case-lambda
       ((g$stx$7770$Pld94)
        ((case-lambda
           ((g$t$7771$Pld94)
            ((case-lambda
               ((g$ls/false$7772$Pld94)
                (if g$ls/false$7772$Pld94
                  (apply
                    (case-lambda
                      ((g$lhs*$7773$Pld94
                         g$rhs*$7774$Pld94
                         g$b$7775$Pld94
                         g$b*$7776$Pld94)
                       (if (g$valid-bound-ids?$6926$Pld94 g$lhs*$7773$Pld94)
                         (g$bless$7162$Pld94
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$7773$Pld94
                                 (cons g$b$7775$Pld94 g$b*$7776$Pld94)))
                             g$rhs*$7774$Pld94))
                         (g$invalid-fmls-error$7164$Pld94
                           g$stx$7770$Pld94
                           g$lhs*$7773$Pld94))))
                    g$ls/false$7772$Pld94)
                  ((case-lambda
                     ((g$t$7777$Pld94)
                      ((case-lambda
                         ((g$ls/false$7778$Pld94)
                          (if (if g$ls/false$7778$Pld94
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$7779$Pld94
                                         g$lhs*$7780$Pld94
                                         g$rhs*$7781$Pld94
                                         g$b$7782$Pld94
                                         g$b*$7783$Pld94)
                                       (g$id?$6921$Pld94 g$f$7779$Pld94)))
                                    g$ls/false$7778$Pld94))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$7784$Pld94
                                   g$lhs*$7785$Pld94
                                   g$rhs*$7786$Pld94
                                   g$b$7787$Pld94
                                   g$b*$7788$Pld94)
                                 (if (g$valid-bound-ids?$6926$Pld94
                                       g$lhs*$7785$Pld94)
                                   (g$bless$7162$Pld94
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$7784$Pld94
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$7785$Pld94
                                                 (cons
                                                   g$b$7787$Pld94
                                                   g$b*$7788$Pld94)))))
                                         g$f$7784$Pld94)
                                       g$rhs*$7786$Pld94))
                                   (g$invalid-fmls-error$7164$Pld94
                                     g$stx$7770$Pld94
                                     g$lhs*$7785$Pld94))))
                              g$ls/false$7778$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$7777$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$7777$Pld94
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$7771$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7771$Pld94
               '(_ #(each (any any)) any . each-any)))))
         g$stx$7770$Pld94))))
   (g$let-values-macro$7166$Pld94
     g$let-values-macro$10600$Pld94
     (case-lambda
       ((g$stx$7789$Pld94)
        (letrec* ((g$rename$7790$Pld94
                    (case-lambda
                      ((g$x$7841$Pld94 g$old*$7842$Pld94 g$new*$7843$Pld94)
                       (begin
                         (if (g$id?$6921$Pld94 g$x$7841$Pld94)
                           (void)
                           (g$syntax-violation$7305$Pld94
                             '#f
                             '"not an indentifier"
                             g$stx$7789$Pld94
                             g$x$7841$Pld94))
                         (if (g$bound-id-member?$6928$Pld94
                               g$x$7841$Pld94
                               g$old*$7842$Pld94)
                           (g$syntax-violation$7305$Pld94
                             '#f
                             '"duplicate binding"
                             g$stx$7789$Pld94
                             g$x$7841$Pld94)
                           (void))
                         ((case-lambda
                            ((g$y$7844$Pld94)
                             (values
                               g$y$7844$Pld94
                               (cons g$x$7841$Pld94 g$old*$7842$Pld94)
                               (cons g$y$7844$Pld94 g$new*$7843$Pld94))))
                          (gensym
                            (g$syntax->datum$7308$Pld94 g$x$7841$Pld94)))))))
                  (g$rename*$7791$Pld94
                    (case-lambda
                      ((g$x*$7832$Pld94 g$old*$7833$Pld94 g$new*$7834$Pld94)
                       (if (null? g$x*$7832$Pld94)
                         (values '() g$old*$7833$Pld94 g$new*$7834$Pld94)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$7790$Pld94
                                (car g$x*$7832$Pld94)
                                g$old*$7833$Pld94
                                g$new*$7834$Pld94)))
                           (case-lambda
                             ((g$x$7835$Pld94
                                g$old*$7836$Pld94
                                g$new*$7837$Pld94)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$7791$Pld94
                                     (cdr g$x*$7832$Pld94)
                                     g$old*$7836$Pld94
                                     g$new*$7837$Pld94)))
                                (case-lambda
                                  ((g$x*$7838$Pld94
                                     g$old*$7839$Pld94
                                     g$new*$7840$Pld94)
                                   (values
                                     (cons g$x$7835$Pld94 g$x*$7838$Pld94)
                                     g$old*$7839$Pld94
                                     g$new*$7840$Pld94))))))))))))
          ((case-lambda
             ((g$t$7792$Pld94)
              ((case-lambda
                 ((g$ls/false$7793$Pld94)
                  (if g$ls/false$7793$Pld94
                    (apply
                      (case-lambda
                        ((g$b$7794$Pld94 g$b*$7795$Pld94)
                         (g$cons*$5351$Pld94
                           (g$bless$7162$Pld94 'let)
                           '()
                           g$b$7794$Pld94
                           g$b*$7795$Pld94)))
                      g$ls/false$7793$Pld94)
                    ((case-lambda
                       ((g$t$7796$Pld94)
                        ((case-lambda
                           ((g$ls/false$7797$Pld94)
                            (if g$ls/false$7797$Pld94
                              (apply
                                (case-lambda
                                  ((g$lhs*$7798$Pld94
                                     g$rhs*$7799$Pld94
                                     g$b$7800$Pld94
                                     g$b*$7801$Pld94)
                                   (g$bless$7162$Pld94
                                     ((letrec ((g$f$7802$Pld94
                                                 (case-lambda
                                                   ((g$lhs*$7803$Pld94
                                                      g$rhs*$7804$Pld94
                                                      g$old*$7805$Pld94
                                                      g$new*$7806$Pld94)
                                                    (if (null?
                                                          g$lhs*$7803$Pld94)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$7805$Pld94
                                                               g$new*$7806$Pld94)
                                                          (cons
                                                            g$b$7800$Pld94
                                                            g$b*$7801$Pld94)))
                                                      ((case-lambda
                                                         ((g$t$7807$Pld94)
                                                          ((case-lambda
                                                             ((g$ls/false$7808$Pld94)
                                                              (if g$ls/false$7808$Pld94
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7809$Pld94)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$7791$Pld94
                                                                            g$x*$7809$Pld94
                                                                            g$old*$7805$Pld94
                                                                            g$new*$7806$Pld94)))
                                                                       (case-lambda
                                                                         ((g$y*$7813$Pld94
                                                                            g$old*$7814$Pld94
                                                                            g$new*$7815$Pld94)
                                                                          ((case-lambda
                                                                             ((g$new*$7816$Pld94
                                                                                g$old*$7817$Pld94
                                                                                g$y*$7818$Pld94)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$7804$Pld94))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$7818$Pld94
                                                                                  (g$f$7802$Pld94
                                                                                    (cdr g$lhs*$7803$Pld94)
                                                                                    (cdr g$rhs*$7804$Pld94)
                                                                                    g$old*$7817$Pld94
                                                                                    g$new*$7816$Pld94)))))
                                                                           g$new*$7815$Pld94
                                                                           g$old*$7814$Pld94
                                                                           g$y*$7813$Pld94))))))
                                                                  g$ls/false$7808$Pld94)
                                                                ((case-lambda
                                                                   ((g$t$7819$Pld94)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7820$Pld94)
                                                                        (if g$ls/false$7820$Pld94
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7821$Pld94
                                                                                 g$x$7822$Pld94)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$7790$Pld94
                                                                                      g$x$7822$Pld94
                                                                                      g$old*$7805$Pld94
                                                                                      g$new*$7806$Pld94)))
                                                                                 (case-lambda
                                                                                   ((g$y$7823$Pld94
                                                                                      g$old*$7824$Pld94
                                                                                      g$new*$7825$Pld94)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$7791$Pld94
                                                                                           g$x*$7821$Pld94
                                                                                           g$old*$7824$Pld94
                                                                                           g$new*$7825$Pld94)))
                                                                                      (case-lambda
                                                                                        ((g$y*$7826$Pld94
                                                                                           g$old*$7827$Pld94
                                                                                           g$new*$7828$Pld94)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$7804$Pld94))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$7826$Pld94
                                                                                               g$y$7823$Pld94)
                                                                                             (g$f$7802$Pld94
                                                                                               (cdr g$lhs*$7803$Pld94)
                                                                                               (cdr g$rhs*$7804$Pld94)
                                                                                               g$old*$7827$Pld94
                                                                                               g$new*$7828$Pld94)))))))))))
                                                                            g$ls/false$7820$Pld94)
                                                                          ((case-lambda
                                                                             ((g$t$7829$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$7830$Pld94)
                                                                                  (if g$ls/false$7830$Pld94
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$7831$Pld94)
                                                                                         (g$syntax-violation$7305$Pld94
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7789$Pld94
                                                                                           g$others$7831$Pld94)))
                                                                                      g$ls/false$7830$Pld94)
                                                                                    (g$syntax-violation$7305$Pld94
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$7829$Pld94))))
                                                                               (g$syntax-dispatch$7199$Pld94
                                                                                 g$t$7829$Pld94
                                                                                 'any))))
                                                                           g$t$7819$Pld94))))
                                                                     (g$syntax-dispatch$7199$Pld94
                                                                       g$t$7819$Pld94
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7807$Pld94))))
                                                           (g$syntax-dispatch$7199$Pld94
                                                             g$t$7807$Pld94
                                                             'each-any))))
                                                       (car g$lhs*$7803$Pld94)))))))
                                        g$f$7802$Pld94)
                                      g$lhs*$7798$Pld94
                                      g$rhs*$7799$Pld94
                                      '()
                                      '()))))
                                g$ls/false$7797$Pld94)
                              (g$syntax-violation$7305$Pld94
                                '#f
                                '"invalid syntax"
                                g$t$7796$Pld94))))
                         (g$syntax-dispatch$7199$Pld94
                           g$t$7796$Pld94
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7792$Pld94))))
               (g$syntax-dispatch$7199$Pld94
                 g$t$7792$Pld94
                 '(_ () any . each-any)))))
           g$stx$7789$Pld94)))))
   (g$let*-values-macro$7167$Pld94
     g$let*-values-macro$10601$Pld94
     (case-lambda
       ((g$stx$7845$Pld94)
        (letrec* ((g$check$7846$Pld94
                    (case-lambda
                      ((g$x*$7870$Pld94)
                       (if (null? g$x*$7870$Pld94)
                         (void)
                         ((case-lambda
                            ((g$x$7871$Pld94)
                             (begin
                               (if (g$id?$6921$Pld94 g$x$7871$Pld94)
                                 (void)
                                 (g$syntax-violation$7305$Pld94
                                   '#f
                                   '"not an identifier"
                                   g$stx$7845$Pld94
                                   g$x$7871$Pld94))
                               (g$check$7846$Pld94 (cdr g$x*$7870$Pld94))
                               (if (g$bound-id-member?$6928$Pld94
                                     g$x$7871$Pld94
                                     (cdr g$x*$7870$Pld94))
                                 (g$syntax-violation$7305$Pld94
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$7845$Pld94
                                   g$x$7871$Pld94)
                                 (void)))))
                          (car g$x*$7870$Pld94)))))))
          ((case-lambda
             ((g$t$7847$Pld94)
              ((case-lambda
                 ((g$ls/false$7848$Pld94)
                  (if g$ls/false$7848$Pld94
                    (apply
                      (case-lambda
                        ((g$b$7849$Pld94 g$b*$7850$Pld94)
                         (g$cons*$5351$Pld94
                           (g$bless$7162$Pld94 'let)
                           '()
                           g$b$7849$Pld94
                           g$b*$7850$Pld94)))
                      g$ls/false$7848$Pld94)
                    ((case-lambda
                       ((g$t$7851$Pld94)
                        ((case-lambda
                           ((g$ls/false$7852$Pld94)
                            (if g$ls/false$7852$Pld94
                              (apply
                                (case-lambda
                                  ((g$lhs*$7853$Pld94
                                     g$rhs*$7854$Pld94
                                     g$b$7855$Pld94
                                     g$b*$7856$Pld94)
                                   (g$bless$7162$Pld94
                                     ((letrec ((g$f$7857$Pld94
                                                 (case-lambda
                                                   ((g$lhs*$7858$Pld94
                                                      g$rhs*$7859$Pld94)
                                                    (if (null?
                                                          g$lhs*$7858$Pld94)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$7855$Pld94
                                                          g$b*$7856$Pld94))
                                                      ((case-lambda
                                                         ((g$t$7860$Pld94)
                                                          ((case-lambda
                                                             ((g$ls/false$7861$Pld94)
                                                              (if g$ls/false$7861$Pld94
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7862$Pld94)
                                                                     (begin
                                                                       (g$check$7846$Pld94
                                                                         g$x*$7862$Pld94)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$7859$Pld94))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$7862$Pld94
                                                                           (g$f$7857$Pld94
                                                                             (cdr g$lhs*$7858$Pld94)
                                                                             (cdr g$rhs*$7859$Pld94)))))))
                                                                  g$ls/false$7861$Pld94)
                                                                ((case-lambda
                                                                   ((g$t$7863$Pld94)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7864$Pld94)
                                                                        (if g$ls/false$7864$Pld94
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7865$Pld94
                                                                                 g$x$7866$Pld94)
                                                                               (begin
                                                                                 (g$check$7846$Pld94
                                                                                   (cons
                                                                                     g$x$7866$Pld94
                                                                                     g$x*$7865$Pld94))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$7859$Pld94))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$7865$Pld94
                                                                                       g$x$7866$Pld94)
                                                                                     (g$f$7857$Pld94
                                                                                       (cdr g$lhs*$7858$Pld94)
                                                                                       (cdr g$rhs*$7859$Pld94)))))))
                                                                            g$ls/false$7864$Pld94)
                                                                          ((case-lambda
                                                                             ((g$t$7867$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$7868$Pld94)
                                                                                  (if g$ls/false$7868$Pld94
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$7869$Pld94)
                                                                                         (g$syntax-violation$7305$Pld94
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7845$Pld94
                                                                                           g$others$7869$Pld94)))
                                                                                      g$ls/false$7868$Pld94)
                                                                                    (g$syntax-violation$7305$Pld94
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$7867$Pld94))))
                                                                               (g$syntax-dispatch$7199$Pld94
                                                                                 g$t$7867$Pld94
                                                                                 'any))))
                                                                           g$t$7863$Pld94))))
                                                                     (g$syntax-dispatch$7199$Pld94
                                                                       g$t$7863$Pld94
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7860$Pld94))))
                                                           (g$syntax-dispatch$7199$Pld94
                                                             g$t$7860$Pld94
                                                             'each-any))))
                                                       (car g$lhs*$7858$Pld94)))))))
                                        g$f$7857$Pld94)
                                      g$lhs*$7853$Pld94
                                      g$rhs*$7854$Pld94))))
                                g$ls/false$7852$Pld94)
                              (g$syntax-violation$7305$Pld94
                                '#f
                                '"invalid syntax"
                                g$t$7851$Pld94))))
                         (g$syntax-dispatch$7199$Pld94
                           g$t$7851$Pld94
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7847$Pld94))))
               (g$syntax-dispatch$7199$Pld94
                 g$t$7847$Pld94
                 '(_ () any . each-any)))))
           g$stx$7845$Pld94)))))
   (g$trace-lambda-macro$7168$Pld94
     g$trace-lambda-macro$10602$Pld94
     (case-lambda
       ((g$stx$7872$Pld94)
        ((case-lambda
           ((g$t$7873$Pld94)
            ((case-lambda
               ((g$ls/false$7874$Pld94)
                (if g$ls/false$7874$Pld94
                  (apply
                    (case-lambda
                      ((g$who$7875$Pld94
                         g$fmls$7876$Pld94
                         g$b$7877$Pld94
                         g$b*$7878$Pld94)
                       (if (g$valid-bound-ids?$6926$Pld94 g$fmls$7876$Pld94)
                         (g$bless$7162$Pld94
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$7875$Pld94)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$7876$Pld94
                                 (cons g$b$7877$Pld94 g$b*$7878$Pld94)))))
                         (g$invalid-fmls-error$7164$Pld94
                           g$stx$7872$Pld94
                           g$fmls$7876$Pld94))))
                    g$ls/false$7874$Pld94)
                  ((case-lambda
                     ((g$t$7879$Pld94)
                      ((case-lambda
                         ((g$ls/false$7880$Pld94)
                          (if g$ls/false$7880$Pld94
                            (apply
                              (case-lambda
                                ((g$who$7881$Pld94
                                   g$fmls$7882$Pld94
                                   g$last$7883$Pld94
                                   g$b$7884$Pld94
                                   g$b*$7885$Pld94)
                                 (if (g$valid-bound-ids?$6926$Pld94
                                       (cons
                                         g$last$7883$Pld94
                                         g$fmls$7882$Pld94))
                                   (g$bless$7162$Pld94
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$7881$Pld94)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$7882$Pld94
                                             g$last$7883$Pld94)
                                           (cons
                                             g$b$7884$Pld94
                                             g$b*$7885$Pld94)))))
                                   (g$invalid-fmls-error$7164$Pld94
                                     g$stx$7872$Pld94
                                     (append
                                       g$fmls$7882$Pld94
                                       g$last$7883$Pld94)))))
                              g$ls/false$7880$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$7879$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$7879$Pld94
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$7873$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7873$Pld94
               '(_ any each-any any . each-any)))))
         g$stx$7872$Pld94))))
   (g$trace-define-macro$7169$Pld94
     g$trace-define-macro$10603$Pld94
     (case-lambda
       ((g$stx$7886$Pld94)
        ((case-lambda
           ((g$t$7887$Pld94)
            ((case-lambda
               ((g$ls/false$7888$Pld94)
                (if g$ls/false$7888$Pld94
                  (apply
                    (case-lambda
                      ((g$who$7889$Pld94
                         g$fmls$7890$Pld94
                         g$b$7891$Pld94
                         g$b*$7892$Pld94)
                       (if (g$valid-bound-ids?$6926$Pld94 g$fmls$7890$Pld94)
                         (g$bless$7162$Pld94
                           (list
                             'define
                             g$who$7889$Pld94
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$7889$Pld94)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$7890$Pld94
                                   (cons g$b$7891$Pld94 g$b*$7892$Pld94))))))
                         (g$invalid-fmls-error$7164$Pld94
                           g$stx$7886$Pld94
                           g$fmls$7890$Pld94))))
                    g$ls/false$7888$Pld94)
                  ((case-lambda
                     ((g$t$7893$Pld94)
                      ((case-lambda
                         ((g$ls/false$7894$Pld94)
                          (if g$ls/false$7894$Pld94
                            (apply
                              (case-lambda
                                ((g$who$7895$Pld94
                                   g$fmls$7896$Pld94
                                   g$last$7897$Pld94
                                   g$b$7898$Pld94
                                   g$b*$7899$Pld94)
                                 (if (g$valid-bound-ids?$6926$Pld94
                                       (cons
                                         g$last$7897$Pld94
                                         g$fmls$7896$Pld94))
                                   (g$bless$7162$Pld94
                                     (list
                                       'define
                                       g$who$7895$Pld94
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$7895$Pld94)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$7896$Pld94
                                               g$last$7897$Pld94)
                                             (cons
                                               g$b$7898$Pld94
                                               g$b*$7899$Pld94))))))
                                   (g$invalid-fmls-error$7164$Pld94
                                     g$stx$7886$Pld94
                                     (append
                                       g$fmls$7896$Pld94
                                       g$last$7897$Pld94)))))
                              g$ls/false$7894$Pld94)
                            ((case-lambda
                               ((g$t$7900$Pld94)
                                ((case-lambda
                                   ((g$ls/false$7901$Pld94)
                                    (if g$ls/false$7901$Pld94
                                      (apply
                                        (case-lambda
                                          ((g$who$7902$Pld94 g$expr$7903$Pld94)
                                           (if (g$id?$6921$Pld94
                                                 g$who$7902$Pld94)
                                             (g$bless$7162$Pld94
                                               (list
                                                 'define
                                                 g$who$7902$Pld94
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$7903$Pld94))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$7902$Pld94)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7305$Pld94
                                               '#f
                                               '"invalid name"
                                               g$stx$7886$Pld94))))
                                        g$ls/false$7901$Pld94)
                                      (g$syntax-violation$7305$Pld94
                                        '#f
                                        '"invalid syntax"
                                        g$t$7900$Pld94))))
                                 (g$syntax-dispatch$7199$Pld94
                                   g$t$7900$Pld94
                                   '(_ any any)))))
                             g$t$7893$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$7893$Pld94
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$7887$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$7887$Pld94
               '(_ (any . each-any) any . each-any)))))
         g$stx$7886$Pld94))))
   (g$trace-define-syntax-macro$7170$Pld94
     g$trace-define-syntax-macro$10604$Pld94
     (case-lambda
       ((g$stx$7904$Pld94)
        ((case-lambda
           ((g$t$7905$Pld94)
            ((case-lambda
               ((g$ls/false$7906$Pld94)
                (if g$ls/false$7906$Pld94
                  (apply
                    (case-lambda
                      ((g$who$7907$Pld94 g$expr$7908$Pld94)
                       (if (g$id?$6921$Pld94 g$who$7907$Pld94)
                         (g$bless$7162$Pld94
                           (list
                             'define-syntax
                             g$who$7907$Pld94
                             (list
                               'make-traced-macro
                               (list 'quote g$who$7907$Pld94)
                               g$expr$7908$Pld94)))
                         (g$syntax-violation$7305$Pld94
                           '#f
                           '"invalid name"
                           g$stx$7904$Pld94))))
                    g$ls/false$7906$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7905$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$7905$Pld94 '(_ any any)))))
         g$stx$7904$Pld94))))
   (g$trace-let/rec-syntax$7171$Pld94
     g$trace-let/rec-syntax$10605$Pld94
     (case-lambda
       ((g$who$7909$Pld94)
        (case-lambda
          ((g$stx$7910$Pld94)
           ((case-lambda
              ((g$t$7911$Pld94)
               ((case-lambda
                  ((g$ls/false$7912$Pld94)
                   (if g$ls/false$7912$Pld94
                     (apply
                       (case-lambda
                         ((g$lhs*$7913$Pld94
                            g$rhs*$7914$Pld94
                            g$b$7915$Pld94
                            g$b*$7916$Pld94)
                          (if (g$valid-bound-ids?$6926$Pld94 g$lhs*$7913$Pld94)
                            ((case-lambda
                               ((g$rhs*$7917$Pld94)
                                (g$bless$7162$Pld94
                                  (cons
                                    g$who$7909$Pld94
                                    (cons
                                      (map list
                                           g$lhs*$7913$Pld94
                                           g$rhs*$7917$Pld94)
                                      (cons g$b$7915$Pld94 g$b*$7916$Pld94))))))
                             (map (case-lambda
                                    ((g$lhs$7918$Pld94 g$rhs$7919$Pld94)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$7918$Pld94)
                                       g$rhs$7919$Pld94)))
                                  g$lhs*$7913$Pld94
                                  g$rhs*$7914$Pld94))
                            (g$invalid-fmls-error$7164$Pld94
                              g$stx$7910$Pld94
                              g$lhs*$7913$Pld94))))
                       g$ls/false$7912$Pld94)
                     (g$syntax-violation$7305$Pld94
                       '#f
                       '"invalid syntax"
                       g$t$7911$Pld94))))
                (g$syntax-dispatch$7199$Pld94
                  g$t$7911$Pld94
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$7910$Pld94))))))
   (g$trace-let-syntax-macro$7172$Pld94
     g$trace-let-syntax-macro$10606$Pld94
     (g$trace-let/rec-syntax$7171$Pld94 'let-syntax))
   (g$trace-letrec-syntax-macro$7173$Pld94
     g$trace-letrec-syntax-macro$10607$Pld94
     (g$trace-let/rec-syntax$7171$Pld94 'letrec-syntax))
   (g$guard-macro$7174$Pld94
     g$guard-macro$10608$Pld94
     (case-lambda
       ((g$x$7920$Pld94)
        (letrec* ((g$gen-clauses$7921$Pld94
                    (case-lambda
                      ((g$con$7933$Pld94
                         g$outerk$7934$Pld94
                         g$clause*$7935$Pld94)
                       (letrec* ((g$f$7936$Pld94
                                   (case-lambda
                                     ((g$x$7964$Pld94 g$k$7965$Pld94)
                                      ((case-lambda
                                         ((g$t$7966$Pld94)
                                          ((case-lambda
                                             ((g$ls/false$7967$Pld94)
                                              (if g$ls/false$7967$Pld94
                                                (apply
                                                  (case-lambda
                                                    ((g$e$7968$Pld94
                                                       g$p$7969$Pld94)
                                                     ((case-lambda
                                                        ((g$t$7970$Pld94)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$7970$Pld94
                                                               g$e$7968$Pld94))
                                                           (list
                                                             'if
                                                             g$t$7970$Pld94
                                                             (list
                                                               g$p$7969$Pld94
                                                               g$t$7970$Pld94)
                                                             g$k$7965$Pld94))))
                                                      (gensym))))
                                                  g$ls/false$7967$Pld94)
                                                ((case-lambda
                                                   ((g$t$7971$Pld94)
                                                    ((case-lambda
                                                       ((g$ls/false$7972$Pld94)
                                                        (if g$ls/false$7972$Pld94
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$7973$Pld94)
                                                               ((case-lambda
                                                                  ((g$t$7974$Pld94)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$7974$Pld94
                                                                         g$e$7973$Pld94))
                                                                     (list
                                                                       'if
                                                                       g$t$7974$Pld94
                                                                       g$t$7974$Pld94
                                                                       g$k$7965$Pld94))))
                                                                (gensym))))
                                                            g$ls/false$7972$Pld94)
                                                          ((case-lambda
                                                             ((g$t$7975$Pld94)
                                                              ((case-lambda
                                                                 ((g$ls/false$7976$Pld94)
                                                                  (if g$ls/false$7976$Pld94
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$7977$Pld94
                                                                           g$v$7978$Pld94
                                                                           g$v*$7979$Pld94)
                                                                         (list
                                                                           'if
                                                                           g$e$7977$Pld94
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$7978$Pld94
                                                                               g$v*$7979$Pld94))
                                                                           g$k$7965$Pld94)))
                                                                      g$ls/false$7976$Pld94)
                                                                    ((case-lambda
                                                                       ((g$t$7980$Pld94)
                                                                        ((case-lambda
                                                                           ((g$ls/false$7981$Pld94)
                                                                            (if g$ls/false$7981$Pld94
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7305$Pld94
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$7964$Pld94)))
                                                                                g$ls/false$7981$Pld94)
                                                                              (g$syntax-violation$7305$Pld94
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$7980$Pld94))))
                                                                         (g$syntax-dispatch$7199$Pld94
                                                                           g$t$7980$Pld94
                                                                           '_))))
                                                                     g$t$7975$Pld94))))
                                                               (g$syntax-dispatch$7199$Pld94
                                                                 g$t$7975$Pld94
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$7971$Pld94))))
                                                     (g$syntax-dispatch$7199$Pld94
                                                       g$t$7971$Pld94
                                                       '(any)))))
                                                 g$t$7966$Pld94))))
                                           (g$syntax-dispatch$7199$Pld94
                                             g$t$7966$Pld94
                                             '(any #(scheme-id =>) any)))))
                                       g$x$7964$Pld94))))
                                 (g$f*$7937$Pld94
                                   (case-lambda
                                     ((g$x*$7944$Pld94)
                                      ((case-lambda
                                         ((g$t$7945$Pld94)
                                          ((case-lambda
                                             ((g$ls/false$7946$Pld94)
                                              (if g$ls/false$7946$Pld94
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$7933$Pld94)
                                                       '#t)))
                                                  g$ls/false$7946$Pld94)
                                                ((case-lambda
                                                   ((g$t$7947$Pld94)
                                                    ((case-lambda
                                                       ((g$ls/false$7948$Pld94)
                                                        (if g$ls/false$7948$Pld94
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$7949$Pld94
                                                                 g$e*$7950$Pld94)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$7949$Pld94
                                                                     g$e*$7950$Pld94))
                                                                 '#f)))
                                                            g$ls/false$7948$Pld94)
                                                          ((case-lambda
                                                             ((g$t$7951$Pld94)
                                                              ((case-lambda
                                                                 ((g$ls/false$7952$Pld94)
                                                                  (if g$ls/false$7952$Pld94
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$7953$Pld94
                                                                           g$cls*$7954$Pld94)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$7937$Pld94
                                                                                g$cls*$7954$Pld94)))
                                                                           (case-lambda
                                                                             ((g$e$7957$Pld94
                                                                                g$g$7958$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$g$7959$Pld94
                                                                                    g$e$7960$Pld94)
                                                                                  (values
                                                                                    (g$f$7936$Pld94
                                                                                      g$cls$7953$Pld94
                                                                                      g$e$7960$Pld94)
                                                                                    g$g$7959$Pld94)))
                                                                               g$g$7958$Pld94
                                                                               g$e$7957$Pld94))))))
                                                                      g$ls/false$7952$Pld94)
                                                                    ((case-lambda
                                                                       ((g$t$7961$Pld94)
                                                                        ((case-lambda
                                                                           ((g$ls/false$7962$Pld94)
                                                                            (if g$ls/false$7962$Pld94
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$7963$Pld94)
                                                                                   (g$syntax-violation$7305$Pld94
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$7963$Pld94)))
                                                                                g$ls/false$7962$Pld94)
                                                                              (g$syntax-violation$7305$Pld94
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$7961$Pld94))))
                                                                         (g$syntax-dispatch$7199$Pld94
                                                                           g$t$7961$Pld94
                                                                           'any))))
                                                                     g$t$7951$Pld94))))
                                                               (g$syntax-dispatch$7199$Pld94
                                                                 g$t$7951$Pld94
                                                                 '(any .
                                                                       any)))))
                                                           g$t$7947$Pld94))))
                                                     (g$syntax-dispatch$7199$Pld94
                                                       g$t$7947$Pld94
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$7945$Pld94))))
                                           (g$syntax-dispatch$7199$Pld94
                                             g$t$7945$Pld94
                                             '()))))
                                       g$x*$7944$Pld94)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$7937$Pld94 g$clause*$7935$Pld94)))
                           (case-lambda
                             ((g$code$7940$Pld94 g$raisek$7941$Pld94)
                              ((case-lambda
                                 ((g$raisek$7942$Pld94 g$code$7943$Pld94)
                                  (if g$raisek$7942$Pld94
                                    (list g$outerk$7934$Pld94 g$code$7943$Pld94)
                                    g$code$7943$Pld94)))
                               g$raisek$7941$Pld94
                               g$code$7940$Pld94)))))))))
          ((case-lambda
             ((g$t$7922$Pld94)
              ((case-lambda
                 ((g$ls/false$7923$Pld94)
                  (if (if g$ls/false$7923$Pld94
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$7924$Pld94
                                 g$clause*$7925$Pld94
                                 g$b$7926$Pld94
                                 g$b*$7927$Pld94)
                               (g$id?$6921$Pld94 g$con$7924$Pld94)))
                            g$ls/false$7923$Pld94))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$7928$Pld94
                           g$clause*$7929$Pld94
                           g$b$7930$Pld94
                           g$b*$7931$Pld94)
                         ((case-lambda
                            ((g$outerk$7932$Pld94)
                             (g$bless$7162$Pld94
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$7932$Pld94)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$7928$Pld94)
                                           (g$gen-clauses$7921$Pld94
                                             g$con$7928$Pld94
                                             g$outerk$7932$Pld94
                                             g$clause*$7929$Pld94))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$7930$Pld94
                                                 g$b*$7931$Pld94))))))))))))
                          (gensym))))
                      g$ls/false$7923$Pld94)
                    (g$syntax-violation$7305$Pld94
                      '#f
                      '"invalid syntax"
                      g$t$7922$Pld94))))
               (g$syntax-dispatch$7199$Pld94
                 g$t$7922$Pld94
                 '(_ (any . each-any) any . each-any)))))
           g$x$7920$Pld94)))))
   (g$define-enumeration-macro$7175$Pld94
     g$define-enumeration-macro$10609$Pld94
     (case-lambda
       ((g$stx$7982$Pld94)
        (letrec* ((g$set?$7983$Pld94
                    (case-lambda
                      ((g$x$7996$Pld94)
                       ((case-lambda
                          ((g$t$7997$Pld94)
                           (if g$t$7997$Pld94
                             g$t$7997$Pld94
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$7996$Pld94)
                                          (cdr g$x$7996$Pld94)))
                                 (begin
                                   '#f
                                   (g$set?$7983$Pld94 (cdr g$x$7996$Pld94)))
                                 '#f)))))
                        (null? g$x$7996$Pld94)))))
                  (g$remove-dups$7984$Pld94
                    (case-lambda
                      ((g$ls$7995$Pld94)
                       (if (null? g$ls$7995$Pld94)
                         '()
                         (cons
                           (car g$ls$7995$Pld94)
                           (g$remove-dups$7984$Pld94
                             (g$remq$5356$Pld94
                               (car g$ls$7995$Pld94)
                               (cdr g$ls$7995$Pld94)))))))))
          ((case-lambda
             ((g$t$7985$Pld94)
              ((case-lambda
                 ((g$ls/false$7986$Pld94)
                  (if (if g$ls/false$7986$Pld94
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$7987$Pld94
                                 g$id*$7988$Pld94
                                 g$maker$7989$Pld94)
                               (if (g$id?$6921$Pld94 g$name$7987$Pld94)
                                 (if (g$id?$6921$Pld94 g$maker$7989$Pld94)
                                   (begin
                                     '#f
                                     (g$for-all$5349$Pld94
                                       g$id?$6921$Pld94
                                       g$id*$7988$Pld94))
                                   '#f)
                                 '#f)))
                            g$ls/false$7986$Pld94))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$7990$Pld94 g$id*$7991$Pld94 g$maker$7992$Pld94)
                         ((case-lambda
                            ((g$name*$7993$Pld94 g$mk$7994$Pld94)
                             (g$bless$7162$Pld94
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$7994$Pld94
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$7993$Pld94))))
                                 (list
                                   'define-syntax
                                   g$name$7990$Pld94
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$7993$Pld94))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$7990$Pld94)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$7992$Pld94
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$7992$Pld94)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$7993$Pld94))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$7992$Pld94)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$7994$Pld94
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$7984$Pld94
                            (g$syntax->datum$7308$Pld94 g$id*$7991$Pld94))
                          (gensym))))
                      g$ls/false$7986$Pld94)
                    (g$syntax-violation$7305$Pld94
                      '#f
                      '"invalid syntax"
                      g$t$7985$Pld94))))
               (g$syntax-dispatch$7199$Pld94
                 g$t$7985$Pld94
                 '(_ any each-any any)))))
           g$stx$7982$Pld94)))))
   (g$time-macro$7176$Pld94
     g$time-macro$10610$Pld94
     (case-lambda
       ((g$stx$7998$Pld94)
        ((case-lambda
           ((g$t$7999$Pld94)
            ((case-lambda
               ((g$ls/false$8000$Pld94)
                (if g$ls/false$8000$Pld94
                  (apply
                    (case-lambda
                      ((g$expr$8001$Pld94)
                       ((case-lambda
                          ((g$str$8002$Pld94)
                           (g$bless$7162$Pld94
                             (list
                               'time-it
                               g$str$8002$Pld94
                               (list 'lambda '() g$expr$8001$Pld94)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6079$Pld94)))
                          (case-lambda
                            ((g$p$8005$Pld94 g$e$8006$Pld94)
                             ((case-lambda
                                ((g$e$8007$Pld94 g$p$8008$Pld94)
                                 (begin
                                   (write
                                     (g$syntax->datum$7308$Pld94
                                       g$expr$8001$Pld94)
                                     g$p$8008$Pld94)
                                   (g$e$8007$Pld94))))
                              g$e$8006$Pld94
                              g$p$8005$Pld94)))))))
                    g$ls/false$8000$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$7999$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$7999$Pld94 '(_ any)))))
         g$stx$7998$Pld94))))
   (g$delay-macro$7177$Pld94
     g$delay-macro$10611$Pld94
     (case-lambda
       ((g$stx$8009$Pld94)
        ((case-lambda
           ((g$t$8010$Pld94)
            ((case-lambda
               ((g$ls/false$8011$Pld94)
                (if g$ls/false$8011$Pld94
                  (apply
                    (case-lambda
                      ((g$expr$8012$Pld94)
                       (g$bless$7162$Pld94
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8012$Pld94)))))
                    g$ls/false$8011$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8010$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$8010$Pld94 '(_ any)))))
         g$stx$8009$Pld94))))
   (g$assert-macro$7178$Pld94
     g$assert-macro$10612$Pld94
     (case-lambda
       ((g$stx$8013$Pld94)
        ((case-lambda
           ((g$t$8014$Pld94)
            ((case-lambda
               ((g$ls/false$8015$Pld94)
                (if g$ls/false$8015$Pld94
                  (apply
                    (case-lambda
                      ((g$expr$8016$Pld94)
                       (g$bless$7162$Pld94
                         (list
                           'unless
                           g$expr$8016$Pld94
                           (list
                             'assertion-violation
                             ''assert
                             '"assertion failed"
                             (list 'quote g$expr$8016$Pld94))))))
                    g$ls/false$8015$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8014$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$8014$Pld94 '(_ any)))))
         g$stx$8013$Pld94))))
   (g$endianness-macro$7179$Pld94
     g$endianness-macro$10613$Pld94
     (case-lambda
       ((g$stx$8017$Pld94)
        ((case-lambda
           ((g$t$8018$Pld94)
            ((case-lambda
               ((g$ls/false$8019$Pld94)
                (if g$ls/false$8019$Pld94
                  (apply
                    (case-lambda
                      ((g$e$8020$Pld94)
                       ((case-lambda
                          ((g$t$8021$Pld94)
                           (if (eqv? g$t$8021$Pld94 'little)
                             (g$bless$7162$Pld94 ''little)
                             (if (eqv? g$t$8021$Pld94 'big)
                               (g$bless$7162$Pld94 ''big)
                               (g$syntax-violation$7305$Pld94
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8017$Pld94)))))
                        (g$syntax->datum$7308$Pld94 g$e$8020$Pld94))))
                    g$ls/false$8019$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8018$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$8018$Pld94 '(_ any)))))
         g$stx$8017$Pld94))))
   (g$identifier-syntax-macro$7180$Pld94
     g$identifier-syntax-macro$10614$Pld94
     (case-lambda
       ((g$stx$8022$Pld94)
        ((case-lambda
           ((g$t$8023$Pld94)
            ((case-lambda
               ((g$ls/false$8024$Pld94)
                (if g$ls/false$8024$Pld94
                  (apply
                    (case-lambda
                      ((g$expr$8025$Pld94)
                       (g$bless$7162$Pld94
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8025$Pld94))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8025$Pld94)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8024$Pld94)
                  ((case-lambda
                     ((g$t$8026$Pld94)
                      ((case-lambda
                         ((g$ls/false$8027$Pld94)
                          (if (if g$ls/false$8027$Pld94
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8028$Pld94
                                         g$expr1$8029$Pld94
                                         g$id2$8030$Pld94
                                         g$expr2$8031$Pld94
                                         g$expr3$8032$Pld94)
                                       (if (g$id?$6921$Pld94 g$id1$8028$Pld94)
                                         (if (g$id?$6921$Pld94 g$id2$8030$Pld94)
                                           (begin
                                             '#f
                                             (g$id?$6921$Pld94
                                               g$expr2$8031$Pld94))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8027$Pld94))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8033$Pld94
                                   g$expr1$8034$Pld94
                                   g$id2$8035$Pld94
                                   g$expr2$8036$Pld94
                                   g$expr3$8037$Pld94)
                                 (g$bless$7162$Pld94
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8034$Pld94))
                                         (list
                                           (list 'set! 'id g$expr2$8036$Pld94)
                                           (list 'syntax g$expr3$8037$Pld94))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8034$Pld94
                                               '(e* ...))))))))))
                              g$ls/false$8027$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$8026$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$8026$Pld94
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8023$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$8023$Pld94 '(_ any)))))
         g$stx$8022$Pld94))))
   (g$do-macro$7181$Pld94
     g$do-macro$10615$Pld94
     (case-lambda
       ((g$stx$8038$Pld94)
        (letrec* ((g$bind$8039$Pld94
                    (case-lambda
                      ((g$x$8051$Pld94)
                       ((case-lambda
                          ((g$t$8052$Pld94)
                           ((case-lambda
                              ((g$ls/false$8053$Pld94)
                               (if g$ls/false$8053$Pld94
                                 (apply
                                   (case-lambda
                                     ((g$x$8054$Pld94 g$init$8055$Pld94)
                                      (list
                                        g$x$8054$Pld94
                                        g$init$8055$Pld94
                                        g$x$8054$Pld94)))
                                   g$ls/false$8053$Pld94)
                                 ((case-lambda
                                    ((g$t$8056$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8057$Pld94)
                                         (if g$ls/false$8057$Pld94
                                           (apply
                                             (case-lambda
                                               ((g$x$8058$Pld94
                                                  g$init$8059$Pld94
                                                  g$step$8060$Pld94)
                                                (list
                                                  g$x$8058$Pld94
                                                  g$init$8059$Pld94
                                                  g$step$8060$Pld94)))
                                             g$ls/false$8057$Pld94)
                                           ((case-lambda
                                              ((g$t$8061$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$8062$Pld94)
                                                   (if g$ls/false$8062$Pld94
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7305$Pld94
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8038$Pld94)))
                                                       g$ls/false$8062$Pld94)
                                                     (g$syntax-violation$7305$Pld94
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8061$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$8061$Pld94
                                                  '_))))
                                            g$t$8056$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8056$Pld94
                                        '(any any any)))))
                                  g$t$8052$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$8052$Pld94
                              '(any any)))))
                        g$x$8051$Pld94)))))
          ((case-lambda
             ((g$t$8040$Pld94)
              ((case-lambda
                 ((g$ls/false$8041$Pld94)
                  (if g$ls/false$8041$Pld94
                    (apply
                      (case-lambda
                        ((g$binding*$8042$Pld94
                           g$test$8043$Pld94
                           g$expr*$8044$Pld94
                           g$command*$8045$Pld94)
                         ((case-lambda
                            ((g$t$8046$Pld94)
                             ((case-lambda
                                ((g$ls/false$8047$Pld94)
                                 (if g$ls/false$8047$Pld94
                                   (apply
                                     (case-lambda
                                       ((g$x*$8048$Pld94
                                          g$init*$8049$Pld94
                                          g$step*$8050$Pld94)
                                        (if (g$valid-bound-ids?$6926$Pld94
                                              g$x*$8048$Pld94)
                                          (g$bless$7162$Pld94
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8048$Pld94
                                                    (list
                                                      'if
                                                      g$test$8043$Pld94
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8044$Pld94))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8045$Pld94
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8050$Pld94))))))))
                                              (cons 'loop g$init*$8049$Pld94)))
                                          (g$syntax-violation$7305$Pld94
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8038$Pld94))))
                                     g$ls/false$8047$Pld94)
                                   (g$syntax-violation$7305$Pld94
                                     '#f
                                     '"invalid syntax"
                                     g$t$8046$Pld94))))
                              (g$syntax-dispatch$7199$Pld94
                                g$t$8046$Pld94
                                '#(each (any any any))))))
                          (map g$bind$8039$Pld94 g$binding*$8042$Pld94))))
                      g$ls/false$8041$Pld94)
                    (g$syntax-violation$7305$Pld94
                      '#f
                      '"invalid syntax"
                      g$t$8040$Pld94))))
               (g$syntax-dispatch$7199$Pld94
                 g$t$8040$Pld94
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8038$Pld94)))))
   (g$let*-macro$7182$Pld94
     g$let*-macro$10616$Pld94
     (case-lambda
       ((g$stx$8063$Pld94)
        ((case-lambda
           ((g$t$8064$Pld94)
            ((case-lambda
               ((g$ls/false$8065$Pld94)
                (if (if g$ls/false$8065$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8066$Pld94
                               g$rhs*$8067$Pld94
                               g$b$8068$Pld94
                               g$b*$8069$Pld94)
                             (g$for-all$5349$Pld94
                               g$id?$6921$Pld94
                               g$lhs*$8066$Pld94)))
                          g$ls/false$8065$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8070$Pld94
                         g$rhs*$8071$Pld94
                         g$b$8072$Pld94
                         g$b*$8073$Pld94)
                       (g$bless$7162$Pld94
                         ((letrec ((g$f$8074$Pld94
                                     (case-lambda
                                       ((g$x*$8075$Pld94)
                                        (if (null? g$x*$8075$Pld94)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8072$Pld94
                                                g$b*$8073$Pld94)))
                                          (list
                                            'let
                                            (list (car g$x*$8075$Pld94))
                                            (g$f$8074$Pld94
                                              (cdr g$x*$8075$Pld94))))))))
                            g$f$8074$Pld94)
                          (map list g$lhs*$8070$Pld94 g$rhs*$8071$Pld94)))))
                    g$ls/false$8065$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8064$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$8064$Pld94
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8063$Pld94))))
   (g$or-macro$7183$Pld94
     g$or-macro$10617$Pld94
     (case-lambda
       ((g$stx$8076$Pld94)
        ((case-lambda
           ((g$t$8077$Pld94)
            ((case-lambda
               ((g$ls/false$8078$Pld94)
                (if g$ls/false$8078$Pld94
                  (apply (case-lambda (() '#f)) g$ls/false$8078$Pld94)
                  ((case-lambda
                     ((g$t$8079$Pld94)
                      ((case-lambda
                         ((g$ls/false$8080$Pld94)
                          (if g$ls/false$8080$Pld94
                            (apply
                              (case-lambda
                                ((g$e$8081$Pld94 g$e*$8082$Pld94)
                                 (g$bless$7162$Pld94
                                   ((letrec ((g$f$8083$Pld94
                                               (case-lambda
                                                 ((g$e$8084$Pld94
                                                    g$e*$8085$Pld94)
                                                  (if (null? g$e*$8085$Pld94)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8084$Pld94)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8084$Pld94))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8083$Pld94
                                                          (car g$e*$8085$Pld94)
                                                          (cdr g$e*$8085$Pld94)))))))))
                                      g$f$8083$Pld94)
                                    g$e$8081$Pld94
                                    g$e*$8082$Pld94))))
                              g$ls/false$8080$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$8079$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$8079$Pld94
                         '(_ any . each-any)))))
                   g$t$8077$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$8077$Pld94 '(_)))))
         g$stx$8076$Pld94))))
   (g$and-macro$7184$Pld94
     g$and-macro$10618$Pld94
     (case-lambda
       ((g$stx$8086$Pld94)
        ((case-lambda
           ((g$t$8087$Pld94)
            ((case-lambda
               ((g$ls/false$8088$Pld94)
                (if g$ls/false$8088$Pld94
                  (apply (case-lambda (() '#t)) g$ls/false$8088$Pld94)
                  ((case-lambda
                     ((g$t$8089$Pld94)
                      ((case-lambda
                         ((g$ls/false$8090$Pld94)
                          (if g$ls/false$8090$Pld94
                            (apply
                              (case-lambda
                                ((g$e$8091$Pld94 g$e*$8092$Pld94)
                                 (g$bless$7162$Pld94
                                   ((letrec ((g$f$8093$Pld94
                                               (case-lambda
                                                 ((g$e$8094$Pld94
                                                    g$e*$8095$Pld94)
                                                  (if (null? g$e*$8095$Pld94)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8094$Pld94)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8094$Pld94
                                                        (cons
                                                          (g$f$8093$Pld94
                                                            (car g$e*$8095$Pld94)
                                                            (cdr g$e*$8095$Pld94))
                                                          '(#f)))))))))
                                      g$f$8093$Pld94)
                                    g$e$8091$Pld94
                                    g$e*$8092$Pld94))))
                              g$ls/false$8090$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$8089$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$8089$Pld94
                         '(_ any . each-any)))))
                   g$t$8087$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$8087$Pld94 '(_)))))
         g$stx$8086$Pld94))))
   (g$cond-macro$7185$Pld94
     g$cond-macro$10619$Pld94
     (case-lambda
       ((g$stx$8096$Pld94)
        ((case-lambda
           ((g$t$8097$Pld94)
            ((case-lambda
               ((g$ls/false$8098$Pld94)
                (if g$ls/false$8098$Pld94
                  (apply
                    (case-lambda
                      ((g$cls$8099$Pld94 g$cls*$8100$Pld94)
                       (g$bless$7162$Pld94
                         ((letrec ((g$f$8101$Pld94
                                     (case-lambda
                                       ((g$cls$8102$Pld94 g$cls*$8103$Pld94)
                                        (if (null? g$cls*$8103$Pld94)
                                          ((case-lambda
                                             ((g$t$8104$Pld94)
                                              ((case-lambda
                                                 ((g$ls/false$8105$Pld94)
                                                  (if g$ls/false$8105$Pld94
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8106$Pld94
                                                           g$e*$8107$Pld94)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8106$Pld94
                                                             g$e*$8107$Pld94))))
                                                      g$ls/false$8105$Pld94)
                                                    ((case-lambda
                                                       ((g$t$8108$Pld94)
                                                        ((case-lambda
                                                           ((g$ls/false$8109$Pld94)
                                                            (if g$ls/false$8109$Pld94
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8110$Pld94
                                                                     g$p$8111$Pld94)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8110$Pld94))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8111$Pld94
                                                                         '(t))))))
                                                                g$ls/false$8109$Pld94)
                                                              ((case-lambda
                                                                 ((g$t$8112$Pld94)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8113$Pld94)
                                                                      (if g$ls/false$8113$Pld94
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8114$Pld94)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8114$Pld94
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8113$Pld94)
                                                                        ((case-lambda
                                                                           ((g$t$8115$Pld94)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8116$Pld94)
                                                                                (if g$ls/false$8116$Pld94
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8117$Pld94
                                                                                         g$e*$8118$Pld94)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8117$Pld94
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8118$Pld94))))
                                                                                    g$ls/false$8116$Pld94)
                                                                                  ((case-lambda
                                                                                     ((g$t$8119$Pld94)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8120$Pld94)
                                                                                          (if g$ls/false$8120$Pld94
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7305$Pld94
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8096$Pld94)))
                                                                                              g$ls/false$8120$Pld94)
                                                                                            (g$syntax-violation$7305$Pld94
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8119$Pld94))))
                                                                                       (g$syntax-dispatch$7199$Pld94
                                                                                         g$t$8119$Pld94
                                                                                         '_))))
                                                                                   g$t$8115$Pld94))))
                                                                             (g$syntax-dispatch$7199$Pld94
                                                                               g$t$8115$Pld94
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8112$Pld94))))
                                                                   (g$syntax-dispatch$7199$Pld94
                                                                     g$t$8112$Pld94
                                                                     '(any)))))
                                                               g$t$8108$Pld94))))
                                                         (g$syntax-dispatch$7199$Pld94
                                                           g$t$8108$Pld94
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8104$Pld94))))
                                               (g$syntax-dispatch$7199$Pld94
                                                 g$t$8104$Pld94
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8102$Pld94)
                                          ((case-lambda
                                             ((g$t$8121$Pld94)
                                              ((case-lambda
                                                 ((g$ls/false$8122$Pld94)
                                                  (if g$ls/false$8122$Pld94
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8123$Pld94
                                                           g$e*$8124$Pld94)
                                                         (g$syntax-violation$7305$Pld94
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8096$Pld94)))
                                                      g$ls/false$8122$Pld94)
                                                    ((case-lambda
                                                       ((g$t$8125$Pld94)
                                                        ((case-lambda
                                                           ((g$ls/false$8126$Pld94)
                                                            (if g$ls/false$8126$Pld94
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8127$Pld94
                                                                     g$p$8128$Pld94)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8127$Pld94))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8128$Pld94
                                                                         '(t))
                                                                       (g$f$8101$Pld94
                                                                         (car g$cls*$8103$Pld94)
                                                                         (cdr g$cls*$8103$Pld94))))))
                                                                g$ls/false$8126$Pld94)
                                                              ((case-lambda
                                                                 ((g$t$8129$Pld94)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8130$Pld94)
                                                                      (if g$ls/false$8130$Pld94
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8131$Pld94)
                                                                             (list
                                                                               'or
                                                                               g$e$8131$Pld94
                                                                               (g$f$8101$Pld94
                                                                                 (car g$cls*$8103$Pld94)
                                                                                 (cdr g$cls*$8103$Pld94)))))
                                                                          g$ls/false$8130$Pld94)
                                                                        ((case-lambda
                                                                           ((g$t$8132$Pld94)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8133$Pld94)
                                                                                (if g$ls/false$8133$Pld94
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8134$Pld94
                                                                                         g$e*$8135$Pld94)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8134$Pld94
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8135$Pld94)
                                                                                         (g$f$8101$Pld94
                                                                                           (car g$cls*$8103$Pld94)
                                                                                           (cdr g$cls*$8103$Pld94)))))
                                                                                    g$ls/false$8133$Pld94)
                                                                                  ((case-lambda
                                                                                     ((g$t$8136$Pld94)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8137$Pld94)
                                                                                          (if g$ls/false$8137$Pld94
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7305$Pld94
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8096$Pld94)))
                                                                                              g$ls/false$8137$Pld94)
                                                                                            (g$syntax-violation$7305$Pld94
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8136$Pld94))))
                                                                                       (g$syntax-dispatch$7199$Pld94
                                                                                         g$t$8136$Pld94
                                                                                         '_))))
                                                                                   g$t$8132$Pld94))))
                                                                             (g$syntax-dispatch$7199$Pld94
                                                                               g$t$8132$Pld94
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8129$Pld94))))
                                                                   (g$syntax-dispatch$7199$Pld94
                                                                     g$t$8129$Pld94
                                                                     '(any)))))
                                                               g$t$8125$Pld94))))
                                                         (g$syntax-dispatch$7199$Pld94
                                                           g$t$8125$Pld94
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8121$Pld94))))
                                               (g$syntax-dispatch$7199$Pld94
                                                 g$t$8121$Pld94
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8102$Pld94))))))
                            g$f$8101$Pld94)
                          g$cls$8099$Pld94
                          g$cls*$8100$Pld94))))
                    g$ls/false$8098$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8097$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$8097$Pld94
               '(_ any . each-any)))))
         g$stx$8096$Pld94))))
   (g$do-include$7186$Pld94
     g$do-include$10620$Pld94
     (case-lambda
       ((g$stx$8138$Pld94 g$id$8139$Pld94 g$filename$8140$Pld94)
        ((case-lambda
           ((g$filename$8141$Pld94)
            (begin
              (if (if (string? g$filename$8141$Pld94)
                    (begin '#f (g$id?$6921$Pld94 g$id$8139$Pld94))
                    '#f)
                (void)
                (g$syntax-violation$7305$Pld94
                  '#f
                  '"invalid syntax"
                  g$stx$8138$Pld94))
              (cons
                (g$bless$7162$Pld94 'begin)
                (with-input-from-file
                  g$filename$8141$Pld94
                  (case-lambda
                    (()
                     ((letrec ((g$f$8142$Pld94
                                 (case-lambda
                                   ((g$ls$8143$Pld94)
                                    ((case-lambda
                                       ((g$x$8144$Pld94)
                                        (if (eof-object? g$x$8144$Pld94)
                                          (reverse g$ls$8143$Pld94)
                                          (g$f$8142$Pld94
                                            (cons
                                              (g$datum->stx$6904$Pld94
                                                g$id$8139$Pld94
                                                g$x$8144$Pld94)
                                              g$ls$8143$Pld94)))))
                                     (read-annotated))))))
                        g$f$8142$Pld94)
                      '()))))))))
         (g$stx->datum$6932$Pld94 g$filename$8140$Pld94)))))
   (g$include-macro$7187$Pld94
     g$include-macro$10621$Pld94
     (case-lambda
       ((g$e$8145$Pld94)
        ((case-lambda
           ((g$t$8146$Pld94)
            ((case-lambda
               ((g$ls/false$8147$Pld94)
                (if g$ls/false$8147$Pld94
                  (apply
                    (case-lambda
                      ((g$id$8148$Pld94 g$filename$8149$Pld94)
                       (g$do-include$7186$Pld94
                         g$e$8145$Pld94
                         g$id$8148$Pld94
                         g$filename$8149$Pld94)))
                    g$ls/false$8147$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8146$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$8146$Pld94 '(any any)))))
         g$e$8145$Pld94))))
   (g$include-into-macro$7188$Pld94
     g$include-into-macro$10622$Pld94
     (case-lambda
       ((g$e$8150$Pld94)
        ((case-lambda
           ((g$t$8151$Pld94)
            ((case-lambda
               ((g$ls/false$8152$Pld94)
                (if g$ls/false$8152$Pld94
                  (apply
                    (case-lambda
                      ((g$id$8153$Pld94 g$filename$8154$Pld94)
                       (g$do-include$7186$Pld94
                         g$e$8150$Pld94
                         g$id$8153$Pld94
                         g$filename$8154$Pld94)))
                    g$ls/false$8152$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8151$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$8151$Pld94 '(_ any any)))))
         g$e$8150$Pld94))))
   (g$syntax-rules-macro$7189$Pld94
     g$syntax-rules-macro$10623$Pld94
     (case-lambda
       ((g$e$8155$Pld94)
        ((case-lambda
           ((g$t$8156$Pld94)
            ((case-lambda
               ((g$ls/false$8157$Pld94)
                (if g$ls/false$8157$Pld94
                  (apply
                    (case-lambda
                      ((g$lits$8158$Pld94 g$pat*$8159$Pld94 g$tmp*$8160$Pld94)
                       (begin
                         (g$verify-literals$7202$Pld94
                           g$lits$8158$Pld94
                           g$e$8155$Pld94)
                         (g$bless$7162$Pld94
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8158$Pld94
                                   (map (case-lambda
                                          ((g$pat$8161$Pld94 g$tmp$8162$Pld94)
                                           ((case-lambda
                                              ((g$t$8163$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$8164$Pld94)
                                                   (if g$ls/false$8164$Pld94
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8165$Pld94)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8165$Pld94)
                                                            (list
                                                              'syntax
                                                              g$tmp$8162$Pld94))))
                                                       g$ls/false$8164$Pld94)
                                                     ((case-lambda
                                                        ((g$t$8166$Pld94)
                                                         ((case-lambda
                                                            ((g$ls/false$8167$Pld94)
                                                             (if g$ls/false$8167$Pld94
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7305$Pld94
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8155$Pld94
                                                                      g$pat$8161$Pld94)))
                                                                 g$ls/false$8167$Pld94)
                                                               (g$syntax-violation$7305$Pld94
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8166$Pld94))))
                                                          (g$syntax-dispatch$7199$Pld94
                                                            g$t$8166$Pld94
                                                            '_))))
                                                      g$t$8163$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$8163$Pld94
                                                  '(_ . any)))))
                                            g$pat$8161$Pld94)))
                                        g$pat*$8159$Pld94
                                        g$tmp*$8160$Pld94)))))))))
                    g$ls/false$8157$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8156$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$8156$Pld94
               '(_ each-any . #(each (any any)))))))
         g$e$8155$Pld94))))
   (g$quasiquote-macro$7190$Pld94
     g$quasiquote-macro$10624$Pld94
     ((case-lambda
        (()
         (letrec* ((g$datum$8168$Pld94
                     (case-lambda
                       ((g$x$8299$Pld94)
                        (list
                          (g$scheme-stx$7142$Pld94 'quote)
                          (g$mkstx$6909$Pld94 g$x$8299$Pld94 '() '() '())))))
                   (g$quasicons*$8184$Pld94
                     (case-lambda
                       ((g$x$8295$Pld94 g$y$8296$Pld94)
                        ((letrec ((g$f$8297$Pld94
                                    (case-lambda
                                      ((g$x$8298$Pld94)
                                       (if (null? g$x$8298$Pld94)
                                         g$y$8296$Pld94
                                         (g$quasicons$8185$Pld94
                                           (car g$x$8298$Pld94)
                                           (g$f$8297$Pld94
                                             (cdr g$x$8298$Pld94))))))))
                           g$f$8297$Pld94)
                         g$x$8295$Pld94))))
                   (g$quasicons$8185$Pld94
                     (case-lambda
                       ((g$x$8276$Pld94 g$y$8277$Pld94)
                        ((case-lambda
                           ((g$t$8278$Pld94)
                            ((case-lambda
                               ((g$ls/false$8279$Pld94)
                                (if g$ls/false$8279$Pld94
                                  (apply
                                    (case-lambda
                                      ((g$dy$8280$Pld94)
                                       ((case-lambda
                                          ((g$t$8281$Pld94)
                                           ((case-lambda
                                              ((g$ls/false$8282$Pld94)
                                               (if g$ls/false$8282$Pld94
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8283$Pld94)
                                                      (list
                                                        (g$scheme-stx$7142$Pld94
                                                          'quote)
                                                        (cons
                                                          g$dx$8283$Pld94
                                                          g$dy$8280$Pld94))))
                                                   g$ls/false$8282$Pld94)
                                                 ((case-lambda
                                                    ((g$t$8284$Pld94)
                                                     ((case-lambda
                                                        ((g$ls/false$8285$Pld94)
                                                         (if g$ls/false$8285$Pld94
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8286$Pld94)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8287$Pld94)
                                                                        (if g$ls/false$8287$Pld94
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7142$Pld94
                                                                                   'list)
                                                                                 g$x$8276$Pld94)))
                                                                            g$ls/false$8287$Pld94)
                                                                          ((case-lambda
                                                                             ((g$t$8288$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8289$Pld94)
                                                                                  (if g$ls/false$8289$Pld94
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7142$Pld94
                                                                                             'cons)
                                                                                           g$x$8276$Pld94
                                                                                           g$y$8277$Pld94)))
                                                                                      g$ls/false$8289$Pld94)
                                                                                    (g$syntax-violation$7305$Pld94
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8288$Pld94))))
                                                                               (g$syntax-dispatch$7199$Pld94
                                                                                 g$t$8288$Pld94
                                                                                 '_))))
                                                                           g$t$8286$Pld94))))
                                                                     (g$syntax-dispatch$7199$Pld94
                                                                       g$t$8286$Pld94
                                                                       '()))))
                                                                 g$dy$8280$Pld94)))
                                                             g$ls/false$8285$Pld94)
                                                           (g$syntax-violation$7305$Pld94
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8284$Pld94))))
                                                      (g$syntax-dispatch$7199$Pld94
                                                        g$t$8284$Pld94
                                                        '_))))
                                                  g$t$8281$Pld94))))
                                            (g$syntax-dispatch$7199$Pld94
                                              g$t$8281$Pld94
                                              '(#(scheme-id quote) any)))))
                                        g$x$8276$Pld94)))
                                    g$ls/false$8279$Pld94)
                                  ((case-lambda
                                     ((g$t$8290$Pld94)
                                      ((case-lambda
                                         ((g$ls/false$8291$Pld94)
                                          (if g$ls/false$8291$Pld94
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8292$Pld94)
                                                 (g$cons*$5351$Pld94
                                                   (g$scheme-stx$7142$Pld94
                                                     'list)
                                                   g$x$8276$Pld94
                                                   g$stuff$8292$Pld94)))
                                              g$ls/false$8291$Pld94)
                                            ((case-lambda
                                               ((g$t$8293$Pld94)
                                                ((case-lambda
                                                   ((g$ls/false$8294$Pld94)
                                                    (if g$ls/false$8294$Pld94
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7142$Pld94
                                                               'cons)
                                                             g$x$8276$Pld94
                                                             g$y$8277$Pld94)))
                                                        g$ls/false$8294$Pld94)
                                                      (g$syntax-violation$7305$Pld94
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8293$Pld94))))
                                                 (g$syntax-dispatch$7199$Pld94
                                                   g$t$8293$Pld94
                                                   '_))))
                                             g$t$8290$Pld94))))
                                       (g$syntax-dispatch$7199$Pld94
                                         g$t$8290$Pld94
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8278$Pld94))))
                             (g$syntax-dispatch$7199$Pld94
                               g$t$8278$Pld94
                               '(#(scheme-id quote) any)))))
                         g$y$8277$Pld94))))
                   (g$quasiappend$8186$Pld94
                     (case-lambda
                       ((g$x$8263$Pld94 g$y$8264$Pld94)
                        ((case-lambda
                           ((g$ls$8265$Pld94)
                            (if (null? g$ls$8265$Pld94)
                              (list (g$scheme-stx$7142$Pld94 'quote) '())
                              (if (null? (cdr g$ls$8265$Pld94))
                                (car g$ls$8265$Pld94)
                                (g$cons*$5351$Pld94
                                  (g$scheme-stx$7142$Pld94 'append)
                                  g$ls$8265$Pld94)))))
                         ((letrec ((g$f$8266$Pld94
                                     (case-lambda
                                       ((g$x$8267$Pld94)
                                        (if (null? g$x$8267$Pld94)
                                          ((case-lambda
                                             ((g$t$8268$Pld94)
                                              ((case-lambda
                                                 ((g$ls/false$8269$Pld94)
                                                  (if g$ls/false$8269$Pld94
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8269$Pld94)
                                                    ((case-lambda
                                                       ((g$t$8270$Pld94)
                                                        ((case-lambda
                                                           ((g$ls/false$8271$Pld94)
                                                            (if g$ls/false$8271$Pld94
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8264$Pld94)))
                                                                g$ls/false$8271$Pld94)
                                                              (g$syntax-violation$7305$Pld94
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8270$Pld94))))
                                                         (g$syntax-dispatch$7199$Pld94
                                                           g$t$8270$Pld94
                                                           '_))))
                                                     g$t$8268$Pld94))))
                                               (g$syntax-dispatch$7199$Pld94
                                                 g$t$8268$Pld94
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8264$Pld94)
                                          ((case-lambda
                                             ((g$t$8272$Pld94)
                                              ((case-lambda
                                                 ((g$ls/false$8273$Pld94)
                                                  (if g$ls/false$8273$Pld94
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8266$Pld94
                                                           (cdr g$x$8267$Pld94))))
                                                      g$ls/false$8273$Pld94)
                                                    ((case-lambda
                                                       ((g$t$8274$Pld94)
                                                        ((case-lambda
                                                           ((g$ls/false$8275$Pld94)
                                                            (if g$ls/false$8275$Pld94
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8267$Pld94)
                                                                     (g$f$8266$Pld94
                                                                       (cdr g$x$8267$Pld94)))))
                                                                g$ls/false$8275$Pld94)
                                                              (g$syntax-violation$7305$Pld94
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8274$Pld94))))
                                                         (g$syntax-dispatch$7199$Pld94
                                                           g$t$8274$Pld94
                                                           '_))))
                                                     g$t$8272$Pld94))))
                                               (g$syntax-dispatch$7199$Pld94
                                                 g$t$8272$Pld94
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8267$Pld94)))))))
                            g$f$8266$Pld94)
                          g$x$8263$Pld94)))))
                   (g$quasivector$8187$Pld94
                     (case-lambda
                       ((g$x$8238$Pld94)
                        ((case-lambda
                           ((g$pat-x$8239$Pld94)
                            ((case-lambda
                               ((g$t$8240$Pld94)
                                ((case-lambda
                                   ((g$ls/false$8241$Pld94)
                                    (if g$ls/false$8241$Pld94
                                      (apply
                                        (case-lambda
                                          ((g$x*$8242$Pld94)
                                           (list
                                             (g$scheme-stx$7142$Pld94 'quote)
                                             (list->vector g$x*$8242$Pld94))))
                                        g$ls/false$8241$Pld94)
                                      ((case-lambda
                                         ((g$t$8243$Pld94)
                                          ((case-lambda
                                             ((g$ls/false$8244$Pld94)
                                              (if g$ls/false$8244$Pld94
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8245$Pld94
                                                                 (case-lambda
                                                                   ((g$x$8246$Pld94
                                                                      g$k$8247$Pld94)
                                                                    ((case-lambda
                                                                       ((g$t$8248$Pld94)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8249$Pld94)
                                                                            (if g$ls/false$8249$Pld94
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8250$Pld94)
                                                                                   (g$k$8247$Pld94
                                                                                     (map (case-lambda
                                                                                            ((g$x$8251$Pld94)
                                                                                             (list
                                                                                               (g$scheme-stx$7142$Pld94
                                                                                                 'quote)
                                                                                               g$x$8251$Pld94)))
                                                                                          g$x*$8250$Pld94))))
                                                                                g$ls/false$8249$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$t$8252$Pld94)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8253$Pld94)
                                                                                      (if g$ls/false$8253$Pld94
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8254$Pld94)
                                                                                             (g$k$8247$Pld94
                                                                                               g$x*$8254$Pld94)))
                                                                                          g$ls/false$8253$Pld94)
                                                                                        ((case-lambda
                                                                                           ((g$t$8255$Pld94)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8256$Pld94)
                                                                                                (if g$ls/false$8256$Pld94
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8257$Pld94
                                                                                                         g$y$8258$Pld94)
                                                                                                       (g$f$8245$Pld94
                                                                                                         g$y$8258$Pld94
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8259$Pld94)
                                                                                                            (g$k$8247$Pld94
                                                                                                              (cons
                                                                                                                g$x$8257$Pld94
                                                                                                                g$ls$8259$Pld94)))))))
                                                                                                    g$ls/false$8256$Pld94)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8260$Pld94)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8261$Pld94)
                                                                                                          (if g$ls/false$8261$Pld94
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7142$Pld94
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8239$Pld94)))
                                                                                                              g$ls/false$8261$Pld94)
                                                                                                            (g$syntax-violation$7305$Pld94
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8260$Pld94))))
                                                                                                       (g$syntax-dispatch$7199$Pld94
                                                                                                         g$t$8260$Pld94
                                                                                                         '_))))
                                                                                                   g$t$8255$Pld94))))
                                                                                             (g$syntax-dispatch$7199$Pld94
                                                                                               g$t$8255$Pld94
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8252$Pld94))))
                                                                                   (g$syntax-dispatch$7199$Pld94
                                                                                     g$t$8252$Pld94
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8248$Pld94))))
                                                                         (g$syntax-dispatch$7199$Pld94
                                                                           g$t$8248$Pld94
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8246$Pld94)))))
                                                        g$f$8245$Pld94)
                                                      g$x$8238$Pld94
                                                      (case-lambda
                                                        ((g$ls$8262$Pld94)
                                                         (g$cons*$5351$Pld94
                                                           (g$scheme-stx$7142$Pld94
                                                             'vector)
                                                           g$ls$8262$Pld94))))))
                                                  g$ls/false$8244$Pld94)
                                                (g$syntax-violation$7305$Pld94
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8243$Pld94))))
                                           (g$syntax-dispatch$7199$Pld94
                                             g$t$8243$Pld94
                                             '_))))
                                       g$t$8240$Pld94))))
                                 (g$syntax-dispatch$7199$Pld94
                                   g$t$8240$Pld94
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8239$Pld94)))
                         g$x$8238$Pld94))))
                   (g$vquasi$8188$Pld94
                     (case-lambda
                       ((g$p$8221$Pld94 g$lev$8222$Pld94)
                        ((case-lambda
                           ((g$t$8223$Pld94)
                            ((case-lambda
                               ((g$ls/false$8224$Pld94)
                                (if g$ls/false$8224$Pld94
                                  (apply
                                    (case-lambda
                                      ((g$p$8225$Pld94 g$q$8226$Pld94)
                                       ((case-lambda
                                          ((g$t$8227$Pld94)
                                           ((case-lambda
                                              ((g$ls/false$8228$Pld94)
                                               (if g$ls/false$8228$Pld94
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8229$Pld94)
                                                      (if (= g$lev$8222$Pld94
                                                             '0)
                                                        (g$quasicons*$8184$Pld94
                                                          g$p$8229$Pld94
                                                          (g$vquasi$8188$Pld94
                                                            g$q$8226$Pld94
                                                            g$lev$8222$Pld94))
                                                        (g$quasicons$8185$Pld94
                                                          (g$quasicons$8185$Pld94
                                                            (g$datum$8168$Pld94
                                                              'unquote)
                                                            (g$quasi$8189$Pld94
                                                              g$p$8229$Pld94
                                                              (- g$lev$8222$Pld94
                                                                 '1)))
                                                          (g$vquasi$8188$Pld94
                                                            g$q$8226$Pld94
                                                            g$lev$8222$Pld94)))))
                                                   g$ls/false$8228$Pld94)
                                                 ((case-lambda
                                                    ((g$t$8230$Pld94)
                                                     ((case-lambda
                                                        ((g$ls/false$8231$Pld94)
                                                         (if g$ls/false$8231$Pld94
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8232$Pld94)
                                                                (if (= g$lev$8222$Pld94
                                                                       '0)
                                                                  (g$quasiappend$8186$Pld94
                                                                    g$p$8232$Pld94
                                                                    (g$vquasi$8188$Pld94
                                                                      g$q$8226$Pld94
                                                                      g$lev$8222$Pld94))
                                                                  (g$quasicons$8185$Pld94
                                                                    (g$quasicons$8185$Pld94
                                                                      (g$datum$8168$Pld94
                                                                        'unquote-splicing)
                                                                      (g$quasi$8189$Pld94
                                                                        g$p$8232$Pld94
                                                                        (- g$lev$8222$Pld94
                                                                           '1)))
                                                                    (g$vquasi$8188$Pld94
                                                                      g$q$8226$Pld94
                                                                      g$lev$8222$Pld94)))))
                                                             g$ls/false$8231$Pld94)
                                                           ((case-lambda
                                                              ((g$t$8233$Pld94)
                                                               ((case-lambda
                                                                  ((g$ls/false$8234$Pld94)
                                                                   (if g$ls/false$8234$Pld94
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8235$Pld94)
                                                                          (g$quasicons$8185$Pld94
                                                                            (g$quasi$8189$Pld94
                                                                              g$p$8235$Pld94
                                                                              g$lev$8222$Pld94)
                                                                            (g$vquasi$8188$Pld94
                                                                              g$q$8226$Pld94
                                                                              g$lev$8222$Pld94))))
                                                                       g$ls/false$8234$Pld94)
                                                                     (g$syntax-violation$7305$Pld94
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8233$Pld94))))
                                                                (g$syntax-dispatch$7199$Pld94
                                                                  g$t$8233$Pld94
                                                                  'any))))
                                                            g$t$8230$Pld94))))
                                                      (g$syntax-dispatch$7199$Pld94
                                                        g$t$8230$Pld94
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8227$Pld94))))
                                            (g$syntax-dispatch$7199$Pld94
                                              g$t$8227$Pld94
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8225$Pld94)))
                                    g$ls/false$8224$Pld94)
                                  ((case-lambda
                                     ((g$t$8236$Pld94)
                                      ((case-lambda
                                         ((g$ls/false$8237$Pld94)
                                          (if g$ls/false$8237$Pld94
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7142$Pld94
                                                     'quote)
                                                   '())))
                                              g$ls/false$8237$Pld94)
                                            (g$syntax-violation$7305$Pld94
                                              '#f
                                              '"invalid syntax"
                                              g$t$8236$Pld94))))
                                       (g$syntax-dispatch$7199$Pld94
                                         g$t$8236$Pld94
                                         '()))))
                                   g$t$8223$Pld94))))
                             (g$syntax-dispatch$7199$Pld94
                               g$t$8223$Pld94
                               '(any . any)))))
                         g$p$8221$Pld94))))
                   (g$quasi$8189$Pld94
                     (case-lambda
                       ((g$p$8194$Pld94 g$lev$8195$Pld94)
                        ((case-lambda
                           ((g$t$8196$Pld94)
                            ((case-lambda
                               ((g$ls/false$8197$Pld94)
                                (if g$ls/false$8197$Pld94
                                  (apply
                                    (case-lambda
                                      ((g$p$8198$Pld94)
                                       (if (= g$lev$8195$Pld94 '0)
                                         g$p$8198$Pld94
                                         (g$quasicons$8185$Pld94
                                           (g$datum$8168$Pld94 'unquote)
                                           (g$quasi$8189$Pld94
                                             (list g$p$8198$Pld94)
                                             (- g$lev$8195$Pld94 '1))))))
                                    g$ls/false$8197$Pld94)
                                  ((case-lambda
                                     ((g$t$8199$Pld94)
                                      ((case-lambda
                                         ((g$ls/false$8200$Pld94)
                                          (if g$ls/false$8200$Pld94
                                            (apply
                                              (case-lambda
                                                ((g$p$8201$Pld94 g$q$8202$Pld94)
                                                 (if (= g$lev$8195$Pld94 '0)
                                                   (g$quasicons*$8184$Pld94
                                                     g$p$8201$Pld94
                                                     (g$quasi$8189$Pld94
                                                       g$q$8202$Pld94
                                                       g$lev$8195$Pld94))
                                                   (g$quasicons$8185$Pld94
                                                     (g$quasicons$8185$Pld94
                                                       (g$datum$8168$Pld94
                                                         'unquote)
                                                       (g$quasi$8189$Pld94
                                                         g$p$8201$Pld94
                                                         (- g$lev$8195$Pld94
                                                            '1)))
                                                     (g$quasi$8189$Pld94
                                                       g$q$8202$Pld94
                                                       g$lev$8195$Pld94)))))
                                              g$ls/false$8200$Pld94)
                                            ((case-lambda
                                               ((g$t$8203$Pld94)
                                                ((case-lambda
                                                   ((g$ls/false$8204$Pld94)
                                                    (if g$ls/false$8204$Pld94
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8205$Pld94
                                                             g$q$8206$Pld94)
                                                           (if (= g$lev$8195$Pld94
                                                                  '0)
                                                             (g$quasiappend$8186$Pld94
                                                               g$p$8205$Pld94
                                                               (g$quasi$8189$Pld94
                                                                 g$q$8206$Pld94
                                                                 g$lev$8195$Pld94))
                                                             (g$quasicons$8185$Pld94
                                                               (g$quasicons$8185$Pld94
                                                                 (g$datum$8168$Pld94
                                                                   'unquote-splicing)
                                                                 (g$quasi$8189$Pld94
                                                                   g$p$8205$Pld94
                                                                   (- g$lev$8195$Pld94
                                                                      '1)))
                                                               (g$quasi$8189$Pld94
                                                                 g$q$8206$Pld94
                                                                 g$lev$8195$Pld94)))))
                                                        g$ls/false$8204$Pld94)
                                                      ((case-lambda
                                                         ((g$t$8207$Pld94)
                                                          ((case-lambda
                                                             ((g$ls/false$8208$Pld94)
                                                              (if g$ls/false$8208$Pld94
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8209$Pld94)
                                                                     (g$quasicons$8185$Pld94
                                                                       (g$datum$8168$Pld94
                                                                         'quasiquote)
                                                                       (g$quasi$8189$Pld94
                                                                         (list
                                                                           g$p$8209$Pld94)
                                                                         (+ g$lev$8195$Pld94
                                                                            '1)))))
                                                                  g$ls/false$8208$Pld94)
                                                                ((case-lambda
                                                                   ((g$t$8210$Pld94)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8211$Pld94)
                                                                        (if g$ls/false$8211$Pld94
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8212$Pld94
                                                                                 g$q$8213$Pld94)
                                                                               (g$quasicons$8185$Pld94
                                                                                 (g$quasi$8189$Pld94
                                                                                   g$p$8212$Pld94
                                                                                   g$lev$8195$Pld94)
                                                                                 (g$quasi$8189$Pld94
                                                                                   g$q$8213$Pld94
                                                                                   g$lev$8195$Pld94))))
                                                                            g$ls/false$8211$Pld94)
                                                                          ((case-lambda
                                                                             ((g$t$8214$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8215$Pld94)
                                                                                  (if (if g$ls/false$8215$Pld94
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8216$Pld94)
                                                                                               (not (g$stx?$6893$Pld94
                                                                                                      g$x$8216$Pld94))))
                                                                                            g$ls/false$8215$Pld94))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8217$Pld94)
                                                                                         (g$quasivector$8187$Pld94
                                                                                           (g$vquasi$8188$Pld94
                                                                                             g$x$8217$Pld94
                                                                                             g$lev$8195$Pld94))))
                                                                                      g$ls/false$8215$Pld94)
                                                                                    ((case-lambda
                                                                                       ((g$t$8218$Pld94)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8219$Pld94)
                                                                                            (if g$ls/false$8219$Pld94
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8220$Pld94)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7142$Pld94
                                                                                                       'quote)
                                                                                                     g$p$8220$Pld94)))
                                                                                                g$ls/false$8219$Pld94)
                                                                                              (g$syntax-violation$7305$Pld94
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8218$Pld94))))
                                                                                         (g$syntax-dispatch$7199$Pld94
                                                                                           g$t$8218$Pld94
                                                                                           'any))))
                                                                                     g$t$8214$Pld94))))
                                                                               (g$syntax-dispatch$7199$Pld94
                                                                                 g$t$8214$Pld94
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8210$Pld94))))
                                                                     (g$syntax-dispatch$7199$Pld94
                                                                       g$t$8210$Pld94
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8207$Pld94))))
                                                           (g$syntax-dispatch$7199$Pld94
                                                             g$t$8207$Pld94
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8203$Pld94))))
                                                 (g$syntax-dispatch$7199$Pld94
                                                   g$t$8203$Pld94
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8199$Pld94))))
                                       (g$syntax-dispatch$7199$Pld94
                                         g$t$8199$Pld94
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8196$Pld94))))
                             (g$syntax-dispatch$7199$Pld94
                               g$t$8196$Pld94
                               '(#(scheme-id unquote) any)))))
                         g$p$8194$Pld94)))))
           (case-lambda
             ((g$x$8190$Pld94)
              ((case-lambda
                 ((g$t$8191$Pld94)
                  ((case-lambda
                     ((g$ls/false$8192$Pld94)
                      (if g$ls/false$8192$Pld94
                        (apply
                          (case-lambda
                            ((g$e$8193$Pld94)
                             (g$quasi$8189$Pld94 g$e$8193$Pld94 '0)))
                          g$ls/false$8192$Pld94)
                        (g$syntax-violation$7305$Pld94
                          '#f
                          '"invalid syntax"
                          g$t$8191$Pld94))))
                   (g$syntax-dispatch$7199$Pld94 g$t$8191$Pld94 '(_ any)))))
               g$x$8190$Pld94))))))))
   (g$quasisyntax-macro$7191$Pld94
     g$quasisyntax-macro$10625$Pld94
     ((case-lambda
        (()
         (letrec* ((g$quasi$8300$Pld94
                     (case-lambda
                       ((g$p$8314$Pld94 g$lev$8315$Pld94)
                        ((case-lambda
                           ((g$t$8316$Pld94)
                            ((case-lambda
                               ((g$ls/false$8317$Pld94)
                                (if g$ls/false$8317$Pld94
                                  (apply
                                    (case-lambda
                                      ((g$p$8318$Pld94)
                                       (if (= g$lev$8315$Pld94 '0)
                                         ((case-lambda
                                            ((g$g$8319$Pld94)
                                             (values
                                               (list g$g$8319$Pld94)
                                               (list g$p$8318$Pld94)
                                               g$g$8319$Pld94)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8300$Pld94
                                                g$p$8318$Pld94
                                                (- g$lev$8315$Pld94 '1))))
                                           (case-lambda
                                             ((g$lhs*$8323$Pld94
                                                g$rhs*$8324$Pld94
                                                g$p$8325$Pld94)
                                              ((case-lambda
                                                 ((g$p$8326$Pld94
                                                    g$rhs*$8327$Pld94
                                                    g$lhs*$8328$Pld94)
                                                  (values
                                                    g$lhs*$8328$Pld94
                                                    g$rhs*$8327$Pld94
                                                    (list
                                                      'unsyntax
                                                      g$p$8326$Pld94))))
                                               g$p$8325$Pld94
                                               g$rhs*$8324$Pld94
                                               g$lhs*$8323$Pld94)))))))
                                    g$ls/false$8317$Pld94)
                                  ((case-lambda
                                     ((g$t$8329$Pld94)
                                      ((case-lambda
                                         ((g$ls/false$8330$Pld94)
                                          (if (if g$ls/false$8330$Pld94
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8315$Pld94 '0)))
                                                    g$ls/false$8330$Pld94))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7305$Pld94
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8314$Pld94)))
                                              g$ls/false$8330$Pld94)
                                            ((case-lambda
                                               ((g$t$8331$Pld94)
                                                ((case-lambda
                                                   ((g$ls/false$8332$Pld94)
                                                    (if g$ls/false$8332$Pld94
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8333$Pld94
                                                             g$q$8334$Pld94)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8300$Pld94
                                                                  g$q$8334$Pld94
                                                                  g$lev$8315$Pld94)))
                                                             (case-lambda
                                                               ((g$lhs*$8338$Pld94
                                                                  g$rhs*$8339$Pld94
                                                                  g$q$8340$Pld94)
                                                                ((case-lambda
                                                                   ((g$q$8341$Pld94
                                                                      g$rhs*$8342$Pld94
                                                                      g$lhs*$8343$Pld94)
                                                                    (if (= g$lev$8315$Pld94
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g$8344$Pld94)
                                                                          (values
                                                                            (cons
                                                                              (cons
                                                                                g$g$8344$Pld94
                                                                                '(...))
                                                                              g$lhs*$8343$Pld94)
                                                                            (cons
                                                                              g$p$8333$Pld94
                                                                              g$rhs*$8342$Pld94)
                                                                            (cons
                                                                              g$g$8344$Pld94
                                                                              (cons
                                                                                '...
                                                                                g$q$8341$Pld94)))))
                                                                       (gensym))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8300$Pld94
                                                                             g$p$8333$Pld94
                                                                             (- g$lev$8315$Pld94
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8348$Pld94
                                                                             g$rhs2*$8349$Pld94
                                                                             g$p$8350$Pld94)
                                                                           ((case-lambda
                                                                              ((g$p$8351$Pld94
                                                                                 g$rhs2*$8352$Pld94
                                                                                 g$lhs2*$8353$Pld94)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8353$Pld94
                                                                                   g$lhs*$8343$Pld94)
                                                                                 (append
                                                                                   g$rhs2*$8352$Pld94
                                                                                   g$rhs*$8342$Pld94)
                                                                                 (cons
                                                                                   (list
                                                                                     'unsyntax-splicing
                                                                                     g$p$8351$Pld94)
                                                                                   g$q$8341$Pld94))))
                                                                            g$p$8350$Pld94
                                                                            g$rhs2*$8349$Pld94
                                                                            g$lhs2*$8348$Pld94)))))))
                                                                 g$q$8340$Pld94
                                                                 g$rhs*$8339$Pld94
                                                                 g$lhs*$8338$Pld94))))))
                                                        g$ls/false$8332$Pld94)
                                                      ((case-lambda
                                                         ((g$t$8354$Pld94)
                                                          ((case-lambda
                                                             ((g$ls/false$8355$Pld94)
                                                              (if (if g$ls/false$8355$Pld94
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (= g$lev$8315$Pld94
                                                                              '0)))
                                                                        g$ls/false$8355$Pld94))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    (()
                                                                     (g$syntax-violation$7305$Pld94
                                                                       '#f
                                                                       '"incorrect use of unsyntax-splicing"
                                                                       g$p$8314$Pld94)))
                                                                  g$ls/false$8355$Pld94)
                                                                ((case-lambda
                                                                   ((g$t$8356$Pld94)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8357$Pld94)
                                                                        (if g$ls/false$8357$Pld94
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8358$Pld94)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$quasi$8300$Pld94
                                                                                      g$p$8358$Pld94
                                                                                      (+ g$lev$8315$Pld94
                                                                                         '1))))
                                                                                 (case-lambda
                                                                                   ((g$lhs*$8362$Pld94
                                                                                      g$rhs*$8363$Pld94
                                                                                      g$p$8364$Pld94)
                                                                                    ((case-lambda
                                                                                       ((g$p$8365$Pld94
                                                                                          g$rhs*$8366$Pld94
                                                                                          g$lhs*$8367$Pld94)
                                                                                        (values
                                                                                          g$lhs*$8367$Pld94
                                                                                          g$rhs*$8366$Pld94
                                                                                          (list
                                                                                            'quasisyntax
                                                                                            g$p$8365$Pld94))))
                                                                                     g$p$8364$Pld94
                                                                                     g$rhs*$8363$Pld94
                                                                                     g$lhs*$8362$Pld94))))))
                                                                            g$ls/false$8357$Pld94)
                                                                          ((case-lambda
                                                                             ((g$t$8368$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8369$Pld94)
                                                                                  (if g$ls/false$8369$Pld94
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8370$Pld94
                                                                                           g$q$8371$Pld94)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8300$Pld94
                                                                                                g$p$8370$Pld94
                                                                                                g$lev$8315$Pld94)))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8378$Pld94
                                                                                                g$rhs*$8379$Pld94
                                                                                                g$p$8380$Pld94)
                                                                                              (call-with-values
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$quasi$8300$Pld94
                                                                                                     g$q$8371$Pld94
                                                                                                     g$lev$8315$Pld94)))
                                                                                                (case-lambda
                                                                                                  ((g$lhs2*$8381$Pld94
                                                                                                     g$rhs2*$8382$Pld94
                                                                                                     g$q$8383$Pld94)
                                                                                                   ((case-lambda
                                                                                                      ((g$q$8384$Pld94
                                                                                                         g$rhs2*$8385$Pld94
                                                                                                         g$lhs2*$8386$Pld94
                                                                                                         g$p$8387$Pld94
                                                                                                         g$rhs*$8388$Pld94
                                                                                                         g$lhs*$8389$Pld94)
                                                                                                       (values
                                                                                                         (append
                                                                                                           g$lhs2*$8386$Pld94
                                                                                                           g$lhs*$8389$Pld94)
                                                                                                         (append
                                                                                                           g$rhs2*$8385$Pld94
                                                                                                           g$rhs*$8388$Pld94)
                                                                                                         (cons
                                                                                                           g$p$8387$Pld94
                                                                                                           g$q$8384$Pld94))))
                                                                                                    g$q$8383$Pld94
                                                                                                    g$rhs2*$8382$Pld94
                                                                                                    g$lhs2*$8381$Pld94
                                                                                                    g$p$8380$Pld94
                                                                                                    g$rhs*$8379$Pld94
                                                                                                    g$lhs*$8378$Pld94)))))))))
                                                                                      g$ls/false$8369$Pld94)
                                                                                    ((case-lambda
                                                                                       ((g$t$8390$Pld94)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8391$Pld94)
                                                                                            (if (if g$ls/false$8391$Pld94
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$x$8392$Pld94)
                                                                                                         (not (g$stx?$6893$Pld94
                                                                                                                g$p$8314$Pld94))))
                                                                                                      g$ls/false$8391$Pld94))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$x$8393$Pld94)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        ((letrec ((g$f$8397$Pld94
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$8398$Pld94)
                                                                                                                       (if (null?
                                                                                                                             g$x$8398$Pld94)
                                                                                                                         (values
                                                                                                                           '()
                                                                                                                           '()
                                                                                                                           '())
                                                                                                                         (call-with-values
                                                                                                                           (case-lambda
                                                                                                                             (()
                                                                                                                              (g$quasi$8300$Pld94
                                                                                                                                (car g$x$8398$Pld94)
                                                                                                                                g$lev$8315$Pld94)))
                                                                                                                           (case-lambda
                                                                                                                             ((g$lhs*$8402$Pld94
                                                                                                                                g$rhs*$8403$Pld94
                                                                                                                                g$a$8404$Pld94)
                                                                                                                              ((case-lambda
                                                                                                                                 ((g$a$8405$Pld94
                                                                                                                                    g$rhs*$8406$Pld94
                                                                                                                                    g$lhs*$8407$Pld94)
                                                                                                                                  (call-with-values
                                                                                                                                    (case-lambda
                                                                                                                                      (()
                                                                                                                                       (g$f$8397$Pld94
                                                                                                                                         (cdr g$x$8398$Pld94))))
                                                                                                                                    (case-lambda
                                                                                                                                      ((g$lhs2*$8411$Pld94
                                                                                                                                         g$rhs2*$8412$Pld94
                                                                                                                                         g$d$8413$Pld94)
                                                                                                                                       ((case-lambda
                                                                                                                                          ((g$d$8414$Pld94
                                                                                                                                             g$rhs2*$8415$Pld94
                                                                                                                                             g$lhs2*$8416$Pld94)
                                                                                                                                           (values
                                                                                                                                             (append
                                                                                                                                               g$lhs*$8407$Pld94
                                                                                                                                               g$lhs2*$8416$Pld94)
                                                                                                                                             (append
                                                                                                                                               g$rhs*$8406$Pld94
                                                                                                                                               g$rhs2*$8415$Pld94)
                                                                                                                                             (cons
                                                                                                                                               g$a$8405$Pld94
                                                                                                                                               g$d$8414$Pld94))))
                                                                                                                                        g$d$8413$Pld94
                                                                                                                                        g$rhs2*$8412$Pld94
                                                                                                                                        g$lhs2*$8411$Pld94))))))
                                                                                                                               g$a$8404$Pld94
                                                                                                                               g$rhs*$8403$Pld94
                                                                                                                               g$lhs*$8402$Pld94)))))))))
                                                                                                           g$f$8397$Pld94)
                                                                                                         g$x$8393$Pld94)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8417$Pld94
                                                                                                          g$rhs*$8418$Pld94
                                                                                                          g$x*$8419$Pld94)
                                                                                                        ((case-lambda
                                                                                                           ((g$x*$8420$Pld94
                                                                                                              g$rhs*$8421$Pld94
                                                                                                              g$lhs*$8422$Pld94)
                                                                                                            (values
                                                                                                              g$lhs*$8422$Pld94
                                                                                                              g$rhs*$8421$Pld94
                                                                                                              (list->vector
                                                                                                                g$x*$8420$Pld94))))
                                                                                                         g$x*$8419$Pld94
                                                                                                         g$rhs*$8418$Pld94
                                                                                                         g$lhs*$8417$Pld94))))))
                                                                                                g$ls/false$8391$Pld94)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8423$Pld94)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8424$Pld94)
                                                                                                      (if g$ls/false$8424$Pld94
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (values
                                                                                                               '()
                                                                                                               '()
                                                                                                               g$p$8314$Pld94)))
                                                                                                          g$ls/false$8424$Pld94)
                                                                                                        (g$syntax-violation$7305$Pld94
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$8423$Pld94))))
                                                                                                   (g$syntax-dispatch$7199$Pld94
                                                                                                     g$t$8423$Pld94
                                                                                                     '_))))
                                                                                               g$t$8390$Pld94))))
                                                                                         (g$syntax-dispatch$7199$Pld94
                                                                                           g$t$8390$Pld94
                                                                                           '#(vector
                                                                                              each-any)))))
                                                                                     g$t$8368$Pld94))))
                                                                               (g$syntax-dispatch$7199$Pld94
                                                                                 g$t$8368$Pld94
                                                                                 '(any .
                                                                                       any)))))
                                                                           g$t$8356$Pld94))))
                                                                     (g$syntax-dispatch$7199$Pld94
                                                                       g$t$8356$Pld94
                                                                       '(#(scheme-id
                                                                           quasisyntax)
                                                                         any)))))
                                                                 g$t$8354$Pld94))))
                                                           (g$syntax-dispatch$7199$Pld94
                                                             g$t$8354$Pld94
                                                             '#(scheme-id
                                                                unsyntax-splicing)))))
                                                       g$t$8331$Pld94))))
                                                 (g$syntax-dispatch$7199$Pld94
                                                   g$t$8331$Pld94
                                                   '((#(scheme-id
                                                        unsyntax-splicing)
                                                      any)
                                                     .
                                                     any)))))
                                             g$t$8329$Pld94))))
                                       (g$syntax-dispatch$7199$Pld94
                                         g$t$8329$Pld94
                                         '#(scheme-id unsyntax)))))
                                   g$t$8316$Pld94))))
                             (g$syntax-dispatch$7199$Pld94
                               g$t$8316$Pld94
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8314$Pld94)))))
           (case-lambda
             ((g$x$8301$Pld94)
              ((case-lambda
                 ((g$t$8302$Pld94)
                  ((case-lambda
                     ((g$ls/false$8303$Pld94)
                      (if g$ls/false$8303$Pld94
                        (apply
                          (case-lambda
                            ((g$e$8304$Pld94)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8300$Pld94 g$e$8304$Pld94 '0)))
                               (case-lambda
                                 ((g$lhs*$8308$Pld94
                                    g$rhs*$8309$Pld94
                                    g$v$8310$Pld94)
                                  ((case-lambda
                                     ((g$v$8311$Pld94
                                        g$rhs*$8312$Pld94
                                        g$lhs*$8313$Pld94)
                                      (g$bless$7162$Pld94
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8312$Pld94)
                                          '()
                                          (list
                                            g$lhs*$8313$Pld94
                                            (list 'syntax g$v$8311$Pld94))))))
                                   g$v$8310$Pld94
                                   g$rhs*$8309$Pld94
                                   g$lhs*$8308$Pld94))))))
                          g$ls/false$8303$Pld94)
                        (g$syntax-violation$7305$Pld94
                          '#f
                          '"invalid syntax"
                          g$t$8302$Pld94))))
                   (g$syntax-dispatch$7199$Pld94 g$t$8302$Pld94 '(_ any)))))
               g$x$8301$Pld94))))))))
   (g$define-struct-macro$7192$Pld94
     g$define-struct-macro$10626$Pld94
     (case-lambda
       ((g$stx$8425$Pld94)
        (g$syntax-violation$7305$Pld94
          '#f
          '"define-struct not supported"
          g$stx$8425$Pld94))))
   (g$define-record-type-macro$7193$Pld94
     g$define-record-type-macro$10627$Pld94
     (case-lambda
       ((g$x$8426$Pld94)
        (letrec* ((g$id$8427$Pld94
                    (case-lambda
                      ((g$ctxt$8663$Pld94 . g$str*$8664$Pld94)
                       (g$datum->syntax$7307$Pld94
                         g$ctxt$8663$Pld94
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$8665$Pld94)
                                     (if (symbol? g$x$8665$Pld94)
                                       (symbol->string g$x$8665$Pld94)
                                       (if (string? g$x$8665$Pld94)
                                         g$x$8665$Pld94
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$8664$Pld94)))))))
                  (g$get-record-name$8428$Pld94
                    (case-lambda
                      ((g$spec$8654$Pld94)
                       ((case-lambda
                          ((g$t$8655$Pld94)
                           ((case-lambda
                              ((g$ls/false$8656$Pld94)
                               (if g$ls/false$8656$Pld94
                                 (apply
                                   (case-lambda
                                     ((g$foo$8657$Pld94
                                        g$make-foo$8658$Pld94
                                        g$foo?$8659$Pld94)
                                      g$foo$8657$Pld94))
                                   g$ls/false$8656$Pld94)
                                 ((case-lambda
                                    ((g$t$8660$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8661$Pld94)
                                         (if g$ls/false$8661$Pld94
                                           (apply
                                             (case-lambda
                                               ((g$foo$8662$Pld94)
                                                g$foo$8662$Pld94))
                                             g$ls/false$8661$Pld94)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid syntax"
                                             g$t$8660$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8660$Pld94
                                        'any))))
                                  g$t$8655$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$8655$Pld94
                              '(any any any)))))
                        g$spec$8654$Pld94))))
                  (g$get-record-constructor-name$8429$Pld94
                    (case-lambda
                      ((g$spec$8644$Pld94)
                       ((case-lambda
                          ((g$t$8645$Pld94)
                           ((case-lambda
                              ((g$ls/false$8646$Pld94)
                               (if g$ls/false$8646$Pld94
                                 (apply
                                   (case-lambda
                                     ((g$foo$8647$Pld94
                                        g$make-foo$8648$Pld94
                                        g$foo?$8649$Pld94)
                                      g$make-foo$8648$Pld94))
                                   g$ls/false$8646$Pld94)
                                 ((case-lambda
                                    ((g$t$8650$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8651$Pld94)
                                         (if (if g$ls/false$8651$Pld94
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8652$Pld94)
                                                      (g$id?$6921$Pld94
                                                        g$foo$8652$Pld94)))
                                                   g$ls/false$8651$Pld94))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8653$Pld94)
                                                (g$id$8427$Pld94
                                                  g$foo$8653$Pld94
                                                  '"make-"
                                                  (g$stx->datum$6932$Pld94
                                                    g$foo$8653$Pld94))))
                                             g$ls/false$8651$Pld94)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid syntax"
                                             g$t$8650$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8650$Pld94
                                        'any))))
                                  g$t$8645$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$8645$Pld94
                              '(any any any)))))
                        g$spec$8644$Pld94))))
                  (g$get-record-predicate-name$8430$Pld94
                    (case-lambda
                      ((g$spec$8634$Pld94)
                       ((case-lambda
                          ((g$t$8635$Pld94)
                           ((case-lambda
                              ((g$ls/false$8636$Pld94)
                               (if g$ls/false$8636$Pld94
                                 (apply
                                   (case-lambda
                                     ((g$foo$8637$Pld94
                                        g$make-foo$8638$Pld94
                                        g$foo?$8639$Pld94)
                                      g$foo?$8639$Pld94))
                                   g$ls/false$8636$Pld94)
                                 ((case-lambda
                                    ((g$t$8640$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8641$Pld94)
                                         (if (if g$ls/false$8641$Pld94
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8642$Pld94)
                                                      (g$id?$6921$Pld94
                                                        g$foo$8642$Pld94)))
                                                   g$ls/false$8641$Pld94))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8643$Pld94)
                                                (g$id$8427$Pld94
                                                  g$foo$8643$Pld94
                                                  (g$stx->datum$6932$Pld94
                                                    g$foo$8643$Pld94)
                                                  '"?")))
                                             g$ls/false$8641$Pld94)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid syntax"
                                             g$t$8640$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8640$Pld94
                                        'any))))
                                  g$t$8635$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$8635$Pld94
                              '(any any any)))))
                        g$spec$8634$Pld94))))
                  (g$get-clause$8431$Pld94
                    (case-lambda
                      ((g$id$8625$Pld94 g$ls$8626$Pld94)
                       ((case-lambda
                          ((g$t$8627$Pld94)
                           ((case-lambda
                              ((g$ls/false$8628$Pld94)
                               (if g$ls/false$8628$Pld94
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8628$Pld94)
                                 ((case-lambda
                                    ((g$t$8629$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8630$Pld94)
                                         (if g$ls/false$8630$Pld94
                                           (apply
                                             (case-lambda
                                               ((g$x$8631$Pld94
                                                  g$rest$8632$Pld94
                                                  g$ls$8633$Pld94)
                                                (if (g$free-id=?$6925$Pld94
                                                      (g$bless$7162$Pld94
                                                        g$id$8625$Pld94)
                                                      g$x$8631$Pld94)
                                                  (cons
                                                    g$x$8631$Pld94
                                                    g$rest$8632$Pld94)
                                                  (g$get-clause$8431$Pld94
                                                    g$id$8625$Pld94
                                                    g$ls$8633$Pld94))))
                                             g$ls/false$8630$Pld94)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid syntax"
                                             g$t$8629$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8629$Pld94
                                        '((any . any) . any)))))
                                  g$t$8627$Pld94))))
                            (g$syntax-dispatch$7199$Pld94 g$t$8627$Pld94 '()))))
                        g$ls$8626$Pld94))))
                  (g$foo-rtd-code$8432$Pld94
                    (case-lambda
                      ((g$name$8579$Pld94 g$clause*$8580$Pld94)
                       (letrec* ((g$convert-field-spec*$8581$Pld94
                                   (case-lambda
                                     ((g$ls$8612$Pld94)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8613$Pld94)
                                                ((case-lambda
                                                   ((g$t$8614$Pld94)
                                                    ((case-lambda
                                                       ((g$ls/false$8615$Pld94)
                                                        (if g$ls/false$8615$Pld94
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8616$Pld94
                                                                 g$rest$8617$Pld94)
                                                               (list
                                                                 'mutable
                                                                 g$name$8616$Pld94)))
                                                            g$ls/false$8615$Pld94)
                                                          ((case-lambda
                                                             ((g$t$8618$Pld94)
                                                              ((case-lambda
                                                                 ((g$ls/false$8619$Pld94)
                                                                  (if g$ls/false$8619$Pld94
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8620$Pld94
                                                                           g$rest$8621$Pld94)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8620$Pld94)))
                                                                      g$ls/false$8619$Pld94)
                                                                    ((case-lambda
                                                                       ((g$t$8622$Pld94)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8623$Pld94)
                                                                            (if g$ls/false$8623$Pld94
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8624$Pld94)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8624$Pld94)))
                                                                                g$ls/false$8623$Pld94)
                                                                              (g$syntax-violation$7305$Pld94
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8622$Pld94))))
                                                                         (g$syntax-dispatch$7199$Pld94
                                                                           g$t$8622$Pld94
                                                                           'any))))
                                                                     g$t$8618$Pld94))))
                                                               (g$syntax-dispatch$7199$Pld94
                                                                 g$t$8618$Pld94
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8614$Pld94))))
                                                     (g$syntax-dispatch$7199$Pld94
                                                       g$t$8614$Pld94
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8613$Pld94)))
                                             g$ls$8612$Pld94))))))
                         ((case-lambda
                            ((g$parent-rtd-code$8582$Pld94
                               g$uid-code$8583$Pld94
                               g$sealed?$8584$Pld94
                               g$opaque?$8585$Pld94
                               g$fields$8586$Pld94)
                             (g$bless$7162$Pld94
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8579$Pld94)
                                 g$parent-rtd-code$8582$Pld94
                                 g$uid-code$8583$Pld94
                                 g$sealed?$8584$Pld94
                                 g$opaque?$8585$Pld94
                                 g$fields$8586$Pld94))))
                          ((case-lambda
                             ((g$t$8587$Pld94)
                              ((case-lambda
                                 ((g$ls/false$8588$Pld94)
                                  (if g$ls/false$8588$Pld94
                                    (apply
                                      (case-lambda
                                        ((g$name$8589$Pld94)
                                         (list
                                           'record-type-descriptor
                                           g$name$8589$Pld94)))
                                      g$ls/false$8588$Pld94)
                                    ((case-lambda
                                       ((g$t$8590$Pld94)
                                        ((case-lambda
                                           ((g$ls/false$8591$Pld94)
                                            (if g$ls/false$8591$Pld94
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8591$Pld94)
                                              (g$syntax-violation$7305$Pld94
                                                '#f
                                                '"invalid syntax"
                                                g$t$8590$Pld94))))
                                         (g$syntax-dispatch$7199$Pld94
                                           g$t$8590$Pld94
                                           '_))))
                                     g$t$8587$Pld94))))
                               (g$syntax-dispatch$7199$Pld94
                                 g$t$8587$Pld94
                                 '(_ any)))))
                           (g$get-clause$8431$Pld94
                             'parent
                             g$clause*$8580$Pld94))
                          ((case-lambda
                             ((g$t$8592$Pld94)
                              ((case-lambda
                                 ((g$ls/false$8593$Pld94)
                                  (if g$ls/false$8593$Pld94
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8593$Pld94)
                                    ((case-lambda
                                       ((g$t$8594$Pld94)
                                        ((case-lambda
                                           ((g$ls/false$8595$Pld94)
                                            (if g$ls/false$8595$Pld94
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8596$Pld94)
                                                   (list
                                                     'quote
                                                     g$uid$8596$Pld94)))
                                                g$ls/false$8595$Pld94)
                                              ((case-lambda
                                                 ((g$t$8597$Pld94)
                                                  ((case-lambda
                                                     ((g$ls/false$8598$Pld94)
                                                      (if g$ls/false$8598$Pld94
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8598$Pld94)
                                                        (g$syntax-violation$7305$Pld94
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8597$Pld94))))
                                                   (g$syntax-dispatch$7199$Pld94
                                                     g$t$8597$Pld94
                                                     '_))))
                                               g$t$8594$Pld94))))
                                         (g$syntax-dispatch$7199$Pld94
                                           g$t$8594$Pld94
                                           '(_ any)))))
                                     g$t$8592$Pld94))))
                               (g$syntax-dispatch$7199$Pld94
                                 g$t$8592$Pld94
                                 '(_)))))
                           (g$get-clause$8431$Pld94
                             'nongenerative
                             g$clause*$8580$Pld94))
                          ((case-lambda
                             ((g$t$8599$Pld94)
                              ((case-lambda
                                 ((g$ls/false$8600$Pld94)
                                  (if g$ls/false$8600$Pld94
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8600$Pld94)
                                    ((case-lambda
                                       ((g$t$8601$Pld94)
                                        ((case-lambda
                                           ((g$ls/false$8602$Pld94)
                                            (if g$ls/false$8602$Pld94
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8602$Pld94)
                                              (g$syntax-violation$7305$Pld94
                                                '#f
                                                '"invalid syntax"
                                                g$t$8601$Pld94))))
                                         (g$syntax-dispatch$7199$Pld94
                                           g$t$8601$Pld94
                                           '_))))
                                     g$t$8599$Pld94))))
                               (g$syntax-dispatch$7199$Pld94
                                 g$t$8599$Pld94
                                 '(_ #(atom #t))))))
                           (g$get-clause$8431$Pld94
                             'sealed
                             g$clause*$8580$Pld94))
                          ((case-lambda
                             ((g$t$8603$Pld94)
                              ((case-lambda
                                 ((g$ls/false$8604$Pld94)
                                  (if g$ls/false$8604$Pld94
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8604$Pld94)
                                    ((case-lambda
                                       ((g$t$8605$Pld94)
                                        ((case-lambda
                                           ((g$ls/false$8606$Pld94)
                                            (if g$ls/false$8606$Pld94
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8606$Pld94)
                                              (g$syntax-violation$7305$Pld94
                                                '#f
                                                '"invalid syntax"
                                                g$t$8605$Pld94))))
                                         (g$syntax-dispatch$7199$Pld94
                                           g$t$8605$Pld94
                                           '_))))
                                     g$t$8603$Pld94))))
                               (g$syntax-dispatch$7199$Pld94
                                 g$t$8603$Pld94
                                 '(_ #(atom #t))))))
                           (g$get-clause$8431$Pld94
                             'opaque
                             g$clause*$8580$Pld94))
                          ((case-lambda
                             ((g$t$8607$Pld94)
                              ((case-lambda
                                 ((g$ls/false$8608$Pld94)
                                  (if g$ls/false$8608$Pld94
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8609$Pld94)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8581$Pld94
                                             g$field-spec*$8609$Pld94))))
                                      g$ls/false$8608$Pld94)
                                    ((case-lambda
                                       ((g$t$8610$Pld94)
                                        ((case-lambda
                                           ((g$ls/false$8611$Pld94)
                                            (if g$ls/false$8611$Pld94
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8611$Pld94)
                                              (g$syntax-violation$7305$Pld94
                                                '#f
                                                '"invalid syntax"
                                                g$t$8610$Pld94))))
                                         (g$syntax-dispatch$7199$Pld94
                                           g$t$8610$Pld94
                                           '_))))
                                     g$t$8607$Pld94))))
                               (g$syntax-dispatch$7199$Pld94
                                 g$t$8607$Pld94
                                 '(_ . each-any)))))
                           (g$get-clause$8431$Pld94
                             'fields
                             g$clause*$8580$Pld94)))))))
                  (g$foo-rcd-code$8433$Pld94
                    (case-lambda
                      ((g$clause*$8570$Pld94
                         g$foo-rtd$8571$Pld94
                         g$protocol$8572$Pld94)
                       ((case-lambda
                          ((g$parent-rcd-code$8573$Pld94)
                           (list
                             'make-record-constructor-descriptor
                             g$foo-rtd$8571$Pld94
                             g$parent-rcd-code$8573$Pld94
                             g$protocol$8572$Pld94)))
                        ((case-lambda
                           ((g$t$8574$Pld94)
                            ((case-lambda
                               ((g$ls/false$8575$Pld94)
                                (if g$ls/false$8575$Pld94
                                  (apply
                                    (case-lambda
                                      ((g$name$8576$Pld94)
                                       (list
                                         'record-constructor-descriptor
                                         g$name$8576$Pld94)))
                                    g$ls/false$8575$Pld94)
                                  ((case-lambda
                                     ((g$t$8577$Pld94)
                                      ((case-lambda
                                         ((g$ls/false$8578$Pld94)
                                          (if g$ls/false$8578$Pld94
                                            (apply
                                              (case-lambda (() '#f))
                                              g$ls/false$8578$Pld94)
                                            (g$syntax-violation$7305$Pld94
                                              '#f
                                              '"invalid syntax"
                                              g$t$8577$Pld94))))
                                       (g$syntax-dispatch$7199$Pld94
                                         g$t$8577$Pld94
                                         '_))))
                                   g$t$8574$Pld94))))
                             (g$syntax-dispatch$7199$Pld94
                               g$t$8574$Pld94
                               '(_ any)))))
                         (g$get-clause$8431$Pld94
                           'parent
                           g$clause*$8570$Pld94))))))
                  (g$get-protocol-code$8434$Pld94
                    (case-lambda
                      ((g$clause*$8564$Pld94)
                       ((case-lambda
                          ((g$t$8565$Pld94)
                           ((case-lambda
                              ((g$ls/false$8566$Pld94)
                               (if g$ls/false$8566$Pld94
                                 (apply
                                   (case-lambda
                                     ((g$expr$8567$Pld94) g$expr$8567$Pld94))
                                   g$ls/false$8566$Pld94)
                                 ((case-lambda
                                    ((g$t$8568$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8569$Pld94)
                                         (if g$ls/false$8569$Pld94
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8569$Pld94)
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid syntax"
                                             g$t$8568$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8568$Pld94
                                        '_))))
                                  g$t$8565$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$8565$Pld94
                              '(_ any)))))
                        (g$get-clause$8431$Pld94
                          'protocol
                          g$clause*$8564$Pld94)))))
                  (g$get-fields$8435$Pld94
                    (case-lambda
                      ((g$clause*$8555$Pld94)
                       ((case-lambda
                          ((g$t$8556$Pld94)
                           ((case-lambda
                              ((g$ls/false$8557$Pld94)
                               (if g$ls/false$8557$Pld94
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8557$Pld94)
                                 ((case-lambda
                                    ((g$t$8558$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8559$Pld94)
                                         (if g$ls/false$8559$Pld94
                                           (apply
                                             (case-lambda
                                               ((g$f*$8560$Pld94)
                                                g$f*$8560$Pld94))
                                             g$ls/false$8559$Pld94)
                                           ((case-lambda
                                              ((g$t$8561$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$8562$Pld94)
                                                   (if g$ls/false$8562$Pld94
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8563$Pld94)
                                                          (g$get-fields$8435$Pld94
                                                            g$rest$8563$Pld94)))
                                                       g$ls/false$8562$Pld94)
                                                     (g$syntax-violation$7305$Pld94
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8561$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$8561$Pld94
                                                  '(_ . any)))))
                                            g$t$8558$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8558$Pld94
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8556$Pld94))))
                            (g$syntax-dispatch$7199$Pld94 g$t$8556$Pld94 '()))))
                        g$clause*$8555$Pld94))))
                  (g$get-mutator-indices$8436$Pld94
                    (case-lambda
                      ((g$fields$8543$Pld94)
                       ((letrec ((g$f$8544$Pld94
                                   (case-lambda
                                     ((g$fields$8545$Pld94 g$i$8546$Pld94)
                                      ((case-lambda
                                         ((g$t$8547$Pld94)
                                          ((case-lambda
                                             ((g$ls/false$8548$Pld94)
                                              (if g$ls/false$8548$Pld94
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8548$Pld94)
                                                ((case-lambda
                                                   ((g$t$8549$Pld94)
                                                    ((case-lambda
                                                       ((g$ls/false$8550$Pld94)
                                                        (if g$ls/false$8550$Pld94
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8551$Pld94)
                                                               (cons
                                                                 g$i$8546$Pld94
                                                                 (g$f$8544$Pld94
                                                                   g$rest$8551$Pld94
                                                                   (+ g$i$8546$Pld94
                                                                      '1)))))
                                                            g$ls/false$8550$Pld94)
                                                          ((case-lambda
                                                             ((g$t$8552$Pld94)
                                                              ((case-lambda
                                                                 ((g$ls/false$8553$Pld94)
                                                                  (if g$ls/false$8553$Pld94
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8554$Pld94)
                                                                         (g$f$8544$Pld94
                                                                           g$rest$8554$Pld94
                                                                           (+ g$i$8546$Pld94
                                                                              '1))))
                                                                      g$ls/false$8553$Pld94)
                                                                    (g$syntax-violation$7305$Pld94
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8552$Pld94))))
                                                               (g$syntax-dispatch$7199$Pld94
                                                                 g$t$8552$Pld94
                                                                 '(_ . any)))))
                                                           g$t$8549$Pld94))))
                                                     (g$syntax-dispatch$7199$Pld94
                                                       g$t$8549$Pld94
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8547$Pld94))))
                                           (g$syntax-dispatch$7199$Pld94
                                             g$t$8547$Pld94
                                             '()))))
                                       g$fields$8545$Pld94)))))
                          g$f$8544$Pld94)
                        g$fields$8543$Pld94
                        '0))))
                  (g$get-mutators$8437$Pld94
                    (case-lambda
                      ((g$foo$8522$Pld94 g$fields$8523$Pld94)
                       (letrec* ((g$gen-name$8524$Pld94
                                   (case-lambda
                                     ((g$x$8542$Pld94)
                                      (g$datum->syntax$7307$Pld94
                                        g$foo$8522$Pld94
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7308$Pld94
                                                g$foo$8522$Pld94))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7308$Pld94
                                                g$x$8542$Pld94))
                                            '"-set!")))))))
                         ((letrec ((g$f$8525$Pld94
                                     (case-lambda
                                       ((g$fields$8526$Pld94)
                                        ((case-lambda
                                           ((g$t$8527$Pld94)
                                            ((case-lambda
                                               ((g$ls/false$8528$Pld94)
                                                (if g$ls/false$8528$Pld94
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8528$Pld94)
                                                  ((case-lambda
                                                     ((g$t$8529$Pld94)
                                                      ((case-lambda
                                                         ((g$ls/false$8530$Pld94)
                                                          (if g$ls/false$8530$Pld94
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8531$Pld94
                                                                   g$accessor$8532$Pld94
                                                                   g$mutator$8533$Pld94
                                                                   g$rest$8534$Pld94)
                                                                 (cons
                                                                   g$mutator$8533$Pld94
                                                                   (g$f$8525$Pld94
                                                                     g$rest$8534$Pld94))))
                                                              g$ls/false$8530$Pld94)
                                                            ((case-lambda
                                                               ((g$t$8535$Pld94)
                                                                ((case-lambda
                                                                   ((g$ls/false$8536$Pld94)
                                                                    (if g$ls/false$8536$Pld94
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8537$Pld94
                                                                             g$rest$8538$Pld94)
                                                                           (cons
                                                                             (g$gen-name$8524$Pld94
                                                                               g$name$8537$Pld94)
                                                                             (g$f$8525$Pld94
                                                                               g$rest$8538$Pld94))))
                                                                        g$ls/false$8536$Pld94)
                                                                      ((case-lambda
                                                                         ((g$t$8539$Pld94)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8540$Pld94)
                                                                              (if g$ls/false$8540$Pld94
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8541$Pld94)
                                                                                     (g$f$8525$Pld94
                                                                                       g$rest$8541$Pld94)))
                                                                                  g$ls/false$8540$Pld94)
                                                                                (g$syntax-violation$7305$Pld94
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8539$Pld94))))
                                                                           (g$syntax-dispatch$7199$Pld94
                                                                             g$t$8539$Pld94
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8535$Pld94))))
                                                                 (g$syntax-dispatch$7199$Pld94
                                                                   g$t$8535$Pld94
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8529$Pld94))))
                                                       (g$syntax-dispatch$7199$Pld94
                                                         g$t$8529$Pld94
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8527$Pld94))))
                                             (g$syntax-dispatch$7199$Pld94
                                               g$t$8527$Pld94
                                               '()))))
                                         g$fields$8526$Pld94)))))
                            g$f$8525$Pld94)
                          g$fields$8523$Pld94)))))
                  (g$get-accessors$8438$Pld94
                    (case-lambda
                      ((g$foo$8488$Pld94 g$fields$8489$Pld94)
                       (letrec* ((g$gen-name$8490$Pld94
                                   (case-lambda
                                     ((g$x$8521$Pld94)
                                      (g$datum->syntax$7307$Pld94
                                        g$foo$8488$Pld94
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7308$Pld94
                                                g$foo$8488$Pld94))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7308$Pld94
                                                g$x$8521$Pld94)))))))))
                         (map (case-lambda
                                ((g$field$8491$Pld94)
                                 ((case-lambda
                                    ((g$t$8492$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8493$Pld94)
                                         (if (if g$ls/false$8493$Pld94
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8494$Pld94
                                                        g$accessor$8495$Pld94
                                                        g$mutator$8496$Pld94)
                                                      (g$id?$6921$Pld94
                                                        g$accessor$8495$Pld94)))
                                                   g$ls/false$8493$Pld94))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8497$Pld94
                                                  g$accessor$8498$Pld94
                                                  g$mutator$8499$Pld94)
                                                g$accessor$8498$Pld94))
                                             g$ls/false$8493$Pld94)
                                           ((case-lambda
                                              ((g$t$8500$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$8501$Pld94)
                                                   (if (if g$ls/false$8501$Pld94
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8502$Pld94
                                                                  g$accessor$8503$Pld94)
                                                                (g$id?$6921$Pld94
                                                                  g$accessor$8503$Pld94)))
                                                             g$ls/false$8501$Pld94))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8504$Pld94
                                                            g$accessor$8505$Pld94)
                                                          g$accessor$8505$Pld94))
                                                       g$ls/false$8501$Pld94)
                                                     ((case-lambda
                                                        ((g$t$8506$Pld94)
                                                         ((case-lambda
                                                            ((g$ls/false$8507$Pld94)
                                                             (if (if g$ls/false$8507$Pld94
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8508$Pld94)
                                                                          (g$id?$6921$Pld94
                                                                            g$name$8508$Pld94)))
                                                                       g$ls/false$8507$Pld94))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8509$Pld94)
                                                                    (g$gen-name$8490$Pld94
                                                                      g$name$8509$Pld94)))
                                                                 g$ls/false$8507$Pld94)
                                                               ((case-lambda
                                                                  ((g$t$8510$Pld94)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8511$Pld94)
                                                                       (if (if g$ls/false$8511$Pld94
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8512$Pld94)
                                                                                    (g$id?$6921$Pld94
                                                                                      g$name$8512$Pld94)))
                                                                                 g$ls/false$8511$Pld94))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8513$Pld94)
                                                                              (g$gen-name$8490$Pld94
                                                                                g$name$8513$Pld94)))
                                                                           g$ls/false$8511$Pld94)
                                                                         ((case-lambda
                                                                            ((g$t$8514$Pld94)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8515$Pld94)
                                                                                 (if (if g$ls/false$8515$Pld94
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8516$Pld94)
                                                                                              (g$id?$6921$Pld94
                                                                                                g$name$8516$Pld94)))
                                                                                           g$ls/false$8515$Pld94))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8517$Pld94)
                                                                                        (g$gen-name$8490$Pld94
                                                                                          g$name$8517$Pld94)))
                                                                                     g$ls/false$8515$Pld94)
                                                                                   ((case-lambda
                                                                                      ((g$t$8518$Pld94)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8519$Pld94)
                                                                                           (if g$ls/false$8519$Pld94
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8520$Pld94)
                                                                                                  (g$syntax-violation$7305$Pld94
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8491$Pld94)))
                                                                                               g$ls/false$8519$Pld94)
                                                                                             (g$syntax-violation$7305$Pld94
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8518$Pld94))))
                                                                                        (g$syntax-dispatch$7199$Pld94
                                                                                          g$t$8518$Pld94
                                                                                          'any))))
                                                                                    g$t$8514$Pld94))))
                                                                              (g$syntax-dispatch$7199$Pld94
                                                                                g$t$8514$Pld94
                                                                                'any))))
                                                                          g$t$8510$Pld94))))
                                                                    (g$syntax-dispatch$7199$Pld94
                                                                      g$t$8510$Pld94
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8506$Pld94))))
                                                          (g$syntax-dispatch$7199$Pld94
                                                            g$t$8506$Pld94
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8500$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$8500$Pld94
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8492$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8492$Pld94
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8491$Pld94)))
                              g$fields$8489$Pld94)))))
                  (g$enumerate$8439$Pld94
                    (case-lambda
                      ((g$ls$8484$Pld94)
                       ((letrec ((g$f$8485$Pld94
                                   (case-lambda
                                     ((g$ls$8486$Pld94 g$i$8487$Pld94)
                                      (if (null? g$ls$8486$Pld94)
                                        '()
                                        (cons
                                          g$i$8487$Pld94
                                          (g$f$8485$Pld94
                                            (cdr g$ls$8486$Pld94)
                                            (+ g$i$8487$Pld94 '1))))))))
                          g$f$8485$Pld94)
                        g$ls$8484$Pld94
                        '0))))
                  (g$do-define-record$8440$Pld94
                    (case-lambda
                      ((g$namespec$8464$Pld94 g$clause*$8465$Pld94)
                       ((case-lambda
                          ((g$foo$8466$Pld94)
                           ((case-lambda
                              ((g$foo-rtd$8467$Pld94)
                               ((case-lambda
                                  ((g$foo-rcd$8468$Pld94)
                                   ((case-lambda
                                      ((g$protocol$8469$Pld94)
                                       ((case-lambda
                                          ((g$make-foo$8470$Pld94)
                                           ((case-lambda
                                              ((g$fields$8471$Pld94)
                                               ((case-lambda
                                                  ((g$idx*$8472$Pld94)
                                                   ((case-lambda
                                                      ((g$foo-x*$8473$Pld94)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8474$Pld94)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8475$Pld94)
                                                               ((case-lambda
                                                                  ((g$foo?$8476$Pld94)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8477$Pld94)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8478$Pld94)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8479$Pld94)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7162$Pld94
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8467$Pld94
                                                                                           g$foo-rtd-code$8477$Pld94)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8469$Pld94
                                                                                             g$protocol-code$8479$Pld94)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8468$Pld94
                                                                                               g$foo-rcd-code$8478$Pld94)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8466$Pld94
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8467$Pld94)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8468$Pld94)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8476$Pld94
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8467$Pld94))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8470$Pld94
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8468$Pld94))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8480$Pld94
                                                                                                               g$idx$8481$Pld94)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8480$Pld94
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8467$Pld94
                                                                                                                 g$idx$8481$Pld94))))
                                                                                                          g$foo-x*$8473$Pld94
                                                                                                          g$idx*$8472$Pld94)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8482$Pld94
                                                                                                               g$idx$8483$Pld94)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8482$Pld94
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8467$Pld94
                                                                                                                 g$idx$8483$Pld94))))
                                                                                                          g$set-foo-x!*$8474$Pld94
                                                                                                          g$set-foo-idx*$8475$Pld94)))))))))))))))
                                                                            (g$get-protocol-code$8434$Pld94
                                                                              g$clause*$8465$Pld94))))
                                                                        (g$foo-rcd-code$8433$Pld94
                                                                          g$clause*$8465$Pld94
                                                                          g$foo-rtd$8467$Pld94
                                                                          g$protocol$8469$Pld94))))
                                                                    (g$foo-rtd-code$8432$Pld94
                                                                      g$foo$8466$Pld94
                                                                      g$clause*$8465$Pld94))))
                                                                (g$get-record-predicate-name$8430$Pld94
                                                                  g$namespec$8464$Pld94))))
                                                            (g$get-mutator-indices$8436$Pld94
                                                              g$fields$8471$Pld94))))
                                                        (g$get-mutators$8437$Pld94
                                                          g$foo$8466$Pld94
                                                          g$fields$8471$Pld94))))
                                                    (g$get-accessors$8438$Pld94
                                                      g$foo$8466$Pld94
                                                      g$fields$8471$Pld94))))
                                                (g$enumerate$8439$Pld94
                                                  g$fields$8471$Pld94))))
                                            (g$get-fields$8435$Pld94
                                              g$clause*$8465$Pld94))))
                                        (g$get-record-constructor-name$8429$Pld94
                                          g$namespec$8464$Pld94))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8428$Pld94 g$namespec$8464$Pld94)))))
                  (g$verify-clauses$8441$Pld94
                    (case-lambda
                      ((g$x$8446$Pld94 g$cls*$8447$Pld94)
                       (letrec* ((g$valid-kwds$8448$Pld94
                                   (map g$bless$7162$Pld94
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8449$Pld94
                                   (case-lambda
                                     ((g$x$8461$Pld94 g$ls$8462$Pld94)
                                      (if (pair? g$ls$8462$Pld94)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8463$Pld94)
                                              (if g$t$8463$Pld94
                                                g$t$8463$Pld94
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8449$Pld94
                                                    g$x$8461$Pld94
                                                    (cdr g$ls$8462$Pld94))))))
                                           (g$free-id=?$6925$Pld94
                                             g$x$8461$Pld94
                                             (car g$ls$8462$Pld94))))
                                        '#f)))))
                         ((letrec ((g$f$8450$Pld94
                                     (case-lambda
                                       ((g$cls*$8451$Pld94 g$seen*$8452$Pld94)
                                        (if (null? g$cls*$8451$Pld94)
                                          (void)
                                          ((case-lambda
                                             ((g$t$8453$Pld94)
                                              ((case-lambda
                                                 ((g$ls/false$8454$Pld94)
                                                  (if g$ls/false$8454$Pld94
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8455$Pld94
                                                           g$rest$8456$Pld94)
                                                         (if ((case-lambda
                                                                ((g$t$8457$Pld94)
                                                                 (if g$t$8457$Pld94
                                                                   g$t$8457$Pld94
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8449$Pld94
                                                                            g$kwd$8455$Pld94
                                                                            g$valid-kwds$8448$Pld94))))))
                                                              (not (g$id?$6921$Pld94
                                                                     g$kwd$8455$Pld94)))
                                                           (g$syntax-violation$7305$Pld94
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8455$Pld94)
                                                           (if (g$bound-id-member?$6928$Pld94
                                                                 g$kwd$8455$Pld94
                                                                 g$seen*$8452$Pld94)
                                                             (g$syntax-violation$7305$Pld94
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8446$Pld94
                                                               g$kwd$8455$Pld94)
                                                             (g$f$8450$Pld94
                                                               (cdr g$cls*$8451$Pld94)
                                                               (cons
                                                                 g$kwd$8455$Pld94
                                                                 g$seen*$8452$Pld94))))))
                                                      g$ls/false$8454$Pld94)
                                                    ((case-lambda
                                                       ((g$t$8458$Pld94)
                                                        ((case-lambda
                                                           ((g$ls/false$8459$Pld94)
                                                            (if g$ls/false$8459$Pld94
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8460$Pld94)
                                                                   (g$syntax-violation$7305$Pld94
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8460$Pld94)))
                                                                g$ls/false$8459$Pld94)
                                                              (g$syntax-violation$7305$Pld94
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8458$Pld94))))
                                                         (g$syntax-dispatch$7199$Pld94
                                                           g$t$8458$Pld94
                                                           'any))))
                                                     g$t$8453$Pld94))))
                                               (g$syntax-dispatch$7199$Pld94
                                                 g$t$8453$Pld94
                                                 '(any . any)))))
                                           (car g$cls*$8451$Pld94)))))))
                            g$f$8450$Pld94)
                          g$cls*$8447$Pld94
                          '()))))))
          ((case-lambda
             ((g$t$8442$Pld94)
              ((case-lambda
                 ((g$ls/false$8443$Pld94)
                  (if g$ls/false$8443$Pld94
                    (apply
                      (case-lambda
                        ((g$namespec$8444$Pld94 g$clause*$8445$Pld94)
                         (begin
                           (g$verify-clauses$8441$Pld94
                             g$x$8426$Pld94
                             g$clause*$8445$Pld94)
                           (g$do-define-record$8440$Pld94
                             g$namespec$8444$Pld94
                             g$clause*$8445$Pld94))))
                      g$ls/false$8443$Pld94)
                    (g$syntax-violation$7305$Pld94
                      '#f
                      '"invalid syntax"
                      g$t$8442$Pld94))))
               (g$syntax-dispatch$7199$Pld94
                 g$t$8442$Pld94
                 '(_ any . each-any)))))
           g$x$8426$Pld94)))))
   (g$define-condition-type-macro$7194$Pld94
     g$define-condition-type-macro$10628$Pld94
     (case-lambda
       ((g$x$8666$Pld94)
        (letrec* ((g$mkname$8667$Pld94
                    (case-lambda
                      ((g$name$8690$Pld94 g$suffix$8691$Pld94)
                       (g$datum->syntax$7307$Pld94
                         g$name$8690$Pld94
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7308$Pld94 g$name$8690$Pld94))
                             g$suffix$8691$Pld94)))))))
          ((case-lambda
             ((g$t$8668$Pld94)
              ((case-lambda
                 ((g$ls/false$8669$Pld94)
                  (if (if g$ls/false$8669$Pld94
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$8670$Pld94
                                 g$name$8671$Pld94
                                 g$super$8672$Pld94
                                 g$constructor$8673$Pld94
                                 g$predicate$8674$Pld94
                                 g$field*$8675$Pld94
                                 g$accessor*$8676$Pld94)
                               (if (g$id?$6921$Pld94 g$name$8671$Pld94)
                                 (if (g$id?$6921$Pld94 g$super$8672$Pld94)
                                   (if (g$id?$6921$Pld94
                                         g$constructor$8673$Pld94)
                                     (if (g$id?$6921$Pld94
                                           g$predicate$8674$Pld94)
                                       (if (g$for-all$5349$Pld94
                                             g$id?$6921$Pld94
                                             g$field*$8675$Pld94)
                                         (begin
                                           '#f
                                           (g$for-all$5349$Pld94
                                             g$id?$6921$Pld94
                                             g$accessor*$8676$Pld94))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$8669$Pld94))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$8677$Pld94
                           g$name$8678$Pld94
                           g$super$8679$Pld94
                           g$constructor$8680$Pld94
                           g$predicate$8681$Pld94
                           g$field*$8682$Pld94
                           g$accessor*$8683$Pld94)
                         ((case-lambda
                            ((g$aux-accessor*$8684$Pld94)
                             (g$bless$7162$Pld94
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$8678$Pld94
                                         g$constructor$8680$Pld94
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$8679$Pld94)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$8685$Pld94
                                                       g$aux$8686$Pld94)
                                                     (list
                                                       'immutable
                                                       g$field$8685$Pld94
                                                       g$aux$8686$Pld94)))
                                                  g$field*$8682$Pld94
                                                  g$aux-accessor*$8684$Pld94))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$8681$Pld94
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$8678$Pld94)))
                                     (map (case-lambda
                                            ((g$accessor$8687$Pld94
                                               g$aux$8688$Pld94)
                                             (list
                                               'define
                                               g$accessor$8687$Pld94
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$8678$Pld94)
                                                 g$aux$8688$Pld94))))
                                          g$accessor*$8683$Pld94
                                          g$aux-accessor*$8684$Pld94)))))))
                          (map (case-lambda ((g$x$8689$Pld94) (gensym)))
                               g$accessor*$8683$Pld94))))
                      g$ls/false$8669$Pld94)
                    (g$syntax-violation$7305$Pld94
                      '#f
                      '"invalid syntax"
                      g$t$8668$Pld94))))
               (g$syntax-dispatch$7199$Pld94
                 g$t$8668$Pld94
                 '(any any any any any . #(each (any any)))))))
           g$x$8666$Pld94)))))
   (g$incorrect-usage-macro$7195$Pld94
     g$incorrect-usage-macro$10629$Pld94
     (case-lambda
       ((g$e$8692$Pld94)
        (g$syntax-violation$7305$Pld94
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$8692$Pld94))))
   (g$parameterize-transformer$7196$Pld94
     g$parameterize-transformer$10630$Pld94
     (case-lambda
       ((g$e$8693$Pld94 g$r$8694$Pld94 g$mr$8695$Pld94)
        ((case-lambda
           ((g$t$8696$Pld94)
            ((case-lambda
               ((g$ls/false$8697$Pld94)
                (if g$ls/false$8697$Pld94
                  (apply
                    (case-lambda
                      ((g$b$8698$Pld94 g$b*$8699$Pld94)
                       (g$chi-internal$7228$Pld94
                         (cons g$b$8698$Pld94 g$b*$8699$Pld94)
                         g$r$8694$Pld94
                         g$mr$8695$Pld94)))
                    g$ls/false$8697$Pld94)
                  ((case-lambda
                     ((g$t$8700$Pld94)
                      ((case-lambda
                         ((g$ls/false$8701$Pld94)
                          (if g$ls/false$8701$Pld94
                            (apply
                              (case-lambda
                                ((g$olhs*$8702$Pld94
                                   g$orhs*$8703$Pld94
                                   g$b$8704$Pld94
                                   g$b*$8705$Pld94)
                                 ((case-lambda
                                    ((g$lhs*$8706$Pld94
                                       g$rhs*$8707$Pld94
                                       g$t*$8708$Pld94
                                       g$swap$8709$Pld94)
                                     (g$build-let$6854$Pld94
                                       '#f
                                       (append
                                         g$lhs*$8706$Pld94
                                         g$rhs*$8707$Pld94)
                                       (append
                                         (g$chi-expr*$7215$Pld94
                                           g$olhs*$8702$Pld94
                                           g$r$8694$Pld94
                                           g$mr$8695$Pld94)
                                         (g$chi-expr*$7215$Pld94
                                           g$orhs*$8703$Pld94
                                           g$r$8694$Pld94
                                           g$mr$8695$Pld94))
                                       (g$build-let$6854$Pld94
                                         '#f
                                         (list g$swap$8709$Pld94)
                                         (list
                                           (g$build-lambda$6852$Pld94
                                             '#f
                                             '()
                                             (g$build-sequence$6855$Pld94
                                               '#f
                                               (map (case-lambda
                                                      ((g$t$8710$Pld94
                                                         g$lhs$8711$Pld94
                                                         g$rhs$8712$Pld94)
                                                       (g$build-let$6854$Pld94
                                                         '#f
                                                         (list g$t$8710$Pld94)
                                                         (list
                                                           (list
                                                             g$lhs$8711$Pld94))
                                                         (g$build-sequence$6855$Pld94
                                                           '#f
                                                           (list
                                                             (list
                                                               g$lhs$8711$Pld94
                                                               g$rhs$8712$Pld94)
                                                             (list
                                                               'set!
                                                               g$rhs$8712$Pld94
                                                               g$t$8710$Pld94))))))
                                                    g$t*$8708$Pld94
                                                    g$lhs*$8706$Pld94
                                                    g$rhs*$8707$Pld94))))
                                         (list
                                           '(primitive dynamic-wind)
                                           g$swap$8709$Pld94
                                           (g$build-lambda$6852$Pld94
                                             '#f
                                             '()
                                             (g$chi-internal$7228$Pld94
                                               (cons
                                                 g$b$8704$Pld94
                                                 g$b*$8705$Pld94)
                                               g$r$8694$Pld94
                                               g$mr$8695$Pld94))
                                           g$swap$8709$Pld94)))))
                                  (map (case-lambda
                                         ((g$x$8713$Pld94)
                                          (g$gen-lexical$6865$Pld94 'lhs)))
                                       g$olhs*$8702$Pld94)
                                  (map (case-lambda
                                         ((g$x$8714$Pld94)
                                          (g$gen-lexical$6865$Pld94 'rhs)))
                                       g$olhs*$8702$Pld94)
                                  (map (case-lambda
                                         ((g$x$8715$Pld94)
                                          (g$gen-lexical$6865$Pld94 't)))
                                       g$olhs*$8702$Pld94)
                                  (g$gen-lexical$6865$Pld94 'swap))))
                              g$ls/false$8701$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$8700$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$8700$Pld94
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$8696$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$8696$Pld94
               '(_ () any . each-any)))))
         g$e$8693$Pld94))))
   (g$foreign-call-transformer$7197$Pld94
     g$foreign-call-transformer$10631$Pld94
     (case-lambda
       ((g$e$8716$Pld94 g$r$8717$Pld94 g$mr$8718$Pld94)
        ((case-lambda
           ((g$t$8719$Pld94)
            ((case-lambda
               ((g$ls/false$8720$Pld94)
                (if g$ls/false$8720$Pld94
                  (apply
                    (case-lambda
                      ((g$name$8721$Pld94 g$arg*$8722$Pld94)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7217$Pld94
                             g$name$8721$Pld94
                             g$r$8717$Pld94
                             g$mr$8718$Pld94)
                           (g$chi-expr*$7215$Pld94
                             g$arg*$8722$Pld94
                             g$r$8717$Pld94
                             g$mr$8718$Pld94)))))
                    g$ls/false$8720$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$8719$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$8719$Pld94
               '(_ any . each-any)))))
         g$e$8716$Pld94))))
   (g$convert-pattern$7198$Pld94
     g$convert-pattern$10632$Pld94
     (case-lambda
       ((g$pattern$8723$Pld94 g$keys$8724$Pld94)
        (letrec* ((g$cvt*$8725$Pld94
                    (case-lambda
                      ((g$p*$8805$Pld94 g$n$8806$Pld94 g$ids$8807$Pld94)
                       (if (null? g$p*$8805$Pld94)
                         (values '() g$ids$8807$Pld94)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$8725$Pld94
                                (cdr g$p*$8805$Pld94)
                                g$n$8806$Pld94
                                g$ids$8807$Pld94)))
                           (case-lambda
                             ((g$y$8810$Pld94 g$ids$8811$Pld94)
                              ((case-lambda
                                 ((g$ids$8812$Pld94 g$y$8813$Pld94)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$8726$Pld94
                                         (car g$p*$8805$Pld94)
                                         g$n$8806$Pld94
                                         g$ids$8812$Pld94)))
                                    (case-lambda
                                      ((g$x$8816$Pld94 g$ids$8817$Pld94)
                                       ((case-lambda
                                          ((g$ids$8818$Pld94 g$x$8819$Pld94)
                                           (values
                                             (cons
                                               g$x$8819$Pld94
                                               g$y$8813$Pld94)
                                             g$ids$8818$Pld94)))
                                        g$ids$8817$Pld94
                                        g$x$8816$Pld94))))))
                               g$ids$8811$Pld94
                               g$y$8810$Pld94))))))))
                  (g$cvt$8726$Pld94
                    (case-lambda
                      ((g$p$8727$Pld94 g$n$8728$Pld94 g$ids$8729$Pld94)
                       ((case-lambda
                          ((g$t$8730$Pld94)
                           ((case-lambda
                              ((g$ls/false$8731$Pld94)
                               (if (if g$ls/false$8731$Pld94
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$8732$Pld94)
                                            (g$id?$6921$Pld94 g$id$8732$Pld94)))
                                         g$ls/false$8731$Pld94))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$8733$Pld94)
                                      (if (g$bound-id-member?$6928$Pld94
                                            g$p$8727$Pld94
                                            g$keys$8724$Pld94)
                                        (values
                                          (vector 'free-id g$p$8727$Pld94)
                                          g$ids$8729$Pld94)
                                        (if (g$free-id=?$6925$Pld94
                                              g$p$8727$Pld94
                                              (g$scheme-stx$7142$Pld94 '_))
                                          (values '_ g$ids$8729$Pld94)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$8727$Pld94
                                                g$n$8728$Pld94)
                                              g$ids$8729$Pld94))))))
                                   g$ls/false$8731$Pld94)
                                 ((case-lambda
                                    ((g$t$8734$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$8735$Pld94)
                                         (if (if g$ls/false$8735$Pld94
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8736$Pld94
                                                        g$dots$8737$Pld94)
                                                      (g$ellipsis?$7200$Pld94
                                                        g$dots$8737$Pld94)))
                                                   g$ls/false$8735$Pld94))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$8738$Pld94
                                                  g$dots$8739$Pld94)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$8726$Pld94
                                                       g$p$8738$Pld94
                                                       (+ g$n$8728$Pld94 '1)
                                                       g$ids$8729$Pld94)))
                                                  (case-lambda
                                                    ((g$p$8742$Pld94
                                                       g$ids$8743$Pld94)
                                                     ((case-lambda
                                                        ((g$ids$8744$Pld94
                                                           g$p$8745$Pld94)
                                                         (values
                                                           (if (eq? g$p$8745$Pld94
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$8745$Pld94))
                                                           g$ids$8744$Pld94)))
                                                      g$ids$8743$Pld94
                                                      g$p$8742$Pld94))))))
                                             g$ls/false$8735$Pld94)
                                           ((case-lambda
                                              ((g$t$8746$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$8747$Pld94)
                                                   (if (if g$ls/false$8747$Pld94
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$8748$Pld94
                                                                  g$dots$8749$Pld94
                                                                  g$ys$8750$Pld94
                                                                  g$z$8751$Pld94)
                                                                (g$ellipsis?$7200$Pld94
                                                                  g$dots$8749$Pld94)))
                                                             g$ls/false$8747$Pld94))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$8752$Pld94
                                                            g$dots$8753$Pld94
                                                            g$ys$8754$Pld94
                                                            g$z$8755$Pld94)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$8726$Pld94
                                                                 g$z$8755$Pld94
                                                                 g$n$8728$Pld94
                                                                 g$ids$8729$Pld94)))
                                                            (case-lambda
                                                              ((g$z$8758$Pld94
                                                                 g$ids$8759$Pld94)
                                                               ((case-lambda
                                                                  ((g$ids$8760$Pld94
                                                                     g$z$8761$Pld94)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$8725$Pld94
                                                                          g$ys$8754$Pld94
                                                                          g$n$8728$Pld94
                                                                          g$ids$8760$Pld94)))
                                                                     (case-lambda
                                                                       ((g$ys$8764$Pld94
                                                                          g$ids$8765$Pld94)
                                                                        ((case-lambda
                                                                           ((g$ids$8766$Pld94
                                                                              g$ys$8767$Pld94)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$8726$Pld94
                                                                                   g$x$8752$Pld94
                                                                                   (+ g$n$8728$Pld94
                                                                                      '1)
                                                                                   g$ids$8766$Pld94)))
                                                                              (case-lambda
                                                                                ((g$x$8770$Pld94
                                                                                   g$ids$8771$Pld94)
                                                                                 ((case-lambda
                                                                                    ((g$ids$8772$Pld94
                                                                                       g$x$8773$Pld94)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$8773$Pld94
                                                                                         (reverse
                                                                                           g$ys$8767$Pld94)
                                                                                         g$z$8761$Pld94)
                                                                                       g$ids$8772$Pld94)))
                                                                                  g$ids$8771$Pld94
                                                                                  g$x$8770$Pld94))))))
                                                                         g$ids$8765$Pld94
                                                                         g$ys$8764$Pld94))))))
                                                                g$ids$8759$Pld94
                                                                g$z$8758$Pld94))))))
                                                       g$ls/false$8747$Pld94)
                                                     ((case-lambda
                                                        ((g$t$8774$Pld94)
                                                         ((case-lambda
                                                            ((g$ls/false$8775$Pld94)
                                                             (if g$ls/false$8775$Pld94
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$8776$Pld94
                                                                      g$y$8777$Pld94)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$8726$Pld94
                                                                           g$y$8777$Pld94
                                                                           g$n$8728$Pld94
                                                                           g$ids$8729$Pld94)))
                                                                      (case-lambda
                                                                        ((g$y$8780$Pld94
                                                                           g$ids$8781$Pld94)
                                                                         ((case-lambda
                                                                            ((g$ids$8782$Pld94
                                                                               g$y$8783$Pld94)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$8726$Pld94
                                                                                    g$x$8776$Pld94
                                                                                    g$n$8728$Pld94
                                                                                    g$ids$8782$Pld94)))
                                                                               (case-lambda
                                                                                 ((g$x$8786$Pld94
                                                                                    g$ids$8787$Pld94)
                                                                                  ((case-lambda
                                                                                     ((g$ids$8788$Pld94
                                                                                        g$x$8789$Pld94)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$8789$Pld94
                                                                                          g$y$8783$Pld94)
                                                                                        g$ids$8788$Pld94)))
                                                                                   g$ids$8787$Pld94
                                                                                   g$x$8786$Pld94))))))
                                                                          g$ids$8781$Pld94
                                                                          g$y$8780$Pld94))))))
                                                                 g$ls/false$8775$Pld94)
                                                               ((case-lambda
                                                                  ((g$t$8790$Pld94)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8791$Pld94)
                                                                       (if g$ls/false$8791$Pld94
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$8729$Pld94)))
                                                                           g$ls/false$8791$Pld94)
                                                                         ((case-lambda
                                                                            ((g$t$8792$Pld94)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8793$Pld94)
                                                                                 (if (if g$ls/false$8793$Pld94
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$8794$Pld94)
                                                                                              (not (g$stx?$6893$Pld94
                                                                                                     g$p$8794$Pld94))))
                                                                                           g$ls/false$8793$Pld94))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$8795$Pld94)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$8726$Pld94
                                                                                               g$p$8795$Pld94
                                                                                               g$n$8728$Pld94
                                                                                               g$ids$8729$Pld94)))
                                                                                          (case-lambda
                                                                                            ((g$p$8798$Pld94
                                                                                               g$ids$8799$Pld94)
                                                                                             ((case-lambda
                                                                                                ((g$ids$8800$Pld94
                                                                                                   g$p$8801$Pld94)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$8801$Pld94)
                                                                                                   g$ids$8800$Pld94)))
                                                                                              g$ids$8799$Pld94
                                                                                              g$p$8798$Pld94))))))
                                                                                     g$ls/false$8793$Pld94)
                                                                                   ((case-lambda
                                                                                      ((g$t$8802$Pld94)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8803$Pld94)
                                                                                           (if g$ls/false$8803$Pld94
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$8804$Pld94)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$6932$Pld94
                                                                                                        g$datum$8804$Pld94))
                                                                                                    g$ids$8729$Pld94)))
                                                                                               g$ls/false$8803$Pld94)
                                                                                             (g$syntax-violation$7305$Pld94
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8802$Pld94))))
                                                                                        (g$syntax-dispatch$7199$Pld94
                                                                                          g$t$8802$Pld94
                                                                                          'any))))
                                                                                    g$t$8792$Pld94))))
                                                                              (g$syntax-dispatch$7199$Pld94
                                                                                g$t$8792$Pld94
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$8790$Pld94))))
                                                                    (g$syntax-dispatch$7199$Pld94
                                                                      g$t$8790$Pld94
                                                                      '()))))
                                                                g$t$8774$Pld94))))
                                                          (g$syntax-dispatch$7199$Pld94
                                                            g$t$8774$Pld94
                                                            '(any . any)))))
                                                      g$t$8746$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$8746$Pld94
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$8734$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$8734$Pld94
                                        '(any any)))))
                                  g$t$8730$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$8730$Pld94
                              'any))))
                        g$p$8727$Pld94)))))
          (g$cvt$8726$Pld94 g$pattern$8723$Pld94 '0 '())))))
   (g$syntax-dispatch$7199$Pld94
     g$syntax-dispatch$10633$Pld94
     (case-lambda
       ((g$e$8820$Pld94 g$p$8821$Pld94)
        (letrec* ((g$stx^$8822$Pld94
                    (case-lambda
                      ((g$e$8930$Pld94
                         g$m*$8931$Pld94
                         g$s*$8932$Pld94
                         g$ae*$8933$Pld94)
                       (if (if (null? g$m*$8931$Pld94)
                             (if (null? g$s*$8932$Pld94)
                               (begin '#f (null? g$ae*$8933$Pld94))
                               '#f)
                             '#f)
                         g$e$8930$Pld94
                         (g$mkstx$6909$Pld94
                           g$e$8930$Pld94
                           g$m*$8931$Pld94
                           g$s*$8932$Pld94
                           g$ae*$8933$Pld94)))))
                  (g$match-each$8823$Pld94
                    (case-lambda
                      ((g$e$8914$Pld94
                         g$p$8915$Pld94
                         g$m*$8916$Pld94
                         g$s*$8917$Pld94
                         g$ae*$8918$Pld94)
                       (if (pair? g$e$8914$Pld94)
                         ((case-lambda
                            ((g$first$8919$Pld94)
                             (if g$first$8919$Pld94
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$8920$Pld94)
                                     (if g$rest$8920$Pld94
                                       (begin
                                         '#f
                                         (cons
                                           g$first$8919$Pld94
                                           g$rest$8920$Pld94))
                                       '#f)))
                                  (g$match-each$8823$Pld94
                                    (cdr g$e$8914$Pld94)
                                    g$p$8915$Pld94
                                    g$m*$8916$Pld94
                                    g$s*$8917$Pld94
                                    g$ae*$8918$Pld94)))
                               '#f)))
                          (g$match$8829$Pld94
                            (car g$e$8914$Pld94)
                            g$p$8915$Pld94
                            g$m*$8916$Pld94
                            g$s*$8917$Pld94
                            g$ae*$8918$Pld94
                            '()))
                         (if (null? g$e$8914$Pld94)
                           '()
                           (if (g$stx?$6893$Pld94 g$e$8914$Pld94)
                             (if (not (g$top-marked?$6864$Pld94
                                        g$m*$8916$Pld94))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$6908$Pld94
                                        g$m*$8916$Pld94
                                        g$s*$8917$Pld94
                                        g$ae*$8918$Pld94
                                        g$e$8914$Pld94)))
                                   (case-lambda
                                     ((g$m*$8924$Pld94
                                        g$s*$8925$Pld94
                                        g$ae*$8926$Pld94)
                                      ((case-lambda
                                         ((g$ae*$8927$Pld94
                                            g$s*$8928$Pld94
                                            g$m*$8929$Pld94)
                                          (g$match-each$8823$Pld94
                                            (g$stx-expr$6895$Pld94
                                              g$e$8914$Pld94)
                                            g$p$8915$Pld94
                                            g$m*$8929$Pld94
                                            g$s*$8928$Pld94
                                            g$ae*$8927$Pld94)))
                                       g$ae*$8926$Pld94
                                       g$s*$8925$Pld94
                                       g$m*$8924$Pld94)))))
                               '#f)
                             (if (annotation? g$e$8914$Pld94)
                               (g$match-each$8823$Pld94
                                 (annotation-expression g$e$8914$Pld94)
                                 g$p$8915$Pld94
                                 g$m*$8916$Pld94
                                 g$s*$8917$Pld94
                                 g$ae*$8918$Pld94)
                               '#f)))))))
                  (g$match-each+$8824$Pld94
                    (case-lambda
                      ((g$e$8882$Pld94
                         g$x-pat$8883$Pld94
                         g$y-pat$8884$Pld94
                         g$z-pat$8885$Pld94
                         g$m*$8886$Pld94
                         g$s*$8887$Pld94
                         g$ae*$8888$Pld94
                         g$r$8889$Pld94)
                       ((letrec ((g$f$8890$Pld94
                                   (case-lambda
                                     ((g$e$8891$Pld94
                                        g$m*$8892$Pld94
                                        g$s*$8893$Pld94
                                        g$ae*$8894$Pld94)
                                      (if (pair? g$e$8891$Pld94)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$8890$Pld94
                                               (cdr g$e$8891$Pld94)
                                               g$m*$8892$Pld94
                                               g$s*$8893$Pld94
                                               g$ae*$8894$Pld94)))
                                          (case-lambda
                                            ((g$xr*$8898$Pld94
                                               g$y-pat$8899$Pld94
                                               g$r$8900$Pld94)
                                             ((case-lambda
                                                ((g$r$8901$Pld94
                                                   g$y-pat$8902$Pld94
                                                   g$xr*$8903$Pld94)
                                                 (if g$r$8901$Pld94
                                                   (if (null?
                                                         g$y-pat$8902$Pld94)
                                                     ((case-lambda
                                                        ((g$xr$8904$Pld94)
                                                         (if g$xr$8904$Pld94
                                                           (values
                                                             (cons
                                                               g$xr$8904$Pld94
                                                               g$xr*$8903$Pld94)
                                                             g$y-pat$8902$Pld94
                                                             g$r$8901$Pld94)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$8829$Pld94
                                                        (car g$e$8891$Pld94)
                                                        g$x-pat$8883$Pld94
                                                        g$m*$8892$Pld94
                                                        g$s*$8893$Pld94
                                                        g$ae*$8894$Pld94
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$8902$Pld94)
                                                       (g$match$8829$Pld94
                                                         (car g$e$8891$Pld94)
                                                         (car g$y-pat$8902$Pld94)
                                                         g$m*$8892$Pld94
                                                         g$s*$8893$Pld94
                                                         g$ae*$8894$Pld94
                                                         g$r$8901$Pld94)))
                                                   (values '#f '#f '#f))))
                                              g$r$8900$Pld94
                                              g$y-pat$8899$Pld94
                                              g$xr*$8898$Pld94))))
                                        (if (g$stx?$6893$Pld94 g$e$8891$Pld94)
                                          (if (g$top-marked?$6864$Pld94
                                                g$m*$8892$Pld94)
                                            (values
                                              '()
                                              g$y-pat$8884$Pld94
                                              (g$match$8829$Pld94
                                                g$e$8891$Pld94
                                                g$z-pat$8885$Pld94
                                                g$m*$8892$Pld94
                                                g$s*$8893$Pld94
                                                g$ae*$8894$Pld94
                                                g$r$8889$Pld94))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$6908$Pld94
                                                   g$m*$8892$Pld94
                                                   g$s*$8893$Pld94
                                                   g$ae*$8894$Pld94
                                                   g$e$8891$Pld94)))
                                              (case-lambda
                                                ((g$m*$8908$Pld94
                                                   g$s*$8909$Pld94
                                                   g$ae*$8910$Pld94)
                                                 ((case-lambda
                                                    ((g$ae*$8911$Pld94
                                                       g$s*$8912$Pld94
                                                       g$m*$8913$Pld94)
                                                     (g$f$8890$Pld94
                                                       (g$stx-expr$6895$Pld94
                                                         g$e$8891$Pld94)
                                                       g$m*$8913$Pld94
                                                       g$s*$8912$Pld94
                                                       g$ae*$8911$Pld94)))
                                                  g$ae*$8910$Pld94
                                                  g$s*$8909$Pld94
                                                  g$m*$8908$Pld94)))))
                                          (if (annotation? g$e$8891$Pld94)
                                            (g$f$8890$Pld94
                                              (annotation-expression
                                                g$e$8891$Pld94)
                                              g$m*$8892$Pld94
                                              g$s*$8893$Pld94
                                              g$ae*$8894$Pld94)
                                            (values
                                              '()
                                              g$y-pat$8884$Pld94
                                              (g$match$8829$Pld94
                                                g$e$8891$Pld94
                                                g$z-pat$8885$Pld94
                                                g$m*$8892$Pld94
                                                g$s*$8893$Pld94
                                                g$ae*$8894$Pld94
                                                g$r$8889$Pld94)))))))))
                          g$f$8890$Pld94)
                        g$e$8882$Pld94
                        g$m*$8886$Pld94
                        g$s*$8887$Pld94
                        g$ae*$8888$Pld94))))
                  (g$match-each-any$8825$Pld94
                    (case-lambda
                      ((g$e$8868$Pld94
                         g$m*$8869$Pld94
                         g$s*$8870$Pld94
                         g$ae*$8871$Pld94)
                       (if (pair? g$e$8868$Pld94)
                         ((case-lambda
                            ((g$l$8872$Pld94)
                             (if g$l$8872$Pld94
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$8822$Pld94
                                     (car g$e$8868$Pld94)
                                     g$m*$8869$Pld94
                                     g$s*$8870$Pld94
                                     g$ae*$8871$Pld94)
                                   g$l$8872$Pld94))
                               '#f)))
                          (g$match-each-any$8825$Pld94
                            (cdr g$e$8868$Pld94)
                            g$m*$8869$Pld94
                            g$s*$8870$Pld94
                            g$ae*$8871$Pld94))
                         (if (null? g$e$8868$Pld94)
                           '()
                           (if (g$stx?$6893$Pld94 g$e$8868$Pld94)
                             (if (not (g$top-marked?$6864$Pld94
                                        g$m*$8869$Pld94))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$6908$Pld94
                                        g$m*$8869$Pld94
                                        g$s*$8870$Pld94
                                        g$ae*$8871$Pld94
                                        g$e$8868$Pld94)))
                                   (case-lambda
                                     ((g$m*$8876$Pld94
                                        g$s*$8877$Pld94
                                        g$ae*$8878$Pld94)
                                      ((case-lambda
                                         ((g$ae*$8879$Pld94
                                            g$s*$8880$Pld94
                                            g$m*$8881$Pld94)
                                          (g$match-each-any$8825$Pld94
                                            (g$stx-expr$6895$Pld94
                                              g$e$8868$Pld94)
                                            g$m*$8881$Pld94
                                            g$s*$8880$Pld94
                                            g$ae*$8879$Pld94)))
                                       g$ae*$8878$Pld94
                                       g$s*$8877$Pld94
                                       g$m*$8876$Pld94)))))
                               '#f)
                             (if (annotation? g$e$8868$Pld94)
                               (g$match-each-any$8825$Pld94
                                 (annotation-expression g$e$8868$Pld94)
                                 g$m*$8869$Pld94
                                 g$s*$8870$Pld94
                                 g$ae*$8871$Pld94)
                               '#f)))))))
                  (g$match-empty$8826$Pld94
                    (case-lambda
                      ((g$p$8865$Pld94 g$r$8866$Pld94)
                       (if (null? g$p$8865$Pld94)
                         g$r$8866$Pld94
                         (if (eq? g$p$8865$Pld94 '_)
                           g$r$8866$Pld94
                           (if (eq? g$p$8865$Pld94 'any)
                             (cons '() g$r$8866$Pld94)
                             (if (pair? g$p$8865$Pld94)
                               (g$match-empty$8826$Pld94
                                 (car g$p$8865$Pld94)
                                 (g$match-empty$8826$Pld94
                                   (cdr g$p$8865$Pld94)
                                   g$r$8866$Pld94))
                               (if (eq? g$p$8865$Pld94 'each-any)
                                 (cons '() g$r$8866$Pld94)
                                 ((case-lambda
                                    ((g$t$8867$Pld94)
                                     (if (eqv? g$t$8867$Pld94 'each)
                                       (g$match-empty$8826$Pld94
                                         (vector-ref g$p$8865$Pld94 '1)
                                         g$r$8866$Pld94)
                                       (if (eqv? g$t$8867$Pld94 'each+)
                                         (g$match-empty$8826$Pld94
                                           (vector-ref g$p$8865$Pld94 '1)
                                           (g$match-empty$8826$Pld94
                                             (reverse
                                               (vector-ref g$p$8865$Pld94 '2))
                                             (g$match-empty$8826$Pld94
                                               (vector-ref g$p$8865$Pld94 '3)
                                               g$r$8866$Pld94)))
                                         (if (memv
                                               g$t$8867$Pld94
                                               '(free-id atom))
                                           g$r$8866$Pld94
                                           (if (memv
                                                 g$t$8867$Pld94
                                                 '(scheme-id atom))
                                             g$r$8866$Pld94
                                             (if (eqv? g$t$8867$Pld94 'vector)
                                               (g$match-empty$8826$Pld94
                                                 (vector-ref g$p$8865$Pld94 '1)
                                                 g$r$8866$Pld94)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$8865$Pld94))))))))
                                  (vector-ref g$p$8865$Pld94 '0))))))))))
                  (g$combine$8827$Pld94
                    (case-lambda
                      ((g$r*$8863$Pld94 g$r$8864$Pld94)
                       (if (null? (car g$r*$8863$Pld94))
                         g$r$8864$Pld94
                         (cons
                           (map car g$r*$8863$Pld94)
                           (g$combine$8827$Pld94
                             (map cdr g$r*$8863$Pld94)
                             g$r$8864$Pld94))))))
                  (g$match*$8828$Pld94
                    (case-lambda
                      ((g$e$8845$Pld94
                         g$p$8846$Pld94
                         g$m*$8847$Pld94
                         g$s*$8848$Pld94
                         g$ae*$8849$Pld94
                         g$r$8850$Pld94)
                       (if (null? g$p$8846$Pld94)
                         (if (null? g$e$8845$Pld94)
                           (begin '#f g$r$8850$Pld94)
                           '#f)
                         (if (pair? g$p$8846$Pld94)
                           (if (pair? g$e$8845$Pld94)
                             (begin
                               '#f
                               (g$match$8829$Pld94
                                 (car g$e$8845$Pld94)
                                 (car g$p$8846$Pld94)
                                 g$m*$8847$Pld94
                                 g$s*$8848$Pld94
                                 g$ae*$8849$Pld94
                                 (g$match$8829$Pld94
                                   (cdr g$e$8845$Pld94)
                                   (cdr g$p$8846$Pld94)
                                   g$m*$8847$Pld94
                                   g$s*$8848$Pld94
                                   g$ae*$8849$Pld94
                                   g$r$8850$Pld94)))
                             '#f)
                           (if (eq? g$p$8846$Pld94 'each-any)
                             ((case-lambda
                                ((g$l$8851$Pld94)
                                 (if g$l$8851$Pld94
                                   (begin
                                     '#f
                                     (cons g$l$8851$Pld94 g$r$8850$Pld94))
                                   '#f)))
                              (g$match-each-any$8825$Pld94
                                g$e$8845$Pld94
                                g$m*$8847$Pld94
                                g$s*$8848$Pld94
                                g$ae*$8849$Pld94))
                             ((case-lambda
                                ((g$t$8852$Pld94)
                                 (if (eqv? g$t$8852$Pld94 'each)
                                   (if (null? g$e$8845$Pld94)
                                     (g$match-empty$8826$Pld94
                                       (vector-ref g$p$8846$Pld94 '1)
                                       g$r$8850$Pld94)
                                     ((case-lambda
                                        ((g$r*$8862$Pld94)
                                         (if g$r*$8862$Pld94
                                           (begin
                                             '#f
                                             (g$combine$8827$Pld94
                                               g$r*$8862$Pld94
                                               g$r$8850$Pld94))
                                           '#f)))
                                      (g$match-each$8823$Pld94
                                        g$e$8845$Pld94
                                        (vector-ref g$p$8846$Pld94 '1)
                                        g$m*$8847$Pld94
                                        g$s*$8848$Pld94
                                        g$ae*$8849$Pld94)))
                                   (if (eqv? g$t$8852$Pld94 'free-id)
                                     (if (symbol? g$e$8845$Pld94)
                                       (if (g$top-marked?$6864$Pld94
                                             g$m*$8847$Pld94)
                                         (if (g$free-id=?$6925$Pld94
                                               (g$stx^$8822$Pld94
                                                 g$e$8845$Pld94
                                                 g$m*$8847$Pld94
                                                 g$s*$8848$Pld94
                                                 g$ae*$8849$Pld94)
                                               (vector-ref g$p$8846$Pld94 '1))
                                           (begin '#f g$r$8850$Pld94)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv? g$t$8852$Pld94 'scheme-id)
                                       (if (symbol? g$e$8845$Pld94)
                                         (if (g$top-marked?$6864$Pld94
                                               g$m*$8847$Pld94)
                                           (if (g$free-id=?$6925$Pld94
                                                 (g$stx^$8822$Pld94
                                                   g$e$8845$Pld94
                                                   g$m*$8847$Pld94
                                                   g$s*$8848$Pld94
                                                   g$ae*$8849$Pld94)
                                                 (g$scheme-stx$7142$Pld94
                                                   (vector-ref
                                                     g$p$8846$Pld94
                                                     '1)))
                                             (begin '#f g$r$8850$Pld94)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv? g$t$8852$Pld94 'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$8824$Pld94
                                                g$e$8845$Pld94
                                                (vector-ref g$p$8846$Pld94 '1)
                                                (vector-ref g$p$8846$Pld94 '2)
                                                (vector-ref g$p$8846$Pld94 '3)
                                                g$m*$8847$Pld94
                                                g$s*$8848$Pld94
                                                g$ae*$8849$Pld94
                                                g$r$8850$Pld94)))
                                           (case-lambda
                                             ((g$xr*$8856$Pld94
                                                g$y-pat$8857$Pld94
                                                g$r$8858$Pld94)
                                              ((case-lambda
                                                 ((g$r$8859$Pld94
                                                    g$y-pat$8860$Pld94
                                                    g$xr*$8861$Pld94)
                                                  (if g$r$8859$Pld94
                                                    (if (null?
                                                          g$y-pat$8860$Pld94)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$8861$Pld94)
                                                          (g$match-empty$8826$Pld94
                                                            (vector-ref
                                                              g$p$8846$Pld94
                                                              '1)
                                                            g$r$8859$Pld94)
                                                          (g$combine$8827$Pld94
                                                            g$xr*$8861$Pld94
                                                            g$r$8859$Pld94)))
                                                      '#f)
                                                    '#f)))
                                               g$r$8858$Pld94
                                               g$y-pat$8857$Pld94
                                               g$xr*$8856$Pld94))))
                                         (if (eqv? g$t$8852$Pld94 'atom)
                                           (if (equal?
                                                 (vector-ref g$p$8846$Pld94 '1)
                                                 (g$strip$6931$Pld94
                                                   g$e$8845$Pld94
                                                   g$m*$8847$Pld94))
                                             (begin '#f g$r$8850$Pld94)
                                             '#f)
                                           (if (eqv? g$t$8852$Pld94 'vector)
                                             (if (vector? g$e$8845$Pld94)
                                               (begin
                                                 '#f
                                                 (g$match$8829$Pld94
                                                   (vector->list g$e$8845$Pld94)
                                                   (vector-ref
                                                     g$p$8846$Pld94
                                                     '1)
                                                   g$m*$8847$Pld94
                                                   g$s*$8848$Pld94
                                                   g$ae*$8849$Pld94
                                                   g$r$8850$Pld94))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$8846$Pld94)))))))))
                              (vector-ref g$p$8846$Pld94 '0))))))))
                  (g$match$8829$Pld94
                    (case-lambda
                      ((g$e$8830$Pld94
                         g$p$8831$Pld94
                         g$m*$8832$Pld94
                         g$s*$8833$Pld94
                         g$ae*$8834$Pld94
                         g$r$8835$Pld94)
                       (if (not g$r$8835$Pld94)
                         '#f
                         (if (eq? g$p$8831$Pld94 '_)
                           g$r$8835$Pld94
                           (if (eq? g$p$8831$Pld94 'any)
                             (cons
                               (g$stx^$8822$Pld94
                                 g$e$8830$Pld94
                                 g$m*$8832$Pld94
                                 g$s*$8833$Pld94
                                 g$ae*$8834$Pld94)
                               g$r$8835$Pld94)
                             (if (g$stx?$6893$Pld94 g$e$8830$Pld94)
                               (if (not (g$top-marked?$6864$Pld94
                                          g$m*$8832$Pld94))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$6908$Pld94
                                          g$m*$8832$Pld94
                                          g$s*$8833$Pld94
                                          g$ae*$8834$Pld94
                                          g$e$8830$Pld94)))
                                     (case-lambda
                                       ((g$m*$8839$Pld94
                                          g$s*$8840$Pld94
                                          g$ae*$8841$Pld94)
                                        ((case-lambda
                                           ((g$ae*$8842$Pld94
                                              g$s*$8843$Pld94
                                              g$m*$8844$Pld94)
                                            (g$match$8829$Pld94
                                              (g$stx-expr$6895$Pld94
                                                g$e$8830$Pld94)
                                              g$p$8831$Pld94
                                              g$m*$8844$Pld94
                                              g$s*$8843$Pld94
                                              g$ae*$8842$Pld94
                                              g$r$8835$Pld94)))
                                         g$ae*$8841$Pld94
                                         g$s*$8840$Pld94
                                         g$m*$8839$Pld94)))))
                                 '#f)
                               (if (annotation? g$e$8830$Pld94)
                                 (g$match$8829$Pld94
                                   (annotation-expression g$e$8830$Pld94)
                                   g$p$8831$Pld94
                                   g$m*$8832$Pld94
                                   g$s*$8833$Pld94
                                   g$ae*$8834$Pld94
                                   g$r$8835$Pld94)
                                 (g$match*$8828$Pld94
                                   g$e$8830$Pld94
                                   g$p$8831$Pld94
                                   g$m*$8832$Pld94
                                   g$s*$8833$Pld94
                                   g$ae*$8834$Pld94
                                   g$r$8835$Pld94))))))))))
          (g$match$8829$Pld94 g$e$8820$Pld94 g$p$8821$Pld94 '() '() '() '())))))
   (g$ellipsis?$7200$Pld94
     g$ellipsis?$10634$Pld94
     (case-lambda
       ((g$x$8934$Pld94)
        (if (g$id?$6921$Pld94 g$x$8934$Pld94)
          (begin
            '#f
            (g$free-id=?$6925$Pld94
              g$x$8934$Pld94
              (g$scheme-stx$7142$Pld94 '...)))
          '#f))))
   (g$underscore?$7201$Pld94
     g$underscore?$10635$Pld94
     (case-lambda
       ((g$x$8935$Pld94)
        (if (g$id?$6921$Pld94 g$x$8935$Pld94)
          (begin
            '#f
            (g$free-id=?$6925$Pld94
              g$x$8935$Pld94
              (g$scheme-stx$7142$Pld94 '_)))
          '#f))))
   (g$verify-literals$7202$Pld94
     g$verify-literals$10636$Pld94
     (case-lambda
       ((g$lits$8936$Pld94 g$expr$8937$Pld94)
        (for-each
          (case-lambda
            ((g$x$8938$Pld94)
             (if ((case-lambda
                    ((g$t$8939$Pld94)
                     (if g$t$8939$Pld94
                       g$t$8939$Pld94
                       ((case-lambda
                          ((g$t$8940$Pld94)
                           (if g$t$8940$Pld94
                             g$t$8940$Pld94
                             (begin
                               '#f
                               (g$underscore?$7201$Pld94 g$x$8938$Pld94)))))
                        (g$ellipsis?$7200$Pld94 g$x$8938$Pld94)))))
                  (not (g$id?$6921$Pld94 g$x$8938$Pld94)))
               (g$syntax-violation$7305$Pld94
                 '#f
                 '"invalid literal"
                 g$expr$8937$Pld94
                 g$x$8938$Pld94)
               (void))))
          g$lits$8936$Pld94))))
   (g$syntax-case-transformer$7203$Pld94
     g$syntax-case-transformer$10637$Pld94
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$8941$Pld94
                     (case-lambda
                       ((g$pvars$8998$Pld94
                          g$expr$8999$Pld94
                          g$y$9000$Pld94
                          g$r$9001$Pld94
                          g$mr$9002$Pld94)
                        ((case-lambda
                           ((g$ids$9003$Pld94 g$levels$9004$Pld94)
                            ((case-lambda
                               ((g$labels$9005$Pld94 g$new-vars$9006$Pld94)
                                ((case-lambda
                                   ((g$body$9007$Pld94)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$6852$Pld94
                                        '#f
                                        g$new-vars$9006$Pld94
                                        g$body$9007$Pld94)
                                      g$y$9000$Pld94)))
                                 (g$chi-expr$7217$Pld94
                                   (g$add-subst$6911$Pld94
                                     (g$make-full-rib$6889$Pld94
                                       g$ids$9003$Pld94
                                       g$labels$9005$Pld94)
                                     g$expr$8999$Pld94)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9008$Pld94
                                               g$var$9009$Pld94
                                               g$level$9010$Pld94)
                                             (cons
                                               g$label$9008$Pld94
                                               (g$make-binding$6937$Pld94
                                                 'syntax
                                                 (cons
                                                   g$var$9009$Pld94
                                                   g$level$9010$Pld94)))))
                                          g$labels$9005$Pld94
                                          g$new-vars$9006$Pld94
                                          (map cdr g$pvars$8998$Pld94))
                                     g$r$9001$Pld94)
                                   g$mr$9002$Pld94))))
                             (map g$gen-label$6867$Pld94 g$ids$9003$Pld94)
                             (map g$gen-lexical$6865$Pld94 g$ids$9003$Pld94))))
                         (map car g$pvars$8998$Pld94)
                         (map cdr g$pvars$8998$Pld94)))))
                   (g$invalid-ids-error$8942$Pld94
                     (case-lambda
                       ((g$id*$8992$Pld94 g$e$8993$Pld94 g$class$8994$Pld94)
                        ((letrec ((g$find$8995$Pld94
                                    (case-lambda
                                      ((g$id*$8996$Pld94 g$ok*$8997$Pld94)
                                       (if (null? g$id*$8996$Pld94)
                                         (g$syntax-violation$7305$Pld94
                                           '#f
                                           '"invalid syntax"
                                           g$e$8993$Pld94)
                                         (if (g$id?$6921$Pld94
                                               (car g$id*$8996$Pld94))
                                           (if (g$bound-id-member?$6928$Pld94
                                                 (car g$id*$8996$Pld94)
                                                 g$ok*$8997$Pld94)
                                             (g$syntax-error$7302$Pld94
                                               (car g$id*$8996$Pld94)
                                               '"duplicate "
                                               g$class$8994$Pld94)
                                             (g$find$8995$Pld94
                                               (cdr g$id*$8996$Pld94)
                                               (cons
                                                 (car g$id*$8996$Pld94)
                                                 g$ok*$8997$Pld94)))
                                           (g$syntax-error$7302$Pld94
                                             (car g$id*$8996$Pld94)
                                             '"invalid "
                                             g$class$8994$Pld94)))))))
                           g$find$8995$Pld94)
                         g$id*$8992$Pld94
                         '()))))
                   (g$gen-clause$8943$Pld94
                     (case-lambda
                       ((g$x$8972$Pld94
                          g$keys$8973$Pld94
                          g$clauses$8974$Pld94
                          g$r$8975$Pld94
                          g$mr$8976$Pld94
                          g$pat$8977$Pld94
                          g$fender$8978$Pld94
                          g$expr$8979$Pld94)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7198$Pld94
                               g$pat$8977$Pld94
                               g$keys$8973$Pld94)))
                          (case-lambda
                            ((g$p$8982$Pld94 g$pvars$8983$Pld94)
                             ((case-lambda
                                ((g$pvars$8984$Pld94 g$p$8985$Pld94)
                                 (if (not (g$distinct-bound-ids?$6927$Pld94
                                            (map car g$pvars$8984$Pld94)))
                                   (g$invalid-ids-error$8942$Pld94
                                     (map car g$pvars$8984$Pld94)
                                     g$pat$8977$Pld94
                                     '"pattern variable")
                                   (if (not (g$for-all$5349$Pld94
                                              (case-lambda
                                                ((g$x$8986$Pld94)
                                                 (not (g$ellipsis?$7200$Pld94
                                                        (car g$x$8986$Pld94)))))
                                              g$pvars$8984$Pld94))
                                     (g$syntax-violation$7305$Pld94
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$8977$Pld94)
                                     ((case-lambda
                                        ((g$y$8987$Pld94)
                                         ((case-lambda
                                            ((g$test$8988$Pld94)
                                             ((case-lambda
                                                ((g$conseq$8989$Pld94)
                                                 ((case-lambda
                                                    ((g$altern$8990$Pld94)
                                                     (list
                                                       (g$build-lambda$6852$Pld94
                                                         '#f
                                                         (list g$y$8987$Pld94)
                                                         (list
                                                           'if
                                                           g$test$8988$Pld94
                                                           g$conseq$8989$Pld94
                                                           g$altern$8990$Pld94))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$8972$Pld94
                                                         (list
                                                           'quote
                                                           g$p$8985$Pld94)))))
                                                  (g$gen-syntax-case$8944$Pld94
                                                    g$x$8972$Pld94
                                                    g$keys$8973$Pld94
                                                    g$clauses$8974$Pld94
                                                    g$r$8975$Pld94
                                                    g$mr$8976$Pld94))))
                                              (g$build-dispatch-call$8941$Pld94
                                                g$pvars$8984$Pld94
                                                g$expr$8979$Pld94
                                                g$y$8987$Pld94
                                                g$r$8975$Pld94
                                                g$mr$8976$Pld94))))
                                          (if (eq? g$fender$8978$Pld94 '#t)
                                            g$y$8987$Pld94
                                            ((case-lambda
                                               ((g$call$8991$Pld94)
                                                (list
                                                  'if
                                                  g$y$8987$Pld94
                                                  g$call$8991$Pld94
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$8941$Pld94
                                               g$pvars$8984$Pld94
                                               g$fender$8978$Pld94
                                               g$y$8987$Pld94
                                               g$r$8975$Pld94
                                               g$mr$8976$Pld94))))))
                                      (g$gen-lexical$6865$Pld94 'tmp))))))
                              g$pvars$8983$Pld94
                              g$p$8982$Pld94)))))))
                   (g$gen-syntax-case$8944$Pld94
                     (case-lambda
                       ((g$x$8955$Pld94
                          g$keys$8956$Pld94
                          g$clauses$8957$Pld94
                          g$r$8958$Pld94
                          g$mr$8959$Pld94)
                        (if (null? g$clauses$8957$Pld94)
                          (list '(primitive syntax-error) g$x$8955$Pld94)
                          ((case-lambda
                             ((g$t$8960$Pld94)
                              ((case-lambda
                                 ((g$ls/false$8961$Pld94)
                                  (if g$ls/false$8961$Pld94
                                    (apply
                                      (case-lambda
                                        ((g$pat$8962$Pld94 g$expr$8963$Pld94)
                                         (if (if (g$id?$6921$Pld94
                                                   g$pat$8962$Pld94)
                                               (if (not (g$bound-id-member?$6928$Pld94
                                                          g$pat$8962$Pld94
                                                          g$keys$8956$Pld94))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7200$Pld94
                                                          g$pat$8962$Pld94)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$6925$Pld94
                                                 g$pat$8962$Pld94
                                                 (g$scheme-stx$7142$Pld94 '_))
                                             (g$chi-expr$7217$Pld94
                                               g$expr$8963$Pld94
                                               g$r$8958$Pld94
                                               g$mr$8959$Pld94)
                                             ((case-lambda
                                                ((g$lab$8964$Pld94
                                                   g$lex$8965$Pld94)
                                                 ((case-lambda
                                                    ((g$body$8966$Pld94)
                                                     (list
                                                       (g$build-lambda$6852$Pld94
                                                         '#f
                                                         (list g$lex$8965$Pld94)
                                                         g$body$8966$Pld94)
                                                       g$x$8955$Pld94)))
                                                  (g$chi-expr$7217$Pld94
                                                    (g$add-subst$6911$Pld94
                                                      (g$make-full-rib$6889$Pld94
                                                        (list g$pat$8962$Pld94)
                                                        (list g$lab$8964$Pld94))
                                                      g$expr$8963$Pld94)
                                                    (cons
                                                      (cons
                                                        g$lab$8964$Pld94
                                                        (g$make-binding$6937$Pld94
                                                          'syntax
                                                          (cons
                                                            g$lex$8965$Pld94
                                                            '0)))
                                                      g$r$8958$Pld94)
                                                    g$mr$8959$Pld94))))
                                              (g$gen-label$6867$Pld94
                                                g$pat$8962$Pld94)
                                              (g$gen-lexical$6865$Pld94
                                                g$pat$8962$Pld94)))
                                           (g$gen-clause$8943$Pld94
                                             g$x$8955$Pld94
                                             g$keys$8956$Pld94
                                             (cdr g$clauses$8957$Pld94)
                                             g$r$8958$Pld94
                                             g$mr$8959$Pld94
                                             g$pat$8962$Pld94
                                             '#t
                                             g$expr$8963$Pld94))))
                                      g$ls/false$8961$Pld94)
                                    ((case-lambda
                                       ((g$t$8967$Pld94)
                                        ((case-lambda
                                           ((g$ls/false$8968$Pld94)
                                            (if g$ls/false$8968$Pld94
                                              (apply
                                                (case-lambda
                                                  ((g$pat$8969$Pld94
                                                     g$fender$8970$Pld94
                                                     g$expr$8971$Pld94)
                                                   (g$gen-clause$8943$Pld94
                                                     g$x$8955$Pld94
                                                     g$keys$8956$Pld94
                                                     (cdr g$clauses$8957$Pld94)
                                                     g$r$8958$Pld94
                                                     g$mr$8959$Pld94
                                                     g$pat$8969$Pld94
                                                     g$fender$8970$Pld94
                                                     g$expr$8971$Pld94)))
                                                g$ls/false$8968$Pld94)
                                              (g$syntax-violation$7305$Pld94
                                                '#f
                                                '"invalid syntax"
                                                g$t$8967$Pld94))))
                                         (g$syntax-dispatch$7199$Pld94
                                           g$t$8967$Pld94
                                           '(any any any)))))
                                     g$t$8960$Pld94))))
                               (g$syntax-dispatch$7199$Pld94
                                 g$t$8960$Pld94
                                 '(any any)))))
                           (car g$clauses$8957$Pld94)))))))
           (case-lambda
             ((g$e$8945$Pld94 g$r$8946$Pld94 g$mr$8947$Pld94)
              ((case-lambda
                 ((g$t$8948$Pld94)
                  ((case-lambda
                     ((g$ls/false$8949$Pld94)
                      (if g$ls/false$8949$Pld94
                        (apply
                          (case-lambda
                            ((g$expr$8950$Pld94
                               g$keys$8951$Pld94
                               g$clauses$8952$Pld94)
                             (begin
                               (g$verify-literals$7202$Pld94
                                 g$keys$8951$Pld94
                                 g$e$8945$Pld94)
                               ((case-lambda
                                  ((g$x$8953$Pld94)
                                   ((case-lambda
                                      ((g$body$8954$Pld94)
                                       (list
                                         (g$build-lambda$6852$Pld94
                                           '#f
                                           (list g$x$8953$Pld94)
                                           g$body$8954$Pld94)
                                         (g$chi-expr$7217$Pld94
                                           g$expr$8950$Pld94
                                           g$r$8946$Pld94
                                           g$mr$8947$Pld94))))
                                    (g$gen-syntax-case$8944$Pld94
                                      g$x$8953$Pld94
                                      g$keys$8951$Pld94
                                      g$clauses$8952$Pld94
                                      g$r$8946$Pld94
                                      g$mr$8947$Pld94))))
                                (g$gen-lexical$6865$Pld94 'tmp)))))
                          g$ls/false$8949$Pld94)
                        (g$syntax-violation$7305$Pld94
                          '#f
                          '"invalid syntax"
                          g$t$8948$Pld94))))
                   (g$syntax-dispatch$7199$Pld94
                     g$t$8948$Pld94
                     '(_ any each-any . each-any)))))
               g$e$8945$Pld94))))))))
   (g$ellipsis-map$7204$Pld94
     g$ellipsis-map$10638$Pld94
     (case-lambda
       ((g$proc$9011$Pld94 g$ls$9012$Pld94 . g$ls*$9013$Pld94)
        (letrec* ((g$who$9014$Pld94 '...))
          (begin
            (if (list? g$ls$9012$Pld94)
              (void)
              (assertion-violation
                g$who$9014$Pld94
                '"not a list"
                g$ls$9012$Pld94))
            (if (null? g$ls*$9013$Pld94)
              (void)
              ((case-lambda
                 ((g$n$9015$Pld94)
                  (for-each
                    (case-lambda
                      ((g$x$9016$Pld94)
                       (begin
                         (if (list? g$x$9016$Pld94)
                           (void)
                           (assertion-violation
                             g$who$9014$Pld94
                             '"not a list"
                             g$x$9016$Pld94))
                         (if (= (length g$x$9016$Pld94) g$n$9015$Pld94)
                           (void)
                           (assertion-violation
                             g$who$9014$Pld94
                             '"length mismatch"
                             g$ls$9012$Pld94
                             g$x$9016$Pld94)))))
                    g$ls*$9013$Pld94)))
               (length g$ls$9012$Pld94)))
            (apply map g$proc$9011$Pld94 g$ls$9012$Pld94 g$ls*$9013$Pld94))))))
   (g$syntax-transformer$7205$Pld94
     g$syntax-transformer$10639$Pld94
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9017$Pld94
                     (case-lambda
                       ((g$src$9077$Pld94
                          g$e$9078$Pld94
                          g$r$9079$Pld94
                          g$maps$9080$Pld94
                          g$ellipsis?$9081$Pld94
                          g$vec?$9082$Pld94)
                        ((case-lambda
                           ((g$t$9083$Pld94)
                            ((case-lambda
                               ((g$ls/false$9084$Pld94)
                                (if (if g$ls/false$9084$Pld94
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9085$Pld94)
                                             (g$ellipsis?$9081$Pld94
                                               g$dots$9085$Pld94)))
                                          g$ls/false$9084$Pld94))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9086$Pld94)
                                       (g$syntax-violation$7305$Pld94
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9077$Pld94)))
                                    g$ls/false$9084$Pld94)
                                  ((case-lambda
                                     ((g$t$9087$Pld94)
                                      ((case-lambda
                                         ((g$ls/false$9088$Pld94)
                                          (if (if g$ls/false$9088$Pld94
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9089$Pld94)
                                                       (g$id?$6921$Pld94
                                                         g$id$9089$Pld94)))
                                                    g$ls/false$9088$Pld94))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9090$Pld94)
                                                 ((case-lambda
                                                    ((g$label$9091$Pld94)
                                                     ((case-lambda
                                                        ((g$b$9092$Pld94)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$6938$Pld94
                                                                        g$b$9092$Pld94)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9095$Pld94)
                                                                        (g$gen-ref$9018$Pld94
                                                                          g$src$9077$Pld94
                                                                          (car g$var.lev$9095$Pld94)
                                                                          (cdr g$var.lev$9095$Pld94)
                                                                          g$maps$9080$Pld94)))
                                                                     (g$binding-value$6939$Pld94
                                                                       g$b$9092$Pld94))))
                                                                 (case-lambda
                                                                   ((g$var$9096$Pld94
                                                                      g$maps$9097$Pld94)
                                                                    ((case-lambda
                                                                       ((g$maps$9098$Pld94
                                                                          g$var$9099$Pld94)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9099$Pld94)
                                                                          g$maps$9098$Pld94)))
                                                                     g$maps$9097$Pld94
                                                                     g$var$9096$Pld94))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9078$Pld94)
                                                                 g$maps$9080$Pld94)))))))
                                                      (g$label->binding$6936$Pld94
                                                        g$label$9091$Pld94
                                                        g$r$9079$Pld94))))
                                                  (g$id->label$6934$Pld94
                                                    g$e$9078$Pld94))))
                                              g$ls/false$9088$Pld94)
                                            ((case-lambda
                                               ((g$t$9100$Pld94)
                                                ((case-lambda
                                                   ((g$ls/false$9101$Pld94)
                                                    (if (if g$ls/false$9101$Pld94
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9102$Pld94
                                                                   g$e$9103$Pld94)
                                                                 (g$ellipsis?$9081$Pld94
                                                                   g$dots$9102$Pld94)))
                                                              g$ls/false$9101$Pld94))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9104$Pld94
                                                             g$e$9105$Pld94)
                                                           (if g$vec?$9082$Pld94
                                                             (g$syntax-violation$7305$Pld94
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9077$Pld94)
                                                             (g$gen-syntax$9017$Pld94
                                                               g$src$9077$Pld94
                                                               g$e$9105$Pld94
                                                               g$r$9079$Pld94
                                                               g$maps$9080$Pld94
                                                               (case-lambda
                                                                 ((g$x$9106$Pld94)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9101$Pld94)
                                                      ((case-lambda
                                                         ((g$t$9107$Pld94)
                                                          ((case-lambda
                                                             ((g$ls/false$9108$Pld94)
                                                              (if (if g$ls/false$9108$Pld94
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9109$Pld94
                                                                             g$dots$9110$Pld94
                                                                             g$y$9111$Pld94)
                                                                           (g$ellipsis?$9081$Pld94
                                                                             g$dots$9110$Pld94)))
                                                                        g$ls/false$9108$Pld94))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9112$Pld94
                                                                       g$dots$9113$Pld94
                                                                       g$y$9114$Pld94)
                                                                     ((letrec ((g$f$9115$Pld94
                                                                                 (case-lambda
                                                                                   ((g$y$9116$Pld94
                                                                                      g$k$9117$Pld94)
                                                                                    ((case-lambda
                                                                                       ((g$t$9118$Pld94)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9119$Pld94)
                                                                                            (if g$ls/false$9119$Pld94
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9117$Pld94
                                                                                                     g$maps$9080$Pld94)))
                                                                                                g$ls/false$9119$Pld94)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9120$Pld94)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9121$Pld94)
                                                                                                      (if (if g$ls/false$9121$Pld94
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9122$Pld94
                                                                                                                     g$y$9123$Pld94)
                                                                                                                   (g$ellipsis?$9081$Pld94
                                                                                                                     g$dots$9122$Pld94)))
                                                                                                                g$ls/false$9121$Pld94))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9124$Pld94
                                                                                                               g$y$9125$Pld94)
                                                                                                             (g$f$9115$Pld94
                                                                                                               g$y$9125$Pld94
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9126$Pld94)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9117$Pld94
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9126$Pld94))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9129$Pld94
                                                                                                                         g$maps$9130$Pld94)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9131$Pld94
                                                                                                                             g$x$9132$Pld94)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9131$Pld94))
                                                                                                                             (g$syntax-violation$7305$Pld94
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9077$Pld94)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9020$Pld94
                                                                                                                                 g$x$9132$Pld94
                                                                                                                                 (car g$maps$9131$Pld94))
                                                                                                                               (cdr g$maps$9131$Pld94)))))
                                                                                                                        g$maps$9130$Pld94
                                                                                                                        g$x$9129$Pld94)))))))))
                                                                                                          g$ls/false$9121$Pld94)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9133$Pld94)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9134$Pld94)
                                                                                                                (if g$ls/false$9134$Pld94
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9017$Pld94
                                                                                                                              g$src$9077$Pld94
                                                                                                                              g$y$9116$Pld94
                                                                                                                              g$r$9079$Pld94
                                                                                                                              g$maps$9080$Pld94
                                                                                                                              g$ellipsis?$9081$Pld94
                                                                                                                              g$vec?$9082$Pld94)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9137$Pld94
                                                                                                                              g$maps$9138$Pld94)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9139$Pld94
                                                                                                                                  g$y$9140$Pld94)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9117$Pld94
                                                                                                                                       g$maps$9139$Pld94)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9143$Pld94
                                                                                                                                       g$maps$9144$Pld94)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9145$Pld94
                                                                                                                                           g$x$9146$Pld94)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9019$Pld94
                                                                                                                                             g$x$9146$Pld94
                                                                                                                                             g$y$9140$Pld94)
                                                                                                                                           g$maps$9145$Pld94)))
                                                                                                                                      g$maps$9144$Pld94
                                                                                                                                      g$x$9143$Pld94))))))
                                                                                                                             g$maps$9138$Pld94
                                                                                                                             g$y$9137$Pld94))))))
                                                                                                                    g$ls/false$9134$Pld94)
                                                                                                                  (g$syntax-violation$7305$Pld94
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9133$Pld94))))
                                                                                                             (g$syntax-dispatch$7199$Pld94
                                                                                                               g$t$9133$Pld94
                                                                                                               '_))))
                                                                                                         g$t$9120$Pld94))))
                                                                                                   (g$syntax-dispatch$7199$Pld94
                                                                                                     g$t$9120$Pld94
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9118$Pld94))))
                                                                                         (g$syntax-dispatch$7199$Pld94
                                                                                           g$t$9118$Pld94
                                                                                           '()))))
                                                                                     g$y$9116$Pld94)))))
                                                                        g$f$9115$Pld94)
                                                                      g$y$9114$Pld94
                                                                      (case-lambda
                                                                        ((g$maps$9147$Pld94)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9017$Pld94
                                                                                g$src$9077$Pld94
                                                                                g$x$9112$Pld94
                                                                                g$r$9079$Pld94
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9147$Pld94)
                                                                                g$ellipsis?$9081$Pld94
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9150$Pld94
                                                                                g$maps$9151$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$maps$9152$Pld94
                                                                                    g$x$9153$Pld94)
                                                                                  (if (null?
                                                                                        (car g$maps$9152$Pld94))
                                                                                    (g$syntax-violation$7305$Pld94
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9077$Pld94)
                                                                                    (values
                                                                                      (g$gen-map$9021$Pld94
                                                                                        g$x$9153$Pld94
                                                                                        (car g$maps$9152$Pld94))
                                                                                      (cdr g$maps$9152$Pld94)))))
                                                                               g$maps$9151$Pld94
                                                                               g$x$9150$Pld94)))))))))
                                                                  g$ls/false$9108$Pld94)
                                                                ((case-lambda
                                                                   ((g$t$9154$Pld94)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9155$Pld94)
                                                                        (if g$ls/false$9155$Pld94
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9156$Pld94
                                                                                 g$y$9157$Pld94)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9017$Pld94
                                                                                      g$src$9077$Pld94
                                                                                      g$x$9156$Pld94
                                                                                      g$r$9079$Pld94
                                                                                      g$maps$9080$Pld94
                                                                                      g$ellipsis?$9081$Pld94
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9160$Pld94
                                                                                      g$maps$9161$Pld94)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9162$Pld94
                                                                                          g$xnew$9163$Pld94)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9017$Pld94
                                                                                               g$src$9077$Pld94
                                                                                               g$y$9157$Pld94
                                                                                               g$r$9079$Pld94
                                                                                               g$maps$9162$Pld94
                                                                                               g$ellipsis?$9081$Pld94
                                                                                               g$vec?$9082$Pld94)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9166$Pld94
                                                                                               g$maps$9167$Pld94)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9168$Pld94
                                                                                                   g$ynew$9169$Pld94)
                                                                                                 (values
                                                                                                   (g$gen-cons$9022$Pld94
                                                                                                     g$e$9078$Pld94
                                                                                                     g$x$9156$Pld94
                                                                                                     g$y$9157$Pld94
                                                                                                     g$xnew$9163$Pld94
                                                                                                     g$ynew$9169$Pld94)
                                                                                                   g$maps$9168$Pld94)))
                                                                                              g$maps$9167$Pld94
                                                                                              g$ynew$9166$Pld94))))))
                                                                                     g$maps$9161$Pld94
                                                                                     g$xnew$9160$Pld94))))))
                                                                            g$ls/false$9155$Pld94)
                                                                          ((case-lambda
                                                                             ((g$t$9170$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9171$Pld94)
                                                                                  (if g$ls/false$9171$Pld94
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9172$Pld94)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9017$Pld94
                                                                                                g$src$9077$Pld94
                                                                                                g$ls$9172$Pld94
                                                                                                g$r$9079$Pld94
                                                                                                g$maps$9080$Pld94
                                                                                                g$ellipsis?$9081$Pld94
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9175$Pld94
                                                                                                g$maps$9176$Pld94)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9177$Pld94
                                                                                                    g$lsnew$9178$Pld94)
                                                                                                  (values
                                                                                                    (g$gen-vector$9023$Pld94
                                                                                                      g$e$9078$Pld94
                                                                                                      g$ls$9172$Pld94
                                                                                                      g$lsnew$9178$Pld94)
                                                                                                    g$maps$9177$Pld94)))
                                                                                               g$maps$9176$Pld94
                                                                                               g$lsnew$9175$Pld94))))))
                                                                                      g$ls/false$9171$Pld94)
                                                                                    ((case-lambda
                                                                                       ((g$t$9179$Pld94)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9180$Pld94)
                                                                                            (if g$ls/false$9180$Pld94
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9078$Pld94)
                                                                                                     g$maps$9080$Pld94)))
                                                                                                g$ls/false$9180$Pld94)
                                                                                              (g$syntax-violation$7305$Pld94
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9179$Pld94))))
                                                                                         (g$syntax-dispatch$7199$Pld94
                                                                                           g$t$9179$Pld94
                                                                                           '_))))
                                                                                     g$t$9170$Pld94))))
                                                                               (g$syntax-dispatch$7199$Pld94
                                                                                 g$t$9170$Pld94
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9154$Pld94))))
                                                                     (g$syntax-dispatch$7199$Pld94
                                                                       g$t$9154$Pld94
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9107$Pld94))))
                                                           (g$syntax-dispatch$7199$Pld94
                                                             g$t$9107$Pld94
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9100$Pld94))))
                                                 (g$syntax-dispatch$7199$Pld94
                                                   g$t$9100$Pld94
                                                   '(any any)))))
                                             g$t$9087$Pld94))))
                                       (g$syntax-dispatch$7199$Pld94
                                         g$t$9087$Pld94
                                         'any))))
                                   g$t$9083$Pld94))))
                             (g$syntax-dispatch$7199$Pld94
                               g$t$9083$Pld94
                               'any))))
                         g$e$9078$Pld94))))
                   (g$gen-ref$9018$Pld94
                     (case-lambda
                       ((g$src$9064$Pld94
                          g$var$9065$Pld94
                          g$level$9066$Pld94
                          g$maps$9067$Pld94)
                        (if (= g$level$9066$Pld94 '0)
                          (values g$var$9065$Pld94 g$maps$9067$Pld94)
                          (if (null? g$maps$9067$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9064$Pld94)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9018$Pld94
                                   g$src$9064$Pld94
                                   g$var$9065$Pld94
                                   (- g$level$9066$Pld94 '1)
                                   (cdr g$maps$9067$Pld94))))
                              (case-lambda
                                ((g$outer-var$9070$Pld94
                                   g$outer-maps$9071$Pld94)
                                 ((case-lambda
                                    ((g$outer-maps$9072$Pld94
                                       g$outer-var$9073$Pld94)
                                     ((case-lambda
                                        ((g$t$9074$Pld94)
                                         (if g$t$9074$Pld94
                                           ((case-lambda
                                              ((g$b$9075$Pld94)
                                               (values
                                                 (cdr g$b$9075$Pld94)
                                                 g$maps$9067$Pld94)))
                                            g$t$9074$Pld94)
                                           ((case-lambda
                                              ((g$inner-var$9076$Pld94)
                                               (values
                                                 g$inner-var$9076$Pld94
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9073$Pld94
                                                       g$inner-var$9076$Pld94)
                                                     (car g$maps$9067$Pld94))
                                                   g$outer-maps$9072$Pld94))))
                                            (g$gen-lexical$6865$Pld94 'tmp)))))
                                      (assq
                                        g$outer-var$9073$Pld94
                                        (car g$maps$9067$Pld94)))))
                                  g$outer-maps$9071$Pld94
                                  g$outer-var$9070$Pld94)))))))))
                   (g$gen-append$9019$Pld94
                     (case-lambda
                       ((g$x$9062$Pld94 g$y$9063$Pld94)
                        (if (equal? g$y$9063$Pld94 ''())
                          g$x$9062$Pld94
                          (list 'append g$x$9062$Pld94 g$y$9063$Pld94)))))
                   (g$gen-mappend$9020$Pld94
                     (case-lambda
                       ((g$e$9060$Pld94 g$map-env$9061$Pld94)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9021$Pld94
                            g$e$9060$Pld94
                            g$map-env$9061$Pld94)))))
                   (g$gen-map$9021$Pld94
                     (case-lambda
                       ((g$e$9051$Pld94 g$map-env$9052$Pld94)
                        ((case-lambda
                           ((g$formals$9053$Pld94 g$actuals$9054$Pld94)
                            (if (eq? (car g$e$9051$Pld94) 'ref)
                              (car g$actuals$9054$Pld94)
                              (if (g$for-all$5349$Pld94
                                    (case-lambda
                                      ((g$x$9055$Pld94)
                                       (if (eq? (car g$x$9055$Pld94) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$4880$Pld94 g$x$9055$Pld94)
                                             g$formals$9053$Pld94))
                                         '#f)))
                                    (cdr g$e$9051$Pld94))
                                ((case-lambda
                                   ((g$args$9056$Pld94)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9051$Pld94))
                                        g$args$9056$Pld94))))
                                 (map ((case-lambda
                                         ((g$r$9057$Pld94)
                                          (case-lambda
                                            ((g$x$9058$Pld94)
                                             (cdr (assq
                                                    (g$cadr$4880$Pld94
                                                      g$x$9058$Pld94)
                                                    g$r$9057$Pld94))))))
                                       (map cons
                                            g$formals$9053$Pld94
                                            g$actuals$9054$Pld94))
                                      (cdr g$e$9051$Pld94)))
                                (g$cons*$5351$Pld94
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9053$Pld94
                                    g$e$9051$Pld94)
                                  g$actuals$9054$Pld94)))))
                         (map cdr g$map-env$9052$Pld94)
                         (map (case-lambda
                                ((g$x$9059$Pld94)
                                 (list 'ref (car g$x$9059$Pld94))))
                              g$map-env$9052$Pld94)))))
                   (g$gen-cons$9022$Pld94
                     (case-lambda
                       ((g$e$9043$Pld94
                          g$x$9044$Pld94
                          g$y$9045$Pld94
                          g$xnew$9046$Pld94
                          g$ynew$9047$Pld94)
                        ((case-lambda
                           ((g$t$9048$Pld94)
                            (if (eqv? g$t$9048$Pld94 'quote)
                              (if (eq? (car g$xnew$9046$Pld94) 'quote)
                                ((case-lambda
                                   ((g$xnew$9049$Pld94 g$ynew$9050$Pld94)
                                    (if (if (eq? g$xnew$9049$Pld94
                                                 g$x$9044$Pld94)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9050$Pld94
                                                 g$y$9045$Pld94))
                                          '#f)
                                      (list 'quote g$e$9043$Pld94)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9049$Pld94
                                          g$ynew$9050$Pld94)))))
                                 (g$cadr$4880$Pld94 g$xnew$9046$Pld94)
                                 (g$cadr$4880$Pld94 g$ynew$9047$Pld94))
                                (if (null?
                                      (g$cadr$4880$Pld94 g$ynew$9047$Pld94))
                                  (list 'list g$xnew$9046$Pld94)
                                  (list
                                    'cons
                                    g$xnew$9046$Pld94
                                    g$ynew$9047$Pld94)))
                              (if (eqv? g$t$9048$Pld94 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9046$Pld94
                                    (cdr g$ynew$9047$Pld94)))
                                (list
                                  'cons
                                  g$xnew$9046$Pld94
                                  g$ynew$9047$Pld94)))))
                         (car g$ynew$9047$Pld94)))))
                   (g$gen-vector$9023$Pld94
                     (case-lambda
                       ((g$e$9040$Pld94 g$ls$9041$Pld94 g$lsnew$9042$Pld94)
                        (if (eq? (car g$lsnew$9042$Pld94) 'quote)
                          (if (eq? (g$cadr$4880$Pld94 g$lsnew$9042$Pld94)
                                   g$ls$9041$Pld94)
                            (list 'quote g$e$9040$Pld94)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$4880$Pld94 g$lsnew$9042$Pld94))))
                          (if (eq? (car g$lsnew$9042$Pld94) 'list)
                            (cons 'vector (cdr g$lsnew$9042$Pld94))
                            (list 'list->vector g$lsnew$9042$Pld94))))))
                   (g$regen$9024$Pld94
                     (case-lambda
                       ((g$x$9037$Pld94)
                        ((case-lambda
                           ((g$t$9038$Pld94)
                            (if (eqv? g$t$9038$Pld94 'ref)
                              (g$cadr$4880$Pld94 g$x$9037$Pld94)
                              (if (eqv? g$t$9038$Pld94 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$4880$Pld94 g$x$9037$Pld94))
                                (if (eqv? g$t$9038$Pld94 'quote)
                                  (list
                                    'quote
                                    (g$cadr$4880$Pld94 g$x$9037$Pld94))
                                  (if (eqv? g$t$9038$Pld94 'lambda)
                                    (g$build-lambda$6852$Pld94
                                      '#f
                                      (g$cadr$4880$Pld94 g$x$9037$Pld94)
                                      (g$regen$9024$Pld94
                                        (g$caddr$4886$Pld94 g$x$9037$Pld94)))
                                    (if (eqv? g$t$9038$Pld94 'map)
                                      ((case-lambda
                                         ((g$ls$9039$Pld94)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9039$Pld94)))
                                       (map g$regen$9024$Pld94
                                            (cdr g$x$9037$Pld94)))
                                      (cons
                                        (list 'primitive (car g$x$9037$Pld94))
                                        (map g$regen$9024$Pld94
                                             (cdr g$x$9037$Pld94))))))))))
                         (car g$x$9037$Pld94))))))
           (case-lambda
             ((g$e$9025$Pld94 g$r$9026$Pld94 g$mr$9027$Pld94)
              ((case-lambda
                 ((g$t$9028$Pld94)
                  ((case-lambda
                     ((g$ls/false$9029$Pld94)
                      (if g$ls/false$9029$Pld94
                        (apply
                          (case-lambda
                            ((g$x$9030$Pld94)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9017$Pld94
                                    g$e$9025$Pld94
                                    g$x$9030$Pld94
                                    g$r$9026$Pld94
                                    '()
                                    g$ellipsis?$7200$Pld94
                                    '#f)))
                               (case-lambda
                                 ((g$e$9033$Pld94 g$maps$9034$Pld94)
                                  ((case-lambda
                                     ((g$maps$9035$Pld94 g$e$9036$Pld94)
                                      (g$regen$9024$Pld94 g$e$9036$Pld94)))
                                   g$maps$9034$Pld94
                                   g$e$9033$Pld94))))))
                          g$ls/false$9029$Pld94)
                        (g$syntax-violation$7305$Pld94
                          '#f
                          '"invalid syntax"
                          g$t$9028$Pld94))))
                   (g$syntax-dispatch$7199$Pld94 g$t$9028$Pld94 '(_ any)))))
               g$e$9025$Pld94))))))))
   (g$core-macro-transformer$7206$Pld94
     g$core-macro-transformer$10640$Pld94
     (case-lambda
       ((g$name$9181$Pld94)
        ((case-lambda
           ((g$t$9182$Pld94)
            (if (eqv? g$t$9182$Pld94 'quote)
              g$quote-transformer$7159$Pld94
              (if (eqv? g$t$9182$Pld94 'lambda)
                g$lambda-transformer$7161$Pld94
                (if (eqv? g$t$9182$Pld94 'case-lambda)
                  g$case-lambda-transformer$7160$Pld94
                  (if (eqv? g$t$9182$Pld94 'letrec)
                    g$letrec-transformer$7149$Pld94
                    (if (eqv? g$t$9182$Pld94 'letrec*)
                      g$letrec*-transformer$7150$Pld94
                      (if (eqv? g$t$9182$Pld94 'case)
                        g$case-transformer$7158$Pld94
                        (if (eqv? g$t$9182$Pld94 'if)
                          g$if-transformer$7157$Pld94
                          (if (eqv? g$t$9182$Pld94 'when)
                            g$when-transformer$7155$Pld94
                            (if (eqv? g$t$9182$Pld94 'unless)
                              g$unless-transformer$7156$Pld94
                              (if (eqv? g$t$9182$Pld94 'parameterize)
                                g$parameterize-transformer$7196$Pld94
                                (if (eqv? g$t$9182$Pld94 'foreign-call)
                                  g$foreign-call-transformer$7197$Pld94
                                  (if (eqv? g$t$9182$Pld94 'syntax-case)
                                    g$syntax-case-transformer$7203$Pld94
                                    (if (eqv? g$t$9182$Pld94 'syntax)
                                      g$syntax-transformer$7205$Pld94
                                      (if (eqv? g$t$9182$Pld94 'type-descriptor)
                                        g$type-descriptor-transformer$7152$Pld94
                                        (if (eqv?
                                              g$t$9182$Pld94
                                              'record-type-descriptor)
                                          g$record-type-descriptor-transformer$7153$Pld94
                                          (if (eqv?
                                                g$t$9182$Pld94
                                                'record-constructor-descriptor)
                                            g$record-constructor-descriptor-transformer$7154$Pld94
                                            (if (eqv?
                                                  g$t$9182$Pld94
                                                  'fluid-let-syntax)
                                              g$fluid-let-syntax-transformer$7151$Pld94
                                              (assertion-violation
                                                'macro-transformer
                                                '"BUG: cannot find transformer"
                                                g$name$9181$Pld94))))))))))))))))))))
         g$name$9181$Pld94))))
   (g$file-options-macro$7207$Pld94
     g$file-options-macro$10641$Pld94
     (case-lambda
       ((g$x$9183$Pld94)
        ((case-lambda
           ((g$t$9184$Pld94)
            ((case-lambda
               ((g$ls/false$9185$Pld94)
                (if (if g$ls/false$9185$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9186$Pld94)
                             (if (g$for-all$5349$Pld94
                                   g$id?$6921$Pld94
                                   g$opt*$9186$Pld94)
                               (begin
                                 '#f
                                 (g$file-options-spec$6190$Pld94
                                   (map g$id->sym$6922$Pld94
                                        g$opt*$9186$Pld94)))
                               '#f)))
                          g$ls/false$9185$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9187$Pld94)
                       (g$bless$7162$Pld94
                         (list
                           'quote
                           (g$file-options-spec$6190$Pld94
                             (map g$id->sym$6922$Pld94 g$opt*$9187$Pld94))))))
                    g$ls/false$9185$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$9184$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$9184$Pld94 '(_ . each-any)))))
         g$x$9183$Pld94))))
   (g$symbol-macro$7208$Pld94
     g$symbol-macro$10642$Pld94
     (case-lambda
       ((g$x$9188$Pld94 g$set$9189$Pld94)
        ((case-lambda
           ((g$t$9190$Pld94)
            ((case-lambda
               ((g$ls/false$9191$Pld94)
                (if (if g$ls/false$9191$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9192$Pld94)
                             (if (g$id?$6921$Pld94 g$name$9192$Pld94)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$6922$Pld94 g$name$9192$Pld94)
                                   g$set$9189$Pld94))
                               '#f)))
                          g$ls/false$9191$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9193$Pld94)
                       (g$bless$7162$Pld94 (list 'quote g$name$9193$Pld94))))
                    g$ls/false$9191$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$9190$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$9190$Pld94 '(_ any)))))
         g$x$9188$Pld94))))
   (g$macro-transformer$7209$Pld94
     g$macro-transformer$10643$Pld94
     (case-lambda
       ((g$x$9194$Pld94)
        (if (procedure? g$x$9194$Pld94)
          g$x$9194$Pld94
          (if (symbol? g$x$9194$Pld94)
            ((case-lambda
               ((g$t$9195$Pld94)
                (if (eqv? g$t$9195$Pld94 'define-record-type)
                  g$define-record-type-macro$7193$Pld94
                  (if (eqv? g$t$9195$Pld94 'define-struct)
                    g$define-struct-macro$7192$Pld94
                    (if (eqv? g$t$9195$Pld94 'include)
                      g$include-macro$7187$Pld94
                      (if (eqv? g$t$9195$Pld94 'cond)
                        g$cond-macro$7185$Pld94
                        (if (eqv? g$t$9195$Pld94 'let)
                          g$let-macro$7165$Pld94
                          (if (eqv? g$t$9195$Pld94 'do)
                            g$do-macro$7181$Pld94
                            (if (eqv? g$t$9195$Pld94 'or)
                              g$or-macro$7183$Pld94
                              (if (eqv? g$t$9195$Pld94 'and)
                                g$and-macro$7184$Pld94
                                (if (eqv? g$t$9195$Pld94 'let*)
                                  g$let*-macro$7182$Pld94
                                  (if (eqv? g$t$9195$Pld94 'let-values)
                                    g$let-values-macro$7166$Pld94
                                    (if (eqv? g$t$9195$Pld94 'let*-values)
                                      g$let*-values-macro$7167$Pld94
                                      (if (eqv? g$t$9195$Pld94 'syntax-rules)
                                        g$syntax-rules-macro$7189$Pld94
                                        (if (eqv? g$t$9195$Pld94 'quasiquote)
                                          g$quasiquote-macro$7190$Pld94
                                          (if (eqv? g$t$9195$Pld94 'quasisyntax)
                                            g$quasisyntax-macro$7191$Pld94
                                            (if (eqv?
                                                  g$t$9195$Pld94
                                                  'with-syntax)
                                              g$with-syntax-macro$7163$Pld94
                                              (if (eqv?
                                                    g$t$9195$Pld94
                                                    'identifier-syntax)
                                                g$identifier-syntax-macro$7180$Pld94
                                                (if (eqv? g$t$9195$Pld94 'time)
                                                  g$time-macro$7176$Pld94
                                                  (if (eqv?
                                                        g$t$9195$Pld94
                                                        'delay)
                                                    g$delay-macro$7177$Pld94
                                                    (if (eqv?
                                                          g$t$9195$Pld94
                                                          'assert)
                                                      g$assert-macro$7178$Pld94
                                                      (if (eqv?
                                                            g$t$9195$Pld94
                                                            'endianness)
                                                        g$endianness-macro$7179$Pld94
                                                        (if (eqv?
                                                              g$t$9195$Pld94
                                                              'guard)
                                                          g$guard-macro$7174$Pld94
                                                          (if (eqv?
                                                                g$t$9195$Pld94
                                                                'define-enumeration)
                                                            g$define-enumeration-macro$7175$Pld94
                                                            (if (eqv?
                                                                  g$t$9195$Pld94
                                                                  'trace-lambda)
                                                              g$trace-lambda-macro$7168$Pld94
                                                              (if (eqv?
                                                                    g$t$9195$Pld94
                                                                    'trace-define)
                                                                g$trace-define-macro$7169$Pld94
                                                                (if (eqv?
                                                                      g$t$9195$Pld94
                                                                      'trace-define-syntax)
                                                                  g$trace-define-syntax-macro$7170$Pld94
                                                                  (if (eqv?
                                                                        g$t$9195$Pld94
                                                                        'trace-let-syntax)
                                                                    g$trace-let-syntax-macro$7172$Pld94
                                                                    (if (eqv?
                                                                          g$t$9195$Pld94
                                                                          'trace-letrec-syntax)
                                                                      g$trace-letrec-syntax-macro$7173$Pld94
                                                                      (if (eqv?
                                                                            g$t$9195$Pld94
                                                                            'define-condition-type)
                                                                        g$define-condition-type-macro$7194$Pld94
                                                                        (if (eqv?
                                                                              g$t$9195$Pld94
                                                                              'include-into)
                                                                          g$include-into-macro$7188$Pld94
                                                                          (if (eqv?
                                                                                g$t$9195$Pld94
                                                                                'eol-style)
                                                                            (case-lambda
                                                                              ((g$x$9198$Pld94)
                                                                               (g$symbol-macro$7208$Pld94
                                                                                 g$x$9198$Pld94
                                                                                 '(none
                                                                                    lf
                                                                                    cr
                                                                                    crlf
                                                                                    nel
                                                                                    crnel
                                                                                    ls))))
                                                                            (if (eqv?
                                                                                  g$t$9195$Pld94
                                                                                  'error-handling-mode)
                                                                              (case-lambda
                                                                                ((g$x$9197$Pld94)
                                                                                 (g$symbol-macro$7208$Pld94
                                                                                   g$x$9197$Pld94
                                                                                   '(ignore
                                                                                      raise
                                                                                      replace))))
                                                                              (if (eqv?
                                                                                    g$t$9195$Pld94
                                                                                    'buffer-mode)
                                                                                (case-lambda
                                                                                  ((g$x$9196$Pld94)
                                                                                   (g$symbol-macro$7208$Pld94
                                                                                     g$x$9196$Pld94
                                                                                     '(none
                                                                                        line
                                                                                        block))))
                                                                                (if (eqv?
                                                                                      g$t$9195$Pld94
                                                                                      'file-options)
                                                                                  g$file-options-macro$7207$Pld94
                                                                                  (if (memv
                                                                                        g$t$9195$Pld94
                                                                                        '(... =>
                                                                                              _
                                                                                              else
                                                                                              unquote
                                                                                              unquote-splicing
                                                                                              unsyntax
                                                                                              unsyntax-splicing
                                                                                              fields
                                                                                              mutable
                                                                                              immutable
                                                                                              parent
                                                                                              protocol
                                                                                              sealed
                                                                                              opaque
                                                                                              nongenerative
                                                                                              parent-rtd))
                                                                                    g$incorrect-usage-macro$7195$Pld94
                                                                                    (error
                                                                                      'macro-transformer
                                                                                      '"BUG: invalid macro"
                                                                                      g$x$9194$Pld94)))))))))))))))))))))))))))))))))))))
             g$x$9194$Pld94)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9194$Pld94))))))
   (g$local-macro-transformer$7210$Pld94
     g$local-macro-transformer$10644$Pld94
     (case-lambda ((g$x$9199$Pld94) (car g$x$9199$Pld94))))
   (g$do-macro-call$7211$Pld94
     g$do-macro-call$10645$Pld94
     (case-lambda
       ((g$transformer$9200$Pld94 g$expr$9201$Pld94)
        ((case-lambda
           ((g$out$9202$Pld94)
            (begin
              ((letrec ((g$f$9203$Pld94
                          (case-lambda
                            ((g$x$9204$Pld94)
                             (if (g$stx?$6893$Pld94 g$x$9204$Pld94)
                               (void)
                               (if (pair? g$x$9204$Pld94)
                                 (begin
                                   (g$f$9203$Pld94 (car g$x$9204$Pld94))
                                   (g$f$9203$Pld94 (cdr g$x$9204$Pld94)))
                                 (if (vector? g$x$9204$Pld94)
                                   (vector-for-each
                                     g$f$9203$Pld94
                                     g$x$9204$Pld94)
                                   (if (symbol? g$x$9204$Pld94)
                                     (g$syntax-violation$7305$Pld94
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9201$Pld94
                                       g$x$9204$Pld94)
                                     (void)))))))))
                 g$f$9203$Pld94)
               g$out$9202$Pld94)
              (g$add-mark$6910$Pld94
                (g$gen-mark$6905$Pld94)
                g$out$9202$Pld94
                g$expr$9201$Pld94))))
         (g$transformer$9200$Pld94
           (g$add-mark$6910$Pld94
             g$anti-mark$6906$Pld94
             g$expr$9201$Pld94
             '#f))))))
   (g$chi-macro$7212$Pld94
     g$chi-macro$10646$Pld94
     (case-lambda
       ((g$p$9205$Pld94 g$e$9206$Pld94)
        (g$do-macro-call$7211$Pld94
          (g$macro-transformer$7209$Pld94 g$p$9205$Pld94)
          g$e$9206$Pld94))))
   (g$chi-local-macro$7213$Pld94
     g$chi-local-macro$10647$Pld94
     (case-lambda
       ((g$p$9207$Pld94 g$e$9208$Pld94)
        (g$do-macro-call$7211$Pld94
          (g$local-macro-transformer$7210$Pld94 g$p$9207$Pld94)
          g$e$9208$Pld94))))
   (g$chi-global-macro$7214$Pld94
     g$chi-global-macro$10648$Pld94
     (case-lambda
       ((g$p$9209$Pld94 g$e$9210$Pld94)
        ((case-lambda
           ((g$lib$9211$Pld94 g$loc$9212$Pld94)
            (begin
              (g$visit-library$6737$Pld94 g$lib$9211$Pld94)
              ((case-lambda
                 ((g$x$9213$Pld94)
                  ((case-lambda
                     ((g$transformer$9214$Pld94)
                      (g$do-macro-call$7211$Pld94
                        g$transformer$9214$Pld94
                        g$e$9210$Pld94)))
                   (if (procedure? g$x$9213$Pld94)
                     g$x$9213$Pld94
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9213$Pld94)))))
               (symbol-value g$loc$9212$Pld94)))))
         (car g$p$9209$Pld94)
         (cdr g$p$9209$Pld94)))))
   (g$chi-expr*$7215$Pld94
     g$chi-expr*$10649$Pld94
     (case-lambda
       ((g$e*$9215$Pld94 g$r$9216$Pld94 g$mr$9217$Pld94)
        (if (null? g$e*$9215$Pld94)
          '()
          ((case-lambda
             ((g$e$9218$Pld94)
              (cons
                g$e$9218$Pld94
                (g$chi-expr*$7215$Pld94
                  (cdr g$e*$9215$Pld94)
                  g$r$9216$Pld94
                  g$mr$9217$Pld94))))
           (g$chi-expr$7217$Pld94
             (car g$e*$9215$Pld94)
             g$r$9216$Pld94
             g$mr$9217$Pld94))))))
   (g$chi-application$7216$Pld94
     g$chi-application$10650$Pld94
     (case-lambda
       ((g$e$9219$Pld94 g$r$9220$Pld94 g$mr$9221$Pld94)
        ((case-lambda
           ((g$t$9222$Pld94)
            ((case-lambda
               ((g$ls/false$9223$Pld94)
                (if g$ls/false$9223$Pld94
                  (apply
                    (case-lambda
                      ((g$rator$9224$Pld94 g$rands$9225$Pld94)
                       ((case-lambda
                          ((g$rator$9226$Pld94)
                           (cons
                             g$rator$9226$Pld94
                             (g$chi-expr*$7215$Pld94
                               g$rands$9225$Pld94
                               g$r$9220$Pld94
                               g$mr$9221$Pld94))))
                        (g$chi-expr$7217$Pld94
                          g$rator$9224$Pld94
                          g$r$9220$Pld94
                          g$mr$9221$Pld94))))
                    g$ls/false$9223$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$9222$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$9222$Pld94 '(any . each-any)))))
         g$e$9219$Pld94))))
   (g$chi-expr$7217$Pld94
     g$chi-expr$10651$Pld94
     (case-lambda
       ((g$e$9227$Pld94 g$r$9228$Pld94 g$mr$9229$Pld94)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$6941$Pld94 g$e$9227$Pld94 g$r$9228$Pld94)))
          (case-lambda
            ((g$type$9233$Pld94 g$value$9234$Pld94 g$kwd$9235$Pld94)
             ((case-lambda
                ((g$kwd$9236$Pld94 g$value$9237$Pld94 g$type$9238$Pld94)
                 ((case-lambda
                    ((g$t$9239$Pld94)
                     (if (eqv? g$t$9239$Pld94 'core-macro)
                       ((case-lambda
                          ((g$transformer$9265$Pld94)
                           (g$transformer$9265$Pld94
                             g$e$9227$Pld94
                             g$r$9228$Pld94
                             g$mr$9229$Pld94)))
                        (g$core-macro-transformer$7206$Pld94
                          g$value$9237$Pld94))
                       (if (eqv? g$t$9239$Pld94 'global)
                         ((case-lambda
                            ((g$lib$9263$Pld94)
                             ((case-lambda
                                ((g$loc$9264$Pld94)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7251$Pld94)
                                        g$lib$9263$Pld94)
                                       g$loc$9264$Pld94))))))
                              (cdr g$value$9237$Pld94))))
                          (car g$value$9237$Pld94))
                         (if (eqv? g$t$9239$Pld94 'core-prim)
                           ((case-lambda
                              ((g$name$9262$Pld94)
                               (list 'primitive g$name$9262$Pld94)))
                            g$value$9237$Pld94)
                           (if (eqv? g$t$9239$Pld94 'call)
                             (g$chi-application$7216$Pld94
                               g$e$9227$Pld94
                               g$r$9228$Pld94
                               g$mr$9229$Pld94)
                             (if (eqv? g$t$9239$Pld94 'lexical)
                               ((case-lambda
                                  ((g$lex$9261$Pld94) g$lex$9261$Pld94))
                                (g$lexical-var$7143$Pld94 g$value$9237$Pld94))
                               (if (memv
                                     g$t$9239$Pld94
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7217$Pld94
                                   (g$chi-global-macro$7214$Pld94
                                     g$value$9237$Pld94
                                     g$e$9227$Pld94)
                                   g$r$9228$Pld94
                                   g$mr$9229$Pld94)
                                 (if (memv
                                       g$t$9239$Pld94
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7217$Pld94
                                     (g$chi-local-macro$7213$Pld94
                                       g$value$9237$Pld94
                                       g$e$9227$Pld94)
                                     g$r$9228$Pld94
                                     g$mr$9229$Pld94)
                                   (if (memv g$t$9239$Pld94 '(macro macro!))
                                     (g$chi-expr$7217$Pld94
                                       (g$chi-macro$7212$Pld94
                                         g$value$9237$Pld94
                                         g$e$9227$Pld94)
                                       g$r$9228$Pld94
                                       g$mr$9229$Pld94)
                                     (if (eqv? g$t$9239$Pld94 'constant)
                                       ((case-lambda
                                          ((g$datum$9260$Pld94)
                                           (list 'quote g$datum$9260$Pld94)))
                                        g$value$9237$Pld94)
                                       (if (eqv? g$t$9239$Pld94 'set!)
                                         (g$chi-set!$7218$Pld94
                                           g$e$9227$Pld94
                                           g$r$9228$Pld94
                                           g$mr$9229$Pld94)
                                         (if (eqv? g$t$9239$Pld94 'begin)
                                           ((case-lambda
                                              ((g$t$9256$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$9257$Pld94)
                                                   (if g$ls/false$9257$Pld94
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9258$Pld94
                                                            g$x*$9259$Pld94)
                                                          (g$build-sequence$6855$Pld94
                                                            '#f
                                                            (g$chi-expr*$7215$Pld94
                                                              (cons
                                                                g$x$9258$Pld94
                                                                g$x*$9259$Pld94)
                                                              g$r$9228$Pld94
                                                              g$mr$9229$Pld94))))
                                                       g$ls/false$9257$Pld94)
                                                     (g$syntax-violation$7305$Pld94
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9256$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$9256$Pld94
                                                  '(_ any . each-any)))))
                                            g$e$9227$Pld94)
                                           (if (memv
                                                 g$t$9239$Pld94
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9241$Pld94)
                                                 ((case-lambda
                                                    ((g$ls/false$9242$Pld94)
                                                     (if (if g$ls/false$9242$Pld94
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9243$Pld94
                                                                    g$xrhs*$9244$Pld94
                                                                    g$xbody$9245$Pld94
                                                                    g$xbody*$9246$Pld94)
                                                                  (if (g$valid-bound-ids?$6926$Pld94
                                                                        g$xlhs*$9243$Pld94)
                                                                    (void)
                                                                    (g$syntax-violation$7305$Pld94
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9227$Pld94))))
                                                               g$ls/false$9242$Pld94))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9247$Pld94
                                                              g$xrhs*$9248$Pld94
                                                              g$xbody$9249$Pld94
                                                              g$xbody*$9250$Pld94)
                                                            ((case-lambda
                                                               ((g$xlab*$9251$Pld94)
                                                                ((case-lambda
                                                                   ((g$xrib$9252$Pld94)
                                                                    ((case-lambda
                                                                       ((g$xb*$9253$Pld94)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$6855$Pld94
                                                                              '#f
                                                                              (g$chi-expr*$7215$Pld94
                                                                                (map (case-lambda
                                                                                       ((g$x$9254$Pld94)
                                                                                        (g$add-subst$6911$Pld94
                                                                                          g$xrib$9252$Pld94
                                                                                          g$x$9254$Pld94)))
                                                                                     (cons
                                                                                       g$xbody$9249$Pld94
                                                                                       g$xbody*$9250$Pld94))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9251$Pld94
                                                                                       g$xb*$9253$Pld94)
                                                                                  g$r$9228$Pld94)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9251$Pld94
                                                                                       g$xb*$9253$Pld94)
                                                                                  g$mr$9229$Pld94))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9255$Pld94)
                                                                             (g$make-eval-transformer$6953$Pld94
                                                                               (g$expand-transformer$7244$Pld94
                                                                                 (if (eq? g$type$9238$Pld94
                                                                                          'let-syntax)
                                                                                   g$x$9255$Pld94
                                                                                   (g$add-subst$6911$Pld94
                                                                                     g$xrib$9252$Pld94
                                                                                     g$x$9255$Pld94))
                                                                                 g$mr$9229$Pld94))))
                                                                          g$xrhs*$9248$Pld94))))
                                                                 (g$make-full-rib$6889$Pld94
                                                                   g$xlhs*$9247$Pld94
                                                                   g$xlab*$9251$Pld94))))
                                                             (map g$gen-label$6867$Pld94
                                                                  g$xlhs*$9247$Pld94))))
                                                         g$ls/false$9242$Pld94)
                                                       (g$syntax-violation$7305$Pld94
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9241$Pld94))))
                                                  (g$syntax-dispatch$7199$Pld94
                                                    g$t$9241$Pld94
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9227$Pld94)
                                             (if (eqv?
                                                   g$t$9239$Pld94
                                                   'displaced-lexical)
                                               (g$syntax-violation$7305$Pld94
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9227$Pld94)
                                               (if (eqv? g$t$9239$Pld94 'syntax)
                                                 (g$syntax-violation$7305$Pld94
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9227$Pld94)
                                                 (if (memv
                                                       g$t$9239$Pld94
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7305$Pld94
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9240$Pld94)
                                                           (if (eqv?
                                                                 g$t$9240$Pld94
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$9240$Pld94
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$9240$Pld94
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$9240$Pld94
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$9240$Pld94
                                                                         'import)
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9238$Pld94)
                                                       '" was found where an expression was expected")
                                                     g$e$9227$Pld94)
                                                   (if (eqv?
                                                         g$t$9239$Pld94
                                                         'mutable)
                                                     (g$syntax-violation$7305$Pld94
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9227$Pld94)
                                                     (g$syntax-violation$7305$Pld94
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9227$Pld94)))))))))))))))))))
                  g$type$9238$Pld94)))
              g$kwd$9235$Pld94
              g$value$9234$Pld94
              g$type$9233$Pld94)))))))
   (g$chi-set!$7218$Pld94
     g$chi-set!$10652$Pld94
     (case-lambda
       ((g$e$9266$Pld94 g$r$9267$Pld94 g$mr$9268$Pld94)
        ((case-lambda
           ((g$t$9269$Pld94)
            ((case-lambda
               ((g$ls/false$9270$Pld94)
                (if (if g$ls/false$9270$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9271$Pld94 g$v$9272$Pld94)
                             (g$id?$6921$Pld94 g$x$9271$Pld94)))
                          g$ls/false$9270$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9273$Pld94 g$v$9274$Pld94)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$6941$Pld94
                              g$x$9273$Pld94
                              g$r$9267$Pld94)))
                         (case-lambda
                           ((g$type$9278$Pld94
                              g$value$9279$Pld94
                              g$kwd$9280$Pld94)
                            ((case-lambda
                               ((g$kwd$9281$Pld94
                                  g$value$9282$Pld94
                                  g$type$9283$Pld94)
                                ((case-lambda
                                   ((g$t$9284$Pld94)
                                    (if (eqv? g$t$9284$Pld94 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$7145$Pld94
                                          g$value$9282$Pld94
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7143$Pld94
                                            g$value$9282$Pld94)
                                          (g$chi-expr$7217$Pld94
                                            g$v$9274$Pld94
                                            g$r$9267$Pld94
                                            g$mr$9268$Pld94)))
                                      (if (eqv? g$t$9284$Pld94 'core-prim)
                                        (g$syntax-violation$7305$Pld94
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9266$Pld94)
                                        (if (eqv? g$t$9284$Pld94 'global)
                                          (g$syntax-violation$7305$Pld94
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9266$Pld94)
                                          (if (eqv?
                                                g$t$9284$Pld94
                                                'global-macro!)
                                            (g$chi-expr$7217$Pld94
                                              (g$chi-global-macro$7214$Pld94
                                                g$value$9282$Pld94
                                                g$e$9266$Pld94)
                                              g$r$9267$Pld94
                                              g$mr$9268$Pld94)
                                            (if (eqv?
                                                  g$t$9284$Pld94
                                                  'local-macro!)
                                              (g$chi-expr$7217$Pld94
                                                (g$chi-local-macro$7213$Pld94
                                                  g$value$9282$Pld94
                                                  g$e$9266$Pld94)
                                                g$r$9267$Pld94
                                                g$mr$9268$Pld94)
                                              (if (eqv? g$t$9284$Pld94 'mutable)
                                                (g$syntax-violation$7305$Pld94
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9266$Pld94)
                                                (g$syntax-violation$7305$Pld94
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9266$Pld94)))))))))
                                 g$type$9283$Pld94)))
                             g$kwd$9280$Pld94
                             g$value$9279$Pld94
                             g$type$9278$Pld94))))))
                    g$ls/false$9270$Pld94)
                  (g$syntax-violation$7305$Pld94
                    '#f
                    '"invalid syntax"
                    g$t$9269$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$9269$Pld94 '(_ any any)))))
         g$e$9266$Pld94))))
   (g$verify-formals$7219$Pld94
     g$verify-formals$10653$Pld94
     (case-lambda
       ((g$fmls$9285$Pld94 g$stx$9286$Pld94)
        ((case-lambda
           ((g$t$9287$Pld94)
            ((case-lambda
               ((g$ls/false$9288$Pld94)
                (if g$ls/false$9288$Pld94
                  (apply
                    (case-lambda
                      ((g$x*$9289$Pld94)
                       (if (g$valid-bound-ids?$6926$Pld94 g$x*$9289$Pld94)
                         (void)
                         (g$invalid-fmls-error$7164$Pld94
                           g$stx$9286$Pld94
                           g$fmls$9285$Pld94))))
                    g$ls/false$9288$Pld94)
                  ((case-lambda
                     ((g$t$9290$Pld94)
                      ((case-lambda
                         ((g$ls/false$9291$Pld94)
                          (if g$ls/false$9291$Pld94
                            (apply
                              (case-lambda
                                ((g$x*$9292$Pld94 g$x$9293$Pld94)
                                 (if (g$valid-bound-ids?$6926$Pld94
                                       (cons g$x$9293$Pld94 g$x*$9292$Pld94))
                                   (void)
                                   (g$invalid-fmls-error$7164$Pld94
                                     g$stx$9286$Pld94
                                     g$fmls$9285$Pld94))))
                              g$ls/false$9291$Pld94)
                            ((case-lambda
                               ((g$t$9294$Pld94)
                                ((case-lambda
                                   ((g$ls/false$9295$Pld94)
                                    (if g$ls/false$9295$Pld94
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9286$Pld94)))
                                        g$ls/false$9295$Pld94)
                                      (g$syntax-violation$7305$Pld94
                                        '#f
                                        '"invalid syntax"
                                        g$t$9294$Pld94))))
                                 (g$syntax-dispatch$7199$Pld94
                                   g$t$9294$Pld94
                                   '_))))
                             g$t$9290$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$9290$Pld94
                         '#(each+ any () any)))))
                   g$t$9287$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$9287$Pld94 'each-any))))
         g$fmls$9285$Pld94))))
   (g$chi-lambda-clause$7220$Pld94
     g$chi-lambda-clause$10654$Pld94
     (case-lambda
       ((g$stx$9296$Pld94
          g$fmls$9297$Pld94
          g$body*$9298$Pld94
          g$r$9299$Pld94
          g$mr$9300$Pld94)
        ((case-lambda
           ((g$t$9301$Pld94)
            ((case-lambda
               ((g$ls/false$9302$Pld94)
                (if g$ls/false$9302$Pld94
                  (apply
                    (case-lambda
                      ((g$x*$9303$Pld94)
                       (begin
                         (g$verify-formals$7219$Pld94
                           g$fmls$9297$Pld94
                           g$stx$9296$Pld94)
                         ((case-lambda
                            ((g$lex*$9304$Pld94 g$lab*$9305$Pld94)
                             (values
                               g$lex*$9304$Pld94
                               (g$chi-internal$7228$Pld94
                                 (g$add-subst$6911$Pld94
                                   (g$make-full-rib$6889$Pld94
                                     g$x*$9303$Pld94
                                     g$lab*$9305$Pld94)
                                   g$body*$9298$Pld94)
                                 (g$add-lexicals$7147$Pld94
                                   g$lab*$9305$Pld94
                                   g$lex*$9304$Pld94
                                   g$r$9299$Pld94)
                                 g$mr$9300$Pld94))))
                          (map g$gen-lexical$6865$Pld94 g$x*$9303$Pld94)
                          (map g$gen-label$6867$Pld94 g$x*$9303$Pld94)))))
                    g$ls/false$9302$Pld94)
                  ((case-lambda
                     ((g$t$9306$Pld94)
                      ((case-lambda
                         ((g$ls/false$9307$Pld94)
                          (if g$ls/false$9307$Pld94
                            (apply
                              (case-lambda
                                ((g$x*$9308$Pld94 g$x$9309$Pld94)
                                 (begin
                                   (g$verify-formals$7219$Pld94
                                     g$fmls$9297$Pld94
                                     g$stx$9296$Pld94)
                                   ((case-lambda
                                      ((g$lex*$9310$Pld94
                                         g$lab*$9311$Pld94
                                         g$lex$9312$Pld94
                                         g$lab$9313$Pld94)
                                       (values
                                         (append
                                           g$lex*$9310$Pld94
                                           g$lex$9312$Pld94)
                                         (g$chi-internal$7228$Pld94
                                           (g$add-subst$6911$Pld94
                                             (g$make-full-rib$6889$Pld94
                                               (cons
                                                 g$x$9309$Pld94
                                                 g$x*$9308$Pld94)
                                               (cons
                                                 g$lab$9313$Pld94
                                                 g$lab*$9311$Pld94))
                                             g$body*$9298$Pld94)
                                           (g$add-lexicals$7147$Pld94
                                             (cons
                                               g$lab$9313$Pld94
                                               g$lab*$9311$Pld94)
                                             (cons
                                               g$lex$9312$Pld94
                                               g$lex*$9310$Pld94)
                                             g$r$9299$Pld94)
                                           g$mr$9300$Pld94))))
                                    (map g$gen-lexical$6865$Pld94
                                         g$x*$9308$Pld94)
                                    (map g$gen-label$6867$Pld94 g$x*$9308$Pld94)
                                    (g$gen-lexical$6865$Pld94 g$x$9309$Pld94)
                                    (g$gen-label$6867$Pld94 g$x$9309$Pld94)))))
                              g$ls/false$9307$Pld94)
                            ((case-lambda
                               ((g$t$9314$Pld94)
                                ((case-lambda
                                   ((g$ls/false$9315$Pld94)
                                    (if g$ls/false$9315$Pld94
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7305$Pld94
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9297$Pld94)))
                                        g$ls/false$9315$Pld94)
                                      (g$syntax-violation$7305$Pld94
                                        '#f
                                        '"invalid syntax"
                                        g$t$9314$Pld94))))
                                 (g$syntax-dispatch$7199$Pld94
                                   g$t$9314$Pld94
                                   '_))))
                             g$t$9306$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$9306$Pld94
                         '#(each+ any () any)))))
                   g$t$9301$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$9301$Pld94 'each-any))))
         g$fmls$9297$Pld94))))
   (g$chi-lambda-clause*$7221$Pld94
     g$chi-lambda-clause*$10655$Pld94
     (case-lambda
       ((g$stx$9316$Pld94
          g$fmls*$9317$Pld94
          g$body**$9318$Pld94
          g$r$9319$Pld94
          g$mr$9320$Pld94)
        (if (null? g$fmls*$9317$Pld94)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7220$Pld94
                 g$stx$9316$Pld94
                 (car g$fmls*$9317$Pld94)
                 (car g$body**$9318$Pld94)
                 g$r$9319$Pld94
                 g$mr$9320$Pld94)))
            (case-lambda
              ((g$a$9323$Pld94 g$b$9324$Pld94)
               ((case-lambda
                  ((g$b$9325$Pld94 g$a$9326$Pld94)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7221$Pld94
                          g$stx$9316$Pld94
                          (cdr g$fmls*$9317$Pld94)
                          (cdr g$body**$9318$Pld94)
                          g$r$9319$Pld94
                          g$mr$9320$Pld94)))
                     (case-lambda
                       ((g$a*$9329$Pld94 g$b*$9330$Pld94)
                        ((case-lambda
                           ((g$b*$9331$Pld94 g$a*$9332$Pld94)
                            (values
                              (cons g$a$9326$Pld94 g$a*$9332$Pld94)
                              (cons g$b$9325$Pld94 g$b*$9331$Pld94))))
                         g$b*$9330$Pld94
                         g$a*$9329$Pld94))))))
                g$b$9324$Pld94
                g$a$9323$Pld94))))))))
   (g$chi-defun$7222$Pld94
     g$chi-defun$10656$Pld94
     (case-lambda
       ((g$x$9333$Pld94 g$r$9334$Pld94 g$mr$9335$Pld94)
        ((case-lambda
           ((g$fmls$9336$Pld94 g$body*$9337$Pld94)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7220$Pld94
                   g$fmls$9336$Pld94
                   g$fmls$9336$Pld94
                   g$body*$9337$Pld94
                   g$r$9334$Pld94
                   g$mr$9335$Pld94)))
              (case-lambda
                ((g$fmls$9340$Pld94 g$body$9341$Pld94)
                 ((case-lambda
                    ((g$body$9342$Pld94 g$fmls$9343$Pld94)
                     (g$build-lambda$6852$Pld94
                       '#f
                       g$fmls$9343$Pld94
                       g$body$9342$Pld94)))
                  g$body$9341$Pld94
                  g$fmls$9340$Pld94))))))
         (car g$x$9333$Pld94)
         (cdr g$x$9333$Pld94)))))
   (g$chi-rhs$7223$Pld94
     g$chi-rhs$10657$Pld94
     (case-lambda
       ((g$rhs$9344$Pld94 g$r$9345$Pld94 g$mr$9346$Pld94)
        ((case-lambda
           ((g$t$9347$Pld94)
            (if (eqv? g$t$9347$Pld94 'defun)
              (g$chi-defun$7222$Pld94
                (cdr g$rhs$9344$Pld94)
                g$r$9345$Pld94
                g$mr$9346$Pld94)
              (if (eqv? g$t$9347$Pld94 'expr)
                ((case-lambda
                   ((g$expr$9349$Pld94)
                    (g$chi-expr$7217$Pld94
                      g$expr$9349$Pld94
                      g$r$9345$Pld94
                      g$mr$9346$Pld94)))
                 (cdr g$rhs$9344$Pld94))
                (if (eqv? g$t$9347$Pld94 'top-expr)
                  ((case-lambda
                     ((g$expr$9348$Pld94)
                      (g$build-sequence$6855$Pld94
                        '#f
                        (list
                          (g$chi-expr$7217$Pld94
                            g$expr$9348$Pld94
                            g$r$9345$Pld94
                            g$mr$9346$Pld94)
                          (g$build-void$6856$Pld94)))))
                   (cdr g$rhs$9344$Pld94))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9344$Pld94))))))
         (car g$rhs$9344$Pld94)))))
   (g$expand-interaction-rhs*/init*$7224$Pld94
     g$expand-interaction-rhs*/init*$10658$Pld94
     (case-lambda
       ((g$lhs*$9350$Pld94
          g$rhs*$9351$Pld94
          g$init*$9352$Pld94
          g$r$9353$Pld94
          g$mr$9354$Pld94)
        ((letrec ((g$f$9355$Pld94
                    (case-lambda
                      ((g$lhs*$9356$Pld94 g$rhs*$9357$Pld94)
                       (if (null? g$lhs*$9356$Pld94)
                         (map (case-lambda
                                ((g$x$9358$Pld94)
                                 (g$chi-expr$7217$Pld94
                                   g$x$9358$Pld94
                                   g$r$9353$Pld94
                                   g$mr$9354$Pld94)))
                              g$init*$9352$Pld94)
                         ((case-lambda
                            ((g$lhs$9359$Pld94 g$rhs$9360$Pld94)
                             ((case-lambda
                                ((g$t$9361$Pld94)
                                 (if (eqv? g$t$9361$Pld94 'defun)
                                   ((case-lambda
                                      ((g$rhs$9364$Pld94)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9359$Pld94
                                           g$rhs$9364$Pld94)
                                         (g$f$9355$Pld94
                                           (cdr g$lhs*$9356$Pld94)
                                           (cdr g$rhs*$9357$Pld94)))))
                                    (g$chi-defun$7222$Pld94
                                      (cdr g$rhs$9360$Pld94)
                                      g$r$9353$Pld94
                                      g$mr$9354$Pld94))
                                   (if (eqv? g$t$9361$Pld94 'expr)
                                     ((case-lambda
                                        ((g$rhs$9363$Pld94)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9359$Pld94
                                             g$rhs$9363$Pld94)
                                           (g$f$9355$Pld94
                                             (cdr g$lhs*$9356$Pld94)
                                             (cdr g$rhs*$9357$Pld94)))))
                                      (g$chi-expr$7217$Pld94
                                        (cdr g$rhs$9360$Pld94)
                                        g$r$9353$Pld94
                                        g$mr$9354$Pld94))
                                     (if (eqv? g$t$9361$Pld94 'top-expr)
                                       ((case-lambda
                                          ((g$e$9362$Pld94)
                                           (cons
                                             g$e$9362$Pld94
                                             (g$f$9355$Pld94
                                               (cdr g$lhs*$9356$Pld94)
                                               (cdr g$rhs*$9357$Pld94)))))
                                        (g$chi-expr$7217$Pld94
                                          (cdr g$rhs$9360$Pld94)
                                          g$r$9353$Pld94
                                          g$mr$9354$Pld94))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9360$Pld94))))))
                              (car g$rhs$9360$Pld94))))
                          (car g$lhs*$9356$Pld94)
                          (car g$rhs*$9357$Pld94)))))))
           g$f$9355$Pld94)
         g$lhs*$9350$Pld94
         g$rhs*$9351$Pld94))))
   (g$chi-rhs*$7225$Pld94
     g$chi-rhs*$10659$Pld94
     (case-lambda
       ((g$rhs*$9365$Pld94 g$r$9366$Pld94 g$mr$9367$Pld94)
        ((letrec ((g$f$9368$Pld94
                    (case-lambda
                      ((g$ls$9369$Pld94)
                       (if (null? g$ls$9369$Pld94)
                         '()
                         ((case-lambda
                            ((g$a$9370$Pld94)
                             (cons
                               g$a$9370$Pld94
                               (g$f$9368$Pld94 (cdr g$ls$9369$Pld94)))))
                          (g$chi-rhs$7223$Pld94
                            (car g$ls$9369$Pld94)
                            g$r$9366$Pld94
                            g$mr$9367$Pld94)))))))
           g$f$9368$Pld94)
         g$rhs*$9365$Pld94))))
   (g$find-bound=?$7226$Pld94
     g$find-bound=?$10660$Pld94
     (case-lambda
       ((g$x$9371$Pld94 g$lhs*$9372$Pld94 g$rhs*$9373$Pld94)
        (if (null? g$lhs*$9372$Pld94)
          '#f
          (if (g$bound-id=?$6924$Pld94 g$x$9371$Pld94 (car g$lhs*$9372$Pld94))
            (car g$rhs*$9373$Pld94)
            (g$find-bound=?$7226$Pld94
              g$x$9371$Pld94
              (cdr g$lhs*$9372$Pld94)
              (cdr g$rhs*$9373$Pld94)))))))
   (g$find-dups$7227$Pld94
     g$find-dups$10661$Pld94
     (case-lambda
       ((g$ls$9374$Pld94)
        ((letrec ((g$f$9375$Pld94
                    (case-lambda
                      ((g$ls$9376$Pld94 g$dups$9377$Pld94)
                       (if (null? g$ls$9376$Pld94)
                         g$dups$9377$Pld94
                         ((case-lambda
                            ((g$t$9378$Pld94)
                             (if g$t$9378$Pld94
                               ((case-lambda
                                  ((g$x$9379$Pld94)
                                   (g$f$9375$Pld94
                                     (cdr g$ls$9376$Pld94)
                                     (cons
                                       (list
                                         (car g$ls$9376$Pld94)
                                         g$x$9379$Pld94)
                                       g$dups$9377$Pld94))))
                                g$t$9378$Pld94)
                               (g$f$9375$Pld94
                                 (cdr g$ls$9376$Pld94)
                                 g$dups$9377$Pld94))))
                          (g$find-bound=?$7226$Pld94
                            (car g$ls$9376$Pld94)
                            (cdr g$ls$9376$Pld94)
                            (cdr g$ls$9376$Pld94))))))))
           g$f$9375$Pld94)
         g$ls$9374$Pld94
         '()))))
   (g$chi-internal$7228$Pld94
     g$chi-internal$10662$Pld94
     (case-lambda
       ((g$e*$9380$Pld94 g$r$9381$Pld94 g$mr$9382$Pld94)
        ((case-lambda
           ((g$rib$9383$Pld94)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7243$Pld94
                   (map (case-lambda
                          ((g$x$9391$Pld94)
                           (g$add-subst$6911$Pld94
                             g$rib$9383$Pld94
                             g$x$9391$Pld94)))
                        (g$syntax->list$6920$Pld94 g$e*$9380$Pld94))
                   g$r$9381$Pld94
                   g$mr$9382$Pld94
                   '()
                   '()
                   '()
                   '()
                   g$rib$9383$Pld94
                   '#f)))
              (case-lambda
                ((g$e*$9392$Pld94
                   g$r$9393$Pld94
                   g$mr$9394$Pld94
                   g$lex*$9395$Pld94
                   g$rhs*$9396$Pld94
                   g$mod**$9397$Pld94
                   g$kwd*$9398$Pld94)
                 ((case-lambda
                    ((g$kwd*$9399$Pld94
                       g$mod**$9400$Pld94
                       g$rhs*$9401$Pld94
                       g$lex*$9402$Pld94
                       g$mr$9403$Pld94
                       g$r$9404$Pld94
                       g$e*$9405$Pld94)
                     (begin
                       (if (null? g$e*$9405$Pld94)
                         (g$syntax-violation$7305$Pld94
                           '#f
                           '"no expression in body"
                           g$e*$9405$Pld94)
                         (void))
                       ((case-lambda
                          ((g$init*$9406$Pld94)
                           ((case-lambda
                              ((g$rhs*$9407$Pld94)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$6858$Pld94
                                     '#f
                                     (reverse g$lex*$9402$Pld94)
                                     (reverse g$rhs*$9407$Pld94)
                                     (g$build-sequence$6855$Pld94
                                       '#f
                                       g$init*$9406$Pld94)))))))
                            (g$chi-rhs*$7225$Pld94
                              g$rhs*$9401$Pld94
                              g$r$9404$Pld94
                              g$mr$9403$Pld94))))
                        (g$chi-expr*$7215$Pld94
                          (append
                            (apply append (reverse g$mod**$9400$Pld94))
                            g$e*$9405$Pld94)
                          g$r$9404$Pld94
                          g$mr$9403$Pld94)))))
                  g$kwd*$9398$Pld94
                  g$mod**$9397$Pld94
                  g$rhs*$9396$Pld94
                  g$lex*$9395$Pld94
                  g$mr$9394$Pld94
                  g$r$9393$Pld94
                  g$e*$9392$Pld94))))))
         (g$make-empty-rib$6884$Pld94)))))
   (g$parse-module$7229$Pld94
     g$parse-module$10663$Pld94
     (case-lambda
       ((g$e$9408$Pld94)
        ((case-lambda
           ((g$t$9409$Pld94)
            ((case-lambda
               ((g$ls/false$9410$Pld94)
                (if g$ls/false$9410$Pld94
                  (apply
                    (case-lambda
                      ((g$export*$9411$Pld94 g$b*$9412$Pld94)
                       (begin
                         (if (g$for-all$5349$Pld94
                               g$id?$6921$Pld94
                               g$export*$9411$Pld94)
                           (void)
                           (g$syntax-violation$7305$Pld94
                             '#f
                             '"module exports must be identifiers"
                             g$e$9408$Pld94))
                         (values
                           '#f
                           (list->vector g$export*$9411$Pld94)
                           g$b*$9412$Pld94))))
                    g$ls/false$9410$Pld94)
                  ((case-lambda
                     ((g$t$9413$Pld94)
                      ((case-lambda
                         ((g$ls/false$9414$Pld94)
                          (if g$ls/false$9414$Pld94
                            (apply
                              (case-lambda
                                ((g$name$9415$Pld94
                                   g$export*$9416$Pld94
                                   g$b*$9417$Pld94)
                                 (begin
                                   (if (g$id?$6921$Pld94 g$name$9415$Pld94)
                                     (void)
                                     (g$syntax-violation$7305$Pld94
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9408$Pld94))
                                   (if (g$for-all$5349$Pld94
                                         g$id?$6921$Pld94
                                         g$export*$9416$Pld94)
                                     (void)
                                     (g$syntax-violation$7305$Pld94
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9408$Pld94))
                                   (values
                                     g$name$9415$Pld94
                                     (list->vector g$export*$9416$Pld94)
                                     g$b*$9417$Pld94))))
                              g$ls/false$9414$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$9413$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$9413$Pld94
                         '(_ any each-any . each-any)))))
                   g$t$9409$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$9409$Pld94
               '(_ each-any . each-any)))))
         g$e$9408$Pld94))))
   (g$8107$7230$Pld94
     g$8107$10664$Pld94
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8110$Pld94
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8109$7231$Pld94 g$8109$10665$Pld94 '#f)
   (g$8108$7232$Pld94
     g$8108$10666$Pld94
     (make-record-constructor-descriptor
       g$8107$7230$Pld94
       '#f
       g$8109$7231$Pld94))
   (g$module-interface?$7233$Pld94
     g$module-interface?$10667$Pld94
     (record-predicate g$8107$7230$Pld94))
   (g$make-module-interface$7234$Pld94
     g$make-module-interface$10668$Pld94
     (record-constructor g$8108$7232$Pld94))
   (g$module-interface-first-mark$7235$Pld94
     g$module-interface-first-mark$10669$Pld94
     (record-accessor g$8107$7230$Pld94 '0))
   (g$module-interface-exp-id-vec$7236$Pld94
     g$module-interface-exp-id-vec$10670$Pld94
     (record-accessor g$8107$7230$Pld94 '1))
   (g$module-interface-exp-lab-vec$7237$Pld94
     g$module-interface-exp-lab-vec$10671$Pld94
     (record-accessor g$8107$7230$Pld94 '2))
   (g$set-module-interface-first-mark!$7238$Pld94
     g$set-module-interface-first-mark!$10672$Pld94
     (record-mutator g$8107$7230$Pld94 '0))
   (g$set-module-interface-exp-id-vec!$7239$Pld94
     g$set-module-interface-exp-id-vec!$10673$Pld94
     (record-mutator g$8107$7230$Pld94 '1))
   (g$set-module-interface-exp-lab-vec!$7240$Pld94
     g$set-module-interface-exp-lab-vec!$10674$Pld94
     (record-mutator g$8107$7230$Pld94 '2))
   (g$module-interface-exp-id*$7241$Pld94
     g$module-interface-exp-id*$10675$Pld94
     (case-lambda
       ((g$iface$9418$Pld94 g$id$9419$Pld94)
        (letrec* ((g$diff-marks$9420$Pld94
                    (case-lambda
                      ((g$ls$9424$Pld94 g$x$9425$Pld94)
                       (begin
                         (if (null? g$ls$9424$Pld94)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9426$Pld94)
                             (if (eq? g$a$9426$Pld94 g$x$9425$Pld94)
                               '()
                               (cons
                                 g$a$9426$Pld94
                                 (g$diff-marks$9420$Pld94
                                   (cdr g$ls$9424$Pld94)
                                   g$x$9425$Pld94)))))
                          (car g$ls$9424$Pld94)))))))
          ((case-lambda
             ((g$diff$9421$Pld94 g$id-vec$9422$Pld94)
              (if (null? g$diff$9421$Pld94)
                g$id-vec$9422$Pld94
                (vector-map
                  (case-lambda
                    ((g$x$9423$Pld94)
                     (g$make-stx$6894$Pld94
                       (g$stx-expr$6895$Pld94 g$x$9423$Pld94)
                       (append
                         g$diff$9421$Pld94
                         (g$stx-mark*$6896$Pld94 g$x$9423$Pld94))
                       '()
                       '())))
                  g$id-vec$9422$Pld94))))
           (g$diff-marks$9420$Pld94
             (g$stx-mark*$6896$Pld94 g$id$9419$Pld94)
             (g$module-interface-first-mark$7235$Pld94 g$iface$9418$Pld94))
           (g$module-interface-exp-id-vec$7236$Pld94 g$iface$9418$Pld94))))))
   (g$chi-internal-module$7242$Pld94
     g$chi-internal-module$10676$Pld94
     (case-lambda
       ((g$e$9427$Pld94
          g$r$9428$Pld94
          g$mr$9429$Pld94
          g$lex*$9430$Pld94
          g$rhs*$9431$Pld94
          g$mod**$9432$Pld94
          g$kwd*$9433$Pld94)
        (call-with-values
          (case-lambda (() (g$parse-module$7229$Pld94 g$e$9427$Pld94)))
          (case-lambda
            ((g$name$9437$Pld94 g$exp-id*$9438$Pld94 g$e*$9439$Pld94)
             ((case-lambda
                ((g$e*$9440$Pld94 g$exp-id*$9441$Pld94 g$name$9442$Pld94)
                 ((case-lambda
                    ((g$rib$9443$Pld94)
                     ((case-lambda
                        ((g$e*$9444$Pld94)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7243$Pld94
                                    g$e*$9444$Pld94
                                    g$r$9428$Pld94
                                    g$mr$9429$Pld94
                                    g$lex*$9430$Pld94
                                    g$rhs*$9431$Pld94
                                    g$mod**$9432$Pld94
                                    g$kwd*$9433$Pld94
                                    g$rib$9443$Pld94
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9452$Pld94
                                    g$r$9453$Pld94
                                    g$mr$9454$Pld94
                                    g$lex*$9455$Pld94
                                    g$rhs*$9456$Pld94
                                    g$mod**$9457$Pld94
                                    g$kwd*$9458$Pld94)
                                  ((case-lambda
                                     ((g$kwd*$9459$Pld94
                                        g$mod**$9460$Pld94
                                        g$rhs*$9461$Pld94
                                        g$lex*$9462$Pld94
                                        g$mr$9463$Pld94
                                        g$r$9464$Pld94
                                        g$e*$9465$Pld94)
                                      ((case-lambda
                                         ((g$exp-lab*$9466$Pld94
                                            g$mod**$9467$Pld94)
                                          (if (not g$name$9442$Pld94)
                                            (values
                                              g$lex*$9462$Pld94
                                              g$rhs*$9461$Pld94
                                              g$exp-id*$9441$Pld94
                                              g$exp-lab*$9466$Pld94
                                              g$r$9464$Pld94
                                              g$mr$9463$Pld94
                                              g$mod**$9467$Pld94
                                              g$kwd*$9459$Pld94)
                                            ((case-lambda
                                               ((g$lab$9468$Pld94
                                                  g$iface$9469$Pld94)
                                                (values
                                                  g$lex*$9462$Pld94
                                                  g$rhs*$9461$Pld94
                                                  (vector g$name$9442$Pld94)
                                                  (vector g$lab$9468$Pld94)
                                                  (cons
                                                    (cons
                                                      g$lab$9468$Pld94
                                                      (cons
                                                        '$module
                                                        g$iface$9469$Pld94))
                                                    g$r$9464$Pld94)
                                                  (cons
                                                    (cons
                                                      g$lab$9468$Pld94
                                                      (cons
                                                        '$module
                                                        g$iface$9469$Pld94))
                                                    g$mr$9463$Pld94)
                                                  g$mod**$9467$Pld94
                                                  g$kwd*$9459$Pld94)))
                                             (g$gen-label$6867$Pld94 'module)
                                             (g$make-module-interface$7234$Pld94
                                               (car (g$stx-mark*$6896$Pld94
                                                      g$name$9442$Pld94))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9470$Pld94)
                                                    (g$make-stx$6894$Pld94
                                                      (g$stx-expr$6895$Pld94
                                                        g$x$9470$Pld94)
                                                      (g$stx-mark*$6896$Pld94
                                                        g$x$9470$Pld94)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9441$Pld94)
                                               g$exp-lab*$9466$Pld94)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9471$Pld94)
                                            ((case-lambda
                                               ((g$t$9472$Pld94)
                                                (if g$t$9472$Pld94
                                                  g$t$9472$Pld94
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7305$Pld94
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9471$Pld94)))))
                                             (g$id->label$6934$Pld94
                                               (g$make-stx$6894$Pld94
                                                 (g$id->sym$6922$Pld94
                                                   g$x$9471$Pld94)
                                                 (g$stx-mark*$6896$Pld94
                                                   g$x$9471$Pld94)
                                                 (list g$rib$9443$Pld94)
                                                 '())))))
                                         g$exp-id*$9441$Pld94)
                                       (cons
                                         g$e*$9465$Pld94
                                         g$mod**$9460$Pld94))))
                                   g$kwd*$9458$Pld94
                                   g$mod**$9457$Pld94
                                   g$rhs*$9456$Pld94
                                   g$lex*$9455$Pld94
                                   g$mr$9454$Pld94
                                   g$r$9453$Pld94
                                   g$e*$9452$Pld94)))))))))
                      (map (case-lambda
                             ((g$x$9473$Pld94)
                              (g$add-subst$6911$Pld94
                                g$rib$9443$Pld94
                                g$x$9473$Pld94)))
                           (g$syntax->list$6920$Pld94 g$e*$9440$Pld94)))))
                  (g$make-empty-rib$6884$Pld94))))
              g$e*$9439$Pld94
              g$exp-id*$9438$Pld94
              g$name$9437$Pld94)))))))
   (g$chi-body*$7243$Pld94
     g$chi-body*$10677$Pld94
     (case-lambda
       ((g$e*$9474$Pld94
          g$r$9475$Pld94
          g$mr$9476$Pld94
          g$lex*$9477$Pld94
          g$rhs*$9478$Pld94
          g$mod**$9479$Pld94
          g$kwd*$9480$Pld94
          g$rib$9481$Pld94
          g$top?$9482$Pld94)
        (if (null? g$e*$9474$Pld94)
          (values
            g$e*$9474$Pld94
            g$r$9475$Pld94
            g$mr$9476$Pld94
            g$lex*$9477$Pld94
            g$rhs*$9478$Pld94
            g$mod**$9479$Pld94
            g$kwd*$9480$Pld94)
          ((case-lambda
             ((g$e$9483$Pld94)
              (call-with-values
                (case-lambda
                  (() (g$syntax-type$6941$Pld94 g$e$9483$Pld94 g$r$9475$Pld94)))
                (case-lambda
                  ((g$type$9487$Pld94 g$value$9488$Pld94 g$kwd$9489$Pld94)
                   ((case-lambda
                      ((g$kwd$9490$Pld94 g$value$9491$Pld94 g$type$9492$Pld94)
                       ((case-lambda
                          ((g$kwd*$9493$Pld94)
                           ((case-lambda
                              ((g$t$9494$Pld94)
                               (if (eqv? g$t$9494$Pld94 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7139$Pld94
                                        g$e$9483$Pld94)))
                                   (case-lambda
                                     ((g$id$9600$Pld94 g$rhs$9601$Pld94)
                                      ((case-lambda
                                         ((g$rhs$9602$Pld94 g$id$9603$Pld94)
                                          (begin
                                            (if (g$bound-id-member?$6928$Pld94
                                                  g$id$9603$Pld94
                                                  g$kwd*$9493$Pld94)
                                              (g$syntax-violation$7305$Pld94
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9483$Pld94)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$6869$Pld94
                                                   g$id$9603$Pld94
                                                   g$rib$9481$Pld94)))
                                              (case-lambda
                                                ((g$lab$9606$Pld94
                                                   g$lex$9607$Pld94)
                                                 ((case-lambda
                                                    ((g$lex$9608$Pld94
                                                       g$lab$9609$Pld94)
                                                     (begin
                                                       (g$extend-rib!$6885$Pld94
                                                         g$rib$9481$Pld94
                                                         g$id$9603$Pld94
                                                         g$lab$9609$Pld94)
                                                       (g$chi-body*$7243$Pld94
                                                         (cdr g$e*$9474$Pld94)
                                                         (g$add-lexical$7146$Pld94
                                                           g$lab$9609$Pld94
                                                           g$lex$9608$Pld94
                                                           g$r$9475$Pld94)
                                                         g$mr$9476$Pld94
                                                         (cons
                                                           g$lex$9608$Pld94
                                                           g$lex*$9477$Pld94)
                                                         (cons
                                                           g$rhs$9602$Pld94
                                                           g$rhs*$9478$Pld94)
                                                         g$mod**$9479$Pld94
                                                         g$kwd*$9493$Pld94
                                                         g$rib$9481$Pld94
                                                         g$top?$9482$Pld94))))
                                                  g$lex$9607$Pld94
                                                  g$lab$9606$Pld94)))))))
                                       g$rhs$9601$Pld94
                                       g$id$9600$Pld94))))
                                 (if (eqv? g$t$9494$Pld94 'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7140$Pld94
                                          g$e$9483$Pld94)))
                                     (case-lambda
                                       ((g$id$9591$Pld94 g$rhs$9592$Pld94)
                                        ((case-lambda
                                           ((g$rhs$9593$Pld94 g$id$9594$Pld94)
                                            (begin
                                              (if (g$bound-id-member?$6928$Pld94
                                                    g$id$9594$Pld94
                                                    g$kwd*$9493$Pld94)
                                                (g$syntax-violation$7305$Pld94
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9483$Pld94)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9595$Pld94
                                                    g$expanded-rhs$9596$Pld94)
                                                  (begin
                                                    (g$extend-rib!$6885$Pld94
                                                      g$rib$9481$Pld94
                                                      g$id$9594$Pld94
                                                      g$lab$9595$Pld94)
                                                    ((case-lambda
                                                       ((g$b$9597$Pld94)
                                                        (g$chi-body*$7243$Pld94
                                                          (cdr g$e*$9474$Pld94)
                                                          (cons
                                                            (cons
                                                              g$lab$9595$Pld94
                                                              g$b$9597$Pld94)
                                                            g$r$9475$Pld94)
                                                          (cons
                                                            (cons
                                                              g$lab$9595$Pld94
                                                              g$b$9597$Pld94)
                                                            g$mr$9476$Pld94)
                                                          g$lex*$9477$Pld94
                                                          g$rhs*$9478$Pld94
                                                          g$mod**$9479$Pld94
                                                          g$kwd*$9493$Pld94
                                                          g$rib$9481$Pld94
                                                          g$top?$9482$Pld94)))
                                                     (g$make-eval-transformer$6953$Pld94
                                                       g$expanded-rhs$9596$Pld94)))))
                                               (g$gen-define-label$6870$Pld94
                                                 g$id$9594$Pld94
                                                 g$rib$9481$Pld94)
                                               (g$expand-transformer$7244$Pld94
                                                 g$rhs$9593$Pld94
                                                 g$mr$9476$Pld94)))))
                                         g$rhs$9592$Pld94
                                         g$id$9591$Pld94))))
                                   (if (memv
                                         g$t$9494$Pld94
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9576$Pld94)
                                         ((case-lambda
                                            ((g$ls/false$9577$Pld94)
                                             (if (if g$ls/false$9577$Pld94
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9578$Pld94
                                                            g$xrhs*$9579$Pld94
                                                            g$xbody*$9580$Pld94)
                                                          (if (g$valid-bound-ids?$6926$Pld94
                                                                g$xlhs*$9578$Pld94)
                                                            (void)
                                                            (g$syntax-violation$7305$Pld94
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9483$Pld94))))
                                                       g$ls/false$9577$Pld94))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9581$Pld94
                                                      g$xrhs*$9582$Pld94
                                                      g$xbody*$9583$Pld94)
                                                    ((case-lambda
                                                       ((g$xlab*$9584$Pld94)
                                                        ((case-lambda
                                                           ((g$xrib$9585$Pld94)
                                                            ((case-lambda
                                                               ((g$xb*$9586$Pld94)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7243$Pld94
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9587$Pld94)
                                                                                (g$add-subst$6911$Pld94
                                                                                  g$xrib$9585$Pld94
                                                                                  g$x$9587$Pld94)))
                                                                             g$xbody*$9583$Pld94)
                                                                        (cdr g$e*$9474$Pld94))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9584$Pld94
                                                                             g$xb*$9586$Pld94)
                                                                        g$r$9475$Pld94)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9584$Pld94
                                                                             g$xb*$9586$Pld94)
                                                                        g$mr$9476$Pld94)
                                                                      g$lex*$9477$Pld94
                                                                      g$rhs*$9478$Pld94
                                                                      g$mod**$9479$Pld94
                                                                      g$kwd*$9493$Pld94
                                                                      g$rib$9481$Pld94
                                                                      g$top?$9482$Pld94))))))
                                                             (map (case-lambda
                                                                    ((g$x$9588$Pld94)
                                                                     (g$make-eval-transformer$6953$Pld94
                                                                       (g$expand-transformer$7244$Pld94
                                                                         (if (eq? g$type$9492$Pld94
                                                                                  'let-syntax)
                                                                           g$x$9588$Pld94
                                                                           (g$add-subst$6911$Pld94
                                                                             g$xrib$9585$Pld94
                                                                             g$x$9588$Pld94))
                                                                         g$mr$9476$Pld94))))
                                                                  g$xrhs*$9582$Pld94))))
                                                         (g$make-full-rib$6889$Pld94
                                                           g$xlhs*$9581$Pld94
                                                           g$xlab*$9584$Pld94))))
                                                     (map g$gen-label$6867$Pld94
                                                          g$xlhs*$9581$Pld94))))
                                                 g$ls/false$9577$Pld94)
                                               (g$syntax-violation$7305$Pld94
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9576$Pld94))))
                                          (g$syntax-dispatch$7199$Pld94
                                            g$t$9576$Pld94
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9483$Pld94)
                                     (if (eqv? g$t$9494$Pld94 'begin)
                                       ((case-lambda
                                          ((g$t$9573$Pld94)
                                           ((case-lambda
                                              ((g$ls/false$9574$Pld94)
                                               (if g$ls/false$9574$Pld94
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9575$Pld94)
                                                      (g$chi-body*$7243$Pld94
                                                        (append
                                                          g$x*$9575$Pld94
                                                          (cdr g$e*$9474$Pld94))
                                                        g$r$9475$Pld94
                                                        g$mr$9476$Pld94
                                                        g$lex*$9477$Pld94
                                                        g$rhs*$9478$Pld94
                                                        g$mod**$9479$Pld94
                                                        g$kwd*$9493$Pld94
                                                        g$rib$9481$Pld94
                                                        g$top?$9482$Pld94)))
                                                   g$ls/false$9574$Pld94)
                                                 (g$syntax-violation$7305$Pld94
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9573$Pld94))))
                                            (g$syntax-dispatch$7199$Pld94
                                              g$t$9573$Pld94
                                              '(_ . each-any)))))
                                        g$e$9483$Pld94)
                                       (if (memv
                                             g$t$9494$Pld94
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7243$Pld94
                                           (cons
                                             (g$add-subst$6911$Pld94
                                               g$rib$9481$Pld94
                                               (g$chi-global-macro$7214$Pld94
                                                 g$value$9491$Pld94
                                                 g$e$9483$Pld94))
                                             (cdr g$e*$9474$Pld94))
                                           g$r$9475$Pld94
                                           g$mr$9476$Pld94
                                           g$lex*$9477$Pld94
                                           g$rhs*$9478$Pld94
                                           g$mod**$9479$Pld94
                                           g$kwd*$9493$Pld94
                                           g$rib$9481$Pld94
                                           g$top?$9482$Pld94)
                                         (if (memv
                                               g$t$9494$Pld94
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7243$Pld94
                                             (cons
                                               (g$add-subst$6911$Pld94
                                                 g$rib$9481$Pld94
                                                 (g$chi-local-macro$7213$Pld94
                                                   g$value$9491$Pld94
                                                   g$e$9483$Pld94))
                                               (cdr g$e*$9474$Pld94))
                                             g$r$9475$Pld94
                                             g$mr$9476$Pld94
                                             g$lex*$9477$Pld94
                                             g$rhs*$9478$Pld94
                                             g$mod**$9479$Pld94
                                             g$kwd*$9493$Pld94
                                             g$rib$9481$Pld94
                                             g$top?$9482$Pld94)
                                           (if (memv
                                                 g$t$9494$Pld94
                                                 '(macro macro!))
                                             (g$chi-body*$7243$Pld94
                                               (cons
                                                 (g$add-subst$6911$Pld94
                                                   g$rib$9481$Pld94
                                                   (g$chi-macro$7212$Pld94
                                                     g$value$9491$Pld94
                                                     g$e$9483$Pld94))
                                                 (cdr g$e*$9474$Pld94))
                                               g$r$9475$Pld94
                                               g$mr$9476$Pld94
                                               g$lex*$9477$Pld94
                                               g$rhs*$9478$Pld94
                                               g$mod**$9479$Pld94
                                               g$kwd*$9493$Pld94
                                               g$rib$9481$Pld94
                                               g$top?$9482$Pld94)
                                             (if (eqv? g$t$9494$Pld94 'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7242$Pld94
                                                      g$e$9483$Pld94
                                                      g$r$9475$Pld94
                                                      g$mr$9476$Pld94
                                                      g$lex*$9477$Pld94
                                                      g$rhs*$9478$Pld94
                                                      g$mod**$9479$Pld94
                                                      g$kwd*$9493$Pld94)))
                                                 (case-lambda
                                                   ((g$lex*$9555$Pld94
                                                      g$rhs*$9556$Pld94
                                                      g$m-exp-id*$9557$Pld94
                                                      g$m-exp-lab*$9558$Pld94
                                                      g$r$9559$Pld94
                                                      g$mr$9560$Pld94
                                                      g$mod**$9561$Pld94
                                                      g$kwd*$9562$Pld94)
                                                    ((case-lambda
                                                       ((g$kwd*$9563$Pld94
                                                          g$mod**$9564$Pld94
                                                          g$mr$9565$Pld94
                                                          g$r$9566$Pld94
                                                          g$m-exp-lab*$9567$Pld94
                                                          g$m-exp-id*$9568$Pld94
                                                          g$rhs*$9569$Pld94
                                                          g$lex*$9570$Pld94)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9571$Pld94
                                                                 g$lab$9572$Pld94)
                                                               (g$extend-rib!$6885$Pld94
                                                                 g$rib$9481$Pld94
                                                                 g$id$9571$Pld94
                                                                 g$lab$9572$Pld94)))
                                                            g$m-exp-id*$9568$Pld94
                                                            g$m-exp-lab*$9567$Pld94)
                                                          (g$chi-body*$7243$Pld94
                                                            (cdr g$e*$9474$Pld94)
                                                            g$r$9566$Pld94
                                                            g$mr$9565$Pld94
                                                            g$lex*$9570$Pld94
                                                            g$rhs*$9569$Pld94
                                                            g$mod**$9564$Pld94
                                                            g$kwd*$9563$Pld94
                                                            g$rib$9481$Pld94
                                                            g$top?$9482$Pld94))))
                                                     g$kwd*$9562$Pld94
                                                     g$mod**$9561$Pld94
                                                     g$mr$9560$Pld94
                                                     g$r$9559$Pld94
                                                     g$m-exp-lab*$9558$Pld94
                                                     g$m-exp-id*$9557$Pld94
                                                     g$rhs*$9556$Pld94
                                                     g$lex*$9555$Pld94))))
                                               (if (eqv?
                                                     g$t$9494$Pld94
                                                     'library)
                                                 (begin
                                                   (g$library-expander$7292$Pld94
                                                     (g$stx->datum$6932$Pld94
                                                       g$e$9483$Pld94))
                                                   (g$chi-body*$7243$Pld94
                                                     (cdr g$e*$9474$Pld94)
                                                     g$r$9475$Pld94
                                                     g$mr$9476$Pld94
                                                     g$lex*$9477$Pld94
                                                     g$rhs*$9478$Pld94
                                                     g$mod**$9479$Pld94
                                                     g$kwd*$9493$Pld94
                                                     g$rib$9481$Pld94
                                                     g$top?$9482$Pld94))
                                                 (if (eqv?
                                                       g$t$9494$Pld94
                                                       'import)
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9495$Pld94
                                                                     (case-lambda
                                                                       ((g$e$9537$Pld94)
                                                                        ((case-lambda
                                                                           ((g$t$9538$Pld94)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9539$Pld94)
                                                                                (if (if g$ls/false$9539$Pld94
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9540$Pld94)
                                                                                             (g$id?$6921$Pld94
                                                                                               g$id$9540$Pld94)))
                                                                                          g$ls/false$9539$Pld94))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9541$Pld94)
                                                                                       '#t))
                                                                                    g$ls/false$9539$Pld94)
                                                                                  ((case-lambda
                                                                                     ((g$t$9542$Pld94)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9543$Pld94)
                                                                                          (if g$ls/false$9543$Pld94
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9544$Pld94)
                                                                                                 '#f))
                                                                                              g$ls/false$9543$Pld94)
                                                                                            ((case-lambda
                                                                                               ((g$t$9545$Pld94)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9546$Pld94)
                                                                                                    (if g$ls/false$9546$Pld94
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7305$Pld94
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9537$Pld94)))
                                                                                                        g$ls/false$9546$Pld94)
                                                                                                      (g$syntax-violation$7305$Pld94
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9545$Pld94))))
                                                                                                 (g$syntax-dispatch$7199$Pld94
                                                                                                   g$t$9545$Pld94
                                                                                                   '_))))
                                                                                             g$t$9542$Pld94))))
                                                                                       (g$syntax-dispatch$7199$Pld94
                                                                                         g$t$9542$Pld94
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9538$Pld94))))
                                                                             (g$syntax-dispatch$7199$Pld94
                                                                               g$t$9538$Pld94
                                                                               '(_ any)))))
                                                                         g$e$9537$Pld94))))
                                                                   (g$module-import$9496$Pld94
                                                                     (case-lambda
                                                                       ((g$e$9520$Pld94
                                                                          g$r$9521$Pld94)
                                                                        ((case-lambda
                                                                           ((g$t$9522$Pld94)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9523$Pld94)
                                                                                (if (if g$ls/false$9523$Pld94
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9524$Pld94)
                                                                                             (g$id?$6921$Pld94
                                                                                               g$id$9524$Pld94)))
                                                                                          g$ls/false$9523$Pld94))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9525$Pld94)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$6941$Pld94
                                                                                              g$id$9525$Pld94
                                                                                              g$r$9521$Pld94)))
                                                                                         (case-lambda
                                                                                           ((g$type$9529$Pld94
                                                                                              g$value$9530$Pld94
                                                                                              g$kwd$9531$Pld94)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9532$Pld94
                                                                                                  g$value$9533$Pld94
                                                                                                  g$type$9534$Pld94)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9535$Pld94)
                                                                                                    (if (eqv?
                                                                                                          g$t$9535$Pld94
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9536$Pld94)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7241$Pld94
                                                                                                              g$iface$9536$Pld94
                                                                                                              g$id$9525$Pld94)
                                                                                                            (g$module-interface-exp-lab-vec$7237$Pld94
                                                                                                              g$iface$9536$Pld94))))
                                                                                                       g$value$9533$Pld94)
                                                                                                      (g$syntax-violation$7305$Pld94
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9520$Pld94))))
                                                                                                 g$type$9534$Pld94)))
                                                                                             g$kwd$9531$Pld94
                                                                                             g$value$9530$Pld94
                                                                                             g$type$9529$Pld94))))))
                                                                                    g$ls/false$9523$Pld94)
                                                                                  (g$syntax-violation$7305$Pld94
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9522$Pld94))))
                                                                             (g$syntax-dispatch$7199$Pld94
                                                                               g$t$9522$Pld94
                                                                               '(_ any)))))
                                                                         g$e$9520$Pld94))))
                                                                   (g$library-import$9497$Pld94
                                                                     (case-lambda
                                                                       ((g$e$9506$Pld94)
                                                                        ((case-lambda
                                                                           ((g$t$9507$Pld94)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9508$Pld94)
                                                                                (if g$ls/false$9508$Pld94
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9509$Pld94
                                                                                         g$imp*$9510$Pld94)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7248$Pld94
                                                                                              (g$syntax->datum$7308$Pld94
                                                                                                g$imp*$9510$Pld94))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9513$Pld94
                                                                                              g$subst-labels$9514$Pld94)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9515$Pld94
                                                                                                  g$subst-names$9516$Pld94)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9517$Pld94)
                                                                                                       (g$datum->stx$6904$Pld94
                                                                                                         g$ctxt$9509$Pld94
                                                                                                         g$name$9517$Pld94)))
                                                                                                    g$subst-names$9516$Pld94)
                                                                                                  g$subst-labels$9515$Pld94)))
                                                                                             g$subst-labels$9514$Pld94
                                                                                             g$subst-names$9513$Pld94))))))
                                                                                    g$ls/false$9508$Pld94)
                                                                                  ((case-lambda
                                                                                     ((g$t$9518$Pld94)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9519$Pld94)
                                                                                          (if g$ls/false$9519$Pld94
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7305$Pld94
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9506$Pld94)))
                                                                                              g$ls/false$9519$Pld94)
                                                                                            (g$syntax-violation$7305$Pld94
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9518$Pld94))))
                                                                                       (g$syntax-dispatch$7199$Pld94
                                                                                         g$t$9518$Pld94
                                                                                         '_))))
                                                                                   g$t$9507$Pld94))))
                                                                             (g$syntax-dispatch$7199$Pld94
                                                                               g$t$9507$Pld94
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9506$Pld94)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$9495$Pld94
                                                                      g$e$9483$Pld94)
                                                                  (g$module-import$9496$Pld94
                                                                    g$e$9483$Pld94
                                                                    g$r$9475$Pld94)
                                                                  (g$library-import$9497$Pld94
                                                                    g$e$9483$Pld94))))
                                                             (case-lambda
                                                               ((g$id*$9500$Pld94
                                                                  g$lab*$9501$Pld94)
                                                                ((case-lambda
                                                                   ((g$lab*$9502$Pld94
                                                                      g$id*$9503$Pld94)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$9504$Pld94
                                                                           g$lab$9505$Pld94)
                                                                         (g$extend-rib!$6885$Pld94
                                                                           g$rib$9481$Pld94
                                                                           g$id$9504$Pld94
                                                                           g$lab$9505$Pld94)))
                                                                      g$id*$9503$Pld94
                                                                      g$lab*$9502$Pld94)))
                                                                 g$lab*$9501$Pld94
                                                                 g$id*$9500$Pld94))))))))
                                                     (g$chi-body*$7243$Pld94
                                                       (cdr g$e*$9474$Pld94)
                                                       g$r$9475$Pld94
                                                       g$mr$9476$Pld94
                                                       g$lex*$9477$Pld94
                                                       g$rhs*$9478$Pld94
                                                       g$mod**$9479$Pld94
                                                       g$kwd*$9493$Pld94
                                                       g$rib$9481$Pld94
                                                       g$top?$9482$Pld94))
                                                   (if g$top?$9482$Pld94
                                                     (g$chi-body*$7243$Pld94
                                                       (cdr g$e*$9474$Pld94)
                                                       g$r$9475$Pld94
                                                       g$mr$9476$Pld94
                                                       (cons
                                                         (g$gen-lexical$6865$Pld94
                                                           'dummy)
                                                         g$lex*$9477$Pld94)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9483$Pld94)
                                                         g$rhs*$9478$Pld94)
                                                       g$mod**$9479$Pld94
                                                       g$kwd*$9493$Pld94
                                                       g$rib$9481$Pld94
                                                       g$top?$9482$Pld94)
                                                     (values
                                                       g$e*$9474$Pld94
                                                       g$r$9475$Pld94
                                                       g$mr$9476$Pld94
                                                       g$lex*$9477$Pld94
                                                       g$rhs*$9478$Pld94
                                                       g$mod**$9479$Pld94
                                                       g$kwd*$9493$Pld94))))))))))))))
                            g$type$9492$Pld94)))
                        (if (g$id?$6921$Pld94 g$kwd$9490$Pld94)
                          (cons g$kwd$9490$Pld94 g$kwd*$9480$Pld94)
                          g$kwd*$9480$Pld94))))
                    g$kwd$9489$Pld94
                    g$value$9488$Pld94
                    g$type$9487$Pld94))))))
           (car g$e*$9474$Pld94))))))
   (g$expand-transformer$7244$Pld94
     g$expand-transformer$10678$Pld94
     (case-lambda
       ((g$expr$9610$Pld94 g$r$9611$Pld94)
        ((case-lambda
           ((g$rtc$9612$Pld94)
            ((case-lambda
               ((g$expanded-rhs$9613$Pld94)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9614$Pld94)
                        (case-lambda
                          ((g$x$9615$Pld94)
                           (begin
                             (g$invoke-library$6736$Pld94 g$x$9615$Pld94)
                             (g$mark-visit$9614$Pld94 g$x$9615$Pld94))))))
                     (g$vis-collector$7252$Pld94))
                    (g$rtc$9612$Pld94))
                  g$expanded-rhs$9613$Pld94)))
             ((case-lambda
                ((g$inv-collector$9620$Pld94
                   g$vis-collector$9621$Pld94
                   g$inv-collector$9622$Pld94
                   g$vis-collector$9623$Pld94)
                 ((case-lambda
                    ((g$swap$9624$Pld94)
                     (dynamic-wind
                       g$swap$9624$Pld94
                       (case-lambda
                         (()
                          (g$chi-expr$7217$Pld94
                            g$expr$9610$Pld94
                            g$r$9611$Pld94
                            g$r$9611$Pld94)))
                       g$swap$9624$Pld94)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9625$Pld94)
                           (begin
                             (g$inv-collector$9620$Pld94
                               g$inv-collector$9622$Pld94)
                             (set! g$inv-collector$9622$Pld94 g$t$9625$Pld94))))
                        (g$inv-collector$9620$Pld94))
                       ((case-lambda
                          ((g$t$9626$Pld94)
                           (begin
                             (g$vis-collector$9621$Pld94
                               g$vis-collector$9623$Pld94)
                             (set! g$vis-collector$9623$Pld94 g$t$9626$Pld94))))
                        (g$vis-collector$9621$Pld94))))))))
              g$inv-collector$7251$Pld94
              g$vis-collector$7252$Pld94
              g$rtc$9612$Pld94
              (case-lambda ((g$x$9627$Pld94) (values)))))))
         (g$make-collector$7250$Pld94)))))
   (g$parse-exports$7245$Pld94
     g$parse-exports$10679$Pld94
     (case-lambda
       ((g$exp*$9628$Pld94)
        (letrec* ((g$idsyn?$9629$Pld94
                    (case-lambda
                      ((g$x$9644$Pld94)
                       (symbol? (g$syntax->datum$7308$Pld94 g$x$9644$Pld94))))))
          ((letrec ((g$f$9630$Pld94
                      (case-lambda
                        ((g$exp*$9631$Pld94 g$int*$9632$Pld94 g$ext*$9633$Pld94)
                         (if (null? g$exp*$9631$Pld94)
                           (begin
                             ((case-lambda
                                ((g$id*$9634$Pld94)
                                 (if (g$valid-bound-ids?$6926$Pld94
                                       g$id*$9634$Pld94)
                                   (void)
                                   (g$syntax-violation$7305$Pld94
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7227$Pld94
                                       g$id*$9634$Pld94)))))
                              (map (case-lambda
                                     ((g$x$9635$Pld94)
                                      (g$make-stx$6894$Pld94
                                        g$x$9635$Pld94
                                        g$top-mark*$6863$Pld94
                                        '()
                                        '())))
                                   g$ext*$9633$Pld94))
                             (values
                               (map g$syntax->datum$7308$Pld94
                                    g$int*$9632$Pld94)
                               (map g$syntax->datum$7308$Pld94
                                    g$ext*$9633$Pld94)))
                           ((case-lambda
                              ((g$t$9636$Pld94)
                               ((case-lambda
                                  ((g$ls/false$9637$Pld94)
                                   (if g$ls/false$9637$Pld94
                                     (apply
                                       (case-lambda
                                         ((g$rename$9638$Pld94
                                            g$i*$9639$Pld94
                                            g$e*$9640$Pld94)
                                          (begin
                                            (if (if (eq? (g$syntax->datum$7308$Pld94
                                                           g$rename$9638$Pld94)
                                                         'rename)
                                                  (if (g$for-all$5349$Pld94
                                                        g$idsyn?$9629$Pld94
                                                        g$i*$9639$Pld94)
                                                    (begin
                                                      '#f
                                                      (g$for-all$5349$Pld94
                                                        g$idsyn?$9629$Pld94
                                                        g$e*$9640$Pld94))
                                                    '#f)
                                                  '#f)
                                              (void)
                                              (g$syntax-violation$7305$Pld94
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$9631$Pld94)))
                                            (g$f$9630$Pld94
                                              (cdr g$exp*$9631$Pld94)
                                              (append
                                                g$i*$9639$Pld94
                                                g$int*$9632$Pld94)
                                              (append
                                                g$e*$9640$Pld94
                                                g$ext*$9633$Pld94)))))
                                       g$ls/false$9637$Pld94)
                                     ((case-lambda
                                        ((g$t$9641$Pld94)
                                         ((case-lambda
                                            ((g$ls/false$9642$Pld94)
                                             (if g$ls/false$9642$Pld94
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$9643$Pld94)
                                                    (begin
                                                      (if (g$idsyn?$9629$Pld94
                                                            g$ie$9643$Pld94)
                                                        (void)
                                                        (g$syntax-violation$7305$Pld94
                                                          'export
                                                          '"invalid export"
                                                          g$ie$9643$Pld94))
                                                      (g$f$9630$Pld94
                                                        (cdr g$exp*$9631$Pld94)
                                                        (cons
                                                          g$ie$9643$Pld94
                                                          g$int*$9632$Pld94)
                                                        (cons
                                                          g$ie$9643$Pld94
                                                          g$ext*$9633$Pld94)))))
                                                 g$ls/false$9642$Pld94)
                                               (g$syntax-violation$7305$Pld94
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9641$Pld94))))
                                          (g$syntax-dispatch$7199$Pld94
                                            g$t$9641$Pld94
                                            'any))))
                                      g$t$9636$Pld94))))
                                (g$syntax-dispatch$7199$Pld94
                                  g$t$9636$Pld94
                                  '(any . #(each (any any)))))))
                            (car g$exp*$9631$Pld94)))))))
             g$f$9630$Pld94)
           g$exp*$9628$Pld94
           '()
           '())))))
   (g$parse-library-name$7246$Pld94
     g$parse-library-name$10680$Pld94
     (case-lambda
       ((g$spec$9645$Pld94)
        (letrec* ((g$parse$9646$Pld94
                    (case-lambda
                      ((g$x$9653$Pld94)
                       ((case-lambda
                          ((g$t$9654$Pld94)
                           ((case-lambda
                              ((g$ls/false$9655$Pld94)
                               (if (if g$ls/false$9655$Pld94
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$9656$Pld94)
                                            (g$for-all$5349$Pld94
                                              (case-lambda
                                                ((g$x$9657$Pld94)
                                                 ((case-lambda
                                                    ((g$x$9658$Pld94)
                                                     (if (integer?
                                                           g$x$9658$Pld94)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$9658$Pld94))
                                                       '#f)))
                                                  (g$syntax->datum$7308$Pld94
                                                    g$x$9657$Pld94))))
                                              g$v*$9656$Pld94)))
                                         g$ls/false$9655$Pld94))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$9659$Pld94)
                                      (values
                                        '()
                                        (map g$syntax->datum$7308$Pld94
                                             g$v*$9659$Pld94))))
                                   g$ls/false$9655$Pld94)
                                 ((case-lambda
                                    ((g$t$9660$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$9661$Pld94)
                                         (if (if g$ls/false$9661$Pld94
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$9662$Pld94
                                                        g$rest$9663$Pld94)
                                                      (symbol?
                                                        (g$syntax->datum$7308$Pld94
                                                          g$x$9662$Pld94))))
                                                   g$ls/false$9661$Pld94))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$9664$Pld94
                                                  g$rest$9665$Pld94)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$9646$Pld94
                                                       g$rest$9665$Pld94)))
                                                  (case-lambda
                                                    ((g$x*$9668$Pld94
                                                       g$v*$9669$Pld94)
                                                     ((case-lambda
                                                        ((g$v*$9670$Pld94
                                                           g$x*$9671$Pld94)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7308$Pld94
                                                               g$x$9664$Pld94)
                                                             g$x*$9671$Pld94)
                                                           g$v*$9670$Pld94)))
                                                      g$v*$9669$Pld94
                                                      g$x*$9668$Pld94))))))
                                             g$ls/false$9661$Pld94)
                                           ((case-lambda
                                              ((g$t$9672$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$9673$Pld94)
                                                   (if g$ls/false$9673$Pld94
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$9673$Pld94)
                                                     ((case-lambda
                                                        ((g$t$9674$Pld94)
                                                         ((case-lambda
                                                            ((g$ls/false$9675$Pld94)
                                                             (if g$ls/false$9675$Pld94
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7305$Pld94
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$9645$Pld94)))
                                                                 g$ls/false$9675$Pld94)
                                                               (g$syntax-violation$7305$Pld94
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$9674$Pld94))))
                                                          (g$syntax-dispatch$7199$Pld94
                                                            g$t$9674$Pld94
                                                            '_))))
                                                      g$t$9672$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$9672$Pld94
                                                  '()))))
                                            g$t$9660$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$9660$Pld94
                                        '(any . any)))))
                                  g$t$9654$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$9654$Pld94
                              '(each-any)))))
                        g$x$9653$Pld94)))))
          (call-with-values
            (case-lambda (() (g$parse$9646$Pld94 g$spec$9645$Pld94)))
            (case-lambda
              ((g$name*$9649$Pld94 g$ver*$9650$Pld94)
               ((case-lambda
                  ((g$ver*$9651$Pld94 g$name*$9652$Pld94)
                   (begin
                     (if (null? g$name*$9652$Pld94)
                       (g$syntax-violation$7305$Pld94
                         '#f
                         '"empty library name"
                         g$spec$9645$Pld94)
                       (void))
                     (values g$name*$9652$Pld94 g$ver*$9651$Pld94))))
                g$ver*$9650$Pld94
                g$name*$9649$Pld94))))))))
   (g$parse-library$7247$Pld94
     g$parse-library$10681$Pld94
     (case-lambda
       ((g$e$9676$Pld94)
        ((case-lambda
           ((g$t$9677$Pld94)
            ((case-lambda
               ((g$ls/false$9678$Pld94)
                (if (if g$ls/false$9678$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$9679$Pld94
                               g$name*$9680$Pld94
                               g$export$9681$Pld94
                               g$exp*$9682$Pld94
                               g$import$9683$Pld94
                               g$imp*$9684$Pld94
                               g$b*$9685$Pld94)
                             (if (eq? (g$syntax->datum$7308$Pld94
                                        g$export$9681$Pld94)
                                      'export)
                               (if (eq? (g$syntax->datum$7308$Pld94
                                          g$import$9683$Pld94)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7308$Pld94
                                          g$library$9679$Pld94)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$9678$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$9686$Pld94
                         g$name*$9687$Pld94
                         g$export$9688$Pld94
                         g$exp*$9689$Pld94
                         g$import$9690$Pld94
                         g$imp*$9691$Pld94
                         g$b*$9692$Pld94)
                       (values
                         g$name*$9687$Pld94
                         g$exp*$9689$Pld94
                         g$imp*$9691$Pld94
                         g$b*$9692$Pld94)))
                    g$ls/false$9678$Pld94)
                  ((case-lambda
                     ((g$t$9693$Pld94)
                      ((case-lambda
                         ((g$ls/false$9694$Pld94)
                          (if g$ls/false$9694$Pld94
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7305$Pld94
                                   '#f
                                   '"malformed library"
                                   g$e$9676$Pld94)))
                              g$ls/false$9694$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$9693$Pld94))))
                       (g$syntax-dispatch$7199$Pld94 g$t$9693$Pld94 '_))))
                   g$t$9677$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$9677$Pld94
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$9676$Pld94))))
   (g$parse-import-spec*$7248$Pld94
     g$parse-import-spec*$10682$Pld94
     (case-lambda
       ((g$imp*$9695$Pld94)
        (letrec* ((g$idsyn?$9696$Pld94
                    (case-lambda
                      ((g$x$9955$Pld94)
                       (symbol? (g$syntax->datum$7308$Pld94 g$x$9955$Pld94)))))
                  (g$dup-error$9697$Pld94
                    (case-lambda
                      ((g$name$9954$Pld94)
                       (g$syntax-violation$7305$Pld94
                         'import
                         '"two imports with different bindings"
                         g$name$9954$Pld94))))
                  (g$merge-substs$9698$Pld94
                    (case-lambda
                      ((g$s$9945$Pld94 g$subst$9946$Pld94)
                       (letrec* ((g$insert-to-subst$9947$Pld94
                                   (case-lambda
                                     ((g$a$9948$Pld94 g$subst$9949$Pld94)
                                      ((case-lambda
                                         ((g$name$9950$Pld94 g$label$9951$Pld94)
                                          ((case-lambda
                                             ((g$t$9952$Pld94)
                                              (if g$t$9952$Pld94
                                                ((case-lambda
                                                   ((g$x$9953$Pld94)
                                                    (if (eq? (cdr g$x$9953$Pld94)
                                                             g$label$9951$Pld94)
                                                      g$subst$9949$Pld94
                                                      (g$dup-error$9697$Pld94
                                                        g$name$9950$Pld94))))
                                                 g$t$9952$Pld94)
                                                (cons
                                                  g$a$9948$Pld94
                                                  g$subst$9949$Pld94))))
                                           (assq
                                             g$name$9950$Pld94
                                             g$subst$9949$Pld94))))
                                       (car g$a$9948$Pld94)
                                       (cdr g$a$9948$Pld94))))))
                         (if (null? g$s$9945$Pld94)
                           g$subst$9946$Pld94
                           (g$insert-to-subst$9947$Pld94
                             (car g$s$9945$Pld94)
                             (g$merge-substs$9698$Pld94
                               (cdr g$s$9945$Pld94)
                               g$subst$9946$Pld94)))))))
                  (g$exclude*$9699$Pld94
                    (case-lambda
                      ((g$sym*$9921$Pld94 g$subst$9922$Pld94)
                       (letrec* ((g$exclude$9923$Pld94
                                   (case-lambda
                                     ((g$sym$9936$Pld94 g$subst$9937$Pld94)
                                      (if (null? g$subst$9937$Pld94)
                                        (g$syntax-violation$7305$Pld94
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$9936$Pld94)
                                        (if (eq? g$sym$9936$Pld94
                                                 (g$caar$4879$Pld94
                                                   g$subst$9937$Pld94))
                                          (values
                                            (g$cdar$4881$Pld94
                                              g$subst$9937$Pld94)
                                            (cdr g$subst$9937$Pld94))
                                          ((case-lambda
                                             ((g$a$9938$Pld94)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$9923$Pld94
                                                     g$sym$9936$Pld94
                                                     (cdr g$subst$9937$Pld94))))
                                                (case-lambda
                                                  ((g$old$9941$Pld94
                                                     g$subst$9942$Pld94)
                                                   ((case-lambda
                                                      ((g$subst$9943$Pld94
                                                         g$old$9944$Pld94)
                                                       (values
                                                         g$old$9944$Pld94
                                                         (cons
                                                           g$a$9938$Pld94
                                                           g$subst$9943$Pld94))))
                                                    g$subst$9942$Pld94
                                                    g$old$9941$Pld94))))))
                                           (car g$subst$9937$Pld94))))))))
                         (if (null? g$sym*$9921$Pld94)
                           (values '() g$subst$9922$Pld94)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$9923$Pld94
                                  (car g$sym*$9921$Pld94)
                                  g$subst$9922$Pld94)))
                             (case-lambda
                               ((g$old$9926$Pld94 g$subst$9927$Pld94)
                                ((case-lambda
                                   ((g$subst$9928$Pld94 g$old$9929$Pld94)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$9699$Pld94
                                           (cdr g$sym*$9921$Pld94)
                                           g$subst$9928$Pld94)))
                                      (case-lambda
                                        ((g$old*$9932$Pld94 g$subst$9933$Pld94)
                                         ((case-lambda
                                            ((g$subst$9934$Pld94
                                               g$old*$9935$Pld94)
                                             (values
                                               (cons
                                                 g$old$9929$Pld94
                                                 g$old*$9935$Pld94)
                                               g$subst$9934$Pld94)))
                                          g$subst$9933$Pld94
                                          g$old*$9932$Pld94))))))
                                 g$subst$9927$Pld94
                                 g$old$9926$Pld94)))))))))
                  (g$find*$9700$Pld94
                    (case-lambda
                      ((g$sym*$9917$Pld94 g$subst$9918$Pld94)
                       (map (case-lambda
                              ((g$x$9919$Pld94)
                               ((case-lambda
                                  ((g$t$9920$Pld94)
                                   (if g$t$9920$Pld94
                                     (cdr g$t$9920$Pld94)
                                     (g$syntax-violation$7305$Pld94
                                       'import
                                       '"cannot find identifier"
                                       g$x$9919$Pld94))))
                                (assq g$x$9919$Pld94 g$subst$9918$Pld94))))
                            g$sym*$9917$Pld94))))
                  (g$rem*$9701$Pld94
                    (case-lambda
                      ((g$sym*$9913$Pld94 g$subst$9914$Pld94)
                       ((letrec ((g$f$9915$Pld94
                                   (case-lambda
                                     ((g$subst$9916$Pld94)
                                      (if (null? g$subst$9916$Pld94)
                                        '()
                                        (if (memq
                                              (g$caar$4879$Pld94
                                                g$subst$9916$Pld94)
                                              g$sym*$9913$Pld94)
                                          (g$f$9915$Pld94
                                            (cdr g$subst$9916$Pld94))
                                          (cons
                                            (car g$subst$9916$Pld94)
                                            (g$f$9915$Pld94
                                              (cdr g$subst$9916$Pld94)))))))))
                          g$f$9915$Pld94)
                        g$subst$9914$Pld94))))
                  (g$remove-dups$9702$Pld94
                    (case-lambda
                      ((g$ls$9912$Pld94)
                       (if (null? g$ls$9912$Pld94)
                         '()
                         (if (memq (car g$ls$9912$Pld94) (cdr g$ls$9912$Pld94))
                           (g$remove-dups$9702$Pld94 (cdr g$ls$9912$Pld94))
                           (cons
                             (car g$ls$9912$Pld94)
                             (g$remove-dups$9702$Pld94
                               (cdr g$ls$9912$Pld94))))))))
                  (g$parse-library-name$9703$Pld94
                    (case-lambda
                      ((g$spec$9797$Pld94)
                       (letrec* ((g$subversion?$9798$Pld94
                                   (case-lambda
                                     ((g$x$9911$Pld94)
                                      (if (integer? g$x$9911$Pld94)
                                        (if (exact? g$x$9911$Pld94)
                                          (begin '#f (>= g$x$9911$Pld94 '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$9799$Pld94
                                   (case-lambda
                                     ((g$x*$9863$Pld94)
                                      ((case-lambda
                                         ((g$t$9864$Pld94)
                                          ((case-lambda
                                             ((g$ls/false$9865$Pld94)
                                              (if (if g$ls/false$9865$Pld94
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$9866$Pld94)
                                                           (g$subversion?$9798$Pld94
                                                             (g$syntax->datum$7308$Pld94
                                                               g$n$9866$Pld94))))
                                                        g$ls/false$9865$Pld94))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$9867$Pld94)
                                                     (case-lambda
                                                       ((g$x$9868$Pld94)
                                                        (= g$x$9868$Pld94
                                                           (g$syntax->datum$7308$Pld94
                                                             g$n$9867$Pld94))))))
                                                  g$ls/false$9865$Pld94)
                                                ((case-lambda
                                                   ((g$t$9869$Pld94)
                                                    ((case-lambda
                                                       ((g$ls/false$9870$Pld94)
                                                        (if (if g$ls/false$9870$Pld94
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$9871$Pld94
                                                                       g$sub*$9872$Pld94)
                                                                     (eq? (g$syntax->datum$7308$Pld94
                                                                            g$p?$9871$Pld94)
                                                                          'and)))
                                                                  g$ls/false$9870$Pld94))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$9873$Pld94
                                                                 g$sub*$9874$Pld94)
                                                               ((case-lambda
                                                                  ((g$p*$9875$Pld94)
                                                                   (case-lambda
                                                                     ((g$x$9876$Pld94)
                                                                      (g$for-all$5349$Pld94
                                                                        (case-lambda
                                                                          ((g$p$9877$Pld94)
                                                                           (g$p$9877$Pld94
                                                                             g$x$9876$Pld94)))
                                                                        g$p*$9875$Pld94)))))
                                                                (map g$subversion-pred$9799$Pld94
                                                                     g$sub*$9874$Pld94))))
                                                            g$ls/false$9870$Pld94)
                                                          ((case-lambda
                                                             ((g$t$9878$Pld94)
                                                              ((case-lambda
                                                                 ((g$ls/false$9879$Pld94)
                                                                  (if (if g$ls/false$9879$Pld94
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$9880$Pld94
                                                                                 g$sub*$9881$Pld94)
                                                                               (eq? (g$syntax->datum$7308$Pld94
                                                                                      g$p?$9880$Pld94)
                                                                                    'or)))
                                                                            g$ls/false$9879$Pld94))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$9882$Pld94
                                                                           g$sub*$9883$Pld94)
                                                                         ((case-lambda
                                                                            ((g$p*$9884$Pld94)
                                                                             (case-lambda
                                                                               ((g$x$9885$Pld94)
                                                                                (g$exists$5350$Pld94
                                                                                  (case-lambda
                                                                                    ((g$p$9886$Pld94)
                                                                                     (g$p$9886$Pld94
                                                                                       g$x$9885$Pld94)))
                                                                                  g$p*$9884$Pld94)))))
                                                                          (map g$subversion-pred$9799$Pld94
                                                                               g$sub*$9883$Pld94))))
                                                                      g$ls/false$9879$Pld94)
                                                                    ((case-lambda
                                                                       ((g$t$9887$Pld94)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9888$Pld94)
                                                                            (if (if g$ls/false$9888$Pld94
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$9889$Pld94
                                                                                           g$sub$9890$Pld94)
                                                                                         (eq? (g$syntax->datum$7308$Pld94
                                                                                                g$p?$9889$Pld94)
                                                                                              'not)))
                                                                                      g$ls/false$9888$Pld94))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$9891$Pld94
                                                                                     g$sub$9892$Pld94)
                                                                                   ((case-lambda
                                                                                      ((g$p$9893$Pld94)
                                                                                       (case-lambda
                                                                                         ((g$x$9894$Pld94)
                                                                                          (not (g$p$9893$Pld94
                                                                                                 g$x$9894$Pld94))))))
                                                                                    (g$subversion-pred$9799$Pld94
                                                                                      g$sub$9892$Pld94))))
                                                                                g$ls/false$9888$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$t$9895$Pld94)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9896$Pld94)
                                                                                      (if (if g$ls/false$9896$Pld94
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$9897$Pld94
                                                                                                     g$n$9898$Pld94)
                                                                                                   (if (eq? (g$syntax->datum$7308$Pld94
                                                                                                              g$p?$9897$Pld94)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$9798$Pld94
                                                                                                         (g$syntax->datum$7308$Pld94
                                                                                                           g$n$9898$Pld94)))
                                                                                                     '#f)))
                                                                                                g$ls/false$9896$Pld94))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$9899$Pld94
                                                                                               g$n$9900$Pld94)
                                                                                             (case-lambda
                                                                                               ((g$x$9901$Pld94)
                                                                                                (<= g$x$9901$Pld94
                                                                                                    (g$syntax->datum$7308$Pld94
                                                                                                      g$n$9900$Pld94))))))
                                                                                          g$ls/false$9896$Pld94)
                                                                                        ((case-lambda
                                                                                           ((g$t$9902$Pld94)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9903$Pld94)
                                                                                                (if (if g$ls/false$9903$Pld94
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$9904$Pld94
                                                                                                               g$n$9905$Pld94)
                                                                                                             (if (eq? (g$syntax->datum$7308$Pld94
                                                                                                                        g$p?$9904$Pld94)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$9798$Pld94
                                                                                                                   g$n$9905$Pld94))
                                                                                                               '#f)))
                                                                                                          g$ls/false$9903$Pld94))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$9906$Pld94
                                                                                                         g$n$9907$Pld94)
                                                                                                       (case-lambda
                                                                                                         ((g$x$9908$Pld94)
                                                                                                          (>= g$x$9908$Pld94
                                                                                                              (g$syntax->datum$7308$Pld94
                                                                                                                g$n$9907$Pld94))))))
                                                                                                    g$ls/false$9903$Pld94)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9909$Pld94)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9910$Pld94)
                                                                                                          (if g$ls/false$9910$Pld94
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7305$Pld94
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$9797$Pld94
                                                                                                                   g$x*$9863$Pld94)))
                                                                                                              g$ls/false$9910$Pld94)
                                                                                                            (g$syntax-violation$7305$Pld94
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9909$Pld94))))
                                                                                                       (g$syntax-dispatch$7199$Pld94
                                                                                                         g$t$9909$Pld94
                                                                                                         '_))))
                                                                                                   g$t$9902$Pld94))))
                                                                                             (g$syntax-dispatch$7199$Pld94
                                                                                               g$t$9902$Pld94
                                                                                               '(any any)))))
                                                                                         g$t$9895$Pld94))))
                                                                                   (g$syntax-dispatch$7199$Pld94
                                                                                     g$t$9895$Pld94
                                                                                     '(any any)))))
                                                                               g$t$9887$Pld94))))
                                                                         (g$syntax-dispatch$7199$Pld94
                                                                           g$t$9887$Pld94
                                                                           '(any any)))))
                                                                     g$t$9878$Pld94))))
                                                               (g$syntax-dispatch$7199$Pld94
                                                                 g$t$9878$Pld94
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$9869$Pld94))))
                                                     (g$syntax-dispatch$7199$Pld94
                                                       g$t$9869$Pld94
                                                       '(any . each-any)))))
                                                 g$t$9864$Pld94))))
                                           (g$syntax-dispatch$7199$Pld94
                                             g$t$9864$Pld94
                                             'any))))
                                       g$x*$9863$Pld94))))
                                 (g$version-pred$9800$Pld94
                                   (case-lambda
                                     ((g$x*$9823$Pld94)
                                      ((case-lambda
                                         ((g$t$9824$Pld94)
                                          ((case-lambda
                                             ((g$ls/false$9825$Pld94)
                                              (if g$ls/false$9825$Pld94
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$9826$Pld94) '#t))))
                                                  g$ls/false$9825$Pld94)
                                                ((case-lambda
                                                   ((g$t$9827$Pld94)
                                                    ((case-lambda
                                                       ((g$ls/false$9828$Pld94)
                                                        (if (if g$ls/false$9828$Pld94
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$9829$Pld94
                                                                       g$ver*$9830$Pld94)
                                                                     (eq? (g$syntax->datum$7308$Pld94
                                                                            g$c$9829$Pld94)
                                                                          'and)))
                                                                  g$ls/false$9828$Pld94))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$9831$Pld94
                                                                 g$ver*$9832$Pld94)
                                                               ((case-lambda
                                                                  ((g$p*$9833$Pld94)
                                                                   (case-lambda
                                                                     ((g$x$9834$Pld94)
                                                                      (g$for-all$5349$Pld94
                                                                        (case-lambda
                                                                          ((g$p$9835$Pld94)
                                                                           (g$p$9835$Pld94
                                                                             g$x$9834$Pld94)))
                                                                        g$p*$9833$Pld94)))))
                                                                (map g$version-pred$9800$Pld94
                                                                     g$ver*$9832$Pld94))))
                                                            g$ls/false$9828$Pld94)
                                                          ((case-lambda
                                                             ((g$t$9836$Pld94)
                                                              ((case-lambda
                                                                 ((g$ls/false$9837$Pld94)
                                                                  (if (if g$ls/false$9837$Pld94
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$9838$Pld94
                                                                                 g$ver*$9839$Pld94)
                                                                               (eq? (g$syntax->datum$7308$Pld94
                                                                                      g$c$9838$Pld94)
                                                                                    'or)))
                                                                            g$ls/false$9837$Pld94))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$9840$Pld94
                                                                           g$ver*$9841$Pld94)
                                                                         ((case-lambda
                                                                            ((g$p*$9842$Pld94)
                                                                             (case-lambda
                                                                               ((g$x$9843$Pld94)
                                                                                (g$exists$5350$Pld94
                                                                                  (case-lambda
                                                                                    ((g$p$9844$Pld94)
                                                                                     (g$p$9844$Pld94
                                                                                       g$x$9843$Pld94)))
                                                                                  g$p*$9842$Pld94)))))
                                                                          (map g$version-pred$9800$Pld94
                                                                               g$ver*$9841$Pld94))))
                                                                      g$ls/false$9837$Pld94)
                                                                    ((case-lambda
                                                                       ((g$t$9845$Pld94)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9846$Pld94)
                                                                            (if (if g$ls/false$9846$Pld94
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$9847$Pld94
                                                                                           g$ver$9848$Pld94)
                                                                                         (eq? (g$syntax->datum$7308$Pld94
                                                                                                g$c$9847$Pld94)
                                                                                              'not)))
                                                                                      g$ls/false$9846$Pld94))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$9849$Pld94
                                                                                     g$ver$9850$Pld94)
                                                                                   ((case-lambda
                                                                                      ((g$p$9851$Pld94)
                                                                                       (case-lambda
                                                                                         ((g$x$9852$Pld94)
                                                                                          (not (g$p$9851$Pld94
                                                                                                 g$x$9852$Pld94))))))
                                                                                    (g$version-pred$9800$Pld94
                                                                                      g$ver$9850$Pld94))))
                                                                                g$ls/false$9846$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$t$9853$Pld94)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9854$Pld94)
                                                                                      (if g$ls/false$9854$Pld94
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$9855$Pld94)
                                                                                             ((case-lambda
                                                                                                ((g$p*$9856$Pld94)
                                                                                                 (case-lambda
                                                                                                   ((g$x$9857$Pld94)
                                                                                                    ((letrec ((g$f$9858$Pld94
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$9859$Pld94
                                                                                                                     g$x$9860$Pld94)
                                                                                                                   (if (null?
                                                                                                                         g$p*$9859$Pld94)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$9860$Pld94)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$9859$Pld94)
                                                                                                                            (car g$x$9860$Pld94))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$9858$Pld94
                                                                                                                             (cdr g$p*$9859$Pld94)
                                                                                                                             (cdr g$x$9860$Pld94)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$9858$Pld94)
                                                                                                     g$p*$9856$Pld94
                                                                                                     g$x$9857$Pld94)))))
                                                                                              (map g$subversion-pred$9799$Pld94
                                                                                                   g$sub*$9855$Pld94))))
                                                                                          g$ls/false$9854$Pld94)
                                                                                        ((case-lambda
                                                                                           ((g$t$9861$Pld94)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9862$Pld94)
                                                                                                (if g$ls/false$9862$Pld94
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7305$Pld94
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$9797$Pld94
                                                                                                         g$x*$9823$Pld94)))
                                                                                                    g$ls/false$9862$Pld94)
                                                                                                  (g$syntax-violation$7305$Pld94
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$9861$Pld94))))
                                                                                             (g$syntax-dispatch$7199$Pld94
                                                                                               g$t$9861$Pld94
                                                                                               '_))))
                                                                                         g$t$9853$Pld94))))
                                                                                   (g$syntax-dispatch$7199$Pld94
                                                                                     g$t$9853$Pld94
                                                                                     'each-any))))
                                                                               g$t$9845$Pld94))))
                                                                         (g$syntax-dispatch$7199$Pld94
                                                                           g$t$9845$Pld94
                                                                           '(any any)))))
                                                                     g$t$9836$Pld94))))
                                                               (g$syntax-dispatch$7199$Pld94
                                                                 g$t$9836$Pld94
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$9827$Pld94))))
                                                     (g$syntax-dispatch$7199$Pld94
                                                       g$t$9827$Pld94
                                                       '(any . each-any)))))
                                                 g$t$9824$Pld94))))
                                           (g$syntax-dispatch$7199$Pld94
                                             g$t$9824$Pld94
                                             '()))))
                                       g$x*$9823$Pld94)))))
                         ((letrec ((g$f$9801$Pld94
                                     (case-lambda
                                       ((g$x$9802$Pld94)
                                        ((case-lambda
                                           ((g$t$9803$Pld94)
                                            ((case-lambda
                                               ((g$ls/false$9804$Pld94)
                                                (if g$ls/false$9804$Pld94
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$9805$Pld94)
                                                       (values
                                                         '()
                                                         (g$version-pred$9800$Pld94
                                                           g$version-spec*$9805$Pld94))))
                                                    g$ls/false$9804$Pld94)
                                                  ((case-lambda
                                                     ((g$t$9806$Pld94)
                                                      ((case-lambda
                                                         ((g$ls/false$9807$Pld94)
                                                          (if (if g$ls/false$9807$Pld94
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$9808$Pld94
                                                                         g$x*$9809$Pld94)
                                                                       (g$idsyn?$9696$Pld94
                                                                         g$x$9808$Pld94)))
                                                                    g$ls/false$9807$Pld94))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$9810$Pld94
                                                                   g$x*$9811$Pld94)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$9801$Pld94
                                                                        g$x*$9811$Pld94)))
                                                                   (case-lambda
                                                                     ((g$name$9814$Pld94
                                                                        g$pred$9815$Pld94)
                                                                      ((case-lambda
                                                                         ((g$pred$9816$Pld94
                                                                            g$name$9817$Pld94)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7308$Pld94
                                                                                g$x$9810$Pld94)
                                                                              g$name$9817$Pld94)
                                                                            g$pred$9816$Pld94)))
                                                                       g$pred$9815$Pld94
                                                                       g$name$9814$Pld94))))))
                                                              g$ls/false$9807$Pld94)
                                                            ((case-lambda
                                                               ((g$t$9818$Pld94)
                                                                ((case-lambda
                                                                   ((g$ls/false$9819$Pld94)
                                                                    (if g$ls/false$9819$Pld94
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$9820$Pld94)
                                                                                '#t)))))
                                                                        g$ls/false$9819$Pld94)
                                                                      ((case-lambda
                                                                         ((g$t$9821$Pld94)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9822$Pld94)
                                                                              (if g$ls/false$9822$Pld94
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7305$Pld94
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$9797$Pld94)))
                                                                                  g$ls/false$9822$Pld94)
                                                                                (g$syntax-violation$7305$Pld94
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9821$Pld94))))
                                                                           (g$syntax-dispatch$7199$Pld94
                                                                             g$t$9821$Pld94
                                                                             '_))))
                                                                       g$t$9818$Pld94))))
                                                                 (g$syntax-dispatch$7199$Pld94
                                                                   g$t$9818$Pld94
                                                                   '()))))
                                                             g$t$9806$Pld94))))
                                                       (g$syntax-dispatch$7199$Pld94
                                                         g$t$9806$Pld94
                                                         '(any . any)))))
                                                   g$t$9803$Pld94))))
                                             (g$syntax-dispatch$7199$Pld94
                                               g$t$9803$Pld94
                                               '(each-any)))))
                                         g$x$9802$Pld94)))))
                            g$f$9801$Pld94)
                          g$spec$9797$Pld94)))))
                  (g$import-library$9704$Pld94
                    (case-lambda
                      ((g$spec*$9789$Pld94)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$9703$Pld94
                              g$spec*$9789$Pld94)))
                         (case-lambda
                           ((g$name$9792$Pld94 g$pred$9793$Pld94)
                            ((case-lambda
                               ((g$pred$9794$Pld94 g$name$9795$Pld94)
                                (begin
                                  (if (null? g$name$9795$Pld94)
                                    (g$syntax-violation$7305$Pld94
                                      'import
                                      '"empty library name"
                                      g$spec*$9789$Pld94)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$9796$Pld94)
                                      (begin
                                        (if g$lib$9796$Pld94
                                          (void)
                                          (g$syntax-violation$7305$Pld94
                                            'import
                                            '"cannot find library with required name"
                                            g$name$9795$Pld94))
                                        (if (g$pred$9794$Pld94
                                              (g$library-version$6689$Pld94
                                                g$lib$9796$Pld94))
                                          (void)
                                          (g$syntax-violation$7305$Pld94
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$9789$Pld94
                                            g$lib$9796$Pld94))
                                        ((g$imp-collector$7253$Pld94)
                                         g$lib$9796$Pld94)
                                        (g$library-subst$6693$Pld94
                                          g$lib$9796$Pld94))))
                                   (g$find-library-by-name$6729$Pld94
                                     g$name$9795$Pld94)))))
                             g$pred$9793$Pld94
                             g$name$9792$Pld94)))))))
                  (g$get-import$9705$Pld94
                    (case-lambda
                      ((g$spec$9718$Pld94)
                       ((case-lambda
                          ((g$t$9719$Pld94)
                           ((case-lambda
                              ((g$ls/false$9720$Pld94)
                               (if (if g$ls/false$9720$Pld94
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$9721$Pld94 g$x*$9722$Pld94)
                                            (not (memq
                                                   (g$syntax->datum$7308$Pld94
                                                     g$x$9721$Pld94)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$9720$Pld94))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$9723$Pld94 g$x*$9724$Pld94)
                                      (g$import-library$9704$Pld94
                                        (cons g$x$9723$Pld94 g$x*$9724$Pld94))))
                                   g$ls/false$9720$Pld94)
                                 ((case-lambda
                                    ((g$t$9725$Pld94)
                                     ((case-lambda
                                        ((g$ls/false$9726$Pld94)
                                         (if (if g$ls/false$9726$Pld94
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$9727$Pld94
                                                        g$isp$9728$Pld94
                                                        g$old*$9729$Pld94
                                                        g$new*$9730$Pld94)
                                                      (if (eq? (g$syntax->datum$7308$Pld94
                                                                 g$rename$9727$Pld94)
                                                               'rename)
                                                        (if (g$for-all$5349$Pld94
                                                              g$idsyn?$9696$Pld94
                                                              g$old*$9729$Pld94)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5349$Pld94
                                                              g$idsyn?$9696$Pld94
                                                              g$new*$9730$Pld94))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$9726$Pld94))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$9731$Pld94
                                                  g$isp$9732$Pld94
                                                  g$old*$9733$Pld94
                                                  g$new*$9734$Pld94)
                                                ((case-lambda
                                                   ((g$subst$9735$Pld94
                                                      g$old*$9736$Pld94
                                                      g$new*$9737$Pld94)
                                                    ((case-lambda
                                                       ((g$old-label*$9738$Pld94)
                                                        ((case-lambda
                                                           ((g$subst$9739$Pld94)
                                                            (g$merge-substs$9698$Pld94
                                                              (map cons
                                                                   g$new*$9737$Pld94
                                                                   g$old-label*$9738$Pld94)
                                                              g$subst$9739$Pld94)))
                                                         (g$rem*$9701$Pld94
                                                           g$old*$9736$Pld94
                                                           g$subst$9735$Pld94))))
                                                     (g$find*$9700$Pld94
                                                       g$old*$9736$Pld94
                                                       g$subst$9735$Pld94))))
                                                 (g$get-import$9705$Pld94
                                                   g$isp$9732$Pld94)
                                                 (map g$syntax->datum$7308$Pld94
                                                      g$old*$9733$Pld94)
                                                 (map g$syntax->datum$7308$Pld94
                                                      g$new*$9734$Pld94))))
                                             g$ls/false$9726$Pld94)
                                           ((case-lambda
                                              ((g$t$9740$Pld94)
                                               ((case-lambda
                                                  ((g$ls/false$9741$Pld94)
                                                   (if (if g$ls/false$9741$Pld94
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$9742$Pld94
                                                                  g$isp$9743$Pld94
                                                                  g$sym*$9744$Pld94)
                                                                (if (eq? (g$syntax->datum$7308$Pld94
                                                                           g$except$9742$Pld94)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5349$Pld94
                                                                      g$idsyn?$9696$Pld94
                                                                      g$sym*$9744$Pld94))
                                                                  '#f)))
                                                             g$ls/false$9741$Pld94))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$9745$Pld94
                                                            g$isp$9746$Pld94
                                                            g$sym*$9747$Pld94)
                                                          ((case-lambda
                                                             ((g$subst$9748$Pld94)
                                                              (g$rem*$9701$Pld94
                                                                (map g$syntax->datum$7308$Pld94
                                                                     g$sym*$9747$Pld94)
                                                                g$subst$9748$Pld94)))
                                                           (g$get-import$9705$Pld94
                                                             g$isp$9746$Pld94))))
                                                       g$ls/false$9741$Pld94)
                                                     ((case-lambda
                                                        ((g$t$9749$Pld94)
                                                         ((case-lambda
                                                            ((g$ls/false$9750$Pld94)
                                                             (if (if g$ls/false$9750$Pld94
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$9751$Pld94
                                                                            g$isp$9752$Pld94
                                                                            g$sym*$9753$Pld94)
                                                                          (if (eq? (g$syntax->datum$7308$Pld94
                                                                                     g$only$9751$Pld94)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5349$Pld94
                                                                                g$idsyn?$9696$Pld94
                                                                                g$sym*$9753$Pld94))
                                                                            '#f)))
                                                                       g$ls/false$9750$Pld94))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$9754$Pld94
                                                                      g$isp$9755$Pld94
                                                                      g$sym*$9756$Pld94)
                                                                    ((case-lambda
                                                                       ((g$subst$9757$Pld94
                                                                          g$sym*$9758$Pld94)
                                                                        ((case-lambda
                                                                           ((g$sym*$9759$Pld94)
                                                                            ((case-lambda
                                                                               ((g$lab*$9760$Pld94)
                                                                                (map cons
                                                                                     g$sym*$9759$Pld94
                                                                                     g$lab*$9760$Pld94)))
                                                                             (g$find*$9700$Pld94
                                                                               g$sym*$9759$Pld94
                                                                               g$subst$9757$Pld94))))
                                                                         (g$remove-dups$9702$Pld94
                                                                           g$sym*$9758$Pld94))))
                                                                     (g$get-import$9705$Pld94
                                                                       g$isp$9755$Pld94)
                                                                     (map g$syntax->datum$7308$Pld94
                                                                          g$sym*$9756$Pld94))))
                                                                 g$ls/false$9750$Pld94)
                                                               ((case-lambda
                                                                  ((g$t$9761$Pld94)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9762$Pld94)
                                                                       (if (if g$ls/false$9762$Pld94
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$9763$Pld94
                                                                                      g$isp$9764$Pld94
                                                                                      g$p$9765$Pld94)
                                                                                    (if (eq? (g$syntax->datum$7308$Pld94
                                                                                               g$prefix$9763$Pld94)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$9696$Pld94
                                                                                          g$p$9765$Pld94))
                                                                                      '#f)))
                                                                                 g$ls/false$9762$Pld94))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$9766$Pld94
                                                                                g$isp$9767$Pld94
                                                                                g$p$9768$Pld94)
                                                                              ((case-lambda
                                                                                 ((g$subst$9769$Pld94
                                                                                    g$prefix$9770$Pld94)
                                                                                  (map (case-lambda
                                                                                         ((g$x$9771$Pld94)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$9770$Pld94
                                                                                                (symbol->string
                                                                                                  (car g$x$9771$Pld94))))
                                                                                            (cdr g$x$9771$Pld94))))
                                                                                       g$subst$9769$Pld94)))
                                                                               (g$get-import$9705$Pld94
                                                                                 g$isp$9767$Pld94)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7308$Pld94
                                                                                   g$p$9768$Pld94)))))
                                                                           g$ls/false$9762$Pld94)
                                                                         ((case-lambda
                                                                            ((g$t$9772$Pld94)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9773$Pld94)
                                                                                 (if (if g$ls/false$9773$Pld94
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$9774$Pld94
                                                                                                g$spec*$9775$Pld94)
                                                                                              (eq? (g$syntax->datum$7308$Pld94
                                                                                                     g$library$9774$Pld94)
                                                                                                   'library)))
                                                                                           g$ls/false$9773$Pld94))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$9776$Pld94
                                                                                          g$spec*$9777$Pld94)
                                                                                        (g$import-library$9704$Pld94
                                                                                          g$spec*$9777$Pld94)))
                                                                                     g$ls/false$9773$Pld94)
                                                                                   ((case-lambda
                                                                                      ((g$t$9778$Pld94)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9779$Pld94)
                                                                                           (if (if g$ls/false$9779$Pld94
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$9780$Pld94
                                                                                                          g$isp$9781$Pld94
                                                                                                          g$rest$9782$Pld94)
                                                                                                        (eq? (g$syntax->datum$7308$Pld94
                                                                                                               g$for$9780$Pld94)
                                                                                                             'for)))
                                                                                                     g$ls/false$9779$Pld94))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$9783$Pld94
                                                                                                    g$isp$9784$Pld94
                                                                                                    g$rest$9785$Pld94)
                                                                                                  (g$get-import$9705$Pld94
                                                                                                    g$isp$9784$Pld94)))
                                                                                               g$ls/false$9779$Pld94)
                                                                                             ((case-lambda
                                                                                                ((g$t$9786$Pld94)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$9787$Pld94)
                                                                                                     (if g$ls/false$9787$Pld94
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$9788$Pld94)
                                                                                                            (g$syntax-violation$7305$Pld94
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$9788$Pld94)))
                                                                                                         g$ls/false$9787$Pld94)
                                                                                                       (g$syntax-violation$7305$Pld94
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$9786$Pld94))))
                                                                                                  (g$syntax-dispatch$7199$Pld94
                                                                                                    g$t$9786$Pld94
                                                                                                    'any))))
                                                                                              g$t$9778$Pld94))))
                                                                                        (g$syntax-dispatch$7199$Pld94
                                                                                          g$t$9778$Pld94
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$9772$Pld94))))
                                                                              (g$syntax-dispatch$7199$Pld94
                                                                                g$t$9772$Pld94
                                                                                '(any each-any)))))
                                                                          g$t$9761$Pld94))))
                                                                    (g$syntax-dispatch$7199$Pld94
                                                                      g$t$9761$Pld94
                                                                      '(any any
                                                                            any)))))
                                                                g$t$9749$Pld94))))
                                                          (g$syntax-dispatch$7199$Pld94
                                                            g$t$9749$Pld94
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$9740$Pld94))))
                                                (g$syntax-dispatch$7199$Pld94
                                                  g$t$9740$Pld94
                                                  '(any any . each-any)))))
                                            g$t$9725$Pld94))))
                                      (g$syntax-dispatch$7199$Pld94
                                        g$t$9725$Pld94
                                        '(any any . #(each (any any)))))))
                                  g$t$9719$Pld94))))
                            (g$syntax-dispatch$7199$Pld94
                              g$t$9719$Pld94
                              '(any . each-any)))))
                        g$spec$9718$Pld94))))
                  (g$add-imports!$9706$Pld94
                    (case-lambda
                      ((g$imp$9710$Pld94 g$h$9711$Pld94)
                       ((case-lambda
                          ((g$subst$9712$Pld94)
                           (for-each
                             (case-lambda
                               ((g$x$9713$Pld94)
                                ((case-lambda
                                   ((g$name$9714$Pld94 g$label$9715$Pld94)
                                    ((case-lambda
                                       ((g$t$9716$Pld94)
                                        (if g$t$9716$Pld94
                                          ((case-lambda
                                             ((g$l$9717$Pld94)
                                              (if (eq? g$l$9717$Pld94
                                                       g$label$9715$Pld94)
                                                (void)
                                                (g$dup-error$9697$Pld94
                                                  g$name$9714$Pld94))))
                                           g$t$9716$Pld94)
                                          (g$hashtable-set!$5146$Pld94
                                            g$h$9711$Pld94
                                            g$name$9714$Pld94
                                            g$label$9715$Pld94))))
                                     (g$hashtable-ref$5145$Pld94
                                       g$h$9711$Pld94
                                       g$name$9714$Pld94
                                       '#f))))
                                 (car g$x$9713$Pld94)
                                 (cdr g$x$9713$Pld94))))
                             g$subst$9712$Pld94)))
                        (g$get-import$9705$Pld94 g$imp$9710$Pld94))))))
          ((letrec ((g$f$9707$Pld94
                      (case-lambda
                        ((g$imp*$9708$Pld94 g$h$9709$Pld94)
                         (if (null? g$imp*$9708$Pld94)
                           (hashtable-entries g$h$9709$Pld94)
                           (begin
                             (g$add-imports!$9706$Pld94
                               (car g$imp*$9708$Pld94)
                               g$h$9709$Pld94)
                             (g$f$9707$Pld94
                               (cdr g$imp*$9708$Pld94)
                               g$h$9709$Pld94)))))))
             g$f$9707$Pld94)
           g$imp*$9695$Pld94
           (g$make-eq-hashtable$5142$Pld94))))))
   (g$make-top-rib$7249$Pld94
     g$make-top-rib$10683$Pld94
     (case-lambda
       ((g$names$9956$Pld94 g$labels$9957$Pld94)
        ((case-lambda
           ((g$rib$9958$Pld94)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$9959$Pld94 g$label$9960$Pld94)
                   (begin
                     (if (symbol? g$name$9959$Pld94)
                       (void)
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$9959$Pld94))
                     (g$extend-rib!$6885$Pld94
                       g$rib$9958$Pld94
                       (g$make-stx$6894$Pld94
                         g$name$9959$Pld94
                         g$top-mark*$6863$Pld94
                         '()
                         '())
                       g$label$9960$Pld94))))
                g$names$9956$Pld94
                g$labels$9957$Pld94)
              g$rib$9958$Pld94)))
         (g$make-empty-rib$6884$Pld94)))))
   (g$make-collector$7250$Pld94
     g$make-collector$10684$Pld94
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$9961$Pld94)
            (case-lambda
              (() g$ls$9961$Pld94)
              ((g$x$9962$Pld94)
               (set! g$ls$9961$Pld94
                 (g$set-cons$6860$Pld94 g$x$9962$Pld94 g$ls$9961$Pld94))))))
         '()))))
   (g$inv-collector$7251$Pld94
     g$inv-collector$10685$Pld94
     (g$make-parameter$6189$Pld94
       (case-lambda
         (g$args$9963$Pld94
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$9964$Pld94)
          (begin
            (if (procedure? g$x$9964$Pld94)
              (void)
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$9964$Pld94))
            g$x$9964$Pld94)))))
   (g$vis-collector$7252$Pld94
     g$vis-collector$10686$Pld94
     (g$make-parameter$6189$Pld94
       (case-lambda
         (g$args$9965$Pld94
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$9966$Pld94)
          (begin
            (if (procedure? g$x$9966$Pld94)
              (void)
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$9966$Pld94))
            g$x$9966$Pld94)))))
   (g$imp-collector$7253$Pld94
     g$imp-collector$10687$Pld94
     (g$make-parameter$6189$Pld94
       (case-lambda
         (g$args$9967$Pld94
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$9968$Pld94)
          (begin
            (if (procedure? g$x$9968$Pld94)
              (void)
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$9968$Pld94))
            g$x$9968$Pld94)))))
   (g$chi-library-internal$7254$Pld94
     g$chi-library-internal$10688$Pld94
     (case-lambda
       ((g$e*$9969$Pld94 g$rib$9970$Pld94 g$top?$9971$Pld94)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7243$Pld94
               g$e*$9969$Pld94
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$9970$Pld94
               g$top?$9971$Pld94)))
          (case-lambda
            ((g$e*$9979$Pld94
               g$r$9980$Pld94
               g$mr$9981$Pld94
               g$lex*$9982$Pld94
               g$rhs*$9983$Pld94
               g$mod**$9984$Pld94
               g$_kwd*$9985$Pld94)
             ((case-lambda
                ((g$_kwd*$9986$Pld94
                   g$mod**$9987$Pld94
                   g$rhs*$9988$Pld94
                   g$lex*$9989$Pld94
                   g$mr$9990$Pld94
                   g$r$9991$Pld94
                   g$e*$9992$Pld94)
                 (values
                   (append
                     (apply append (reverse g$mod**$9987$Pld94))
                     g$e*$9992$Pld94)
                   g$r$9991$Pld94
                   g$mr$9990$Pld94
                   (reverse g$lex*$9989$Pld94)
                   (reverse g$rhs*$9988$Pld94))))
              g$_kwd*$9985$Pld94
              g$mod**$9984$Pld94
              g$rhs*$9983$Pld94
              g$lex*$9982$Pld94
              g$mr$9981$Pld94
              g$r$9980$Pld94
              g$e*$9979$Pld94)))))))
   (g$chi-interaction-expr$7255$Pld94
     g$chi-interaction-expr$10689$Pld94
     (case-lambda
       ((g$e$9993$Pld94 g$rib$9994$Pld94 g$r$9995$Pld94)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7243$Pld94
               (list g$e$9993$Pld94)
               g$r$9995$Pld94
               g$r$9995$Pld94
               '()
               '()
               '()
               '()
               g$rib$9994$Pld94
               '#t)))
          (case-lambda
            ((g$e*$10003$Pld94
               g$r$10004$Pld94
               g$mr$10005$Pld94
               g$lex*$10006$Pld94
               g$rhs*$10007$Pld94
               g$mod**$10008$Pld94
               g$_kwd*$10009$Pld94)
             ((case-lambda
                ((g$_kwd*$10010$Pld94
                   g$mod**$10011$Pld94
                   g$rhs*$10012$Pld94
                   g$lex*$10013$Pld94
                   g$mr$10014$Pld94
                   g$r$10015$Pld94
                   g$e*$10016$Pld94)
                 ((case-lambda
                    ((g$e*$10017$Pld94)
                     ((case-lambda
                        ((g$e$10018$Pld94)
                         (values g$e$10018$Pld94 g$r$10015$Pld94)))
                      (if (null? g$e*$10017$Pld94)
                        (g$build-void$6856$Pld94)
                        (if (null? (cdr g$e*$10017$Pld94))
                          (car g$e*$10017$Pld94)
                          (g$build-sequence$6855$Pld94
                            '#f
                            g$e*$10017$Pld94))))))
                  (g$expand-interaction-rhs*/init*$7224$Pld94
                    (reverse g$lex*$10013$Pld94)
                    (reverse g$rhs*$10012$Pld94)
                    (append
                      (apply append (reverse g$mod**$10011$Pld94))
                      g$e*$10016$Pld94)
                    g$r$10015$Pld94
                    g$mr$10014$Pld94))))
              g$_kwd*$10009$Pld94
              g$mod**$10008$Pld94
              g$rhs*$10007$Pld94
              g$lex*$10006$Pld94
              g$mr$10005$Pld94
              g$r$10004$Pld94
              g$e*$10003$Pld94)))))))
   (g$library-body-expander$7256$Pld94
     g$library-body-expander$10690$Pld94
     (case-lambda
       ((g$name$10019$Pld94
          g$exp*$10020$Pld94
          g$imp*$10021$Pld94
          g$b*$10022$Pld94
          g$top?$10023$Pld94)
        (letrec* ((g$itc$10024$Pld94 (g$make-collector$7250$Pld94)))
          ((case-lambda
             ((g$imp-collector$10029$Pld94
                g$top-level-context$10030$Pld94
                g$imp-collector$10031$Pld94
                g$top-level-context$10032$Pld94)
              ((case-lambda
                 ((g$swap$10033$Pld94)
                  (dynamic-wind
                    g$swap$10033$Pld94
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (() (g$parse-exports$7245$Pld94 g$exp*$10020$Pld94)))
                         (case-lambda
                           ((g$exp-int*$10036$Pld94 g$exp-ext*$10037$Pld94)
                            ((case-lambda
                               ((g$exp-ext*$10038$Pld94 g$exp-int*$10039$Pld94)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7248$Pld94
                                       g$imp*$10021$Pld94)))
                                  (case-lambda
                                    ((g$subst-names$10042$Pld94
                                       g$subst-labels$10043$Pld94)
                                     ((case-lambda
                                        ((g$subst-labels$10044$Pld94
                                           g$subst-names$10045$Pld94)
                                         ((case-lambda
                                            ((g$rib$10046$Pld94)
                                             ((case-lambda
                                                ((g$b*$10047$Pld94
                                                   g$rtc$10048$Pld94
                                                   g$vtc$10049$Pld94)
                                                 ((case-lambda
                                                    ((g$inv-collector$10054$Pld94
                                                       g$vis-collector$10055$Pld94
                                                       g$inv-collector$10056$Pld94
                                                       g$vis-collector$10057$Pld94)
                                                     ((case-lambda
                                                        ((g$swap$10058$Pld94)
                                                         (dynamic-wind
                                                           g$swap$10058$Pld94
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7254$Pld94
                                                                     g$b*$10047$Pld94
                                                                     g$rib$10046$Pld94
                                                                     g$top?$10023$Pld94)))
                                                                (case-lambda
                                                                  ((g$init*$10064$Pld94
                                                                     g$r$10065$Pld94
                                                                     g$mr$10066$Pld94
                                                                     g$lex*$10067$Pld94
                                                                     g$rhs*$10068$Pld94)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10069$Pld94
                                                                         g$lex*$10070$Pld94
                                                                         g$mr$10071$Pld94
                                                                         g$r$10072$Pld94
                                                                         g$init*$10073$Pld94)
                                                                       (begin
                                                                         (g$seal-rib!$6887$Pld94
                                                                           g$rib$10046$Pld94)
                                                                         ((case-lambda
                                                                            ((g$init*$10074$Pld94)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10075$Pld94)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$6888$Pld94
                                                                                         g$rib$10046$Pld94)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10076$Pld94
                                                                                             g$export-subst$10077$Pld94)
                                                                                           (letrec* ((g$errstr$10078$Pld94
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7297$Pld94
                                                                                                    g$lex*$10070$Pld94
                                                                                                    g$loc*$10076$Pld94
                                                                                                    g$r$10072$Pld94)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10082$Pld94
                                                                                                    g$global*$10083$Pld94
                                                                                                    g$macro*$10084$Pld94)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10085$Pld94
                                                                                                        g$global*$10086$Pld94
                                                                                                        g$export-env$10087$Pld94)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10088$Pld94)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10089$Pld94
                                                                                                                   g$label$10090$Pld94)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10091$Pld94)
                                                                                                                     (if g$p$10091$Pld94
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10092$Pld94)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10093$Pld94)
                                                                                                                               (if (eq? g$type$10093$Pld94
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7305$Pld94
                                                                                                                                   'export
                                                                                                                                   g$errstr$10078$Pld94
                                                                                                                                   g$name$10089$Pld94)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10092$Pld94))))
                                                                                                                        (cdr g$p$10091$Pld94))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10090$Pld94
                                                                                                                    g$export-env$10087$Pld94))))
                                                                                                              (car g$s$10088$Pld94)
                                                                                                              (cdr g$s$10088$Pld94))))
                                                                                                          g$export-subst$10077$Pld94)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10094$Pld94
                                                                                                              g$invoke-definitions$10095$Pld94)
                                                                                                            (values
                                                                                                              (g$itc$10024$Pld94)
                                                                                                              (g$rtc$10048$Pld94)
                                                                                                              (g$vtc$10049$Pld94)
                                                                                                              (g$build-sequence$6855$Pld94
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10095$Pld94
                                                                                                                  (list
                                                                                                                    g$invoke-body$10094$Pld94)))
                                                                                                              g$macro*$10085$Pld94
                                                                                                              g$export-subst$10077$Pld94
                                                                                                              g$export-env$10087$Pld94)))
                                                                                                         (g$build-library-letrec*$6859$Pld94
                                                                                                           '#f
                                                                                                           g$name$10019$Pld94
                                                                                                           g$lex*$10070$Pld94
                                                                                                           g$loc*$10076$Pld94
                                                                                                           g$rhs*$10075$Pld94
                                                                                                           (if (null?
                                                                                                                 g$init*$10074$Pld94)
                                                                                                             (g$build-void$6856$Pld94)
                                                                                                             (g$build-sequence$6855$Pld94
                                                                                                               '#f
                                                                                                               g$init*$10074$Pld94)))
                                                                                                         (map g$build-global-define$6851$Pld94
                                                                                                              (map cdr
                                                                                                                   g$global*$10086$Pld94))))))
                                                                                                   g$macro*$10084$Pld94
                                                                                                   g$global*$10083$Pld94
                                                                                                   g$export-env$10082$Pld94)))))))
                                                                                        (map g$gen-global$6866$Pld94
                                                                                             g$lex*$10070$Pld94)
                                                                                        (g$make-export-subst$7296$Pld94
                                                                                          g$exp-int*$10039$Pld94
                                                                                          g$exp-ext*$10038$Pld94
                                                                                          g$rib$10046$Pld94))))))))
                                                                              (g$chi-rhs*$7225$Pld94
                                                                                g$rhs*$10069$Pld94
                                                                                g$r$10072$Pld94
                                                                                g$mr$10071$Pld94))))
                                                                          (g$chi-expr*$7215$Pld94
                                                                            g$init*$10073$Pld94
                                                                            g$r$10072$Pld94
                                                                            g$mr$10071$Pld94)))))
                                                                    g$rhs*$10068$Pld94
                                                                    g$lex*$10067$Pld94
                                                                    g$mr$10066$Pld94
                                                                    g$r$10065$Pld94
                                                                    g$init*$10064$Pld94))))))
                                                           g$swap$10058$Pld94)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10096$Pld94)
                                                               (begin
                                                                 (g$inv-collector$10054$Pld94
                                                                   g$inv-collector$10056$Pld94)
                                                                 (set! g$inv-collector$10056$Pld94
                                                                   g$t$10096$Pld94))))
                                                            (g$inv-collector$10054$Pld94))
                                                           ((case-lambda
                                                              ((g$t$10097$Pld94)
                                                               (begin
                                                                 (g$vis-collector$10055$Pld94
                                                                   g$vis-collector$10057$Pld94)
                                                                 (set! g$vis-collector$10057$Pld94
                                                                   g$t$10097$Pld94))))
                                                            (g$vis-collector$10055$Pld94))))))))
                                                  g$inv-collector$7251$Pld94
                                                  g$vis-collector$7252$Pld94
                                                  g$rtc$10048$Pld94
                                                  g$vtc$10049$Pld94)))
                                              (map (case-lambda
                                                     ((g$x$10098$Pld94)
                                                      (g$make-stx$6894$Pld94
                                                        g$x$10098$Pld94
                                                        g$top-mark*$6863$Pld94
                                                        (list g$rib$10046$Pld94)
                                                        '())))
                                                   g$b*$10022$Pld94)
                                              (g$make-collector$7250$Pld94)
                                              (g$make-collector$7250$Pld94))))
                                          (g$make-top-rib$7249$Pld94
                                            g$subst-names$10045$Pld94
                                            g$subst-labels$10044$Pld94))))
                                      g$subst-labels$10043$Pld94
                                      g$subst-names$10042$Pld94))))))
                             g$exp-ext*$10037$Pld94
                             g$exp-int*$10036$Pld94))))))
                    g$swap$10033$Pld94)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10099$Pld94)
                        (begin
                          (g$imp-collector$10029$Pld94
                            g$imp-collector$10031$Pld94)
                          (set! g$imp-collector$10031$Pld94 g$t$10099$Pld94))))
                     (g$imp-collector$10029$Pld94))
                    ((case-lambda
                       ((g$t$10100$Pld94)
                        (begin
                          (g$top-level-context$10030$Pld94
                            g$top-level-context$10032$Pld94)
                          (set! g$top-level-context$10032$Pld94
                            g$t$10100$Pld94))))
                     (g$top-level-context$10030$Pld94))))))))
           g$imp-collector$7253$Pld94
           g$top-level-context$7312$Pld94
           g$itc$10024$Pld94
           '#f)))))
   (g$core-library-expander$7257$Pld94
     g$core-library-expander$10691$Pld94
     (case-lambda
       ((g$e$10101$Pld94 g$verify-name$10102$Pld94)
        (call-with-values
          (case-lambda (() (g$parse-library$7247$Pld94 g$e$10101$Pld94)))
          (case-lambda
            ((g$name*$10107$Pld94
               g$exp*$10108$Pld94
               g$imp*$10109$Pld94
               g$b*$10110$Pld94)
             ((case-lambda
                ((g$b*$10111$Pld94
                   g$imp*$10112$Pld94
                   g$exp*$10113$Pld94
                   g$name*$10114$Pld94)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$7246$Pld94 g$name*$10114$Pld94)))
                   (case-lambda
                     ((g$name$10117$Pld94 g$ver$10118$Pld94)
                      ((case-lambda
                         ((g$ver$10119$Pld94 g$name$10120$Pld94)
                          (begin
                            (g$verify-name$10102$Pld94 g$name$10120$Pld94)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7256$Pld94
                                   g$name$10120$Pld94
                                   g$exp*$10113$Pld94
                                   g$imp*$10112$Pld94
                                   g$b*$10111$Pld94
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10128$Pld94
                                   g$invoke-req*$10129$Pld94
                                   g$visit-req*$10130$Pld94
                                   g$invoke-code$10131$Pld94
                                   g$visit-code$10132$Pld94
                                   g$export-subst$10133$Pld94
                                   g$export-env$10134$Pld94)
                                 ((case-lambda
                                    ((g$export-env$10135$Pld94
                                       g$export-subst$10136$Pld94
                                       g$visit-code$10137$Pld94
                                       g$invoke-code$10138$Pld94
                                       g$visit-req*$10139$Pld94
                                       g$invoke-req*$10140$Pld94
                                       g$imp*$10141$Pld94)
                                     (values
                                       g$name$10120$Pld94
                                       g$ver$10119$Pld94
                                       g$imp*$10141$Pld94
                                       g$invoke-req*$10140$Pld94
                                       g$visit-req*$10139$Pld94
                                       g$invoke-code$10138$Pld94
                                       g$visit-code$10137$Pld94
                                       g$export-subst$10136$Pld94
                                       g$export-env$10135$Pld94)))
                                  g$export-env$10134$Pld94
                                  g$export-subst$10133$Pld94
                                  g$visit-code$10132$Pld94
                                  g$invoke-code$10131$Pld94
                                  g$visit-req*$10130$Pld94
                                  g$invoke-req*$10129$Pld94
                                  g$imp*$10128$Pld94)))))))
                       g$ver$10118$Pld94
                       g$name$10117$Pld94))))))
              g$b*$10110$Pld94
              g$imp*$10109$Pld94
              g$exp*$10108$Pld94
              g$name*$10107$Pld94)))))))
   (g$parse-top-level-program$7258$Pld94
     g$parse-top-level-program$10692$Pld94
     (case-lambda
       ((g$e*$10142$Pld94)
        ((case-lambda
           ((g$t$10143$Pld94)
            ((case-lambda
               ((g$ls/false$10144$Pld94)
                (if (if g$ls/false$10144$Pld94
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10145$Pld94
                               g$imp*$10146$Pld94
                               g$b*$10147$Pld94)
                             (eq? (g$syntax->datum$7308$Pld94
                                    g$import$10145$Pld94)
                                  'import)))
                          g$ls/false$10144$Pld94))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10148$Pld94
                         g$imp*$10149$Pld94
                         g$b*$10150$Pld94)
                       (values g$imp*$10149$Pld94 g$b*$10150$Pld94)))
                    g$ls/false$10144$Pld94)
                  ((case-lambda
                     ((g$t$10151$Pld94)
                      ((case-lambda
                         ((g$ls/false$10152$Pld94)
                          (if (if g$ls/false$10152$Pld94
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10153$Pld94
                                         g$x$10154$Pld94
                                         g$y$10155$Pld94)
                                       (eq? (g$syntax->datum$7308$Pld94
                                              g$import$10153$Pld94)
                                            'import)))
                                    g$ls/false$10152$Pld94))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10156$Pld94
                                   g$x$10157$Pld94
                                   g$y$10158$Pld94)
                                 (g$syntax-violation$7305$Pld94
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$6918$Pld94 g$e*$10142$Pld94))))
                              g$ls/false$10152$Pld94)
                            ((case-lambda
                               ((g$t$10159$Pld94)
                                ((case-lambda
                                   ((g$ls/false$10160$Pld94)
                                    (if g$ls/false$10160$Pld94
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10160$Pld94)
                                      (g$syntax-violation$7305$Pld94
                                        '#f
                                        '"invalid syntax"
                                        g$t$10159$Pld94))))
                                 (g$syntax-dispatch$7199$Pld94
                                   g$t$10159$Pld94
                                   '_))))
                             g$t$10151$Pld94))))
                       (g$syntax-dispatch$7199$Pld94
                         g$t$10151$Pld94
                         '((any . any) . any)))))
                   g$t$10143$Pld94))))
             (g$syntax-dispatch$7199$Pld94
               g$t$10143$Pld94
               '((any . each-any) . each-any)))))
         g$e*$10142$Pld94))))
   (g$top-level-expander$7259$Pld94
     g$top-level-expander$10693$Pld94
     (case-lambda
       ((g$e*$10161$Pld94)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7258$Pld94 g$e*$10161$Pld94)))
          (case-lambda
            ((g$imp*$10164$Pld94 g$b*$10165$Pld94)
             ((case-lambda
                ((g$b*$10166$Pld94 g$imp*$10167$Pld94)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7256$Pld94
                        '()
                        '()
                        g$imp*$10167$Pld94
                        g$b*$10166$Pld94
                        '#t)))
                   (case-lambda
                     ((g$imp*$10175$Pld94
                        g$invoke-req*$10176$Pld94
                        g$visit-req*$10177$Pld94
                        g$invoke-code$10178$Pld94
                        g$visit-code$10179$Pld94
                        g$export-subst$10180$Pld94
                        g$export-env$10181$Pld94)
                      ((case-lambda
                         ((g$export-env$10182$Pld94
                            g$export-subst$10183$Pld94
                            g$visit-code$10184$Pld94
                            g$invoke-code$10185$Pld94
                            g$visit-req*$10186$Pld94
                            g$invoke-req*$10187$Pld94
                            g$imp*$10188$Pld94)
                          (values
                            g$invoke-req*$10187$Pld94
                            g$invoke-code$10185$Pld94)))
                       g$export-env$10181$Pld94
                       g$export-subst$10180$Pld94
                       g$visit-code$10179$Pld94
                       g$invoke-code$10178$Pld94
                       g$visit-req*$10177$Pld94
                       g$invoke-req*$10176$Pld94
                       g$imp*$10175$Pld94))))))
              g$b*$10165$Pld94
              g$imp*$10164$Pld94)))))))
   (g$8144$7260$Pld94
     g$8144$10694$Pld94
     (make-record-type-descriptor
       'env
       '#f
       'g$8147$Pld94
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8146$7261$Pld94 g$8146$10695$Pld94 '#f)
   (g$8145$7262$Pld94
     g$8145$10696$Pld94
     (make-record-constructor-descriptor
       g$8144$7260$Pld94
       '#f
       g$8146$7261$Pld94))
   (g$env?$7263$Pld94
     g$env?$10697$Pld94
     (record-predicate g$8144$7260$Pld94))
   (g$make-env$7264$Pld94
     g$make-env$10698$Pld94
     (record-constructor g$8145$7262$Pld94))
   (g$env-names$7265$Pld94
     g$env-names$10699$Pld94
     (record-accessor g$8144$7260$Pld94 '0))
   (g$env-labels$7266$Pld94
     g$env-labels$10700$Pld94
     (record-accessor g$8144$7260$Pld94 '1))
   (g$env-itc$7267$Pld94
     g$env-itc$10701$Pld94
     (record-accessor g$8144$7260$Pld94 '2))
   (g$set-env-names!$7268$Pld94
     g$set-env-names!$10702$Pld94
     (record-mutator g$8144$7260$Pld94 '0))
   (g$set-env-labels!$7269$Pld94
     g$set-env-labels!$10703$Pld94
     (record-mutator g$8144$7260$Pld94 '1))
   (g$set-env-itc!$7270$Pld94
     g$set-env-itc!$10704$Pld94
     (record-mutator g$8144$7260$Pld94 '2))
   (g$rp$7271$Pld94
     g$rp$10705$Pld94
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10189$Pld94 g$p$10190$Pld94)
          (display '"#<environment>" g$p$10190$Pld94)))))
   (g$8163$7272$Pld94
     g$8163$10706$Pld94
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8166$Pld94
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8165$7273$Pld94 g$8165$10707$Pld94 '#f)
   (g$8164$7274$Pld94
     g$8164$10708$Pld94
     (make-record-constructor-descriptor
       g$8163$7272$Pld94
       '#f
       g$8165$7273$Pld94))
   (g$interaction-env?$7275$Pld94
     g$interaction-env?$10709$Pld94
     (record-predicate g$8163$7272$Pld94))
   (g$make-interaction-env$7276$Pld94
     g$make-interaction-env$10710$Pld94
     (record-constructor g$8164$7274$Pld94))
   (g$interaction-env-rib$7277$Pld94
     g$interaction-env-rib$10711$Pld94
     (record-accessor g$8163$7272$Pld94 '0))
   (g$interaction-env-r$7278$Pld94
     g$interaction-env-r$10712$Pld94
     (record-accessor g$8163$7272$Pld94 '1))
   (g$interaction-env-locs$7279$Pld94
     g$interaction-env-locs$10713$Pld94
     (record-accessor g$8163$7272$Pld94 '2))
   (g$set-interaction-env-rib!$7280$Pld94
     g$set-interaction-env-rib!$10714$Pld94
     (record-mutator g$8163$7272$Pld94 '0))
   (g$set-interaction-env-r!$7281$Pld94
     g$set-interaction-env-r!$10715$Pld94
     (record-mutator g$8163$7272$Pld94 '1))
   (g$set-interaction-env-locs!$7282$Pld94
     g$set-interaction-env-locs!$10716$Pld94
     (record-mutator g$8163$7272$Pld94 '2))
   (g$rp$7283$Pld94
     g$rp$10717$Pld94
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10191$Pld94 g$p$10192$Pld94)
          (display '"#<environment>" g$p$10192$Pld94)))))
   (g$interaction-environment-symbols$7284$Pld94
     g$interaction-environment-symbols$10718$Pld94
     (case-lambda
       (()
        (map (case-lambda ((g$x$10193$Pld94) g$x$10193$Pld94))
             (g$rib-sym*$6876$Pld94
               (g$interaction-env-rib$7277$Pld94
                 (g$interaction-environment$7311$Pld94)))))))
   (g$environment-symbols$7285$Pld94
     g$environment-symbols$10719$Pld94
     (case-lambda
       ((g$e$10194$Pld94)
        (vector->list (g$env-names$7265$Pld94 g$e$10194$Pld94)))))
   (g$environment?$7286$Pld94
     g$environment?$10720$Pld94
     (case-lambda
       ((g$x$10195$Pld94)
        ((case-lambda
           ((g$t$10196$Pld94)
            (if g$t$10196$Pld94
              g$t$10196$Pld94
              (begin '#f (g$interaction-env?$7275$Pld94 g$x$10195$Pld94)))))
         (g$env?$7263$Pld94 g$x$10195$Pld94)))))
   (g$environment$7287$Pld94
     g$environment$10721$Pld94
     (case-lambda
       (g$imp*$10197$Pld94
        ((case-lambda
           ((g$itc$10198$Pld94)
            ((case-lambda
               ((g$imp-collector$10201$Pld94 g$imp-collector$10202$Pld94)
                ((case-lambda
                   ((g$swap$10203$Pld94)
                    (dynamic-wind
                      g$swap$10203$Pld94
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7248$Pld94
                                g$imp*$10197$Pld94)))
                           (case-lambda
                             ((g$subst-names$10206$Pld94
                                g$subst-labels$10207$Pld94)
                              ((case-lambda
                                 ((g$subst-labels$10208$Pld94
                                    g$subst-names$10209$Pld94)
                                  (g$make-env$7264$Pld94
                                    g$subst-names$10209$Pld94
                                    g$subst-labels$10208$Pld94
                                    g$itc$10198$Pld94)))
                               g$subst-labels$10207$Pld94
                               g$subst-names$10206$Pld94))))))
                      g$swap$10203$Pld94)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10210$Pld94)
                        (begin
                          (g$imp-collector$10201$Pld94
                            g$imp-collector$10202$Pld94)
                          (set! g$imp-collector$10202$Pld94 g$t$10210$Pld94))))
                     (g$imp-collector$10201$Pld94)))))))
             g$imp-collector$7253$Pld94
             g$itc$10198$Pld94)))
         (g$make-collector$7250$Pld94)))))
   (g$null-environment$7288$Pld94
     g$null-environment$10722$Pld94
     (case-lambda
       ((g$n$10211$Pld94)
        (begin
          (if (eqv? g$n$10211$Pld94 '5)
            (void)
            (assertion-violation 'null-environment '"not 5" g$n$10211$Pld94))
          (g$environment$7287$Pld94 '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7289$Pld94
     g$scheme-report-environment$10723$Pld94
     (case-lambda
       ((g$n$10212$Pld94)
        (begin
          (if (eqv? g$n$10212$Pld94 '5)
            (void)
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10212$Pld94))
          (g$environment$7287$Pld94 '(psyntax scheme-report-environment-5))))))
   (g$expand$7290$Pld94
     g$expand$10724$Pld94
     (case-lambda
       ((g$x$10213$Pld94 g$env$10214$Pld94)
        (if (g$env?$7263$Pld94 g$env$10214$Pld94)
          ((case-lambda
             ((g$rib$10215$Pld94)
              ((case-lambda
                 ((g$x$10216$Pld94
                    g$itc$10217$Pld94
                    g$rtc$10218$Pld94
                    g$vtc$10219$Pld94)
                  ((case-lambda
                     ((g$x$10220$Pld94)
                      (begin
                        (g$seal-rib!$6887$Pld94 g$rib$10215$Pld94)
                        (values g$x$10220$Pld94 (g$rtc$10218$Pld94)))))
                   ((case-lambda
                      ((g$inv-collector$10227$Pld94
                         g$vis-collector$10228$Pld94
                         g$imp-collector$10229$Pld94
                         g$inv-collector$10230$Pld94
                         g$vis-collector$10231$Pld94
                         g$imp-collector$10232$Pld94)
                       ((case-lambda
                          ((g$swap$10233$Pld94)
                           (dynamic-wind
                             g$swap$10233$Pld94
                             (case-lambda
                               (()
                                (g$chi-expr$7217$Pld94
                                  g$x$10216$Pld94
                                  '()
                                  '())))
                             g$swap$10233$Pld94)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10234$Pld94)
                                 (begin
                                   (g$inv-collector$10227$Pld94
                                     g$inv-collector$10230$Pld94)
                                   (set! g$inv-collector$10230$Pld94
                                     g$t$10234$Pld94))))
                              (g$inv-collector$10227$Pld94))
                             ((case-lambda
                                ((g$t$10235$Pld94)
                                 (begin
                                   (g$vis-collector$10228$Pld94
                                     g$vis-collector$10231$Pld94)
                                   (set! g$vis-collector$10231$Pld94
                                     g$t$10235$Pld94))))
                              (g$vis-collector$10228$Pld94))
                             ((case-lambda
                                ((g$t$10236$Pld94)
                                 (begin
                                   (g$imp-collector$10229$Pld94
                                     g$imp-collector$10232$Pld94)
                                   (set! g$imp-collector$10232$Pld94
                                     g$t$10236$Pld94))))
                              (g$imp-collector$10229$Pld94))))))))
                    g$inv-collector$7251$Pld94
                    g$vis-collector$7252$Pld94
                    g$imp-collector$7253$Pld94
                    g$rtc$10218$Pld94
                    g$vtc$10219$Pld94
                    g$itc$10217$Pld94))))
               (g$make-stx$6894$Pld94
                 g$x$10213$Pld94
                 g$top-mark*$6863$Pld94
                 (list g$rib$10215$Pld94)
                 '())
               (g$env-itc$7267$Pld94 g$env$10214$Pld94)
               (g$make-collector$7250$Pld94)
               (g$make-collector$7250$Pld94))))
           (g$make-top-rib$7249$Pld94
             (g$env-names$7265$Pld94 g$env$10214$Pld94)
             (g$env-labels$7266$Pld94 g$env$10214$Pld94)))
          (if (g$interaction-env?$7275$Pld94 g$env$10214$Pld94)
            ((case-lambda
               ((g$rib$10237$Pld94 g$r$10238$Pld94 g$rtc$10239$Pld94)
                ((case-lambda
                   ((g$x$10240$Pld94)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10251$Pld94
                               g$inv-collector$10252$Pld94
                               g$vis-collector$10253$Pld94
                               g$imp-collector$10254$Pld94
                               g$top-level-context$10255$Pld94
                               g$inv-collector$10256$Pld94
                               g$vis-collector$10257$Pld94
                               g$imp-collector$10258$Pld94)
                             ((case-lambda
                                ((g$swap$10259$Pld94)
                                 (dynamic-wind
                                   g$swap$10259$Pld94
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7255$Pld94
                                        g$x$10240$Pld94
                                        g$rib$10237$Pld94
                                        g$r$10238$Pld94)))
                                   g$swap$10259$Pld94)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10260$Pld94)
                                       (begin
                                         (g$top-level-context$10251$Pld94
                                           g$top-level-context$10255$Pld94)
                                         (set! g$top-level-context$10255$Pld94
                                           g$t$10260$Pld94))))
                                    (g$top-level-context$10251$Pld94))
                                   ((case-lambda
                                      ((g$t$10261$Pld94)
                                       (begin
                                         (g$inv-collector$10252$Pld94
                                           g$inv-collector$10256$Pld94)
                                         (set! g$inv-collector$10256$Pld94
                                           g$t$10261$Pld94))))
                                    (g$inv-collector$10252$Pld94))
                                   ((case-lambda
                                      ((g$t$10262$Pld94)
                                       (begin
                                         (g$vis-collector$10253$Pld94
                                           g$vis-collector$10257$Pld94)
                                         (set! g$vis-collector$10257$Pld94
                                           g$t$10262$Pld94))))
                                    (g$vis-collector$10253$Pld94))
                                   ((case-lambda
                                      ((g$t$10263$Pld94)
                                       (begin
                                         (g$imp-collector$10254$Pld94
                                           g$imp-collector$10258$Pld94)
                                         (set! g$imp-collector$10258$Pld94
                                           g$t$10263$Pld94))))
                                    (g$imp-collector$10254$Pld94))))))))
                          g$top-level-context$7312$Pld94
                          g$inv-collector$7251$Pld94
                          g$vis-collector$7252$Pld94
                          g$imp-collector$7253$Pld94
                          g$env$10214$Pld94
                          g$rtc$10239$Pld94
                          (g$make-collector$7250$Pld94)
                          (g$make-collector$7250$Pld94))))
                      (case-lambda
                        ((g$e$10264$Pld94 g$r^$10265$Pld94)
                         ((case-lambda
                            ((g$r^$10266$Pld94 g$e$10267$Pld94)
                             (begin
                               (g$set-interaction-env-r!$7281$Pld94
                                 g$env$10214$Pld94
                                 g$r^$10266$Pld94)
                               (values g$e$10267$Pld94 (g$rtc$10239$Pld94)))))
                          g$r^$10265$Pld94
                          g$e$10264$Pld94))))))
                 (g$make-stx$6894$Pld94
                   g$x$10213$Pld94
                   g$top-mark*$6863$Pld94
                   (list g$rib$10237$Pld94)
                   '()))))
             (g$interaction-env-rib$7277$Pld94 g$env$10214$Pld94)
             (g$interaction-env-r$7278$Pld94 g$env$10214$Pld94)
             (g$make-collector$7250$Pld94))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10214$Pld94))))))
   (g$eval$7291$Pld94
     g$eval$10725$Pld94
     (case-lambda
       ((g$x$10268$Pld94 g$env$10269$Pld94)
        (begin
          (if (g$environment?$7286$Pld94 g$env$10269$Pld94)
            (void)
            (error 'eval '"not an environment" g$env$10269$Pld94))
          (call-with-values
            (case-lambda
              (() (g$expand$7290$Pld94 g$x$10268$Pld94 g$env$10269$Pld94)))
            (case-lambda
              ((g$x$10272$Pld94 g$invoke-req*$10273$Pld94)
               ((case-lambda
                  ((g$invoke-req*$10274$Pld94 g$x$10275$Pld94)
                   (begin
                     (for-each
                       g$invoke-library$6736$Pld94
                       g$invoke-req*$10274$Pld94)
                     (eval-core
                       (g$expanded->core$6435$Pld94 g$x$10275$Pld94)))))
                g$invoke-req*$10273$Pld94
                g$x$10272$Pld94))))))))
   (g$library-expander$7292$Pld94
     g$library-expander$10726$Pld94
     (case-lambda
       ((g$x$10276$Pld94 g$filename$10277$Pld94 g$verify-name$10278$Pld94)
        (letrec* ((g$build-visit-code$10279$Pld94
                    (case-lambda
                      ((g$macro*$10322$Pld94)
                       (if (null? g$macro*$10322$Pld94)
                         (g$build-void$6856$Pld94)
                         (g$build-sequence$6855$Pld94
                           '#f
                           (map (case-lambda
                                  ((g$x$10323$Pld94)
                                   ((case-lambda
                                      ((g$loc$10324$Pld94 g$src$10325$Pld94)
                                       (list
                                         'set!
                                         g$loc$10324$Pld94
                                         g$src$10325$Pld94)))
                                    (car g$x$10323$Pld94)
                                    (g$cddr$4882$Pld94 g$x$10323$Pld94))))
                                g$macro*$10322$Pld94))))))
                  (g$visit!$10280$Pld94
                    (case-lambda
                      ((g$macro*$10318$Pld94)
                       (for-each
                         (case-lambda
                           ((g$x$10319$Pld94)
                            ((case-lambda
                               ((g$loc$10320$Pld94 g$proc$10321$Pld94)
                                (set-symbol-value!
                                  g$loc$10320$Pld94
                                  g$proc$10321$Pld94)))
                             (car g$x$10319$Pld94)
                             (g$cadr$4880$Pld94 g$x$10319$Pld94))))
                         g$macro*$10318$Pld94)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7257$Pld94
                 g$x$10276$Pld94
                 g$verify-name$10278$Pld94)))
            (case-lambda
              ((g$name$10290$Pld94
                 g$ver$10291$Pld94
                 g$imp*$10292$Pld94
                 g$inv*$10293$Pld94
                 g$vis*$10294$Pld94
                 g$invoke-code$10295$Pld94
                 g$macro*$10296$Pld94
                 g$export-subst$10297$Pld94
                 g$export-env$10298$Pld94)
               ((case-lambda
                  ((g$export-env$10299$Pld94
                     g$export-subst$10300$Pld94
                     g$macro*$10301$Pld94
                     g$invoke-code$10302$Pld94
                     g$vis*$10303$Pld94
                     g$inv*$10304$Pld94
                     g$imp*$10305$Pld94
                     g$ver$10306$Pld94
                     g$name$10307$Pld94)
                   ((case-lambda
                      ((g$id$10308$Pld94
                         g$name$10309$Pld94
                         g$ver$10310$Pld94
                         g$imp*$10311$Pld94
                         g$vis*$10312$Pld94
                         g$inv*$10313$Pld94
                         g$visit-proc$10314$Pld94
                         g$invoke-proc$10315$Pld94
                         g$visit-code$10316$Pld94
                         g$invoke-code$10317$Pld94)
                       (begin
                         (g$install-library$6734$Pld94
                           g$id$10308$Pld94
                           g$name$10309$Pld94
                           g$ver$10310$Pld94
                           g$imp*$10311$Pld94
                           g$vis*$10312$Pld94
                           g$inv*$10313$Pld94
                           g$export-subst$10300$Pld94
                           g$export-env$10299$Pld94
                           g$visit-proc$10314$Pld94
                           g$invoke-proc$10315$Pld94
                           g$visit-code$10316$Pld94
                           g$invoke-code$10317$Pld94
                           '#t
                           g$filename$10277$Pld94)
                         (values
                           g$id$10308$Pld94
                           g$name$10309$Pld94
                           g$ver$10310$Pld94
                           g$imp*$10311$Pld94
                           g$vis*$10312$Pld94
                           g$inv*$10313$Pld94
                           g$invoke-code$10317$Pld94
                           g$visit-code$10316$Pld94
                           g$export-subst$10300$Pld94
                           g$export-env$10299$Pld94))))
                    (gensym)
                    g$name$10307$Pld94
                    g$ver$10306$Pld94
                    (map g$library-spec$6740$Pld94 g$imp*$10305$Pld94)
                    (map g$library-spec$6740$Pld94 g$vis*$10303$Pld94)
                    (map g$library-spec$6740$Pld94 g$inv*$10304$Pld94)
                    (case-lambda
                      (() (g$visit!$10280$Pld94 g$macro*$10301$Pld94)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6435$Pld94
                           g$invoke-code$10302$Pld94))))
                    (g$build-visit-code$10279$Pld94 g$macro*$10301$Pld94)
                    g$invoke-code$10302$Pld94)))
                g$export-env$10298$Pld94
                g$export-subst$10297$Pld94
                g$macro*$10296$Pld94
                g$invoke-code$10295$Pld94
                g$vis*$10294$Pld94
                g$inv*$10293$Pld94
                g$imp*$10292$Pld94
                g$ver$10291$Pld94
                g$name$10290$Pld94))))))
       ((g$x$10326$Pld94 g$filename$10327$Pld94)
        (g$library-expander$7292$Pld94
          g$x$10326$Pld94
          g$filename$10327$Pld94
          (case-lambda ((g$x$10328$Pld94) (values)))))
       ((g$x$10329$Pld94)
        (g$library-expander$7292$Pld94
          g$x$10329$Pld94
          '#f
          (case-lambda ((g$x$10330$Pld94) (values)))))))
   (g$boot-library-expand$7293$Pld94
     g$boot-library-expand$10727$Pld94
     (case-lambda
       ((g$x$10331$Pld94)
        (call-with-values
          (case-lambda (() (g$library-expander$7292$Pld94 g$x$10331$Pld94)))
          (case-lambda
            ((g$id$10342$Pld94
               g$name$10343$Pld94
               g$ver$10344$Pld94
               g$imp*$10345$Pld94
               g$vis*$10346$Pld94
               g$inv*$10347$Pld94
               g$invoke-code$10348$Pld94
               g$visit-code$10349$Pld94
               g$export-subst$10350$Pld94
               g$export-env$10351$Pld94)
             ((case-lambda
                ((g$export-env$10352$Pld94
                   g$export-subst$10353$Pld94
                   g$visit-code$10354$Pld94
                   g$invoke-code$10355$Pld94
                   g$inv*$10356$Pld94
                   g$vis*$10357$Pld94
                   g$imp*$10358$Pld94
                   g$ver$10359$Pld94
                   g$name$10360$Pld94
                   g$id$10361$Pld94)
                 (values
                   g$name$10360$Pld94
                   g$invoke-code$10355$Pld94
                   g$export-subst$10353$Pld94
                   g$export-env$10352$Pld94)))
              g$export-env$10351$Pld94
              g$export-subst$10350$Pld94
              g$visit-code$10349$Pld94
              g$invoke-code$10348$Pld94
              g$inv*$10347$Pld94
              g$vis*$10346$Pld94
              g$imp*$10345$Pld94
              g$ver$10344$Pld94
              g$name$10343$Pld94
              g$id$10342$Pld94)))))))
   (g$rev-map-append$7294$Pld94
     g$rev-map-append$10728$Pld94
     (case-lambda
       ((g$f$10362$Pld94 g$ls$10363$Pld94 g$ac$10364$Pld94)
        (if (null? g$ls$10363$Pld94)
          g$ac$10364$Pld94
          (g$rev-map-append$7294$Pld94
            g$f$10362$Pld94
            (cdr g$ls$10363$Pld94)
            (cons
              (g$f$10362$Pld94 (car g$ls$10363$Pld94))
              g$ac$10364$Pld94))))))
   (g$build-exports$7295$Pld94
     g$build-exports$10729$Pld94
     (case-lambda
       ((g$lex*+loc*$10365$Pld94 g$init*$10366$Pld94)
        (g$build-sequence$6855$Pld94
          '#f
          (cons
            (g$build-void$6856$Pld94)
            (g$rev-map-append$7294$Pld94
              (case-lambda
                ((g$x$10367$Pld94)
                 (list 'set! (cdr g$x$10367$Pld94) (car g$x$10367$Pld94))))
              g$lex*+loc*$10365$Pld94
              g$init*$10366$Pld94))))))
   (g$make-export-subst$7296$Pld94
     g$make-export-subst$10730$Pld94
     (case-lambda
       ((g$int*$10368$Pld94 g$ext*$10369$Pld94 g$rib$10370$Pld94)
        (map (case-lambda
               ((g$int$10371$Pld94 g$ext$10372$Pld94)
                ((case-lambda
                   ((g$id$10373$Pld94)
                    ((case-lambda
                       ((g$label$10374$Pld94)
                        ((case-lambda
                           (()
                            (begin
                              (if g$label$10374$Pld94
                                (void)
                                (g$syntax-violation$7305$Pld94
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10373$Pld94))
                              (cons g$ext$10372$Pld94 g$label$10374$Pld94)))))))
                     (g$id->label$6934$Pld94 g$id$10373$Pld94))))
                 (g$make-stx$6894$Pld94
                   g$int$10371$Pld94
                   g$top-mark*$6863$Pld94
                   (list g$rib$10370$Pld94)
                   '()))))
             g$int*$10368$Pld94
             g$ext*$10369$Pld94))))
   (g$make-export-env/macros$7297$Pld94
     g$make-export-env/macros$10731$Pld94
     (case-lambda
       ((g$lex*$10375$Pld94 g$loc*$10376$Pld94 g$r$10377$Pld94)
        (letrec* ((g$lookup$10378$Pld94
                    (case-lambda
                      ((g$x$10393$Pld94)
                       ((letrec ((g$f$10394$Pld94
                                   (case-lambda
                                     ((g$x$10395$Pld94
                                        g$lex*$10396$Pld94
                                        g$loc*$10397$Pld94)
                                      (if (pair? g$lex*$10396$Pld94)
                                        (if (eq? g$x$10395$Pld94
                                                 (car g$lex*$10396$Pld94))
                                          (car g$loc*$10397$Pld94)
                                          (g$f$10394$Pld94
                                            g$x$10395$Pld94
                                            (cdr g$lex*$10396$Pld94)
                                            (cdr g$loc*$10397$Pld94)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10394$Pld94)
                        g$x$10393$Pld94
                        g$lex*$10375$Pld94
                        g$loc*$10376$Pld94)))))
          ((letrec ((g$f$10379$Pld94
                      (case-lambda
                        ((g$r$10380$Pld94
                           g$env$10381$Pld94
                           g$global*$10382$Pld94
                           g$macro*$10383$Pld94)
                         (if (null? g$r$10380$Pld94)
                           (values
                             g$env$10381$Pld94
                             g$global*$10382$Pld94
                             g$macro*$10383$Pld94)
                           ((case-lambda
                              ((g$x$10384$Pld94)
                               ((case-lambda
                                  ((g$label$10385$Pld94 g$b$10386$Pld94)
                                   ((case-lambda
                                      ((g$t$10387$Pld94)
                                       (if (eqv? g$t$10387$Pld94 'lexical)
                                         ((case-lambda
                                            ((g$v$10390$Pld94)
                                             ((case-lambda
                                                ((g$loc$10391$Pld94
                                                   g$type$10392$Pld94)
                                                 (g$f$10379$Pld94
                                                   (cdr g$r$10380$Pld94)
                                                   (cons
                                                     (g$cons*$5351$Pld94
                                                       g$label$10385$Pld94
                                                       g$type$10392$Pld94
                                                       g$loc$10391$Pld94)
                                                     g$env$10381$Pld94)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7143$Pld94
                                                         g$v$10390$Pld94)
                                                       g$loc$10391$Pld94)
                                                     g$global*$10382$Pld94)
                                                   g$macro*$10383$Pld94)))
                                              (g$lookup$10378$Pld94
                                                (g$lexical-var$7143$Pld94
                                                  g$v$10390$Pld94))
                                              (if (g$lexical-mutable?$7144$Pld94
                                                    g$v$10390$Pld94)
                                                'mutable
                                                'global))))
                                          (g$binding-value$6939$Pld94
                                            g$b$10386$Pld94))
                                         (if (eqv? g$t$10387$Pld94 'local-macro)
                                           ((case-lambda
                                              ((g$loc$10389$Pld94)
                                               (g$f$10379$Pld94
                                                 (cdr g$r$10380$Pld94)
                                                 (cons
                                                   (g$cons*$5351$Pld94
                                                     g$label$10385$Pld94
                                                     'global-macro
                                                     g$loc$10389$Pld94)
                                                   g$env$10381$Pld94)
                                                 g$global*$10382$Pld94
                                                 (cons
                                                   (cons
                                                     g$loc$10389$Pld94
                                                     (g$binding-value$6939$Pld94
                                                       g$b$10386$Pld94))
                                                   g$macro*$10383$Pld94))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$10387$Pld94
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$10388$Pld94)
                                                 (g$f$10379$Pld94
                                                   (cdr g$r$10380$Pld94)
                                                   (cons
                                                     (g$cons*$5351$Pld94
                                                       g$label$10385$Pld94
                                                       'global-macro!
                                                       g$loc$10388$Pld94)
                                                     g$env$10381$Pld94)
                                                   g$global*$10382$Pld94
                                                   (cons
                                                     (cons
                                                       g$loc$10388$Pld94
                                                       (g$binding-value$6939$Pld94
                                                         g$b$10386$Pld94))
                                                     g$macro*$10383$Pld94))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10387$Pld94
                                                   '($rtd $module))
                                               (g$f$10379$Pld94
                                                 (cdr g$r$10380$Pld94)
                                                 (cons
                                                   g$x$10384$Pld94
                                                   g$env$10381$Pld94)
                                                 g$global*$10382$Pld94
                                                 g$macro*$10383$Pld94)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$6938$Pld94
                                                   g$b$10386$Pld94)
                                                 (g$binding-value$6939$Pld94
                                                   g$b$10386$Pld94))))))))
                                    (g$binding-type$6938$Pld94
                                      g$b$10386$Pld94))))
                                (car g$x$10384$Pld94)
                                (cdr g$x$10384$Pld94))))
                            (car g$r$10380$Pld94)))))))
             g$f$10379$Pld94)
           g$r$10377$Pld94
           '()
           '()
           '())))))
   (g$generate-temporaries$7298$Pld94
     g$generate-temporaries$10732$Pld94
     (case-lambda
       ((g$ls$10398$Pld94)
        ((case-lambda
           ((g$t$10399$Pld94)
            ((case-lambda
               ((g$ls/false$10400$Pld94)
                (if g$ls/false$10400$Pld94
                  (apply
                    (case-lambda
                      ((g$ls$10401$Pld94)
                       (map (case-lambda
                              ((g$x$10402$Pld94)
                               (g$make-stx$6894$Pld94
                                 ((case-lambda
                                    ((g$x$10403$Pld94)
                                     (if ((case-lambda
                                            ((g$t$10404$Pld94)
                                             (if g$t$10404$Pld94
                                               g$t$10404$Pld94
                                               (begin
                                                 '#f
                                                 (string? g$x$10403$Pld94)))))
                                          (symbol? g$x$10403$Pld94))
                                       (gensym g$x$10403$Pld94)
                                       (gensym 't))))
                                  (g$syntax->datum$7308$Pld94 g$x$10402$Pld94))
                                 g$top-mark*$6863$Pld94
                                 '()
                                 '())))
                            g$ls$10401$Pld94)))
                    g$ls/false$10400$Pld94)
                  ((case-lambda
                     ((g$t$10405$Pld94)
                      ((case-lambda
                         ((g$ls/false$10406$Pld94)
                          (if g$ls/false$10406$Pld94
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10406$Pld94)
                            (g$syntax-violation$7305$Pld94
                              '#f
                              '"invalid syntax"
                              g$t$10405$Pld94))))
                       (g$syntax-dispatch$7199$Pld94 g$t$10405$Pld94 '_))))
                   g$t$10399$Pld94))))
             (g$syntax-dispatch$7199$Pld94 g$t$10399$Pld94 'each-any))))
         g$ls$10398$Pld94))))
   (g$free-identifier=?$7299$Pld94
     g$free-identifier=?$10733$Pld94
     (case-lambda
       ((g$x$10407$Pld94 g$y$10408$Pld94)
        (if (g$id?$6921$Pld94 g$x$10407$Pld94)
          (if (g$id?$6921$Pld94 g$y$10408$Pld94)
            (g$free-id=?$6925$Pld94 g$x$10407$Pld94 g$y$10408$Pld94)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10408$Pld94))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10407$Pld94)))))
   (g$bound-identifier=?$7300$Pld94
     g$bound-identifier=?$10734$Pld94
     (case-lambda
       ((g$x$10409$Pld94 g$y$10410$Pld94)
        (if (g$id?$6921$Pld94 g$x$10409$Pld94)
          (if (g$id?$6921$Pld94 g$y$10410$Pld94)
            (g$bound-id=?$6924$Pld94 g$x$10409$Pld94 g$y$10410$Pld94)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10410$Pld94))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10409$Pld94)))))
   (g$extract-position-condition$7301$Pld94
     g$extract-position-condition$10735$Pld94
     (case-lambda
       ((g$x$10411$Pld94)
        (letrec* ((g$11029$10412$Pld94
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11032$Pld94
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11031$10413$Pld94 '#f)
                  (g$11030$10414$Pld94
                    (make-record-constructor-descriptor
                      g$11029$10412$Pld94
                      &condition-rcd
                      g$11031$10413$Pld94))
                  (g$11028$10415$Pld94 (record-predicate g$11029$10412$Pld94))
                  (g$make-source-condition$10416$Pld94
                    (record-constructor g$11030$10414$Pld94))
                  (g$11026$10417$Pld94 (record-accessor g$11029$10412$Pld94 '0))
                  (g$11027$10418$Pld94 (record-accessor g$11029$10412$Pld94 '1))
                  (g$source-condition?$10419$Pld94
                    (condition-predicate g$11029$10412$Pld94))
                  (g$source-filename$10420$Pld94
                    (condition-accessor
                      g$11029$10412$Pld94
                      g$11026$10417$Pld94))
                  (g$source-character$10421$Pld94
                    (condition-accessor
                      g$11029$10412$Pld94
                      g$11027$10418$Pld94)))
          (if (g$stx?$6893$Pld94 g$x$10411$Pld94)
            ((case-lambda
               ((g$x$10422$Pld94)
                (if (annotation? g$x$10422$Pld94)
                  ((case-lambda
                     ((g$src$10423$Pld94)
                      (if (pair? g$src$10423$Pld94)
                        (g$make-source-condition$10416$Pld94
                          (car g$src$10423$Pld94)
                          (cdr g$src$10423$Pld94))
                        (condition))))
                   (annotation-source g$x$10422$Pld94))
                  (condition))))
             (g$stx-expr$6895$Pld94 g$x$10411$Pld94))
            (condition))))))
   (g$syntax-error$7302$Pld94
     g$syntax-error$10736$Pld94
     (case-lambda
       ((g$x$10424$Pld94 . g$args$10425$Pld94)
        (begin
          (if (g$for-all$5349$Pld94 string? g$args$10425$Pld94)
            (void)
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10425$Pld94))
          (raise
            (condition
              (g$make-message-condition$5603$Pld94
                (if (null? g$args$10425$Pld94)
                  '"invalid syntax"
                  (apply string-append g$args$10425$Pld94)))
              (g$make-syntax-violation$5675$Pld94
                (g$syntax->datum$7308$Pld94 g$x$10424$Pld94)
                '#f)
              (g$extract-position-condition$7301$Pld94 g$x$10424$Pld94)
              (g$extract-trace$7303$Pld94 g$x$10424$Pld94)))))))
   (g$extract-trace$7303$Pld94
     g$extract-trace$10737$Pld94
     (case-lambda
       ((g$x$10426$Pld94)
        (letrec* ((g$11053$10427$Pld94
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11056$Pld94
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11055$10428$Pld94 '#f)
                  (g$11054$10429$Pld94
                    (make-record-constructor-descriptor
                      g$11053$10427$Pld94
                      &condition-rcd
                      g$11055$10428$Pld94))
                  (g$11052$10430$Pld94 (record-predicate g$11053$10427$Pld94))
                  (g$make-trace$10431$Pld94
                    (record-constructor g$11054$10429$Pld94))
                  (g$11051$10432$Pld94 (record-accessor g$11053$10427$Pld94 '0))
                  (g$trace?$10433$Pld94
                    (condition-predicate g$11053$10427$Pld94))
                  (g$trace-form$10434$Pld94
                    (condition-accessor
                      g$11053$10427$Pld94
                      g$11051$10432$Pld94)))
          ((letrec ((g$f$10435$Pld94
                      (case-lambda
                        ((g$x$10436$Pld94)
                         (if (g$stx?$6893$Pld94 g$x$10436$Pld94)
                           (apply
                             condition
                             (g$make-trace$10431$Pld94 g$x$10436$Pld94)
                             (map g$f$10435$Pld94
                                  (g$stx-ae*$6898$Pld94 g$x$10436$Pld94)))
                           (if (annotation? g$x$10436$Pld94)
                             (g$make-trace$10431$Pld94
                               (g$make-stx$6894$Pld94
                                 g$x$10436$Pld94
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10435$Pld94)
           g$x$10426$Pld94)))))
   (g$syntax-violation*$7304$Pld94
     g$syntax-violation*$10738$Pld94
     (case-lambda
       ((g$who$10437$Pld94
          g$msg$10438$Pld94
          g$form$10439$Pld94
          g$condition-object$10440$Pld94)
        (begin
          (if (string? g$msg$10438$Pld94)
            (void)
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10438$Pld94))
          ((case-lambda
             ((g$who$10441$Pld94)
              (raise
                (condition
                  (if g$who$10441$Pld94
                    (g$make-who-condition$5649$Pld94 g$who$10441$Pld94)
                    (condition))
                  (g$make-message-condition$5603$Pld94 g$msg$10438$Pld94)
                  g$condition-object$10440$Pld94
                  (g$extract-position-condition$7301$Pld94 g$form$10439$Pld94)
                  (g$extract-trace$7303$Pld94 g$form$10439$Pld94)))))
           (if ((case-lambda
                  ((g$t$10442$Pld94)
                   (if g$t$10442$Pld94
                     g$t$10442$Pld94
                     (begin '#f (symbol? g$who$10437$Pld94)))))
                (string? g$who$10437$Pld94))
             g$who$10437$Pld94
             (if (not g$who$10437$Pld94)
               ((case-lambda
                  ((g$t$10443$Pld94)
                   ((case-lambda
                      ((g$ls/false$10444$Pld94)
                       (if (if g$ls/false$10444$Pld94
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10445$Pld94)
                                    (g$id?$6921$Pld94 g$id$10445$Pld94)))
                                 g$ls/false$10444$Pld94))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10446$Pld94)
                              (g$syntax->datum$7308$Pld94 g$id$10446$Pld94)))
                           g$ls/false$10444$Pld94)
                         ((case-lambda
                            ((g$t$10447$Pld94)
                             ((case-lambda
                                ((g$ls/false$10448$Pld94)
                                 (if (if g$ls/false$10448$Pld94
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10449$Pld94
                                                g$rest$10450$Pld94)
                                              (g$id?$6921$Pld94
                                                g$id$10449$Pld94)))
                                           g$ls/false$10448$Pld94))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10451$Pld94 g$rest$10452$Pld94)
                                        (g$syntax->datum$7308$Pld94
                                          g$id$10451$Pld94)))
                                     g$ls/false$10448$Pld94)
                                   ((case-lambda
                                      ((g$t$10453$Pld94)
                                       ((case-lambda
                                          ((g$ls/false$10454$Pld94)
                                           (if g$ls/false$10454$Pld94
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10454$Pld94)
                                             (g$syntax-violation$7305$Pld94
                                               '#f
                                               '"invalid syntax"
                                               g$t$10453$Pld94))))
                                        (g$syntax-dispatch$7199$Pld94
                                          g$t$10453$Pld94
                                          '_))))
                                    g$t$10447$Pld94))))
                              (g$syntax-dispatch$7199$Pld94
                                g$t$10447$Pld94
                                '(any . any)))))
                          g$t$10443$Pld94))))
                    (g$syntax-dispatch$7199$Pld94 g$t$10443$Pld94 'any))))
                g$form$10439$Pld94)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10437$Pld94))))))))
   (g$syntax-violation$7305$Pld94
     g$syntax-violation$10739$Pld94
     (case-lambda
       ((g$who$10455$Pld94 g$msg$10456$Pld94 g$form$10457$Pld94)
        (g$syntax-violation$7305$Pld94
          g$who$10455$Pld94
          g$msg$10456$Pld94
          g$form$10457$Pld94
          '#f))
       ((g$who$10458$Pld94
          g$msg$10459$Pld94
          g$form$10460$Pld94
          g$subform$10461$Pld94)
        (g$syntax-violation*$7304$Pld94
          g$who$10458$Pld94
          g$msg$10459$Pld94
          g$form$10460$Pld94
          (g$make-syntax-violation$5675$Pld94
            (g$syntax->datum$7308$Pld94 g$form$10460$Pld94)
            (g$syntax->datum$7308$Pld94 g$subform$10461$Pld94))))))
   (g$identifier?$7306$Pld94
     g$identifier?$10740$Pld94
     (case-lambda ((g$x$10462$Pld94) (g$id?$6921$Pld94 g$x$10462$Pld94))))
   (g$datum->syntax$7307$Pld94
     g$datum->syntax$10741$Pld94
     (case-lambda
       ((g$id$10463$Pld94 g$datum$10464$Pld94)
        (if (g$id?$6921$Pld94 g$id$10463$Pld94)
          (g$datum->stx$6904$Pld94 g$id$10463$Pld94 g$datum$10464$Pld94)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10463$Pld94)))))
   (g$syntax->datum$7308$Pld94
     g$syntax->datum$10742$Pld94
     (case-lambda
       ((g$x$10465$Pld94) (g$stx->datum$6932$Pld94 g$x$10465$Pld94))))
   (g$compile-r6rs-top-level$7309$Pld94
     g$compile-r6rs-top-level$10743$Pld94
     (case-lambda
       ((g$x*$10466$Pld94)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7259$Pld94 g$x*$10466$Pld94)))
          (case-lambda
            ((g$lib*$10469$Pld94 g$invoke-code$10470$Pld94)
             ((case-lambda
                ((g$invoke-code$10471$Pld94 g$lib*$10472$Pld94)
                 (case-lambda
                   (()
                    (begin
                      (for-each g$invoke-library$6736$Pld94 g$lib*$10472$Pld94)
                      (eval-core
                        (g$expanded->core$6435$Pld94
                          g$invoke-code$10471$Pld94)))))))
              g$invoke-code$10470$Pld94
              g$lib*$10469$Pld94)))))))
   (g$pre-compile-r6rs-top-level$7310$Pld94
     g$pre-compile-r6rs-top-level$10744$Pld94
     (case-lambda
       ((g$x*$10473$Pld94)
        (call-with-values
          (case-lambda (() (g$top-level-expander$7259$Pld94 g$x*$10473$Pld94)))
          (case-lambda
            ((g$lib*$10476$Pld94 g$invoke-code$10477$Pld94)
             ((case-lambda
                ((g$invoke-code$10478$Pld94 g$lib*$10479$Pld94)
                 (begin
                   (for-each g$invoke-library$6736$Pld94 g$lib*$10479$Pld94)
                   (compile-core
                     (g$expanded->core$6435$Pld94 g$invoke-code$10478$Pld94)))))
              g$invoke-code$10477$Pld94
              g$lib*$10476$Pld94)))))))
   (g$interaction-environment$7311$Pld94
     g$interaction-environment$10745$Pld94
     ((case-lambda
        ((g$the-env$10480$Pld94)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10481$Pld94)
                (if g$t$10481$Pld94
                  g$t$10481$Pld94
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10482$Pld94 g$rib$10483$Pld94)
                        (begin
                          ((case-lambda
                             ((g$subst$10484$Pld94)
                              (begin
                                (g$set-rib-sym*!$6880$Pld94
                                  g$rib$10483$Pld94
                                  (map car g$subst$10484$Pld94))
                                (g$set-rib-mark**!$6881$Pld94
                                  g$rib$10483$Pld94
                                  (map (case-lambda
                                         ((g$x$10485$Pld94)
                                          g$top-mark*$6863$Pld94))
                                       g$subst$10484$Pld94))
                                (g$set-rib-label*!$6882$Pld94
                                  g$rib$10483$Pld94
                                  (map cdr g$subst$10484$Pld94)))))
                           (g$library-subst$6693$Pld94 g$lib$10482$Pld94))
                          ((case-lambda
                             ((g$env$10486$Pld94)
                              (begin
                                (set! g$the-env$10480$Pld94 g$env$10486$Pld94)
                                g$env$10486$Pld94)))
                           (g$make-interaction-env$7276$Pld94
                             g$rib$10483$Pld94
                             '()
                             '())))))
                     (g$find-library-by-name$6729$Pld94 '(ironscheme))
                     (g$make-empty-rib$6884$Pld94))))))
             g$the-env$10480$Pld94)))))
      '#f))
   (g$top-level-context$7312$Pld94
     g$top-level-context$10746$Pld94
     (g$make-parameter$6189$Pld94 '#f)))
  (g$current-library-expander$6726$Pld94 g$library-expander$7292$Pld94))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6432$Pld94
      (case-lambda
        ((g$x$10783$Pld94)
         ((case-lambda
            ((g$t$10784$Pld94) (if g$t$10784$Pld94 (cdr g$t$10784$Pld94) '#f)))
          (assq
            g$x$10783$Pld94
            '((ellipsis-map . g$ellipsis-map$10638$Pld94)
              (ironscheme-build . g$ironscheme-build$10777$Pld94)
              (syntax-error . g$syntax-error$10736$Pld94)
              (syntax-dispatch . g$syntax-dispatch$10633$Pld94)
              (compile-system-libraries
                .
                g$compile-system-libraries$10779$Pld94)
              (compile->closure . g$compile->closure$10781$Pld94)
              (compile . g$compile$10780$Pld94)
              (load . g$load$10776$Pld94)
              (interaction-environment . g$interaction-environment$10745$Pld94)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10571$Pld94)
              (variable-transformer? . g$variable-transformer?$10570$Pld94)
              (make-variable-transformer
                .
                g$make-variable-transformer$10569$Pld94)
              (identifier? . g$identifier?$10740$Pld94)
              (generate-temporaries . g$generate-temporaries$10732$Pld94)
              (free-identifier=? . g$free-identifier=?$10733$Pld94)
              (syntax->datum . g$syntax->datum$10742$Pld94)
              (datum->syntax . g$datum->syntax$10741$Pld94)
              (bound-identifier=? . g$bound-identifier=?$10734$Pld94)
              (delete-file . g$delete-file$5221$Pld94)
              (file-exists? . g$file-exists?$5220$Pld94)
              (list-sort . g$list-sort$5737$Pld94)
              (make-eqv-hashtable . g$make-eqv-hashtable$5143$Pld94)
              (make-eq-hashtable . g$make-eq-hashtable$5142$Pld94)
              (hashtable-update! . g$hashtable-update!$5149$Pld94)
              (hashtable-size . g$hashtable-size$5144$Pld94)
              (hashtable-set! . g$hashtable-set!$5146$Pld94)
              (hashtable-ref . g$hashtable-ref$5145$Pld94)
              (hashtable-delete! . g$hashtable-delete!$5147$Pld94)
              (hashtable-contains? . g$hashtable-contains?$5148$Pld94)
              (hashtable-clear! . g$hashtable-clear!$5150$Pld94)
              (open-string-output-port . g$open-string-output-port$6079$Pld94)
              (make-i/o-write-error . g$make-i/o-write-error$6008$Pld94)
              (make-i/o-read-error . g$make-i/o-read-error$6002$Pld94)
              (make-i/o-port-error . g$make-i/o-port-error$6054$Pld94)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6014$Pld94)
              (make-i/o-filename-error . g$make-i/o-filename-error$6022$Pld94)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6030$Pld94)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6036$Pld94)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6048$Pld94)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6042$Pld94)
              (make-i/o-error . g$make-i/o-error$5996$Pld94)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6068$Pld94)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6062$Pld94)
              (i/o-write-error? . g$i/o-write-error?$6009$Pld94)
              (i/o-read-error? . g$i/o-read-error?$6003$Pld94)
              (i/o-port-error? . g$i/o-port-error?$6056$Pld94)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6016$Pld94)
              (i/o-filename-error? . g$i/o-filename-error?$6024$Pld94)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6031$Pld94)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6037$Pld94)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6049$Pld94)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6043$Pld94)
              (i/o-error? . g$i/o-error?$5997$Pld94)
              (i/o-error-port . g$i/o-error-port$6057$Pld94)
              (i/o-error-filename . g$i/o-error-filename$6025$Pld94)
              (i/o-encoding-error? . g$i/o-encoding-error?$6070$Pld94)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6071$Pld94)
              (i/o-decoding-error? . g$i/o-decoding-error?$6063$Pld94)
              (scheme-report-environment
                .
                g$scheme-report-environment$10723$Pld94)
              (quotient . g$quotient$5706$Pld94)
              (null-environment . g$null-environment$10722$Pld94)
              (remainder . g$remainder$5707$Pld94)
              (modulo . g$modulo$5708$Pld94)
              (remove . g$remove$5354$Pld94)
              (remv . g$remv$5355$Pld94)
              (remp . g$remp$5340$Pld94)
              (remq . g$remq$5356$Pld94)
              (partition . g$partition$5339$Pld94)
              (memp . g$memp$5346$Pld94)
              (member . g$member$5345$Pld94)
              (exists . g$exists$5350$Pld94)
              (for-all . g$for-all$5349$Pld94)
              (fold-right . g$fold-right$5353$Pld94)
              (fold-left . g$fold-left$5352$Pld94)
              (find . g$find$5338$Pld94)
              (filter . g$filter$5341$Pld94)
              (cons* . g$cons*$5351$Pld94)
              (assv . g$assv$5342$Pld94)
              (assp . g$assp$5344$Pld94)
              (assoc . g$assoc$5343$Pld94)
              (eval . g$eval$10725$Pld94)
              (environment . g$environment$10721$Pld94)
              (who-condition? . g$who-condition?$5651$Pld94)
              (warning? . g$warning?$5612$Pld94)
              (violation? . g$violation?$5630$Pld94)
              (undefined-violation? . g$undefined-violation?$5686$Pld94)
              (syntax-violation? . g$syntax-violation?$5678$Pld94)
              (syntax-violation-subform . g$syntax-violation-subform$5680$Pld94)
              (syntax-violation-form . g$syntax-violation-form$5679$Pld94)
              (syntax-violation . g$syntax-violation$10739$Pld94)
              (serious-condition? . g$serious-condition?$5618$Pld94)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5658$Pld94)
              (message-condition? . g$message-condition?$5605$Pld94)
              (make-who-condition . g$make-who-condition$5649$Pld94)
              (make-warning . g$make-warning$5611$Pld94)
              (make-violation . g$make-violation$5629$Pld94)
              (make-undefined-violation . g$make-undefined-violation$5685$Pld94)
              (make-syntax-violation . g$make-syntax-violation$5675$Pld94)
              (make-serious-condition . g$make-serious-condition$5617$Pld94)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5657$Pld94)
              (make-message-condition . g$make-message-condition$5603$Pld94)
              (make-lexical-violation . g$make-lexical-violation$5669$Pld94)
              (make-irritants-condition . g$make-irritants-condition$5641$Pld94)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5663$Pld94)
              (make-error . g$make-error$5623$Pld94)
              (make-assertion-violation . g$make-assertion-violation$5635$Pld94)
              (lexical-violation? . g$lexical-violation?$5670$Pld94)
              (irritants-condition? . g$irritants-condition?$5643$Pld94)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5664$Pld94)
              (error? . g$error?$5624$Pld94)
              (condition-who . g$condition-who$5652$Pld94)
              (condition-message . g$condition-message$5606$Pld94)
              (condition-irritants . g$condition-irritants$5644$Pld94)
              (assertion-violation? . g$assertion-violation?$5636$Pld94)
              (native-endianness . g$native-endianness$5468$Pld94)
              (bytevector-u64-set! . g$bytevector-u64-set!$5489$Pld94)
              (bytevector-u64-ref . g$bytevector-u64-ref$5485$Pld94)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5491$Pld94)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5487$Pld94)
              (bytevector-u32-set! . g$bytevector-u32-set!$5481$Pld94)
              (bytevector-u32-ref . g$bytevector-u32-ref$5477$Pld94)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5483$Pld94)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5479$Pld94)
              (bytevector-u16-set! . g$bytevector-u16-set!$5473$Pld94)
              (bytevector-u16-ref . g$bytevector-u16-ref$5469$Pld94)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5475$Pld94)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5471$Pld94)
              (bytevector-s64-set! . g$bytevector-s64-set!$5490$Pld94)
              (bytevector-s64-ref . g$bytevector-s64-ref$5486$Pld94)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5492$Pld94)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5488$Pld94)
              (bytevector-s32-set! . g$bytevector-s32-set!$5482$Pld94)
              (bytevector-s32-ref . g$bytevector-s32-ref$5478$Pld94)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5484$Pld94)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5480$Pld94)
              (bytevector-s16-set! . g$bytevector-s16-set!$5474$Pld94)
              (bytevector-s16-ref . g$bytevector-s16-ref$5470$Pld94)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5476$Pld94)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5472$Pld94)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5495$Pld94)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5493$Pld94)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5496$Pld94)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5494$Pld94)
              (no-nans-violation? . g$no-nans-violation?$5911$Pld94)
              (no-infinities-violation? . g$no-infinities-violation?$5905$Pld94)
              (make-no-nans-violation . g$make-no-nans-violation$5910$Pld94)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$5904$Pld94)
              (fxrotate-bit-field . g$fxrotate-bit-field$5887$Pld94)
              (fxif . g$fxif$5881$Pld94)
              (fxcopy-bit-field . g$fxcopy-bit-field$5884$Pld94)
              (fxcopy-bit . g$fxcopy-bit$5882$Pld94)
              (fxbit-field . g$fxbit-field$5883$Pld94)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$5886$Pld94)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$5885$Pld94)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$5832$Pld94)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$5833$Pld94)
              (bitwise-if . g$bitwise-if$5826$Pld94)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5829$Pld94)
              (bitwise-copy-bit . g$bitwise-copy-bit$5827$Pld94)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5831$Pld94)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5830$Pld94)
              (rationalize . g$rationalize$4907$Pld94)
              (cddddr . g$cddddr$4906$Pld94)
              (cdddar . g$cdddar$4905$Pld94)
              (cddadr . g$cddadr$4904$Pld94)
              (cddaar . g$cddaar$4903$Pld94)
              (cdaddr . g$cdaddr$4902$Pld94)
              (cdadar . g$cdadar$4901$Pld94)
              (cdaadr . g$cdaadr$4900$Pld94)
              (cdaaar . g$cdaaar$4899$Pld94)
              (cadddr . g$cadddr$4898$Pld94)
              (caddar . g$caddar$4897$Pld94)
              (cadadr . g$cadadr$4896$Pld94)
              (cadaar . g$cadaar$4895$Pld94)
              (caaddr . g$caaddr$4894$Pld94)
              (caadar . g$caadar$4893$Pld94)
              (caaadr . g$caaadr$4892$Pld94)
              (caaaar . g$caaaar$4891$Pld94)
              (cdddr . g$cdddr$4890$Pld94)
              (cddar . g$cddar$4889$Pld94)
              (cdadr . g$cdadr$4888$Pld94)
              (cdaar . g$cdaar$4887$Pld94)
              (caddr . g$caddr$4886$Pld94)
              (cadar . g$cadar$4885$Pld94)
              (caadr . g$caadr$4884$Pld94)
              (caaar . g$caaar$4883$Pld94)
              (cddr . g$cddr$4882$Pld94)
              (cdar . g$cdar$4881$Pld94)
              (cadr . g$cadr$4880$Pld94)
              (caar . g$caar$4879$Pld94)
              (printf . g$printf$6103$Pld94)
              (fprintf . g$fprintf$6104$Pld94)
              (format . g$format$6105$Pld94)
              (trace-printer . g$trace-printer$10774$Pld94)
              (make-traced-macro . g$make-traced-macro$6109$Pld94)
              (make-parameter . g$make-parameter$6189$Pld94)
              (environment-symbols . g$environment-symbols$10719$Pld94)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$10718$Pld94)
              (library-path . g$library-path$6718$Pld94)
              (library-extensions . g$library-extensions$6719$Pld94)
              (installed-libraries . g$installed-libraries$6739$Pld94)
              (expand . g$expand$10724$Pld94)))))))
    (g$install-library$6734$Pld94
      'g$11802$Pld94
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$11739$Pld94)
        (cosh . g$11738$Pld94)
        (sinh . g$11737$Pld94)
        (make-guid . g$11736$Pld94)
        (unspecified? . g$11735$Pld94)
        (make-trace . g$11734$Pld94)
        (make-list . g$11733$Pld94)
        (last-pair . g$11732$Pld94)
        (load-r5rs . g$11731$Pld94)
        (license . g$11730$Pld94)
        (stacktrace . g$11729$Pld94)
        (ironscheme-build . g$11123$Pld94)
        (set-symbol-value! . g$11715$Pld94)
        (symbol-value . g$11714$Pld94)
        (ungensym . g$11713$Pld94)
        (gensym . g$11712$Pld94)
        (void . g$11711$Pld94)
        (compile-system-libraries . g$11125$Pld94)
        (compile->closure . g$11127$Pld94)
        (compile . g$11126$Pld94)
        (load . g$11122$Pld94)
        (interaction-environment . g$8209$Pld94)
        (string-upcase . g$11707$Pld94)
        (string-titlecase . g$11706$Pld94)
        (string-normalize-nfkd . g$11705$Pld94)
        (string-normalize-nfkc . g$11704$Pld94)
        (string-normalize-nfd . g$11703$Pld94)
        (string-normalize-nfc . g$11702$Pld94)
        (string-foldcase . g$11701$Pld94)
        (string-downcase . g$11700$Pld94)
        (string-ci>? . g$11699$Pld94)
        (string-ci>=? . g$11698$Pld94)
        (string-ci=? . g$11697$Pld94)
        (string-ci<? . g$11696$Pld94)
        (string-ci<=? . g$11695$Pld94)
        (char-whitespace? . g$11694$Pld94)
        (char-upper-case? . g$11693$Pld94)
        (char-title-case? . g$11692$Pld94)
        (char-numeric? . g$11691$Pld94)
        (char-lower-case? . g$11690$Pld94)
        (char-general-category . g$11689$Pld94)
        (char-upcase . g$11688$Pld94)
        (char-titlecase . g$11687$Pld94)
        (char-foldcase . g$11686$Pld94)
        (char-downcase . g$11685$Pld94)
        (char-ci>? . g$11684$Pld94)
        (char-ci>=? . g$11683$Pld94)
        (char-ci=? . g$11682$Pld94)
        (char-ci<? . g$11681$Pld94)
        (char-ci<=? . g$11680$Pld94)
        (char-alphabetic? . g$11679$Pld94)
        (variable-transformer-procedure . g$7813$Pld94)
        (variable-transformer? . g$7812$Pld94)
        (make-variable-transformer . g$7811$Pld94)
        (identifier? . g$8204$Pld94)
        (generate-temporaries . g$8196$Pld94)
        (free-identifier=? . g$8197$Pld94)
        (syntax->datum . g$8206$Pld94)
        (datum->syntax . g$8205$Pld94)
        (bound-identifier=? . g$8198$Pld94)
        (record-type-descriptor? . g$11678$Pld94)
        (record-predicate . g$11677$Pld94)
        (record-mutator . g$11676$Pld94)
        (record-constructor . g$11675$Pld94)
        (record-accessor . g$11674$Pld94)
        (make-record-type-descriptor . g$11673$Pld94)
        (make-record-constructor-descriptor . g$11672$Pld94)
        (record? . g$11671$Pld94)
        (record-type-uid . g$11670$Pld94)
        (record-type-sealed? . g$11669$Pld94)
        (record-type-parent . g$11668$Pld94)
        (record-type-opaque? . g$11667$Pld94)
        (record-type-name . g$11666$Pld94)
        (record-type-generative? . g$11665$Pld94)
        (record-type-field-names . g$11664$Pld94)
        (record-rtd . g$11663$Pld94)
        (record-field-mutable? . g$11662$Pld94)
        (delete-file . g$5994$Pld94)
        (file-exists? . g$5993$Pld94)
        (vector-sort! . g$11661$Pld94)
        (vector-sort . g$11660$Pld94)
        (list-sort . g$6501$Pld94)
        (symbol-hash . g$11659$Pld94)
        (string-ci-hash . g$11658$Pld94)
        (string-hash . g$11657$Pld94)
        (equal-hash . g$11656$Pld94)
        (hashtable-equivalence-function . g$11655$Pld94)
        (make-hashtable . g$11654$Pld94)
        (hashtable-hash-function . g$11653$Pld94)
        (make-eqv-hashtable . g$5961$Pld94)
        (make-eq-hashtable . g$5960$Pld94)
        (hashtable? . g$11652$Pld94)
        (hashtable-update! . g$5967$Pld94)
        (hashtable-size . g$5962$Pld94)
        (hashtable-set! . g$5964$Pld94)
        (hashtable-ref . g$5963$Pld94)
        (hashtable-mutable? . g$11651$Pld94)
        (hashtable-keys . g$11650$Pld94)
        (hashtable-entries . g$11649$Pld94)
        (hashtable-delete! . g$5965$Pld94)
        (hashtable-copy . g$11648$Pld94)
        (hashtable-contains? . g$5966$Pld94)
        (hashtable-clear! . g$5968$Pld94)
        (call-with-output-file . g$11647$Pld94)
        (call-with-input-file . g$11646$Pld94)
        (write-char . g$11645$Pld94)
        (write . g$11644$Pld94)
        (with-output-to-file . g$11643$Pld94)
        (with-input-from-file . g$11642$Pld94)
        (read-char . g$11641$Pld94)
        (read . g$11640$Pld94)
        (peek-char . g$11639$Pld94)
        (open-output-file . g$11638$Pld94)
        (open-input-file . g$11637$Pld94)
        (newline . g$11636$Pld94)
        (display . g$11635$Pld94)
        (close-output-port . g$11634$Pld94)
        (close-input-port . g$11633$Pld94)
        (eof-object? . g$11632$Pld94)
        (eof-object . g$11631$Pld94)
        (current-error-port . g$11630$Pld94)
        (current-output-port . g$11629$Pld94)
        (current-input-port . g$11628$Pld94)
        (output-port? . g$11627$Pld94)
        (input-port? . g$11626$Pld94)
        (utf-8-codec . g$11625$Pld94)
        (utf-16-codec . g$11624$Pld94)
        (transcoder-error-handling-mode . g$11623$Pld94)
        (transcoder-eol-style . g$11622$Pld94)
        (transcoder-codec . g$11621$Pld94)
        (transcoded-port . g$11620$Pld94)
        (textual-port? . g$11619$Pld94)
        (string->bytevector . g$11618$Pld94)
        (standard-output-port . g$11617$Pld94)
        (standard-input-port . g$11616$Pld94)
        (standard-error-port . g$11615$Pld94)
        (set-port-position! . g$11614$Pld94)
        (put-u8 . g$11613$Pld94)
        (put-string . g$11612$Pld94)
        (put-datum . g$11611$Pld94)
        (put-char . g$11610$Pld94)
        (put-bytevector . g$11609$Pld94)
        (port? . g$11608$Pld94)
        (port-transcoder . g$11607$Pld94)
        (port-position . g$11606$Pld94)
        (port-has-set-port-position!? . g$11605$Pld94)
        (port-has-port-position? . g$11604$Pld94)
        (port-eof? . g$11603$Pld94)
        (output-port-buffer-mode . g$11602$Pld94)
        (open-string-output-port . g$6892$Pld94)
        (open-string-input-port . g$11601$Pld94)
        (open-file-output-port . g$11600$Pld94)
        (open-file-input/output-port . g$11599$Pld94)
        (open-file-input-port . g$11598$Pld94)
        (open-bytevector-output-port . g$11597$Pld94)
        (open-bytevector-input-port . g$11596$Pld94)
        (native-transcoder . g$11595$Pld94)
        (native-eol-style . g$11594$Pld94)
        (make-transcoder . g$11593$Pld94)
        (latin-1-codec . g$11592$Pld94)
        (make-i/o-write-error . g$6749$Pld94)
        (make-i/o-read-error . g$6735$Pld94)
        (make-i/o-port-error . g$6854$Pld94)
        (make-i/o-invalid-position-error . g$6764$Pld94)
        (make-i/o-filename-error . g$6781$Pld94)
        (make-i/o-file-protection-error . g$6797$Pld94)
        (make-i/o-file-is-read-only-error . g$6811$Pld94)
        (make-i/o-file-does-not-exist-error . g$6839$Pld94)
        (make-i/o-file-already-exists-error . g$6825$Pld94)
        (make-i/o-error . g$6721$Pld94)
        (make-i/o-encoding-error . g$6885$Pld94)
        (make-i/o-decoding-error . g$6870$Pld94)
        (make-custom-textual-output-port . g$11591$Pld94)
        (make-custom-textual-input/output-port . g$11590$Pld94)
        (make-custom-textual-input-port . g$11589$Pld94)
        (make-custom-binary-output-port . g$11588$Pld94)
        (make-custom-binary-input/output-port . g$11587$Pld94)
        (make-custom-binary-input-port . g$11586$Pld94)
        (make-bytevector . g$11585$Pld94)
        (lookahead-u8 . g$11584$Pld94)
        (lookahead-char . g$11583$Pld94)
        (i/o-write-error? . g$6750$Pld94)
        (i/o-read-error? . g$6736$Pld94)
        (i/o-port-error? . g$6856$Pld94)
        (i/o-invalid-position-error? . g$6766$Pld94)
        (i/o-filename-error? . g$6783$Pld94)
        (i/o-file-protection-error? . g$6798$Pld94)
        (i/o-file-is-read-only-error? . g$6812$Pld94)
        (i/o-file-does-not-exist-error? . g$6840$Pld94)
        (i/o-file-already-exists-error? . g$6826$Pld94)
        (i/o-error? . g$6722$Pld94)
        (i/o-error-port . g$6857$Pld94)
        (i/o-error-filename . g$6784$Pld94)
        (i/o-encoding-error? . g$6887$Pld94)
        (i/o-encoding-error-char . g$6888$Pld94)
        (i/o-decoding-error? . g$6871$Pld94)
        (get-u8 . g$11582$Pld94)
        (get-string-n! . g$11581$Pld94)
        (get-string-n . g$11580$Pld94)
        (get-string-all . g$11579$Pld94)
        (get-line . g$11578$Pld94)
        (get-datum . g$11577$Pld94)
        (get-char . g$11576$Pld94)
        (get-bytevector-some . g$11575$Pld94)
        (get-bytevector-n! . g$11574$Pld94)
        (get-bytevector-n . g$11573$Pld94)
        (get-bytevector-all . g$11572$Pld94)
        (flush-output-port . g$11571$Pld94)
        (close-port . g$11570$Pld94)
        (call-with-string-output-port . g$11569$Pld94)
        (call-with-port . g$11568$Pld94)
        (call-with-bytevector-output-port . g$11567$Pld94)
        (bytevector->string . g$11566$Pld94)
        (buffer-mode? . g$11565$Pld94)
        (binary-port? . g$11564$Pld94)
        (scheme-report-environment . g$8187$Pld94)
        (quotient . g$6488$Pld94)
        (null-environment . g$8186$Pld94)
        (remainder . g$6489$Pld94)
        (modulo . g$6490$Pld94)
        (inexact->exact . g$11563$Pld94)
        (force . g$11562$Pld94)
        (exact->inexact . g$11561$Pld94)
        (exit . g$11560$Pld94)
        (command-line . g$11559$Pld94)
        (string-fill! . g$11558$Pld94)
        (string-set! . g$11557$Pld94)
        (set-cdr! . g$11556$Pld94)
        (set-car! . g$11555$Pld94)
        (remove . g$6074$Pld94)
        (remv . g$6075$Pld94)
        (remp . g$6060$Pld94)
        (remq . g$6076$Pld94)
        (partition . g$6059$Pld94)
        (memv . g$11554$Pld94)
        (memq . g$11553$Pld94)
        (memp . g$6066$Pld94)
        (member . g$6065$Pld94)
        (exists . g$6070$Pld94)
        (for-all . g$6069$Pld94)
        (fold-right . g$6073$Pld94)
        (fold-left . g$6072$Pld94)
        (find . g$6058$Pld94)
        (filter . g$6061$Pld94)
        (cons* . g$6071$Pld94)
        (assv . g$6062$Pld94)
        (assq . g$11552$Pld94)
        (assp . g$6064$Pld94)
        (assoc . g$6063$Pld94)
        (with-exception-handler . g$11551$Pld94)
        (raise-continuable . g$11550$Pld94)
        (raise . g$11549$Pld94)
        (eval . g$8189$Pld94)
        (environment . g$8185$Pld94)
        (make-enumeration . g$11548$Pld94)
        (enum-set=? . g$11547$Pld94)
        (enum-set-universe . g$11546$Pld94)
        (enum-set-union . g$11545$Pld94)
        (enum-set-subset? . g$11544$Pld94)
        (enum-set-projection . g$11543$Pld94)
        (enum-set-member? . g$11542$Pld94)
        (enum-set-intersection . g$11541$Pld94)
        (enum-set-indexer . g$11540$Pld94)
        (enum-set-difference . g$11539$Pld94)
        (enum-set-constructor . g$11538$Pld94)
        (enum-set-complement . g$11537$Pld94)
        (enum-set->list . g$11536$Pld94)
        (who-condition? . g$6399$Pld94)
        (warning? . g$6310$Pld94)
        (violation? . g$6352$Pld94)
        (undefined-violation? . g$6476$Pld94)
        (syntax-violation? . g$6460$Pld94)
        (syntax-violation-subform . g$6462$Pld94)
        (syntax-violation-form . g$6461$Pld94)
        (syntax-violation . g$8203$Pld94)
        (simple-conditions . g$11535$Pld94)
        (serious-condition? . g$6324$Pld94)
        (non-continuable-violation? . g$6414$Pld94)
        (message-condition? . g$6295$Pld94)
        (make-who-condition . g$6397$Pld94)
        (make-warning . g$6309$Pld94)
        (make-violation . g$6351$Pld94)
        (make-undefined-violation . g$6475$Pld94)
        (make-syntax-violation . g$6457$Pld94)
        (make-serious-condition . g$6323$Pld94)
        (make-non-continuable-violation . g$6413$Pld94)
        (make-message-condition . g$6293$Pld94)
        (make-lexical-violation . g$6441$Pld94)
        (make-irritants-condition . g$6380$Pld94)
        (make-implementation-restriction-violation . g$6427$Pld94)
        (make-error . g$6337$Pld94)
        (make-assertion-violation . g$6365$Pld94)
        (lexical-violation? . g$6442$Pld94)
        (irritants-condition? . g$6382$Pld94)
        (implementation-restriction-violation? . g$6428$Pld94)
        (error? . g$6338$Pld94)
        (condition-who . g$6400$Pld94)
        (condition-predicate . g$11534$Pld94)
        (condition-message . g$6296$Pld94)
        (condition-irritants . g$6383$Pld94)
        (condition-accessor . g$11533$Pld94)
        (condition . g$11532$Pld94)
        (assertion-violation? . g$6366$Pld94)
        (condition? . g$11531$Pld94)
        (utf32->string . g$11530$Pld94)
        (utf16->string . g$11529$Pld94)
        (utf8->string . g$11528$Pld94)
        (uint-list->bytevector . g$11527$Pld94)
        (u8-list->bytevector . g$11526$Pld94)
        (string->utf8 . g$11525$Pld94)
        (string->utf32 . g$11524$Pld94)
        (string->utf16 . g$11523$Pld94)
        (sint-list->bytevector . g$11522$Pld94)
        (native-endianness . g$6150$Pld94)
        (bytevector? . g$11521$Pld94)
        (bytevector=? . g$11520$Pld94)
        (bytevector-uint-set! . g$11519$Pld94)
        (bytevector-uint-ref . g$11518$Pld94)
        (bytevector-u8-set! . g$11517$Pld94)
        (bytevector-u8-ref . g$11516$Pld94)
        (bytevector-u64-set! . g$6171$Pld94)
        (bytevector-u64-ref . g$6167$Pld94)
        (bytevector-u64-native-set! . g$6173$Pld94)
        (bytevector-u64-native-ref . g$6169$Pld94)
        (bytevector-u32-set! . g$6163$Pld94)
        (bytevector-u32-ref . g$6159$Pld94)
        (bytevector-u32-native-set! . g$6165$Pld94)
        (bytevector-u32-native-ref . g$6161$Pld94)
        (bytevector-u16-set! . g$6155$Pld94)
        (bytevector-u16-ref . g$6151$Pld94)
        (bytevector-u16-native-set! . g$6157$Pld94)
        (bytevector-u16-native-ref . g$6153$Pld94)
        (bytevector-sint-set! . g$11515$Pld94)
        (bytevector-sint-ref . g$11514$Pld94)
        (bytevector-s8-set! . g$11513$Pld94)
        (bytevector-s8-ref . g$11512$Pld94)
        (bytevector-s64-set! . g$6172$Pld94)
        (bytevector-s64-ref . g$6168$Pld94)
        (bytevector-s64-native-set! . g$6174$Pld94)
        (bytevector-s64-native-ref . g$6170$Pld94)
        (bytevector-s32-set! . g$6164$Pld94)
        (bytevector-s32-ref . g$6160$Pld94)
        (bytevector-s32-native-set! . g$6166$Pld94)
        (bytevector-s32-native-ref . g$6162$Pld94)
        (bytevector-s16-set! . g$6156$Pld94)
        (bytevector-s16-ref . g$6152$Pld94)
        (bytevector-s16-native-set! . g$6158$Pld94)
        (bytevector-s16-native-ref . g$6154$Pld94)
        (bytevector-length . g$11511$Pld94)
        (bytevector-ieee-single-set! . g$11510$Pld94)
        (bytevector-ieee-single-ref . g$11509$Pld94)
        (bytevector-ieee-single-native-set! . g$6177$Pld94)
        (bytevector-ieee-single-native-ref . g$6175$Pld94)
        (bytevector-ieee-double-set! . g$11508$Pld94)
        (bytevector-ieee-double-ref . g$11507$Pld94)
        (bytevector-ieee-double-native-set! . g$6178$Pld94)
        (bytevector-ieee-double-native-ref . g$6176$Pld94)
        (bytevector-fill! . g$11506$Pld94)
        (bytevector-copy! . g$11505$Pld94)
        (bytevector-copy . g$11504$Pld94)
        (bytevector->uint-list . g$11503$Pld94)
        (bytevector->u8-list . g$11502$Pld94)
        (bytevector->sint-list . g$11501$Pld94)
        (no-nans-violation? . g$6707$Pld94)
        (no-infinities-violation? . g$6693$Pld94)
        (make-no-nans-violation . g$6706$Pld94)
        (make-no-infinities-violation . g$6692$Pld94)
        (real->flonum . g$11500$Pld94)
        (flzero? . g$11499$Pld94)
        (fltruncate . g$11498$Pld94)
        (fltan . g$11497$Pld94)
        (flsqrt . g$11496$Pld94)
        (flsin . g$11495$Pld94)
        (flround . g$11494$Pld94)
        (flpositive? . g$11493$Pld94)
        (flonum? . g$11492$Pld94)
        (flodd? . g$11491$Pld94)
        (flnumerator . g$11490$Pld94)
        (flnegative? . g$11489$Pld94)
        (flnan? . g$11488$Pld94)
        (flmod0 . g$11487$Pld94)
        (flmod . g$11486$Pld94)
        (flmin . g$11485$Pld94)
        (flmax . g$11484$Pld94)
        (fllog . g$11483$Pld94)
        (flinteger? . g$11482$Pld94)
        (flinfinite? . g$11481$Pld94)
        (flfloor . g$11480$Pld94)
        (flfinite? . g$11479$Pld94)
        (flexpt . g$11478$Pld94)
        (flexp . g$11477$Pld94)
        (fleven? . g$11476$Pld94)
        (fldiv0-and-mod0 . g$11475$Pld94)
        (fldiv0 . g$11474$Pld94)
        (fldiv-and-mod . g$11473$Pld94)
        (fldiv . g$11472$Pld94)
        (fldenominator . g$11471$Pld94)
        (flcos . g$11470$Pld94)
        (flceiling . g$11469$Pld94)
        (flatan . g$11468$Pld94)
        (flasin . g$11467$Pld94)
        (flacos . g$11466$Pld94)
        (flabs . g$11465$Pld94)
        (fl>? . g$11464$Pld94)
        (fl>=? . g$11463$Pld94)
        (fl=? . g$11462$Pld94)
        (fl<? . g$11461$Pld94)
        (fl<=? . g$11460$Pld94)
        (fl/ . g$11459$Pld94)
        (fl- . g$11458$Pld94)
        (fl+ . g$11457$Pld94)
        (fl* . g$11456$Pld94)
        (fixnum->flonum . g$11455$Pld94)
        (fxzero? . g$11454$Pld94)
        (fxxor . g$11453$Pld94)
        (fxrotate-bit-field . g$6638$Pld94)
        (fxreverse-bit-field . g$11452$Pld94)
        (fxpositive? . g$11451$Pld94)
        (fxodd? . g$11450$Pld94)
        (fxnot . g$11449$Pld94)
        (fxnegative? . g$11448$Pld94)
        (fxmod0 . g$11447$Pld94)
        (fxmod . g$11446$Pld94)
        (fxmin . g$11445$Pld94)
        (fxmax . g$11444$Pld94)
        (fxlength . g$11443$Pld94)
        (fxior . g$11442$Pld94)
        (fxif . g$6632$Pld94)
        (fxfirst-bit-set . g$11441$Pld94)
        (fxeven? . g$11440$Pld94)
        (fxdiv0-and-mod0 . g$11439$Pld94)
        (fxdiv0 . g$11438$Pld94)
        (fxdiv-and-mod . g$11437$Pld94)
        (fxdiv . g$11436$Pld94)
        (fxcopy-bit-field . g$6635$Pld94)
        (fxcopy-bit . g$6633$Pld94)
        (fxbit-set? . g$11435$Pld94)
        (fxbit-field . g$6634$Pld94)
        (fxbit-count . g$11434$Pld94)
        (fxarithmetic-shift-right . g$6637$Pld94)
        (fxarithmetic-shift-left . g$6636$Pld94)
        (fxarithmetic-shift . g$11433$Pld94)
        (fxand . g$11432$Pld94)
        (fx>? . g$11431$Pld94)
        (fx>=? . g$11430$Pld94)
        (fx=? . g$11429$Pld94)
        (fx<? . g$11428$Pld94)
        (fx<=? . g$11427$Pld94)
        (fx-/carry . g$11426$Pld94)
        (fx- . g$11425$Pld94)
        (fx+/carry . g$11424$Pld94)
        (fx+ . g$11423$Pld94)
        (fx*/carry . g$11422$Pld94)
        (fx* . g$11421$Pld94)
        (greatest-fixnum . g$11420$Pld94)
        (least-fixnum . g$11419$Pld94)
        (fixnum-width . g$11418$Pld94)
        (fixnum? . g$11417$Pld94)
        (bitwise-rotate-bit-field . g$6586$Pld94)
        (bitwise-reverse-bit-field . g$6587$Pld94)
        (bitwise-length . g$11416$Pld94)
        (bitwise-if . g$6580$Pld94)
        (bitwise-first-bit-set . g$11415$Pld94)
        (bitwise-copy-bit-field . g$6583$Pld94)
        (bitwise-copy-bit . g$6581$Pld94)
        (bitwise-bit-set? . g$11414$Pld94)
        (bitwise-bit-field . g$11413$Pld94)
        (bitwise-bit-count . g$11412$Pld94)
        (bitwise-xor . g$11411$Pld94)
        (bitwise-ior . g$11410$Pld94)
        (bitwise-and . g$11409$Pld94)
        (bitwise-not . g$11408$Pld94)
        (bitwise-arithmetic-shift-right . g$6585$Pld94)
        (bitwise-arithmetic-shift-left . g$6584$Pld94)
        (bitwise-arithmetic-shift . g$11407$Pld94)
        (zero? . g$11406$Pld94)
        (vector? . g$11405$Pld94)
        (vector-set! . g$11404$Pld94)
        (vector-ref . g$11403$Pld94)
        (vector-map . g$11402$Pld94)
        (vector-length . g$11401$Pld94)
        (vector-for-each . g$11400$Pld94)
        (vector-fill! . g$11399$Pld94)
        (vector->list . g$11398$Pld94)
        (vector . g$11397$Pld94)
        (values . g$11396$Pld94)
        (truncate . g$11395$Pld94)
        (tan . g$11394$Pld94)
        (symbol? . g$11393$Pld94)
        (symbol=? . g$11392$Pld94)
        (symbol->string . g$11391$Pld94)
        (substring . g$11390$Pld94)
        (string? . g$11389$Pld94)
        (string>? . g$11388$Pld94)
        (string>=? . g$11387$Pld94)
        (string=? . g$11386$Pld94)
        (string<? . g$11385$Pld94)
        (string<=? . g$11384$Pld94)
        (string-ref . g$11383$Pld94)
        (string-length . g$11382$Pld94)
        (string-for-each . g$11381$Pld94)
        (string-copy . g$11380$Pld94)
        (string-append . g$11379$Pld94)
        (string->symbol . g$11378$Pld94)
        (string->number . g$11377$Pld94)
        (string->list . g$11376$Pld94)
        (string . g$11375$Pld94)
        (sqrt . g$11374$Pld94)
        (sin . g$11373$Pld94)
        (round . g$11372$Pld94)
        (reverse . g$11371$Pld94)
        (real? . g$11370$Pld94)
        (real-valued? . g$11369$Pld94)
        (real-part . g$11368$Pld94)
        (rationalize . g$5611$Pld94)
        (rational? . g$11367$Pld94)
        (rational-valued? . g$11366$Pld94)
        (procedure? . g$11365$Pld94)
        (positive? . g$11364$Pld94)
        (pair? . g$11363$Pld94)
        (odd? . g$11362$Pld94)
        (numerator . g$11361$Pld94)
        (number? . g$11360$Pld94)
        (number->string . g$11359$Pld94)
        (null? . g$11358$Pld94)
        (not . g$11357$Pld94)
        (negative? . g$11356$Pld94)
        (nan? . g$11355$Pld94)
        (min . g$11354$Pld94)
        (max . g$11353$Pld94)
        (map . g$11352$Pld94)
        (make-vector . g$11351$Pld94)
        (make-string . g$11350$Pld94)
        (make-rectangular . g$11349$Pld94)
        (make-polar . g$11348$Pld94)
        (magnitude . g$11347$Pld94)
        (log . g$11346$Pld94)
        (list? . g$11345$Pld94)
        (list-tail . g$11344$Pld94)
        (list-ref . g$11343$Pld94)
        (list->vector . g$11342$Pld94)
        (list->string . g$11341$Pld94)
        (list . g$11340$Pld94)
        (length . g$11339$Pld94)
        (lcm . g$11338$Pld94)
        (integer? . g$11337$Pld94)
        (integer-valued? . g$11336$Pld94)
        (integer->char . g$11335$Pld94)
        (infinite? . g$11334$Pld94)
        (inexact? . g$11333$Pld94)
        (inexact . g$11332$Pld94)
        (imag-part . g$11331$Pld94)
        (gcd . g$11330$Pld94)
        (for-each . g$11329$Pld94)
        (floor . g$11328$Pld94)
        (finite? . g$11327$Pld94)
        (expt . g$11326$Pld94)
        (exp . g$11325$Pld94)
        (exact? . g$11324$Pld94)
        (exact-integer-sqrt . g$11323$Pld94)
        (exact . g$11322$Pld94)
        (even? . g$11321$Pld94)
        (error . g$11320$Pld94)
        (eqv? . g$11319$Pld94)
        (equal? . g$11318$Pld94)
        (eq? . g$11317$Pld94)
        (dynamic-wind . g$11316$Pld94)
        (div0-and-mod0 . g$11315$Pld94)
        (mod0 . g$11314$Pld94)
        (div0 . g$11313$Pld94)
        (div-and-mod . g$11312$Pld94)
        (mod . g$11311$Pld94)
        (div . g$11310$Pld94)
        (denominator . g$11309$Pld94)
        (cos . g$11308$Pld94)
        (cons . g$11307$Pld94)
        (complex? . g$11306$Pld94)
        (char? . g$11305$Pld94)
        (char>? . g$11304$Pld94)
        (char>=? . g$11303$Pld94)
        (char=? . g$11302$Pld94)
        (char<? . g$11301$Pld94)
        (char<=? . g$11300$Pld94)
        (char->integer . g$11299$Pld94)
        (ceiling . g$11298$Pld94)
        (call-with-values . g$11297$Pld94)
        (call/cc . g$11296$Pld94)
        (call-with-current-continuation . g$11295$Pld94)
        (cddddr . g$5610$Pld94)
        (cdddar . g$5609$Pld94)
        (cddadr . g$5608$Pld94)
        (cddaar . g$5607$Pld94)
        (cdaddr . g$5606$Pld94)
        (cdadar . g$5605$Pld94)
        (cdaadr . g$5604$Pld94)
        (cdaaar . g$5603$Pld94)
        (cadddr . g$5602$Pld94)
        (caddar . g$5601$Pld94)
        (cadadr . g$5600$Pld94)
        (cadaar . g$5599$Pld94)
        (caaddr . g$5598$Pld94)
        (caadar . g$5597$Pld94)
        (caaadr . g$5596$Pld94)
        (caaaar . g$5595$Pld94)
        (cdddr . g$5594$Pld94)
        (cddar . g$5593$Pld94)
        (cdadr . g$5592$Pld94)
        (cdaar . g$5591$Pld94)
        (caddr . g$5590$Pld94)
        (cadar . g$5589$Pld94)
        (caadr . g$5588$Pld94)
        (caaar . g$5587$Pld94)
        (cddr . g$5586$Pld94)
        (cdar . g$5585$Pld94)
        (cadr . g$5584$Pld94)
        (caar . g$5583$Pld94)
        (cdr . g$11294$Pld94)
        (car . g$11293$Pld94)
        (boolean? . g$11292$Pld94)
        (boolean=? . g$11291$Pld94)
        (atan . g$11290$Pld94)
        (assertion-violation . g$11289$Pld94)
        (asin . g$11288$Pld94)
        (apply . g$11287$Pld94)
        (append . g$11286$Pld94)
        (angle . g$11285$Pld94)
        (acos . g$11284$Pld94)
        (abs . g$11283$Pld94)
        (/ . g$11282$Pld94)
        (* . g$11281$Pld94)
        (- . g$11280$Pld94)
        (+ . g$11279$Pld94)
        (>= . g$11278$Pld94)
        (> . g$11277$Pld94)
        (= . g$11276$Pld94)
        (<= . g$11275$Pld94)
        (< . g$11274$Pld94)
        (printf . g$6901$Pld94)
        (fprintf . g$6902$Pld94)
        (format . g$6903$Pld94)
        (get-arity . g$11269$Pld94)
        (gc-collect . g$11268$Pld94)
        (clr-type? . g$11267$Pld94)
        (get-clr-type . g$11266$Pld94)
        (vector-append . g$11265$Pld94)
        (vector-filter . g$11264$Pld94)
        (vector-reverse! . g$11263$Pld94)
        (vector-contains? . g$11262$Pld94)
        (vector-index-of . g$11261$Pld94)
        (vector-copy . g$11260$Pld94)
        (vector-binary-search . g$11259$Pld94)
        (get-output-string . g$11258$Pld94)
        (open-output-string . g$11257$Pld94)
        (open-input-string . g$11256$Pld94)
        (string-format . g$11255$Pld94)
        (trace-printer . g$11120$Pld94)
        (make-traced-procedure . g$11254$Pld94)
        (make-traced-macro . g$6922$Pld94)
        (pmap . g$11253$Pld94)
        (time-it . g$11252$Pld94)
        (make-parameter . g$6927$Pld94)
        (library-locator . g$11251$Pld94)
        (get-library-paths . g$11250$Pld94)
        (environment-symbols . g$8183$Pld94)
        (interaction-environment-symbols . g$8182$Pld94)
        (library-path . g$7352$Pld94)
        (library-extensions . g$7353$Pld94)
        (installed-libraries . g$7373$Pld94)
        (expand . g$8188$Pld94)
        (&no-nans . g$11249$Pld94)
        (&no-infinities . g$11248$Pld94)
        (&i/o-encoding . g$11247$Pld94)
        (&i/o-decoding . g$11246$Pld94)
        (&i/o-port . g$11245$Pld94)
        (&i/o-file-does-not-exist . g$11244$Pld94)
        (&i/o-file-already-exists . g$11243$Pld94)
        (&i/o-file-is-read-only . g$11242$Pld94)
        (&i/o-file-protection . g$11241$Pld94)
        (&i/o-filename . g$11240$Pld94)
        (&i/o-invalid-position . g$11239$Pld94)
        (&i/o-write . g$11238$Pld94)
        (&i/o-read . g$11237$Pld94)
        (&i/o . g$11236$Pld94)
        (&non-continuable . g$11235$Pld94)
        (&undefined . g$11234$Pld94)
        (&syntax . g$11233$Pld94)
        (&lexical . g$11232$Pld94)
        (&implementation-restriction . g$11231$Pld94)
        (&who . g$11229$Pld94)
        (&irritants . g$11228$Pld94)
        (&assertion . g$11227$Pld94)
        (&violation . g$11226$Pld94)
        (&error . g$11225$Pld94)
        (&serious . g$11224$Pld94)
        (&warning . g$11223$Pld94)
        (&message . g$11222$Pld94)
        (&condition . g$11221$Pld94)
        (define-condition-type . g$11220$Pld94)
        (define-enumeration . g$11219$Pld94)
        (define-record-type . g$11218$Pld94)
        (parent-rtd . g$11217$Pld94)
        (nongenerative . g$11216$Pld94)
        (opaque . g$11215$Pld94)
        (sealed . g$11214$Pld94)
        (protocol . g$11213$Pld94)
        (parent . g$11212$Pld94)
        (immutable . g$11211$Pld94)
        (mutable . g$11210$Pld94)
        (fields . g$11209$Pld94)
        (error-handling-mode . g$11208$Pld94)
        (file-options . g$11207$Pld94)
        (buffer-mode . g$11206$Pld94)
        (eol-style . g$11205$Pld94)
        (guard . g$11204$Pld94)
        (trace-letrec-syntax . g$11203$Pld94)
        (trace-let-syntax . g$11202$Pld94)
        (trace-define-syntax . g$11201$Pld94)
        (trace-define . g$11200$Pld94)
        (trace-lambda . g$11199$Pld94)
        (unsyntax-splicing . g$11198$Pld94)
        (unsyntax . g$11197$Pld94)
        (unquote-splicing . g$11196$Pld94)
        (unquote . g$11195$Pld94)
        (_ . g$11194$Pld94)
        (else . g$11193$Pld94)
        (=> . g$11192$Pld94)
        (... . g$11191$Pld94)
        (assert . g$11190$Pld94)
        (endianness . g$11189$Pld94)
        (delay . g$11188$Pld94)
        (time . g$11187$Pld94)
        (or . g$11186$Pld94)
        (and . g$11185$Pld94)
        (do . g$11184$Pld94)
        (cond . g$11183$Pld94)
        (let* . g$11182$Pld94)
        (let . g$11181$Pld94)
        (identifier-syntax . g$11180$Pld94)
        (with-syntax . g$11179$Pld94)
        (quasisyntax . g$11178$Pld94)
        (quasiquote . g$11177$Pld94)
        (syntax-rules . g$11176$Pld94)
        (include-into . g$11175$Pld94)
        (include . g$11174$Pld94)
        (let-values . g$11172$Pld94)
        (let*-values . g$11171$Pld94)
        (record-constructor-descriptor . g$11170$Pld94)
        (record-type-descriptor . g$11169$Pld94)
        (fluid-let-syntax . g$11168$Pld94)
        (case . g$11167$Pld94)
        (parameterize . g$11166$Pld94)
        (unless . g$11165$Pld94)
        (when . g$11164$Pld94)
        (if . g$11163$Pld94)
        (letrec* . g$11162$Pld94)
        (letrec . g$11161$Pld94)
        (case-lambda . g$11159$Pld94)
        (lambda . g$11158$Pld94)
        (syntax . g$11157$Pld94)
        (syntax-case . g$11156$Pld94)
        (quote . g$11155$Pld94)
        (letrec-syntax . g$11153$Pld94)
        (let-syntax . g$11152$Pld94)
        (set! . g$11151$Pld94)
        (import . g$11150$Pld94)
        (library . g$11149$Pld94)
        (begin . g$11148$Pld94)
        (module . g$11147$Pld94)
        (define-syntax . g$11146$Pld94)
        (define . g$11145$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11803$Pld94
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11250$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6734$Pld94
      'g$11804$Pld94
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$11744$Pld94)
        (annotation-source . g$11743$Pld94)
        (annotation-expression . g$11742$Pld94)
        (annotation? . g$11741$Pld94)
        (read-annotated . g$11740$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6734$Pld94
      'g$11805$Pld94
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$11710$Pld94)
        (serialize-library . g$11709$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6734$Pld94
      'g$11806$Pld94
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$7813$Pld94)
        (variable-transformer? . g$7812$Pld94)
        (eqv-hash . g$11272$Pld94)
        (eq-hash . g$11271$Pld94)
        (reverse! . g$11270$Pld94)
        (make-traced-procedure . g$11254$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6734$Pld94
      'g$11807$Pld94
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11273$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11808$Pld94
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$11728$Pld94)
        (clr-field-set!-internal . g$11727$Pld94)
        (clr-field-get-internal . g$11726$Pld94)
        (clr-cast-internal . g$11725$Pld94)
        (clr-call-internal . g$11724$Pld94)
        (clr-new-internal . g$11723$Pld94)
        (clr-new-array-internal . g$11722$Pld94)
        (clr-is-internal . g$11721$Pld94)
        (clr-reference-internal . g$11720$Pld94)
        (clr-using-internal . g$11719$Pld94)
        (clr-clear-usings-internal . g$11718$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11809$Pld94
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11196$Pld94)
        (unquote . g$11195$Pld94)
        (delay . g$11188$Pld94)
        (or . g$11186$Pld94)
        (and . g$11185$Pld94)
        (do . g$11184$Pld94)
        (cond . g$11183$Pld94)
        (let* . g$11182$Pld94)
        (let . g$11181$Pld94)
        (quasiquote . g$11177$Pld94)
        (syntax-rules . g$11176$Pld94)
        (case . g$11167$Pld94)
        (if . g$11163$Pld94)
        (letrec . g$11161$Pld94)
        (lambda . g$11158$Pld94)
        (quote . g$11155$Pld94)
        (letrec-syntax . g$11153$Pld94)
        (let-syntax . g$11152$Pld94)
        (set! . g$11151$Pld94)
        (begin . g$11148$Pld94)
        (define-syntax . g$11146$Pld94)
        (define . g$11145$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6734$Pld94
      'g$11810$Pld94
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8209$Pld94)
        (char-ready? . g$11708$Pld94)
        (string-ci>? . g$11699$Pld94)
        (string-ci>=? . g$11698$Pld94)
        (string-ci=? . g$11697$Pld94)
        (string-ci<? . g$11696$Pld94)
        (string-ci<=? . g$11695$Pld94)
        (char-whitespace? . g$11694$Pld94)
        (char-upper-case? . g$11693$Pld94)
        (char-numeric? . g$11691$Pld94)
        (char-lower-case? . g$11690$Pld94)
        (char-upcase . g$11688$Pld94)
        (char-downcase . g$11685$Pld94)
        (char-ci>? . g$11684$Pld94)
        (char-ci>=? . g$11683$Pld94)
        (char-ci=? . g$11682$Pld94)
        (char-ci<? . g$11681$Pld94)
        (char-ci<=? . g$11680$Pld94)
        (char-alphabetic? . g$11679$Pld94)
        (call-with-output-file . g$11647$Pld94)
        (call-with-input-file . g$11646$Pld94)
        (write-char . g$11645$Pld94)
        (write . g$11644$Pld94)
        (with-output-to-file . g$11643$Pld94)
        (with-input-from-file . g$11642$Pld94)
        (read-char . g$11641$Pld94)
        (read . g$11640$Pld94)
        (peek-char . g$11639$Pld94)
        (open-output-file . g$11638$Pld94)
        (open-input-file . g$11637$Pld94)
        (newline . g$11636$Pld94)
        (display . g$11635$Pld94)
        (close-output-port . g$11634$Pld94)
        (close-input-port . g$11633$Pld94)
        (eof-object? . g$11632$Pld94)
        (eof-object . g$11631$Pld94)
        (current-error-port . g$11630$Pld94)
        (current-output-port . g$11629$Pld94)
        (current-input-port . g$11628$Pld94)
        (output-port? . g$11627$Pld94)
        (input-port? . g$11626$Pld94)
        (scheme-report-environment . g$8187$Pld94)
        (quotient . g$6488$Pld94)
        (null-environment . g$8186$Pld94)
        (remainder . g$6489$Pld94)
        (modulo . g$6490$Pld94)
        (inexact->exact . g$11563$Pld94)
        (force . g$11562$Pld94)
        (exact->inexact . g$11561$Pld94)
        (string-fill! . g$11558$Pld94)
        (string-set! . g$11557$Pld94)
        (set-cdr! . g$11556$Pld94)
        (set-car! . g$11555$Pld94)
        (memv . g$11554$Pld94)
        (memq . g$11553$Pld94)
        (member . g$6065$Pld94)
        (assv . g$6062$Pld94)
        (assq . g$11552$Pld94)
        (assoc . g$6063$Pld94)
        (eval . g$8189$Pld94)
        (zero? . g$11406$Pld94)
        (vector? . g$11405$Pld94)
        (vector-set! . g$11404$Pld94)
        (vector-ref . g$11403$Pld94)
        (vector-length . g$11401$Pld94)
        (vector-fill! . g$11399$Pld94)
        (vector->list . g$11398$Pld94)
        (vector . g$11397$Pld94)
        (values . g$11396$Pld94)
        (truncate . g$11395$Pld94)
        (tan . g$11394$Pld94)
        (symbol? . g$11393$Pld94)
        (symbol->string . g$11391$Pld94)
        (substring . g$11390$Pld94)
        (string? . g$11389$Pld94)
        (string>? . g$11388$Pld94)
        (string>=? . g$11387$Pld94)
        (string=? . g$11386$Pld94)
        (string<? . g$11385$Pld94)
        (string<=? . g$11384$Pld94)
        (string-ref . g$11383$Pld94)
        (string-length . g$11382$Pld94)
        (string-copy . g$11380$Pld94)
        (string-append . g$11379$Pld94)
        (string->symbol . g$11378$Pld94)
        (string->number . g$11377$Pld94)
        (string->list . g$11376$Pld94)
        (string . g$11375$Pld94)
        (sqrt . g$11374$Pld94)
        (sin . g$11373$Pld94)
        (round . g$11372$Pld94)
        (reverse . g$11371$Pld94)
        (real? . g$11370$Pld94)
        (real-part . g$11368$Pld94)
        (rationalize . g$5611$Pld94)
        (rational? . g$11367$Pld94)
        (procedure? . g$11365$Pld94)
        (positive? . g$11364$Pld94)
        (pair? . g$11363$Pld94)
        (odd? . g$11362$Pld94)
        (numerator . g$11361$Pld94)
        (number? . g$11360$Pld94)
        (number->string . g$11359$Pld94)
        (null? . g$11358$Pld94)
        (not . g$11357$Pld94)
        (negative? . g$11356$Pld94)
        (min . g$11354$Pld94)
        (max . g$11353$Pld94)
        (map . g$11352$Pld94)
        (make-vector . g$11351$Pld94)
        (make-string . g$11350$Pld94)
        (make-rectangular . g$11349$Pld94)
        (make-polar . g$11348$Pld94)
        (magnitude . g$11347$Pld94)
        (log . g$11346$Pld94)
        (list? . g$11345$Pld94)
        (list-tail . g$11344$Pld94)
        (list-ref . g$11343$Pld94)
        (list->vector . g$11342$Pld94)
        (list->string . g$11341$Pld94)
        (list . g$11340$Pld94)
        (length . g$11339$Pld94)
        (lcm . g$11338$Pld94)
        (integer? . g$11337$Pld94)
        (integer->char . g$11335$Pld94)
        (inexact? . g$11333$Pld94)
        (imag-part . g$11331$Pld94)
        (gcd . g$11330$Pld94)
        (for-each . g$11329$Pld94)
        (floor . g$11328$Pld94)
        (expt . g$11326$Pld94)
        (exp . g$11325$Pld94)
        (exact? . g$11324$Pld94)
        (even? . g$11321$Pld94)
        (eqv? . g$11319$Pld94)
        (equal? . g$11318$Pld94)
        (eq? . g$11317$Pld94)
        (dynamic-wind . g$11316$Pld94)
        (denominator . g$11309$Pld94)
        (cos . g$11308$Pld94)
        (cons . g$11307$Pld94)
        (complex? . g$11306$Pld94)
        (char? . g$11305$Pld94)
        (char>? . g$11304$Pld94)
        (char>=? . g$11303$Pld94)
        (char=? . g$11302$Pld94)
        (char<? . g$11301$Pld94)
        (char<=? . g$11300$Pld94)
        (char->integer . g$11299$Pld94)
        (ceiling . g$11298$Pld94)
        (call-with-values . g$11297$Pld94)
        (call-with-current-continuation . g$11295$Pld94)
        (cddddr . g$5610$Pld94)
        (cdddar . g$5609$Pld94)
        (cddadr . g$5608$Pld94)
        (cddaar . g$5607$Pld94)
        (cdaddr . g$5606$Pld94)
        (cdadar . g$5605$Pld94)
        (cdaadr . g$5604$Pld94)
        (cdaaar . g$5603$Pld94)
        (cadddr . g$5602$Pld94)
        (caddar . g$5601$Pld94)
        (cadadr . g$5600$Pld94)
        (cadaar . g$5599$Pld94)
        (caaddr . g$5598$Pld94)
        (caadar . g$5597$Pld94)
        (caaadr . g$5596$Pld94)
        (caaaar . g$5595$Pld94)
        (cdddr . g$5594$Pld94)
        (cddar . g$5593$Pld94)
        (cdadr . g$5592$Pld94)
        (cdaar . g$5591$Pld94)
        (caddr . g$5590$Pld94)
        (cadar . g$5589$Pld94)
        (caadr . g$5588$Pld94)
        (caaar . g$5587$Pld94)
        (cddr . g$5586$Pld94)
        (cdar . g$5585$Pld94)
        (cadr . g$5584$Pld94)
        (caar . g$5583$Pld94)
        (cdr . g$11294$Pld94)
        (car . g$11293$Pld94)
        (boolean? . g$11292$Pld94)
        (atan . g$11290$Pld94)
        (asin . g$11288$Pld94)
        (apply . g$11287$Pld94)
        (append . g$11286$Pld94)
        (angle . g$11285$Pld94)
        (acos . g$11284$Pld94)
        (abs . g$11283$Pld94)
        (/ . g$11282$Pld94)
        (* . g$11281$Pld94)
        (- . g$11280$Pld94)
        (+ . g$11279$Pld94)
        (>= . g$11278$Pld94)
        (> . g$11277$Pld94)
        (= . g$11276$Pld94)
        (<= . g$11275$Pld94)
        (< . g$11274$Pld94)
        (unquote-splicing . g$11196$Pld94)
        (unquote . g$11195$Pld94)
        (else . g$11193$Pld94)
        (=> . g$11192$Pld94)
        (... . g$11191$Pld94)
        (delay . g$11188$Pld94)
        (or . g$11186$Pld94)
        (and . g$11185$Pld94)
        (do . g$11184$Pld94)
        (cond . g$11183$Pld94)
        (let* . g$11182$Pld94)
        (let . g$11181$Pld94)
        (quasiquote . g$11177$Pld94)
        (syntax-rules . g$11176$Pld94)
        (case . g$11167$Pld94)
        (if . g$11163$Pld94)
        (letrec . g$11161$Pld94)
        (lambda . g$11158$Pld94)
        (quote . g$11155$Pld94)
        (letrec-syntax . g$11153$Pld94)
        (let-syntax . g$11152$Pld94)
        (set! . g$11151$Pld94)
        (begin . g$11148$Pld94)
        (define-syntax . g$11146$Pld94)
        (define . g$11145$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6734$Pld94
      'g$11811$Pld94
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11707$Pld94)
        (string-titlecase . g$11706$Pld94)
        (string-normalize-nfkd . g$11705$Pld94)
        (string-normalize-nfkc . g$11704$Pld94)
        (string-normalize-nfd . g$11703$Pld94)
        (string-normalize-nfc . g$11702$Pld94)
        (string-foldcase . g$11701$Pld94)
        (string-downcase . g$11700$Pld94)
        (string-ci>? . g$11699$Pld94)
        (string-ci>=? . g$11698$Pld94)
        (string-ci=? . g$11697$Pld94)
        (string-ci<? . g$11696$Pld94)
        (string-ci<=? . g$11695$Pld94)
        (char-whitespace? . g$11694$Pld94)
        (char-upper-case? . g$11693$Pld94)
        (char-title-case? . g$11692$Pld94)
        (char-numeric? . g$11691$Pld94)
        (char-lower-case? . g$11690$Pld94)
        (char-general-category . g$11689$Pld94)
        (char-upcase . g$11688$Pld94)
        (char-titlecase . g$11687$Pld94)
        (char-foldcase . g$11686$Pld94)
        (char-downcase . g$11685$Pld94)
        (char-ci>? . g$11684$Pld94)
        (char-ci>=? . g$11683$Pld94)
        (char-ci=? . g$11682$Pld94)
        (char-ci<? . g$11681$Pld94)
        (char-ci<=? . g$11680$Pld94)
        (char-alphabetic? . g$11679$Pld94)
        (make-variable-transformer . g$7811$Pld94)
        (identifier? . g$8204$Pld94)
        (generate-temporaries . g$8196$Pld94)
        (free-identifier=? . g$8197$Pld94)
        (syntax->datum . g$8206$Pld94)
        (datum->syntax . g$8205$Pld94)
        (bound-identifier=? . g$8198$Pld94)
        (record-type-descriptor? . g$11678$Pld94)
        (record-predicate . g$11677$Pld94)
        (record-mutator . g$11676$Pld94)
        (record-constructor . g$11675$Pld94)
        (record-accessor . g$11674$Pld94)
        (make-record-type-descriptor . g$11673$Pld94)
        (make-record-constructor-descriptor . g$11672$Pld94)
        (record? . g$11671$Pld94)
        (record-type-uid . g$11670$Pld94)
        (record-type-sealed? . g$11669$Pld94)
        (record-type-parent . g$11668$Pld94)
        (record-type-opaque? . g$11667$Pld94)
        (record-type-name . g$11666$Pld94)
        (record-type-generative? . g$11665$Pld94)
        (record-type-field-names . g$11664$Pld94)
        (record-rtd . g$11663$Pld94)
        (record-field-mutable? . g$11662$Pld94)
        (delete-file . g$5994$Pld94)
        (file-exists? . g$5993$Pld94)
        (vector-sort! . g$11661$Pld94)
        (vector-sort . g$11660$Pld94)
        (list-sort . g$6501$Pld94)
        (symbol-hash . g$11659$Pld94)
        (string-ci-hash . g$11658$Pld94)
        (string-hash . g$11657$Pld94)
        (equal-hash . g$11656$Pld94)
        (hashtable-equivalence-function . g$11655$Pld94)
        (make-hashtable . g$11654$Pld94)
        (hashtable-hash-function . g$11653$Pld94)
        (make-eqv-hashtable . g$5961$Pld94)
        (make-eq-hashtable . g$5960$Pld94)
        (hashtable? . g$11652$Pld94)
        (hashtable-update! . g$5967$Pld94)
        (hashtable-size . g$5962$Pld94)
        (hashtable-set! . g$5964$Pld94)
        (hashtable-ref . g$5963$Pld94)
        (hashtable-mutable? . g$11651$Pld94)
        (hashtable-keys . g$11650$Pld94)
        (hashtable-entries . g$11649$Pld94)
        (hashtable-delete! . g$5965$Pld94)
        (hashtable-copy . g$11648$Pld94)
        (hashtable-contains? . g$5966$Pld94)
        (hashtable-clear! . g$5968$Pld94)
        (call-with-output-file . g$11647$Pld94)
        (call-with-input-file . g$11646$Pld94)
        (write-char . g$11645$Pld94)
        (write . g$11644$Pld94)
        (with-output-to-file . g$11643$Pld94)
        (with-input-from-file . g$11642$Pld94)
        (read-char . g$11641$Pld94)
        (read . g$11640$Pld94)
        (peek-char . g$11639$Pld94)
        (open-output-file . g$11638$Pld94)
        (open-input-file . g$11637$Pld94)
        (newline . g$11636$Pld94)
        (display . g$11635$Pld94)
        (close-output-port . g$11634$Pld94)
        (close-input-port . g$11633$Pld94)
        (eof-object? . g$11632$Pld94)
        (eof-object . g$11631$Pld94)
        (current-error-port . g$11630$Pld94)
        (current-output-port . g$11629$Pld94)
        (current-input-port . g$11628$Pld94)
        (output-port? . g$11627$Pld94)
        (input-port? . g$11626$Pld94)
        (utf-8-codec . g$11625$Pld94)
        (utf-16-codec . g$11624$Pld94)
        (transcoder-error-handling-mode . g$11623$Pld94)
        (transcoder-eol-style . g$11622$Pld94)
        (transcoder-codec . g$11621$Pld94)
        (transcoded-port . g$11620$Pld94)
        (textual-port? . g$11619$Pld94)
        (string->bytevector . g$11618$Pld94)
        (standard-output-port . g$11617$Pld94)
        (standard-input-port . g$11616$Pld94)
        (standard-error-port . g$11615$Pld94)
        (set-port-position! . g$11614$Pld94)
        (put-u8 . g$11613$Pld94)
        (put-string . g$11612$Pld94)
        (put-datum . g$11611$Pld94)
        (put-char . g$11610$Pld94)
        (put-bytevector . g$11609$Pld94)
        (port? . g$11608$Pld94)
        (port-transcoder . g$11607$Pld94)
        (port-position . g$11606$Pld94)
        (port-has-set-port-position!? . g$11605$Pld94)
        (port-has-port-position? . g$11604$Pld94)
        (port-eof? . g$11603$Pld94)
        (output-port-buffer-mode . g$11602$Pld94)
        (open-string-output-port . g$6892$Pld94)
        (open-string-input-port . g$11601$Pld94)
        (open-file-output-port . g$11600$Pld94)
        (open-file-input/output-port . g$11599$Pld94)
        (open-file-input-port . g$11598$Pld94)
        (open-bytevector-output-port . g$11597$Pld94)
        (open-bytevector-input-port . g$11596$Pld94)
        (native-transcoder . g$11595$Pld94)
        (native-eol-style . g$11594$Pld94)
        (make-transcoder . g$11593$Pld94)
        (latin-1-codec . g$11592$Pld94)
        (make-i/o-write-error . g$6749$Pld94)
        (make-i/o-read-error . g$6735$Pld94)
        (make-i/o-port-error . g$6854$Pld94)
        (make-i/o-invalid-position-error . g$6764$Pld94)
        (make-i/o-filename-error . g$6781$Pld94)
        (make-i/o-file-protection-error . g$6797$Pld94)
        (make-i/o-file-is-read-only-error . g$6811$Pld94)
        (make-i/o-file-does-not-exist-error . g$6839$Pld94)
        (make-i/o-file-already-exists-error . g$6825$Pld94)
        (make-i/o-error . g$6721$Pld94)
        (make-i/o-encoding-error . g$6885$Pld94)
        (make-i/o-decoding-error . g$6870$Pld94)
        (make-custom-textual-output-port . g$11591$Pld94)
        (make-custom-textual-input/output-port . g$11590$Pld94)
        (make-custom-textual-input-port . g$11589$Pld94)
        (make-custom-binary-output-port . g$11588$Pld94)
        (make-custom-binary-input/output-port . g$11587$Pld94)
        (make-custom-binary-input-port . g$11586$Pld94)
        (make-bytevector . g$11585$Pld94)
        (lookahead-u8 . g$11584$Pld94)
        (lookahead-char . g$11583$Pld94)
        (i/o-write-error? . g$6750$Pld94)
        (i/o-read-error? . g$6736$Pld94)
        (i/o-port-error? . g$6856$Pld94)
        (i/o-invalid-position-error? . g$6766$Pld94)
        (i/o-filename-error? . g$6783$Pld94)
        (i/o-file-protection-error? . g$6798$Pld94)
        (i/o-file-is-read-only-error? . g$6812$Pld94)
        (i/o-file-does-not-exist-error? . g$6840$Pld94)
        (i/o-file-already-exists-error? . g$6826$Pld94)
        (i/o-error? . g$6722$Pld94)
        (i/o-error-port . g$6857$Pld94)
        (i/o-error-filename . g$6784$Pld94)
        (i/o-encoding-error? . g$6887$Pld94)
        (i/o-encoding-error-char . g$6888$Pld94)
        (i/o-decoding-error? . g$6871$Pld94)
        (get-u8 . g$11582$Pld94)
        (get-string-n! . g$11581$Pld94)
        (get-string-n . g$11580$Pld94)
        (get-string-all . g$11579$Pld94)
        (get-line . g$11578$Pld94)
        (get-datum . g$11577$Pld94)
        (get-char . g$11576$Pld94)
        (get-bytevector-some . g$11575$Pld94)
        (get-bytevector-n! . g$11574$Pld94)
        (get-bytevector-n . g$11573$Pld94)
        (get-bytevector-all . g$11572$Pld94)
        (flush-output-port . g$11571$Pld94)
        (close-port . g$11570$Pld94)
        (call-with-string-output-port . g$11569$Pld94)
        (call-with-port . g$11568$Pld94)
        (call-with-bytevector-output-port . g$11567$Pld94)
        (bytevector->string . g$11566$Pld94)
        (buffer-mode? . g$11565$Pld94)
        (binary-port? . g$11564$Pld94)
        (exit . g$11560$Pld94)
        (command-line . g$11559$Pld94)
        (remove . g$6074$Pld94)
        (remv . g$6075$Pld94)
        (remp . g$6060$Pld94)
        (remq . g$6076$Pld94)
        (partition . g$6059$Pld94)
        (memv . g$11554$Pld94)
        (memq . g$11553$Pld94)
        (memp . g$6066$Pld94)
        (member . g$6065$Pld94)
        (exists . g$6070$Pld94)
        (for-all . g$6069$Pld94)
        (fold-right . g$6073$Pld94)
        (fold-left . g$6072$Pld94)
        (find . g$6058$Pld94)
        (filter . g$6061$Pld94)
        (cons* . g$6071$Pld94)
        (assv . g$6062$Pld94)
        (assq . g$11552$Pld94)
        (assp . g$6064$Pld94)
        (assoc . g$6063$Pld94)
        (with-exception-handler . g$11551$Pld94)
        (raise-continuable . g$11550$Pld94)
        (raise . g$11549$Pld94)
        (make-enumeration . g$11548$Pld94)
        (enum-set=? . g$11547$Pld94)
        (enum-set-universe . g$11546$Pld94)
        (enum-set-union . g$11545$Pld94)
        (enum-set-subset? . g$11544$Pld94)
        (enum-set-projection . g$11543$Pld94)
        (enum-set-member? . g$11542$Pld94)
        (enum-set-intersection . g$11541$Pld94)
        (enum-set-indexer . g$11540$Pld94)
        (enum-set-difference . g$11539$Pld94)
        (enum-set-constructor . g$11538$Pld94)
        (enum-set-complement . g$11537$Pld94)
        (enum-set->list . g$11536$Pld94)
        (who-condition? . g$6399$Pld94)
        (warning? . g$6310$Pld94)
        (violation? . g$6352$Pld94)
        (undefined-violation? . g$6476$Pld94)
        (syntax-violation? . g$6460$Pld94)
        (syntax-violation-subform . g$6462$Pld94)
        (syntax-violation-form . g$6461$Pld94)
        (syntax-violation . g$8203$Pld94)
        (simple-conditions . g$11535$Pld94)
        (serious-condition? . g$6324$Pld94)
        (non-continuable-violation? . g$6414$Pld94)
        (message-condition? . g$6295$Pld94)
        (make-who-condition . g$6397$Pld94)
        (make-warning . g$6309$Pld94)
        (make-violation . g$6351$Pld94)
        (make-undefined-violation . g$6475$Pld94)
        (make-syntax-violation . g$6457$Pld94)
        (make-serious-condition . g$6323$Pld94)
        (make-non-continuable-violation . g$6413$Pld94)
        (make-message-condition . g$6293$Pld94)
        (make-lexical-violation . g$6441$Pld94)
        (make-irritants-condition . g$6380$Pld94)
        (make-implementation-restriction-violation . g$6427$Pld94)
        (make-error . g$6337$Pld94)
        (make-assertion-violation . g$6365$Pld94)
        (lexical-violation? . g$6442$Pld94)
        (irritants-condition? . g$6382$Pld94)
        (implementation-restriction-violation? . g$6428$Pld94)
        (error? . g$6338$Pld94)
        (condition-who . g$6400$Pld94)
        (condition-predicate . g$11534$Pld94)
        (condition-message . g$6296$Pld94)
        (condition-irritants . g$6383$Pld94)
        (condition-accessor . g$11533$Pld94)
        (condition . g$11532$Pld94)
        (assertion-violation? . g$6366$Pld94)
        (condition? . g$11531$Pld94)
        (utf32->string . g$11530$Pld94)
        (utf16->string . g$11529$Pld94)
        (utf8->string . g$11528$Pld94)
        (uint-list->bytevector . g$11527$Pld94)
        (u8-list->bytevector . g$11526$Pld94)
        (string->utf8 . g$11525$Pld94)
        (string->utf32 . g$11524$Pld94)
        (string->utf16 . g$11523$Pld94)
        (sint-list->bytevector . g$11522$Pld94)
        (native-endianness . g$6150$Pld94)
        (bytevector? . g$11521$Pld94)
        (bytevector=? . g$11520$Pld94)
        (bytevector-uint-set! . g$11519$Pld94)
        (bytevector-uint-ref . g$11518$Pld94)
        (bytevector-u8-set! . g$11517$Pld94)
        (bytevector-u8-ref . g$11516$Pld94)
        (bytevector-u64-set! . g$6171$Pld94)
        (bytevector-u64-ref . g$6167$Pld94)
        (bytevector-u64-native-set! . g$6173$Pld94)
        (bytevector-u64-native-ref . g$6169$Pld94)
        (bytevector-u32-set! . g$6163$Pld94)
        (bytevector-u32-ref . g$6159$Pld94)
        (bytevector-u32-native-set! . g$6165$Pld94)
        (bytevector-u32-native-ref . g$6161$Pld94)
        (bytevector-u16-set! . g$6155$Pld94)
        (bytevector-u16-ref . g$6151$Pld94)
        (bytevector-u16-native-set! . g$6157$Pld94)
        (bytevector-u16-native-ref . g$6153$Pld94)
        (bytevector-sint-set! . g$11515$Pld94)
        (bytevector-sint-ref . g$11514$Pld94)
        (bytevector-s8-set! . g$11513$Pld94)
        (bytevector-s8-ref . g$11512$Pld94)
        (bytevector-s64-set! . g$6172$Pld94)
        (bytevector-s64-ref . g$6168$Pld94)
        (bytevector-s64-native-set! . g$6174$Pld94)
        (bytevector-s64-native-ref . g$6170$Pld94)
        (bytevector-s32-set! . g$6164$Pld94)
        (bytevector-s32-ref . g$6160$Pld94)
        (bytevector-s32-native-set! . g$6166$Pld94)
        (bytevector-s32-native-ref . g$6162$Pld94)
        (bytevector-s16-set! . g$6156$Pld94)
        (bytevector-s16-ref . g$6152$Pld94)
        (bytevector-s16-native-set! . g$6158$Pld94)
        (bytevector-s16-native-ref . g$6154$Pld94)
        (bytevector-length . g$11511$Pld94)
        (bytevector-ieee-single-set! . g$11510$Pld94)
        (bytevector-ieee-single-ref . g$11509$Pld94)
        (bytevector-ieee-single-native-set! . g$6177$Pld94)
        (bytevector-ieee-single-native-ref . g$6175$Pld94)
        (bytevector-ieee-double-set! . g$11508$Pld94)
        (bytevector-ieee-double-ref . g$11507$Pld94)
        (bytevector-ieee-double-native-set! . g$6178$Pld94)
        (bytevector-ieee-double-native-ref . g$6176$Pld94)
        (bytevector-fill! . g$11506$Pld94)
        (bytevector-copy! . g$11505$Pld94)
        (bytevector-copy . g$11504$Pld94)
        (bytevector->uint-list . g$11503$Pld94)
        (bytevector->u8-list . g$11502$Pld94)
        (bytevector->sint-list . g$11501$Pld94)
        (no-nans-violation? . g$6707$Pld94)
        (no-infinities-violation? . g$6693$Pld94)
        (make-no-nans-violation . g$6706$Pld94)
        (make-no-infinities-violation . g$6692$Pld94)
        (real->flonum . g$11500$Pld94)
        (flzero? . g$11499$Pld94)
        (fltruncate . g$11498$Pld94)
        (fltan . g$11497$Pld94)
        (flsqrt . g$11496$Pld94)
        (flsin . g$11495$Pld94)
        (flround . g$11494$Pld94)
        (flpositive? . g$11493$Pld94)
        (flonum? . g$11492$Pld94)
        (flodd? . g$11491$Pld94)
        (flnumerator . g$11490$Pld94)
        (flnegative? . g$11489$Pld94)
        (flnan? . g$11488$Pld94)
        (flmod0 . g$11487$Pld94)
        (flmod . g$11486$Pld94)
        (flmin . g$11485$Pld94)
        (flmax . g$11484$Pld94)
        (fllog . g$11483$Pld94)
        (flinteger? . g$11482$Pld94)
        (flinfinite? . g$11481$Pld94)
        (flfloor . g$11480$Pld94)
        (flfinite? . g$11479$Pld94)
        (flexpt . g$11478$Pld94)
        (flexp . g$11477$Pld94)
        (fleven? . g$11476$Pld94)
        (fldiv0-and-mod0 . g$11475$Pld94)
        (fldiv0 . g$11474$Pld94)
        (fldiv-and-mod . g$11473$Pld94)
        (fldiv . g$11472$Pld94)
        (fldenominator . g$11471$Pld94)
        (flcos . g$11470$Pld94)
        (flceiling . g$11469$Pld94)
        (flatan . g$11468$Pld94)
        (flasin . g$11467$Pld94)
        (flacos . g$11466$Pld94)
        (flabs . g$11465$Pld94)
        (fl>? . g$11464$Pld94)
        (fl>=? . g$11463$Pld94)
        (fl=? . g$11462$Pld94)
        (fl<? . g$11461$Pld94)
        (fl<=? . g$11460$Pld94)
        (fl/ . g$11459$Pld94)
        (fl- . g$11458$Pld94)
        (fl+ . g$11457$Pld94)
        (fl* . g$11456$Pld94)
        (fixnum->flonum . g$11455$Pld94)
        (fxzero? . g$11454$Pld94)
        (fxxor . g$11453$Pld94)
        (fxrotate-bit-field . g$6638$Pld94)
        (fxreverse-bit-field . g$11452$Pld94)
        (fxpositive? . g$11451$Pld94)
        (fxodd? . g$11450$Pld94)
        (fxnot . g$11449$Pld94)
        (fxnegative? . g$11448$Pld94)
        (fxmod0 . g$11447$Pld94)
        (fxmod . g$11446$Pld94)
        (fxmin . g$11445$Pld94)
        (fxmax . g$11444$Pld94)
        (fxlength . g$11443$Pld94)
        (fxior . g$11442$Pld94)
        (fxif . g$6632$Pld94)
        (fxfirst-bit-set . g$11441$Pld94)
        (fxeven? . g$11440$Pld94)
        (fxdiv0-and-mod0 . g$11439$Pld94)
        (fxdiv0 . g$11438$Pld94)
        (fxdiv-and-mod . g$11437$Pld94)
        (fxdiv . g$11436$Pld94)
        (fxcopy-bit-field . g$6635$Pld94)
        (fxcopy-bit . g$6633$Pld94)
        (fxbit-set? . g$11435$Pld94)
        (fxbit-field . g$6634$Pld94)
        (fxbit-count . g$11434$Pld94)
        (fxarithmetic-shift-right . g$6637$Pld94)
        (fxarithmetic-shift-left . g$6636$Pld94)
        (fxarithmetic-shift . g$11433$Pld94)
        (fxand . g$11432$Pld94)
        (fx>? . g$11431$Pld94)
        (fx>=? . g$11430$Pld94)
        (fx=? . g$11429$Pld94)
        (fx<? . g$11428$Pld94)
        (fx<=? . g$11427$Pld94)
        (fx-/carry . g$11426$Pld94)
        (fx- . g$11425$Pld94)
        (fx+/carry . g$11424$Pld94)
        (fx+ . g$11423$Pld94)
        (fx*/carry . g$11422$Pld94)
        (fx* . g$11421$Pld94)
        (greatest-fixnum . g$11420$Pld94)
        (least-fixnum . g$11419$Pld94)
        (fixnum-width . g$11418$Pld94)
        (fixnum? . g$11417$Pld94)
        (bitwise-rotate-bit-field . g$6586$Pld94)
        (bitwise-reverse-bit-field . g$6587$Pld94)
        (bitwise-length . g$11416$Pld94)
        (bitwise-if . g$6580$Pld94)
        (bitwise-first-bit-set . g$11415$Pld94)
        (bitwise-copy-bit-field . g$6583$Pld94)
        (bitwise-copy-bit . g$6581$Pld94)
        (bitwise-bit-set? . g$11414$Pld94)
        (bitwise-bit-field . g$11413$Pld94)
        (bitwise-bit-count . g$11412$Pld94)
        (bitwise-xor . g$11411$Pld94)
        (bitwise-ior . g$11410$Pld94)
        (bitwise-and . g$11409$Pld94)
        (bitwise-not . g$11408$Pld94)
        (bitwise-arithmetic-shift-right . g$6585$Pld94)
        (bitwise-arithmetic-shift-left . g$6584$Pld94)
        (bitwise-arithmetic-shift . g$11407$Pld94)
        (zero? . g$11406$Pld94)
        (vector? . g$11405$Pld94)
        (vector-set! . g$11404$Pld94)
        (vector-ref . g$11403$Pld94)
        (vector-map . g$11402$Pld94)
        (vector-length . g$11401$Pld94)
        (vector-for-each . g$11400$Pld94)
        (vector-fill! . g$11399$Pld94)
        (vector->list . g$11398$Pld94)
        (vector . g$11397$Pld94)
        (values . g$11396$Pld94)
        (truncate . g$11395$Pld94)
        (tan . g$11394$Pld94)
        (symbol? . g$11393$Pld94)
        (symbol=? . g$11392$Pld94)
        (symbol->string . g$11391$Pld94)
        (substring . g$11390$Pld94)
        (string? . g$11389$Pld94)
        (string>? . g$11388$Pld94)
        (string>=? . g$11387$Pld94)
        (string=? . g$11386$Pld94)
        (string<? . g$11385$Pld94)
        (string<=? . g$11384$Pld94)
        (string-ref . g$11383$Pld94)
        (string-length . g$11382$Pld94)
        (string-for-each . g$11381$Pld94)
        (string-copy . g$11380$Pld94)
        (string-append . g$11379$Pld94)
        (string->symbol . g$11378$Pld94)
        (string->number . g$11377$Pld94)
        (string->list . g$11376$Pld94)
        (string . g$11375$Pld94)
        (sqrt . g$11374$Pld94)
        (sin . g$11373$Pld94)
        (round . g$11372$Pld94)
        (reverse . g$11371$Pld94)
        (real? . g$11370$Pld94)
        (real-valued? . g$11369$Pld94)
        (real-part . g$11368$Pld94)
        (rationalize . g$5611$Pld94)
        (rational? . g$11367$Pld94)
        (rational-valued? . g$11366$Pld94)
        (procedure? . g$11365$Pld94)
        (positive? . g$11364$Pld94)
        (pair? . g$11363$Pld94)
        (odd? . g$11362$Pld94)
        (numerator . g$11361$Pld94)
        (number? . g$11360$Pld94)
        (number->string . g$11359$Pld94)
        (null? . g$11358$Pld94)
        (not . g$11357$Pld94)
        (negative? . g$11356$Pld94)
        (nan? . g$11355$Pld94)
        (min . g$11354$Pld94)
        (max . g$11353$Pld94)
        (map . g$11352$Pld94)
        (make-vector . g$11351$Pld94)
        (make-string . g$11350$Pld94)
        (make-rectangular . g$11349$Pld94)
        (make-polar . g$11348$Pld94)
        (magnitude . g$11347$Pld94)
        (log . g$11346$Pld94)
        (list? . g$11345$Pld94)
        (list-tail . g$11344$Pld94)
        (list-ref . g$11343$Pld94)
        (list->vector . g$11342$Pld94)
        (list->string . g$11341$Pld94)
        (list . g$11340$Pld94)
        (length . g$11339$Pld94)
        (lcm . g$11338$Pld94)
        (integer? . g$11337$Pld94)
        (integer-valued? . g$11336$Pld94)
        (integer->char . g$11335$Pld94)
        (infinite? . g$11334$Pld94)
        (inexact? . g$11333$Pld94)
        (inexact . g$11332$Pld94)
        (imag-part . g$11331$Pld94)
        (gcd . g$11330$Pld94)
        (for-each . g$11329$Pld94)
        (floor . g$11328$Pld94)
        (finite? . g$11327$Pld94)
        (expt . g$11326$Pld94)
        (exp . g$11325$Pld94)
        (exact? . g$11324$Pld94)
        (exact-integer-sqrt . g$11323$Pld94)
        (exact . g$11322$Pld94)
        (even? . g$11321$Pld94)
        (error . g$11320$Pld94)
        (eqv? . g$11319$Pld94)
        (equal? . g$11318$Pld94)
        (eq? . g$11317$Pld94)
        (dynamic-wind . g$11316$Pld94)
        (div0-and-mod0 . g$11315$Pld94)
        (mod0 . g$11314$Pld94)
        (div0 . g$11313$Pld94)
        (div-and-mod . g$11312$Pld94)
        (mod . g$11311$Pld94)
        (div . g$11310$Pld94)
        (denominator . g$11309$Pld94)
        (cos . g$11308$Pld94)
        (cons . g$11307$Pld94)
        (complex? . g$11306$Pld94)
        (char? . g$11305$Pld94)
        (char>? . g$11304$Pld94)
        (char>=? . g$11303$Pld94)
        (char=? . g$11302$Pld94)
        (char<? . g$11301$Pld94)
        (char<=? . g$11300$Pld94)
        (char->integer . g$11299$Pld94)
        (ceiling . g$11298$Pld94)
        (call-with-values . g$11297$Pld94)
        (call/cc . g$11296$Pld94)
        (call-with-current-continuation . g$11295$Pld94)
        (cddddr . g$5610$Pld94)
        (cdddar . g$5609$Pld94)
        (cddadr . g$5608$Pld94)
        (cddaar . g$5607$Pld94)
        (cdaddr . g$5606$Pld94)
        (cdadar . g$5605$Pld94)
        (cdaadr . g$5604$Pld94)
        (cdaaar . g$5603$Pld94)
        (cadddr . g$5602$Pld94)
        (caddar . g$5601$Pld94)
        (cadadr . g$5600$Pld94)
        (cadaar . g$5599$Pld94)
        (caaddr . g$5598$Pld94)
        (caadar . g$5597$Pld94)
        (caaadr . g$5596$Pld94)
        (caaaar . g$5595$Pld94)
        (cdddr . g$5594$Pld94)
        (cddar . g$5593$Pld94)
        (cdadr . g$5592$Pld94)
        (cdaar . g$5591$Pld94)
        (caddr . g$5590$Pld94)
        (cadar . g$5589$Pld94)
        (caadr . g$5588$Pld94)
        (caaar . g$5587$Pld94)
        (cddr . g$5586$Pld94)
        (cdar . g$5585$Pld94)
        (cadr . g$5584$Pld94)
        (caar . g$5583$Pld94)
        (cdr . g$11294$Pld94)
        (car . g$11293$Pld94)
        (boolean? . g$11292$Pld94)
        (boolean=? . g$11291$Pld94)
        (atan . g$11290$Pld94)
        (assertion-violation . g$11289$Pld94)
        (asin . g$11288$Pld94)
        (apply . g$11287$Pld94)
        (append . g$11286$Pld94)
        (angle . g$11285$Pld94)
        (acos . g$11284$Pld94)
        (abs . g$11283$Pld94)
        (/ . g$11282$Pld94)
        (* . g$11281$Pld94)
        (- . g$11280$Pld94)
        (+ . g$11279$Pld94)
        (>= . g$11278$Pld94)
        (> . g$11277$Pld94)
        (= . g$11276$Pld94)
        (<= . g$11275$Pld94)
        (< . g$11274$Pld94)
        (&no-nans . g$11249$Pld94)
        (&no-infinities . g$11248$Pld94)
        (&i/o-encoding . g$11247$Pld94)
        (&i/o-decoding . g$11246$Pld94)
        (&i/o-port . g$11245$Pld94)
        (&i/o-file-does-not-exist . g$11244$Pld94)
        (&i/o-file-already-exists . g$11243$Pld94)
        (&i/o-file-is-read-only . g$11242$Pld94)
        (&i/o-file-protection . g$11241$Pld94)
        (&i/o-filename . g$11240$Pld94)
        (&i/o-invalid-position . g$11239$Pld94)
        (&i/o-write . g$11238$Pld94)
        (&i/o-read . g$11237$Pld94)
        (&i/o . g$11236$Pld94)
        (&non-continuable . g$11235$Pld94)
        (&undefined . g$11234$Pld94)
        (&syntax . g$11233$Pld94)
        (&lexical . g$11232$Pld94)
        (&implementation-restriction . g$11231$Pld94)
        (&who . g$11229$Pld94)
        (&irritants . g$11228$Pld94)
        (&assertion . g$11227$Pld94)
        (&violation . g$11226$Pld94)
        (&error . g$11225$Pld94)
        (&serious . g$11224$Pld94)
        (&warning . g$11223$Pld94)
        (&message . g$11222$Pld94)
        (&condition . g$11221$Pld94)
        (define-condition-type . g$11220$Pld94)
        (define-enumeration . g$11219$Pld94)
        (define-record-type . g$11218$Pld94)
        (parent-rtd . g$11217$Pld94)
        (nongenerative . g$11216$Pld94)
        (opaque . g$11215$Pld94)
        (sealed . g$11214$Pld94)
        (protocol . g$11213$Pld94)
        (parent . g$11212$Pld94)
        (immutable . g$11211$Pld94)
        (mutable . g$11210$Pld94)
        (fields . g$11209$Pld94)
        (error-handling-mode . g$11208$Pld94)
        (file-options . g$11207$Pld94)
        (buffer-mode . g$11206$Pld94)
        (eol-style . g$11205$Pld94)
        (guard . g$11204$Pld94)
        (unsyntax-splicing . g$11198$Pld94)
        (unsyntax . g$11197$Pld94)
        (unquote-splicing . g$11196$Pld94)
        (unquote . g$11195$Pld94)
        (_ . g$11194$Pld94)
        (else . g$11193$Pld94)
        (=> . g$11192$Pld94)
        (... . g$11191$Pld94)
        (assert . g$11190$Pld94)
        (endianness . g$11189$Pld94)
        (or . g$11186$Pld94)
        (and . g$11185$Pld94)
        (do . g$11184$Pld94)
        (cond . g$11183$Pld94)
        (let* . g$11182$Pld94)
        (let . g$11181$Pld94)
        (identifier-syntax . g$11180$Pld94)
        (with-syntax . g$11179$Pld94)
        (quasisyntax . g$11178$Pld94)
        (quasiquote . g$11177$Pld94)
        (syntax-rules . g$11176$Pld94)
        (let-values . g$11172$Pld94)
        (let*-values . g$11171$Pld94)
        (record-constructor-descriptor . g$11170$Pld94)
        (record-type-descriptor . g$11169$Pld94)
        (case . g$11167$Pld94)
        (unless . g$11165$Pld94)
        (when . g$11164$Pld94)
        (if . g$11163$Pld94)
        (letrec* . g$11162$Pld94)
        (letrec . g$11161$Pld94)
        (case-lambda . g$11159$Pld94)
        (lambda . g$11158$Pld94)
        (syntax . g$11157$Pld94)
        (syntax-case . g$11156$Pld94)
        (quote . g$11155$Pld94)
        (letrec-syntax . g$11153$Pld94)
        (let-syntax . g$11152$Pld94)
        (set! . g$11151$Pld94)
        (import . g$11150$Pld94)
        (library . g$11149$Pld94)
        (begin . g$11148$Pld94)
        (define-syntax . g$11146$Pld94)
        (define . g$11145$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11812$Pld94
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8209$Pld94)
        (scheme-report-environment . g$8187$Pld94)
        (quotient . g$6488$Pld94)
        (null-environment . g$8186$Pld94)
        (remainder . g$6489$Pld94)
        (modulo . g$6490$Pld94)
        (inexact->exact . g$11563$Pld94)
        (force . g$11562$Pld94)
        (exact->inexact . g$11561$Pld94)
        (delay . g$11188$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11813$Pld94
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11184$Pld94)
        (unless . g$11165$Pld94)
        (when . g$11164$Pld94)
        (case-lambda . g$11159$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11814$Pld94
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8189$Pld94) (environment . g$8185$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11815$Pld94
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11556$Pld94) (set-car! . g$11555$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11816$Pld94
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11558$Pld94) (string-set! . g$11557$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11817$Pld94
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11560$Pld94) (command-line . g$11559$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11818$Pld94
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$7811$Pld94)
        (identifier? . g$8204$Pld94)
        (generate-temporaries . g$8196$Pld94)
        (free-identifier=? . g$8197$Pld94)
        (syntax->datum . g$8206$Pld94)
        (datum->syntax . g$8205$Pld94)
        (bound-identifier=? . g$8198$Pld94)
        (syntax-violation . g$8203$Pld94)
        (unsyntax-splicing . g$11198$Pld94)
        (unsyntax . g$11197$Pld94)
        (_ . g$11194$Pld94)
        (... . g$11191$Pld94)
        (with-syntax . g$11179$Pld94)
        (quasisyntax . g$11178$Pld94)
        (syntax . g$11157$Pld94)
        (syntax-case . g$11156$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11819$Pld94
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5994$Pld94)
        (file-exists? . g$5993$Pld94)
        (make-i/o-write-error . g$6749$Pld94)
        (make-i/o-read-error . g$6735$Pld94)
        (make-i/o-port-error . g$6854$Pld94)
        (make-i/o-invalid-position-error . g$6764$Pld94)
        (make-i/o-filename-error . g$6781$Pld94)
        (make-i/o-file-protection-error . g$6797$Pld94)
        (make-i/o-file-is-read-only-error . g$6811$Pld94)
        (make-i/o-file-does-not-exist-error . g$6839$Pld94)
        (make-i/o-file-already-exists-error . g$6825$Pld94)
        (make-i/o-error . g$6721$Pld94)
        (i/o-write-error? . g$6750$Pld94)
        (i/o-read-error? . g$6736$Pld94)
        (i/o-port-error? . g$6856$Pld94)
        (i/o-invalid-position-error? . g$6766$Pld94)
        (i/o-filename-error? . g$6783$Pld94)
        (i/o-file-protection-error? . g$6798$Pld94)
        (i/o-file-is-read-only-error? . g$6812$Pld94)
        (i/o-file-does-not-exist-error? . g$6840$Pld94)
        (i/o-file-already-exists-error? . g$6826$Pld94)
        (i/o-error? . g$6722$Pld94)
        (i/o-error-port . g$6857$Pld94)
        (i/o-error-filename . g$6784$Pld94)
        (&i/o-port . g$11245$Pld94)
        (&i/o-file-does-not-exist . g$11244$Pld94)
        (&i/o-file-already-exists . g$11243$Pld94)
        (&i/o-file-is-read-only . g$11242$Pld94)
        (&i/o-file-protection . g$11241$Pld94)
        (&i/o-filename . g$11240$Pld94)
        (&i/o-invalid-position . g$11239$Pld94)
        (&i/o-write . g$11238$Pld94)
        (&i/o-read . g$11237$Pld94)
        (&i/o . g$11236$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11820$Pld94
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$11661$Pld94)
        (vector-sort . g$11660$Pld94)
        (list-sort . g$6501$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11821$Pld94
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$11406$Pld94)
        (vector? . g$11405$Pld94)
        (vector-set! . g$11404$Pld94)
        (vector-ref . g$11403$Pld94)
        (vector-map . g$11402$Pld94)
        (vector-length . g$11401$Pld94)
        (vector-for-each . g$11400$Pld94)
        (vector-fill! . g$11399$Pld94)
        (vector->list . g$11398$Pld94)
        (vector . g$11397$Pld94)
        (values . g$11396$Pld94)
        (truncate . g$11395$Pld94)
        (tan . g$11394$Pld94)
        (symbol? . g$11393$Pld94)
        (symbol=? . g$11392$Pld94)
        (symbol->string . g$11391$Pld94)
        (substring . g$11390$Pld94)
        (string? . g$11389$Pld94)
        (string>? . g$11388$Pld94)
        (string>=? . g$11387$Pld94)
        (string=? . g$11386$Pld94)
        (string<? . g$11385$Pld94)
        (string<=? . g$11384$Pld94)
        (string-ref . g$11383$Pld94)
        (string-length . g$11382$Pld94)
        (string-for-each . g$11381$Pld94)
        (string-copy . g$11380$Pld94)
        (string-append . g$11379$Pld94)
        (string->symbol . g$11378$Pld94)
        (string->number . g$11377$Pld94)
        (string->list . g$11376$Pld94)
        (string . g$11375$Pld94)
        (sqrt . g$11374$Pld94)
        (sin . g$11373$Pld94)
        (round . g$11372$Pld94)
        (reverse . g$11371$Pld94)
        (real? . g$11370$Pld94)
        (real-valued? . g$11369$Pld94)
        (real-part . g$11368$Pld94)
        (rationalize . g$5611$Pld94)
        (rational? . g$11367$Pld94)
        (rational-valued? . g$11366$Pld94)
        (procedure? . g$11365$Pld94)
        (positive? . g$11364$Pld94)
        (pair? . g$11363$Pld94)
        (odd? . g$11362$Pld94)
        (numerator . g$11361$Pld94)
        (number? . g$11360$Pld94)
        (number->string . g$11359$Pld94)
        (null? . g$11358$Pld94)
        (not . g$11357$Pld94)
        (negative? . g$11356$Pld94)
        (nan? . g$11355$Pld94)
        (min . g$11354$Pld94)
        (max . g$11353$Pld94)
        (map . g$11352$Pld94)
        (make-vector . g$11351$Pld94)
        (make-string . g$11350$Pld94)
        (make-rectangular . g$11349$Pld94)
        (make-polar . g$11348$Pld94)
        (magnitude . g$11347$Pld94)
        (log . g$11346$Pld94)
        (list? . g$11345$Pld94)
        (list-tail . g$11344$Pld94)
        (list-ref . g$11343$Pld94)
        (list->vector . g$11342$Pld94)
        (list->string . g$11341$Pld94)
        (list . g$11340$Pld94)
        (length . g$11339$Pld94)
        (lcm . g$11338$Pld94)
        (integer? . g$11337$Pld94)
        (integer-valued? . g$11336$Pld94)
        (integer->char . g$11335$Pld94)
        (infinite? . g$11334$Pld94)
        (inexact? . g$11333$Pld94)
        (inexact . g$11332$Pld94)
        (imag-part . g$11331$Pld94)
        (gcd . g$11330$Pld94)
        (for-each . g$11329$Pld94)
        (floor . g$11328$Pld94)
        (finite? . g$11327$Pld94)
        (expt . g$11326$Pld94)
        (exp . g$11325$Pld94)
        (exact? . g$11324$Pld94)
        (exact-integer-sqrt . g$11323$Pld94)
        (exact . g$11322$Pld94)
        (even? . g$11321$Pld94)
        (error . g$11320$Pld94)
        (eqv? . g$11319$Pld94)
        (equal? . g$11318$Pld94)
        (eq? . g$11317$Pld94)
        (dynamic-wind . g$11316$Pld94)
        (div0-and-mod0 . g$11315$Pld94)
        (mod0 . g$11314$Pld94)
        (div0 . g$11313$Pld94)
        (div-and-mod . g$11312$Pld94)
        (mod . g$11311$Pld94)
        (div . g$11310$Pld94)
        (denominator . g$11309$Pld94)
        (cos . g$11308$Pld94)
        (cons . g$11307$Pld94)
        (complex? . g$11306$Pld94)
        (char? . g$11305$Pld94)
        (char>? . g$11304$Pld94)
        (char>=? . g$11303$Pld94)
        (char=? . g$11302$Pld94)
        (char<? . g$11301$Pld94)
        (char<=? . g$11300$Pld94)
        (char->integer . g$11299$Pld94)
        (ceiling . g$11298$Pld94)
        (call-with-values . g$11297$Pld94)
        (call/cc . g$11296$Pld94)
        (call-with-current-continuation . g$11295$Pld94)
        (cddddr . g$5610$Pld94)
        (cdddar . g$5609$Pld94)
        (cddadr . g$5608$Pld94)
        (cddaar . g$5607$Pld94)
        (cdaddr . g$5606$Pld94)
        (cdadar . g$5605$Pld94)
        (cdaadr . g$5604$Pld94)
        (cdaaar . g$5603$Pld94)
        (cadddr . g$5602$Pld94)
        (caddar . g$5601$Pld94)
        (cadadr . g$5600$Pld94)
        (cadaar . g$5599$Pld94)
        (caaddr . g$5598$Pld94)
        (caadar . g$5597$Pld94)
        (caaadr . g$5596$Pld94)
        (caaaar . g$5595$Pld94)
        (cdddr . g$5594$Pld94)
        (cddar . g$5593$Pld94)
        (cdadr . g$5592$Pld94)
        (cdaar . g$5591$Pld94)
        (caddr . g$5590$Pld94)
        (cadar . g$5589$Pld94)
        (caadr . g$5588$Pld94)
        (caaar . g$5587$Pld94)
        (cddr . g$5586$Pld94)
        (cdar . g$5585$Pld94)
        (cadr . g$5584$Pld94)
        (caar . g$5583$Pld94)
        (cdr . g$11294$Pld94)
        (car . g$11293$Pld94)
        (boolean? . g$11292$Pld94)
        (boolean=? . g$11291$Pld94)
        (atan . g$11290$Pld94)
        (assertion-violation . g$11289$Pld94)
        (asin . g$11288$Pld94)
        (apply . g$11287$Pld94)
        (append . g$11286$Pld94)
        (angle . g$11285$Pld94)
        (acos . g$11284$Pld94)
        (abs . g$11283$Pld94)
        (/ . g$11282$Pld94)
        (* . g$11281$Pld94)
        (- . g$11280$Pld94)
        (+ . g$11279$Pld94)
        (>= . g$11278$Pld94)
        (> . g$11277$Pld94)
        (= . g$11276$Pld94)
        (<= . g$11275$Pld94)
        (< . g$11274$Pld94)
        (unquote-splicing . g$11196$Pld94)
        (unquote . g$11195$Pld94)
        (_ . g$11194$Pld94)
        (else . g$11193$Pld94)
        (=> . g$11192$Pld94)
        (... . g$11191$Pld94)
        (assert . g$11190$Pld94)
        (or . g$11186$Pld94)
        (and . g$11185$Pld94)
        (cond . g$11183$Pld94)
        (let* . g$11182$Pld94)
        (let . g$11181$Pld94)
        (identifier-syntax . g$11180$Pld94)
        (quasiquote . g$11177$Pld94)
        (syntax-rules . g$11176$Pld94)
        (let-values . g$11172$Pld94)
        (let*-values . g$11171$Pld94)
        (case . g$11167$Pld94)
        (if . g$11163$Pld94)
        (letrec* . g$11162$Pld94)
        (letrec . g$11161$Pld94)
        (lambda . g$11158$Pld94)
        (quote . g$11155$Pld94)
        (letrec-syntax . g$11153$Pld94)
        (let-syntax . g$11152$Pld94)
        (set! . g$11151$Pld94)
        (begin . g$11148$Pld94)
        (define-syntax . g$11146$Pld94)
        (define . g$11145$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11822$Pld94
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6074$Pld94)
        (remv . g$6075$Pld94)
        (remp . g$6060$Pld94)
        (remq . g$6076$Pld94)
        (partition . g$6059$Pld94)
        (memv . g$11554$Pld94)
        (memq . g$11553$Pld94)
        (memp . g$6066$Pld94)
        (member . g$6065$Pld94)
        (exists . g$6070$Pld94)
        (for-all . g$6069$Pld94)
        (fold-right . g$6073$Pld94)
        (fold-left . g$6072$Pld94)
        (find . g$6058$Pld94)
        (filter . g$6061$Pld94)
        (cons* . g$6071$Pld94)
        (assv . g$6062$Pld94)
        (assq . g$11552$Pld94)
        (assp . g$6064$Pld94)
        (assoc . g$6063$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11823$Pld94
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$11647$Pld94)
        (call-with-input-file . g$11646$Pld94)
        (write-char . g$11645$Pld94)
        (write . g$11644$Pld94)
        (with-output-to-file . g$11643$Pld94)
        (with-input-from-file . g$11642$Pld94)
        (read-char . g$11641$Pld94)
        (read . g$11640$Pld94)
        (peek-char . g$11639$Pld94)
        (open-output-file . g$11638$Pld94)
        (open-input-file . g$11637$Pld94)
        (newline . g$11636$Pld94)
        (display . g$11635$Pld94)
        (close-output-port . g$11634$Pld94)
        (close-input-port . g$11633$Pld94)
        (eof-object? . g$11632$Pld94)
        (eof-object . g$11631$Pld94)
        (current-error-port . g$11630$Pld94)
        (current-output-port . g$11629$Pld94)
        (current-input-port . g$11628$Pld94)
        (output-port? . g$11627$Pld94)
        (input-port? . g$11626$Pld94)
        (make-i/o-write-error . g$6749$Pld94)
        (make-i/o-read-error . g$6735$Pld94)
        (make-i/o-port-error . g$6854$Pld94)
        (make-i/o-invalid-position-error . g$6764$Pld94)
        (make-i/o-filename-error . g$6781$Pld94)
        (make-i/o-file-protection-error . g$6797$Pld94)
        (make-i/o-file-is-read-only-error . g$6811$Pld94)
        (make-i/o-file-does-not-exist-error . g$6839$Pld94)
        (make-i/o-file-already-exists-error . g$6825$Pld94)
        (make-i/o-error . g$6721$Pld94)
        (i/o-write-error? . g$6750$Pld94)
        (i/o-read-error? . g$6736$Pld94)
        (i/o-port-error? . g$6856$Pld94)
        (i/o-invalid-position-error? . g$6766$Pld94)
        (i/o-filename-error? . g$6783$Pld94)
        (i/o-file-protection-error? . g$6798$Pld94)
        (i/o-file-is-read-only-error? . g$6812$Pld94)
        (i/o-file-does-not-exist-error? . g$6840$Pld94)
        (i/o-file-already-exists-error? . g$6826$Pld94)
        (i/o-error? . g$6722$Pld94)
        (i/o-error-port . g$6857$Pld94)
        (i/o-error-filename . g$6784$Pld94)
        (&i/o-port . g$11245$Pld94)
        (&i/o-file-does-not-exist . g$11244$Pld94)
        (&i/o-file-already-exists . g$11243$Pld94)
        (&i/o-file-is-read-only . g$11242$Pld94)
        (&i/o-file-protection . g$11241$Pld94)
        (&i/o-filename . g$11240$Pld94)
        (&i/o-invalid-position . g$11239$Pld94)
        (&i/o-write . g$11238$Pld94)
        (&i/o-read . g$11237$Pld94)
        (&i/o . g$11236$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11824$Pld94
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11585$Pld94)
        (utf32->string . g$11530$Pld94)
        (utf16->string . g$11529$Pld94)
        (utf8->string . g$11528$Pld94)
        (uint-list->bytevector . g$11527$Pld94)
        (u8-list->bytevector . g$11526$Pld94)
        (string->utf8 . g$11525$Pld94)
        (string->utf32 . g$11524$Pld94)
        (string->utf16 . g$11523$Pld94)
        (sint-list->bytevector . g$11522$Pld94)
        (native-endianness . g$6150$Pld94)
        (bytevector? . g$11521$Pld94)
        (bytevector=? . g$11520$Pld94)
        (bytevector-uint-set! . g$11519$Pld94)
        (bytevector-uint-ref . g$11518$Pld94)
        (bytevector-u8-set! . g$11517$Pld94)
        (bytevector-u8-ref . g$11516$Pld94)
        (bytevector-u64-set! . g$6171$Pld94)
        (bytevector-u64-ref . g$6167$Pld94)
        (bytevector-u64-native-set! . g$6173$Pld94)
        (bytevector-u64-native-ref . g$6169$Pld94)
        (bytevector-u32-set! . g$6163$Pld94)
        (bytevector-u32-ref . g$6159$Pld94)
        (bytevector-u32-native-set! . g$6165$Pld94)
        (bytevector-u32-native-ref . g$6161$Pld94)
        (bytevector-u16-set! . g$6155$Pld94)
        (bytevector-u16-ref . g$6151$Pld94)
        (bytevector-u16-native-set! . g$6157$Pld94)
        (bytevector-u16-native-ref . g$6153$Pld94)
        (bytevector-sint-set! . g$11515$Pld94)
        (bytevector-sint-ref . g$11514$Pld94)
        (bytevector-s8-set! . g$11513$Pld94)
        (bytevector-s8-ref . g$11512$Pld94)
        (bytevector-s64-set! . g$6172$Pld94)
        (bytevector-s64-ref . g$6168$Pld94)
        (bytevector-s64-native-set! . g$6174$Pld94)
        (bytevector-s64-native-ref . g$6170$Pld94)
        (bytevector-s32-set! . g$6164$Pld94)
        (bytevector-s32-ref . g$6160$Pld94)
        (bytevector-s32-native-set! . g$6166$Pld94)
        (bytevector-s32-native-ref . g$6162$Pld94)
        (bytevector-s16-set! . g$6156$Pld94)
        (bytevector-s16-ref . g$6152$Pld94)
        (bytevector-s16-native-set! . g$6158$Pld94)
        (bytevector-s16-native-ref . g$6154$Pld94)
        (bytevector-length . g$11511$Pld94)
        (bytevector-ieee-single-set! . g$11510$Pld94)
        (bytevector-ieee-single-ref . g$11509$Pld94)
        (bytevector-ieee-single-native-set! . g$6177$Pld94)
        (bytevector-ieee-single-native-ref . g$6175$Pld94)
        (bytevector-ieee-double-set! . g$11508$Pld94)
        (bytevector-ieee-double-ref . g$11507$Pld94)
        (bytevector-ieee-double-native-set! . g$6178$Pld94)
        (bytevector-ieee-double-native-ref . g$6176$Pld94)
        (bytevector-fill! . g$11506$Pld94)
        (bytevector-copy! . g$11505$Pld94)
        (bytevector-copy . g$11504$Pld94)
        (bytevector->uint-list . g$11503$Pld94)
        (bytevector->u8-list . g$11502$Pld94)
        (bytevector->sint-list . g$11501$Pld94)
        (endianness . g$11189$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11825$Pld94
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11707$Pld94)
        (string-titlecase . g$11706$Pld94)
        (string-normalize-nfkd . g$11705$Pld94)
        (string-normalize-nfkc . g$11704$Pld94)
        (string-normalize-nfd . g$11703$Pld94)
        (string-normalize-nfc . g$11702$Pld94)
        (string-foldcase . g$11701$Pld94)
        (string-downcase . g$11700$Pld94)
        (string-ci>? . g$11699$Pld94)
        (string-ci>=? . g$11698$Pld94)
        (string-ci=? . g$11697$Pld94)
        (string-ci<? . g$11696$Pld94)
        (string-ci<=? . g$11695$Pld94)
        (char-whitespace? . g$11694$Pld94)
        (char-upper-case? . g$11693$Pld94)
        (char-title-case? . g$11692$Pld94)
        (char-numeric? . g$11691$Pld94)
        (char-lower-case? . g$11690$Pld94)
        (char-general-category . g$11689$Pld94)
        (char-upcase . g$11688$Pld94)
        (char-titlecase . g$11687$Pld94)
        (char-foldcase . g$11686$Pld94)
        (char-downcase . g$11685$Pld94)
        (char-ci>? . g$11684$Pld94)
        (char-ci>=? . g$11683$Pld94)
        (char-ci=? . g$11682$Pld94)
        (char-ci<? . g$11681$Pld94)
        (char-ci<=? . g$11680$Pld94)
        (char-alphabetic? . g$11679$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11826$Pld94
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11551$Pld94)
        (raise-continuable . g$11550$Pld94)
        (raise . g$11549$Pld94)
        (guard . g$11204$Pld94)
        (else . g$11193$Pld94)
        (=> . g$11192$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11827$Pld94
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6586$Pld94)
        (bitwise-reverse-bit-field . g$6587$Pld94)
        (bitwise-length . g$11416$Pld94)
        (bitwise-if . g$6580$Pld94)
        (bitwise-first-bit-set . g$11415$Pld94)
        (bitwise-copy-bit-field . g$6583$Pld94)
        (bitwise-copy-bit . g$6581$Pld94)
        (bitwise-bit-set? . g$11414$Pld94)
        (bitwise-bit-field . g$11413$Pld94)
        (bitwise-bit-count . g$11412$Pld94)
        (bitwise-xor . g$11411$Pld94)
        (bitwise-ior . g$11410$Pld94)
        (bitwise-and . g$11409$Pld94)
        (bitwise-not . g$11408$Pld94)
        (bitwise-arithmetic-shift-right . g$6585$Pld94)
        (bitwise-arithmetic-shift-left . g$6584$Pld94)
        (bitwise-arithmetic-shift . g$11407$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11828$Pld94
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$11454$Pld94)
        (fxxor . g$11453$Pld94)
        (fxrotate-bit-field . g$6638$Pld94)
        (fxreverse-bit-field . g$11452$Pld94)
        (fxpositive? . g$11451$Pld94)
        (fxodd? . g$11450$Pld94)
        (fxnot . g$11449$Pld94)
        (fxnegative? . g$11448$Pld94)
        (fxmod0 . g$11447$Pld94)
        (fxmod . g$11446$Pld94)
        (fxmin . g$11445$Pld94)
        (fxmax . g$11444$Pld94)
        (fxlength . g$11443$Pld94)
        (fxior . g$11442$Pld94)
        (fxif . g$6632$Pld94)
        (fxfirst-bit-set . g$11441$Pld94)
        (fxeven? . g$11440$Pld94)
        (fxdiv0-and-mod0 . g$11439$Pld94)
        (fxdiv0 . g$11438$Pld94)
        (fxdiv-and-mod . g$11437$Pld94)
        (fxdiv . g$11436$Pld94)
        (fxcopy-bit-field . g$6635$Pld94)
        (fxcopy-bit . g$6633$Pld94)
        (fxbit-set? . g$11435$Pld94)
        (fxbit-field . g$6634$Pld94)
        (fxbit-count . g$11434$Pld94)
        (fxarithmetic-shift-right . g$6637$Pld94)
        (fxarithmetic-shift-left . g$6636$Pld94)
        (fxarithmetic-shift . g$11433$Pld94)
        (fxand . g$11432$Pld94)
        (fx>? . g$11431$Pld94)
        (fx>=? . g$11430$Pld94)
        (fx=? . g$11429$Pld94)
        (fx<? . g$11428$Pld94)
        (fx<=? . g$11427$Pld94)
        (fx-/carry . g$11426$Pld94)
        (fx- . g$11425$Pld94)
        (fx+/carry . g$11424$Pld94)
        (fx+ . g$11423$Pld94)
        (fx*/carry . g$11422$Pld94)
        (fx* . g$11421$Pld94)
        (greatest-fixnum . g$11420$Pld94)
        (least-fixnum . g$11419$Pld94)
        (fixnum-width . g$11418$Pld94)
        (fixnum? . g$11417$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11829$Pld94
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6707$Pld94)
        (no-infinities-violation? . g$6693$Pld94)
        (make-no-nans-violation . g$6706$Pld94)
        (make-no-infinities-violation . g$6692$Pld94)
        (real->flonum . g$11500$Pld94)
        (flzero? . g$11499$Pld94)
        (fltruncate . g$11498$Pld94)
        (fltan . g$11497$Pld94)
        (flsqrt . g$11496$Pld94)
        (flsin . g$11495$Pld94)
        (flround . g$11494$Pld94)
        (flpositive? . g$11493$Pld94)
        (flonum? . g$11492$Pld94)
        (flodd? . g$11491$Pld94)
        (flnumerator . g$11490$Pld94)
        (flnegative? . g$11489$Pld94)
        (flnan? . g$11488$Pld94)
        (flmod0 . g$11487$Pld94)
        (flmod . g$11486$Pld94)
        (flmin . g$11485$Pld94)
        (flmax . g$11484$Pld94)
        (fllog . g$11483$Pld94)
        (flinteger? . g$11482$Pld94)
        (flinfinite? . g$11481$Pld94)
        (flfloor . g$11480$Pld94)
        (flfinite? . g$11479$Pld94)
        (flexpt . g$11478$Pld94)
        (flexp . g$11477$Pld94)
        (fleven? . g$11476$Pld94)
        (fldiv0-and-mod0 . g$11475$Pld94)
        (fldiv0 . g$11474$Pld94)
        (fldiv-and-mod . g$11473$Pld94)
        (fldiv . g$11472$Pld94)
        (fldenominator . g$11471$Pld94)
        (flcos . g$11470$Pld94)
        (flceiling . g$11469$Pld94)
        (flatan . g$11468$Pld94)
        (flasin . g$11467$Pld94)
        (flacos . g$11466$Pld94)
        (flabs . g$11465$Pld94)
        (fl>? . g$11464$Pld94)
        (fl>=? . g$11463$Pld94)
        (fl=? . g$11462$Pld94)
        (fl<? . g$11461$Pld94)
        (fl<=? . g$11460$Pld94)
        (fl/ . g$11459$Pld94)
        (fl- . g$11458$Pld94)
        (fl+ . g$11457$Pld94)
        (fl* . g$11456$Pld94)
        (fixnum->flonum . g$11455$Pld94)
        (&no-nans . g$11249$Pld94)
        (&no-infinities . g$11248$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11830$Pld94
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$11659$Pld94)
        (string-ci-hash . g$11658$Pld94)
        (string-hash . g$11657$Pld94)
        (equal-hash . g$11656$Pld94)
        (hashtable-equivalence-function . g$11655$Pld94)
        (make-hashtable . g$11654$Pld94)
        (hashtable-hash-function . g$11653$Pld94)
        (make-eqv-hashtable . g$5961$Pld94)
        (make-eq-hashtable . g$5960$Pld94)
        (hashtable? . g$11652$Pld94)
        (hashtable-update! . g$5967$Pld94)
        (hashtable-size . g$5962$Pld94)
        (hashtable-set! . g$5964$Pld94)
        (hashtable-ref . g$5963$Pld94)
        (hashtable-mutable? . g$11651$Pld94)
        (hashtable-keys . g$11650$Pld94)
        (hashtable-entries . g$11649$Pld94)
        (hashtable-delete! . g$5965$Pld94)
        (hashtable-copy . g$11648$Pld94)
        (hashtable-contains? . g$5966$Pld94)
        (hashtable-clear! . g$5968$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11831$Pld94
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11632$Pld94)
        (eof-object . g$11631$Pld94)
        (current-error-port . g$11630$Pld94)
        (current-output-port . g$11629$Pld94)
        (current-input-port . g$11628$Pld94)
        (output-port? . g$11627$Pld94)
        (input-port? . g$11626$Pld94)
        (utf-8-codec . g$11625$Pld94)
        (utf-16-codec . g$11624$Pld94)
        (transcoder-error-handling-mode . g$11623$Pld94)
        (transcoder-eol-style . g$11622$Pld94)
        (transcoder-codec . g$11621$Pld94)
        (transcoded-port . g$11620$Pld94)
        (textual-port? . g$11619$Pld94)
        (string->bytevector . g$11618$Pld94)
        (standard-output-port . g$11617$Pld94)
        (standard-input-port . g$11616$Pld94)
        (standard-error-port . g$11615$Pld94)
        (set-port-position! . g$11614$Pld94)
        (put-u8 . g$11613$Pld94)
        (put-string . g$11612$Pld94)
        (put-datum . g$11611$Pld94)
        (put-char . g$11610$Pld94)
        (put-bytevector . g$11609$Pld94)
        (port? . g$11608$Pld94)
        (port-transcoder . g$11607$Pld94)
        (port-position . g$11606$Pld94)
        (port-has-set-port-position!? . g$11605$Pld94)
        (port-has-port-position? . g$11604$Pld94)
        (port-eof? . g$11603$Pld94)
        (output-port-buffer-mode . g$11602$Pld94)
        (open-string-output-port . g$6892$Pld94)
        (open-string-input-port . g$11601$Pld94)
        (open-file-output-port . g$11600$Pld94)
        (open-file-input/output-port . g$11599$Pld94)
        (open-file-input-port . g$11598$Pld94)
        (open-bytevector-output-port . g$11597$Pld94)
        (open-bytevector-input-port . g$11596$Pld94)
        (native-transcoder . g$11595$Pld94)
        (native-eol-style . g$11594$Pld94)
        (make-transcoder . g$11593$Pld94)
        (latin-1-codec . g$11592$Pld94)
        (make-i/o-write-error . g$6749$Pld94)
        (make-i/o-read-error . g$6735$Pld94)
        (make-i/o-port-error . g$6854$Pld94)
        (make-i/o-invalid-position-error . g$6764$Pld94)
        (make-i/o-filename-error . g$6781$Pld94)
        (make-i/o-file-protection-error . g$6797$Pld94)
        (make-i/o-file-is-read-only-error . g$6811$Pld94)
        (make-i/o-file-does-not-exist-error . g$6839$Pld94)
        (make-i/o-file-already-exists-error . g$6825$Pld94)
        (make-i/o-error . g$6721$Pld94)
        (make-i/o-encoding-error . g$6885$Pld94)
        (make-i/o-decoding-error . g$6870$Pld94)
        (make-custom-textual-output-port . g$11591$Pld94)
        (make-custom-textual-input/output-port . g$11590$Pld94)
        (make-custom-textual-input-port . g$11589$Pld94)
        (make-custom-binary-output-port . g$11588$Pld94)
        (make-custom-binary-input/output-port . g$11587$Pld94)
        (make-custom-binary-input-port . g$11586$Pld94)
        (lookahead-u8 . g$11584$Pld94)
        (lookahead-char . g$11583$Pld94)
        (i/o-write-error? . g$6750$Pld94)
        (i/o-read-error? . g$6736$Pld94)
        (i/o-port-error? . g$6856$Pld94)
        (i/o-invalid-position-error? . g$6766$Pld94)
        (i/o-filename-error? . g$6783$Pld94)
        (i/o-file-protection-error? . g$6798$Pld94)
        (i/o-file-is-read-only-error? . g$6812$Pld94)
        (i/o-file-does-not-exist-error? . g$6840$Pld94)
        (i/o-file-already-exists-error? . g$6826$Pld94)
        (i/o-error? . g$6722$Pld94)
        (i/o-error-port . g$6857$Pld94)
        (i/o-error-filename . g$6784$Pld94)
        (i/o-encoding-error? . g$6887$Pld94)
        (i/o-encoding-error-char . g$6888$Pld94)
        (i/o-decoding-error? . g$6871$Pld94)
        (get-u8 . g$11582$Pld94)
        (get-string-n! . g$11581$Pld94)
        (get-string-n . g$11580$Pld94)
        (get-string-all . g$11579$Pld94)
        (get-line . g$11578$Pld94)
        (get-datum . g$11577$Pld94)
        (get-char . g$11576$Pld94)
        (get-bytevector-some . g$11575$Pld94)
        (get-bytevector-n! . g$11574$Pld94)
        (get-bytevector-n . g$11573$Pld94)
        (get-bytevector-all . g$11572$Pld94)
        (flush-output-port . g$11571$Pld94)
        (close-port . g$11570$Pld94)
        (call-with-string-output-port . g$11569$Pld94)
        (call-with-port . g$11568$Pld94)
        (call-with-bytevector-output-port . g$11567$Pld94)
        (bytevector->string . g$11566$Pld94)
        (buffer-mode? . g$11565$Pld94)
        (binary-port? . g$11564$Pld94)
        (&i/o-encoding . g$11247$Pld94)
        (&i/o-decoding . g$11246$Pld94)
        (&i/o-port . g$11245$Pld94)
        (&i/o-file-does-not-exist . g$11244$Pld94)
        (&i/o-file-already-exists . g$11243$Pld94)
        (&i/o-file-is-read-only . g$11242$Pld94)
        (&i/o-file-protection . g$11241$Pld94)
        (&i/o-filename . g$11240$Pld94)
        (&i/o-invalid-position . g$11239$Pld94)
        (&i/o-write . g$11238$Pld94)
        (&i/o-read . g$11237$Pld94)
        (&i/o . g$11236$Pld94)
        (error-handling-mode . g$11208$Pld94)
        (file-options . g$11207$Pld94)
        (buffer-mode . g$11206$Pld94)
        (eol-style . g$11205$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11832$Pld94
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$11548$Pld94)
        (enum-set=? . g$11547$Pld94)
        (enum-set-universe . g$11546$Pld94)
        (enum-set-union . g$11545$Pld94)
        (enum-set-subset? . g$11544$Pld94)
        (enum-set-projection . g$11543$Pld94)
        (enum-set-member? . g$11542$Pld94)
        (enum-set-intersection . g$11541$Pld94)
        (enum-set-indexer . g$11540$Pld94)
        (enum-set-difference . g$11539$Pld94)
        (enum-set-constructor . g$11538$Pld94)
        (enum-set-complement . g$11537$Pld94)
        (enum-set->list . g$11536$Pld94)
        (define-enumeration . g$11219$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11833$Pld94
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6399$Pld94)
        (warning? . g$6310$Pld94)
        (violation? . g$6352$Pld94)
        (undefined-violation? . g$6476$Pld94)
        (syntax-violation? . g$6460$Pld94)
        (syntax-violation-subform . g$6462$Pld94)
        (syntax-violation-form . g$6461$Pld94)
        (syntax-violation . g$8203$Pld94)
        (simple-conditions . g$11535$Pld94)
        (serious-condition? . g$6324$Pld94)
        (non-continuable-violation? . g$6414$Pld94)
        (message-condition? . g$6295$Pld94)
        (make-who-condition . g$6397$Pld94)
        (make-warning . g$6309$Pld94)
        (make-violation . g$6351$Pld94)
        (make-undefined-violation . g$6475$Pld94)
        (make-syntax-violation . g$6457$Pld94)
        (make-serious-condition . g$6323$Pld94)
        (make-non-continuable-violation . g$6413$Pld94)
        (make-message-condition . g$6293$Pld94)
        (make-lexical-violation . g$6441$Pld94)
        (make-irritants-condition . g$6380$Pld94)
        (make-implementation-restriction-violation . g$6427$Pld94)
        (make-error . g$6337$Pld94)
        (make-assertion-violation . g$6365$Pld94)
        (lexical-violation? . g$6442$Pld94)
        (irritants-condition? . g$6382$Pld94)
        (implementation-restriction-violation? . g$6428$Pld94)
        (error? . g$6338$Pld94)
        (condition-who . g$6400$Pld94)
        (condition-predicate . g$11534$Pld94)
        (condition-message . g$6296$Pld94)
        (condition-irritants . g$6383$Pld94)
        (condition-accessor . g$11533$Pld94)
        (condition . g$11532$Pld94)
        (assertion-violation? . g$6366$Pld94)
        (condition? . g$11531$Pld94)
        (&non-continuable . g$11235$Pld94)
        (&undefined . g$11234$Pld94)
        (&syntax . g$11233$Pld94)
        (&lexical . g$11232$Pld94)
        (&implementation-restriction . g$11231$Pld94)
        (&who . g$11229$Pld94)
        (&irritants . g$11228$Pld94)
        (&assertion . g$11227$Pld94)
        (&violation . g$11226$Pld94)
        (&error . g$11225$Pld94)
        (&serious . g$11224$Pld94)
        (&warning . g$11223$Pld94)
        (&message . g$11222$Pld94)
        (&condition . g$11221$Pld94)
        (define-condition-type . g$11220$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11834$Pld94
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$11671$Pld94)
        (record-type-uid . g$11670$Pld94)
        (record-type-sealed? . g$11669$Pld94)
        (record-type-parent . g$11668$Pld94)
        (record-type-opaque? . g$11667$Pld94)
        (record-type-name . g$11666$Pld94)
        (record-type-generative? . g$11665$Pld94)
        (record-type-field-names . g$11664$Pld94)
        (record-rtd . g$11663$Pld94)
        (record-field-mutable? . g$11662$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11835$Pld94
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$11678$Pld94)
        (record-predicate . g$11677$Pld94)
        (record-mutator . g$11676$Pld94)
        (record-constructor . g$11675$Pld94)
        (record-accessor . g$11674$Pld94)
        (make-record-type-descriptor . g$11673$Pld94)
        (make-record-constructor-descriptor . g$11672$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11836$Pld94
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11218$Pld94)
        (parent-rtd . g$11217$Pld94)
        (nongenerative . g$11216$Pld94)
        (opaque . g$11215$Pld94)
        (sealed . g$11214$Pld94)
        (protocol . g$11213$Pld94)
        (parent . g$11212$Pld94)
        (immutable . g$11211$Pld94)
        (mutable . g$11210$Pld94)
        (fields . g$11209$Pld94)
        (record-constructor-descriptor . g$11170$Pld94)
        (record-type-descriptor . g$11169$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6734$Pld94
      'g$11837$Pld94
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8081$Pld94)
        (&no-nans-rcd . g$11801$Pld94)
        (&no-nans-rtd . g$11800$Pld94)
        (&no-infinities-rcd . g$11799$Pld94)
        (&no-infinities-rtd . g$11798$Pld94)
        (&i/o-encoding-rcd . g$11797$Pld94)
        (&i/o-encoding-rtd . g$11796$Pld94)
        (&i/o-decoding-rcd . g$11795$Pld94)
        (&i/o-decoding-rtd . g$11794$Pld94)
        (&i/o-port-rcd . g$11793$Pld94)
        (&i/o-port-rtd . g$11792$Pld94)
        (&i/o-file-does-not-exist-rcd . g$11791$Pld94)
        (&i/o-file-does-not-exist-rtd . g$11790$Pld94)
        (&i/o-file-already-exists-rcd . g$11789$Pld94)
        (&i/o-file-already-exists-rtd . g$11788$Pld94)
        (&i/o-fie-is-read-only-rcd . g$11787$Pld94)
        (&i/o-fie-is-read-only-rtd . g$11786$Pld94)
        (&i/o-file-protection-rcd . g$11785$Pld94)
        (&i/o-file-protection-rtd . g$11784$Pld94)
        (&i/o-filename-rcd . g$11783$Pld94)
        (&i/o-filename-rtd . g$11782$Pld94)
        (&i/o-invalid-position-rcd . g$11781$Pld94)
        (&i/o-invalid-position-rtd . g$11780$Pld94)
        (&i/o-write-rcd . g$11779$Pld94)
        (&i/o-write-rtd . g$11778$Pld94)
        (&i/o-read-rcd . g$11777$Pld94)
        (&i/o-read-rtd . g$11776$Pld94)
        (&i/o-rcd . g$11775$Pld94)
        (&i/o-rtd . g$11774$Pld94)
        (&undefined-rcd . g$11773$Pld94)
        (&undefined-rtd . g$11772$Pld94)
        (&syntax-rcd . g$11771$Pld94)
        (&syntax-rtd . g$11770$Pld94)
        (&lexical-rcd . g$11769$Pld94)
        (&lexical-rtd . g$11768$Pld94)
        (&implementation-restriction-rcd . g$11767$Pld94)
        (&implementation-restriction-rtd . g$11766$Pld94)
        (&non-continuable-rcd . g$11765$Pld94)
        (&non-continuable-rtd . g$11764$Pld94)
        (&who-rcd . g$11763$Pld94)
        (&who-rtd . g$11762$Pld94)
        (&irritants-rcd . g$11761$Pld94)
        (&irritants-rtd . g$11760$Pld94)
        (&assertion-rcd . g$11759$Pld94)
        (&assertion-rtd . g$11758$Pld94)
        (&violation-rcd . g$11757$Pld94)
        (&violation-rtd . g$11756$Pld94)
        (&error-rcd . g$11755$Pld94)
        (&error-rtd . g$11754$Pld94)
        (&serious-rcd . g$11753$Pld94)
        (&serious-rtd . g$11752$Pld94)
        (&warning-rcd . g$11751$Pld94)
        (&warning-rtd . g$11750$Pld94)
        (&message-rcd . g$11749$Pld94)
        (&message-rtd . g$11748$Pld94)
        (&condition-rcd . g$11747$Pld94)
        (&condition-rtd . g$11746$Pld94)
        (library-letrec* . g$11745$Pld94)
        (annotation-stripped . g$11744$Pld94)
        (annotation-source . g$11743$Pld94)
        (annotation-expression . g$11742$Pld94)
        (annotation? . g$11741$Pld94)
        (read-annotated . g$11740$Pld94)
        (tanh . g$11739$Pld94)
        (cosh . g$11738$Pld94)
        (sinh . g$11737$Pld94)
        (make-guid . g$11736$Pld94)
        (unspecified? . g$11735$Pld94)
        (make-trace . g$11734$Pld94)
        (make-list . g$11733$Pld94)
        (last-pair . g$11732$Pld94)
        (load-r5rs . g$11731$Pld94)
        (license . g$11730$Pld94)
        (stacktrace . g$11729$Pld94)
        (ironscheme-build . g$11123$Pld94)
        (define-clr-class-internal . g$11728$Pld94)
        (clr-field-set!-internal . g$11727$Pld94)
        (clr-field-get-internal . g$11726$Pld94)
        (clr-cast-internal . g$11725$Pld94)
        (clr-call-internal . g$11724$Pld94)
        (clr-new-internal . g$11723$Pld94)
        (clr-new-array-internal . g$11722$Pld94)
        (clr-is-internal . g$11721$Pld94)
        (clr-reference-internal . g$11720$Pld94)
        (clr-using-internal . g$11719$Pld94)
        (clr-clear-usings-internal . g$11718$Pld94)
        (syntax-error . g$8200$Pld94)
        (syntax-dispatch . g$8076$Pld94)
        (compile-core . g$11717$Pld94)
        (eval-core . g$11716$Pld94)
        (set-symbol-value! . g$11715$Pld94)
        (symbol-value . g$11714$Pld94)
        (ungensym . g$11713$Pld94)
        (gensym . g$11712$Pld94)
        (void . g$11711$Pld94)
        (load-serialized-library . g$11710$Pld94)
        (serialize-library . g$11709$Pld94)
        (compile-system-libraries . g$11125$Pld94)
        (compile->closure . g$11127$Pld94)
        (compile . g$11126$Pld94)
        (load . g$11122$Pld94)
        (interaction-environment . g$8209$Pld94)
        (char-ready? . g$11708$Pld94)
        (string-upcase . g$11707$Pld94)
        (string-titlecase . g$11706$Pld94)
        (string-normalize-nfkd . g$11705$Pld94)
        (string-normalize-nfkc . g$11704$Pld94)
        (string-normalize-nfd . g$11703$Pld94)
        (string-normalize-nfc . g$11702$Pld94)
        (string-foldcase . g$11701$Pld94)
        (string-downcase . g$11700$Pld94)
        (string-ci>? . g$11699$Pld94)
        (string-ci>=? . g$11698$Pld94)
        (string-ci=? . g$11697$Pld94)
        (string-ci<? . g$11696$Pld94)
        (string-ci<=? . g$11695$Pld94)
        (char-whitespace? . g$11694$Pld94)
        (char-upper-case? . g$11693$Pld94)
        (char-title-case? . g$11692$Pld94)
        (char-numeric? . g$11691$Pld94)
        (char-lower-case? . g$11690$Pld94)
        (char-general-category . g$11689$Pld94)
        (char-upcase . g$11688$Pld94)
        (char-titlecase . g$11687$Pld94)
        (char-foldcase . g$11686$Pld94)
        (char-downcase . g$11685$Pld94)
        (char-ci>? . g$11684$Pld94)
        (char-ci>=? . g$11683$Pld94)
        (char-ci=? . g$11682$Pld94)
        (char-ci<? . g$11681$Pld94)
        (char-ci<=? . g$11680$Pld94)
        (char-alphabetic? . g$11679$Pld94)
        (variable-transformer-procedure . g$7813$Pld94)
        (variable-transformer? . g$7812$Pld94)
        (make-variable-transformer . g$7811$Pld94)
        (identifier? . g$8204$Pld94)
        (generate-temporaries . g$8196$Pld94)
        (free-identifier=? . g$8197$Pld94)
        (syntax->datum . g$8206$Pld94)
        (datum->syntax . g$8205$Pld94)
        (bound-identifier=? . g$8198$Pld94)
        (record-type-descriptor? . g$11678$Pld94)
        (record-predicate . g$11677$Pld94)
        (record-mutator . g$11676$Pld94)
        (record-constructor . g$11675$Pld94)
        (record-accessor . g$11674$Pld94)
        (make-record-type-descriptor . g$11673$Pld94)
        (make-record-constructor-descriptor . g$11672$Pld94)
        (record? . g$11671$Pld94)
        (record-type-uid . g$11670$Pld94)
        (record-type-sealed? . g$11669$Pld94)
        (record-type-parent . g$11668$Pld94)
        (record-type-opaque? . g$11667$Pld94)
        (record-type-name . g$11666$Pld94)
        (record-type-generative? . g$11665$Pld94)
        (record-type-field-names . g$11664$Pld94)
        (record-rtd . g$11663$Pld94)
        (record-field-mutable? . g$11662$Pld94)
        (delete-file . g$5994$Pld94)
        (file-exists? . g$5993$Pld94)
        (vector-sort! . g$11661$Pld94)
        (vector-sort . g$11660$Pld94)
        (list-sort . g$6501$Pld94)
        (symbol-hash . g$11659$Pld94)
        (string-ci-hash . g$11658$Pld94)
        (string-hash . g$11657$Pld94)
        (equal-hash . g$11656$Pld94)
        (hashtable-equivalence-function . g$11655$Pld94)
        (make-hashtable . g$11654$Pld94)
        (hashtable-hash-function . g$11653$Pld94)
        (make-eqv-hashtable . g$5961$Pld94)
        (make-eq-hashtable . g$5960$Pld94)
        (hashtable? . g$11652$Pld94)
        (hashtable-update! . g$5967$Pld94)
        (hashtable-size . g$5962$Pld94)
        (hashtable-set! . g$5964$Pld94)
        (hashtable-ref . g$5963$Pld94)
        (hashtable-mutable? . g$11651$Pld94)
        (hashtable-keys . g$11650$Pld94)
        (hashtable-entries . g$11649$Pld94)
        (hashtable-delete! . g$5965$Pld94)
        (hashtable-copy . g$11648$Pld94)
        (hashtable-contains? . g$5966$Pld94)
        (hashtable-clear! . g$5968$Pld94)
        (call-with-output-file . g$11647$Pld94)
        (call-with-input-file . g$11646$Pld94)
        (write-char . g$11645$Pld94)
        (write . g$11644$Pld94)
        (with-output-to-file . g$11643$Pld94)
        (with-input-from-file . g$11642$Pld94)
        (read-char . g$11641$Pld94)
        (read . g$11640$Pld94)
        (peek-char . g$11639$Pld94)
        (open-output-file . g$11638$Pld94)
        (open-input-file . g$11637$Pld94)
        (newline . g$11636$Pld94)
        (display . g$11635$Pld94)
        (close-output-port . g$11634$Pld94)
        (close-input-port . g$11633$Pld94)
        (eof-object? . g$11632$Pld94)
        (eof-object . g$11631$Pld94)
        (current-error-port . g$11630$Pld94)
        (current-output-port . g$11629$Pld94)
        (current-input-port . g$11628$Pld94)
        (output-port? . g$11627$Pld94)
        (input-port? . g$11626$Pld94)
        (utf-8-codec . g$11625$Pld94)
        (utf-16-codec . g$11624$Pld94)
        (transcoder-error-handling-mode . g$11623$Pld94)
        (transcoder-eol-style . g$11622$Pld94)
        (transcoder-codec . g$11621$Pld94)
        (transcoded-port . g$11620$Pld94)
        (textual-port? . g$11619$Pld94)
        (string->bytevector . g$11618$Pld94)
        (standard-output-port . g$11617$Pld94)
        (standard-input-port . g$11616$Pld94)
        (standard-error-port . g$11615$Pld94)
        (set-port-position! . g$11614$Pld94)
        (put-u8 . g$11613$Pld94)
        (put-string . g$11612$Pld94)
        (put-datum . g$11611$Pld94)
        (put-char . g$11610$Pld94)
        (put-bytevector . g$11609$Pld94)
        (port? . g$11608$Pld94)
        (port-transcoder . g$11607$Pld94)
        (port-position . g$11606$Pld94)
        (port-has-set-port-position!? . g$11605$Pld94)
        (port-has-port-position? . g$11604$Pld94)
        (port-eof? . g$11603$Pld94)
        (output-port-buffer-mode . g$11602$Pld94)
        (open-string-output-port . g$6892$Pld94)
        (open-string-input-port . g$11601$Pld94)
        (open-file-output-port . g$11600$Pld94)
        (open-file-input/output-port . g$11599$Pld94)
        (open-file-input-port . g$11598$Pld94)
        (open-bytevector-output-port . g$11597$Pld94)
        (open-bytevector-input-port . g$11596$Pld94)
        (native-transcoder . g$11595$Pld94)
        (native-eol-style . g$11594$Pld94)
        (make-transcoder . g$11593$Pld94)
        (latin-1-codec . g$11592$Pld94)
        (make-i/o-write-error . g$6749$Pld94)
        (make-i/o-read-error . g$6735$Pld94)
        (make-i/o-port-error . g$6854$Pld94)
        (make-i/o-invalid-position-error . g$6764$Pld94)
        (make-i/o-filename-error . g$6781$Pld94)
        (make-i/o-file-protection-error . g$6797$Pld94)
        (make-i/o-file-is-read-only-error . g$6811$Pld94)
        (make-i/o-file-does-not-exist-error . g$6839$Pld94)
        (make-i/o-file-already-exists-error . g$6825$Pld94)
        (make-i/o-error . g$6721$Pld94)
        (make-i/o-encoding-error . g$6885$Pld94)
        (make-i/o-decoding-error . g$6870$Pld94)
        (make-custom-textual-output-port . g$11591$Pld94)
        (make-custom-textual-input/output-port . g$11590$Pld94)
        (make-custom-textual-input-port . g$11589$Pld94)
        (make-custom-binary-output-port . g$11588$Pld94)
        (make-custom-binary-input/output-port . g$11587$Pld94)
        (make-custom-binary-input-port . g$11586$Pld94)
        (make-bytevector . g$11585$Pld94)
        (lookahead-u8 . g$11584$Pld94)
        (lookahead-char . g$11583$Pld94)
        (i/o-write-error? . g$6750$Pld94)
        (i/o-read-error? . g$6736$Pld94)
        (i/o-port-error? . g$6856$Pld94)
        (i/o-invalid-position-error? . g$6766$Pld94)
        (i/o-filename-error? . g$6783$Pld94)
        (i/o-file-protection-error? . g$6798$Pld94)
        (i/o-file-is-read-only-error? . g$6812$Pld94)
        (i/o-file-does-not-exist-error? . g$6840$Pld94)
        (i/o-file-already-exists-error? . g$6826$Pld94)
        (i/o-error? . g$6722$Pld94)
        (i/o-error-port . g$6857$Pld94)
        (i/o-error-filename . g$6784$Pld94)
        (i/o-encoding-error? . g$6887$Pld94)
        (i/o-encoding-error-char . g$6888$Pld94)
        (i/o-decoding-error? . g$6871$Pld94)
        (get-u8 . g$11582$Pld94)
        (get-string-n! . g$11581$Pld94)
        (get-string-n . g$11580$Pld94)
        (get-string-all . g$11579$Pld94)
        (get-line . g$11578$Pld94)
        (get-datum . g$11577$Pld94)
        (get-char . g$11576$Pld94)
        (get-bytevector-some . g$11575$Pld94)
        (get-bytevector-n! . g$11574$Pld94)
        (get-bytevector-n . g$11573$Pld94)
        (get-bytevector-all . g$11572$Pld94)
        (flush-output-port . g$11571$Pld94)
        (close-port . g$11570$Pld94)
        (call-with-string-output-port . g$11569$Pld94)
        (call-with-port . g$11568$Pld94)
        (call-with-bytevector-output-port . g$11567$Pld94)
        (bytevector->string . g$11566$Pld94)
        (buffer-mode? . g$11565$Pld94)
        (binary-port? . g$11564$Pld94)
        (scheme-report-environment . g$8187$Pld94)
        (quotient . g$6488$Pld94)
        (null-environment . g$8186$Pld94)
        (remainder . g$6489$Pld94)
        (modulo . g$6490$Pld94)
        (inexact->exact . g$11563$Pld94)
        (force . g$11562$Pld94)
        (exact->inexact . g$11561$Pld94)
        (exit . g$11560$Pld94)
        (command-line . g$11559$Pld94)
        (string-fill! . g$11558$Pld94)
        (string-set! . g$11557$Pld94)
        (set-cdr! . g$11556$Pld94)
        (set-car! . g$11555$Pld94)
        (remove . g$6074$Pld94)
        (remv . g$6075$Pld94)
        (remp . g$6060$Pld94)
        (remq . g$6076$Pld94)
        (partition . g$6059$Pld94)
        (memv . g$11554$Pld94)
        (memq . g$11553$Pld94)
        (memp . g$6066$Pld94)
        (member . g$6065$Pld94)
        (exists . g$6070$Pld94)
        (for-all . g$6069$Pld94)
        (fold-right . g$6073$Pld94)
        (fold-left . g$6072$Pld94)
        (find . g$6058$Pld94)
        (filter . g$6061$Pld94)
        (cons* . g$6071$Pld94)
        (assv . g$6062$Pld94)
        (assq . g$11552$Pld94)
        (assp . g$6064$Pld94)
        (assoc . g$6063$Pld94)
        (with-exception-handler . g$11551$Pld94)
        (raise-continuable . g$11550$Pld94)
        (raise . g$11549$Pld94)
        (eval . g$8189$Pld94)
        (environment . g$8185$Pld94)
        (make-enumeration . g$11548$Pld94)
        (enum-set=? . g$11547$Pld94)
        (enum-set-universe . g$11546$Pld94)
        (enum-set-union . g$11545$Pld94)
        (enum-set-subset? . g$11544$Pld94)
        (enum-set-projection . g$11543$Pld94)
        (enum-set-member? . g$11542$Pld94)
        (enum-set-intersection . g$11541$Pld94)
        (enum-set-indexer . g$11540$Pld94)
        (enum-set-difference . g$11539$Pld94)
        (enum-set-constructor . g$11538$Pld94)
        (enum-set-complement . g$11537$Pld94)
        (enum-set->list . g$11536$Pld94)
        (who-condition? . g$6399$Pld94)
        (warning? . g$6310$Pld94)
        (violation? . g$6352$Pld94)
        (undefined-violation? . g$6476$Pld94)
        (syntax-violation? . g$6460$Pld94)
        (syntax-violation-subform . g$6462$Pld94)
        (syntax-violation-form . g$6461$Pld94)
        (syntax-violation . g$8203$Pld94)
        (simple-conditions . g$11535$Pld94)
        (serious-condition? . g$6324$Pld94)
        (non-continuable-violation? . g$6414$Pld94)
        (message-condition? . g$6295$Pld94)
        (make-who-condition . g$6397$Pld94)
        (make-warning . g$6309$Pld94)
        (make-violation . g$6351$Pld94)
        (make-undefined-violation . g$6475$Pld94)
        (make-syntax-violation . g$6457$Pld94)
        (make-serious-condition . g$6323$Pld94)
        (make-non-continuable-violation . g$6413$Pld94)
        (make-message-condition . g$6293$Pld94)
        (make-lexical-violation . g$6441$Pld94)
        (make-irritants-condition . g$6380$Pld94)
        (make-implementation-restriction-violation . g$6427$Pld94)
        (make-error . g$6337$Pld94)
        (make-assertion-violation . g$6365$Pld94)
        (lexical-violation? . g$6442$Pld94)
        (irritants-condition? . g$6382$Pld94)
        (implementation-restriction-violation? . g$6428$Pld94)
        (error? . g$6338$Pld94)
        (condition-who . g$6400$Pld94)
        (condition-predicate . g$11534$Pld94)
        (condition-message . g$6296$Pld94)
        (condition-irritants . g$6383$Pld94)
        (condition-accessor . g$11533$Pld94)
        (condition . g$11532$Pld94)
        (assertion-violation? . g$6366$Pld94)
        (condition? . g$11531$Pld94)
        (utf32->string . g$11530$Pld94)
        (utf16->string . g$11529$Pld94)
        (utf8->string . g$11528$Pld94)
        (uint-list->bytevector . g$11527$Pld94)
        (u8-list->bytevector . g$11526$Pld94)
        (string->utf8 . g$11525$Pld94)
        (string->utf32 . g$11524$Pld94)
        (string->utf16 . g$11523$Pld94)
        (sint-list->bytevector . g$11522$Pld94)
        (native-endianness . g$6150$Pld94)
        (bytevector? . g$11521$Pld94)
        (bytevector=? . g$11520$Pld94)
        (bytevector-uint-set! . g$11519$Pld94)
        (bytevector-uint-ref . g$11518$Pld94)
        (bytevector-u8-set! . g$11517$Pld94)
        (bytevector-u8-ref . g$11516$Pld94)
        (bytevector-u64-set! . g$6171$Pld94)
        (bytevector-u64-ref . g$6167$Pld94)
        (bytevector-u64-native-set! . g$6173$Pld94)
        (bytevector-u64-native-ref . g$6169$Pld94)
        (bytevector-u32-set! . g$6163$Pld94)
        (bytevector-u32-ref . g$6159$Pld94)
        (bytevector-u32-native-set! . g$6165$Pld94)
        (bytevector-u32-native-ref . g$6161$Pld94)
        (bytevector-u16-set! . g$6155$Pld94)
        (bytevector-u16-ref . g$6151$Pld94)
        (bytevector-u16-native-set! . g$6157$Pld94)
        (bytevector-u16-native-ref . g$6153$Pld94)
        (bytevector-sint-set! . g$11515$Pld94)
        (bytevector-sint-ref . g$11514$Pld94)
        (bytevector-s8-set! . g$11513$Pld94)
        (bytevector-s8-ref . g$11512$Pld94)
        (bytevector-s64-set! . g$6172$Pld94)
        (bytevector-s64-ref . g$6168$Pld94)
        (bytevector-s64-native-set! . g$6174$Pld94)
        (bytevector-s64-native-ref . g$6170$Pld94)
        (bytevector-s32-set! . g$6164$Pld94)
        (bytevector-s32-ref . g$6160$Pld94)
        (bytevector-s32-native-set! . g$6166$Pld94)
        (bytevector-s32-native-ref . g$6162$Pld94)
        (bytevector-s16-set! . g$6156$Pld94)
        (bytevector-s16-ref . g$6152$Pld94)
        (bytevector-s16-native-set! . g$6158$Pld94)
        (bytevector-s16-native-ref . g$6154$Pld94)
        (bytevector-length . g$11511$Pld94)
        (bytevector-ieee-single-set! . g$11510$Pld94)
        (bytevector-ieee-single-ref . g$11509$Pld94)
        (bytevector-ieee-single-native-set! . g$6177$Pld94)
        (bytevector-ieee-single-native-ref . g$6175$Pld94)
        (bytevector-ieee-double-set! . g$11508$Pld94)
        (bytevector-ieee-double-ref . g$11507$Pld94)
        (bytevector-ieee-double-native-set! . g$6178$Pld94)
        (bytevector-ieee-double-native-ref . g$6176$Pld94)
        (bytevector-fill! . g$11506$Pld94)
        (bytevector-copy! . g$11505$Pld94)
        (bytevector-copy . g$11504$Pld94)
        (bytevector->uint-list . g$11503$Pld94)
        (bytevector->u8-list . g$11502$Pld94)
        (bytevector->sint-list . g$11501$Pld94)
        (no-nans-violation? . g$6707$Pld94)
        (no-infinities-violation? . g$6693$Pld94)
        (make-no-nans-violation . g$6706$Pld94)
        (make-no-infinities-violation . g$6692$Pld94)
        (real->flonum . g$11500$Pld94)
        (flzero? . g$11499$Pld94)
        (fltruncate . g$11498$Pld94)
        (fltan . g$11497$Pld94)
        (flsqrt . g$11496$Pld94)
        (flsin . g$11495$Pld94)
        (flround . g$11494$Pld94)
        (flpositive? . g$11493$Pld94)
        (flonum? . g$11492$Pld94)
        (flodd? . g$11491$Pld94)
        (flnumerator . g$11490$Pld94)
        (flnegative? . g$11489$Pld94)
        (flnan? . g$11488$Pld94)
        (flmod0 . g$11487$Pld94)
        (flmod . g$11486$Pld94)
        (flmin . g$11485$Pld94)
        (flmax . g$11484$Pld94)
        (fllog . g$11483$Pld94)
        (flinteger? . g$11482$Pld94)
        (flinfinite? . g$11481$Pld94)
        (flfloor . g$11480$Pld94)
        (flfinite? . g$11479$Pld94)
        (flexpt . g$11478$Pld94)
        (flexp . g$11477$Pld94)
        (fleven? . g$11476$Pld94)
        (fldiv0-and-mod0 . g$11475$Pld94)
        (fldiv0 . g$11474$Pld94)
        (fldiv-and-mod . g$11473$Pld94)
        (fldiv . g$11472$Pld94)
        (fldenominator . g$11471$Pld94)
        (flcos . g$11470$Pld94)
        (flceiling . g$11469$Pld94)
        (flatan . g$11468$Pld94)
        (flasin . g$11467$Pld94)
        (flacos . g$11466$Pld94)
        (flabs . g$11465$Pld94)
        (fl>? . g$11464$Pld94)
        (fl>=? . g$11463$Pld94)
        (fl=? . g$11462$Pld94)
        (fl<? . g$11461$Pld94)
        (fl<=? . g$11460$Pld94)
        (fl/ . g$11459$Pld94)
        (fl- . g$11458$Pld94)
        (fl+ . g$11457$Pld94)
        (fl* . g$11456$Pld94)
        (fixnum->flonum . g$11455$Pld94)
        (fxzero? . g$11454$Pld94)
        (fxxor . g$11453$Pld94)
        (fxrotate-bit-field . g$6638$Pld94)
        (fxreverse-bit-field . g$11452$Pld94)
        (fxpositive? . g$11451$Pld94)
        (fxodd? . g$11450$Pld94)
        (fxnot . g$11449$Pld94)
        (fxnegative? . g$11448$Pld94)
        (fxmod0 . g$11447$Pld94)
        (fxmod . g$11446$Pld94)
        (fxmin . g$11445$Pld94)
        (fxmax . g$11444$Pld94)
        (fxlength . g$11443$Pld94)
        (fxior . g$11442$Pld94)
        (fxif . g$6632$Pld94)
        (fxfirst-bit-set . g$11441$Pld94)
        (fxeven? . g$11440$Pld94)
        (fxdiv0-and-mod0 . g$11439$Pld94)
        (fxdiv0 . g$11438$Pld94)
        (fxdiv-and-mod . g$11437$Pld94)
        (fxdiv . g$11436$Pld94)
        (fxcopy-bit-field . g$6635$Pld94)
        (fxcopy-bit . g$6633$Pld94)
        (fxbit-set? . g$11435$Pld94)
        (fxbit-field . g$6634$Pld94)
        (fxbit-count . g$11434$Pld94)
        (fxarithmetic-shift-right . g$6637$Pld94)
        (fxarithmetic-shift-left . g$6636$Pld94)
        (fxarithmetic-shift . g$11433$Pld94)
        (fxand . g$11432$Pld94)
        (fx>? . g$11431$Pld94)
        (fx>=? . g$11430$Pld94)
        (fx=? . g$11429$Pld94)
        (fx<? . g$11428$Pld94)
        (fx<=? . g$11427$Pld94)
        (fx-/carry . g$11426$Pld94)
        (fx- . g$11425$Pld94)
        (fx+/carry . g$11424$Pld94)
        (fx+ . g$11423$Pld94)
        (fx*/carry . g$11422$Pld94)
        (fx* . g$11421$Pld94)
        (greatest-fixnum . g$11420$Pld94)
        (least-fixnum . g$11419$Pld94)
        (fixnum-width . g$11418$Pld94)
        (fixnum? . g$11417$Pld94)
        (bitwise-rotate-bit-field . g$6586$Pld94)
        (bitwise-reverse-bit-field . g$6587$Pld94)
        (bitwise-length . g$11416$Pld94)
        (bitwise-if . g$6580$Pld94)
        (bitwise-first-bit-set . g$11415$Pld94)
        (bitwise-copy-bit-field . g$6583$Pld94)
        (bitwise-copy-bit . g$6581$Pld94)
        (bitwise-bit-set? . g$11414$Pld94)
        (bitwise-bit-field . g$11413$Pld94)
        (bitwise-bit-count . g$11412$Pld94)
        (bitwise-xor . g$11411$Pld94)
        (bitwise-ior . g$11410$Pld94)
        (bitwise-and . g$11409$Pld94)
        (bitwise-not . g$11408$Pld94)
        (bitwise-arithmetic-shift-right . g$6585$Pld94)
        (bitwise-arithmetic-shift-left . g$6584$Pld94)
        (bitwise-arithmetic-shift . g$11407$Pld94)
        (zero? . g$11406$Pld94)
        (vector? . g$11405$Pld94)
        (vector-set! . g$11404$Pld94)
        (vector-ref . g$11403$Pld94)
        (vector-map . g$11402$Pld94)
        (vector-length . g$11401$Pld94)
        (vector-for-each . g$11400$Pld94)
        (vector-fill! . g$11399$Pld94)
        (vector->list . g$11398$Pld94)
        (vector . g$11397$Pld94)
        (values . g$11396$Pld94)
        (truncate . g$11395$Pld94)
        (tan . g$11394$Pld94)
        (symbol? . g$11393$Pld94)
        (symbol=? . g$11392$Pld94)
        (symbol->string . g$11391$Pld94)
        (substring . g$11390$Pld94)
        (string? . g$11389$Pld94)
        (string>? . g$11388$Pld94)
        (string>=? . g$11387$Pld94)
        (string=? . g$11386$Pld94)
        (string<? . g$11385$Pld94)
        (string<=? . g$11384$Pld94)
        (string-ref . g$11383$Pld94)
        (string-length . g$11382$Pld94)
        (string-for-each . g$11381$Pld94)
        (string-copy . g$11380$Pld94)
        (string-append . g$11379$Pld94)
        (string->symbol . g$11378$Pld94)
        (string->number . g$11377$Pld94)
        (string->list . g$11376$Pld94)
        (string . g$11375$Pld94)
        (sqrt . g$11374$Pld94)
        (sin . g$11373$Pld94)
        (round . g$11372$Pld94)
        (reverse . g$11371$Pld94)
        (real? . g$11370$Pld94)
        (real-valued? . g$11369$Pld94)
        (real-part . g$11368$Pld94)
        (rationalize . g$5611$Pld94)
        (rational? . g$11367$Pld94)
        (rational-valued? . g$11366$Pld94)
        (procedure? . g$11365$Pld94)
        (positive? . g$11364$Pld94)
        (pair? . g$11363$Pld94)
        (odd? . g$11362$Pld94)
        (numerator . g$11361$Pld94)
        (number? . g$11360$Pld94)
        (number->string . g$11359$Pld94)
        (null? . g$11358$Pld94)
        (not . g$11357$Pld94)
        (negative? . g$11356$Pld94)
        (nan? . g$11355$Pld94)
        (min . g$11354$Pld94)
        (max . g$11353$Pld94)
        (map . g$11352$Pld94)
        (make-vector . g$11351$Pld94)
        (make-string . g$11350$Pld94)
        (make-rectangular . g$11349$Pld94)
        (make-polar . g$11348$Pld94)
        (magnitude . g$11347$Pld94)
        (log . g$11346$Pld94)
        (list? . g$11345$Pld94)
        (list-tail . g$11344$Pld94)
        (list-ref . g$11343$Pld94)
        (list->vector . g$11342$Pld94)
        (list->string . g$11341$Pld94)
        (list . g$11340$Pld94)
        (length . g$11339$Pld94)
        (lcm . g$11338$Pld94)
        (integer? . g$11337$Pld94)
        (integer-valued? . g$11336$Pld94)
        (integer->char . g$11335$Pld94)
        (infinite? . g$11334$Pld94)
        (inexact? . g$11333$Pld94)
        (inexact . g$11332$Pld94)
        (imag-part . g$11331$Pld94)
        (gcd . g$11330$Pld94)
        (for-each . g$11329$Pld94)
        (floor . g$11328$Pld94)
        (finite? . g$11327$Pld94)
        (expt . g$11326$Pld94)
        (exp . g$11325$Pld94)
        (exact? . g$11324$Pld94)
        (exact-integer-sqrt . g$11323$Pld94)
        (exact . g$11322$Pld94)
        (even? . g$11321$Pld94)
        (error . g$11320$Pld94)
        (eqv? . g$11319$Pld94)
        (equal? . g$11318$Pld94)
        (eq? . g$11317$Pld94)
        (dynamic-wind . g$11316$Pld94)
        (div0-and-mod0 . g$11315$Pld94)
        (mod0 . g$11314$Pld94)
        (div0 . g$11313$Pld94)
        (div-and-mod . g$11312$Pld94)
        (mod . g$11311$Pld94)
        (div . g$11310$Pld94)
        (denominator . g$11309$Pld94)
        (cos . g$11308$Pld94)
        (cons . g$11307$Pld94)
        (complex? . g$11306$Pld94)
        (char? . g$11305$Pld94)
        (char>? . g$11304$Pld94)
        (char>=? . g$11303$Pld94)
        (char=? . g$11302$Pld94)
        (char<? . g$11301$Pld94)
        (char<=? . g$11300$Pld94)
        (char->integer . g$11299$Pld94)
        (ceiling . g$11298$Pld94)
        (call-with-values . g$11297$Pld94)
        (call/cc . g$11296$Pld94)
        (call-with-current-continuation . g$11295$Pld94)
        (cddddr . g$5610$Pld94)
        (cdddar . g$5609$Pld94)
        (cddadr . g$5608$Pld94)
        (cddaar . g$5607$Pld94)
        (cdaddr . g$5606$Pld94)
        (cdadar . g$5605$Pld94)
        (cdaadr . g$5604$Pld94)
        (cdaaar . g$5603$Pld94)
        (cadddr . g$5602$Pld94)
        (caddar . g$5601$Pld94)
        (cadadr . g$5600$Pld94)
        (cadaar . g$5599$Pld94)
        (caaddr . g$5598$Pld94)
        (caadar . g$5597$Pld94)
        (caaadr . g$5596$Pld94)
        (caaaar . g$5595$Pld94)
        (cdddr . g$5594$Pld94)
        (cddar . g$5593$Pld94)
        (cdadr . g$5592$Pld94)
        (cdaar . g$5591$Pld94)
        (caddr . g$5590$Pld94)
        (cadar . g$5589$Pld94)
        (caadr . g$5588$Pld94)
        (caaar . g$5587$Pld94)
        (cddr . g$5586$Pld94)
        (cdar . g$5585$Pld94)
        (cadr . g$5584$Pld94)
        (caar . g$5583$Pld94)
        (cdr . g$11294$Pld94)
        (car . g$11293$Pld94)
        (boolean? . g$11292$Pld94)
        (boolean=? . g$11291$Pld94)
        (atan . g$11290$Pld94)
        (assertion-violation . g$11289$Pld94)
        (asin . g$11288$Pld94)
        (apply . g$11287$Pld94)
        (append . g$11286$Pld94)
        (angle . g$11285$Pld94)
        (acos . g$11284$Pld94)
        (abs . g$11283$Pld94)
        (/ . g$11282$Pld94)
        (* . g$11281$Pld94)
        (- . g$11280$Pld94)
        (+ . g$11279$Pld94)
        (>= . g$11278$Pld94)
        (> . g$11277$Pld94)
        (= . g$11276$Pld94)
        (<= . g$11275$Pld94)
        (< . g$11274$Pld94)
        (make-record-printer . g$11273$Pld94)
        (eqv-hash . g$11272$Pld94)
        (eq-hash . g$11271$Pld94)
        (reverse! . g$11270$Pld94)
        (printf . g$6901$Pld94)
        (fprintf . g$6902$Pld94)
        (format . g$6903$Pld94)
        (get-arity . g$11269$Pld94)
        (gc-collect . g$11268$Pld94)
        (clr-type? . g$11267$Pld94)
        (get-clr-type . g$11266$Pld94)
        (vector-append . g$11265$Pld94)
        (vector-filter . g$11264$Pld94)
        (vector-reverse! . g$11263$Pld94)
        (vector-contains? . g$11262$Pld94)
        (vector-index-of . g$11261$Pld94)
        (vector-copy . g$11260$Pld94)
        (vector-binary-search . g$11259$Pld94)
        (get-output-string . g$11258$Pld94)
        (open-output-string . g$11257$Pld94)
        (open-input-string . g$11256$Pld94)
        (string-format . g$11255$Pld94)
        (trace-printer . g$11120$Pld94)
        (make-traced-procedure . g$11254$Pld94)
        (make-traced-macro . g$6922$Pld94)
        (pmap . g$11253$Pld94)
        (time-it . g$11252$Pld94)
        (make-parameter . g$6927$Pld94)
        (library-locator . g$11251$Pld94)
        (get-library-paths . g$11250$Pld94)
        (environment-symbols . g$8183$Pld94)
        (interaction-environment-symbols . g$8182$Pld94)
        (library-path . g$7352$Pld94)
        (library-extensions . g$7353$Pld94)
        (installed-libraries . g$7373$Pld94)
        (expand . g$8188$Pld94)
        (&no-nans . g$11249$Pld94)
        (&no-infinities . g$11248$Pld94)
        (&i/o-encoding . g$11247$Pld94)
        (&i/o-decoding . g$11246$Pld94)
        (&i/o-port . g$11245$Pld94)
        (&i/o-file-does-not-exist . g$11244$Pld94)
        (&i/o-file-already-exists . g$11243$Pld94)
        (&i/o-file-is-read-only . g$11242$Pld94)
        (&i/o-file-protection . g$11241$Pld94)
        (&i/o-filename . g$11240$Pld94)
        (&i/o-invalid-position . g$11239$Pld94)
        (&i/o-write . g$11238$Pld94)
        (&i/o-read . g$11237$Pld94)
        (&i/o . g$11236$Pld94)
        (&non-continuable . g$11235$Pld94)
        (&undefined . g$11234$Pld94)
        (&syntax . g$11233$Pld94)
        (&lexical . g$11232$Pld94)
        (&implementation-restriction . g$11231$Pld94)
        (&non . g$11230$Pld94)
        (&who . g$11229$Pld94)
        (&irritants . g$11228$Pld94)
        (&assertion . g$11227$Pld94)
        (&violation . g$11226$Pld94)
        (&error . g$11225$Pld94)
        (&serious . g$11224$Pld94)
        (&warning . g$11223$Pld94)
        (&message . g$11222$Pld94)
        (&condition . g$11221$Pld94)
        (define-condition-type . g$11220$Pld94)
        (define-enumeration . g$11219$Pld94)
        (define-record-type . g$11218$Pld94)
        (parent-rtd . g$11217$Pld94)
        (nongenerative . g$11216$Pld94)
        (opaque . g$11215$Pld94)
        (sealed . g$11214$Pld94)
        (protocol . g$11213$Pld94)
        (parent . g$11212$Pld94)
        (immutable . g$11211$Pld94)
        (mutable . g$11210$Pld94)
        (fields . g$11209$Pld94)
        (error-handling-mode . g$11208$Pld94)
        (file-options . g$11207$Pld94)
        (buffer-mode . g$11206$Pld94)
        (eol-style . g$11205$Pld94)
        (guard . g$11204$Pld94)
        (trace-letrec-syntax . g$11203$Pld94)
        (trace-let-syntax . g$11202$Pld94)
        (trace-define-syntax . g$11201$Pld94)
        (trace-define . g$11200$Pld94)
        (trace-lambda . g$11199$Pld94)
        (unsyntax-splicing . g$11198$Pld94)
        (unsyntax . g$11197$Pld94)
        (unquote-splicing . g$11196$Pld94)
        (unquote . g$11195$Pld94)
        (_ . g$11194$Pld94)
        (else . g$11193$Pld94)
        (=> . g$11192$Pld94)
        (... . g$11191$Pld94)
        (assert . g$11190$Pld94)
        (endianness . g$11189$Pld94)
        (delay . g$11188$Pld94)
        (time . g$11187$Pld94)
        (or . g$11186$Pld94)
        (and . g$11185$Pld94)
        (do . g$11184$Pld94)
        (cond . g$11183$Pld94)
        (let* . g$11182$Pld94)
        (let . g$11181$Pld94)
        (identifier-syntax . g$11180$Pld94)
        (with-syntax . g$11179$Pld94)
        (quasisyntax . g$11178$Pld94)
        (quasiquote . g$11177$Pld94)
        (syntax-rules . g$11176$Pld94)
        (include-into . g$11175$Pld94)
        (include . g$11174$Pld94)
        (define-struct . g$11173$Pld94)
        (let-values . g$11172$Pld94)
        (let*-values . g$11171$Pld94)
        (record-constructor-descriptor . g$11170$Pld94)
        (record-type-descriptor . g$11169$Pld94)
        (fluid-let-syntax . g$11168$Pld94)
        (case . g$11167$Pld94)
        (parameterize . g$11166$Pld94)
        (unless . g$11165$Pld94)
        (when . g$11164$Pld94)
        (if . g$11163$Pld94)
        (letrec* . g$11162$Pld94)
        (letrec . g$11161$Pld94)
        (type-descriptor . g$11160$Pld94)
        (case-lambda . g$11159$Pld94)
        (lambda . g$11158$Pld94)
        (syntax . g$11157$Pld94)
        (syntax-case . g$11156$Pld94)
        (quote . g$11155$Pld94)
        (foreign-call . g$11154$Pld94)
        (letrec-syntax . g$11153$Pld94)
        (let-syntax . g$11152$Pld94)
        (set! . g$11151$Pld94)
        (import . g$11150$Pld94)
        (library . g$11149$Pld94)
        (begin . g$11148$Pld94)
        (module . g$11147$Pld94)
        (define-syntax . g$11146$Pld94)
        (define . g$11145$Pld94))
      '((g$8081$Pld94 core-prim . ellipsis-map)
        (g$11801$Pld94 core-prim . &no-nans-rcd)
        (g$11800$Pld94 core-prim . &no-nans-rtd)
        (g$11799$Pld94 core-prim . &no-infinities-rcd)
        (g$11798$Pld94 core-prim . &no-infinities-rtd)
        (g$11797$Pld94 core-prim . &i/o-encoding-rcd)
        (g$11796$Pld94 core-prim . &i/o-encoding-rtd)
        (g$11795$Pld94 core-prim . &i/o-decoding-rcd)
        (g$11794$Pld94 core-prim . &i/o-decoding-rtd)
        (g$11793$Pld94 core-prim . &i/o-port-rcd)
        (g$11792$Pld94 core-prim . &i/o-port-rtd)
        (g$11791$Pld94 core-prim . &i/o-file-does-not-exist-rcd)
        (g$11790$Pld94 core-prim . &i/o-file-does-not-exist-rtd)
        (g$11789$Pld94 core-prim . &i/o-file-already-exists-rcd)
        (g$11788$Pld94 core-prim . &i/o-file-already-exists-rtd)
        (g$11787$Pld94 core-prim . &i/o-fie-is-read-only-rcd)
        (g$11786$Pld94 core-prim . &i/o-fie-is-read-only-rtd)
        (g$11785$Pld94 core-prim . &i/o-file-protection-rcd)
        (g$11784$Pld94 core-prim . &i/o-file-protection-rtd)
        (g$11783$Pld94 core-prim . &i/o-filename-rcd)
        (g$11782$Pld94 core-prim . &i/o-filename-rtd)
        (g$11781$Pld94 core-prim . &i/o-invalid-position-rcd)
        (g$11780$Pld94 core-prim . &i/o-invalid-position-rtd)
        (g$11779$Pld94 core-prim . &i/o-write-rcd)
        (g$11778$Pld94 core-prim . &i/o-write-rtd)
        (g$11777$Pld94 core-prim . &i/o-read-rcd)
        (g$11776$Pld94 core-prim . &i/o-read-rtd)
        (g$11775$Pld94 core-prim . &i/o-rcd)
        (g$11774$Pld94 core-prim . &i/o-rtd)
        (g$11773$Pld94 core-prim . &undefined-rcd)
        (g$11772$Pld94 core-prim . &undefined-rtd)
        (g$11771$Pld94 core-prim . &syntax-rcd)
        (g$11770$Pld94 core-prim . &syntax-rtd)
        (g$11769$Pld94 core-prim . &lexical-rcd)
        (g$11768$Pld94 core-prim . &lexical-rtd)
        (g$11767$Pld94 core-prim . &implementation-restriction-rcd)
        (g$11766$Pld94 core-prim . &implementation-restriction-rtd)
        (g$11765$Pld94 core-prim . &non-continuable-rcd)
        (g$11764$Pld94 core-prim . &non-continuable-rtd)
        (g$11763$Pld94 core-prim . &who-rcd)
        (g$11762$Pld94 core-prim . &who-rtd)
        (g$11761$Pld94 core-prim . &irritants-rcd)
        (g$11760$Pld94 core-prim . &irritants-rtd)
        (g$11759$Pld94 core-prim . &assertion-rcd)
        (g$11758$Pld94 core-prim . &assertion-rtd)
        (g$11757$Pld94 core-prim . &violation-rcd)
        (g$11756$Pld94 core-prim . &violation-rtd)
        (g$11755$Pld94 core-prim . &error-rcd)
        (g$11754$Pld94 core-prim . &error-rtd)
        (g$11753$Pld94 core-prim . &serious-rcd)
        (g$11752$Pld94 core-prim . &serious-rtd)
        (g$11751$Pld94 core-prim . &warning-rcd)
        (g$11750$Pld94 core-prim . &warning-rtd)
        (g$11749$Pld94 core-prim . &message-rcd)
        (g$11748$Pld94 core-prim . &message-rtd)
        (g$11747$Pld94 core-prim . &condition-rcd)
        (g$11746$Pld94 core-prim . &condition-rtd)
        (g$11745$Pld94 core-prim . library-letrec*)
        (g$11744$Pld94 core-prim . annotation-stripped)
        (g$11743$Pld94 core-prim . annotation-source)
        (g$11742$Pld94 core-prim . annotation-expression)
        (g$11741$Pld94 core-prim . annotation?)
        (g$11740$Pld94 core-prim . read-annotated)
        (g$11739$Pld94 core-prim . tanh)
        (g$11738$Pld94 core-prim . cosh)
        (g$11737$Pld94 core-prim . sinh)
        (g$11736$Pld94 core-prim . make-guid)
        (g$11735$Pld94 core-prim . unspecified?)
        (g$11734$Pld94 core-prim . make-trace)
        (g$11733$Pld94 core-prim . make-list)
        (g$11732$Pld94 core-prim . last-pair)
        (g$11731$Pld94 core-prim . load-r5rs)
        (g$11730$Pld94 core-prim . license)
        (g$11729$Pld94 core-prim . stacktrace)
        (g$11123$Pld94 core-prim . ironscheme-build)
        (g$11728$Pld94 core-prim . define-clr-class-internal)
        (g$11727$Pld94 core-prim . clr-field-set!-internal)
        (g$11726$Pld94 core-prim . clr-field-get-internal)
        (g$11725$Pld94 core-prim . clr-cast-internal)
        (g$11724$Pld94 core-prim . clr-call-internal)
        (g$11723$Pld94 core-prim . clr-new-internal)
        (g$11722$Pld94 core-prim . clr-new-array-internal)
        (g$11721$Pld94 core-prim . clr-is-internal)
        (g$11720$Pld94 core-prim . clr-reference-internal)
        (g$11719$Pld94 core-prim . clr-using-internal)
        (g$11718$Pld94 core-prim . clr-clear-usings-internal)
        (g$8200$Pld94 core-prim . syntax-error)
        (g$8076$Pld94 core-prim . syntax-dispatch)
        (g$11717$Pld94 core-prim . compile-core)
        (g$11716$Pld94 core-prim . eval-core)
        (g$11715$Pld94 core-prim . set-symbol-value!)
        (g$11714$Pld94 core-prim . symbol-value)
        (g$11713$Pld94 core-prim . ungensym)
        (g$11712$Pld94 core-prim . gensym)
        (g$11711$Pld94 core-prim . void)
        (g$11710$Pld94 core-prim . load-serialized-library)
        (g$11709$Pld94 core-prim . serialize-library)
        (g$11125$Pld94 core-prim . compile-system-libraries)
        (g$11127$Pld94 core-prim . compile->closure)
        (g$11126$Pld94 core-prim . compile)
        (g$11122$Pld94 core-prim . load)
        (g$8209$Pld94 core-prim . interaction-environment)
        (g$11708$Pld94 core-prim . char-ready?)
        (g$11707$Pld94 core-prim . string-upcase)
        (g$11706$Pld94 core-prim . string-titlecase)
        (g$11705$Pld94 core-prim . string-normalize-nfkd)
        (g$11704$Pld94 core-prim . string-normalize-nfkc)
        (g$11703$Pld94 core-prim . string-normalize-nfd)
        (g$11702$Pld94 core-prim . string-normalize-nfc)
        (g$11701$Pld94 core-prim . string-foldcase)
        (g$11700$Pld94 core-prim . string-downcase)
        (g$11699$Pld94 core-prim . string-ci>?)
        (g$11698$Pld94 core-prim . string-ci>=?)
        (g$11697$Pld94 core-prim . string-ci=?)
        (g$11696$Pld94 core-prim . string-ci<?)
        (g$11695$Pld94 core-prim . string-ci<=?)
        (g$11694$Pld94 core-prim . char-whitespace?)
        (g$11693$Pld94 core-prim . char-upper-case?)
        (g$11692$Pld94 core-prim . char-title-case?)
        (g$11691$Pld94 core-prim . char-numeric?)
        (g$11690$Pld94 core-prim . char-lower-case?)
        (g$11689$Pld94 core-prim . char-general-category)
        (g$11688$Pld94 core-prim . char-upcase)
        (g$11687$Pld94 core-prim . char-titlecase)
        (g$11686$Pld94 core-prim . char-foldcase)
        (g$11685$Pld94 core-prim . char-downcase)
        (g$11684$Pld94 core-prim . char-ci>?)
        (g$11683$Pld94 core-prim . char-ci>=?)
        (g$11682$Pld94 core-prim . char-ci=?)
        (g$11681$Pld94 core-prim . char-ci<?)
        (g$11680$Pld94 core-prim . char-ci<=?)
        (g$11679$Pld94 core-prim . char-alphabetic?)
        (g$7813$Pld94 core-prim . variable-transformer-procedure)
        (g$7812$Pld94 core-prim . variable-transformer?)
        (g$7811$Pld94 core-prim . make-variable-transformer)
        (g$8204$Pld94 core-prim . identifier?)
        (g$8196$Pld94 core-prim . generate-temporaries)
        (g$8197$Pld94 core-prim . free-identifier=?)
        (g$8206$Pld94 core-prim . syntax->datum)
        (g$8205$Pld94 core-prim . datum->syntax)
        (g$8198$Pld94 core-prim . bound-identifier=?)
        (g$11678$Pld94 core-prim . record-type-descriptor?)
        (g$11677$Pld94 core-prim . record-predicate)
        (g$11676$Pld94 core-prim . record-mutator)
        (g$11675$Pld94 core-prim . record-constructor)
        (g$11674$Pld94 core-prim . record-accessor)
        (g$11673$Pld94 core-prim . make-record-type-descriptor)
        (g$11672$Pld94 core-prim . make-record-constructor-descriptor)
        (g$11671$Pld94 core-prim . record?)
        (g$11670$Pld94 core-prim . record-type-uid)
        (g$11669$Pld94 core-prim . record-type-sealed?)
        (g$11668$Pld94 core-prim . record-type-parent)
        (g$11667$Pld94 core-prim . record-type-opaque?)
        (g$11666$Pld94 core-prim . record-type-name)
        (g$11665$Pld94 core-prim . record-type-generative?)
        (g$11664$Pld94 core-prim . record-type-field-names)
        (g$11663$Pld94 core-prim . record-rtd)
        (g$11662$Pld94 core-prim . record-field-mutable?)
        (g$5994$Pld94 core-prim . delete-file)
        (g$5993$Pld94 core-prim . file-exists?)
        (g$11661$Pld94 core-prim . vector-sort!)
        (g$11660$Pld94 core-prim . vector-sort)
        (g$6501$Pld94 core-prim . list-sort)
        (g$11659$Pld94 core-prim . symbol-hash)
        (g$11658$Pld94 core-prim . string-ci-hash)
        (g$11657$Pld94 core-prim . string-hash)
        (g$11656$Pld94 core-prim . equal-hash)
        (g$11655$Pld94 core-prim . hashtable-equivalence-function)
        (g$11654$Pld94 core-prim . make-hashtable)
        (g$11653$Pld94 core-prim . hashtable-hash-function)
        (g$5961$Pld94 core-prim . make-eqv-hashtable)
        (g$5960$Pld94 core-prim . make-eq-hashtable)
        (g$11652$Pld94 core-prim . hashtable?)
        (g$5967$Pld94 core-prim . hashtable-update!)
        (g$5962$Pld94 core-prim . hashtable-size)
        (g$5964$Pld94 core-prim . hashtable-set!)
        (g$5963$Pld94 core-prim . hashtable-ref)
        (g$11651$Pld94 core-prim . hashtable-mutable?)
        (g$11650$Pld94 core-prim . hashtable-keys)
        (g$11649$Pld94 core-prim . hashtable-entries)
        (g$5965$Pld94 core-prim . hashtable-delete!)
        (g$11648$Pld94 core-prim . hashtable-copy)
        (g$5966$Pld94 core-prim . hashtable-contains?)
        (g$5968$Pld94 core-prim . hashtable-clear!)
        (g$11647$Pld94 core-prim . call-with-output-file)
        (g$11646$Pld94 core-prim . call-with-input-file)
        (g$11645$Pld94 core-prim . write-char)
        (g$11644$Pld94 core-prim . write)
        (g$11643$Pld94 core-prim . with-output-to-file)
        (g$11642$Pld94 core-prim . with-input-from-file)
        (g$11641$Pld94 core-prim . read-char)
        (g$11640$Pld94 core-prim . read)
        (g$11639$Pld94 core-prim . peek-char)
        (g$11638$Pld94 core-prim . open-output-file)
        (g$11637$Pld94 core-prim . open-input-file)
        (g$11636$Pld94 core-prim . newline)
        (g$11635$Pld94 core-prim . display)
        (g$11634$Pld94 core-prim . close-output-port)
        (g$11633$Pld94 core-prim . close-input-port)
        (g$11632$Pld94 core-prim . eof-object?)
        (g$11631$Pld94 core-prim . eof-object)
        (g$11630$Pld94 core-prim . current-error-port)
        (g$11629$Pld94 core-prim . current-output-port)
        (g$11628$Pld94 core-prim . current-input-port)
        (g$11627$Pld94 core-prim . output-port?)
        (g$11626$Pld94 core-prim . input-port?)
        (g$11625$Pld94 core-prim . utf-8-codec)
        (g$11624$Pld94 core-prim . utf-16-codec)
        (g$11623$Pld94 core-prim . transcoder-error-handling-mode)
        (g$11622$Pld94 core-prim . transcoder-eol-style)
        (g$11621$Pld94 core-prim . transcoder-codec)
        (g$11620$Pld94 core-prim . transcoded-port)
        (g$11619$Pld94 core-prim . textual-port?)
        (g$11618$Pld94 core-prim . string->bytevector)
        (g$11617$Pld94 core-prim . standard-output-port)
        (g$11616$Pld94 core-prim . standard-input-port)
        (g$11615$Pld94 core-prim . standard-error-port)
        (g$11614$Pld94 core-prim . set-port-position!)
        (g$11613$Pld94 core-prim . put-u8)
        (g$11612$Pld94 core-prim . put-string)
        (g$11611$Pld94 core-prim . put-datum)
        (g$11610$Pld94 core-prim . put-char)
        (g$11609$Pld94 core-prim . put-bytevector)
        (g$11608$Pld94 core-prim . port?)
        (g$11607$Pld94 core-prim . port-transcoder)
        (g$11606$Pld94 core-prim . port-position)
        (g$11605$Pld94 core-prim . port-has-set-port-position!?)
        (g$11604$Pld94 core-prim . port-has-port-position?)
        (g$11603$Pld94 core-prim . port-eof?)
        (g$11602$Pld94 core-prim . output-port-buffer-mode)
        (g$6892$Pld94 core-prim . open-string-output-port)
        (g$11601$Pld94 core-prim . open-string-input-port)
        (g$11600$Pld94 core-prim . open-file-output-port)
        (g$11599$Pld94 core-prim . open-file-input/output-port)
        (g$11598$Pld94 core-prim . open-file-input-port)
        (g$11597$Pld94 core-prim . open-bytevector-output-port)
        (g$11596$Pld94 core-prim . open-bytevector-input-port)
        (g$11595$Pld94 core-prim . native-transcoder)
        (g$11594$Pld94 core-prim . native-eol-style)
        (g$11593$Pld94 core-prim . make-transcoder)
        (g$11592$Pld94 core-prim . latin-1-codec)
        (g$6749$Pld94 core-prim . make-i/o-write-error)
        (g$6735$Pld94 core-prim . make-i/o-read-error)
        (g$6854$Pld94 core-prim . make-i/o-port-error)
        (g$6764$Pld94 core-prim . make-i/o-invalid-position-error)
        (g$6781$Pld94 core-prim . make-i/o-filename-error)
        (g$6797$Pld94 core-prim . make-i/o-file-protection-error)
        (g$6811$Pld94 core-prim . make-i/o-file-is-read-only-error)
        (g$6839$Pld94 core-prim . make-i/o-file-does-not-exist-error)
        (g$6825$Pld94 core-prim . make-i/o-file-already-exists-error)
        (g$6721$Pld94 core-prim . make-i/o-error)
        (g$6885$Pld94 core-prim . make-i/o-encoding-error)
        (g$6870$Pld94 core-prim . make-i/o-decoding-error)
        (g$11591$Pld94 core-prim . make-custom-textual-output-port)
        (g$11590$Pld94 core-prim . make-custom-textual-input/output-port)
        (g$11589$Pld94 core-prim . make-custom-textual-input-port)
        (g$11588$Pld94 core-prim . make-custom-binary-output-port)
        (g$11587$Pld94 core-prim . make-custom-binary-input/output-port)
        (g$11586$Pld94 core-prim . make-custom-binary-input-port)
        (g$11585$Pld94 core-prim . make-bytevector)
        (g$11584$Pld94 core-prim . lookahead-u8)
        (g$11583$Pld94 core-prim . lookahead-char)
        (g$6750$Pld94 core-prim . i/o-write-error?)
        (g$6736$Pld94 core-prim . i/o-read-error?)
        (g$6856$Pld94 core-prim . i/o-port-error?)
        (g$6766$Pld94 core-prim . i/o-invalid-position-error?)
        (g$6783$Pld94 core-prim . i/o-filename-error?)
        (g$6798$Pld94 core-prim . i/o-file-protection-error?)
        (g$6812$Pld94 core-prim . i/o-file-is-read-only-error?)
        (g$6840$Pld94 core-prim . i/o-file-does-not-exist-error?)
        (g$6826$Pld94 core-prim . i/o-file-already-exists-error?)
        (g$6722$Pld94 core-prim . i/o-error?)
        (g$6857$Pld94 core-prim . i/o-error-port)
        (g$6784$Pld94 core-prim . i/o-error-filename)
        (g$6887$Pld94 core-prim . i/o-encoding-error?)
        (g$6888$Pld94 core-prim . i/o-encoding-error-char)
        (g$6871$Pld94 core-prim . i/o-decoding-error?)
        (g$11582$Pld94 core-prim . get-u8)
        (g$11581$Pld94 core-prim . get-string-n!)
        (g$11580$Pld94 core-prim . get-string-n)
        (g$11579$Pld94 core-prim . get-string-all)
        (g$11578$Pld94 core-prim . get-line)
        (g$11577$Pld94 core-prim . get-datum)
        (g$11576$Pld94 core-prim . get-char)
        (g$11575$Pld94 core-prim . get-bytevector-some)
        (g$11574$Pld94 core-prim . get-bytevector-n!)
        (g$11573$Pld94 core-prim . get-bytevector-n)
        (g$11572$Pld94 core-prim . get-bytevector-all)
        (g$11571$Pld94 core-prim . flush-output-port)
        (g$11570$Pld94 core-prim . close-port)
        (g$11569$Pld94 core-prim . call-with-string-output-port)
        (g$11568$Pld94 core-prim . call-with-port)
        (g$11567$Pld94 core-prim . call-with-bytevector-output-port)
        (g$11566$Pld94 core-prim . bytevector->string)
        (g$11565$Pld94 core-prim . buffer-mode?)
        (g$11564$Pld94 core-prim . binary-port?)
        (g$8187$Pld94 core-prim . scheme-report-environment)
        (g$6488$Pld94 core-prim . quotient)
        (g$8186$Pld94 core-prim . null-environment)
        (g$6489$Pld94 core-prim . remainder)
        (g$6490$Pld94 core-prim . modulo)
        (g$11563$Pld94 core-prim . inexact->exact)
        (g$11562$Pld94 core-prim . force)
        (g$11561$Pld94 core-prim . exact->inexact)
        (g$11560$Pld94 core-prim . exit)
        (g$11559$Pld94 core-prim . command-line)
        (g$11558$Pld94 core-prim . string-fill!)
        (g$11557$Pld94 core-prim . string-set!)
        (g$11556$Pld94 core-prim . set-cdr!)
        (g$11555$Pld94 core-prim . set-car!)
        (g$6074$Pld94 core-prim . remove)
        (g$6075$Pld94 core-prim . remv)
        (g$6060$Pld94 core-prim . remp)
        (g$6076$Pld94 core-prim . remq)
        (g$6059$Pld94 core-prim . partition)
        (g$11554$Pld94 core-prim . memv)
        (g$11553$Pld94 core-prim . memq)
        (g$6066$Pld94 core-prim . memp)
        (g$6065$Pld94 core-prim . member)
        (g$6070$Pld94 core-prim . exists)
        (g$6069$Pld94 core-prim . for-all)
        (g$6073$Pld94 core-prim . fold-right)
        (g$6072$Pld94 core-prim . fold-left)
        (g$6058$Pld94 core-prim . find)
        (g$6061$Pld94 core-prim . filter)
        (g$6071$Pld94 core-prim . cons*)
        (g$6062$Pld94 core-prim . assv)
        (g$11552$Pld94 core-prim . assq)
        (g$6064$Pld94 core-prim . assp)
        (g$6063$Pld94 core-prim . assoc)
        (g$11551$Pld94 core-prim . with-exception-handler)
        (g$11550$Pld94 core-prim . raise-continuable)
        (g$11549$Pld94 core-prim . raise)
        (g$8189$Pld94 core-prim . eval)
        (g$8185$Pld94 core-prim . environment)
        (g$11548$Pld94 core-prim . make-enumeration)
        (g$11547$Pld94 core-prim . enum-set=?)
        (g$11546$Pld94 core-prim . enum-set-universe)
        (g$11545$Pld94 core-prim . enum-set-union)
        (g$11544$Pld94 core-prim . enum-set-subset?)
        (g$11543$Pld94 core-prim . enum-set-projection)
        (g$11542$Pld94 core-prim . enum-set-member?)
        (g$11541$Pld94 core-prim . enum-set-intersection)
        (g$11540$Pld94 core-prim . enum-set-indexer)
        (g$11539$Pld94 core-prim . enum-set-difference)
        (g$11538$Pld94 core-prim . enum-set-constructor)
        (g$11537$Pld94 core-prim . enum-set-complement)
        (g$11536$Pld94 core-prim . enum-set->list)
        (g$6399$Pld94 core-prim . who-condition?)
        (g$6310$Pld94 core-prim . warning?)
        (g$6352$Pld94 core-prim . violation?)
        (g$6476$Pld94 core-prim . undefined-violation?)
        (g$6460$Pld94 core-prim . syntax-violation?)
        (g$6462$Pld94 core-prim . syntax-violation-subform)
        (g$6461$Pld94 core-prim . syntax-violation-form)
        (g$8203$Pld94 core-prim . syntax-violation)
        (g$11535$Pld94 core-prim . simple-conditions)
        (g$6324$Pld94 core-prim . serious-condition?)
        (g$6414$Pld94 core-prim . non-continuable-violation?)
        (g$6295$Pld94 core-prim . message-condition?)
        (g$6397$Pld94 core-prim . make-who-condition)
        (g$6309$Pld94 core-prim . make-warning)
        (g$6351$Pld94 core-prim . make-violation)
        (g$6475$Pld94 core-prim . make-undefined-violation)
        (g$6457$Pld94 core-prim . make-syntax-violation)
        (g$6323$Pld94 core-prim . make-serious-condition)
        (g$6413$Pld94 core-prim . make-non-continuable-violation)
        (g$6293$Pld94 core-prim . make-message-condition)
        (g$6441$Pld94 core-prim . make-lexical-violation)
        (g$6380$Pld94 core-prim . make-irritants-condition)
        (g$6427$Pld94 core-prim . make-implementation-restriction-violation)
        (g$6337$Pld94 core-prim . make-error)
        (g$6365$Pld94 core-prim . make-assertion-violation)
        (g$6442$Pld94 core-prim . lexical-violation?)
        (g$6382$Pld94 core-prim . irritants-condition?)
        (g$6428$Pld94 core-prim . implementation-restriction-violation?)
        (g$6338$Pld94 core-prim . error?)
        (g$6400$Pld94 core-prim . condition-who)
        (g$11534$Pld94 core-prim . condition-predicate)
        (g$6296$Pld94 core-prim . condition-message)
        (g$6383$Pld94 core-prim . condition-irritants)
        (g$11533$Pld94 core-prim . condition-accessor)
        (g$11532$Pld94 core-prim . condition)
        (g$6366$Pld94 core-prim . assertion-violation?)
        (g$11531$Pld94 core-prim . condition?)
        (g$11530$Pld94 core-prim . utf32->string)
        (g$11529$Pld94 core-prim . utf16->string)
        (g$11528$Pld94 core-prim . utf8->string)
        (g$11527$Pld94 core-prim . uint-list->bytevector)
        (g$11526$Pld94 core-prim . u8-list->bytevector)
        (g$11525$Pld94 core-prim . string->utf8)
        (g$11524$Pld94 core-prim . string->utf32)
        (g$11523$Pld94 core-prim . string->utf16)
        (g$11522$Pld94 core-prim . sint-list->bytevector)
        (g$6150$Pld94 core-prim . native-endianness)
        (g$11521$Pld94 core-prim . bytevector?)
        (g$11520$Pld94 core-prim . bytevector=?)
        (g$11519$Pld94 core-prim . bytevector-uint-set!)
        (g$11518$Pld94 core-prim . bytevector-uint-ref)
        (g$11517$Pld94 core-prim . bytevector-u8-set!)
        (g$11516$Pld94 core-prim . bytevector-u8-ref)
        (g$6171$Pld94 core-prim . bytevector-u64-set!)
        (g$6167$Pld94 core-prim . bytevector-u64-ref)
        (g$6173$Pld94 core-prim . bytevector-u64-native-set!)
        (g$6169$Pld94 core-prim . bytevector-u64-native-ref)
        (g$6163$Pld94 core-prim . bytevector-u32-set!)
        (g$6159$Pld94 core-prim . bytevector-u32-ref)
        (g$6165$Pld94 core-prim . bytevector-u32-native-set!)
        (g$6161$Pld94 core-prim . bytevector-u32-native-ref)
        (g$6155$Pld94 core-prim . bytevector-u16-set!)
        (g$6151$Pld94 core-prim . bytevector-u16-ref)
        (g$6157$Pld94 core-prim . bytevector-u16-native-set!)
        (g$6153$Pld94 core-prim . bytevector-u16-native-ref)
        (g$11515$Pld94 core-prim . bytevector-sint-set!)
        (g$11514$Pld94 core-prim . bytevector-sint-ref)
        (g$11513$Pld94 core-prim . bytevector-s8-set!)
        (g$11512$Pld94 core-prim . bytevector-s8-ref)
        (g$6172$Pld94 core-prim . bytevector-s64-set!)
        (g$6168$Pld94 core-prim . bytevector-s64-ref)
        (g$6174$Pld94 core-prim . bytevector-s64-native-set!)
        (g$6170$Pld94 core-prim . bytevector-s64-native-ref)
        (g$6164$Pld94 core-prim . bytevector-s32-set!)
        (g$6160$Pld94 core-prim . bytevector-s32-ref)
        (g$6166$Pld94 core-prim . bytevector-s32-native-set!)
        (g$6162$Pld94 core-prim . bytevector-s32-native-ref)
        (g$6156$Pld94 core-prim . bytevector-s16-set!)
        (g$6152$Pld94 core-prim . bytevector-s16-ref)
        (g$6158$Pld94 core-prim . bytevector-s16-native-set!)
        (g$6154$Pld94 core-prim . bytevector-s16-native-ref)
        (g$11511$Pld94 core-prim . bytevector-length)
        (g$11510$Pld94 core-prim . bytevector-ieee-single-set!)
        (g$11509$Pld94 core-prim . bytevector-ieee-single-ref)
        (g$6177$Pld94 core-prim . bytevector-ieee-single-native-set!)
        (g$6175$Pld94 core-prim . bytevector-ieee-single-native-ref)
        (g$11508$Pld94 core-prim . bytevector-ieee-double-set!)
        (g$11507$Pld94 core-prim . bytevector-ieee-double-ref)
        (g$6178$Pld94 core-prim . bytevector-ieee-double-native-set!)
        (g$6176$Pld94 core-prim . bytevector-ieee-double-native-ref)
        (g$11506$Pld94 core-prim . bytevector-fill!)
        (g$11505$Pld94 core-prim . bytevector-copy!)
        (g$11504$Pld94 core-prim . bytevector-copy)
        (g$11503$Pld94 core-prim . bytevector->uint-list)
        (g$11502$Pld94 core-prim . bytevector->u8-list)
        (g$11501$Pld94 core-prim . bytevector->sint-list)
        (g$6707$Pld94 core-prim . no-nans-violation?)
        (g$6693$Pld94 core-prim . no-infinities-violation?)
        (g$6706$Pld94 core-prim . make-no-nans-violation)
        (g$6692$Pld94 core-prim . make-no-infinities-violation)
        (g$11500$Pld94 core-prim . real->flonum)
        (g$11499$Pld94 core-prim . flzero?)
        (g$11498$Pld94 core-prim . fltruncate)
        (g$11497$Pld94 core-prim . fltan)
        (g$11496$Pld94 core-prim . flsqrt)
        (g$11495$Pld94 core-prim . flsin)
        (g$11494$Pld94 core-prim . flround)
        (g$11493$Pld94 core-prim . flpositive?)
        (g$11492$Pld94 core-prim . flonum?)
        (g$11491$Pld94 core-prim . flodd?)
        (g$11490$Pld94 core-prim . flnumerator)
        (g$11489$Pld94 core-prim . flnegative?)
        (g$11488$Pld94 core-prim . flnan?)
        (g$11487$Pld94 core-prim . flmod0)
        (g$11486$Pld94 core-prim . flmod)
        (g$11485$Pld94 core-prim . flmin)
        (g$11484$Pld94 core-prim . flmax)
        (g$11483$Pld94 core-prim . fllog)
        (g$11482$Pld94 core-prim . flinteger?)
        (g$11481$Pld94 core-prim . flinfinite?)
        (g$11480$Pld94 core-prim . flfloor)
        (g$11479$Pld94 core-prim . flfinite?)
        (g$11478$Pld94 core-prim . flexpt)
        (g$11477$Pld94 core-prim . flexp)
        (g$11476$Pld94 core-prim . fleven?)
        (g$11475$Pld94 core-prim . fldiv0-and-mod0)
        (g$11474$Pld94 core-prim . fldiv0)
        (g$11473$Pld94 core-prim . fldiv-and-mod)
        (g$11472$Pld94 core-prim . fldiv)
        (g$11471$Pld94 core-prim . fldenominator)
        (g$11470$Pld94 core-prim . flcos)
        (g$11469$Pld94 core-prim . flceiling)
        (g$11468$Pld94 core-prim . flatan)
        (g$11467$Pld94 core-prim . flasin)
        (g$11466$Pld94 core-prim . flacos)
        (g$11465$Pld94 core-prim . flabs)
        (g$11464$Pld94 core-prim . fl>?)
        (g$11463$Pld94 core-prim . fl>=?)
        (g$11462$Pld94 core-prim . fl=?)
        (g$11461$Pld94 core-prim . fl<?)
        (g$11460$Pld94 core-prim . fl<=?)
        (g$11459$Pld94 core-prim . fl/)
        (g$11458$Pld94 core-prim . fl-)
        (g$11457$Pld94 core-prim . fl+)
        (g$11456$Pld94 core-prim . fl*)
        (g$11455$Pld94 core-prim . fixnum->flonum)
        (g$11454$Pld94 core-prim . fxzero?)
        (g$11453$Pld94 core-prim . fxxor)
        (g$6638$Pld94 core-prim . fxrotate-bit-field)
        (g$11452$Pld94 core-prim . fxreverse-bit-field)
        (g$11451$Pld94 core-prim . fxpositive?)
        (g$11450$Pld94 core-prim . fxodd?)
        (g$11449$Pld94 core-prim . fxnot)
        (g$11448$Pld94 core-prim . fxnegative?)
        (g$11447$Pld94 core-prim . fxmod0)
        (g$11446$Pld94 core-prim . fxmod)
        (g$11445$Pld94 core-prim . fxmin)
        (g$11444$Pld94 core-prim . fxmax)
        (g$11443$Pld94 core-prim . fxlength)
        (g$11442$Pld94 core-prim . fxior)
        (g$6632$Pld94 core-prim . fxif)
        (g$11441$Pld94 core-prim . fxfirst-bit-set)
        (g$11440$Pld94 core-prim . fxeven?)
        (g$11439$Pld94 core-prim . fxdiv0-and-mod0)
        (g$11438$Pld94 core-prim . fxdiv0)
        (g$11437$Pld94 core-prim . fxdiv-and-mod)
        (g$11436$Pld94 core-prim . fxdiv)
        (g$6635$Pld94 core-prim . fxcopy-bit-field)
        (g$6633$Pld94 core-prim . fxcopy-bit)
        (g$11435$Pld94 core-prim . fxbit-set?)
        (g$6634$Pld94 core-prim . fxbit-field)
        (g$11434$Pld94 core-prim . fxbit-count)
        (g$6637$Pld94 core-prim . fxarithmetic-shift-right)
        (g$6636$Pld94 core-prim . fxarithmetic-shift-left)
        (g$11433$Pld94 core-prim . fxarithmetic-shift)
        (g$11432$Pld94 core-prim . fxand)
        (g$11431$Pld94 core-prim . fx>?)
        (g$11430$Pld94 core-prim . fx>=?)
        (g$11429$Pld94 core-prim . fx=?)
        (g$11428$Pld94 core-prim . fx<?)
        (g$11427$Pld94 core-prim . fx<=?)
        (g$11426$Pld94 core-prim . fx-/carry)
        (g$11425$Pld94 core-prim . fx-)
        (g$11424$Pld94 core-prim . fx+/carry)
        (g$11423$Pld94 core-prim . fx+)
        (g$11422$Pld94 core-prim . fx*/carry)
        (g$11421$Pld94 core-prim . fx*)
        (g$11420$Pld94 core-prim . greatest-fixnum)
        (g$11419$Pld94 core-prim . least-fixnum)
        (g$11418$Pld94 core-prim . fixnum-width)
        (g$11417$Pld94 core-prim . fixnum?)
        (g$6586$Pld94 core-prim . bitwise-rotate-bit-field)
        (g$6587$Pld94 core-prim . bitwise-reverse-bit-field)
        (g$11416$Pld94 core-prim . bitwise-length)
        (g$6580$Pld94 core-prim . bitwise-if)
        (g$11415$Pld94 core-prim . bitwise-first-bit-set)
        (g$6583$Pld94 core-prim . bitwise-copy-bit-field)
        (g$6581$Pld94 core-prim . bitwise-copy-bit)
        (g$11414$Pld94 core-prim . bitwise-bit-set?)
        (g$11413$Pld94 core-prim . bitwise-bit-field)
        (g$11412$Pld94 core-prim . bitwise-bit-count)
        (g$11411$Pld94 core-prim . bitwise-xor)
        (g$11410$Pld94 core-prim . bitwise-ior)
        (g$11409$Pld94 core-prim . bitwise-and)
        (g$11408$Pld94 core-prim . bitwise-not)
        (g$6585$Pld94 core-prim . bitwise-arithmetic-shift-right)
        (g$6584$Pld94 core-prim . bitwise-arithmetic-shift-left)
        (g$11407$Pld94 core-prim . bitwise-arithmetic-shift)
        (g$11406$Pld94 core-prim . zero?)
        (g$11405$Pld94 core-prim . vector?)
        (g$11404$Pld94 core-prim . vector-set!)
        (g$11403$Pld94 core-prim . vector-ref)
        (g$11402$Pld94 core-prim . vector-map)
        (g$11401$Pld94 core-prim . vector-length)
        (g$11400$Pld94 core-prim . vector-for-each)
        (g$11399$Pld94 core-prim . vector-fill!)
        (g$11398$Pld94 core-prim . vector->list)
        (g$11397$Pld94 core-prim . vector)
        (g$11396$Pld94 core-prim . values)
        (g$11395$Pld94 core-prim . truncate)
        (g$11394$Pld94 core-prim . tan)
        (g$11393$Pld94 core-prim . symbol?)
        (g$11392$Pld94 core-prim . symbol=?)
        (g$11391$Pld94 core-prim . symbol->string)
        (g$11390$Pld94 core-prim . substring)
        (g$11389$Pld94 core-prim . string?)
        (g$11388$Pld94 core-prim . string>?)
        (g$11387$Pld94 core-prim . string>=?)
        (g$11386$Pld94 core-prim . string=?)
        (g$11385$Pld94 core-prim . string<?)
        (g$11384$Pld94 core-prim . string<=?)
        (g$11383$Pld94 core-prim . string-ref)
        (g$11382$Pld94 core-prim . string-length)
        (g$11381$Pld94 core-prim . string-for-each)
        (g$11380$Pld94 core-prim . string-copy)
        (g$11379$Pld94 core-prim . string-append)
        (g$11378$Pld94 core-prim . string->symbol)
        (g$11377$Pld94 core-prim . string->number)
        (g$11376$Pld94 core-prim . string->list)
        (g$11375$Pld94 core-prim . string)
        (g$11374$Pld94 core-prim . sqrt)
        (g$11373$Pld94 core-prim . sin)
        (g$11372$Pld94 core-prim . round)
        (g$11371$Pld94 core-prim . reverse)
        (g$11370$Pld94 core-prim . real?)
        (g$11369$Pld94 core-prim . real-valued?)
        (g$11368$Pld94 core-prim . real-part)
        (g$5611$Pld94 core-prim . rationalize)
        (g$11367$Pld94 core-prim . rational?)
        (g$11366$Pld94 core-prim . rational-valued?)
        (g$11365$Pld94 core-prim . procedure?)
        (g$11364$Pld94 core-prim . positive?)
        (g$11363$Pld94 core-prim . pair?)
        (g$11362$Pld94 core-prim . odd?)
        (g$11361$Pld94 core-prim . numerator)
        (g$11360$Pld94 core-prim . number?)
        (g$11359$Pld94 core-prim . number->string)
        (g$11358$Pld94 core-prim . null?)
        (g$11357$Pld94 core-prim . not)
        (g$11356$Pld94 core-prim . negative?)
        (g$11355$Pld94 core-prim . nan?)
        (g$11354$Pld94 core-prim . min)
        (g$11353$Pld94 core-prim . max)
        (g$11352$Pld94 core-prim . map)
        (g$11351$Pld94 core-prim . make-vector)
        (g$11350$Pld94 core-prim . make-string)
        (g$11349$Pld94 core-prim . make-rectangular)
        (g$11348$Pld94 core-prim . make-polar)
        (g$11347$Pld94 core-prim . magnitude)
        (g$11346$Pld94 core-prim . log)
        (g$11345$Pld94 core-prim . list?)
        (g$11344$Pld94 core-prim . list-tail)
        (g$11343$Pld94 core-prim . list-ref)
        (g$11342$Pld94 core-prim . list->vector)
        (g$11341$Pld94 core-prim . list->string)
        (g$11340$Pld94 core-prim . list)
        (g$11339$Pld94 core-prim . length)
        (g$11338$Pld94 core-prim . lcm)
        (g$11337$Pld94 core-prim . integer?)
        (g$11336$Pld94 core-prim . integer-valued?)
        (g$11335$Pld94 core-prim . integer->char)
        (g$11334$Pld94 core-prim . infinite?)
        (g$11333$Pld94 core-prim . inexact?)
        (g$11332$Pld94 core-prim . inexact)
        (g$11331$Pld94 core-prim . imag-part)
        (g$11330$Pld94 core-prim . gcd)
        (g$11329$Pld94 core-prim . for-each)
        (g$11328$Pld94 core-prim . floor)
        (g$11327$Pld94 core-prim . finite?)
        (g$11326$Pld94 core-prim . expt)
        (g$11325$Pld94 core-prim . exp)
        (g$11324$Pld94 core-prim . exact?)
        (g$11323$Pld94 core-prim . exact-integer-sqrt)
        (g$11322$Pld94 core-prim . exact)
        (g$11321$Pld94 core-prim . even?)
        (g$11320$Pld94 core-prim . error)
        (g$11319$Pld94 core-prim . eqv?)
        (g$11318$Pld94 core-prim . equal?)
        (g$11317$Pld94 core-prim . eq?)
        (g$11316$Pld94 core-prim . dynamic-wind)
        (g$11315$Pld94 core-prim . div0-and-mod0)
        (g$11314$Pld94 core-prim . mod0)
        (g$11313$Pld94 core-prim . div0)
        (g$11312$Pld94 core-prim . div-and-mod)
        (g$11311$Pld94 core-prim . mod)
        (g$11310$Pld94 core-prim . div)
        (g$11309$Pld94 core-prim . denominator)
        (g$11308$Pld94 core-prim . cos)
        (g$11307$Pld94 core-prim . cons)
        (g$11306$Pld94 core-prim . complex?)
        (g$11305$Pld94 core-prim . char?)
        (g$11304$Pld94 core-prim . char>?)
        (g$11303$Pld94 core-prim . char>=?)
        (g$11302$Pld94 core-prim . char=?)
        (g$11301$Pld94 core-prim . char<?)
        (g$11300$Pld94 core-prim . char<=?)
        (g$11299$Pld94 core-prim . char->integer)
        (g$11298$Pld94 core-prim . ceiling)
        (g$11297$Pld94 core-prim . call-with-values)
        (g$11296$Pld94 core-prim . call/cc)
        (g$11295$Pld94 core-prim . call-with-current-continuation)
        (g$5610$Pld94 core-prim . cddddr)
        (g$5609$Pld94 core-prim . cdddar)
        (g$5608$Pld94 core-prim . cddadr)
        (g$5607$Pld94 core-prim . cddaar)
        (g$5606$Pld94 core-prim . cdaddr)
        (g$5605$Pld94 core-prim . cdadar)
        (g$5604$Pld94 core-prim . cdaadr)
        (g$5603$Pld94 core-prim . cdaaar)
        (g$5602$Pld94 core-prim . cadddr)
        (g$5601$Pld94 core-prim . caddar)
        (g$5600$Pld94 core-prim . cadadr)
        (g$5599$Pld94 core-prim . cadaar)
        (g$5598$Pld94 core-prim . caaddr)
        (g$5597$Pld94 core-prim . caadar)
        (g$5596$Pld94 core-prim . caaadr)
        (g$5595$Pld94 core-prim . caaaar)
        (g$5594$Pld94 core-prim . cdddr)
        (g$5593$Pld94 core-prim . cddar)
        (g$5592$Pld94 core-prim . cdadr)
        (g$5591$Pld94 core-prim . cdaar)
        (g$5590$Pld94 core-prim . caddr)
        (g$5589$Pld94 core-prim . cadar)
        (g$5588$Pld94 core-prim . caadr)
        (g$5587$Pld94 core-prim . caaar)
        (g$5586$Pld94 core-prim . cddr)
        (g$5585$Pld94 core-prim . cdar)
        (g$5584$Pld94 core-prim . cadr)
        (g$5583$Pld94 core-prim . caar)
        (g$11294$Pld94 core-prim . cdr)
        (g$11293$Pld94 core-prim . car)
        (g$11292$Pld94 core-prim . boolean?)
        (g$11291$Pld94 core-prim . boolean=?)
        (g$11290$Pld94 core-prim . atan)
        (g$11289$Pld94 core-prim . assertion-violation)
        (g$11288$Pld94 core-prim . asin)
        (g$11287$Pld94 core-prim . apply)
        (g$11286$Pld94 core-prim . append)
        (g$11285$Pld94 core-prim . angle)
        (g$11284$Pld94 core-prim . acos)
        (g$11283$Pld94 core-prim . abs)
        (g$11282$Pld94 core-prim . /)
        (g$11281$Pld94 core-prim . *)
        (g$11280$Pld94 core-prim . -)
        (g$11279$Pld94 core-prim . +)
        (g$11278$Pld94 core-prim . >=)
        (g$11277$Pld94 core-prim . >)
        (g$11276$Pld94 core-prim . =)
        (g$11275$Pld94 core-prim . <=)
        (g$11274$Pld94 core-prim . <)
        (g$11273$Pld94 core-prim . make-record-printer)
        (g$11272$Pld94 core-prim . eqv-hash)
        (g$11271$Pld94 core-prim . eq-hash)
        (g$11270$Pld94 core-prim . reverse!)
        (g$6901$Pld94 core-prim . printf)
        (g$6902$Pld94 core-prim . fprintf)
        (g$6903$Pld94 core-prim . format)
        (g$11269$Pld94 core-prim . get-arity)
        (g$11268$Pld94 core-prim . gc-collect)
        (g$11267$Pld94 core-prim . clr-type?)
        (g$11266$Pld94 core-prim . get-clr-type)
        (g$11265$Pld94 core-prim . vector-append)
        (g$11264$Pld94 core-prim . vector-filter)
        (g$11263$Pld94 core-prim . vector-reverse!)
        (g$11262$Pld94 core-prim . vector-contains?)
        (g$11261$Pld94 core-prim . vector-index-of)
        (g$11260$Pld94 core-prim . vector-copy)
        (g$11259$Pld94 core-prim . vector-binary-search)
        (g$11258$Pld94 core-prim . get-output-string)
        (g$11257$Pld94 core-prim . open-output-string)
        (g$11256$Pld94 core-prim . open-input-string)
        (g$11255$Pld94 core-prim . string-format)
        (g$11120$Pld94 core-prim . trace-printer)
        (g$11254$Pld94 core-prim . make-traced-procedure)
        (g$6922$Pld94 core-prim . make-traced-macro)
        (g$11253$Pld94 core-prim . pmap)
        (g$11252$Pld94 core-prim . time-it)
        (g$6927$Pld94 core-prim . make-parameter)
        (g$11251$Pld94 core-prim . library-locator)
        (g$11250$Pld94 core-prim . get-library-paths)
        (g$8183$Pld94 core-prim . environment-symbols)
        (g$8182$Pld94 core-prim . interaction-environment-symbols)
        (g$7352$Pld94 core-prim . library-path)
        (g$7353$Pld94 core-prim . library-extensions)
        (g$7373$Pld94 core-prim . installed-libraries)
        (g$8188$Pld94 core-prim . expand)
        (g$11249$Pld94 $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11248$Pld94 $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11247$Pld94 $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11246$Pld94 $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11245$Pld94 $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11244$Pld94
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11243$Pld94
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11242$Pld94
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11241$Pld94
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11240$Pld94 $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11239$Pld94
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11238$Pld94 $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11237$Pld94 $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11236$Pld94 $core-rtd &i/o-rtd &i/o-rcd)
        (g$11235$Pld94 $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11234$Pld94 $core-rtd &undefined-rtd &undefined-rcd)
        (g$11233$Pld94 $core-rtd &syntax-rtd &syntax-rcd)
        (g$11232$Pld94 $core-rtd &lexical-rtd &lexical-rcd)
        (g$11231$Pld94
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11230$Pld94 $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11229$Pld94 $core-rtd &who-rtd &who-rcd)
        (g$11228$Pld94 $core-rtd &irritants-rtd &irritants-rcd)
        (g$11227$Pld94 $core-rtd &assertion-rtd &assertion-rcd)
        (g$11226$Pld94 $core-rtd &violation-rtd &violation-rcd)
        (g$11225$Pld94 $core-rtd &error-rtd &error-rcd)
        (g$11224$Pld94 $core-rtd &serious-rtd &serious-rcd)
        (g$11223$Pld94 $core-rtd &warning-rtd &warning-rcd)
        (g$11222$Pld94 $core-rtd &message-rtd &message-rcd)
        (g$11221$Pld94 $core-rtd &condition-rtd &condition-rcd)
        (g$11220$Pld94 macro . define-condition-type)
        (g$11219$Pld94 macro . define-enumeration)
        (g$11218$Pld94 macro . define-record-type)
        (g$11217$Pld94 macro . parent-rtd)
        (g$11216$Pld94 macro . nongenerative)
        (g$11215$Pld94 macro . opaque)
        (g$11214$Pld94 macro . sealed)
        (g$11213$Pld94 macro . protocol)
        (g$11212$Pld94 macro . parent)
        (g$11211$Pld94 macro . immutable)
        (g$11210$Pld94 macro . mutable)
        (g$11209$Pld94 macro . fields)
        (g$11208$Pld94 macro . error-handling-mode)
        (g$11207$Pld94 macro . file-options)
        (g$11206$Pld94 macro . buffer-mode)
        (g$11205$Pld94 macro . eol-style)
        (g$11204$Pld94 macro . guard)
        (g$11203$Pld94 macro . trace-letrec-syntax)
        (g$11202$Pld94 macro . trace-let-syntax)
        (g$11201$Pld94 macro . trace-define-syntax)
        (g$11200$Pld94 macro . trace-define)
        (g$11199$Pld94 macro . trace-lambda)
        (g$11198$Pld94 macro . unsyntax-splicing)
        (g$11197$Pld94 macro . unsyntax)
        (g$11196$Pld94 macro . unquote-splicing)
        (g$11195$Pld94 macro . unquote)
        (g$11194$Pld94 macro . _)
        (g$11193$Pld94 macro . else)
        (g$11192$Pld94 macro . =>)
        (g$11191$Pld94 macro . ...)
        (g$11190$Pld94 macro . assert)
        (g$11189$Pld94 macro . endianness)
        (g$11188$Pld94 macro . delay)
        (g$11187$Pld94 macro . time)
        (g$11186$Pld94 macro . or)
        (g$11185$Pld94 macro . and)
        (g$11184$Pld94 macro . do)
        (g$11183$Pld94 macro . cond)
        (g$11182$Pld94 macro . let*)
        (g$11181$Pld94 macro . let)
        (g$11180$Pld94 macro . identifier-syntax)
        (g$11179$Pld94 macro . with-syntax)
        (g$11178$Pld94 macro . quasisyntax)
        (g$11177$Pld94 macro . quasiquote)
        (g$11176$Pld94 macro . syntax-rules)
        (g$11175$Pld94 macro . include-into)
        (g$11174$Pld94 macro . include)
        (g$11173$Pld94 macro . define-struct)
        (g$11172$Pld94 macro . let-values)
        (g$11171$Pld94 macro . let*-values)
        (g$11170$Pld94 core-macro . record-constructor-descriptor)
        (g$11169$Pld94 core-macro . record-type-descriptor)
        (g$11168$Pld94 core-macro . fluid-let-syntax)
        (g$11167$Pld94 core-macro . case)
        (g$11166$Pld94 core-macro . parameterize)
        (g$11165$Pld94 core-macro . unless)
        (g$11164$Pld94 core-macro . when)
        (g$11163$Pld94 core-macro . if)
        (g$11162$Pld94 core-macro . letrec*)
        (g$11161$Pld94 core-macro . letrec)
        (g$11160$Pld94 core-macro . type-descriptor)
        (g$11159$Pld94 core-macro . case-lambda)
        (g$11158$Pld94 core-macro . lambda)
        (g$11157$Pld94 core-macro . syntax)
        (g$11156$Pld94 core-macro . syntax-case)
        (g$11155$Pld94 core-macro . quote)
        (g$11154$Pld94 core-macro . foreign-call)
        (g$11153$Pld94 letrec-syntax)
        (g$11152$Pld94 let-syntax)
        (g$11151$Pld94 set!)
        (g$11150$Pld94 import)
        (g$11149$Pld94 library)
        (g$11148$Pld94 begin)
        (g$11147$Pld94 module)
        (g$11146$Pld94 define-syntax)
        (g$11145$Pld94 define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6734$Pld94
      'g$11838$Pld94
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$11717$Pld94)
        (eval-core . g$11716$Pld94)
        (set-symbol-value! . g$11715$Pld94)
        (symbol-value . g$11714$Pld94)
        (gensym . g$11712$Pld94)
        (void . g$11711$Pld94))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$10747$Pld94
     g$trace-printer$10774$Pld94
     (g$make-parameter$6189$Pld94 write))
   (g$local-library-path$10748$Pld94
     g$local-library-path$10775$Pld94
     (case-lambda
       ((g$filename$10757$Pld94)
        (cons
          (g$get-directory-name$5235$Pld94 g$filename$10757$Pld94)
          (g$library-path$6718$Pld94)))))
   (g$load$10749$Pld94
     g$load$10776$Pld94
     (case-lambda
       ((g$filename$10758$Pld94)
        (begin
          (g$load-r6rs-top-level$10755$Pld94 g$filename$10758$Pld94 'load)
          (void)))))
   (g$ironscheme-build$10750$Pld94
     g$ironscheme-build$10777$Pld94
     (case-lambda (() (g$load$10749$Pld94 '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$10751$Pld94
     g$eval-top-level$10778$Pld94
     (case-lambda
       ((g$x$10759$Pld94)
        (g$eval$10725$Pld94
          g$x$10759$Pld94
          (g$interaction-environment$10745$Pld94)))))
   (g$compile-system-libraries$10752$Pld94
     g$compile-system-libraries$10779$Pld94
     (case-lambda
       (()
        (g$eval-top-level$10751$Pld94
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$10753$Pld94
     g$compile$10780$Pld94
     (case-lambda
       ((g$filename$10760$Pld94)
        (g$load-r6rs-top-level$10755$Pld94 g$filename$10760$Pld94 'compile))))
   (g$compile->closure$10754$Pld94
     g$compile->closure$10781$Pld94
     (case-lambda
       ((g$filename$10761$Pld94)
        (g$load-r6rs-top-level$10755$Pld94 g$filename$10761$Pld94 'closure))))
   (g$load-r6rs-top-level$10755$Pld94
     g$load-r6rs-top-level$10782$Pld94
     (case-lambda
       ((g$filename$10762$Pld94 g$how$10763$Pld94)
        ((case-lambda
           ((g$library-path$10766$Pld94 g$library-path$10767$Pld94)
            ((case-lambda
               ((g$swap$10768$Pld94)
                (dynamic-wind
                  g$swap$10768$Pld94
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$10769$Pld94)
                         ((case-lambda
                            ((g$t$10770$Pld94)
                             (if (eqv? g$t$10770$Pld94 'closure)
                               (g$pre-compile-r6rs-top-level$10744$Pld94
                                 g$x*$10769$Pld94)
                               (if (eqv? g$t$10770$Pld94 'load)
                                 ((g$compile-r6rs-top-level$10743$Pld94
                                    g$x*$10769$Pld94))
                                 (if (eqv? g$t$10770$Pld94 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$10743$Pld94
                                       g$x*$10769$Pld94)
                                     (g$serialize-all$6722$Pld94
                                       serialize-library
                                       g$compile-core-expr$6436$Pld94))
                                   (void))))))
                          g$how$10763$Pld94)))
                      (with-input-from-file
                        g$filename$10762$Pld94
                        (case-lambda
                          (()
                           ((letrec ((g$f$10771$Pld94
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$10772$Pld94)
                                              (if (eof-object? g$x$10772$Pld94)
                                                '()
                                                (cons
                                                  g$x$10772$Pld94
                                                  (g$f$10771$Pld94)))))
                                           (read-annotated))))))
                              g$f$10771$Pld94))))))))
                  g$swap$10768$Pld94)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$10773$Pld94)
                    (begin
                      (g$library-path$10766$Pld94 g$library-path$10767$Pld94)
                      (set! g$library-path$10767$Pld94 g$t$10773$Pld94))))
                 (g$library-path$10766$Pld94)))))))
         g$library-path$6718$Pld94
         (g$local-library-path$10748$Pld94 g$filename$10762$Pld94))))))
  (begin
    (g$current-precompiled-library-loader$6723$Pld94
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$10756$Pld94)
         (if (g$serious-condition?$5618$Pld94 g$ex$10756$Pld94)
           (raise g$ex$10756$Pld94)
           (begin (display g$ex$10756$Pld94) (newline))))))
    (set-symbol-value! 'load g$load$10749$Pld94)
    (set-symbol-value! 'compile g$compile$10753$Pld94)
    (set-symbol-value! 'compile->closure g$compile->closure$10754$Pld94)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$10751$Pld94)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$10718$Pld94)
    (set-symbol-value! 'expanded2core g$expanded->core$6435$Pld94)
    (set-symbol-value! 'trace-printer g$trace-printer$10747$Pld94)
    (g$library-path$6718$Pld94 (get-library-paths))))

