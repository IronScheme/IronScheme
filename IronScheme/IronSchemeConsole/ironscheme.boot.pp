;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$11659$1i4eWV
     g$list-tail$11815$1i4eWV
     (case-lambda
       ((g$lst$11687$1i4eWV g$index$11688$1i4eWV)
        (if ((case-lambda
               ((g$t$11689$1i4eWV)
                (if g$t$11689$1i4eWV
                  g$t$11689$1i4eWV
                  (begin
                    '#f
                    (g$negative?$12714$1i4eWV g$index$11688$1i4eWV)))))
             (null? g$lst$11687$1i4eWV))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$11687$1i4eWV
            g$index$11688$1i4eWV)
          (if (g$zero?$12715$1i4eWV g$index$11688$1i4eWV)
            g$lst$11687$1i4eWV
            (g$list-tail$11659$1i4eWV
              (cdr g$lst$11687$1i4eWV)
              (- g$index$11688$1i4eWV '1)))))))
   (g$list-ref$11660$1i4eWV
     g$list-ref$11816$1i4eWV
     (case-lambda
       ((g$lst$11690$1i4eWV g$index$11691$1i4eWV)
        (car (g$list-tail$11659$1i4eWV
               g$lst$11690$1i4eWV
               g$index$11691$1i4eWV)))))
   (g$last-pair$11661$1i4eWV
     g$last-pair$11817$1i4eWV
     (case-lambda
       ((g$lst$11692$1i4eWV)
        (if (null? g$lst$11692$1i4eWV)
          g$lst$11692$1i4eWV
          (if (null? (cdr g$lst$11692$1i4eWV))
            g$lst$11692$1i4eWV
            (g$last-pair$11661$1i4eWV (cdr g$lst$11692$1i4eWV)))))))
   (g$make-list$11662$1i4eWV
     g$make-list$11818$1i4eWV
     (case-lambda
       ((g$n$11693$1i4eWV)
        (vector->list (make-vector g$n$11693$1i4eWV)))
       ((g$n$11694$1i4eWV g$fill$11695$1i4eWV)
        (vector->list
          (make-vector g$n$11694$1i4eWV g$fill$11695$1i4eWV)))))
   (g$find$11663$1i4eWV
     g$find$11819$1i4eWV
     (case-lambda
       ((g$proc$11696$1i4eWV g$l$11697$1i4eWV)
        (if (null? g$l$11697$1i4eWV)
          '#f
          ((case-lambda
             ((g$e$11698$1i4eWV g$r$11699$1i4eWV g$proc$11700$1i4eWV)
              (if (g$proc$11700$1i4eWV g$e$11698$1i4eWV)
                g$e$11698$1i4eWV
                (g$find$11663$1i4eWV
                  g$proc$11700$1i4eWV
                  g$r$11699$1i4eWV))))
           (car g$l$11697$1i4eWV)
           (cdr g$l$11697$1i4eWV)
           g$proc$11696$1i4eWV)))))
   (g$partition$11664$1i4eWV
     g$partition$11820$1i4eWV
     (case-lambda
       ((g$proc$11701$1i4eWV g$l$11702$1i4eWV)
        ((letrec ((g$f$11703$1i4eWV
                    (case-lambda
                      ((g$l$11704$1i4eWV
                         g$a$11705$1i4eWV
                         g$b$11706$1i4eWV)
                       (if (null? g$l$11704$1i4eWV)
                         (values
                           (reverse! g$a$11705$1i4eWV)
                           (reverse! g$b$11706$1i4eWV))
                         ((case-lambda
                            ((g$e$11707$1i4eWV)
                             (if (g$proc$11701$1i4eWV g$e$11707$1i4eWV)
                               (g$f$11703$1i4eWV
                                 (cdr g$l$11704$1i4eWV)
                                 (cons
                                   g$e$11707$1i4eWV
                                   g$a$11705$1i4eWV)
                                 g$b$11706$1i4eWV)
                               (g$f$11703$1i4eWV
                                 (cdr g$l$11704$1i4eWV)
                                 g$a$11705$1i4eWV
                                 (cons
                                   g$e$11707$1i4eWV
                                   g$b$11706$1i4eWV)))))
                          (car g$l$11704$1i4eWV)))))))
           g$f$11703$1i4eWV)
         g$l$11702$1i4eWV
         '()
         '()))))
   (g$remp$11665$1i4eWV
     g$remp$11821$1i4eWV
     (case-lambda
       ((g$proc$11708$1i4eWV g$l$11709$1i4eWV)
        ((letrec ((g$f$11710$1i4eWV
                    (case-lambda
                      ((g$l$11711$1i4eWV g$a$11712$1i4eWV)
                       (if (null? g$l$11711$1i4eWV)
                         (reverse! g$a$11712$1i4eWV)
                         ((case-lambda
                            ((g$e$11713$1i4eWV)
                             (if (g$proc$11708$1i4eWV g$e$11713$1i4eWV)
                               (g$f$11710$1i4eWV
                                 (cdr g$l$11711$1i4eWV)
                                 g$a$11712$1i4eWV)
                               (g$f$11710$1i4eWV
                                 (cdr g$l$11711$1i4eWV)
                                 (cons
                                   g$e$11713$1i4eWV
                                   g$a$11712$1i4eWV)))))
                          (car g$l$11711$1i4eWV)))))))
           g$f$11710$1i4eWV)
         g$l$11709$1i4eWV
         '()))))
   (g$filter$11666$1i4eWV
     g$filter$11822$1i4eWV
     (case-lambda
       ((g$proc$11714$1i4eWV g$l$11715$1i4eWV)
        ((letrec ((g$f$11716$1i4eWV
                    (case-lambda
                      ((g$l$11717$1i4eWV g$a$11718$1i4eWV)
                       (if (null? g$l$11717$1i4eWV)
                         (reverse! g$a$11718$1i4eWV)
                         ((case-lambda
                            ((g$e$11719$1i4eWV)
                             (if (g$proc$11714$1i4eWV g$e$11719$1i4eWV)
                               (g$f$11716$1i4eWV
                                 (cdr g$l$11717$1i4eWV)
                                 (cons
                                   g$e$11719$1i4eWV
                                   g$a$11718$1i4eWV))
                               (g$f$11716$1i4eWV
                                 (cdr g$l$11717$1i4eWV)
                                 g$a$11718$1i4eWV))))
                          (car g$l$11717$1i4eWV)))))))
           g$f$11716$1i4eWV)
         g$l$11715$1i4eWV
         '()))))
   (g$assq$11667$1i4eWV
     g$assq$11823$1i4eWV
     (case-lambda
       ((g$obj$11720$1i4eWV g$lst$11721$1i4eWV)
        (if (null? g$lst$11721$1i4eWV)
          '#f
          ((case-lambda
             ((g$obj$11722$1i4eWV g$t$11723$1i4eWV g$r$11724$1i4eWV)
              (if (eq? g$obj$11722$1i4eWV (car g$t$11723$1i4eWV))
                g$t$11723$1i4eWV
                (g$assq$11667$1i4eWV
                  g$obj$11722$1i4eWV
                  g$r$11724$1i4eWV))))
           g$obj$11720$1i4eWV
           (car g$lst$11721$1i4eWV)
           (cdr g$lst$11721$1i4eWV))))))
   (g$assv$11668$1i4eWV
     g$assv$11824$1i4eWV
     (case-lambda
       ((g$obj$11725$1i4eWV g$lst$11726$1i4eWV)
        (if (null? g$lst$11726$1i4eWV)
          '#f
          ((case-lambda
             ((g$obj$11727$1i4eWV g$t$11728$1i4eWV g$r$11729$1i4eWV)
              (if (eqv? g$obj$11727$1i4eWV (car g$t$11728$1i4eWV))
                g$t$11728$1i4eWV
                (g$assv$11668$1i4eWV
                  g$obj$11727$1i4eWV
                  g$r$11729$1i4eWV))))
           g$obj$11725$1i4eWV
           (car g$lst$11726$1i4eWV)
           (cdr g$lst$11726$1i4eWV))))))
   (g$assoc$11669$1i4eWV
     g$assoc$11825$1i4eWV
     (case-lambda
       ((g$obj$11730$1i4eWV g$lst$11731$1i4eWV)
        (if (null? g$lst$11731$1i4eWV)
          '#f
          ((case-lambda
             ((g$obj$11732$1i4eWV g$t$11733$1i4eWV g$r$11734$1i4eWV)
              (if (equal? g$obj$11732$1i4eWV (car g$t$11733$1i4eWV))
                g$t$11733$1i4eWV
                (g$assoc$11669$1i4eWV
                  g$obj$11732$1i4eWV
                  g$r$11734$1i4eWV))))
           g$obj$11730$1i4eWV
           (car g$lst$11731$1i4eWV)
           (cdr g$lst$11731$1i4eWV))))))
   (g$assp$11670$1i4eWV
     g$assp$11826$1i4eWV
     (case-lambda
       ((g$p?$11735$1i4eWV g$lst$11736$1i4eWV)
        (if (null? g$lst$11736$1i4eWV)
          '#f
          ((case-lambda
             ((g$p?$11737$1i4eWV g$t$11738$1i4eWV g$r$11739$1i4eWV)
              (if (g$p?$11737$1i4eWV (car g$t$11738$1i4eWV))
                g$t$11738$1i4eWV
                (g$assp$11670$1i4eWV
                  g$p?$11737$1i4eWV
                  g$r$11739$1i4eWV))))
           g$p?$11735$1i4eWV
           (car g$lst$11736$1i4eWV)
           (cdr g$lst$11736$1i4eWV))))))
   (g$memq$11671$1i4eWV
     g$memq$11827$1i4eWV
     (case-lambda
       ((g$obj$11740$1i4eWV g$lst$11741$1i4eWV)
        (if (null? g$lst$11741$1i4eWV)
          '#f
          (if (eq? g$obj$11740$1i4eWV (car g$lst$11741$1i4eWV))
            g$lst$11741$1i4eWV
            (g$memq$11671$1i4eWV
              g$obj$11740$1i4eWV
              (cdr g$lst$11741$1i4eWV)))))))
   (g$memv$11672$1i4eWV
     g$memv$11828$1i4eWV
     (case-lambda
       ((g$obj$11742$1i4eWV g$lst$11743$1i4eWV)
        (if (null? g$lst$11743$1i4eWV)
          '#f
          (if (eqv? g$obj$11742$1i4eWV (car g$lst$11743$1i4eWV))
            g$lst$11743$1i4eWV
            (g$memv$11672$1i4eWV
              g$obj$11742$1i4eWV
              (cdr g$lst$11743$1i4eWV)))))))
   (g$member$11673$1i4eWV
     g$member$11829$1i4eWV
     (case-lambda
       ((g$obj$11744$1i4eWV g$lst$11745$1i4eWV)
        (if (null? g$lst$11745$1i4eWV)
          '#f
          (if (equal? g$obj$11744$1i4eWV (car g$lst$11745$1i4eWV))
            g$lst$11745$1i4eWV
            (g$member$11673$1i4eWV
              g$obj$11744$1i4eWV
              (cdr g$lst$11745$1i4eWV)))))))
   (g$memp$11674$1i4eWV
     g$memp$11830$1i4eWV
     (case-lambda
       ((g$p?$11746$1i4eWV g$lst$11747$1i4eWV)
        (if (null? g$lst$11747$1i4eWV)
          '#f
          (if (g$p?$11746$1i4eWV (car g$lst$11747$1i4eWV))
            g$lst$11747$1i4eWV
            (g$memp$11674$1i4eWV
              g$p?$11746$1i4eWV
              (cdr g$lst$11747$1i4eWV)))))))
   (g$all-empty?$11675$1i4eWV
     g$all-empty?$11831$1i4eWV
     (case-lambda
       ((g$ls$11748$1i4eWV)
        ((case-lambda
           ((g$t$11749$1i4eWV)
            (if g$t$11749$1i4eWV
              g$t$11749$1i4eWV
              (begin
                '#f
                (if (null? (car g$ls$11748$1i4eWV))
                  (begin
                    '#f
                    (g$all-empty?$11675$1i4eWV (cdr g$ls$11748$1i4eWV)))
                  '#f)))))
         (null? g$ls$11748$1i4eWV)))))
   (g$split$11676$1i4eWV
     g$split$11832$1i4eWV
     (case-lambda
       ((g$ls$11750$1i4eWV)
        (if (null? g$ls$11750$1i4eWV)
          (values '() '())
          (call-with-values
            (case-lambda
              (() (g$split$11676$1i4eWV (cdr g$ls$11750$1i4eWV))))
            (case-lambda
              ((g$cars$11751$1i4eWV g$cdrs$11752$1i4eWV)
               ((case-lambda
                  ((g$a$11753$1i4eWV)
                   (values
                     (cons (car g$a$11753$1i4eWV) g$cars$11751$1i4eWV)
                     (cons
                       (cdr g$a$11753$1i4eWV)
                       g$cdrs$11752$1i4eWV))))
                (car g$ls$11750$1i4eWV)))))))))
   (g$for-all$11677$1i4eWV
     g$for-all$11833$1i4eWV
     (case-lambda
       ((g$f$11754$1i4eWV g$arg1$11755$1i4eWV)
        (if (null? g$arg1$11755$1i4eWV)
          '#t
          (if (null? (cdr g$arg1$11755$1i4eWV))
            (g$f$11754$1i4eWV (car g$arg1$11755$1i4eWV))
            (if (g$f$11754$1i4eWV (car g$arg1$11755$1i4eWV))
              (begin
                '#f
                (g$for-all$11677$1i4eWV
                  g$f$11754$1i4eWV
                  (cdr g$arg1$11755$1i4eWV)))
              '#f))))
       ((g$f$11756$1i4eWV g$arg1$11757$1i4eWV . g$args$11758$1i4eWV)
        ((case-lambda
           ((g$args$11759$1i4eWV)
            (if (g$all-empty?$11675$1i4eWV g$args$11759$1i4eWV)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$11676$1i4eWV g$args$11759$1i4eWV)))
                (case-lambda
                  ((g$cars$11760$1i4eWV g$cdrs$11761$1i4eWV)
                   (if (g$all-empty?$11675$1i4eWV g$cdrs$11761$1i4eWV)
                     (apply g$f$11756$1i4eWV g$cars$11760$1i4eWV)
                     (if (apply g$f$11756$1i4eWV g$cars$11760$1i4eWV)
                       (begin
                         '#f
                         (apply
                           g$for-all$11677$1i4eWV
                           g$f$11756$1i4eWV
                           g$cdrs$11761$1i4eWV))
                       '#f))))))))
         (cons g$arg1$11757$1i4eWV g$args$11758$1i4eWV)))))
   (g$exists$11678$1i4eWV
     g$exists$11834$1i4eWV
     (case-lambda
       ((g$f$11762$1i4eWV g$arg1$11763$1i4eWV)
        (if (null? g$arg1$11763$1i4eWV)
          '#f
          ((case-lambda
             ((g$t$11764$1i4eWV)
              (if g$t$11764$1i4eWV
                g$t$11764$1i4eWV
                (begin
                  '#f
                  (g$exists$11678$1i4eWV
                    g$f$11762$1i4eWV
                    (cdr g$arg1$11763$1i4eWV))))))
           (g$f$11762$1i4eWV (car g$arg1$11763$1i4eWV)))))
       ((g$f$11765$1i4eWV g$arg1$11766$1i4eWV . g$args$11767$1i4eWV)
        ((case-lambda
           ((g$args$11768$1i4eWV)
            (if (g$all-empty?$11675$1i4eWV g$args$11768$1i4eWV)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$11676$1i4eWV g$args$11768$1i4eWV)))
                (case-lambda
                  ((g$cars$11769$1i4eWV g$cdrs$11770$1i4eWV)
                   ((case-lambda
                      ((g$t$11771$1i4eWV)
                       (if g$t$11771$1i4eWV
                         g$t$11771$1i4eWV
                         (begin
                           '#f
                           (apply
                             g$exists$11678$1i4eWV
                             g$f$11765$1i4eWV
                             g$cdrs$11770$1i4eWV)))))
                    (apply g$f$11765$1i4eWV g$cars$11769$1i4eWV))))))))
         (cons g$arg1$11766$1i4eWV g$args$11767$1i4eWV)))))
   (g$map$11679$1i4eWV
     g$map$11835$1i4eWV
     (case-lambda
       ((g$proc$11772$1i4eWV g$list1$11773$1i4eWV)
        ((letrec ((g$f$11774$1i4eWV
                    (case-lambda
                      ((g$lst$11775$1i4eWV g$a$11776$1i4eWV)
                       (if (null? g$lst$11775$1i4eWV)
                         (reverse! g$a$11776$1i4eWV)
                         (g$f$11774$1i4eWV
                           (cdr g$lst$11775$1i4eWV)
                           (cons
                             (g$proc$11772$1i4eWV
                               (car g$lst$11775$1i4eWV))
                             g$a$11776$1i4eWV)))))))
           g$f$11774$1i4eWV)
         g$list1$11773$1i4eWV
         '()))
       ((g$proc$11777$1i4eWV
          g$list1$11778$1i4eWV
          .
          g$lists$11779$1i4eWV)
        ((letrec ((g$f$11780$1i4eWV
                    (case-lambda
                      ((g$lists$11781$1i4eWV g$a$11782$1i4eWV)
                       (if (g$all-empty?$11675$1i4eWV
                             g$lists$11781$1i4eWV)
                         (reverse! g$a$11782$1i4eWV)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$11676$1i4eWV
                                g$lists$11781$1i4eWV)))
                           (case-lambda
                             ((g$cars$11783$1i4eWV g$cdrs$11784$1i4eWV)
                              (g$f$11780$1i4eWV
                                g$cdrs$11784$1i4eWV
                                (cons
                                  (apply
                                    g$proc$11777$1i4eWV
                                    g$cars$11783$1i4eWV)
                                  g$a$11782$1i4eWV))))))))))
           g$f$11780$1i4eWV)
         (cons g$list1$11778$1i4eWV g$lists$11779$1i4eWV)
         '()))))
   (g$for-each$11680$1i4eWV
     g$for-each$11836$1i4eWV
     (case-lambda
       ((g$f$11785$1i4eWV g$arg1$11786$1i4eWV)
        (if (not (null? g$arg1$11786$1i4eWV))
          (begin
            (g$f$11785$1i4eWV (car g$arg1$11786$1i4eWV))
            (g$for-each$11680$1i4eWV
              g$f$11785$1i4eWV
              (cdr g$arg1$11786$1i4eWV)))
          (void)))
       ((g$f$11787$1i4eWV g$arg1$11788$1i4eWV . g$args$11789$1i4eWV)
        ((case-lambda
           ((g$args$11790$1i4eWV)
            (if (not (g$all-empty?$11675$1i4eWV g$args$11790$1i4eWV))
              (call-with-values
                (case-lambda
                  (() (g$split$11676$1i4eWV g$args$11790$1i4eWV)))
                (case-lambda
                  ((g$cars$11791$1i4eWV g$cdrs$11792$1i4eWV)
                   (begin
                     (apply g$f$11787$1i4eWV g$cars$11791$1i4eWV)
                     (apply
                       g$for-each$11680$1i4eWV
                       g$f$11787$1i4eWV
                       g$cdrs$11792$1i4eWV)))))
              (void))))
         (cons g$arg1$11788$1i4eWV g$args$11789$1i4eWV)))))
   (g$cons*$11681$1i4eWV
     g$cons*$11837$1i4eWV
     (case-lambda
       ((g$a$11793$1i4eWV . g$rest$11794$1i4eWV)
        ((letrec ((g$f$11795$1i4eWV
                    (case-lambda
                      ((g$a$11796$1i4eWV g$rest$11797$1i4eWV)
                       (if (null? g$rest$11797$1i4eWV)
                         g$a$11796$1i4eWV
                         (cons
                           g$a$11796$1i4eWV
                           (g$f$11795$1i4eWV
                             (car g$rest$11797$1i4eWV)
                             (cdr g$rest$11797$1i4eWV))))))))
           g$f$11795$1i4eWV)
         g$a$11793$1i4eWV
         g$rest$11794$1i4eWV))))
   (g$fold-left$11682$1i4eWV
     g$fold-left$11838$1i4eWV
     (case-lambda
       ((g$combine$11798$1i4eWV
          g$nil$11799$1i4eWV
          g$list1$11800$1i4eWV
          .
          g$lists$11801$1i4eWV)
        (if (null? g$list1$11800$1i4eWV)
          g$nil$11799$1i4eWV
          (if (null? g$lists$11801$1i4eWV)
            (g$fold-left$11682$1i4eWV
              g$combine$11798$1i4eWV
              (g$combine$11798$1i4eWV
                g$nil$11799$1i4eWV
                (car g$list1$11800$1i4eWV))
              (cdr g$list1$11800$1i4eWV))
            (apply
              g$fold-left$11682$1i4eWV
              (g$cons*$11681$1i4eWV
                g$combine$11798$1i4eWV
                (apply
                  g$combine$11798$1i4eWV
                  (g$cons*$11681$1i4eWV
                    g$nil$11799$1i4eWV
                    (car g$list1$11800$1i4eWV)
                    (g$map$11679$1i4eWV car g$lists$11801$1i4eWV)))
                (cdr g$list1$11800$1i4eWV)
                (g$map$11679$1i4eWV cdr g$lists$11801$1i4eWV))))))))
   (g$fold-right$11683$1i4eWV
     g$fold-right$11839$1i4eWV
     (case-lambda
       ((g$combine$11802$1i4eWV
          g$nil$11803$1i4eWV
          g$list1$11804$1i4eWV
          .
          g$lists$11805$1i4eWV)
        (if (null? g$list1$11804$1i4eWV)
          g$nil$11803$1i4eWV
          (if (null? g$lists$11805$1i4eWV)
            (g$combine$11802$1i4eWV
              (car g$list1$11804$1i4eWV)
              (g$fold-right$11683$1i4eWV
                g$combine$11802$1i4eWV
                g$nil$11803$1i4eWV
                (cdr g$list1$11804$1i4eWV)))
            (apply
              g$combine$11802$1i4eWV
              (append
                (list (car g$list1$11804$1i4eWV))
                (g$map$11679$1i4eWV car g$lists$11805$1i4eWV)
                (list
                  (apply
                    g$fold-right$11683$1i4eWV
                    (g$cons*$11681$1i4eWV
                      g$combine$11802$1i4eWV
                      g$nil$11803$1i4eWV
                      (cdr g$list1$11804$1i4eWV)
                      (g$map$11679$1i4eWV
                        cdr
                        g$lists$11805$1i4eWV)))))))))))
   (g$remove$11684$1i4eWV
     g$remove$11840$1i4eWV
     (case-lambda
       ((g$obj$11806$1i4eWV g$list$11807$1i4eWV)
        (g$remp$11665$1i4eWV
          (case-lambda
            ((g$x$11808$1i4eWV)
             (equal? g$obj$11806$1i4eWV g$x$11808$1i4eWV)))
          g$list$11807$1i4eWV))))
   (g$remv$11685$1i4eWV
     g$remv$11841$1i4eWV
     (case-lambda
       ((g$obj$11809$1i4eWV g$list$11810$1i4eWV)
        (g$remp$11665$1i4eWV
          (case-lambda
            ((g$x$11811$1i4eWV)
             (eqv? g$obj$11809$1i4eWV g$x$11811$1i4eWV)))
          g$list$11810$1i4eWV))))
   (g$remq$11686$1i4eWV
     g$remq$11842$1i4eWV
     (case-lambda
       ((g$obj$11812$1i4eWV g$list$11813$1i4eWV)
        (g$remp$11665$1i4eWV
          (case-lambda
            ((g$x$11814$1i4eWV)
             (eq? g$obj$11812$1i4eWV g$x$11814$1i4eWV)))
          g$list$11813$1i4eWV)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$char?$12327$1i4eWV
     g$char?$12665$1i4eWV
     (case-lambda
       ((g$obj$12482$1i4eWV)
        (clr-is-internal 'system.char g$obj$12482$1i4eWV))))
   (g$vector?$12328$1i4eWV
     g$vector?$12666$1i4eWV
     (case-lambda
       ((g$obj$12483$1i4eWV)
        (clr-is-internal 'system.object[] g$obj$12483$1i4eWV))))
   (g$bytevector?$12329$1i4eWV
     g$bytevector?$12667$1i4eWV
     (case-lambda
       ((g$obj$12484$1i4eWV)
        (clr-is-internal 'system.byte[] g$obj$12484$1i4eWV))))
   (g$symbol?$12330$1i4eWV
     g$symbol?$12668$1i4eWV
     (case-lambda
       ((g$obj$12485$1i4eWV)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$12485$1i4eWV))))
   (g$boolean?$12331$1i4eWV
     g$boolean?$12669$1i4eWV
     (case-lambda
       ((g$obj$12486$1i4eWV)
        (clr-is-internal 'system.boolean g$obj$12486$1i4eWV))))
   (g$procedure?$12332$1i4eWV
     g$procedure?$12670$1i4eWV
     (case-lambda
       ((g$obj$12487$1i4eWV)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$12487$1i4eWV))))
   (g$fixnum?$12333$1i4eWV
     g$fixnum?$12671$1i4eWV
     (case-lambda
       ((g$obj$12488$1i4eWV)
        (clr-is-internal 'system.int32 g$obj$12488$1i4eWV))))
   (g$flonum?$12334$1i4eWV
     g$flonum?$12672$1i4eWV
     (case-lambda
       ((g$obj$12489$1i4eWV)
        (clr-is-internal 'system.double g$obj$12489$1i4eWV))))
   (g$fixnum-width$12335$1i4eWV
     g$fixnum-width$12673$1i4eWV
     (case-lambda (() '32)))
   (g$mod$12336$1i4eWV
     g$mod$12674$1i4eWV
     (case-lambda
       ((g$x1$12490$1i4eWV g$x2$12491$1i4eWV)
        (- g$x1$12490$1i4eWV
           (* (div g$x1$12490$1i4eWV g$x2$12491$1i4eWV)
              g$x2$12491$1i4eWV)))))
   (g$mod0$12337$1i4eWV
     g$mod0$12675$1i4eWV
     (case-lambda
       ((g$x1$12492$1i4eWV g$x2$12493$1i4eWV)
        (- g$x1$12492$1i4eWV
           (* (div0 g$x1$12492$1i4eWV g$x2$12493$1i4eWV)
              g$x2$12493$1i4eWV)))))
   (g$div-and-mod$12338$1i4eWV
     g$div-and-mod$12676$1i4eWV
     (case-lambda
       ((g$x1$12494$1i4eWV g$x2$12495$1i4eWV)
        ((case-lambda
           ((g$d$12496$1i4eWV)
            (values
              g$d$12496$1i4eWV
              (- g$x1$12494$1i4eWV
                 (* g$d$12496$1i4eWV g$x2$12495$1i4eWV)))))
         (div g$x1$12494$1i4eWV g$x2$12495$1i4eWV)))))
   (g$div0-and-mod0$12339$1i4eWV
     g$div0-and-mod0$12677$1i4eWV
     (case-lambda
       ((g$x1$12497$1i4eWV g$x2$12498$1i4eWV)
        ((case-lambda
           ((g$d$12499$1i4eWV)
            (values
              g$d$12499$1i4eWV
              (- g$x1$12497$1i4eWV
                 (* g$d$12499$1i4eWV g$x2$12498$1i4eWV)))))
         (div0 g$x1$12497$1i4eWV g$x2$12498$1i4eWV)))))
   (g$list->vector$12340$1i4eWV
     g$list->vector$12678$1i4eWV
     (case-lambda
       ((g$lst$12500$1i4eWV) (apply vector g$lst$12500$1i4eWV))))
   (g$list->string$12341$1i4eWV
     g$list->string$12679$1i4eWV
     (case-lambda
       ((g$lst$12501$1i4eWV) (apply string g$lst$12501$1i4eWV))))
   (g$vector-ref$12342$1i4eWV
     g$vector-ref$12680$1i4eWV
     (case-lambda
       ((g$x$12502$1i4eWV g$n$12503$1i4eWV)
        (begin
          (if (not (g$vector?$12328$1i4eWV g$x$12502$1i4eWV))
            (assertion-violation
              'vector-ref
              '"not a vector"
              g$x$12502$1i4eWV)
            (void))
          (if (not (integer? g$n$12503$1i4eWV))
            (assertion-violation
              'vector-ref
              '"not an integer"
              g$n$12503$1i4eWV)
            (void))
          (if (g$negative?$12376$1i4eWV g$n$12503$1i4eWV)
            (assertion-violation
              'vector-ref
              '"negative index"
              g$n$12503$1i4eWV)
            (void))
          ($vector-ref g$x$12502$1i4eWV g$n$12503$1i4eWV)))))
   (g$vector-set!$12343$1i4eWV
     g$vector-set!$12681$1i4eWV
     (case-lambda
       ((g$x$12504$1i4eWV g$n$12505$1i4eWV g$value$12506$1i4eWV)
        (begin
          (if (not (g$vector?$12328$1i4eWV g$x$12504$1i4eWV))
            (assertion-violation
              'vector-set!
              '"not a vector"
              g$x$12504$1i4eWV)
            (void))
          (if (not (integer? g$n$12505$1i4eWV))
            (assertion-violation
              'vector-set!
              '"not an integer"
              g$n$12505$1i4eWV)
            (void))
          (if (g$negative?$12376$1i4eWV g$n$12505$1i4eWV)
            (assertion-violation
              'vector-set!
              '"negative index"
              g$n$12505$1i4eWV)
            (void))
          ($vector-set!
            g$x$12504$1i4eWV
            g$n$12505$1i4eWV
            g$value$12506$1i4eWV)
          (void)))))
   (g$vector-fill!$12344$1i4eWV
     g$vector-fill!$12682$1i4eWV
     (case-lambda
       ((g$vec$12507$1i4eWV g$val$12508$1i4eWV)
        ((case-lambda
           ((g$len$12509$1i4eWV)
            (letrec ((g$loop$12510$1i4eWV
                       (case-lambda
                         ((g$i$12511$1i4eWV)
                          (if (g$fx=?$16088$1i4eWV
                                g$i$12511$1i4eWV
                                g$len$12509$1i4eWV)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$12343$1i4eWV
                                g$vec$12507$1i4eWV
                                g$i$12511$1i4eWV
                                g$val$12508$1i4eWV)
                              (g$loop$12510$1i4eWV
                                (g$fx+$16075$1i4eWV
                                  g$i$12511$1i4eWV
                                  '1))))))))
              (g$loop$12510$1i4eWV '0))))
         (vector-length g$vec$12507$1i4eWV)))))
   (g$xcons$12345$1i4eWV
     g$xcons$12683$1i4eWV
     (case-lambda
       ((g$x$12512$1i4eWV g$y$12513$1i4eWV)
        (cons g$y$12513$1i4eWV g$x$12512$1i4eWV))))
   (g$reverse$12346$1i4eWV
     g$reverse$12684$1i4eWV
     (case-lambda
       ((g$lst$12514$1i4eWV)
        (g$fold-left$11838$1i4eWV
          g$xcons$12345$1i4eWV
          '()
          g$lst$12514$1i4eWV))))
   (g$caar$12347$1i4eWV
     g$caar$12685$1i4eWV
     (case-lambda ((g$x$12515$1i4eWV) (car (car g$x$12515$1i4eWV)))))
   (g$cadr$12348$1i4eWV
     g$cadr$12686$1i4eWV
     (case-lambda ((g$x$12516$1i4eWV) (car (cdr g$x$12516$1i4eWV)))))
   (g$cdar$12349$1i4eWV
     g$cdar$12687$1i4eWV
     (case-lambda ((g$x$12517$1i4eWV) (cdr (car g$x$12517$1i4eWV)))))
   (g$cddr$12350$1i4eWV
     g$cddr$12688$1i4eWV
     (case-lambda ((g$x$12518$1i4eWV) (cdr (cdr g$x$12518$1i4eWV)))))
   (g$caaar$12351$1i4eWV
     g$caaar$12689$1i4eWV
     (case-lambda
       ((g$x$12519$1i4eWV)
        (g$caar$12347$1i4eWV (car g$x$12519$1i4eWV)))))
   (g$caadr$12352$1i4eWV
     g$caadr$12690$1i4eWV
     (case-lambda
       ((g$x$12520$1i4eWV)
        (g$caar$12347$1i4eWV (cdr g$x$12520$1i4eWV)))))
   (g$cadar$12353$1i4eWV
     g$cadar$12691$1i4eWV
     (case-lambda
       ((g$x$12521$1i4eWV)
        (g$cadr$12348$1i4eWV (car g$x$12521$1i4eWV)))))
   (g$caddr$12354$1i4eWV
     g$caddr$12692$1i4eWV
     (case-lambda
       ((g$x$12522$1i4eWV)
        (g$cadr$12348$1i4eWV (cdr g$x$12522$1i4eWV)))))
   (g$cdaar$12355$1i4eWV
     g$cdaar$12693$1i4eWV
     (case-lambda
       ((g$x$12523$1i4eWV)
        (g$cdar$12349$1i4eWV (car g$x$12523$1i4eWV)))))
   (g$cdadr$12356$1i4eWV
     g$cdadr$12694$1i4eWV
     (case-lambda
       ((g$x$12524$1i4eWV)
        (g$cdar$12349$1i4eWV (cdr g$x$12524$1i4eWV)))))
   (g$cddar$12357$1i4eWV
     g$cddar$12695$1i4eWV
     (case-lambda
       ((g$x$12525$1i4eWV)
        (g$cddr$12350$1i4eWV (car g$x$12525$1i4eWV)))))
   (g$cdddr$12358$1i4eWV
     g$cdddr$12696$1i4eWV
     (case-lambda
       ((g$x$12526$1i4eWV)
        (g$cddr$12350$1i4eWV (cdr g$x$12526$1i4eWV)))))
   (g$caaaar$12359$1i4eWV
     g$caaaar$12697$1i4eWV
     (case-lambda
       ((g$x$12527$1i4eWV)
        (g$caaar$12351$1i4eWV (car g$x$12527$1i4eWV)))))
   (g$caaadr$12360$1i4eWV
     g$caaadr$12698$1i4eWV
     (case-lambda
       ((g$x$12528$1i4eWV)
        (g$caaar$12351$1i4eWV (cdr g$x$12528$1i4eWV)))))
   (g$caadar$12361$1i4eWV
     g$caadar$12699$1i4eWV
     (case-lambda
       ((g$x$12529$1i4eWV)
        (g$caadr$12352$1i4eWV (car g$x$12529$1i4eWV)))))
   (g$caaddr$12362$1i4eWV
     g$caaddr$12700$1i4eWV
     (case-lambda
       ((g$x$12530$1i4eWV)
        (g$caadr$12352$1i4eWV (cdr g$x$12530$1i4eWV)))))
   (g$cadaar$12363$1i4eWV
     g$cadaar$12701$1i4eWV
     (case-lambda
       ((g$x$12531$1i4eWV)
        (g$cadar$12353$1i4eWV (car g$x$12531$1i4eWV)))))
   (g$cadadr$12364$1i4eWV
     g$cadadr$12702$1i4eWV
     (case-lambda
       ((g$x$12532$1i4eWV)
        (g$cadar$12353$1i4eWV (cdr g$x$12532$1i4eWV)))))
   (g$caddar$12365$1i4eWV
     g$caddar$12703$1i4eWV
     (case-lambda
       ((g$x$12533$1i4eWV)
        (g$caddr$12354$1i4eWV (car g$x$12533$1i4eWV)))))
   (g$cadddr$12366$1i4eWV
     g$cadddr$12704$1i4eWV
     (case-lambda
       ((g$x$12534$1i4eWV)
        (g$caddr$12354$1i4eWV (cdr g$x$12534$1i4eWV)))))
   (g$cdaaar$12367$1i4eWV
     g$cdaaar$12705$1i4eWV
     (case-lambda
       ((g$x$12535$1i4eWV)
        (g$cdaar$12355$1i4eWV (car g$x$12535$1i4eWV)))))
   (g$cdaadr$12368$1i4eWV
     g$cdaadr$12706$1i4eWV
     (case-lambda
       ((g$x$12536$1i4eWV)
        (g$cdaar$12355$1i4eWV (cdr g$x$12536$1i4eWV)))))
   (g$cdadar$12369$1i4eWV
     g$cdadar$12707$1i4eWV
     (case-lambda
       ((g$x$12537$1i4eWV)
        (g$cdadr$12356$1i4eWV (car g$x$12537$1i4eWV)))))
   (g$cdaddr$12370$1i4eWV
     g$cdaddr$12708$1i4eWV
     (case-lambda
       ((g$x$12538$1i4eWV)
        (g$cdadr$12356$1i4eWV (cdr g$x$12538$1i4eWV)))))
   (g$cddaar$12371$1i4eWV
     g$cddaar$12709$1i4eWV
     (case-lambda
       ((g$x$12539$1i4eWV)
        (g$cddar$12357$1i4eWV (car g$x$12539$1i4eWV)))))
   (g$cddadr$12372$1i4eWV
     g$cddadr$12710$1i4eWV
     (case-lambda
       ((g$x$12540$1i4eWV)
        (g$cddar$12357$1i4eWV (cdr g$x$12540$1i4eWV)))))
   (g$cdddar$12373$1i4eWV
     g$cdddar$12711$1i4eWV
     (case-lambda
       ((g$x$12541$1i4eWV)
        (g$cdddr$12358$1i4eWV (car g$x$12541$1i4eWV)))))
   (g$cddddr$12374$1i4eWV
     g$cddddr$12712$1i4eWV
     (case-lambda
       ((g$x$12542$1i4eWV)
        (g$cdddr$12358$1i4eWV (cdr g$x$12542$1i4eWV)))))
   (g$positive?$12375$1i4eWV
     g$positive?$12713$1i4eWV
     (case-lambda
       ((g$r$12543$1i4eWV)
        (begin
          (if (not (real-valued? g$r$12543$1i4eWV))
            (assertion-violation
              'positive?
              '"not a real"
              g$r$12543$1i4eWV)
            (void))
          (< '0 g$r$12543$1i4eWV)))))
   (g$negative?$12376$1i4eWV
     g$negative?$12714$1i4eWV
     (case-lambda
       ((g$r$12544$1i4eWV)
        (begin
          (if (not (real-valued? g$r$12544$1i4eWV))
            (assertion-violation
              'negative?
              '"not a real"
              g$r$12544$1i4eWV)
            (void))
          (> '0 g$r$12544$1i4eWV)))))
   (g$zero?$12377$1i4eWV
     g$zero?$12715$1i4eWV
     (case-lambda
       ((g$z$12545$1i4eWV)
        (begin
          (if (not (number? g$z$12545$1i4eWV))
            (assertion-violation
              'zero?
              '"not a number"
              g$z$12545$1i4eWV)
            (void))
          (= '0 g$z$12545$1i4eWV)))))
   (g$even?$12378$1i4eWV
     g$even?$12716$1i4eWV
     (case-lambda
       ((g$n$12546$1i4eWV)
        (begin
          (if (not (integer-valued? g$n$12546$1i4eWV))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$12546$1i4eWV)
            (void))
          (= '0 (g$mod$12336$1i4eWV g$n$12546$1i4eWV '2))))))
   (g$odd?$12379$1i4eWV
     g$odd?$12717$1i4eWV
     (case-lambda
       ((g$n$12547$1i4eWV)
        (begin
          (if (not (integer-valued? g$n$12547$1i4eWV))
            (assertion-violation
              'odd?
              '"not a integer"
              g$n$12547$1i4eWV)
            (void))
          (= '1 (g$mod$12336$1i4eWV g$n$12547$1i4eWV '2))))))
   (g$max$12380$1i4eWV
     g$max$12718$1i4eWV
     (case-lambda
       ((g$a$12548$1i4eWV . g$rest$12549$1i4eWV)
        (begin
          (if (not (real-valued? g$a$12548$1i4eWV))
            (assertion-violation 'max '"not a real" g$a$12548$1i4eWV)
            (void))
          (g$fold-left$11838$1i4eWV
            (case-lambda
              ((g$a$12550$1i4eWV g$b$12551$1i4eWV)
               ((case-lambda
                  ((g$r$12552$1i4eWV)
                   (if ((case-lambda
                          ((g$t$12553$1i4eWV)
                           (if g$t$12553$1i4eWV
                             g$t$12553$1i4eWV
                             (begin '#f (inexact? g$b$12551$1i4eWV)))))
                        (inexact? g$a$12550$1i4eWV))
                     (inexact g$r$12552$1i4eWV)
                     g$r$12552$1i4eWV)))
                (if (< g$a$12550$1i4eWV g$b$12551$1i4eWV)
                  g$b$12551$1i4eWV
                  g$a$12550$1i4eWV))))
            g$a$12548$1i4eWV
            g$rest$12549$1i4eWV)))))
   (g$min$12381$1i4eWV
     g$min$12719$1i4eWV
     (case-lambda
       ((g$a$12554$1i4eWV . g$rest$12555$1i4eWV)
        (begin
          (if (not (real-valued? g$a$12554$1i4eWV))
            (assertion-violation 'min '"not a real" g$a$12554$1i4eWV)
            (void))
          (g$fold-left$11838$1i4eWV
            (case-lambda
              ((g$a$12556$1i4eWV g$b$12557$1i4eWV)
               ((case-lambda
                  ((g$r$12558$1i4eWV)
                   (if ((case-lambda
                          ((g$t$12559$1i4eWV)
                           (if g$t$12559$1i4eWV
                             g$t$12559$1i4eWV
                             (begin '#f (inexact? g$b$12557$1i4eWV)))))
                        (inexact? g$a$12556$1i4eWV))
                     (inexact g$r$12558$1i4eWV)
                     g$r$12558$1i4eWV)))
                (if (> g$a$12556$1i4eWV g$b$12557$1i4eWV)
                  g$b$12557$1i4eWV
                  g$a$12556$1i4eWV))))
            g$a$12554$1i4eWV
            g$rest$12555$1i4eWV)))))
   (g$gcd$12382$1i4eWV
     g$gcd$12720$1i4eWV
     (case-lambda
       (g$nums$12560$1i4eWV
        ((case-lambda
           ((g$t$12561$1i4eWV)
            (if (eqv? g$t$12561$1i4eWV '0)
              '0
              (if (eqv? g$t$12561$1i4eWV '1)
                ((case-lambda
                   ((g$n$12562$1i4eWV)
                    (begin
                      (if (not (integer-valued? g$n$12562$1i4eWV))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$12562$1i4eWV)
                        (void))
                      (abs g$n$12562$1i4eWV))))
                 (car g$nums$12560$1i4eWV))
                (if (eqv? g$t$12561$1i4eWV '2)
                  ((case-lambda
                     ((g$a$12563$1i4eWV g$b$12564$1i4eWV)
                      (begin
                        (if (not (integer-valued? g$a$12563$1i4eWV))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$12563$1i4eWV)
                          (void))
                        (if (not (integer-valued? g$b$12564$1i4eWV))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$12564$1i4eWV)
                          (void))
                        (if (g$zero?$12377$1i4eWV g$b$12564$1i4eWV)
                          (abs g$a$12563$1i4eWV)
                          (abs (g$gcd$12382$1i4eWV
                                 g$b$12564$1i4eWV
                                 (g$mod$12336$1i4eWV
                                   g$a$12563$1i4eWV
                                   g$b$12564$1i4eWV)))))))
                   (car g$nums$12560$1i4eWV)
                   (g$cadr$12348$1i4eWV g$nums$12560$1i4eWV))
                  (g$fold-left$11838$1i4eWV
                    g$gcd$12382$1i4eWV
                    (abs (car g$nums$12560$1i4eWV))
                    (cdr g$nums$12560$1i4eWV)))))))
         (length g$nums$12560$1i4eWV)))))
   (g$lcm$12383$1i4eWV
     g$lcm$12721$1i4eWV
     (case-lambda
       (g$nums$12565$1i4eWV
        ((case-lambda
           ((g$t$12566$1i4eWV)
            (if (eqv? g$t$12566$1i4eWV '0)
              '1
              (if (eqv? g$t$12566$1i4eWV '1)
                ((case-lambda
                   ((g$n$12567$1i4eWV)
                    (begin
                      (if (not (integer-valued? g$n$12567$1i4eWV))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$12567$1i4eWV)
                        (void))
                      (abs g$n$12567$1i4eWV))))
                 (car g$nums$12565$1i4eWV))
                (if (eqv? g$t$12566$1i4eWV '2)
                  ((case-lambda
                     ((g$a$12568$1i4eWV g$b$12569$1i4eWV)
                      (begin
                        (if (not (integer-valued? g$a$12568$1i4eWV))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$12568$1i4eWV)
                          (void))
                        (if (not (integer-valued? g$b$12569$1i4eWV))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$12569$1i4eWV)
                          (void))
                        (if ((case-lambda
                               ((g$t$12570$1i4eWV)
                                (if g$t$12570$1i4eWV
                                  g$t$12570$1i4eWV
                                  (begin
                                    '#f
                                    (g$zero?$12377$1i4eWV
                                      g$b$12569$1i4eWV)))))
                             (g$zero?$12377$1i4eWV g$a$12568$1i4eWV))
                          '0
                          (abs (* (/ g$a$12568$1i4eWV
                                     (g$gcd$12382$1i4eWV
                                       g$a$12568$1i4eWV
                                       g$b$12569$1i4eWV))
                                  g$b$12569$1i4eWV))))))
                   (car g$nums$12565$1i4eWV)
                   (g$cadr$12348$1i4eWV g$nums$12565$1i4eWV))
                  (g$fold-left$11838$1i4eWV
                    g$lcm$12383$1i4eWV
                    (abs (car g$nums$12565$1i4eWV))
                    (cdr g$nums$12565$1i4eWV)))))))
         (length g$nums$12565$1i4eWV)))))
   (g$string=?$12424$1i4eWV
     g$string=?$12722$1i4eWV
     (case-lambda
       ((g$a$12571$1i4eWV g$b$12572$1i4eWV . g$rest$12573$1i4eWV)
        (begin
          (if (not (string? g$a$12571$1i4eWV))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$12571$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12574$1i4eWV)
               (begin
                 (if (not (string? g$x$12574$1i4eWV))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$12574$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12575$1i4eWV)
                     (begin
                       (set! g$a$12571$1i4eWV g$x$12574$1i4eWV)
                       g$r$12575$1i4eWV)))
                  (g$fx=?$16088$1i4eWV
                    (string-compare g$a$12571$1i4eWV g$x$12574$1i4eWV)
                    '0)))))
            (cons g$b$12572$1i4eWV g$rest$12573$1i4eWV))))))
   (g$string<?$12425$1i4eWV
     g$string<?$12723$1i4eWV
     (case-lambda
       ((g$a$12576$1i4eWV g$b$12577$1i4eWV . g$rest$12578$1i4eWV)
        (begin
          (if (not (string? g$a$12576$1i4eWV))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$12576$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12579$1i4eWV)
               (begin
                 (if (not (string? g$x$12579$1i4eWV))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$12579$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12580$1i4eWV)
                     (begin
                       (set! g$a$12576$1i4eWV g$x$12579$1i4eWV)
                       g$r$12580$1i4eWV)))
                  (g$fx<?$16089$1i4eWV
                    (string-compare g$a$12576$1i4eWV g$x$12579$1i4eWV)
                    '0)))))
            (cons g$b$12577$1i4eWV g$rest$12578$1i4eWV))))))
   (g$string>?$12426$1i4eWV
     g$string>?$12724$1i4eWV
     (case-lambda
       ((g$a$12581$1i4eWV g$b$12582$1i4eWV . g$rest$12583$1i4eWV)
        (begin
          (if (not (string? g$a$12581$1i4eWV))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$12581$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12584$1i4eWV)
               (begin
                 (if (not (string? g$x$12584$1i4eWV))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$12584$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12585$1i4eWV)
                     (begin
                       (set! g$a$12581$1i4eWV g$x$12584$1i4eWV)
                       g$r$12585$1i4eWV)))
                  (g$fx>?$16091$1i4eWV
                    (string-compare g$a$12581$1i4eWV g$x$12584$1i4eWV)
                    '0)))))
            (cons g$b$12582$1i4eWV g$rest$12583$1i4eWV))))))
   (g$string<=?$12427$1i4eWV
     g$string<=?$12725$1i4eWV
     (case-lambda
       ((g$a$12586$1i4eWV g$b$12587$1i4eWV . g$rest$12588$1i4eWV)
        (begin
          (if (not (string? g$a$12586$1i4eWV))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$12586$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12589$1i4eWV)
               (begin
                 (if (not (string? g$x$12589$1i4eWV))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$12589$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12590$1i4eWV)
                     (begin
                       (set! g$a$12586$1i4eWV g$x$12589$1i4eWV)
                       g$r$12590$1i4eWV)))
                  (g$fx<=?$16090$1i4eWV
                    (string-compare g$a$12586$1i4eWV g$x$12589$1i4eWV)
                    '0)))))
            (cons g$b$12587$1i4eWV g$rest$12588$1i4eWV))))))
   (g$string>=?$12428$1i4eWV
     g$string>=?$12726$1i4eWV
     (case-lambda
       ((g$a$12591$1i4eWV g$b$12592$1i4eWV . g$rest$12593$1i4eWV)
        (begin
          (if (not (string? g$a$12591$1i4eWV))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$12591$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12594$1i4eWV)
               (begin
                 (if (not (string? g$x$12594$1i4eWV))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$12594$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12595$1i4eWV)
                     (begin
                       (set! g$a$12591$1i4eWV g$x$12594$1i4eWV)
                       g$r$12595$1i4eWV)))
                  (g$fx>=?$16092$1i4eWV
                    (string-compare g$a$12591$1i4eWV g$x$12594$1i4eWV)
                    '0)))))
            (cons g$b$12592$1i4eWV g$rest$12593$1i4eWV))))))
   (g$symbol=?$12429$1i4eWV
     g$symbol=?$12727$1i4eWV
     (case-lambda
       ((g$a$12596$1i4eWV g$b$12597$1i4eWV . g$rest$12598$1i4eWV)
        (begin
          (if (not (g$symbol?$12330$1i4eWV g$a$12596$1i4eWV))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$12596$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12599$1i4eWV)
               (begin
                 (if (not (g$symbol?$12330$1i4eWV g$x$12599$1i4eWV))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$12599$1i4eWV)
                   (void))
                 (eq? g$a$12596$1i4eWV g$x$12599$1i4eWV))))
            (cons g$b$12597$1i4eWV g$rest$12598$1i4eWV))))))
   (g$boolean=?$12430$1i4eWV
     g$boolean=?$12728$1i4eWV
     (case-lambda
       ((g$a$12600$1i4eWV g$b$12601$1i4eWV . g$rest$12602$1i4eWV)
        (begin
          (if (not (g$boolean?$12331$1i4eWV g$a$12600$1i4eWV))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$12600$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12603$1i4eWV)
               (begin
                 (if (not (g$boolean?$12331$1i4eWV g$x$12603$1i4eWV))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$12603$1i4eWV)
                   (void))
                 (eq? g$a$12600$1i4eWV g$x$12603$1i4eWV))))
            (cons g$b$12601$1i4eWV g$rest$12602$1i4eWV))))))
   (g$char=?$12471$1i4eWV
     g$char=?$12729$1i4eWV
     (case-lambda
       ((g$a$12604$1i4eWV g$b$12605$1i4eWV . g$rest$12606$1i4eWV)
        (begin
          (if (not (g$char?$12327$1i4eWV g$a$12604$1i4eWV))
            (assertion-violation 'char=? '"not a char" g$a$12604$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12607$1i4eWV)
               (begin
                 (if (not (g$char?$12327$1i4eWV g$x$12607$1i4eWV))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$12607$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12608$1i4eWV)
                     (begin
                       (set! g$a$12604$1i4eWV g$x$12607$1i4eWV)
                       g$r$12608$1i4eWV)))
                  (g$fx=?$16088$1i4eWV
                    (char->integer g$a$12604$1i4eWV)
                    (char->integer g$x$12607$1i4eWV))))))
            (cons g$b$12605$1i4eWV g$rest$12606$1i4eWV))))))
   (g$char<?$12472$1i4eWV
     g$char<?$12730$1i4eWV
     (case-lambda
       ((g$a$12609$1i4eWV g$b$12610$1i4eWV . g$rest$12611$1i4eWV)
        (begin
          (if (not (g$char?$12327$1i4eWV g$a$12609$1i4eWV))
            (assertion-violation 'char<? '"not a char" g$a$12609$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12612$1i4eWV)
               (begin
                 (if (not (g$char?$12327$1i4eWV g$x$12612$1i4eWV))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$12612$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12613$1i4eWV)
                     (begin
                       (set! g$a$12609$1i4eWV g$x$12612$1i4eWV)
                       g$r$12613$1i4eWV)))
                  (g$fx<?$16089$1i4eWV
                    (char->integer g$a$12609$1i4eWV)
                    (char->integer g$x$12612$1i4eWV))))))
            (cons g$b$12610$1i4eWV g$rest$12611$1i4eWV))))))
   (g$char>?$12473$1i4eWV
     g$char>?$12731$1i4eWV
     (case-lambda
       ((g$a$12614$1i4eWV g$b$12615$1i4eWV . g$rest$12616$1i4eWV)
        (begin
          (if (not (g$char?$12327$1i4eWV g$a$12614$1i4eWV))
            (assertion-violation 'char>? '"not a char" g$a$12614$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12617$1i4eWV)
               (begin
                 (if (not (g$char?$12327$1i4eWV g$x$12617$1i4eWV))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$12617$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12618$1i4eWV)
                     (begin
                       (set! g$a$12614$1i4eWV g$x$12617$1i4eWV)
                       g$r$12618$1i4eWV)))
                  (g$fx>?$16091$1i4eWV
                    (char->integer g$a$12614$1i4eWV)
                    (char->integer g$x$12617$1i4eWV))))))
            (cons g$b$12615$1i4eWV g$rest$12616$1i4eWV))))))
   (g$char<=?$12474$1i4eWV
     g$char<=?$12732$1i4eWV
     (case-lambda
       ((g$a$12619$1i4eWV g$b$12620$1i4eWV . g$rest$12621$1i4eWV)
        (begin
          (if (not (g$char?$12327$1i4eWV g$a$12619$1i4eWV))
            (assertion-violation
              'char<=?
              '"not a char"
              g$a$12619$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12622$1i4eWV)
               (begin
                 (if (not (g$char?$12327$1i4eWV g$x$12622$1i4eWV))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$12622$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12623$1i4eWV)
                     (begin
                       (set! g$a$12619$1i4eWV g$x$12622$1i4eWV)
                       g$r$12623$1i4eWV)))
                  (g$fx<=?$16090$1i4eWV
                    (char->integer g$a$12619$1i4eWV)
                    (char->integer g$x$12622$1i4eWV))))))
            (cons g$b$12620$1i4eWV g$rest$12621$1i4eWV))))))
   (g$char>=?$12475$1i4eWV
     g$char>=?$12733$1i4eWV
     (case-lambda
       ((g$a$12624$1i4eWV g$b$12625$1i4eWV . g$rest$12626$1i4eWV)
        (begin
          (if (not (g$char?$12327$1i4eWV g$a$12624$1i4eWV))
            (assertion-violation
              'char>=?
              '"not a char"
              g$a$12624$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$12627$1i4eWV)
               (begin
                 (if (not (g$char?$12327$1i4eWV g$x$12627$1i4eWV))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$12627$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$12628$1i4eWV)
                     (begin
                       (set! g$a$12624$1i4eWV g$x$12627$1i4eWV)
                       g$r$12628$1i4eWV)))
                  (g$fx>=?$16092$1i4eWV
                    (char->integer g$a$12624$1i4eWV)
                    (char->integer g$x$12627$1i4eWV))))))
            (cons g$b$12625$1i4eWV g$rest$12626$1i4eWV))))))
   (g$rationalize$12476$1i4eWV
     g$rationalize$12734$1i4eWV
     (case-lambda
       ((g$x$12629$1i4eWV g$e$12630$1i4eWV)
        (if (if (infinite? g$x$12629$1i4eWV)
              (begin '#f (infinite? g$e$12630$1i4eWV))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$12631$1i4eWV)
              (if (if (exact? g$x$12629$1i4eWV)
                    (begin '#f (exact? g$e$12630$1i4eWV))
                    '#f)
                g$r$12631$1i4eWV
                (inexact g$r$12631$1i4eWV))))
           (apply
             /
             (g$find-ratio$12477$1i4eWV
               g$x$12629$1i4eWV
               g$e$12630$1i4eWV)))))))
   (g$find-ratio$12477$1i4eWV
     g$find-ratio$12735$1i4eWV
     (case-lambda
       ((g$x$12632$1i4eWV g$e$12633$1i4eWV)
        (g$find-ratio-between$12478$1i4eWV
          (- g$x$12632$1i4eWV g$e$12633$1i4eWV)
          (+ g$x$12632$1i4eWV g$e$12633$1i4eWV)))))
   (g$find-ratio-between$12478$1i4eWV
     g$find-ratio-between$12736$1i4eWV
     (case-lambda
       ((g$x$12634$1i4eWV g$y$12635$1i4eWV)
        (letrec* ((g$sr$12636$1i4eWV
                    (case-lambda
                      ((g$x$12638$1i4eWV g$y$12639$1i4eWV)
                       ((case-lambda
                          ((g$fx$12640$1i4eWV g$fy$12641$1i4eWV)
                           (if (>= g$fx$12640$1i4eWV g$x$12638$1i4eWV)
                             (list g$fx$12640$1i4eWV '1)
                             (if (= g$fx$12640$1i4eWV g$fy$12641$1i4eWV)
                               ((case-lambda
                                  ((g$rat$12642$1i4eWV)
                                   (list
                                     (+ (g$cadr$12348$1i4eWV
                                          g$rat$12642$1i4eWV)
                                        (* g$fx$12640$1i4eWV
                                           (car g$rat$12642$1i4eWV)))
                                     (car g$rat$12642$1i4eWV))))
                                (g$sr$12636$1i4eWV
                                  (/ (- g$y$12639$1i4eWV
                                        g$fy$12641$1i4eWV))
                                  (/ (- g$x$12638$1i4eWV
                                        g$fx$12640$1i4eWV))))
                               (list (+ '1 g$fx$12640$1i4eWV) '1)))))
                        (exact (floor g$x$12638$1i4eWV))
                        (exact (floor g$y$12639$1i4eWV)))))))
          (if (< g$y$12635$1i4eWV g$x$12634$1i4eWV)
            (g$find-ratio-between$12478$1i4eWV
              g$y$12635$1i4eWV
              g$x$12634$1i4eWV)
            (if (>= g$x$12634$1i4eWV g$y$12635$1i4eWV)
              (list g$x$12634$1i4eWV '1)
              (if (g$positive?$12375$1i4eWV g$x$12634$1i4eWV)
                (g$sr$12636$1i4eWV g$x$12634$1i4eWV g$y$12635$1i4eWV)
                (if (g$negative?$12376$1i4eWV g$y$12635$1i4eWV)
                  ((case-lambda
                     ((g$rat$12637$1i4eWV)
                      (list
                        (- (car g$rat$12637$1i4eWV))
                        (g$cadr$12348$1i4eWV g$rat$12637$1i4eWV))))
                   (g$sr$12636$1i4eWV
                     (- g$y$12635$1i4eWV)
                     (- g$x$12634$1i4eWV)))
                  '(0 1)))))))))
   (g$vector-map$12479$1i4eWV
     g$vector-map$12737$1i4eWV
     (case-lambda
       ((g$p$12643$1i4eWV g$vec1$12644$1i4eWV . g$vecs$12645$1i4eWV)
        ((case-lambda
           ((g$len$12646$1i4eWV)
            ((case-lambda
               ((g$res$12647$1i4eWV)
                (letrec ((g$loop$12648$1i4eWV
                           (case-lambda
                             ((g$i$12649$1i4eWV)
                              (if (g$fx=?$16088$1i4eWV
                                    g$i$12649$1i4eWV
                                    g$len$12646$1i4eWV)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$12647$1i4eWV)
                                (begin
                                  (g$vector-set!$12343$1i4eWV
                                    g$res$12647$1i4eWV
                                    g$i$12649$1i4eWV
                                    (if (null? g$vecs$12645$1i4eWV)
                                      (g$p$12643$1i4eWV
                                        (g$vector-ref$12342$1i4eWV
                                          g$vec1$12644$1i4eWV
                                          g$i$12649$1i4eWV))
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (apply
                                             values
                                             (g$map$11835$1i4eWV
                                               (case-lambda
                                                 ((g$x$12650$1i4eWV)
                                                  (g$vector-ref$12342$1i4eWV
                                                    g$x$12650$1i4eWV
                                                    g$i$12649$1i4eWV)))
                                               (cons
                                                 g$vec1$12644$1i4eWV
                                                 g$vecs$12645$1i4eWV)))))
                                        g$p$12643$1i4eWV)))
                                  (g$loop$12648$1i4eWV
                                    (g$fx+$16075$1i4eWV
                                      g$i$12649$1i4eWV
                                      '1))))))))
                  (g$loop$12648$1i4eWV '0))))
             (make-vector g$len$12646$1i4eWV '()))))
         (vector-length g$vec1$12644$1i4eWV)))))
   (g$vector-for-each$12480$1i4eWV
     g$vector-for-each$12738$1i4eWV
     (case-lambda
       ((g$p$12651$1i4eWV g$vec1$12652$1i4eWV . g$vecs$12653$1i4eWV)
        ((case-lambda
           ((g$len$12654$1i4eWV)
            (letrec ((g$loop$12655$1i4eWV
                       (case-lambda
                         ((g$i$12656$1i4eWV)
                          (if (g$fx=?$16088$1i4eWV
                                g$i$12656$1i4eWV
                                g$len$12654$1i4eWV)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$12653$1i4eWV)
                                (g$p$12651$1i4eWV
                                  (g$vector-ref$12342$1i4eWV
                                    g$vec1$12652$1i4eWV
                                    g$i$12656$1i4eWV))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11835$1i4eWV
                                         (case-lambda
                                           ((g$x$12657$1i4eWV)
                                            (g$vector-ref$12342$1i4eWV
                                              g$x$12657$1i4eWV
                                              g$i$12656$1i4eWV)))
                                         (cons
                                           g$vec1$12652$1i4eWV
                                           g$vecs$12653$1i4eWV)))))
                                  g$p$12651$1i4eWV))
                              (g$loop$12655$1i4eWV
                                (g$fx+$16075$1i4eWV
                                  g$i$12656$1i4eWV
                                  '1))))))))
              (g$loop$12655$1i4eWV '0))))
         (vector-length g$vec1$12652$1i4eWV)))))
   (g$string-for-each$12481$1i4eWV
     g$string-for-each$12739$1i4eWV
     (case-lambda
       ((g$p$12658$1i4eWV g$str1$12659$1i4eWV . g$strs$12660$1i4eWV)
        ((case-lambda
           ((g$len$12661$1i4eWV)
            (letrec ((g$loop$12662$1i4eWV
                       (case-lambda
                         ((g$i$12663$1i4eWV)
                          (if (g$fx=?$16088$1i4eWV
                                g$i$12663$1i4eWV
                                g$len$12661$1i4eWV)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$12660$1i4eWV)
                                (g$p$12658$1i4eWV
                                  (string-ref
                                    g$str1$12659$1i4eWV
                                    g$i$12663$1i4eWV))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11835$1i4eWV
                                         (case-lambda
                                           ((g$x$12664$1i4eWV)
                                            (string-ref
                                              g$x$12664$1i4eWV
                                              g$i$12663$1i4eWV)))
                                         (cons
                                           g$str1$12659$1i4eWV
                                           g$strs$12660$1i4eWV)))))
                                  g$p$12658$1i4eWV))
                              (g$loop$12662$1i4eWV
                                (g$fx+$16075$1i4eWV
                                  g$i$12663$1i4eWV
                                  '1))))))))
              (g$loop$12662$1i4eWV '0))))
         (string-length g$str1$12659$1i4eWV))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$12741$1i4eWV
     g$using$12775$1i4eWV
     (clr-using-internal 'system))
   (g$using$12743$1i4eWV
     g$using$12776$1i4eWV
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$12744$1i4eWV
     g$make-eq-hashtable$12777$1i4eWV
     (case-lambda
       (() (g$make-eq-hashtable$12744$1i4eWV '32))
       ((g$k$12753$1i4eWV)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$12753$1i4eWV)))))
   (g$make-eqv-hashtable$12745$1i4eWV
     g$make-eqv-hashtable$12778$1i4eWV
     (case-lambda
       (() (g$make-eqv-hashtable$12745$1i4eWV '32))
       ((g$k$12754$1i4eWV)
        (make-hashtable eqv-hash eqv? g$k$12754$1i4eWV))))
   (g$hashtable-size$12746$1i4eWV
     g$hashtable-size$12779$1i4eWV
     (case-lambda
       ((g$ht$12755$1i4eWV)
        (clr-call-internal 'hashtable 'get_count g$ht$12755$1i4eWV))))
   (g$hashtable-ref$12747$1i4eWV
     g$hashtable-ref$12780$1i4eWV
     (case-lambda
       ((g$ht$12756$1i4eWV g$key$12757$1i4eWV g$default$12758$1i4eWV)
        (letrec* ((g$r$12759$1i4eWV
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$12756$1i4eWV
                      g$key$12757$1i4eWV)))
          (if ((case-lambda
                 ((g$t$12760$1i4eWV)
                  (if g$t$12760$1i4eWV
                    g$t$12760$1i4eWV
                    (begin
                      '#f
                      (g$hashtable-contains?$12750$1i4eWV
                        g$ht$12756$1i4eWV
                        g$key$12757$1i4eWV)))))
               (not (null? g$r$12759$1i4eWV)))
            g$r$12759$1i4eWV
            g$default$12758$1i4eWV)))))
   (g$hashtable-set!$12748$1i4eWV
     g$hashtable-set!$12781$1i4eWV
     (case-lambda
       ((g$ht$12761$1i4eWV g$key$12762$1i4eWV g$obj$12763$1i4eWV)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$12761$1i4eWV
          g$key$12762$1i4eWV
          g$obj$12763$1i4eWV))))
   (g$hashtable-delete!$12749$1i4eWV
     g$hashtable-delete!$12782$1i4eWV
     (case-lambda
       ((g$ht$12764$1i4eWV g$key$12765$1i4eWV)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$12764$1i4eWV
          g$key$12765$1i4eWV))))
   (g$hashtable-contains?$12750$1i4eWV
     g$hashtable-contains?$12783$1i4eWV
     (case-lambda
       ((g$ht$12766$1i4eWV g$key$12767$1i4eWV)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$12766$1i4eWV
          g$key$12767$1i4eWV))))
   (g$hashtable-update!$12751$1i4eWV
     g$hashtable-update!$12784$1i4eWV
     (case-lambda
       ((g$ht$12768$1i4eWV
          g$key$12769$1i4eWV
          g$proc$12770$1i4eWV
          g$default$12771$1i4eWV)
        (g$hashtable-set!$12748$1i4eWV
          g$ht$12768$1i4eWV
          g$key$12769$1i4eWV
          (g$proc$12770$1i4eWV
            (g$hashtable-ref$12747$1i4eWV
              g$ht$12768$1i4eWV
              g$key$12769$1i4eWV
              g$default$12771$1i4eWV))))))
   (g$hashtable-clear!$12752$1i4eWV
     g$hashtable-clear!$12785$1i4eWV
     (case-lambda
       ((g$ht$12772$1i4eWV)
        (g$hashtable-clear!$12752$1i4eWV g$ht$12772$1i4eWV '32))
       ((g$ht$12773$1i4eWV g$k$12774$1i4eWV)
        (clr-call-internal 'hashtable 'clear g$ht$12773$1i4eWV)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$12787$1i4eWV
     g$using$12794$1i4eWV
     (clr-using-internal 'system.io))
   (g$file-exists?$12788$1i4eWV
     g$file-exists?$12795$1i4eWV
     (case-lambda
       ((g$fn$12791$1i4eWV)
        (clr-call-internal 'file 'exists '() g$fn$12791$1i4eWV))))
   (g$delete-file$12789$1i4eWV
     g$delete-file$12796$1i4eWV
     (case-lambda
       ((g$fn$12792$1i4eWV)
        (clr-call-internal 'file 'delete '() g$fn$12792$1i4eWV))))
   (g$get-directory-name$12790$1i4eWV
     g$get-directory-name$12797$1i4eWV
     (case-lambda
       ((g$path$12793$1i4eWV)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$12793$1i4eWV)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$12798$1i4eWV
     g$native-endianness$12909$1i4eWV
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$12799$1i4eWV
     g$bytevector-u16-ref$12910$1i4eWV
     (case-lambda
       ((g$bytevector$12827$1i4eWV
          g$k$12828$1i4eWV
          g$endianness$12829$1i4eWV)
        (bytevector-uint-ref
          g$bytevector$12827$1i4eWV
          g$k$12828$1i4eWV
          g$endianness$12829$1i4eWV
          '2))))
   (g$bytevector-s16-ref$12800$1i4eWV
     g$bytevector-s16-ref$12911$1i4eWV
     (case-lambda
       ((g$bytevector$12830$1i4eWV
          g$k$12831$1i4eWV
          g$endianness$12832$1i4eWV)
        (bytevector-sint-ref
          g$bytevector$12830$1i4eWV
          g$k$12831$1i4eWV
          g$endianness$12832$1i4eWV
          '2))))
   (g$bytevector-u16-native-ref$12801$1i4eWV
     g$bytevector-u16-native-ref$12912$1i4eWV
     (case-lambda
       ((g$bytevector$12833$1i4eWV g$k$12834$1i4eWV)
        (bytevector-uint-ref
          g$bytevector$12833$1i4eWV
          g$k$12834$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '2))))
   (g$bytevector-s16-native-ref$12802$1i4eWV
     g$bytevector-s16-native-ref$12913$1i4eWV
     (case-lambda
       ((g$bytevector$12835$1i4eWV g$k$12836$1i4eWV)
        (bytevector-sint-ref
          g$bytevector$12835$1i4eWV
          g$k$12836$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '2))))
   (g$bytevector-u16-set!$12803$1i4eWV
     g$bytevector-u16-set!$12914$1i4eWV
     (case-lambda
       ((g$bytevector$12837$1i4eWV
          g$k$12838$1i4eWV
          g$n$12839$1i4eWV
          g$endianness$12840$1i4eWV)
        (bytevector-uint-set!
          g$bytevector$12837$1i4eWV
          g$k$12838$1i4eWV
          g$n$12839$1i4eWV
          g$endianness$12840$1i4eWV
          '2))))
   (g$bytevector-s16-set!$12804$1i4eWV
     g$bytevector-s16-set!$12915$1i4eWV
     (case-lambda
       ((g$bytevector$12841$1i4eWV
          g$k$12842$1i4eWV
          g$n$12843$1i4eWV
          g$endianness$12844$1i4eWV)
        (bytevector-sint-set!
          g$bytevector$12841$1i4eWV
          g$k$12842$1i4eWV
          g$n$12843$1i4eWV
          g$endianness$12844$1i4eWV
          '2))))
   (g$bytevector-u16-native-set!$12805$1i4eWV
     g$bytevector-u16-native-set!$12916$1i4eWV
     (case-lambda
       ((g$bytevector$12845$1i4eWV g$k$12846$1i4eWV g$n$12847$1i4eWV)
        (bytevector-uint-set!
          g$bytevector$12845$1i4eWV
          g$k$12846$1i4eWV
          g$n$12847$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '2))))
   (g$bytevector-s16-native-set!$12806$1i4eWV
     g$bytevector-s16-native-set!$12917$1i4eWV
     (case-lambda
       ((g$bytevector$12848$1i4eWV g$k$12849$1i4eWV g$n$12850$1i4eWV)
        (bytevector-sint-set!
          g$bytevector$12848$1i4eWV
          g$k$12849$1i4eWV
          g$n$12850$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '2))))
   (g$bytevector-u32-ref$12807$1i4eWV
     g$bytevector-u32-ref$12918$1i4eWV
     (case-lambda
       ((g$bytevector$12851$1i4eWV
          g$k$12852$1i4eWV
          g$endianness$12853$1i4eWV)
        (bytevector-uint-ref
          g$bytevector$12851$1i4eWV
          g$k$12852$1i4eWV
          g$endianness$12853$1i4eWV
          '4))))
   (g$bytevector-s32-ref$12808$1i4eWV
     g$bytevector-s32-ref$12919$1i4eWV
     (case-lambda
       ((g$bytevector$12854$1i4eWV
          g$k$12855$1i4eWV
          g$endianness$12856$1i4eWV)
        (bytevector-sint-ref
          g$bytevector$12854$1i4eWV
          g$k$12855$1i4eWV
          g$endianness$12856$1i4eWV
          '4))))
   (g$bytevector-u32-native-ref$12809$1i4eWV
     g$bytevector-u32-native-ref$12920$1i4eWV
     (case-lambda
       ((g$bytevector$12857$1i4eWV g$k$12858$1i4eWV)
        (bytevector-uint-ref
          g$bytevector$12857$1i4eWV
          g$k$12858$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '4))))
   (g$bytevector-s32-native-ref$12810$1i4eWV
     g$bytevector-s32-native-ref$12921$1i4eWV
     (case-lambda
       ((g$bytevector$12859$1i4eWV g$k$12860$1i4eWV)
        (bytevector-sint-ref
          g$bytevector$12859$1i4eWV
          g$k$12860$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '4))))
   (g$bytevector-u32-set!$12811$1i4eWV
     g$bytevector-u32-set!$12922$1i4eWV
     (case-lambda
       ((g$bytevector$12861$1i4eWV
          g$k$12862$1i4eWV
          g$n$12863$1i4eWV
          g$endianness$12864$1i4eWV)
        (bytevector-uint-set!
          g$bytevector$12861$1i4eWV
          g$k$12862$1i4eWV
          g$n$12863$1i4eWV
          g$endianness$12864$1i4eWV
          '4))))
   (g$bytevector-s32-set!$12812$1i4eWV
     g$bytevector-s32-set!$12923$1i4eWV
     (case-lambda
       ((g$bytevector$12865$1i4eWV
          g$k$12866$1i4eWV
          g$n$12867$1i4eWV
          g$endianness$12868$1i4eWV)
        (bytevector-sint-set!
          g$bytevector$12865$1i4eWV
          g$k$12866$1i4eWV
          g$n$12867$1i4eWV
          g$endianness$12868$1i4eWV
          '4))))
   (g$bytevector-u32-native-set!$12813$1i4eWV
     g$bytevector-u32-native-set!$12924$1i4eWV
     (case-lambda
       ((g$bytevector$12869$1i4eWV g$k$12870$1i4eWV g$n$12871$1i4eWV)
        (bytevector-uint-set!
          g$bytevector$12869$1i4eWV
          g$k$12870$1i4eWV
          g$n$12871$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '4))))
   (g$bytevector-s32-native-set!$12814$1i4eWV
     g$bytevector-s32-native-set!$12925$1i4eWV
     (case-lambda
       ((g$bytevector$12872$1i4eWV g$k$12873$1i4eWV g$n$12874$1i4eWV)
        (bytevector-sint-set!
          g$bytevector$12872$1i4eWV
          g$k$12873$1i4eWV
          g$n$12874$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '4))))
   (g$bytevector-u64-ref$12815$1i4eWV
     g$bytevector-u64-ref$12926$1i4eWV
     (case-lambda
       ((g$bytevector$12875$1i4eWV
          g$k$12876$1i4eWV
          g$endianness$12877$1i4eWV)
        (bytevector-uint-ref
          g$bytevector$12875$1i4eWV
          g$k$12876$1i4eWV
          g$endianness$12877$1i4eWV
          '8))))
   (g$bytevector-s64-ref$12816$1i4eWV
     g$bytevector-s64-ref$12927$1i4eWV
     (case-lambda
       ((g$bytevector$12878$1i4eWV
          g$k$12879$1i4eWV
          g$endianness$12880$1i4eWV)
        (bytevector-sint-ref
          g$bytevector$12878$1i4eWV
          g$k$12879$1i4eWV
          g$endianness$12880$1i4eWV
          '8))))
   (g$bytevector-u64-native-ref$12817$1i4eWV
     g$bytevector-u64-native-ref$12928$1i4eWV
     (case-lambda
       ((g$bytevector$12881$1i4eWV g$k$12882$1i4eWV)
        (bytevector-uint-ref
          g$bytevector$12881$1i4eWV
          g$k$12882$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '8))))
   (g$bytevector-s64-native-ref$12818$1i4eWV
     g$bytevector-s64-native-ref$12929$1i4eWV
     (case-lambda
       ((g$bytevector$12883$1i4eWV g$k$12884$1i4eWV)
        (bytevector-sint-ref
          g$bytevector$12883$1i4eWV
          g$k$12884$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '8))))
   (g$bytevector-u64-set!$12819$1i4eWV
     g$bytevector-u64-set!$12930$1i4eWV
     (case-lambda
       ((g$bytevector$12885$1i4eWV
          g$k$12886$1i4eWV
          g$n$12887$1i4eWV
          g$endianness$12888$1i4eWV)
        (bytevector-uint-set!
          g$bytevector$12885$1i4eWV
          g$k$12886$1i4eWV
          g$n$12887$1i4eWV
          g$endianness$12888$1i4eWV
          '8))))
   (g$bytevector-s64-set!$12820$1i4eWV
     g$bytevector-s64-set!$12931$1i4eWV
     (case-lambda
       ((g$bytevector$12889$1i4eWV
          g$k$12890$1i4eWV
          g$n$12891$1i4eWV
          g$endianness$12892$1i4eWV)
        (bytevector-sint-set!
          g$bytevector$12889$1i4eWV
          g$k$12890$1i4eWV
          g$n$12891$1i4eWV
          g$endianness$12892$1i4eWV
          '8))))
   (g$bytevector-u64-native-set!$12821$1i4eWV
     g$bytevector-u64-native-set!$12932$1i4eWV
     (case-lambda
       ((g$bytevector$12893$1i4eWV g$k$12894$1i4eWV g$n$12895$1i4eWV)
        (bytevector-uint-set!
          g$bytevector$12893$1i4eWV
          g$k$12894$1i4eWV
          g$n$12895$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '8))))
   (g$bytevector-s64-native-set!$12822$1i4eWV
     g$bytevector-s64-native-set!$12933$1i4eWV
     (case-lambda
       ((g$bytevector$12896$1i4eWV g$k$12897$1i4eWV g$n$12898$1i4eWV)
        (bytevector-sint-set!
          g$bytevector$12896$1i4eWV
          g$k$12897$1i4eWV
          g$n$12898$1i4eWV
          (g$native-endianness$12798$1i4eWV)
          '8))))
   (g$bytevector-ieee-single-native-ref$12823$1i4eWV
     g$bytevector-ieee-single-native-ref$12934$1i4eWV
     (case-lambda
       ((g$bytevector$12899$1i4eWV g$k$12900$1i4eWV)
        (if (not (g$zero?$12715$1i4eWV
                   (g$mod$12674$1i4eWV g$k$12900$1i4eWV '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$12900$1i4eWV)
          (bytevector-ieee-single-ref
            g$bytevector$12899$1i4eWV
            g$k$12900$1i4eWV
            (g$native-endianness$12798$1i4eWV))))))
   (g$bytevector-ieee-double-native-ref$12824$1i4eWV
     g$bytevector-ieee-double-native-ref$12935$1i4eWV
     (case-lambda
       ((g$bytevector$12901$1i4eWV g$k$12902$1i4eWV)
        (if (not (g$zero?$12715$1i4eWV
                   (g$mod$12674$1i4eWV g$k$12902$1i4eWV '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$12902$1i4eWV)
          (bytevector-ieee-double-ref
            g$bytevector$12901$1i4eWV
            g$k$12902$1i4eWV
            (g$native-endianness$12798$1i4eWV))))))
   (g$bytevector-ieee-single-native-set!$12825$1i4eWV
     g$bytevector-ieee-single-native-set!$12936$1i4eWV
     (case-lambda
       ((g$bytevector$12903$1i4eWV g$k$12904$1i4eWV g$x$12905$1i4eWV)
        (if (not (g$zero?$12715$1i4eWV
                   (g$mod$12674$1i4eWV g$k$12904$1i4eWV '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$12904$1i4eWV)
          (bytevector-ieee-single-set!
            g$bytevector$12903$1i4eWV
            g$k$12904$1i4eWV
            g$x$12905$1i4eWV
            (g$native-endianness$12798$1i4eWV))))))
   (g$bytevector-ieee-double-native-set!$12826$1i4eWV
     g$bytevector-ieee-double-native-set!$12937$1i4eWV
     (case-lambda
       ((g$bytevector$12906$1i4eWV g$k$12907$1i4eWV g$x$12908$1i4eWV)
        (if (not (g$zero?$12715$1i4eWV
                   (g$mod$12674$1i4eWV g$k$12907$1i4eWV '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$12907$1i4eWV)
          (bytevector-ieee-double-set!
            g$bytevector$12906$1i4eWV
            g$k$12907$1i4eWV
            g$x$12908$1i4eWV
            (g$native-endianness$12798$1i4eWV)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$5929$12938$1i4eWV
     g$5929$13340$1i4eWV
     (make-record-type-descriptor
       '&condition
       '#f
       'g$5932$1i4eWV
       '#f
       '#f
       '#()))
   (g$5931$12939$1i4eWV g$5931$13341$1i4eWV '#f)
   (g$5930$12940$1i4eWV
     g$5930$13342$1i4eWV
     (make-record-constructor-descriptor
       g$5929$12938$1i4eWV
       '#f
       g$5931$12939$1i4eWV))
   (g$&condition?$12943$1i4eWV
     g$&condition?$13343$1i4eWV
     (record-predicate g$5929$12938$1i4eWV))
   (g$make-&condition$12944$1i4eWV
     g$make-&condition$13344$1i4eWV
     (record-constructor g$5930$12940$1i4eWV))
   (g$&condition-rtd$12945$1i4eWV
     g$&condition-rtd$13345$1i4eWV
     g$5929$12938$1i4eWV)
   (g$&condition-rcd$12946$1i4eWV
     g$&condition-rcd$13346$1i4eWV
     g$5930$12940$1i4eWV)
   (g$5966$13044$1i4eWV
     g$5966$13347$1i4eWV
     (make-record-type-descriptor
       '&message
       g$5929$12938$1i4eWV
       'g$5969$1i4eWV
       '#f
       '#f
       '#((immutable message))))
   (g$5968$13045$1i4eWV g$5968$13348$1i4eWV '#f)
   (g$5967$13046$1i4eWV
     g$5967$13349$1i4eWV
     (make-record-constructor-descriptor
       g$5966$13044$1i4eWV
       g$5930$12940$1i4eWV
       g$5968$13045$1i4eWV))
   (g$p?$13049$1i4eWV
     g$p?$13350$1i4eWV
     (record-predicate g$5966$13044$1i4eWV))
   (g$make-message-condition$13050$1i4eWV
     g$make-message-condition$13351$1i4eWV
     (record-constructor g$5967$13046$1i4eWV))
   (g$condition-message$13051$1i4eWV
     g$condition-message$13352$1i4eWV
     (record-accessor g$5966$13044$1i4eWV '0))
   (g$message-condition?$13052$1i4eWV
     g$message-condition?$13353$1i4eWV
     (condition-predicate g$5966$13044$1i4eWV))
   (g$condition-message$13053$1i4eWV
     g$condition-message$13354$1i4eWV
     (condition-accessor
       g$5966$13044$1i4eWV
       g$condition-message$13051$1i4eWV))
   (g$&message-rtd$13054$1i4eWV
     g$&message-rtd$13355$1i4eWV
     g$5966$13044$1i4eWV)
   (g$&message-rcd$13055$1i4eWV
     g$&message-rcd$13356$1i4eWV
     g$5967$13046$1i4eWV)
   (g$5981$13056$1i4eWV
     g$5981$13357$1i4eWV
     (make-record-type-descriptor
       '&warning
       g$5929$12938$1i4eWV
       'g$5984$1i4eWV
       '#f
       '#f
       '#()))
   (g$5983$13057$1i4eWV g$5983$13358$1i4eWV '#f)
   (g$5982$13058$1i4eWV
     g$5982$13359$1i4eWV
     (make-record-constructor-descriptor
       g$5981$13056$1i4eWV
       g$5930$12940$1i4eWV
       g$5983$13057$1i4eWV))
   (g$p?$13061$1i4eWV
     g$p?$13360$1i4eWV
     (record-predicate g$5981$13056$1i4eWV))
   (g$make-warning$13062$1i4eWV
     g$make-warning$13361$1i4eWV
     (record-constructor g$5982$13058$1i4eWV))
   (g$warning?$13063$1i4eWV
     g$warning?$13362$1i4eWV
     (condition-predicate g$5981$13056$1i4eWV))
   (g$&warning-rtd$13064$1i4eWV
     g$&warning-rtd$13363$1i4eWV
     g$5981$13056$1i4eWV)
   (g$&warning-rcd$13065$1i4eWV
     g$&warning-rcd$13364$1i4eWV
     g$5982$13058$1i4eWV)
   (g$5994$13066$1i4eWV
     g$5994$13365$1i4eWV
     (make-record-type-descriptor
       '&serious
       g$5929$12938$1i4eWV
       'g$5997$1i4eWV
       '#f
       '#f
       '#()))
   (g$5996$13067$1i4eWV g$5996$13366$1i4eWV '#f)
   (g$5995$13068$1i4eWV
     g$5995$13367$1i4eWV
     (make-record-constructor-descriptor
       g$5994$13066$1i4eWV
       g$5930$12940$1i4eWV
       g$5996$13067$1i4eWV))
   (g$p?$13071$1i4eWV
     g$p?$13368$1i4eWV
     (record-predicate g$5994$13066$1i4eWV))
   (g$make-serious-condition$13072$1i4eWV
     g$make-serious-condition$13369$1i4eWV
     (record-constructor g$5995$13068$1i4eWV))
   (g$serious-condition?$13073$1i4eWV
     g$serious-condition?$13370$1i4eWV
     (condition-predicate g$5994$13066$1i4eWV))
   (g$&serious-rtd$13074$1i4eWV
     g$&serious-rtd$13371$1i4eWV
     g$5994$13066$1i4eWV)
   (g$&serious-rcd$13075$1i4eWV
     g$&serious-rcd$13372$1i4eWV
     g$5995$13068$1i4eWV)
   (g$6007$13076$1i4eWV
     g$6007$13373$1i4eWV
     (make-record-type-descriptor
       '&error
       g$5994$13066$1i4eWV
       'g$6010$1i4eWV
       '#f
       '#f
       '#()))
   (g$6009$13077$1i4eWV g$6009$13374$1i4eWV '#f)
   (g$6008$13078$1i4eWV
     g$6008$13375$1i4eWV
     (make-record-constructor-descriptor
       g$6007$13076$1i4eWV
       g$5995$13068$1i4eWV
       g$6009$13077$1i4eWV))
   (g$p?$13081$1i4eWV
     g$p?$13376$1i4eWV
     (record-predicate g$6007$13076$1i4eWV))
   (g$make-error$13082$1i4eWV
     g$make-error$13377$1i4eWV
     (record-constructor g$6008$13078$1i4eWV))
   (g$error?$13083$1i4eWV
     g$error?$13378$1i4eWV
     (condition-predicate g$6007$13076$1i4eWV))
   (g$&error-rtd$13084$1i4eWV
     g$&error-rtd$13379$1i4eWV
     g$6007$13076$1i4eWV)
   (g$&error-rcd$13085$1i4eWV
     g$&error-rcd$13380$1i4eWV
     g$6008$13078$1i4eWV)
   (g$6020$13086$1i4eWV
     g$6020$13381$1i4eWV
     (make-record-type-descriptor
       '&violation
       g$5994$13066$1i4eWV
       'g$6023$1i4eWV
       '#f
       '#f
       '#()))
   (g$6022$13087$1i4eWV g$6022$13382$1i4eWV '#f)
   (g$6021$13088$1i4eWV
     g$6021$13383$1i4eWV
     (make-record-constructor-descriptor
       g$6020$13086$1i4eWV
       g$5995$13068$1i4eWV
       g$6022$13087$1i4eWV))
   (g$p?$13091$1i4eWV
     g$p?$13384$1i4eWV
     (record-predicate g$6020$13086$1i4eWV))
   (g$make-violation$13092$1i4eWV
     g$make-violation$13385$1i4eWV
     (record-constructor g$6021$13088$1i4eWV))
   (g$violation?$13093$1i4eWV
     g$violation?$13386$1i4eWV
     (condition-predicate g$6020$13086$1i4eWV))
   (g$&violation-rtd$13094$1i4eWV
     g$&violation-rtd$13387$1i4eWV
     g$6020$13086$1i4eWV)
   (g$&violation-rcd$13095$1i4eWV
     g$&violation-rcd$13388$1i4eWV
     g$6021$13088$1i4eWV)
   (g$6033$13096$1i4eWV
     g$6033$13389$1i4eWV
     (make-record-type-descriptor
       '&assertion
       g$6020$13086$1i4eWV
       'g$6036$1i4eWV
       '#f
       '#f
       '#()))
   (g$6035$13097$1i4eWV g$6035$13390$1i4eWV '#f)
   (g$6034$13098$1i4eWV
     g$6034$13391$1i4eWV
     (make-record-constructor-descriptor
       g$6033$13096$1i4eWV
       g$6021$13088$1i4eWV
       g$6035$13097$1i4eWV))
   (g$p?$13101$1i4eWV
     g$p?$13392$1i4eWV
     (record-predicate g$6033$13096$1i4eWV))
   (g$make-assertion-violation$13102$1i4eWV
     g$make-assertion-violation$13393$1i4eWV
     (record-constructor g$6034$13098$1i4eWV))
   (g$assertion-violation?$13103$1i4eWV
     g$assertion-violation?$13394$1i4eWV
     (condition-predicate g$6033$13096$1i4eWV))
   (g$&assertion-rtd$13104$1i4eWV
     g$&assertion-rtd$13395$1i4eWV
     g$6033$13096$1i4eWV)
   (g$&assertion-rcd$13105$1i4eWV
     g$&assertion-rcd$13396$1i4eWV
     g$6034$13098$1i4eWV)
   (g$6046$13107$1i4eWV
     g$6046$13397$1i4eWV
     (make-record-type-descriptor
       '&irritants
       g$5929$12938$1i4eWV
       'g$6049$1i4eWV
       '#f
       '#f
       '#((immutable irritants))))
   (g$6048$13108$1i4eWV g$6048$13398$1i4eWV '#f)
   (g$6047$13109$1i4eWV
     g$6047$13399$1i4eWV
     (make-record-constructor-descriptor
       g$6046$13107$1i4eWV
       g$5930$12940$1i4eWV
       g$6048$13108$1i4eWV))
   (g$p?$13112$1i4eWV
     g$p?$13400$1i4eWV
     (record-predicate g$6046$13107$1i4eWV))
   (g$make-irritants-condition$13113$1i4eWV
     g$make-irritants-condition$13401$1i4eWV
     (record-constructor g$6047$13109$1i4eWV))
   (g$condition-irritants$13114$1i4eWV
     g$condition-irritants$13402$1i4eWV
     (record-accessor g$6046$13107$1i4eWV '0))
   (g$irritants-condition?$13115$1i4eWV
     g$irritants-condition?$13403$1i4eWV
     (condition-predicate g$6046$13107$1i4eWV))
   (g$condition-irritants$13116$1i4eWV
     g$condition-irritants$13404$1i4eWV
     (condition-accessor
       g$6046$13107$1i4eWV
       g$condition-irritants$13114$1i4eWV))
   (g$&irritants-rtd$13117$1i4eWV
     g$&irritants-rtd$13405$1i4eWV
     g$6046$13107$1i4eWV)
   (g$&irritants-rcd$13118$1i4eWV
     g$&irritants-rcd$13406$1i4eWV
     g$6047$13109$1i4eWV)
   (g$6061$13120$1i4eWV
     g$6061$13407$1i4eWV
     (make-record-type-descriptor
       '&who
       g$5929$12938$1i4eWV
       'g$6064$1i4eWV
       '#f
       '#f
       '#((immutable who))))
   (g$6063$13121$1i4eWV g$6063$13408$1i4eWV '#f)
   (g$6062$13122$1i4eWV
     g$6062$13409$1i4eWV
     (make-record-constructor-descriptor
       g$6061$13120$1i4eWV
       g$5930$12940$1i4eWV
       g$6063$13121$1i4eWV))
   (g$p?$13125$1i4eWV
     g$p?$13410$1i4eWV
     (record-predicate g$6061$13120$1i4eWV))
   (g$make-who-condition$13126$1i4eWV
     g$make-who-condition$13411$1i4eWV
     (record-constructor g$6062$13122$1i4eWV))
   (g$condition-who$13127$1i4eWV
     g$condition-who$13412$1i4eWV
     (record-accessor g$6061$13120$1i4eWV '0))
   (g$who-condition?$13128$1i4eWV
     g$who-condition?$13413$1i4eWV
     (condition-predicate g$6061$13120$1i4eWV))
   (g$condition-who$13129$1i4eWV
     g$condition-who$13414$1i4eWV
     (condition-accessor
       g$6061$13120$1i4eWV
       g$condition-who$13127$1i4eWV))
   (g$&who-rtd$13130$1i4eWV g$&who-rtd$13415$1i4eWV g$6061$13120$1i4eWV)
   (g$&who-rcd$13131$1i4eWV g$&who-rcd$13416$1i4eWV g$6062$13122$1i4eWV)
   (g$6076$13132$1i4eWV
     g$6076$13417$1i4eWV
     (make-record-type-descriptor
       '&non-continuable
       g$6020$13086$1i4eWV
       'g$6079$1i4eWV
       '#f
       '#f
       '#()))
   (g$6078$13133$1i4eWV g$6078$13418$1i4eWV '#f)
   (g$6077$13134$1i4eWV
     g$6077$13419$1i4eWV
     (make-record-constructor-descriptor
       g$6076$13132$1i4eWV
       g$6021$13088$1i4eWV
       g$6078$13133$1i4eWV))
   (g$p?$13137$1i4eWV
     g$p?$13420$1i4eWV
     (record-predicate g$6076$13132$1i4eWV))
   (g$make-non-continuable-violation$13138$1i4eWV
     g$make-non-continuable-violation$13421$1i4eWV
     (record-constructor g$6077$13134$1i4eWV))
   (g$non-continuable-violation?$13139$1i4eWV
     g$non-continuable-violation?$13422$1i4eWV
     (condition-predicate g$6076$13132$1i4eWV))
   (g$&non-continuable-rtd$13140$1i4eWV
     g$&non-continuable-rtd$13423$1i4eWV
     g$6076$13132$1i4eWV)
   (g$&non-continuable-rcd$13141$1i4eWV
     g$&non-continuable-rcd$13424$1i4eWV
     g$6077$13134$1i4eWV)
   (g$6089$13142$1i4eWV
     g$6089$13425$1i4eWV
     (make-record-type-descriptor
       '&implementation-restriction
       g$6020$13086$1i4eWV
       'g$6092$1i4eWV
       '#f
       '#f
       '#()))
   (g$6091$13143$1i4eWV g$6091$13426$1i4eWV '#f)
   (g$6090$13144$1i4eWV
     g$6090$13427$1i4eWV
     (make-record-constructor-descriptor
       g$6089$13142$1i4eWV
       g$6021$13088$1i4eWV
       g$6091$13143$1i4eWV))
   (g$p?$13147$1i4eWV
     g$p?$13428$1i4eWV
     (record-predicate g$6089$13142$1i4eWV))
   (g$make-implementation-restriction-violation$13148$1i4eWV
     g$make-implementation-restriction-violation$13429$1i4eWV
     (record-constructor g$6090$13144$1i4eWV))
   (g$implementation-restriction-violation?$13149$1i4eWV
     g$implementation-restriction-violation?$13430$1i4eWV
     (condition-predicate g$6089$13142$1i4eWV))
   (g$&implementation-restriction-rtd$13150$1i4eWV
     g$&implementation-restriction-rtd$13431$1i4eWV
     g$6089$13142$1i4eWV)
   (g$&implementation-restriction-rcd$13151$1i4eWV
     g$&implementation-restriction-rcd$13432$1i4eWV
     g$6090$13144$1i4eWV)
   (g$6102$13152$1i4eWV
     g$6102$13433$1i4eWV
     (make-record-type-descriptor
       '&lexical
       g$6020$13086$1i4eWV
       'g$6105$1i4eWV
       '#f
       '#f
       '#()))
   (g$6104$13153$1i4eWV g$6104$13434$1i4eWV '#f)
   (g$6103$13154$1i4eWV
     g$6103$13435$1i4eWV
     (make-record-constructor-descriptor
       g$6102$13152$1i4eWV
       g$6021$13088$1i4eWV
       g$6104$13153$1i4eWV))
   (g$p?$13157$1i4eWV
     g$p?$13436$1i4eWV
     (record-predicate g$6102$13152$1i4eWV))
   (g$make-lexical-violation$13158$1i4eWV
     g$make-lexical-violation$13437$1i4eWV
     (record-constructor g$6103$13154$1i4eWV))
   (g$lexical-violation?$13159$1i4eWV
     g$lexical-violation?$13438$1i4eWV
     (condition-predicate g$6102$13152$1i4eWV))
   (g$&lexical-rtd$13160$1i4eWV
     g$&lexical-rtd$13439$1i4eWV
     g$6102$13152$1i4eWV)
   (g$&lexical-rcd$13161$1i4eWV
     g$&lexical-rcd$13440$1i4eWV
     g$6103$13154$1i4eWV)
   (g$6115$13164$1i4eWV
     g$6115$13441$1i4eWV
     (make-record-type-descriptor
       '&syntax
       g$6020$13086$1i4eWV
       'g$6118$1i4eWV
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6117$13165$1i4eWV g$6117$13442$1i4eWV '#f)
   (g$6116$13166$1i4eWV
     g$6116$13443$1i4eWV
     (make-record-constructor-descriptor
       g$6115$13164$1i4eWV
       g$6021$13088$1i4eWV
       g$6117$13165$1i4eWV))
   (g$p?$13169$1i4eWV
     g$p?$13444$1i4eWV
     (record-predicate g$6115$13164$1i4eWV))
   (g$make-syntax-violation$13170$1i4eWV
     g$make-syntax-violation$13445$1i4eWV
     (record-constructor g$6116$13166$1i4eWV))
   (g$syntax-violation-form$13171$1i4eWV
     g$syntax-violation-form$13446$1i4eWV
     (record-accessor g$6115$13164$1i4eWV '0))
   (g$syntax-violation-subform$13172$1i4eWV
     g$syntax-violation-subform$13447$1i4eWV
     (record-accessor g$6115$13164$1i4eWV '1))
   (g$syntax-violation?$13173$1i4eWV
     g$syntax-violation?$13448$1i4eWV
     (condition-predicate g$6115$13164$1i4eWV))
   (g$syntax-violation-form$13174$1i4eWV
     g$syntax-violation-form$13449$1i4eWV
     (condition-accessor
       g$6115$13164$1i4eWV
       g$syntax-violation-form$13171$1i4eWV))
   (g$syntax-violation-subform$13175$1i4eWV
     g$syntax-violation-subform$13450$1i4eWV
     (condition-accessor
       g$6115$13164$1i4eWV
       g$syntax-violation-subform$13172$1i4eWV))
   (g$&syntax-rtd$13176$1i4eWV
     g$&syntax-rtd$13451$1i4eWV
     g$6115$13164$1i4eWV)
   (g$&syntax-rcd$13177$1i4eWV
     g$&syntax-rcd$13452$1i4eWV
     g$6116$13166$1i4eWV)
   (g$6132$13178$1i4eWV
     g$6132$13453$1i4eWV
     (make-record-type-descriptor
       '&undefined
       g$6020$13086$1i4eWV
       'g$6135$1i4eWV
       '#f
       '#f
       '#()))
   (g$6134$13179$1i4eWV g$6134$13454$1i4eWV '#f)
   (g$6133$13180$1i4eWV
     g$6133$13455$1i4eWV
     (make-record-constructor-descriptor
       g$6132$13178$1i4eWV
       g$6021$13088$1i4eWV
       g$6134$13179$1i4eWV))
   (g$p?$13183$1i4eWV
     g$p?$13456$1i4eWV
     (record-predicate g$6132$13178$1i4eWV))
   (g$make-undefined-violation$13184$1i4eWV
     g$make-undefined-violation$13457$1i4eWV
     (record-constructor g$6133$13180$1i4eWV))
   (g$undefined-violation?$13185$1i4eWV
     g$undefined-violation?$13458$1i4eWV
     (condition-predicate g$6132$13178$1i4eWV))
   (g$&undefined-rtd$13186$1i4eWV
     g$&undefined-rtd$13459$1i4eWV
     g$6132$13178$1i4eWV)
   (g$&undefined-rcd$13187$1i4eWV
     g$&undefined-rcd$13460$1i4eWV
     g$6133$13180$1i4eWV)
   (g$6145$13188$1i4eWV
     g$6145$13461$1i4eWV
     (make-record-type-descriptor
       '&i/o
       g$6007$13076$1i4eWV
       'g$6148$1i4eWV
       '#f
       '#f
       '#()))
   (g$6147$13189$1i4eWV g$6147$13462$1i4eWV '#f)
   (g$6146$13190$1i4eWV
     g$6146$13463$1i4eWV
     (make-record-constructor-descriptor
       g$6145$13188$1i4eWV
       g$6008$13078$1i4eWV
       g$6147$13189$1i4eWV))
   (g$p?$13193$1i4eWV
     g$p?$13464$1i4eWV
     (record-predicate g$6145$13188$1i4eWV))
   (g$make-i/o-error$13194$1i4eWV
     g$make-i/o-error$13465$1i4eWV
     (record-constructor g$6146$13190$1i4eWV))
   (g$i/o-error?$13195$1i4eWV
     g$i/o-error?$13466$1i4eWV
     (condition-predicate g$6145$13188$1i4eWV))
   (g$&i/o-rtd$13196$1i4eWV g$&i/o-rtd$13467$1i4eWV g$6145$13188$1i4eWV)
   (g$&i/o-rcd$13197$1i4eWV g$&i/o-rcd$13468$1i4eWV g$6146$13190$1i4eWV)
   (g$6158$13198$1i4eWV
     g$6158$13469$1i4eWV
     (make-record-type-descriptor
       '&i/o-read
       g$6145$13188$1i4eWV
       'g$6161$1i4eWV
       '#f
       '#f
       '#()))
   (g$6160$13199$1i4eWV g$6160$13470$1i4eWV '#f)
   (g$6159$13200$1i4eWV
     g$6159$13471$1i4eWV
     (make-record-constructor-descriptor
       g$6158$13198$1i4eWV
       g$6146$13190$1i4eWV
       g$6160$13199$1i4eWV))
   (g$p?$13203$1i4eWV
     g$p?$13472$1i4eWV
     (record-predicate g$6158$13198$1i4eWV))
   (g$make-i/o-read-error$13204$1i4eWV
     g$make-i/o-read-error$13473$1i4eWV
     (record-constructor g$6159$13200$1i4eWV))
   (g$i/o-read-error?$13205$1i4eWV
     g$i/o-read-error?$13474$1i4eWV
     (condition-predicate g$6158$13198$1i4eWV))
   (g$&i/o-read-rtd$13206$1i4eWV
     g$&i/o-read-rtd$13475$1i4eWV
     g$6158$13198$1i4eWV)
   (g$&i/o-read-rcd$13207$1i4eWV
     g$&i/o-read-rcd$13476$1i4eWV
     g$6159$13200$1i4eWV)
   (g$6171$13208$1i4eWV
     g$6171$13477$1i4eWV
     (make-record-type-descriptor
       '&i/o-write
       g$6145$13188$1i4eWV
       'g$6174$1i4eWV
       '#f
       '#f
       '#()))
   (g$6173$13209$1i4eWV g$6173$13478$1i4eWV '#f)
   (g$6172$13210$1i4eWV
     g$6172$13479$1i4eWV
     (make-record-constructor-descriptor
       g$6171$13208$1i4eWV
       g$6146$13190$1i4eWV
       g$6173$13209$1i4eWV))
   (g$p?$13213$1i4eWV
     g$p?$13480$1i4eWV
     (record-predicate g$6171$13208$1i4eWV))
   (g$make-i/o-write-error$13214$1i4eWV
     g$make-i/o-write-error$13481$1i4eWV
     (record-constructor g$6172$13210$1i4eWV))
   (g$i/o-write-error?$13215$1i4eWV
     g$i/o-write-error?$13482$1i4eWV
     (condition-predicate g$6171$13208$1i4eWV))
   (g$&i/o-write-rtd$13216$1i4eWV
     g$&i/o-write-rtd$13483$1i4eWV
     g$6171$13208$1i4eWV)
   (g$&i/o-write-rcd$13217$1i4eWV
     g$&i/o-write-rcd$13484$1i4eWV
     g$6172$13210$1i4eWV)
   (g$6184$13219$1i4eWV
     g$6184$13485$1i4eWV
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6145$13188$1i4eWV
       'g$6187$1i4eWV
       '#f
       '#f
       '#((immutable position))))
   (g$6186$13220$1i4eWV g$6186$13486$1i4eWV '#f)
   (g$6185$13221$1i4eWV
     g$6185$13487$1i4eWV
     (make-record-constructor-descriptor
       g$6184$13219$1i4eWV
       g$6146$13190$1i4eWV
       g$6186$13220$1i4eWV))
   (g$p?$13224$1i4eWV
     g$p?$13488$1i4eWV
     (record-predicate g$6184$13219$1i4eWV))
   (g$make-i/o-invalid-position-error$13225$1i4eWV
     g$make-i/o-invalid-position-error$13489$1i4eWV
     (record-constructor g$6185$13221$1i4eWV))
   (g$i/o-error-position$13226$1i4eWV
     g$i/o-error-position$13490$1i4eWV
     (record-accessor g$6184$13219$1i4eWV '0))
   (g$i/o-invalid-position-error?$13227$1i4eWV
     g$i/o-invalid-position-error?$13491$1i4eWV
     (condition-predicate g$6184$13219$1i4eWV))
   (g$i/o-error-position$13228$1i4eWV
     g$i/o-error-position$13492$1i4eWV
     (condition-accessor
       g$6184$13219$1i4eWV
       g$i/o-error-position$13226$1i4eWV))
   (g$&i/o-invalid-position-rtd$13229$1i4eWV
     g$&i/o-invalid-position-rtd$13493$1i4eWV
     g$6184$13219$1i4eWV)
   (g$&i/o-invalid-position-rcd$13230$1i4eWV
     g$&i/o-invalid-position-rcd$13494$1i4eWV
     g$6185$13221$1i4eWV)
   (g$6199$13232$1i4eWV
     g$6199$13495$1i4eWV
     (make-record-type-descriptor
       '&i/o-filename
       g$6145$13188$1i4eWV
       'g$6202$1i4eWV
       '#f
       '#f
       '#((immutable filename))))
   (g$6201$13233$1i4eWV g$6201$13496$1i4eWV '#f)
   (g$6200$13234$1i4eWV
     g$6200$13497$1i4eWV
     (make-record-constructor-descriptor
       g$6199$13232$1i4eWV
       g$6146$13190$1i4eWV
       g$6201$13233$1i4eWV))
   (g$p?$13237$1i4eWV
     g$p?$13498$1i4eWV
     (record-predicate g$6199$13232$1i4eWV))
   (g$make-i/o-filename-error$13238$1i4eWV
     g$make-i/o-filename-error$13499$1i4eWV
     (record-constructor g$6200$13234$1i4eWV))
   (g$i/o-error-filename$13239$1i4eWV
     g$i/o-error-filename$13500$1i4eWV
     (record-accessor g$6199$13232$1i4eWV '0))
   (g$i/o-filename-error?$13240$1i4eWV
     g$i/o-filename-error?$13501$1i4eWV
     (condition-predicate g$6199$13232$1i4eWV))
   (g$i/o-error-filename$13241$1i4eWV
     g$i/o-error-filename$13502$1i4eWV
     (condition-accessor
       g$6199$13232$1i4eWV
       g$i/o-error-filename$13239$1i4eWV))
   (g$&i/o-filename-rtd$13242$1i4eWV
     g$&i/o-filename-rtd$13503$1i4eWV
     g$6199$13232$1i4eWV)
   (g$&i/o-filename-rcd$13243$1i4eWV
     g$&i/o-filename-rcd$13504$1i4eWV
     g$6200$13234$1i4eWV)
   (g$6214$13244$1i4eWV
     g$6214$13505$1i4eWV
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6199$13232$1i4eWV
       'g$6217$1i4eWV
       '#f
       '#f
       '#()))
   (g$6216$13245$1i4eWV g$6216$13506$1i4eWV '#f)
   (g$6215$13246$1i4eWV
     g$6215$13507$1i4eWV
     (make-record-constructor-descriptor
       g$6214$13244$1i4eWV
       g$6200$13234$1i4eWV
       g$6216$13245$1i4eWV))
   (g$p?$13249$1i4eWV
     g$p?$13508$1i4eWV
     (record-predicate g$6214$13244$1i4eWV))
   (g$make-i/o-file-protection-error$13250$1i4eWV
     g$make-i/o-file-protection-error$13509$1i4eWV
     (record-constructor g$6215$13246$1i4eWV))
   (g$i/o-file-protection-error?$13251$1i4eWV
     g$i/o-file-protection-error?$13510$1i4eWV
     (condition-predicate g$6214$13244$1i4eWV))
   (g$&i/o-file-protection-rtd$13252$1i4eWV
     g$&i/o-file-protection-rtd$13511$1i4eWV
     g$6214$13244$1i4eWV)
   (g$&i/o-file-protection-rcd$13253$1i4eWV
     g$&i/o-file-protection-rcd$13512$1i4eWV
     g$6215$13246$1i4eWV)
   (g$6227$13254$1i4eWV
     g$6227$13513$1i4eWV
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6214$13244$1i4eWV
       'g$6230$1i4eWV
       '#f
       '#f
       '#()))
   (g$6229$13255$1i4eWV g$6229$13514$1i4eWV '#f)
   (g$6228$13256$1i4eWV
     g$6228$13515$1i4eWV
     (make-record-constructor-descriptor
       g$6227$13254$1i4eWV
       g$6215$13246$1i4eWV
       g$6229$13255$1i4eWV))
   (g$p?$13259$1i4eWV
     g$p?$13516$1i4eWV
     (record-predicate g$6227$13254$1i4eWV))
   (g$make-i/o-file-is-read-only-error$13260$1i4eWV
     g$make-i/o-file-is-read-only-error$13517$1i4eWV
     (record-constructor g$6228$13256$1i4eWV))
   (g$i/o-file-is-read-only-error?$13261$1i4eWV
     g$i/o-file-is-read-only-error?$13518$1i4eWV
     (condition-predicate g$6227$13254$1i4eWV))
   (g$&i/o-file-is-read-only-rtd$13262$1i4eWV
     g$&i/o-file-is-read-only-rtd$13519$1i4eWV
     g$6227$13254$1i4eWV)
   (g$&i/o-file-is-read-only-rcd$13263$1i4eWV
     g$&i/o-file-is-read-only-rcd$13520$1i4eWV
     g$6228$13256$1i4eWV)
   (g$6240$13264$1i4eWV
     g$6240$13521$1i4eWV
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6199$13232$1i4eWV
       'g$6243$1i4eWV
       '#f
       '#f
       '#()))
   (g$6242$13265$1i4eWV g$6242$13522$1i4eWV '#f)
   (g$6241$13266$1i4eWV
     g$6241$13523$1i4eWV
     (make-record-constructor-descriptor
       g$6240$13264$1i4eWV
       g$6200$13234$1i4eWV
       g$6242$13265$1i4eWV))
   (g$p?$13269$1i4eWV
     g$p?$13524$1i4eWV
     (record-predicate g$6240$13264$1i4eWV))
   (g$make-i/o-file-already-exists-error$13270$1i4eWV
     g$make-i/o-file-already-exists-error$13525$1i4eWV
     (record-constructor g$6241$13266$1i4eWV))
   (g$i/o-file-already-exists-error?$13271$1i4eWV
     g$i/o-file-already-exists-error?$13526$1i4eWV
     (condition-predicate g$6240$13264$1i4eWV))
   (g$&i/o-file-already-exists-rtd$13272$1i4eWV
     g$&i/o-file-already-exists-rtd$13527$1i4eWV
     g$6240$13264$1i4eWV)
   (g$&i/o-file-already-exists-rcd$13273$1i4eWV
     g$&i/o-file-already-exists-rcd$13528$1i4eWV
     g$6241$13266$1i4eWV)
   (g$6253$13274$1i4eWV
     g$6253$13529$1i4eWV
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6199$13232$1i4eWV
       'g$6256$1i4eWV
       '#f
       '#f
       '#()))
   (g$6255$13275$1i4eWV g$6255$13530$1i4eWV '#f)
   (g$6254$13276$1i4eWV
     g$6254$13531$1i4eWV
     (make-record-constructor-descriptor
       g$6253$13274$1i4eWV
       g$6200$13234$1i4eWV
       g$6255$13275$1i4eWV))
   (g$p?$13279$1i4eWV
     g$p?$13532$1i4eWV
     (record-predicate g$6253$13274$1i4eWV))
   (g$make-i/o-file-does-not-exist-error$13280$1i4eWV
     g$make-i/o-file-does-not-exist-error$13533$1i4eWV
     (record-constructor g$6254$13276$1i4eWV))
   (g$i/o-file-does-not-exist-error?$13281$1i4eWV
     g$i/o-file-does-not-exist-error?$13534$1i4eWV
     (condition-predicate g$6253$13274$1i4eWV))
   (g$&i/o-file-does-not-exist-rtd$13282$1i4eWV
     g$&i/o-file-does-not-exist-rtd$13535$1i4eWV
     g$6253$13274$1i4eWV)
   (g$&i/o-file-does-not-exist-rcd$13283$1i4eWV
     g$&i/o-file-does-not-exist-rcd$13536$1i4eWV
     g$6254$13276$1i4eWV)
   (g$6266$13285$1i4eWV
     g$6266$13537$1i4eWV
     (make-record-type-descriptor
       '&i/o-port
       g$6145$13188$1i4eWV
       'g$6269$1i4eWV
       '#f
       '#f
       '#((immutable port))))
   (g$6268$13286$1i4eWV g$6268$13538$1i4eWV '#f)
   (g$6267$13287$1i4eWV
     g$6267$13539$1i4eWV
     (make-record-constructor-descriptor
       g$6266$13285$1i4eWV
       g$6146$13190$1i4eWV
       g$6268$13286$1i4eWV))
   (g$p?$13290$1i4eWV
     g$p?$13540$1i4eWV
     (record-predicate g$6266$13285$1i4eWV))
   (g$make-i/o-port-error$13291$1i4eWV
     g$make-i/o-port-error$13541$1i4eWV
     (record-constructor g$6267$13287$1i4eWV))
   (g$i/o-error-port$13292$1i4eWV
     g$i/o-error-port$13542$1i4eWV
     (record-accessor g$6266$13285$1i4eWV '0))
   (g$i/o-port-error?$13293$1i4eWV
     g$i/o-port-error?$13543$1i4eWV
     (condition-predicate g$6266$13285$1i4eWV))
   (g$i/o-error-port$13294$1i4eWV
     g$i/o-error-port$13544$1i4eWV
     (condition-accessor
       g$6266$13285$1i4eWV
       g$i/o-error-port$13292$1i4eWV))
   (g$&i/o-port-rtd$13295$1i4eWV
     g$&i/o-port-rtd$13545$1i4eWV
     g$6266$13285$1i4eWV)
   (g$&i/o-port-rcd$13296$1i4eWV
     g$&i/o-port-rcd$13546$1i4eWV
     g$6267$13287$1i4eWV)
   (g$6281$13297$1i4eWV
     g$6281$13547$1i4eWV
     (make-record-type-descriptor
       '&i/o-decoding
       g$6266$13285$1i4eWV
       'g$6284$1i4eWV
       '#f
       '#f
       '#()))
   (g$6283$13298$1i4eWV g$6283$13548$1i4eWV '#f)
   (g$6282$13299$1i4eWV
     g$6282$13549$1i4eWV
     (make-record-constructor-descriptor
       g$6281$13297$1i4eWV
       g$6267$13287$1i4eWV
       g$6283$13298$1i4eWV))
   (g$p?$13302$1i4eWV
     g$p?$13550$1i4eWV
     (record-predicate g$6281$13297$1i4eWV))
   (g$make-i/o-decoding-error$13303$1i4eWV
     g$make-i/o-decoding-error$13551$1i4eWV
     (record-constructor g$6282$13299$1i4eWV))
   (g$i/o-decoding-error?$13304$1i4eWV
     g$i/o-decoding-error?$13552$1i4eWV
     (condition-predicate g$6281$13297$1i4eWV))
   (g$&i/o-decoding-rtd$13305$1i4eWV
     g$&i/o-decoding-rtd$13553$1i4eWV
     g$6281$13297$1i4eWV)
   (g$&i/o-decoding-rcd$13306$1i4eWV
     g$&i/o-decoding-rcd$13554$1i4eWV
     g$6282$13299$1i4eWV)
   (g$6294$13308$1i4eWV
     g$6294$13555$1i4eWV
     (make-record-type-descriptor
       '&i/o-encoding
       g$6266$13285$1i4eWV
       'g$6297$1i4eWV
       '#f
       '#f
       '#((immutable char))))
   (g$6296$13309$1i4eWV g$6296$13556$1i4eWV '#f)
   (g$6295$13310$1i4eWV
     g$6295$13557$1i4eWV
     (make-record-constructor-descriptor
       g$6294$13308$1i4eWV
       g$6267$13287$1i4eWV
       g$6296$13309$1i4eWV))
   (g$p?$13313$1i4eWV
     g$p?$13558$1i4eWV
     (record-predicate g$6294$13308$1i4eWV))
   (g$make-i/o-encoding-error$13314$1i4eWV
     g$make-i/o-encoding-error$13559$1i4eWV
     (record-constructor g$6295$13310$1i4eWV))
   (g$i/o-encoding-error-char$13315$1i4eWV
     g$i/o-encoding-error-char$13560$1i4eWV
     (record-accessor g$6294$13308$1i4eWV '0))
   (g$i/o-encoding-error?$13316$1i4eWV
     g$i/o-encoding-error?$13561$1i4eWV
     (condition-predicate g$6294$13308$1i4eWV))
   (g$i/o-encoding-error-char$13317$1i4eWV
     g$i/o-encoding-error-char$13562$1i4eWV
     (condition-accessor
       g$6294$13308$1i4eWV
       g$i/o-encoding-error-char$13315$1i4eWV))
   (g$&i/o-encoding-rtd$13318$1i4eWV
     g$&i/o-encoding-rtd$13563$1i4eWV
     g$6294$13308$1i4eWV)
   (g$&i/o-encoding-rcd$13319$1i4eWV
     g$&i/o-encoding-rcd$13564$1i4eWV
     g$6295$13310$1i4eWV)
   (g$6309$13320$1i4eWV
     g$6309$13565$1i4eWV
     (make-record-type-descriptor
       '&no-infinities
       g$6089$13142$1i4eWV
       'g$6312$1i4eWV
       '#f
       '#f
       '#()))
   (g$6311$13321$1i4eWV g$6311$13566$1i4eWV '#f)
   (g$6310$13322$1i4eWV
     g$6310$13567$1i4eWV
     (make-record-constructor-descriptor
       g$6309$13320$1i4eWV
       g$6090$13144$1i4eWV
       g$6311$13321$1i4eWV))
   (g$p?$13325$1i4eWV
     g$p?$13568$1i4eWV
     (record-predicate g$6309$13320$1i4eWV))
   (g$make-no-infinities-violation$13326$1i4eWV
     g$make-no-infinities-violation$13569$1i4eWV
     (record-constructor g$6310$13322$1i4eWV))
   (g$no-infinities-violation?$13327$1i4eWV
     g$no-infinities-violation?$13570$1i4eWV
     (condition-predicate g$6309$13320$1i4eWV))
   (g$&no-infinities-rtd$13328$1i4eWV
     g$&no-infinities-rtd$13571$1i4eWV
     g$6309$13320$1i4eWV)
   (g$&no-infinities-rcd$13329$1i4eWV
     g$&no-infinities-rcd$13572$1i4eWV
     g$6310$13322$1i4eWV)
   (g$6322$13330$1i4eWV
     g$6322$13573$1i4eWV
     (make-record-type-descriptor
       '&no-nans
       g$6089$13142$1i4eWV
       'g$6325$1i4eWV
       '#f
       '#f
       '#()))
   (g$6324$13331$1i4eWV g$6324$13574$1i4eWV '#f)
   (g$6323$13332$1i4eWV
     g$6323$13575$1i4eWV
     (make-record-constructor-descriptor
       g$6322$13330$1i4eWV
       g$6090$13144$1i4eWV
       g$6324$13331$1i4eWV))
   (g$p?$13335$1i4eWV
     g$p?$13576$1i4eWV
     (record-predicate g$6322$13330$1i4eWV))
   (g$make-no-nans-violation$13336$1i4eWV
     g$make-no-nans-violation$13577$1i4eWV
     (record-constructor g$6323$13332$1i4eWV))
   (g$no-nans-violation?$13337$1i4eWV
     g$no-nans-violation?$13578$1i4eWV
     (condition-predicate g$6322$13330$1i4eWV))
   (g$&no-nans-rtd$13338$1i4eWV
     g$&no-nans-rtd$13579$1i4eWV
     g$6322$13330$1i4eWV)
   (g$&no-nans-rcd$13339$1i4eWV
     g$&no-nans-rcd$13580$1i4eWV
     g$6323$13332$1i4eWV))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$13581$1i4eWV
     g$append!$13587$1i4eWV
     (case-lambda
       ((g$a$13582$1i4eWV . g$b$13583$1i4eWV)
        (if (null? g$a$13582$1i4eWV)
          g$b$13583$1i4eWV
          (if (null? g$b$13583$1i4eWV)
            g$a$13582$1i4eWV
            (begin
              ((letrec ((g$f$13584$1i4eWV
                          (case-lambda
                            ((g$a$13585$1i4eWV)
                             ((case-lambda
                                ((g$n$13586$1i4eWV)
                                 (if (null? g$n$13586$1i4eWV)
                                   (set-cdr!
                                     g$a$13585$1i4eWV
                                     g$b$13583$1i4eWV)
                                   (g$f$13584$1i4eWV
                                     g$n$13586$1i4eWV))))
                              (cdr g$a$13585$1i4eWV))))))
                 g$f$13584$1i4eWV)
               g$a$13582$1i4eWV)
              g$a$13582$1i4eWV)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$13588$1i4eWV g$inexact->exact$13608$1i4eWV exact)
   (g$exact->inexact$13589$1i4eWV g$exact->inexact$13609$1i4eWV inexact)
   (g$sign$13590$1i4eWV
     g$sign$13610$1i4eWV
     (case-lambda
       ((g$n$13596$1i4eWV)
        (if (> g$n$13596$1i4eWV '0)
          '1
          (if (< g$n$13596$1i4eWV '0) '-1 '0)))))
   (g$quotient$13591$1i4eWV
     g$quotient$13611$1i4eWV
     (case-lambda
       ((g$n1$13597$1i4eWV g$n2$13598$1i4eWV)
        (begin
          (if (not (integer-valued? g$n1$13597$1i4eWV))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$13597$1i4eWV)
            (void))
          (if (not (integer-valued? g$n2$13598$1i4eWV))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$13598$1i4eWV)
            (void))
          (* (g$sign$13590$1i4eWV g$n1$13597$1i4eWV)
             (g$sign$13590$1i4eWV g$n2$13598$1i4eWV)
             (div (abs g$n1$13597$1i4eWV) (abs g$n2$13598$1i4eWV)))))))
   (g$remainder$13592$1i4eWV
     g$remainder$13612$1i4eWV
     (case-lambda
       ((g$n1$13599$1i4eWV g$n2$13600$1i4eWV)
        (begin
          (if (not (integer-valued? g$n1$13599$1i4eWV))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$13599$1i4eWV)
            (void))
          (if (not (integer-valued? g$n2$13600$1i4eWV))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$13600$1i4eWV)
            (void))
          (* (g$sign$13590$1i4eWV g$n1$13599$1i4eWV)
             (g$mod$12674$1i4eWV
               (abs g$n1$13599$1i4eWV)
               (abs g$n2$13600$1i4eWV)))))))
   (g$modulo$13593$1i4eWV
     g$modulo$13613$1i4eWV
     (case-lambda
       ((g$n1$13601$1i4eWV g$n2$13602$1i4eWV)
        (begin
          (if (not (integer-valued? g$n1$13601$1i4eWV))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$13601$1i4eWV)
            (void))
          (if (not (integer-valued? g$n2$13602$1i4eWV))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$13602$1i4eWV)
            (void))
          (* (g$sign$13590$1i4eWV g$n2$13602$1i4eWV)
             (g$mod$12674$1i4eWV
               (* (g$sign$13590$1i4eWV g$n2$13602$1i4eWV)
                  g$n1$13601$1i4eWV)
               (abs g$n2$13602$1i4eWV)))))))
   (g$make-promise$13594$1i4eWV
     g$make-promise$13614$1i4eWV
     (case-lambda
       ((g$proc$13603$1i4eWV)
        ((case-lambda
           ((g$result-ready?$13604$1i4eWV g$result$13605$1i4eWV)
            (case-lambda
              (()
               (if g$result-ready?$13604$1i4eWV
                 g$result$13605$1i4eWV
                 ((case-lambda
                    ((g$x$13606$1i4eWV)
                     (if g$result-ready?$13604$1i4eWV
                       g$result$13605$1i4eWV
                       (begin
                         (set! g$result-ready?$13604$1i4eWV '#t)
                         (set! g$result$13605$1i4eWV g$x$13606$1i4eWV)
                         g$result$13605$1i4eWV))))
                  (g$proc$13603$1i4eWV)))))))
         '#f
         '#f))))
   (g$force$13595$1i4eWV
     g$force$13615$1i4eWV
     (case-lambda ((g$object$13607$1i4eWV) (g$object$13607$1i4eWV)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$13616$1i4eWV
     g$split$13641$1i4eWV
     (case-lambda
       ((g$ls$13620$1i4eWV)
        ((letrec ((g$loop$13621$1i4eWV
                    (case-lambda
                      ((g$rest$13622$1i4eWV
                         g$left$13623$1i4eWV
                         g$right$13624$1i4eWV)
                       (if (null? g$rest$13622$1i4eWV)
                         (cons g$left$13623$1i4eWV g$right$13624$1i4eWV)
                         (if (null? (cdr g$rest$13622$1i4eWV))
                           (cons
                             (cons
                               (car g$rest$13622$1i4eWV)
                               g$left$13623$1i4eWV)
                             g$right$13624$1i4eWV)
                           (g$loop$13621$1i4eWV
                             (g$cddr$12688$1i4eWV g$rest$13622$1i4eWV)
                             (cons
                               (car g$rest$13622$1i4eWV)
                               g$left$13623$1i4eWV)
                             (cons
                               (g$cadr$12686$1i4eWV g$rest$13622$1i4eWV)
                               g$right$13624$1i4eWV))))))))
           g$loop$13621$1i4eWV)
         g$ls$13620$1i4eWV
         '()
         '()))))
   (g$reverse-it$13617$1i4eWV
     g$reverse-it$13642$1i4eWV
     (case-lambda
       ((g$head$13625$1i4eWV g$tail$13626$1i4eWV)
        (if (null? g$head$13625$1i4eWV)
          g$tail$13626$1i4eWV
          (g$reverse-it$13617$1i4eWV
            (cdr g$head$13625$1i4eWV)
            (cons (car g$head$13625$1i4eWV) g$tail$13626$1i4eWV))))))
   (g$merge$13618$1i4eWV
     g$merge$13643$1i4eWV
     (case-lambda
       ((g$list-1$13627$1i4eWV
          g$list-2$13628$1i4eWV
          g$precedes?$13629$1i4eWV)
        ((letrec ((g$loop$13630$1i4eWV
                    (case-lambda
                      ((g$source-1$13631$1i4eWV
                         g$source-2$13632$1i4eWV
                         g$so-far$13633$1i4eWV)
                       (if (null? g$source-1$13631$1i4eWV)
                         (g$reverse-it$13617$1i4eWV
                           g$so-far$13633$1i4eWV
                           g$source-2$13632$1i4eWV)
                         (if (null? g$source-2$13632$1i4eWV)
                           (g$reverse-it$13617$1i4eWV
                             g$so-far$13633$1i4eWV
                             g$source-1$13631$1i4eWV)
                           ((case-lambda
                              ((g$car-1$13634$1i4eWV
                                 g$car-2$13635$1i4eWV)
                               (if (g$precedes?$13629$1i4eWV
                                     g$car-2$13635$1i4eWV
                                     g$car-1$13634$1i4eWV)
                                 (g$loop$13630$1i4eWV
                                   g$source-1$13631$1i4eWV
                                   (cdr g$source-2$13632$1i4eWV)
                                   (cons
                                     g$car-2$13635$1i4eWV
                                     g$so-far$13633$1i4eWV))
                                 (g$loop$13630$1i4eWV
                                   g$source-2$13632$1i4eWV
                                   (cdr g$source-1$13631$1i4eWV)
                                   (cons
                                     g$car-1$13634$1i4eWV
                                     g$so-far$13633$1i4eWV)))))
                            (car g$source-1$13631$1i4eWV)
                            (car g$source-2$13632$1i4eWV))))))))
           g$loop$13630$1i4eWV)
         g$list-1$13627$1i4eWV
         g$list-2$13628$1i4eWV
         '()))))
   (g$list-sort$13619$1i4eWV
     g$list-sort$13644$1i4eWV
     (case-lambda
       ((g$precedes?$13636$1i4eWV g$ls$13637$1i4eWV)
        (if (null? g$ls$13637$1i4eWV)
          '()
          ((letrec ((g$helper$13638$1i4eWV
                      (case-lambda
                        ((g$piece$13639$1i4eWV)
                         (if (null? (cdr g$piece$13639$1i4eWV))
                           g$piece$13639$1i4eWV
                           ((case-lambda
                              ((g$parts$13640$1i4eWV)
                               (g$merge$13618$1i4eWV
                                 (g$helper$13638$1i4eWV
                                   (car g$parts$13640$1i4eWV))
                                 (g$helper$13638$1i4eWV
                                   (cdr g$parts$13640$1i4eWV))
                                 g$precedes?$13636$1i4eWV)))
                            (g$split$13616$1i4eWV
                              g$piece$13639$1i4eWV)))))))
             g$helper$13638$1i4eWV)
           g$ls$13637$1i4eWV))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$13683$1i4eWV
     g$string-ci=?$13789$1i4eWV
     (case-lambda
       ((g$a$13735$1i4eWV g$b$13736$1i4eWV . g$rest$13737$1i4eWV)
        (begin
          (if (not (string? g$a$13735$1i4eWV))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$13735$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13738$1i4eWV)
               (begin
                 (if (not (string? g$x$13738$1i4eWV))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$13738$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13739$1i4eWV)
                     (begin
                       (set! g$a$13735$1i4eWV g$x$13738$1i4eWV)
                       g$r$13739$1i4eWV)))
                  (= (string-ci-compare
                       g$a$13735$1i4eWV
                       g$x$13738$1i4eWV)
                     '0)))))
            (cons g$b$13736$1i4eWV g$rest$13737$1i4eWV))))))
   (g$string-ci<?$13684$1i4eWV
     g$string-ci<?$13790$1i4eWV
     (case-lambda
       ((g$a$13740$1i4eWV g$b$13741$1i4eWV . g$rest$13742$1i4eWV)
        (begin
          (if (not (string? g$a$13740$1i4eWV))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$13740$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13743$1i4eWV)
               (begin
                 (if (not (string? g$x$13743$1i4eWV))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$13743$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13744$1i4eWV)
                     (begin
                       (set! g$a$13740$1i4eWV g$x$13743$1i4eWV)
                       g$r$13744$1i4eWV)))
                  (< (string-ci-compare
                       g$a$13740$1i4eWV
                       g$x$13743$1i4eWV)
                     '0)))))
            (cons g$b$13741$1i4eWV g$rest$13742$1i4eWV))))))
   (g$string-ci>?$13685$1i4eWV
     g$string-ci>?$13791$1i4eWV
     (case-lambda
       ((g$a$13745$1i4eWV g$b$13746$1i4eWV . g$rest$13747$1i4eWV)
        (begin
          (if (not (string? g$a$13745$1i4eWV))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$13745$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13748$1i4eWV)
               (begin
                 (if (not (string? g$x$13748$1i4eWV))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$13748$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13749$1i4eWV)
                     (begin
                       (set! g$a$13745$1i4eWV g$x$13748$1i4eWV)
                       g$r$13749$1i4eWV)))
                  (> (string-ci-compare
                       g$a$13745$1i4eWV
                       g$x$13748$1i4eWV)
                     '0)))))
            (cons g$b$13746$1i4eWV g$rest$13747$1i4eWV))))))
   (g$string-ci<=?$13686$1i4eWV
     g$string-ci<=?$13792$1i4eWV
     (case-lambda
       ((g$a$13750$1i4eWV g$b$13751$1i4eWV . g$rest$13752$1i4eWV)
        (begin
          (if (not (string? g$a$13750$1i4eWV))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$13750$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13753$1i4eWV)
               (begin
                 (if (not (string? g$x$13753$1i4eWV))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$13753$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13754$1i4eWV)
                     (begin
                       (set! g$a$13750$1i4eWV g$x$13753$1i4eWV)
                       g$r$13754$1i4eWV)))
                  (<= (string-ci-compare
                        g$a$13750$1i4eWV
                        g$x$13753$1i4eWV)
                      '0)))))
            (cons g$b$13751$1i4eWV g$rest$13752$1i4eWV))))))
   (g$string-ci>=?$13687$1i4eWV
     g$string-ci>=?$13793$1i4eWV
     (case-lambda
       ((g$a$13755$1i4eWV g$b$13756$1i4eWV . g$rest$13757$1i4eWV)
        (begin
          (if (not (string? g$a$13755$1i4eWV))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$13755$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13758$1i4eWV)
               (begin
                 (if (not (string? g$x$13758$1i4eWV))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$13758$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13759$1i4eWV)
                     (begin
                       (set! g$a$13755$1i4eWV g$x$13758$1i4eWV)
                       g$r$13759$1i4eWV)))
                  (>= (string-ci-compare
                        g$a$13755$1i4eWV
                        g$x$13758$1i4eWV)
                      '0)))))
            (cons g$b$13756$1i4eWV g$rest$13757$1i4eWV))))))
   (g$char-ci=?$13726$1i4eWV
     g$char-ci=?$13794$1i4eWV
     (case-lambda
       ((g$a$13760$1i4eWV g$b$13761$1i4eWV . g$rest$13762$1i4eWV)
        (begin
          (if (not (g$char?$12665$1i4eWV g$a$13760$1i4eWV))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$13760$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13763$1i4eWV)
               (begin
                 (if (not (g$char?$12665$1i4eWV g$x$13763$1i4eWV))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$13763$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13764$1i4eWV)
                     (begin
                       (set! g$a$13760$1i4eWV g$x$13763$1i4eWV)
                       g$r$13764$1i4eWV)))
                  (= (char->integer (char-upcase g$a$13760$1i4eWV))
                     (char->integer (char-upcase g$x$13763$1i4eWV)))))))
            (cons g$b$13761$1i4eWV g$rest$13762$1i4eWV))))))
   (g$char-ci<?$13727$1i4eWV
     g$char-ci<?$13795$1i4eWV
     (case-lambda
       ((g$a$13765$1i4eWV g$b$13766$1i4eWV . g$rest$13767$1i4eWV)
        (begin
          (if (not (g$char?$12665$1i4eWV g$a$13765$1i4eWV))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$13765$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13768$1i4eWV)
               (begin
                 (if (not (g$char?$12665$1i4eWV g$x$13768$1i4eWV))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$13768$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13769$1i4eWV)
                     (begin
                       (set! g$a$13765$1i4eWV g$x$13768$1i4eWV)
                       g$r$13769$1i4eWV)))
                  (< (char->integer (char-upcase g$a$13765$1i4eWV))
                     (char->integer (char-upcase g$x$13768$1i4eWV)))))))
            (cons g$b$13766$1i4eWV g$rest$13767$1i4eWV))))))
   (g$char-ci>?$13728$1i4eWV
     g$char-ci>?$13796$1i4eWV
     (case-lambda
       ((g$a$13770$1i4eWV g$b$13771$1i4eWV . g$rest$13772$1i4eWV)
        (begin
          (if (not (g$char?$12665$1i4eWV g$a$13770$1i4eWV))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$13770$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13773$1i4eWV)
               (begin
                 (if (not (g$char?$12665$1i4eWV g$x$13773$1i4eWV))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$13773$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13774$1i4eWV)
                     (begin
                       (set! g$a$13770$1i4eWV g$x$13773$1i4eWV)
                       g$r$13774$1i4eWV)))
                  (> (char->integer (char-upcase g$a$13770$1i4eWV))
                     (char->integer (char-upcase g$x$13773$1i4eWV)))))))
            (cons g$b$13771$1i4eWV g$rest$13772$1i4eWV))))))
   (g$char-ci<=?$13729$1i4eWV
     g$char-ci<=?$13797$1i4eWV
     (case-lambda
       ((g$a$13775$1i4eWV g$b$13776$1i4eWV . g$rest$13777$1i4eWV)
        (begin
          (if (not (g$char?$12665$1i4eWV g$a$13775$1i4eWV))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$13775$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13778$1i4eWV)
               (begin
                 (if (not (g$char?$12665$1i4eWV g$x$13778$1i4eWV))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$13778$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13779$1i4eWV)
                     (begin
                       (set! g$a$13775$1i4eWV g$x$13778$1i4eWV)
                       g$r$13779$1i4eWV)))
                  (<= (char->integer (char-upcase g$a$13775$1i4eWV))
                      (char->integer
                        (char-upcase g$x$13778$1i4eWV)))))))
            (cons g$b$13776$1i4eWV g$rest$13777$1i4eWV))))))
   (g$char-ci>=?$13730$1i4eWV
     g$char-ci>=?$13798$1i4eWV
     (case-lambda
       ((g$a$13780$1i4eWV g$b$13781$1i4eWV . g$rest$13782$1i4eWV)
        (begin
          (if (not (g$char?$12665$1i4eWV g$a$13780$1i4eWV))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$13780$1i4eWV)
            (void))
          (g$for-all$11833$1i4eWV
            (case-lambda
              ((g$x$13783$1i4eWV)
               (begin
                 (if (not (g$char?$12665$1i4eWV g$x$13783$1i4eWV))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$13783$1i4eWV)
                   (void))
                 ((case-lambda
                    ((g$r$13784$1i4eWV)
                     (begin
                       (set! g$a$13780$1i4eWV g$x$13783$1i4eWV)
                       g$r$13784$1i4eWV)))
                  (>= (char->integer (char-upcase g$a$13780$1i4eWV))
                      (char->integer
                        (char-upcase g$x$13783$1i4eWV)))))))
            (cons g$b$13781$1i4eWV g$rest$13782$1i4eWV))))))
   (g$string-normalize-nfc$13731$1i4eWV
     g$string-normalize-nfc$13799$1i4eWV
     (case-lambda
       ((g$s$13785$1i4eWV) (string-normalize g$s$13785$1i4eWV 'formc))))
   (g$string-normalize-nfd$13732$1i4eWV
     g$string-normalize-nfd$13800$1i4eWV
     (case-lambda
       ((g$s$13786$1i4eWV) (string-normalize g$s$13786$1i4eWV 'formd))))
   (g$string-normalize-nfkc$13733$1i4eWV
     g$string-normalize-nfkc$13801$1i4eWV
     (case-lambda
       ((g$s$13787$1i4eWV)
        (string-normalize g$s$13787$1i4eWV 'formkc))))
   (g$string-normalize-nfkd$13734$1i4eWV
     g$string-normalize-nfkd$13802$1i4eWV
     (case-lambda
       ((g$s$13788$1i4eWV)
        (string-normalize g$s$13788$1i4eWV 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$13803$1i4eWV
     g$bitwise-if$13834$1i4eWV
     (case-lambda
       ((g$ei1$13810$1i4eWV g$ei2$13811$1i4eWV g$ei3$13812$1i4eWV)
        (bitwise-ior
          (bitwise-and g$ei1$13810$1i4eWV g$ei2$13811$1i4eWV)
          (bitwise-and
            (bitwise-not g$ei1$13810$1i4eWV)
            g$ei3$13812$1i4eWV)))))
   (g$bitwise-copy-bit$13804$1i4eWV
     g$bitwise-copy-bit$13835$1i4eWV
     (case-lambda
       ((g$ei1$13813$1i4eWV g$ei2$13814$1i4eWV g$ei3$13815$1i4eWV)
        (g$bitwise-if$13803$1i4eWV
          (g$bitwise-arithmetic-shift-left$13807$1i4eWV
            '1
            g$ei2$13814$1i4eWV)
          (g$bitwise-arithmetic-shift-left$13807$1i4eWV
            g$ei3$13815$1i4eWV
            g$ei2$13814$1i4eWV)
          g$ei1$13813$1i4eWV))))
   (g$bitwise-bit-field$13805$1i4eWV
     g$bitwise-bit-field$13836$1i4eWV
     (case-lambda
       ((g$ei1$13816$1i4eWV g$ei2$13817$1i4eWV g$ei3$13818$1i4eWV)
        (g$bitwise-arithmetic-shift-right$13808$1i4eWV
          (bitwise-and
            g$ei1$13816$1i4eWV
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$13807$1i4eWV
                '-1
                g$ei3$13818$1i4eWV)))
          g$ei2$13817$1i4eWV))))
   (g$bitwise-copy-bit-field$13806$1i4eWV
     g$bitwise-copy-bit-field$13837$1i4eWV
     (case-lambda
       ((g$to$13819$1i4eWV
          g$start$13820$1i4eWV
          g$end$13821$1i4eWV
          g$from$13822$1i4eWV)
        (g$bitwise-if$13803$1i4eWV
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$13807$1i4eWV
              '-1
              g$start$13820$1i4eWV)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$13807$1i4eWV
                '-1
                g$end$13821$1i4eWV)))
          (g$bitwise-arithmetic-shift-left$13807$1i4eWV
            g$from$13822$1i4eWV
            g$start$13820$1i4eWV)
          g$to$13819$1i4eWV))))
   (g$bitwise-arithmetic-shift-left$13807$1i4eWV
     g$bitwise-arithmetic-shift-left$13838$1i4eWV
     (case-lambda
       ((g$ei1$13823$1i4eWV g$ei2$13824$1i4eWV)
        (bitwise-arithmetic-shift
          g$ei1$13823$1i4eWV
          g$ei2$13824$1i4eWV))))
   (g$bitwise-arithmetic-shift-right$13808$1i4eWV
     g$bitwise-arithmetic-shift-right$13839$1i4eWV
     (case-lambda
       ((g$ei1$13825$1i4eWV g$ei2$13826$1i4eWV)
        (bitwise-arithmetic-shift
          g$ei1$13825$1i4eWV
          (- g$ei2$13826$1i4eWV)))))
   (g$bitwise-rotate-bit-field$13809$1i4eWV
     g$bitwise-rotate-bit-field$13840$1i4eWV
     (case-lambda
       ((g$n$13827$1i4eWV
          g$start$13828$1i4eWV
          g$end$13829$1i4eWV
          g$count$13830$1i4eWV)
        ((case-lambda
           ((g$width$13831$1i4eWV)
            (if (g$positive?$12713$1i4eWV g$width$13831$1i4eWV)
              ((case-lambda
                 ((g$count$13832$1i4eWV g$field$13833$1i4eWV)
                  (g$bitwise-copy-bit-field$13806$1i4eWV
                    g$n$13827$1i4eWV
                    g$start$13828$1i4eWV
                    g$end$13829$1i4eWV
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$13807$1i4eWV
                        g$field$13833$1i4eWV
                        g$count$13832$1i4eWV)
                      (g$bitwise-arithmetic-shift-right$13808$1i4eWV
                        g$field$13833$1i4eWV
                        (- g$width$13831$1i4eWV
                           g$count$13832$1i4eWV))))))
               (g$mod$12674$1i4eWV
                 g$count$13830$1i4eWV
                 g$width$13831$1i4eWV)
               (g$bitwise-bit-field$13805$1i4eWV
                 g$n$13827$1i4eWV
                 g$start$13828$1i4eWV
                 g$end$13829$1i4eWV))
              g$n$13827$1i4eWV)))
         (- g$end$13829$1i4eWV g$start$13828$1i4eWV))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$13841$1i4eWV
     g$greatest-fixnum$16073$1i4eWV
     (case-lambda (() '2147483647)))
   (g$least-fixnum$13842$1i4eWV
     g$least-fixnum$16074$1i4eWV
     (case-lambda (() '-2147483648)))
   (g$fx+$13948$1i4eWV
     g$fx+$16075$1i4eWV
     (case-lambda
       ((g$x1$14343$1i4eWV g$x2$14344$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14343$1i4eWV))
            (assertion-violation 'fx+ '"not a fixnum" g$x1$14343$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14344$1i4eWV))
            (assertion-violation 'fx+ '"not a fixnum" g$x2$14344$1i4eWV)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$14343$1i4eWV g$x2$14344$1i4eWV)
                (g$overflow-error$13951$1i4eWV '#f)))))))))
   (g$fx*$13949$1i4eWV
     g$fx*$16076$1i4eWV
     (case-lambda
       ((g$x1$14345$1i4eWV g$x2$14346$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14345$1i4eWV))
            (assertion-violation 'fx* '"not a fixnum" g$x1$14345$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14346$1i4eWV))
            (assertion-violation 'fx* '"not a fixnum" g$x2$14346$1i4eWV)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$14345$1i4eWV g$x2$14346$1i4eWV)
                (g$overflow-error$13951$1i4eWV '#f)))))))))
   (g$fx-$13950$1i4eWV
     g$fx-$16077$1i4eWV
     (case-lambda
       ((g$x1$14347$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14347$1i4eWV))
            (assertion-violation 'fx- '"not a fixnum" g$x1$14347$1i4eWV)
            (void))
          (if ($fx=? (g$least-fixnum$13842$1i4eWV) g$x1$14347$1i4eWV)
            (g$overflow-error$13951$1i4eWV 'fx- g$x1$14347$1i4eWV)
            (void))
          ($$fx- g$x1$14347$1i4eWV)))
       ((g$x1$14348$1i4eWV g$x2$14349$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14348$1i4eWV))
            (assertion-violation 'fx- '"not a fixnum" g$x1$14348$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14349$1i4eWV))
            (assertion-violation 'fx- '"not a fixnum" g$x2$14349$1i4eWV)
            (void))
          ($try
            ($fx- g$x1$14348$1i4eWV g$x2$14349$1i4eWV)
            (g$overflow-error$13951$1i4eWV '#f))))))
   (g$overflow-error$13951$1i4eWV
     g$overflow-error$16078$1i4eWV
     (case-lambda
       ((g$name$14350$1i4eWV . g$irritants$14351$1i4eWV)
        (raise
          (condition
            (g$make-implementation-restriction-violation$13429$1i4eWV)
            (g$make-who-condition$13411$1i4eWV g$name$14350$1i4eWV)
            (g$make-message-condition$13351$1i4eWV
              '"arithmetic overflow")
            (g$make-irritants-condition$13401$1i4eWV
              g$irritants$14351$1i4eWV))))))
   (g$residual-fxarithmetic-shift*$13967$1i4eWV
     g$residual-fxarithmetic-shift*$16079$1i4eWV
     (case-lambda
       ((g$x$14372$1i4eWV g$k$14373$1i4eWV)
        (if ($fx=? g$k$14373$1i4eWV '0)
          g$x$14372$1i4eWV
          (if ($fx<? g$k$14373$1i4eWV '0)
            ($fxarithmetic-shift-right
              g$x$14372$1i4eWV
              ($$fx- g$k$14373$1i4eWV))
            ((case-lambda
               ((g$i$14374$1i4eWV)
                (begin
                  (if ($fx>?
                        (clr-call-internal
                          'System.Math
                          '"abs(int32)"
                          '()
                          g$x$14372$1i4eWV)
                        (clr-call-internal
                          'System.Math
                          '"abs(int32)"
                          '()
                          g$i$14374$1i4eWV))
                    (g$overflow-error$13951$1i4eWV
                      'fxarithmetic-shift
                      g$x$14372$1i4eWV
                      g$k$14373$1i4eWV)
                    (void))
                  g$i$14374$1i4eWV)))
             ($fxarithmetic-shift-left
               g$x$14372$1i4eWV
               g$k$14373$1i4eWV)))))))
   (g$fxarithmetic-shift$13968$1i4eWV
     g$fxarithmetic-shift$16080$1i4eWV
     (case-lambda
       ((g$x$14375$1i4eWV g$k$14376$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x$14375$1i4eWV))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$14375$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$k$14376$1i4eWV))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$14376$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14397$1i4eWV g$k$14398$1i4eWV)
                  (if ($fx=? g$k$14398$1i4eWV '0)
                    g$x$14397$1i4eWV
                    (if ($fx<? g$k$14398$1i4eWV '0)
                      ($fxarithmetic-shift-right
                        g$x$14397$1i4eWV
                        ($$fx- g$k$14398$1i4eWV))
                      ((case-lambda
                         ((g$i$14399$1i4eWV)
                          (begin
                            (if ($fx>?
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$x$14397$1i4eWV)
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$i$14399$1i4eWV))
                              (g$overflow-error$13951$1i4eWV
                                'fxarithmetic-shift
                                g$x$14397$1i4eWV
                                g$k$14398$1i4eWV)
                              (void))
                            g$i$14399$1i4eWV)))
                       ($fxarithmetic-shift-left
                         g$x$14397$1i4eWV
                         g$k$14398$1i4eWV))))))
               g$x$14375$1i4eWV
               g$k$14376$1i4eWV))))))))
   (g$residual-fxbit-count*$13984$1i4eWV
     g$residual-fxbit-count*$16081$1i4eWV
     (case-lambda
       ((g$x$14420$1i4eWV)
        (if ($fx<=? g$x$14420$1i4eWV '0)
          ($fxnot
            (g$residual-fxbit-count*$13984$1i4eWV
              ($fxnot g$x$14420$1i4eWV)))
          ((letrec ((g$f$14421$1i4eWV
                      (case-lambda
                        ((g$count$14422$1i4eWV g$x$14423$1i4eWV)
                         (if ($fx<? '0 g$x$14423$1i4eWV)
                           (g$f$14421$1i4eWV
                             ($$fx+
                               g$count$14422$1i4eWV
                               ($fxand g$x$14423$1i4eWV '1))
                             ($fxarithmetic-shift-right
                               g$x$14423$1i4eWV
                               '1))
                           g$count$14422$1i4eWV)))))
             g$f$14421$1i4eWV)
           '0
           g$x$14420$1i4eWV)))))
   (g$fxbit-count$13985$1i4eWV
     g$fxbit-count$16082$1i4eWV
     (case-lambda
       ((g$x$14424$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x$14424$1i4eWV))
            (assertion-violation
              'fxbit-count
              '"not a fixnum"
              g$x$14424$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14445$1i4eWV)
                  (if ($fx<=? g$x$14445$1i4eWV '0)
                    ($fxnot
                      (g$residual-fxbit-count*$13984$1i4eWV
                        ($fxnot g$x$14445$1i4eWV)))
                    ((letrec ((g$f$14446$1i4eWV
                                (case-lambda
                                  ((g$count$14447$1i4eWV
                                     g$x$14448$1i4eWV)
                                   (if ($fx<? '0 g$x$14448$1i4eWV)
                                     (g$f$14446$1i4eWV
                                       ($$fx+
                                         g$count$14447$1i4eWV
                                         ($fxand g$x$14448$1i4eWV '1))
                                       ($fxarithmetic-shift-right
                                         g$x$14448$1i4eWV
                                         '1))
                                     g$count$14447$1i4eWV)))))
                       g$f$14446$1i4eWV)
                     '0
                     g$x$14445$1i4eWV))))
               g$x$14424$1i4eWV))))))))
   (g$residual-fxlength*$14001$1i4eWV
     g$residual-fxlength*$16083$1i4eWV
     (case-lambda
       ((g$x$14469$1i4eWV)
        (if ($fx<? g$x$14469$1i4eWV '0)
          (g$residual-fxlength*$14001$1i4eWV ($fxnot g$x$14469$1i4eWV))
          ((letrec ((g$f$14470$1i4eWV
                      (case-lambda
                        ((g$count$14471$1i4eWV g$x$14472$1i4eWV)
                         (if ($fx<? '0 g$x$14472$1i4eWV)
                           (g$f$14470$1i4eWV
                             ($$fx+ g$count$14471$1i4eWV '1)
                             ($fxarithmetic-shift-right
                               g$x$14472$1i4eWV
                               '1))
                           g$count$14471$1i4eWV)))))
             g$f$14470$1i4eWV)
           '0
           g$x$14469$1i4eWV)))))
   (g$fxlength$14002$1i4eWV
     g$fxlength$16084$1i4eWV
     (case-lambda
       ((g$x$14473$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x$14473$1i4eWV))
            (assertion-violation
              'fxlength
              '"not a fixnum"
              g$x$14473$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14494$1i4eWV)
                  (if ($fx<? g$x$14494$1i4eWV '0)
                    (g$residual-fxlength*$14001$1i4eWV
                      ($fxnot g$x$14494$1i4eWV))
                    ((letrec ((g$f$14495$1i4eWV
                                (case-lambda
                                  ((g$count$14496$1i4eWV
                                     g$x$14497$1i4eWV)
                                   (if ($fx<? '0 g$x$14497$1i4eWV)
                                     (g$f$14495$1i4eWV
                                       ($$fx+ g$count$14496$1i4eWV '1)
                                       ($fxarithmetic-shift-right
                                         g$x$14497$1i4eWV
                                         '1))
                                     g$count$14496$1i4eWV)))))
                       g$f$14495$1i4eWV)
                     '0
                     g$x$14494$1i4eWV))))
               g$x$14473$1i4eWV))))))))
   (g$fxfirst-bit-set$14003$1i4eWV
     g$fxfirst-bit-set$16085$1i4eWV
     (case-lambda
       ((g$x$14498$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x$14498$1i4eWV))
            (assertion-violation
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$14498$1i4eWV)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$14498$1i4eWV '0)
                '-1
                ((letrec ((g$f$14499$1i4eWV
                            (case-lambda
                              ((g$count$14500$1i4eWV g$x$14501$1i4eWV)
                               (if (not ($fx=? '0 g$x$14501$1i4eWV))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$14501$1i4eWV))
                                   g$count$14500$1i4eWV
                                   (g$f$14499$1i4eWV
                                     ($$fx+ g$count$14500$1i4eWV '1)
                                     ($fxarithmetic-shift-right
                                       g$x$14501$1i4eWV
                                       '1)))
                                 g$count$14500$1i4eWV)))))
                   g$f$14499$1i4eWV)
                 '0
                 g$x$14498$1i4eWV)))))))))
   (g$fxbit-set?$14004$1i4eWV
     g$fxbit-set?$16086$1i4eWV
     (case-lambda
       ((g$x$14502$1i4eWV g$k$14503$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x$14502$1i4eWV))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$x$14502$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$k$14503$1i4eWV))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$k$14503$1i4eWV)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$14503$1i4eWV '0)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$14503$1i4eWV)
                  (void))
                (if ($fx>=? g$k$14503$1i4eWV '32)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$14503$1i4eWV)
                  (void))
                (if ($fx=? '0 g$x$14502$1i4eWV)
                  '#f
                  ((letrec ((g$f$14504$1i4eWV
                              (case-lambda
                                ((g$count$14505$1i4eWV g$x$14506$1i4eWV)
                                 (if (not ($fx=? '0 g$x$14506$1i4eWV))
                                   (if (if ($fx=?
                                             g$count$14505$1i4eWV
                                             g$k$14503$1i4eWV)
                                         (begin
                                           '#f
                                           ($fx=?
                                             '1
                                             ($fxand
                                               '1
                                               g$x$14506$1i4eWV)))
                                         '#f)
                                     '#t
                                     (g$f$14504$1i4eWV
                                       ($$fx+ g$count$14505$1i4eWV '1)
                                       ($fxarithmetic-shift-right
                                         g$x$14506$1i4eWV
                                         '1)))
                                   '#f)))))
                     g$f$14504$1i4eWV)
                   '0
                   g$x$14502$1i4eWV))))))))))
   (g$fxnot$14005$1i4eWV
     g$fxnot$16087$1i4eWV
     (case-lambda
       ((g$x1$14507$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14507$1i4eWV))
            (assertion-violation
              'fxnot
              '"not a fixnum"
              g$x1$14507$1i4eWV)
            (void))
          ((case-lambda (() ($fxnot g$x1$14507$1i4eWV))))))))
   (g$fx=?$14056$1i4eWV
     g$fx=?$16088$1i4eWV
     (case-lambda
       ((g$x1$14508$1i4eWV g$x2$14509$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14508$1i4eWV))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x1$14508$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14509$1i4eWV))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x2$14509$1i4eWV)
            (void))
          ($fx=? g$x1$14508$1i4eWV g$x2$14509$1i4eWV)))
       ((g$x1$14510$1i4eWV g$x2$14511$1i4eWV . g$rest$14512$1i4eWV)
        ((letrec ((g$f$14513$1i4eWV
                    (case-lambda
                      ((g$a$14514$1i4eWV g$b$14515$1i4eWV)
                       (if (null? g$b$14515$1i4eWV)
                         '#t
                         (if (g$fx=?$14056$1i4eWV
                               g$a$14514$1i4eWV
                               ($car g$b$14515$1i4eWV))
                           (g$f$14513$1i4eWV
                             ($car g$b$14515$1i4eWV)
                             ($cdr g$b$14515$1i4eWV))
                           '#f))))))
           g$f$14513$1i4eWV)
         g$x1$14510$1i4eWV
         (cons g$x2$14511$1i4eWV g$rest$14512$1i4eWV)))))
   (g$fx<?$14057$1i4eWV
     g$fx<?$16089$1i4eWV
     (case-lambda
       ((g$x1$14516$1i4eWV g$x2$14517$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14516$1i4eWV))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x1$14516$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14517$1i4eWV))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x2$14517$1i4eWV)
            (void))
          ($fx<? g$x1$14516$1i4eWV g$x2$14517$1i4eWV)))
       ((g$x1$14518$1i4eWV g$x2$14519$1i4eWV . g$rest$14520$1i4eWV)
        ((letrec ((g$f$14521$1i4eWV
                    (case-lambda
                      ((g$a$14522$1i4eWV g$b$14523$1i4eWV)
                       (if (null? g$b$14523$1i4eWV)
                         '#t
                         (if (g$fx<?$14057$1i4eWV
                               g$a$14522$1i4eWV
                               ($car g$b$14523$1i4eWV))
                           (g$f$14521$1i4eWV
                             ($car g$b$14523$1i4eWV)
                             ($cdr g$b$14523$1i4eWV))
                           '#f))))))
           g$f$14521$1i4eWV)
         g$x1$14518$1i4eWV
         (cons g$x2$14519$1i4eWV g$rest$14520$1i4eWV)))))
   (g$fx<=?$14058$1i4eWV
     g$fx<=?$16090$1i4eWV
     (case-lambda
       ((g$x1$14524$1i4eWV g$x2$14525$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14524$1i4eWV))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x1$14524$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14525$1i4eWV))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x2$14525$1i4eWV)
            (void))
          ($fx<=? g$x1$14524$1i4eWV g$x2$14525$1i4eWV)))
       ((g$x1$14526$1i4eWV g$x2$14527$1i4eWV . g$rest$14528$1i4eWV)
        ((letrec ((g$f$14529$1i4eWV
                    (case-lambda
                      ((g$a$14530$1i4eWV g$b$14531$1i4eWV)
                       (if (null? g$b$14531$1i4eWV)
                         '#t
                         (if (g$fx<=?$14058$1i4eWV
                               g$a$14530$1i4eWV
                               ($car g$b$14531$1i4eWV))
                           (g$f$14529$1i4eWV
                             ($car g$b$14531$1i4eWV)
                             ($cdr g$b$14531$1i4eWV))
                           '#f))))))
           g$f$14529$1i4eWV)
         g$x1$14526$1i4eWV
         (cons g$x2$14527$1i4eWV g$rest$14528$1i4eWV)))))
   (g$fx>?$14059$1i4eWV
     g$fx>?$16091$1i4eWV
     (case-lambda
       ((g$x1$14532$1i4eWV g$x2$14533$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14532$1i4eWV))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x1$14532$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14533$1i4eWV))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x2$14533$1i4eWV)
            (void))
          ($fx>? g$x1$14532$1i4eWV g$x2$14533$1i4eWV)))
       ((g$x1$14534$1i4eWV g$x2$14535$1i4eWV . g$rest$14536$1i4eWV)
        ((letrec ((g$f$14537$1i4eWV
                    (case-lambda
                      ((g$a$14538$1i4eWV g$b$14539$1i4eWV)
                       (if (null? g$b$14539$1i4eWV)
                         '#t
                         (if (g$fx>?$14059$1i4eWV
                               g$a$14538$1i4eWV
                               ($car g$b$14539$1i4eWV))
                           (g$f$14537$1i4eWV
                             ($car g$b$14539$1i4eWV)
                             ($cdr g$b$14539$1i4eWV))
                           '#f))))))
           g$f$14537$1i4eWV)
         g$x1$14534$1i4eWV
         (cons g$x2$14535$1i4eWV g$rest$14536$1i4eWV)))))
   (g$fx>=?$14060$1i4eWV
     g$fx>=?$16092$1i4eWV
     (case-lambda
       ((g$x1$14540$1i4eWV g$x2$14541$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14540$1i4eWV))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x1$14540$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14541$1i4eWV))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x2$14541$1i4eWV)
            (void))
          ($fx>=? g$x1$14540$1i4eWV g$x2$14541$1i4eWV)))
       ((g$x1$14542$1i4eWV g$x2$14543$1i4eWV . g$rest$14544$1i4eWV)
        ((letrec ((g$f$14545$1i4eWV
                    (case-lambda
                      ((g$a$14546$1i4eWV g$b$14547$1i4eWV)
                       (if (null? g$b$14547$1i4eWV)
                         '#t
                         (if (g$fx>=?$14060$1i4eWV
                               g$a$14546$1i4eWV
                               ($car g$b$14547$1i4eWV))
                           (g$f$14545$1i4eWV
                             ($car g$b$14547$1i4eWV)
                             ($cdr g$b$14547$1i4eWV))
                           '#f))))))
           g$f$14545$1i4eWV)
         g$x1$14542$1i4eWV
         (cons g$x2$14543$1i4eWV g$rest$14544$1i4eWV)))))
   (g$fxand$14108$1i4eWV
     g$fxand$16093$1i4eWV
     (case-lambda
       (() '-1)
       ((g$x1$14548$1i4eWV g$x2$14549$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14548$1i4eWV))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x1$14548$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14549$1i4eWV))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x2$14549$1i4eWV)
            (void))
          ($fxand g$x1$14548$1i4eWV g$x2$14549$1i4eWV)))
       (g$args$14550$1i4eWV
        (g$fold-left$11838$1i4eWV
          g$fxand$14108$1i4eWV
          (g$fxand$14108$1i4eWV)
          g$args$14550$1i4eWV))))
   (g$fxior$14109$1i4eWV
     g$fxior$16094$1i4eWV
     (case-lambda
       (() '0)
       ((g$x1$14551$1i4eWV g$x2$14552$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14551$1i4eWV))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x1$14551$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14552$1i4eWV))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x2$14552$1i4eWV)
            (void))
          ($fxior g$x1$14551$1i4eWV g$x2$14552$1i4eWV)))
       (g$args$14553$1i4eWV
        (g$fold-left$11838$1i4eWV
          g$fxior$14109$1i4eWV
          (g$fxior$14109$1i4eWV)
          g$args$14553$1i4eWV))))
   (g$fxxor$14110$1i4eWV
     g$fxxor$16095$1i4eWV
     (case-lambda
       (() '0)
       ((g$x1$14554$1i4eWV g$x2$14555$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14554$1i4eWV))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x1$14554$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14555$1i4eWV))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x2$14555$1i4eWV)
            (void))
          ($fxxor g$x1$14554$1i4eWV g$x2$14555$1i4eWV)))
       (g$args$14556$1i4eWV
        (g$fold-left$11838$1i4eWV
          g$fxxor$14110$1i4eWV
          (g$fxxor$14110$1i4eWV)
          g$args$14556$1i4eWV))))
   (g$residual-fxdiv*$14126$1i4eWV
     g$residual-fxdiv*$16096$1i4eWV
     (case-lambda
       ((g$x1$14577$1i4eWV g$x2$14578$1i4eWV)
        (begin
          (if ($fx=? '0 g$x2$14578$1i4eWV)
            (assertion-violation
              'fxdiv
              '"divide by zero"
              g$x1$14577$1i4eWV
              g$x2$14578$1i4eWV)
            (void))
          (if (if ($fx=? '-1 g$x2$14578$1i4eWV)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$13842$1i4eWV)
                    g$x1$14577$1i4eWV))
                '#f)
            (g$overflow-error$13951$1i4eWV
              'fxdiv
              g$x1$14577$1i4eWV
              g$x2$14578$1i4eWV)
            (void))
          (if ($fx=? '0 g$x1$14577$1i4eWV)
            '0
            (if ($fx<? '0 g$x1$14577$1i4eWV)
              ((case-lambda
                 ((g$x1$14599$1i4eWV g$x2$14600$1i4eWV)
                  ($fxdiv0 g$x1$14599$1i4eWV g$x2$14600$1i4eWV)))
               g$x1$14577$1i4eWV
               g$x2$14578$1i4eWV)
              (if ($fx<? '0 g$x2$14578$1i4eWV)
                ((case-lambda
                   ((g$x1$14621$1i4eWV g$x2$14622$1i4eWV)
                    ($fxdiv0 g$x1$14621$1i4eWV g$x2$14622$1i4eWV)))
                 ($$fx- g$x1$14577$1i4eWV ($$fx- g$x2$14578$1i4eWV '1))
                 g$x2$14578$1i4eWV)
                ((case-lambda
                   ((g$x1$14643$1i4eWV g$x2$14644$1i4eWV)
                    ($fxdiv0 g$x1$14643$1i4eWV g$x2$14644$1i4eWV)))
                 ($$fx+ g$x1$14577$1i4eWV ($$fx+ g$x2$14578$1i4eWV '1))
                 g$x2$14578$1i4eWV))))))))
   (g$fxdiv$14127$1i4eWV
     g$fxdiv$16097$1i4eWV
     (case-lambda
       ((g$x1$14645$1i4eWV g$x2$14646$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14645$1i4eWV))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x1$14645$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14646$1i4eWV))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x2$14646$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$14667$1i4eWV g$x2$14668$1i4eWV)
                  (begin
                    (if ($fx=? '0 g$x2$14668$1i4eWV)
                      (assertion-violation
                        'fxdiv
                        '"divide by zero"
                        g$x1$14667$1i4eWV
                        g$x2$14668$1i4eWV)
                      (void))
                    (if (if ($fx=? '-1 g$x2$14668$1i4eWV)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$13842$1i4eWV)
                              g$x1$14667$1i4eWV))
                          '#f)
                      (g$overflow-error$13951$1i4eWV
                        'fxdiv
                        g$x1$14667$1i4eWV
                        g$x2$14668$1i4eWV)
                      (void))
                    (if ($fx=? '0 g$x1$14667$1i4eWV)
                      '0
                      (if ($fx<? '0 g$x1$14667$1i4eWV)
                        ((case-lambda
                           ((g$x1$14689$1i4eWV g$x2$14690$1i4eWV)
                            ($fxdiv0
                              g$x1$14689$1i4eWV
                              g$x2$14690$1i4eWV)))
                         g$x1$14667$1i4eWV
                         g$x2$14668$1i4eWV)
                        (if ($fx<? '0 g$x2$14668$1i4eWV)
                          ((case-lambda
                             ((g$x1$14711$1i4eWV g$x2$14712$1i4eWV)
                              ($fxdiv0
                                g$x1$14711$1i4eWV
                                g$x2$14712$1i4eWV)))
                           ($$fx-
                             g$x1$14667$1i4eWV
                             ($$fx- g$x2$14668$1i4eWV '1))
                           g$x2$14668$1i4eWV)
                          ((case-lambda
                             ((g$x1$14733$1i4eWV g$x2$14734$1i4eWV)
                              ($fxdiv0
                                g$x1$14733$1i4eWV
                                g$x2$14734$1i4eWV)))
                           ($$fx+
                             g$x1$14667$1i4eWV
                             ($$fx+ g$x2$14668$1i4eWV '1))
                           g$x2$14668$1i4eWV)))))))
               g$x1$14645$1i4eWV
               g$x2$14646$1i4eWV))))))))
   (g$residual-fxmod*$14143$1i4eWV
     g$residual-fxmod*$16098$1i4eWV
     (case-lambda
       ((g$x1$14755$1i4eWV g$x2$14756$1i4eWV)
        ($$fx-
          g$x1$14755$1i4eWV
          ($$fx*
            ((case-lambda
               ((g$x1$14777$1i4eWV g$x2$14778$1i4eWV)
                (begin
                  (if ($fx=? '0 g$x2$14778$1i4eWV)
                    (assertion-violation
                      'fxdiv
                      '"divide by zero"
                      g$x1$14777$1i4eWV
                      g$x2$14778$1i4eWV)
                    (void))
                  (if (if ($fx=? '-1 g$x2$14778$1i4eWV)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$13842$1i4eWV)
                            g$x1$14777$1i4eWV))
                        '#f)
                    (g$overflow-error$13951$1i4eWV
                      'fxdiv
                      g$x1$14777$1i4eWV
                      g$x2$14778$1i4eWV)
                    (void))
                  (if ($fx=? '0 g$x1$14777$1i4eWV)
                    '0
                    (if ($fx<? '0 g$x1$14777$1i4eWV)
                      ((case-lambda
                         ((g$x1$14799$1i4eWV g$x2$14800$1i4eWV)
                          ($fxdiv0
                            g$x1$14799$1i4eWV
                            g$x2$14800$1i4eWV)))
                       g$x1$14777$1i4eWV
                       g$x2$14778$1i4eWV)
                      (if ($fx<? '0 g$x2$14778$1i4eWV)
                        ((case-lambda
                           ((g$x1$14821$1i4eWV g$x2$14822$1i4eWV)
                            ($fxdiv0
                              g$x1$14821$1i4eWV
                              g$x2$14822$1i4eWV)))
                         ($$fx-
                           g$x1$14777$1i4eWV
                           ($$fx- g$x2$14778$1i4eWV '1))
                         g$x2$14778$1i4eWV)
                        ((case-lambda
                           ((g$x1$14843$1i4eWV g$x2$14844$1i4eWV)
                            ($fxdiv0
                              g$x1$14843$1i4eWV
                              g$x2$14844$1i4eWV)))
                         ($$fx+
                           g$x1$14777$1i4eWV
                           ($$fx+ g$x2$14778$1i4eWV '1))
                         g$x2$14778$1i4eWV)))))))
             g$x1$14755$1i4eWV
             g$x2$14756$1i4eWV)
            g$x2$14756$1i4eWV)))))
   (g$fxmod$14144$1i4eWV
     g$fxmod$16099$1i4eWV
     (case-lambda
       ((g$x1$14845$1i4eWV g$x2$14846$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14845$1i4eWV))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$14845$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14846$1i4eWV))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$14846$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$14867$1i4eWV g$x2$14868$1i4eWV)
                  ($$fx-
                    g$x1$14867$1i4eWV
                    ($$fx*
                      ((case-lambda
                         ((g$x1$14889$1i4eWV g$x2$14890$1i4eWV)
                          (begin
                            (if ($fx=? '0 g$x2$14890$1i4eWV)
                              (assertion-violation
                                'fxdiv
                                '"divide by zero"
                                g$x1$14889$1i4eWV
                                g$x2$14890$1i4eWV)
                              (void))
                            (if (if ($fx=? '-1 g$x2$14890$1i4eWV)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$13842$1i4eWV)
                                      g$x1$14889$1i4eWV))
                                  '#f)
                              (g$overflow-error$13951$1i4eWV
                                'fxdiv
                                g$x1$14889$1i4eWV
                                g$x2$14890$1i4eWV)
                              (void))
                            (if ($fx=? '0 g$x1$14889$1i4eWV)
                              '0
                              (if ($fx<? '0 g$x1$14889$1i4eWV)
                                ((case-lambda
                                   ((g$x1$14911$1i4eWV
                                      g$x2$14912$1i4eWV)
                                    ($fxdiv0
                                      g$x1$14911$1i4eWV
                                      g$x2$14912$1i4eWV)))
                                 g$x1$14889$1i4eWV
                                 g$x2$14890$1i4eWV)
                                (if ($fx<? '0 g$x2$14890$1i4eWV)
                                  ((case-lambda
                                     ((g$x1$14933$1i4eWV
                                        g$x2$14934$1i4eWV)
                                      ($fxdiv0
                                        g$x1$14933$1i4eWV
                                        g$x2$14934$1i4eWV)))
                                   ($$fx-
                                     g$x1$14889$1i4eWV
                                     ($$fx- g$x2$14890$1i4eWV '1))
                                   g$x2$14890$1i4eWV)
                                  ((case-lambda
                                     ((g$x1$14955$1i4eWV
                                        g$x2$14956$1i4eWV)
                                      ($fxdiv0
                                        g$x1$14955$1i4eWV
                                        g$x2$14956$1i4eWV)))
                                   ($$fx+
                                     g$x1$14889$1i4eWV
                                     ($$fx+ g$x2$14890$1i4eWV '1))
                                   g$x2$14890$1i4eWV)))))))
                       g$x1$14867$1i4eWV
                       g$x2$14868$1i4eWV)
                      g$x2$14868$1i4eWV))))
               g$x1$14845$1i4eWV
               g$x2$14846$1i4eWV))))))))
   (g$fxmod0$14145$1i4eWV
     g$fxmod0$16100$1i4eWV
     (case-lambda
       ((g$x1$14957$1i4eWV g$x2$14958$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14957$1i4eWV))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$14957$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14958$1i4eWV))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$14958$1i4eWV)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$14958$1i4eWV)
                  (assertion-violation
                    'fxmod0
                    '"divide by zero"
                    g$x1$14957$1i4eWV
                    g$x2$14958$1i4eWV)
                  (void))
                (if (if ($fx=? '-1 g$x2$14958$1i4eWV)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$13842$1i4eWV)
                          g$x1$14957$1i4eWV))
                      '#f)
                  (g$overflow-error$13951$1i4eWV
                    'fxmod0
                    g$x1$14957$1i4eWV
                    g$x2$14958$1i4eWV)
                  (void))
                ($fxmod0 g$x1$14957$1i4eWV g$x2$14958$1i4eWV)))))))))
   (g$fxdiv-and-mod$14146$1i4eWV
     g$fxdiv-and-mod$16101$1i4eWV
     (case-lambda
       ((g$x1$14959$1i4eWV g$x2$14960$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$14959$1i4eWV))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$14959$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$14960$1i4eWV))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$14960$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$14961$1i4eWV)
                  (values
                    g$d$14961$1i4eWV
                    ($$fx-
                      g$x1$14959$1i4eWV
                      ($$fx* g$d$14961$1i4eWV g$x2$14960$1i4eWV)))))
               ((case-lambda
                  ((g$x1$14982$1i4eWV g$x2$14983$1i4eWV)
                   (begin
                     (if ($fx=? '0 g$x2$14983$1i4eWV)
                       (assertion-violation
                         'fxdiv
                         '"divide by zero"
                         g$x1$14982$1i4eWV
                         g$x2$14983$1i4eWV)
                       (void))
                     (if (if ($fx=? '-1 g$x2$14983$1i4eWV)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$13842$1i4eWV)
                               g$x1$14982$1i4eWV))
                           '#f)
                       (g$overflow-error$13951$1i4eWV
                         'fxdiv
                         g$x1$14982$1i4eWV
                         g$x2$14983$1i4eWV)
                       (void))
                     (if ($fx=? '0 g$x1$14982$1i4eWV)
                       '0
                       (if ($fx<? '0 g$x1$14982$1i4eWV)
                         ((case-lambda
                            ((g$x1$15004$1i4eWV g$x2$15005$1i4eWV)
                             ($fxdiv0
                               g$x1$15004$1i4eWV
                               g$x2$15005$1i4eWV)))
                          g$x1$14982$1i4eWV
                          g$x2$14983$1i4eWV)
                         (if ($fx<? '0 g$x2$14983$1i4eWV)
                           ((case-lambda
                              ((g$x1$15026$1i4eWV g$x2$15027$1i4eWV)
                               ($fxdiv0
                                 g$x1$15026$1i4eWV
                                 g$x2$15027$1i4eWV)))
                            ($$fx-
                              g$x1$14982$1i4eWV
                              ($$fx- g$x2$14983$1i4eWV '1))
                            g$x2$14983$1i4eWV)
                           ((case-lambda
                              ((g$x1$15048$1i4eWV g$x2$15049$1i4eWV)
                               ($fxdiv0
                                 g$x1$15048$1i4eWV
                                 g$x2$15049$1i4eWV)))
                            ($$fx+
                              g$x1$14982$1i4eWV
                              ($$fx+ g$x2$14983$1i4eWV '1))
                            g$x2$14983$1i4eWV)))))))
                g$x1$14959$1i4eWV
                g$x2$14960$1i4eWV)))))))))
   (g$residual-fxdiv0*$14162$1i4eWV
     g$residual-fxdiv0*$16102$1i4eWV
     (case-lambda
       ((g$x1$15070$1i4eWV g$x2$15071$1i4eWV)
        (begin
          (if ($fx=? '0 g$x2$15071$1i4eWV)
            (assertion-violation
              'fxdiv0
              '"divide by zero"
              g$x1$15070$1i4eWV
              g$x2$15071$1i4eWV)
            (void))
          (if (if ($fx=? '-1 g$x2$15071$1i4eWV)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$13842$1i4eWV)
                    g$x1$15070$1i4eWV))
                '#f)
            (g$overflow-error$13951$1i4eWV
              'fxdiv0
              g$x1$15070$1i4eWV
              g$x2$15071$1i4eWV)
            (void))
          ((case-lambda
             ((g$x1$15092$1i4eWV g$x2$15093$1i4eWV)
              ($fxdiv0 g$x1$15092$1i4eWV g$x2$15093$1i4eWV)))
           g$x1$15070$1i4eWV
           g$x2$15071$1i4eWV)))))
   (g$fxdiv0$14163$1i4eWV
     g$fxdiv0$16103$1i4eWV
     (case-lambda
       ((g$x1$15094$1i4eWV g$x2$15095$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$15094$1i4eWV))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x1$15094$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$15095$1i4eWV))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x2$15095$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15116$1i4eWV g$x2$15117$1i4eWV)
                  (begin
                    (if ($fx=? '0 g$x2$15117$1i4eWV)
                      (assertion-violation
                        'fxdiv0
                        '"divide by zero"
                        g$x1$15116$1i4eWV
                        g$x2$15117$1i4eWV)
                      (void))
                    (if (if ($fx=? '-1 g$x2$15117$1i4eWV)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$13842$1i4eWV)
                              g$x1$15116$1i4eWV))
                          '#f)
                      (g$overflow-error$13951$1i4eWV
                        'fxdiv0
                        g$x1$15116$1i4eWV
                        g$x2$15117$1i4eWV)
                      (void))
                    ((case-lambda
                       ((g$x1$15138$1i4eWV g$x2$15139$1i4eWV)
                        ($fxdiv0 g$x1$15138$1i4eWV g$x2$15139$1i4eWV)))
                     g$x1$15116$1i4eWV
                     g$x2$15117$1i4eWV))))
               g$x1$15094$1i4eWV
               g$x2$15095$1i4eWV))))))))
   (g$residual-%%fxdiv0$14179$1i4eWV
     g$residual-%%fxdiv0$16104$1i4eWV
     (case-lambda
       ((g$x1$15160$1i4eWV g$x2$15161$1i4eWV)
        ($fxdiv0 g$x1$15160$1i4eWV g$x2$15161$1i4eWV))))
   (g$fxdiv0-and-mod0$14180$1i4eWV
     g$fxdiv0-and-mod0$16105$1i4eWV
     (case-lambda
       ((g$x1$15162$1i4eWV g$x2$15163$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$15162$1i4eWV))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$15162$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$x2$15163$1i4eWV))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$15163$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$15164$1i4eWV)
                  (values
                    g$d$15164$1i4eWV
                    ($$fx-
                      g$x1$15162$1i4eWV
                      ($$fx* g$d$15164$1i4eWV g$x2$15163$1i4eWV)))))
               ((case-lambda
                  ((g$x1$15185$1i4eWV g$x2$15186$1i4eWV)
                   (begin
                     (if ($fx=? '0 g$x2$15186$1i4eWV)
                       (assertion-violation
                         'fxdiv0
                         '"divide by zero"
                         g$x1$15185$1i4eWV
                         g$x2$15186$1i4eWV)
                       (void))
                     (if (if ($fx=? '-1 g$x2$15186$1i4eWV)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$13842$1i4eWV)
                               g$x1$15185$1i4eWV))
                           '#f)
                       (g$overflow-error$13951$1i4eWV
                         'fxdiv0
                         g$x1$15185$1i4eWV
                         g$x2$15186$1i4eWV)
                       (void))
                     ((case-lambda
                        ((g$x1$15207$1i4eWV g$x2$15208$1i4eWV)
                         ($fxdiv0 g$x1$15207$1i4eWV g$x2$15208$1i4eWV)))
                      g$x1$15185$1i4eWV
                      g$x2$15186$1i4eWV))))
                g$x1$15162$1i4eWV
                g$x2$15163$1i4eWV)))))))))
   (g$residual-fxpositive?*$14196$1i4eWV
     g$residual-fxpositive?*$16106$1i4eWV
     (case-lambda ((g$r$15229$1i4eWV) ($fx<? '0 g$r$15229$1i4eWV))))
   (g$fxpositive?$14197$1i4eWV
     g$fxpositive?$16107$1i4eWV
     (case-lambda
       ((g$r$15230$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$r$15230$1i4eWV))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$15230$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15251$1i4eWV) ($fx<? '0 g$r$15251$1i4eWV)))
               g$r$15230$1i4eWV))))))))
   (g$residual-fxnegative?*$14213$1i4eWV
     g$residual-fxnegative?*$16108$1i4eWV
     (case-lambda ((g$r$15272$1i4eWV) ($fx>? '0 g$r$15272$1i4eWV))))
   (g$fxnegative?$14214$1i4eWV
     g$fxnegative?$16109$1i4eWV
     (case-lambda
       ((g$r$15273$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$r$15273$1i4eWV))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$15273$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15294$1i4eWV) ($fx>? '0 g$r$15294$1i4eWV)))
               g$r$15273$1i4eWV))))))))
   (g$residual-fxzero?*$14230$1i4eWV
     g$residual-fxzero?*$16110$1i4eWV
     (case-lambda ((g$r$15315$1i4eWV) ($fx=? '0 g$r$15315$1i4eWV))))
   (g$fxzero?$14231$1i4eWV
     g$fxzero?$16111$1i4eWV
     (case-lambda
       ((g$r$15316$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$r$15316$1i4eWV))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$15316$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$15337$1i4eWV) ($fx=? '0 g$r$15337$1i4eWV)))
               g$r$15316$1i4eWV))))))))
   (g$residual-fxeven?*$14247$1i4eWV
     g$residual-fxeven?*$16112$1i4eWV
     (case-lambda
       ((g$n$15358$1i4eWV) ($fx=? '0 ($fxand g$n$15358$1i4eWV '1)))))
   (g$fxeven?$14248$1i4eWV
     g$fxeven?$16113$1i4eWV
     (case-lambda
       ((g$n$15359$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$n$15359$1i4eWV))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$15359$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$15380$1i4eWV)
                  ($fx=? '0 ($fxand g$n$15380$1i4eWV '1))))
               g$n$15359$1i4eWV))))))))
   (g$residual-fxodd?*$14264$1i4eWV
     g$residual-fxodd?*$16114$1i4eWV
     (case-lambda
       ((g$n$15401$1i4eWV) ($fx=? '1 ($fxand g$n$15401$1i4eWV '1)))))
   (g$fxodd?$14265$1i4eWV
     g$fxodd?$16115$1i4eWV
     (case-lambda
       ((g$n$15402$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$n$15402$1i4eWV))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$15402$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$15423$1i4eWV)
                  ($fx=? '1 ($fxand g$n$15423$1i4eWV '1))))
               g$n$15402$1i4eWV))))))))
   (g$fxmax$14266$1i4eWV
     g$fxmax$16116$1i4eWV
     (case-lambda
       ((g$a$15424$1i4eWV . g$rest$15425$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$a$15424$1i4eWV))
            (assertion-violation
              'fxmax
              '"not a fixnum"
              g$a$15424$1i4eWV)
            (void))
          (g$fold-left$11838$1i4eWV
            (case-lambda
              ((g$a$15426$1i4eWV g$b$15427$1i4eWV)
               (if (g$fx<?$14057$1i4eWV
                     g$a$15426$1i4eWV
                     g$b$15427$1i4eWV)
                 g$b$15427$1i4eWV
                 g$a$15426$1i4eWV)))
            g$a$15424$1i4eWV
            g$rest$15425$1i4eWV)))))
   (g$fxmin$14267$1i4eWV
     g$fxmin$16117$1i4eWV
     (case-lambda
       ((g$a$15428$1i4eWV . g$rest$15429$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$a$15428$1i4eWV))
            (assertion-violation
              'fxmin
              '"not a fixnum"
              g$a$15428$1i4eWV)
            (void))
          (g$fold-left$11838$1i4eWV
            (case-lambda
              ((g$a$15430$1i4eWV g$b$15431$1i4eWV)
               (if (g$fx>?$14059$1i4eWV
                     g$a$15430$1i4eWV
                     g$b$15431$1i4eWV)
                 g$b$15431$1i4eWV
                 g$a$15430$1i4eWV)))
            g$a$15428$1i4eWV
            g$rest$15429$1i4eWV)))))
   (g$fx*/carry$14268$1i4eWV
     g$fx*/carry$16118$1i4eWV
     (case-lambda
       ((g$fx1$15432$1i4eWV g$fx2$15433$1i4eWV g$fx3$15434$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$fx1$15432$1i4eWV))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$15432$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx2$15433$1i4eWV))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$15433$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx3$15434$1i4eWV))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$15434$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15435$1i4eWV g$e$15436$1i4eWV)
                  (values
                    (g$mod0$12675$1i4eWV
                      g$s$15435$1i4eWV
                      g$e$15436$1i4eWV)
                    (div0 g$s$15435$1i4eWV g$e$15436$1i4eWV))))
               (+ (* g$fx1$15432$1i4eWV g$fx2$15433$1i4eWV)
                  g$fx3$15434$1i4eWV)
               (expt '2 (g$fixnum-width$12673$1i4eWV))))))))))
   (g$fx-/carry$14269$1i4eWV
     g$fx-/carry$16119$1i4eWV
     (case-lambda
       ((g$fx1$15437$1i4eWV g$fx2$15438$1i4eWV g$fx3$15439$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$fx1$15437$1i4eWV))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$15437$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx2$15438$1i4eWV))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$15438$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx3$15439$1i4eWV))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$15439$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15440$1i4eWV g$e$15441$1i4eWV)
                  (values
                    (g$mod0$12675$1i4eWV
                      g$s$15440$1i4eWV
                      g$e$15441$1i4eWV)
                    (div0 g$s$15440$1i4eWV g$e$15441$1i4eWV))))
               (- g$fx1$15437$1i4eWV
                  g$fx2$15438$1i4eWV
                  g$fx3$15439$1i4eWV)
               (expt '2 (g$fixnum-width$12673$1i4eWV))))))))))
   (g$fx+/carry$14270$1i4eWV
     g$fx+/carry$16120$1i4eWV
     (case-lambda
       ((g$fx1$15442$1i4eWV g$fx2$15443$1i4eWV g$fx3$15444$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$fx1$15442$1i4eWV))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$15442$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx2$15443$1i4eWV))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$15443$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx3$15444$1i4eWV))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$15444$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$15445$1i4eWV g$e$15446$1i4eWV)
                  (values
                    (g$mod0$12675$1i4eWV
                      g$s$15445$1i4eWV
                      g$e$15446$1i4eWV)
                    (div0 g$s$15445$1i4eWV g$e$15446$1i4eWV))))
               (+ g$fx1$15442$1i4eWV
                  g$fx2$15443$1i4eWV
                  g$fx3$15444$1i4eWV)
               (expt '2 (g$fixnum-width$12673$1i4eWV))))))))))
   (g$residual-fxif*$14286$1i4eWV
     g$residual-fxif*$16121$1i4eWV
     (case-lambda
       ((g$fx1$15467$1i4eWV g$fx2$15468$1i4eWV g$fx3$15469$1i4eWV)
        ($fxior
          ($fxand g$fx1$15467$1i4eWV g$fx2$15468$1i4eWV)
          ($fxand ($fxnot g$fx1$15467$1i4eWV) g$fx3$15469$1i4eWV)))))
   (g$fxif$14287$1i4eWV
     g$fxif$16122$1i4eWV
     (case-lambda
       ((g$fx1$15470$1i4eWV g$fx2$15471$1i4eWV g$fx3$15472$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$fx1$15470$1i4eWV))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$15470$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx2$15471$1i4eWV))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$15471$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx3$15472$1i4eWV))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$15472$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$15493$1i4eWV
                    g$fx2$15494$1i4eWV
                    g$fx3$15495$1i4eWV)
                  ($fxior
                    ($fxand g$fx1$15493$1i4eWV g$fx2$15494$1i4eWV)
                    ($fxand
                      ($fxnot g$fx1$15493$1i4eWV)
                      g$fx3$15495$1i4eWV))))
               g$fx1$15470$1i4eWV
               g$fx2$15471$1i4eWV
               g$fx3$15472$1i4eWV))))))))
   (g$residual-fxcopy-bit*$14303$1i4eWV
     g$residual-fxcopy-bit*$16123$1i4eWV
     (case-lambda
       ((g$fx1$15516$1i4eWV g$fx2$15517$1i4eWV g$fx3$15518$1i4eWV)
        ((case-lambda
           ((g$fx1$15539$1i4eWV g$fx2$15540$1i4eWV g$fx3$15541$1i4eWV)
            ($fxior
              ($fxand g$fx1$15539$1i4eWV g$fx2$15540$1i4eWV)
              ($fxand ($fxnot g$fx1$15539$1i4eWV) g$fx3$15541$1i4eWV))))
         ($fxarithmetic-shift-left '1 g$fx2$15517$1i4eWV)
         ($fxarithmetic-shift-left
           g$fx3$15518$1i4eWV
           g$fx2$15517$1i4eWV)
         g$fx1$15516$1i4eWV))))
   (g$fxcopy-bit$14304$1i4eWV
     g$fxcopy-bit$16124$1i4eWV
     (case-lambda
       ((g$fx1$15542$1i4eWV g$fx2$15543$1i4eWV g$fx3$15544$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$fx1$15542$1i4eWV))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$15542$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx2$15543$1i4eWV))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$15543$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx3$15544$1i4eWV))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$15544$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$15565$1i4eWV
                    g$fx2$15566$1i4eWV
                    g$fx3$15567$1i4eWV)
                  ((case-lambda
                     ((g$fx1$15588$1i4eWV
                        g$fx2$15589$1i4eWV
                        g$fx3$15590$1i4eWV)
                      ($fxior
                        ($fxand g$fx1$15588$1i4eWV g$fx2$15589$1i4eWV)
                        ($fxand
                          ($fxnot g$fx1$15588$1i4eWV)
                          g$fx3$15590$1i4eWV))))
                   ($fxarithmetic-shift-left '1 g$fx2$15566$1i4eWV)
                   ($fxarithmetic-shift-left
                     g$fx3$15567$1i4eWV
                     g$fx2$15566$1i4eWV)
                   g$fx1$15565$1i4eWV)))
               g$fx1$15542$1i4eWV
               g$fx2$15543$1i4eWV
               g$fx3$15544$1i4eWV))))))))
   (g$residual-fxbit-field*$14320$1i4eWV
     g$residual-fxbit-field*$16125$1i4eWV
     (case-lambda
       ((g$fx1$15611$1i4eWV g$fx2$15612$1i4eWV g$fx3$15613$1i4eWV)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$15611$1i4eWV
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$15613$1i4eWV)))
          g$fx2$15612$1i4eWV))))
   (g$fxbit-field$14321$1i4eWV
     g$fxbit-field$16126$1i4eWV
     (case-lambda
       ((g$fx1$15614$1i4eWV g$fx2$15615$1i4eWV g$fx3$15616$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$fx1$15614$1i4eWV))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$15614$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx2$15615$1i4eWV))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$15615$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx3$15616$1i4eWV))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$15616$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$15637$1i4eWV
                    g$fx2$15638$1i4eWV
                    g$fx3$15639$1i4eWV)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$15637$1i4eWV
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$15639$1i4eWV)))
                    g$fx2$15638$1i4eWV)))
               g$fx1$15614$1i4eWV
               g$fx2$15615$1i4eWV
               g$fx3$15616$1i4eWV))))))))
   (g$residual-fxcopy-bit-field*$14337$1i4eWV
     g$residual-fxcopy-bit-field*$16127$1i4eWV
     (case-lambda
       ((g$to$15660$1i4eWV
          g$start$15661$1i4eWV
          g$end$15662$1i4eWV
          g$from$15663$1i4eWV)
        ((case-lambda
           ((g$fx1$15684$1i4eWV g$fx2$15685$1i4eWV g$fx3$15686$1i4eWV)
            ($fxior
              ($fxand g$fx1$15684$1i4eWV g$fx2$15685$1i4eWV)
              ($fxand ($fxnot g$fx1$15684$1i4eWV) g$fx3$15686$1i4eWV))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$15661$1i4eWV)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$15662$1i4eWV)))
         ($fxarithmetic-shift-left
           g$from$15663$1i4eWV
           g$start$15661$1i4eWV)
         g$to$15660$1i4eWV))))
   (g$fxcopy-bit-field$14338$1i4eWV
     g$fxcopy-bit-field$16128$1i4eWV
     (case-lambda
       ((g$to$15687$1i4eWV
          g$start$15688$1i4eWV
          g$end$15689$1i4eWV
          g$from$15690$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$to$15687$1i4eWV))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$15687$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$start$15688$1i4eWV))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$15688$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$end$15689$1i4eWV))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$15689$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$from$15690$1i4eWV))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$15690$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$15711$1i4eWV
                    g$start$15712$1i4eWV
                    g$end$15713$1i4eWV
                    g$from$15714$1i4eWV)
                  ((case-lambda
                     ((g$fx1$15735$1i4eWV
                        g$fx2$15736$1i4eWV
                        g$fx3$15737$1i4eWV)
                      ($fxior
                        ($fxand g$fx1$15735$1i4eWV g$fx2$15736$1i4eWV)
                        ($fxand
                          ($fxnot g$fx1$15735$1i4eWV)
                          g$fx3$15737$1i4eWV))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$15712$1i4eWV)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$15713$1i4eWV)))
                   ($fxarithmetic-shift-left
                     g$from$15714$1i4eWV
                     g$start$15712$1i4eWV)
                   g$to$15711$1i4eWV)))
               g$to$15687$1i4eWV
               g$start$15688$1i4eWV
               g$end$15689$1i4eWV
               g$from$15690$1i4eWV))))))))
   (g$fxarithmetic-shift-left$14339$1i4eWV
     g$fxarithmetic-shift-left$16129$1i4eWV
     (case-lambda
       ((g$fx1$15738$1i4eWV g$fx2$15739$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$fx1$15738$1i4eWV))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$15738$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx2$15739$1i4eWV))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$15739$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15760$1i4eWV g$k$15761$1i4eWV)
                  (if ($fx=? g$k$15761$1i4eWV '0)
                    g$x$15760$1i4eWV
                    (if ($fx<? g$k$15761$1i4eWV '0)
                      ($fxarithmetic-shift-right
                        g$x$15760$1i4eWV
                        ($$fx- g$k$15761$1i4eWV))
                      ((case-lambda
                         ((g$i$15762$1i4eWV)
                          (begin
                            (if ($fx>?
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$x$15760$1i4eWV)
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$i$15762$1i4eWV))
                              (g$overflow-error$13951$1i4eWV
                                'fxarithmetic-shift
                                g$x$15760$1i4eWV
                                g$k$15761$1i4eWV)
                              (void))
                            g$i$15762$1i4eWV)))
                       ($fxarithmetic-shift-left
                         g$x$15760$1i4eWV
                         g$k$15761$1i4eWV))))))
               g$fx1$15738$1i4eWV
               g$fx2$15739$1i4eWV))))))))
   (g$fxarithmetic-shift-right$14340$1i4eWV
     g$fxarithmetic-shift-right$16130$1i4eWV
     (case-lambda
       ((g$fx1$15763$1i4eWV g$fx2$15764$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$fx1$15763$1i4eWV))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$15763$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$fx2$15764$1i4eWV))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$15764$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15785$1i4eWV g$k$15786$1i4eWV)
                  (if ($fx=? g$k$15786$1i4eWV '0)
                    g$x$15785$1i4eWV
                    (if ($fx<? g$k$15786$1i4eWV '0)
                      ($fxarithmetic-shift-right
                        g$x$15785$1i4eWV
                        ($$fx- g$k$15786$1i4eWV))
                      ((case-lambda
                         ((g$i$15787$1i4eWV)
                          (begin
                            (if ($fx>?
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$x$15785$1i4eWV)
                                  (clr-call-internal
                                    'System.Math
                                    '"abs(int32)"
                                    '()
                                    g$i$15787$1i4eWV))
                              (g$overflow-error$13951$1i4eWV
                                'fxarithmetic-shift
                                g$x$15785$1i4eWV
                                g$k$15786$1i4eWV)
                              (void))
                            g$i$15787$1i4eWV)))
                       ($fxarithmetic-shift-left
                         g$x$15785$1i4eWV
                         g$k$15786$1i4eWV))))))
               g$fx1$15763$1i4eWV
               ($$fx- g$fx2$15764$1i4eWV)))))))))
   (g$fxrotate-bit-field$14341$1i4eWV
     g$fxrotate-bit-field$16131$1i4eWV
     (case-lambda
       ((g$n$15788$1i4eWV
          g$start$15789$1i4eWV
          g$end$15790$1i4eWV
          g$count$15791$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$n$15788$1i4eWV))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$15788$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$start$15789$1i4eWV))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$15789$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$end$15790$1i4eWV))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$15790$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$count$15791$1i4eWV))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$15791$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$15792$1i4eWV)
                  (if ((case-lambda
                         ((g$r$15813$1i4eWV)
                          ($fx<? '0 g$r$15813$1i4eWV)))
                       g$width$15792$1i4eWV)
                    ((case-lambda
                       ((g$count$15814$1i4eWV g$field$15815$1i4eWV)
                        ((case-lambda
                           ((g$to$15836$1i4eWV
                              g$start$15837$1i4eWV
                              g$end$15838$1i4eWV
                              g$from$15839$1i4eWV)
                            ((case-lambda
                               ((g$fx1$15860$1i4eWV
                                  g$fx2$15861$1i4eWV
                                  g$fx3$15862$1i4eWV)
                                ($fxior
                                  ($fxand
                                    g$fx1$15860$1i4eWV
                                    g$fx2$15861$1i4eWV)
                                  ($fxand
                                    ($fxnot g$fx1$15860$1i4eWV)
                                    g$fx3$15862$1i4eWV))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$15837$1i4eWV)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$15838$1i4eWV)))
                             ($fxarithmetic-shift-left
                               g$from$15839$1i4eWV
                               g$start$15837$1i4eWV)
                             g$to$15836$1i4eWV)))
                         g$n$15788$1i4eWV
                         g$start$15789$1i4eWV
                         g$end$15790$1i4eWV
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$15815$1i4eWV
                             g$count$15814$1i4eWV)
                           ($fxarithmetic-shift-right
                             g$field$15815$1i4eWV
                             ($$fx-
                               g$width$15792$1i4eWV
                               g$count$15814$1i4eWV))))))
                     ((case-lambda
                        ((g$x1$15883$1i4eWV g$x2$15884$1i4eWV)
                         ($$fx-
                           g$x1$15883$1i4eWV
                           ($$fx*
                             ((case-lambda
                                ((g$x1$15905$1i4eWV g$x2$15906$1i4eWV)
                                 (begin
                                   (if ($fx=? '0 g$x2$15906$1i4eWV)
                                     (assertion-violation
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$15905$1i4eWV
                                       g$x2$15906$1i4eWV)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$15906$1i4eWV)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$13842$1i4eWV)
                                             g$x1$15905$1i4eWV))
                                         '#f)
                                     (g$overflow-error$13951$1i4eWV
                                       'fxdiv
                                       g$x1$15905$1i4eWV
                                       g$x2$15906$1i4eWV)
                                     (void))
                                   (if ($fx=? '0 g$x1$15905$1i4eWV)
                                     '0
                                     (if ($fx<? '0 g$x1$15905$1i4eWV)
                                       ((case-lambda
                                          ((g$x1$15927$1i4eWV
                                             g$x2$15928$1i4eWV)
                                           ($fxdiv0
                                             g$x1$15927$1i4eWV
                                             g$x2$15928$1i4eWV)))
                                        g$x1$15905$1i4eWV
                                        g$x2$15906$1i4eWV)
                                       (if ($fx<? '0 g$x2$15906$1i4eWV)
                                         ((case-lambda
                                            ((g$x1$15949$1i4eWV
                                               g$x2$15950$1i4eWV)
                                             ($fxdiv0
                                               g$x1$15949$1i4eWV
                                               g$x2$15950$1i4eWV)))
                                          ($$fx-
                                            g$x1$15905$1i4eWV
                                            ($$fx-
                                              g$x2$15906$1i4eWV
                                              '1))
                                          g$x2$15906$1i4eWV)
                                         ((case-lambda
                                            ((g$x1$15971$1i4eWV
                                               g$x2$15972$1i4eWV)
                                             ($fxdiv0
                                               g$x1$15971$1i4eWV
                                               g$x2$15972$1i4eWV)))
                                          ($$fx+
                                            g$x1$15905$1i4eWV
                                            ($$fx+
                                              g$x2$15906$1i4eWV
                                              '1))
                                          g$x2$15906$1i4eWV)))))))
                              g$x1$15883$1i4eWV
                              g$x2$15884$1i4eWV)
                             g$x2$15884$1i4eWV))))
                      g$count$15791$1i4eWV
                      g$width$15792$1i4eWV)
                     ((case-lambda
                        ((g$fx1$15993$1i4eWV
                           g$fx2$15994$1i4eWV
                           g$fx3$15995$1i4eWV)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$15993$1i4eWV
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$15995$1i4eWV)))
                           g$fx2$15994$1i4eWV)))
                      g$n$15788$1i4eWV
                      g$start$15789$1i4eWV
                      g$end$15790$1i4eWV))
                    g$n$15788$1i4eWV)))
               ($$fx- g$end$15790$1i4eWV g$start$15789$1i4eWV)))))))))
   (g$fxreverse-bit-field$14342$1i4eWV
     g$fxreverse-bit-field$16132$1i4eWV
     (case-lambda
       ((g$x1$15996$1i4eWV g$start$15997$1i4eWV g$end$15998$1i4eWV)
        (begin
          (if (not (g$fixnum?$12671$1i4eWV g$x1$15996$1i4eWV))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$15996$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$start$15997$1i4eWV))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$15997$1i4eWV)
            (void))
          (if (not (g$fixnum?$12671$1i4eWV g$end$15998$1i4eWV))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$15998$1i4eWV)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=?
                           g$start$15997$1i4eWV
                           g$end$15998$1i4eWV))
                  (assertion-violation
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$15997$1i4eWV
                    g$end$15998$1i4eWV)
                  (void))
                (letrec ((g$loop$15999$1i4eWV
                           (case-lambda
                             ((g$width$16023$1i4eWV
                                g$bits$16024$1i4eWV
                                g$rbits$16025$1i4eWV)
                              (if ($fx=? g$width$16023$1i4eWV '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$16046$1i4eWV
                                        g$start$16047$1i4eWV
                                        g$end$16048$1i4eWV
                                        g$from$16049$1i4eWV)
                                      ((case-lambda
                                         ((g$fx1$16070$1i4eWV
                                            g$fx2$16071$1i4eWV
                                            g$fx3$16072$1i4eWV)
                                          ($fxior
                                            ($fxand
                                              g$fx1$16070$1i4eWV
                                              g$fx2$16071$1i4eWV)
                                            ($fxand
                                              ($fxnot
                                                g$fx1$16070$1i4eWV)
                                              g$fx3$16072$1i4eWV))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$16047$1i4eWV)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$16048$1i4eWV)))
                                       ($fxarithmetic-shift-left
                                         g$from$16049$1i4eWV
                                         g$start$16047$1i4eWV)
                                       g$to$16046$1i4eWV)))
                                   g$x1$15996$1i4eWV
                                   g$start$15997$1i4eWV
                                   g$end$15998$1i4eWV
                                   g$rbits$16025$1i4eWV))
                                (g$loop$15999$1i4eWV
                                  ($$fx- g$width$16023$1i4eWV '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$16024$1i4eWV
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$16025$1i4eWV
                                      '1)
                                    ($fxand
                                      g$bits$16024$1i4eWV
                                      '1))))))))
                  (g$loop$15999$1i4eWV
                    ($$fx- g$end$15998$1i4eWV g$start$15997$1i4eWV)
                    ((case-lambda
                       ((g$fx1$16020$1i4eWV
                          g$fx2$16021$1i4eWV
                          g$fx3$16022$1i4eWV)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$16020$1i4eWV
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$16022$1i4eWV)))
                          g$fx2$16021$1i4eWV)))
                     g$x1$15996$1i4eWV
                     g$start$15997$1i4eWV
                     g$end$15998$1i4eWV)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$16311$1i4eWV
     g$fl+$17620$1i4eWV
     (case-lambda
       (() '0.0)
       ((g$x1$16432$1i4eWV g$x2$16433$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16432$1i4eWV))
            (assertion-violation 'fl+ '"not a flonum" g$x1$16432$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16433$1i4eWV))
            (assertion-violation 'fl+ '"not a flonum" g$x2$16433$1i4eWV)
            (void))
          ($fl+ g$x1$16432$1i4eWV g$x2$16433$1i4eWV)))
       (g$args$16434$1i4eWV
        (g$fold-left$11838$1i4eWV
          g$fl+$16311$1i4eWV
          (g$fl+$16311$1i4eWV)
          g$args$16434$1i4eWV))))
   (g$fl*$16312$1i4eWV
     g$fl*$17621$1i4eWV
     (case-lambda
       (() '1.0)
       ((g$x1$16435$1i4eWV g$x2$16436$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16435$1i4eWV))
            (assertion-violation 'fl* '"not a flonum" g$x1$16435$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16436$1i4eWV))
            (assertion-violation 'fl* '"not a flonum" g$x2$16436$1i4eWV)
            (void))
          ($fl* g$x1$16435$1i4eWV g$x2$16436$1i4eWV)))
       (g$args$16437$1i4eWV
        (g$fold-left$11838$1i4eWV
          g$fl*$16312$1i4eWV
          (g$fl*$16312$1i4eWV)
          g$args$16437$1i4eWV))))
   (g$fl-$16313$1i4eWV
     g$fl-$17622$1i4eWV
     (case-lambda
       ((g$x1$16438$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16438$1i4eWV))
            (assertion-violation 'fl- '"not a flonum" g$x1$16438$1i4eWV)
            (void))
          ($fl- g$x1$16438$1i4eWV)))
       ((g$x1$16439$1i4eWV g$x2$16440$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16439$1i4eWV))
            (assertion-violation 'fl- '"not a flonum" g$x1$16439$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16440$1i4eWV))
            (assertion-violation 'fl- '"not a flonum" g$x2$16440$1i4eWV)
            (void))
          ($fl- g$x1$16439$1i4eWV g$x2$16440$1i4eWV)))
       ((g$x1$16441$1i4eWV g$x2$16442$1i4eWV . g$rest$16443$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16441$1i4eWV))
            (assertion-violation 'fl- '"not a flonum" g$x1$16441$1i4eWV)
            (void))
          (g$fold-left$11838$1i4eWV
            g$fl-$16313$1i4eWV
            g$x1$16441$1i4eWV
            (cons g$x2$16442$1i4eWV g$rest$16443$1i4eWV))))))
   (g$fl/$16314$1i4eWV
     g$fl/$17623$1i4eWV
     (case-lambda
       ((g$x1$16444$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16444$1i4eWV))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16444$1i4eWV)
            (void))
          ($fl/ '1.0 g$x1$16444$1i4eWV)))
       ((g$x1$16445$1i4eWV g$x2$16446$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16445$1i4eWV))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16445$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16446$1i4eWV))
            (assertion-violation 'fl/ '"not a flonum" g$x2$16446$1i4eWV)
            (void))
          ($fl/ g$x1$16445$1i4eWV g$x2$16446$1i4eWV)))
       ((g$x1$16447$1i4eWV g$x2$16448$1i4eWV . g$rest$16449$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16447$1i4eWV))
            (assertion-violation 'fl/ '"not a flonum" g$x1$16447$1i4eWV)
            (void))
          (g$fold-left$11838$1i4eWV
            g$fl/$16314$1i4eWV
            g$x1$16447$1i4eWV
            (cons g$x2$16448$1i4eWV g$rest$16449$1i4eWV))))))
   (g$fl=?$16315$1i4eWV
     g$fl=?$17624$1i4eWV
     (case-lambda
       ((g$x1$16450$1i4eWV g$x2$16451$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16450$1i4eWV))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x1$16450$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16451$1i4eWV))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x2$16451$1i4eWV)
            (void))
          ($fl=? g$x1$16450$1i4eWV g$x2$16451$1i4eWV)))
       ((g$x1$16452$1i4eWV g$x2$16453$1i4eWV . g$rest$16454$1i4eWV)
        ((letrec ((g$f$16455$1i4eWV
                    (case-lambda
                      ((g$a$16456$1i4eWV g$b$16457$1i4eWV)
                       (if (null? g$b$16457$1i4eWV)
                         '#t
                         (if (g$fl=?$16315$1i4eWV
                               g$a$16456$1i4eWV
                               ($car g$b$16457$1i4eWV))
                           (g$f$16455$1i4eWV
                             ($car g$b$16457$1i4eWV)
                             ($cdr g$b$16457$1i4eWV))
                           '#f))))))
           g$f$16455$1i4eWV)
         g$x1$16452$1i4eWV
         (cons g$x2$16453$1i4eWV g$rest$16454$1i4eWV)))))
   (g$fl<?$16316$1i4eWV
     g$fl<?$17625$1i4eWV
     (case-lambda
       ((g$x1$16458$1i4eWV g$x2$16459$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16458$1i4eWV))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x1$16458$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16459$1i4eWV))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x2$16459$1i4eWV)
            (void))
          ($fl<? g$x1$16458$1i4eWV g$x2$16459$1i4eWV)))
       ((g$x1$16460$1i4eWV g$x2$16461$1i4eWV . g$rest$16462$1i4eWV)
        ((letrec ((g$f$16463$1i4eWV
                    (case-lambda
                      ((g$a$16464$1i4eWV g$b$16465$1i4eWV)
                       (if (null? g$b$16465$1i4eWV)
                         '#t
                         (if (g$fl<?$16316$1i4eWV
                               g$a$16464$1i4eWV
                               ($car g$b$16465$1i4eWV))
                           (g$f$16463$1i4eWV
                             ($car g$b$16465$1i4eWV)
                             ($cdr g$b$16465$1i4eWV))
                           '#f))))))
           g$f$16463$1i4eWV)
         g$x1$16460$1i4eWV
         (cons g$x2$16461$1i4eWV g$rest$16462$1i4eWV)))))
   (g$fl<=?$16317$1i4eWV
     g$fl<=?$17626$1i4eWV
     (case-lambda
       ((g$x1$16466$1i4eWV g$x2$16467$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16466$1i4eWV))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x1$16466$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16467$1i4eWV))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x2$16467$1i4eWV)
            (void))
          ($fl<=? g$x1$16466$1i4eWV g$x2$16467$1i4eWV)))
       ((g$x1$16468$1i4eWV g$x2$16469$1i4eWV . g$rest$16470$1i4eWV)
        ((letrec ((g$f$16471$1i4eWV
                    (case-lambda
                      ((g$a$16472$1i4eWV g$b$16473$1i4eWV)
                       (if (null? g$b$16473$1i4eWV)
                         '#t
                         (if (g$fl<=?$16317$1i4eWV
                               g$a$16472$1i4eWV
                               ($car g$b$16473$1i4eWV))
                           (g$f$16471$1i4eWV
                             ($car g$b$16473$1i4eWV)
                             ($cdr g$b$16473$1i4eWV))
                           '#f))))))
           g$f$16471$1i4eWV)
         g$x1$16468$1i4eWV
         (cons g$x2$16469$1i4eWV g$rest$16470$1i4eWV)))))
   (g$fl>?$16318$1i4eWV
     g$fl>?$17627$1i4eWV
     (case-lambda
       ((g$x1$16474$1i4eWV g$x2$16475$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16474$1i4eWV))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x1$16474$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16475$1i4eWV))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x2$16475$1i4eWV)
            (void))
          ($fl>? g$x1$16474$1i4eWV g$x2$16475$1i4eWV)))
       ((g$x1$16476$1i4eWV g$x2$16477$1i4eWV . g$rest$16478$1i4eWV)
        ((letrec ((g$f$16479$1i4eWV
                    (case-lambda
                      ((g$a$16480$1i4eWV g$b$16481$1i4eWV)
                       (if (null? g$b$16481$1i4eWV)
                         '#t
                         (if (g$fl>?$16318$1i4eWV
                               g$a$16480$1i4eWV
                               ($car g$b$16481$1i4eWV))
                           (g$f$16479$1i4eWV
                             ($car g$b$16481$1i4eWV)
                             ($cdr g$b$16481$1i4eWV))
                           '#f))))))
           g$f$16479$1i4eWV)
         g$x1$16476$1i4eWV
         (cons g$x2$16477$1i4eWV g$rest$16478$1i4eWV)))))
   (g$fl>=?$16319$1i4eWV
     g$fl>=?$17628$1i4eWV
     (case-lambda
       ((g$x1$16482$1i4eWV g$x2$16483$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16482$1i4eWV))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x1$16482$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16483$1i4eWV))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x2$16483$1i4eWV)
            (void))
          ($fl>=? g$x1$16482$1i4eWV g$x2$16483$1i4eWV)))
       ((g$x1$16484$1i4eWV g$x2$16485$1i4eWV . g$rest$16486$1i4eWV)
        ((letrec ((g$f$16487$1i4eWV
                    (case-lambda
                      ((g$a$16488$1i4eWV g$b$16489$1i4eWV)
                       (if (null? g$b$16489$1i4eWV)
                         '#t
                         (if (g$fl>=?$16319$1i4eWV
                               g$a$16488$1i4eWV
                               ($car g$b$16489$1i4eWV))
                           (g$f$16487$1i4eWV
                             ($car g$b$16489$1i4eWV)
                             ($cdr g$b$16489$1i4eWV))
                           '#f))))))
           g$f$16487$1i4eWV)
         g$x1$16484$1i4eWV
         (cons g$x2$16485$1i4eWV g$rest$16486$1i4eWV)))))
   (g$residual-fldiv0*$16335$1i4eWV
     g$residual-fldiv0*$17629$1i4eWV
     (case-lambda
       ((g$x1$16510$1i4eWV g$x2$16511$1i4eWV)
        ((case-lambda
           ((g$d$16512$1i4eWV)
            ((case-lambda
               ((g$m$16513$1i4eWV)
                (if ($fl<?
                      g$m$16513$1i4eWV
                      (magnitude ($fl/ g$x2$16511$1i4eWV '2.0)))
                  g$d$16512$1i4eWV
                  (if ($fl<? '0.0 g$x2$16511$1i4eWV)
                    ($fl+ g$d$16512$1i4eWV '1.0)
                    ($fl- g$d$16512$1i4eWV '1.0)))))
             ($fl-
               g$x1$16510$1i4eWV
               ($fl* g$d$16512$1i4eWV g$x2$16511$1i4eWV)))))
         ((case-lambda
            ((g$x1$16534$1i4eWV g$x2$16535$1i4eWV)
             (if ($fl<? '0.0 g$x2$16535$1i4eWV)
               ((case-lambda
                  ((g$fl$16556$1i4eWV)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$16556$1i4eWV)))
                ($fl/ g$x1$16534$1i4eWV g$x2$16535$1i4eWV))
               ($fl-
                 ((case-lambda
                    ((g$fl$16577$1i4eWV)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$16577$1i4eWV)))
                  ($fl/ g$x1$16534$1i4eWV ($fl- g$x2$16535$1i4eWV)))))))
          g$x1$16510$1i4eWV
          g$x2$16511$1i4eWV)))))
   (g$fldiv0$16336$1i4eWV
     g$fldiv0$17630$1i4eWV
     (case-lambda
       ((g$x1$16578$1i4eWV g$x2$16579$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16578$1i4eWV))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x1$16578$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16579$1i4eWV))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x2$16579$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$16600$1i4eWV g$x2$16601$1i4eWV)
                  ((case-lambda
                     ((g$d$16602$1i4eWV)
                      ((case-lambda
                         ((g$m$16603$1i4eWV)
                          (if ($fl<?
                                g$m$16603$1i4eWV
                                (magnitude
                                  ($fl/ g$x2$16601$1i4eWV '2.0)))
                            g$d$16602$1i4eWV
                            (if ($fl<? '0.0 g$x2$16601$1i4eWV)
                              ($fl+ g$d$16602$1i4eWV '1.0)
                              ($fl- g$d$16602$1i4eWV '1.0)))))
                       ($fl-
                         g$x1$16600$1i4eWV
                         ($fl* g$d$16602$1i4eWV g$x2$16601$1i4eWV)))))
                   ((case-lambda
                      ((g$x1$16624$1i4eWV g$x2$16625$1i4eWV)
                       (if ($fl<? '0.0 g$x2$16625$1i4eWV)
                         ((case-lambda
                            ((g$fl$16646$1i4eWV)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$16646$1i4eWV)))
                          ($fl/ g$x1$16624$1i4eWV g$x2$16625$1i4eWV))
                         ($fl-
                           ((case-lambda
                              ((g$fl$16667$1i4eWV)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$16667$1i4eWV)))
                            ($fl/
                              g$x1$16624$1i4eWV
                              ($fl- g$x2$16625$1i4eWV)))))))
                    g$x1$16600$1i4eWV
                    g$x2$16601$1i4eWV))))
               g$x1$16578$1i4eWV
               g$x2$16579$1i4eWV))))))))
   (g$residual-flmod*$16352$1i4eWV
     g$residual-flmod*$17631$1i4eWV
     (case-lambda
       ((g$x1$16688$1i4eWV g$x2$16689$1i4eWV)
        ($fl-
          g$x1$16688$1i4eWV
          ($fl*
            ((case-lambda
               ((g$x1$16710$1i4eWV g$x2$16711$1i4eWV)
                (if ($fl<? '0.0 g$x2$16711$1i4eWV)
                  ((case-lambda
                     ((g$fl$16732$1i4eWV)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$16732$1i4eWV)))
                   ($fl/ g$x1$16710$1i4eWV g$x2$16711$1i4eWV))
                  ($fl-
                    ((case-lambda
                       ((g$fl$16753$1i4eWV)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$16753$1i4eWV)))
                     ($fl/
                       g$x1$16710$1i4eWV
                       ($fl- g$x2$16711$1i4eWV)))))))
             g$x1$16688$1i4eWV
             g$x2$16689$1i4eWV)
            g$x2$16689$1i4eWV)))))
   (g$flmod$16353$1i4eWV
     g$flmod$17632$1i4eWV
     (case-lambda
       ((g$x1$16754$1i4eWV g$x2$16755$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16754$1i4eWV))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x1$16754$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16755$1i4eWV))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x2$16755$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$16776$1i4eWV g$x2$16777$1i4eWV)
                  ($fl-
                    g$x1$16776$1i4eWV
                    ($fl*
                      ((case-lambda
                         ((g$x1$16798$1i4eWV g$x2$16799$1i4eWV)
                          (if ($fl<? '0.0 g$x2$16799$1i4eWV)
                            ((case-lambda
                               ((g$fl$16820$1i4eWV)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$16820$1i4eWV)))
                             ($fl/ g$x1$16798$1i4eWV g$x2$16799$1i4eWV))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$16841$1i4eWV)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$16841$1i4eWV)))
                               ($fl/
                                 g$x1$16798$1i4eWV
                                 ($fl- g$x2$16799$1i4eWV)))))))
                       g$x1$16776$1i4eWV
                       g$x2$16777$1i4eWV)
                      g$x2$16777$1i4eWV))))
               g$x1$16754$1i4eWV
               g$x2$16755$1i4eWV))))))))
   (g$flmod0$16354$1i4eWV
     g$flmod0$17633$1i4eWV
     (case-lambda
       ((g$x1$16842$1i4eWV g$x2$16843$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16842$1i4eWV))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x1$16842$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16843$1i4eWV))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x2$16843$1i4eWV)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$16842$1i4eWV
                ($fl*
                  ((case-lambda
                     ((g$x1$16864$1i4eWV g$x2$16865$1i4eWV)
                      ((case-lambda
                         ((g$d$16866$1i4eWV)
                          ((case-lambda
                             ((g$m$16867$1i4eWV)
                              (if ($fl<?
                                    g$m$16867$1i4eWV
                                    (magnitude
                                      ($fl/ g$x2$16865$1i4eWV '2.0)))
                                g$d$16866$1i4eWV
                                (if ($fl<? '0.0 g$x2$16865$1i4eWV)
                                  ($fl+ g$d$16866$1i4eWV '1.0)
                                  ($fl- g$d$16866$1i4eWV '1.0)))))
                           ($fl-
                             g$x1$16864$1i4eWV
                             ($fl*
                               g$d$16866$1i4eWV
                               g$x2$16865$1i4eWV)))))
                       ((case-lambda
                          ((g$x1$16888$1i4eWV g$x2$16889$1i4eWV)
                           (if ($fl<? '0.0 g$x2$16889$1i4eWV)
                             ((case-lambda
                                ((g$fl$16910$1i4eWV)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$16910$1i4eWV)))
                              ($fl/
                                g$x1$16888$1i4eWV
                                g$x2$16889$1i4eWV))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$16931$1i4eWV)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$16931$1i4eWV)))
                                ($fl/
                                  g$x1$16888$1i4eWV
                                  ($fl- g$x2$16889$1i4eWV)))))))
                        g$x1$16864$1i4eWV
                        g$x2$16865$1i4eWV))))
                   g$x1$16842$1i4eWV
                   g$x2$16843$1i4eWV)
                  g$x2$16843$1i4eWV)))))))))
   (g$fldiv-and-mod$16355$1i4eWV
     g$fldiv-and-mod$17634$1i4eWV
     (case-lambda
       ((g$x1$16932$1i4eWV g$x2$16933$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$16932$1i4eWV))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x1$16932$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$16933$1i4eWV))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x2$16933$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$16934$1i4eWV)
                  (values
                    g$d$16934$1i4eWV
                    ($fl-
                      g$x1$16932$1i4eWV
                      ($fl* g$d$16934$1i4eWV g$x2$16933$1i4eWV)))))
               ((case-lambda
                  ((g$x1$16955$1i4eWV g$x2$16956$1i4eWV)
                   (if ($fl<? '0.0 g$x2$16956$1i4eWV)
                     ((case-lambda
                        ((g$fl$16977$1i4eWV)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$16977$1i4eWV)))
                      ($fl/ g$x1$16955$1i4eWV g$x2$16956$1i4eWV))
                     ($fl-
                       ((case-lambda
                          ((g$fl$16998$1i4eWV)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$16998$1i4eWV)))
                        ($fl/
                          g$x1$16955$1i4eWV
                          ($fl- g$x2$16956$1i4eWV)))))))
                g$x1$16932$1i4eWV
                g$x2$16933$1i4eWV)))))))))
   (g$residual-fldiv*$16371$1i4eWV
     g$residual-fldiv*$17635$1i4eWV
     (case-lambda
       ((g$x1$17019$1i4eWV g$x2$17020$1i4eWV)
        (if ($fl<? '0.0 g$x2$17020$1i4eWV)
          ((case-lambda
             ((g$fl$17041$1i4eWV)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$17041$1i4eWV)))
           ($fl/ g$x1$17019$1i4eWV g$x2$17020$1i4eWV))
          ($fl-
            ((case-lambda
               ((g$fl$17062$1i4eWV)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$17062$1i4eWV)))
             ($fl/ g$x1$17019$1i4eWV ($fl- g$x2$17020$1i4eWV))))))))
   (g$fldiv$16372$1i4eWV
     g$fldiv$17636$1i4eWV
     (case-lambda
       ((g$x1$17063$1i4eWV g$x2$17064$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$17063$1i4eWV))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x1$17063$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$17064$1i4eWV))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x2$17064$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17085$1i4eWV g$x2$17086$1i4eWV)
                  (if ($fl<? '0.0 g$x2$17086$1i4eWV)
                    ((case-lambda
                       ((g$fl$17107$1i4eWV)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$17107$1i4eWV)))
                     ($fl/ g$x1$17085$1i4eWV g$x2$17086$1i4eWV))
                    ($fl-
                      ((case-lambda
                         ((g$fl$17128$1i4eWV)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$17128$1i4eWV)))
                       ($fl/
                         g$x1$17085$1i4eWV
                         ($fl- g$x2$17086$1i4eWV)))))))
               g$x1$17063$1i4eWV
               g$x2$17064$1i4eWV))))))))
   (g$fldiv0-and-mod0$16373$1i4eWV
     g$fldiv0-and-mod0$17637$1i4eWV
     (case-lambda
       ((g$x1$17129$1i4eWV g$x2$17130$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$x1$17129$1i4eWV))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$17129$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$x2$17130$1i4eWV))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$17130$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$17131$1i4eWV)
                  (values
                    g$d$17131$1i4eWV
                    ($fl-
                      g$x1$17129$1i4eWV
                      ($fl* g$d$17131$1i4eWV g$x2$17130$1i4eWV)))))
               ((case-lambda
                  ((g$x1$17152$1i4eWV g$x2$17153$1i4eWV)
                   ((case-lambda
                      ((g$d$17154$1i4eWV)
                       ((case-lambda
                          ((g$m$17155$1i4eWV)
                           (if ($fl<?
                                 g$m$17155$1i4eWV
                                 (magnitude
                                   ($fl/ g$x2$17153$1i4eWV '2.0)))
                             g$d$17154$1i4eWV
                             (if ($fl<? '0.0 g$x2$17153$1i4eWV)
                               ($fl+ g$d$17154$1i4eWV '1.0)
                               ($fl- g$d$17154$1i4eWV '1.0)))))
                        ($fl-
                          g$x1$17152$1i4eWV
                          ($fl* g$d$17154$1i4eWV g$x2$17153$1i4eWV)))))
                    ((case-lambda
                       ((g$x1$17176$1i4eWV g$x2$17177$1i4eWV)
                        (if ($fl<? '0.0 g$x2$17177$1i4eWV)
                          ((case-lambda
                             ((g$fl$17198$1i4eWV)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$17198$1i4eWV)))
                           ($fl/ g$x1$17176$1i4eWV g$x2$17177$1i4eWV))
                          ($fl-
                            ((case-lambda
                               ((g$fl$17219$1i4eWV)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$17219$1i4eWV)))
                             ($fl/
                               g$x1$17176$1i4eWV
                               ($fl- g$x2$17177$1i4eWV)))))))
                     g$x1$17152$1i4eWV
                     g$x2$17153$1i4eWV))))
                g$x1$17129$1i4eWV
                g$x2$17130$1i4eWV)))))))))
   (g$flinteger?$16374$1i4eWV
     g$flinteger?$17638$1i4eWV
     (case-lambda
       ((g$fl$17220$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17220$1i4eWV))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$17220$1i4eWV)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$17241$1i4eWV g$x2$17242$1i4eWV)
                    ($fl-
                      g$x1$17241$1i4eWV
                      ($fl*
                        ((case-lambda
                           ((g$x1$17263$1i4eWV g$x2$17264$1i4eWV)
                            (if ($fl<? '0.0 g$x2$17264$1i4eWV)
                              ((case-lambda
                                 ((g$fl$17285$1i4eWV)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$17285$1i4eWV)))
                               ($fl/
                                 g$x1$17263$1i4eWV
                                 g$x2$17264$1i4eWV))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$17306$1i4eWV)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$17306$1i4eWV)))
                                 ($fl/
                                   g$x1$17263$1i4eWV
                                   ($fl- g$x2$17264$1i4eWV)))))))
                         g$x1$17241$1i4eWV
                         g$x2$17242$1i4eWV)
                        g$x2$17242$1i4eWV))))
                 g$fl$17220$1i4eWV
                 '1.0)))))))))
   (g$flfinite?$16375$1i4eWV
     g$flfinite?$17639$1i4eWV
     (case-lambda
       ((g$fl$17307$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17307$1i4eWV))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$17307$1i4eWV)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$17328$1i4eWV)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$17328$1i4eWV)))
                    g$fl$17307$1i4eWV)))))))))
   (g$residual-flinfinite?*$16391$1i4eWV
     g$residual-flinfinite?*$17640$1i4eWV
     (case-lambda
       ((g$fl$17349$1i4eWV)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$17349$1i4eWV))))
   (g$flinfinite?$16392$1i4eWV
     g$flinfinite?$17641$1i4eWV
     (case-lambda
       ((g$fl$17350$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17350$1i4eWV))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$17350$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$17371$1i4eWV)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$17371$1i4eWV)))
               g$fl$17350$1i4eWV))))))))
   (g$flnan?$16393$1i4eWV
     g$flnan?$17642$1i4eWV
     (case-lambda
       ((g$fl$17372$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17372$1i4eWV))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$17372$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$17372$1i4eWV))))))))
   (g$flsin$16394$1i4eWV
     g$flsin$17643$1i4eWV
     (case-lambda
       ((g$fl$17373$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17373$1i4eWV))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$17373$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$17373$1i4eWV))))))))
   (g$flcos$16395$1i4eWV
     g$flcos$17644$1i4eWV
     (case-lambda
       ((g$fl$17374$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17374$1i4eWV))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$17374$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$17374$1i4eWV))))))))
   (g$fltan$16396$1i4eWV
     g$fltan$17645$1i4eWV
     (case-lambda
       ((g$fl$17375$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17375$1i4eWV))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$17375$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$17375$1i4eWV))))))))
   (g$flasin$16397$1i4eWV
     g$flasin$17646$1i4eWV
     (case-lambda
       ((g$fl$17376$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17376$1i4eWV))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$17376$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$17376$1i4eWV))))))))
   (g$flacos$16398$1i4eWV
     g$flacos$17647$1i4eWV
     (case-lambda
       ((g$fl$17377$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17377$1i4eWV))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$17377$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$17377$1i4eWV))))))))
   (g$flatan$16399$1i4eWV
     g$flatan$17648$1i4eWV
     (case-lambda
       ((g$fl$17378$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17378$1i4eWV))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl$17378$1i4eWV)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$17378$1i4eWV)))
       ((g$fl1$17379$1i4eWV g$fl2$17380$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl1$17379$1i4eWV))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl1$17379$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$fl2$17380$1i4eWV))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl2$17380$1i4eWV)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$17379$1i4eWV
            g$fl2$17380$1i4eWV)))))
   (g$fllog$16400$1i4eWV
     g$fllog$17649$1i4eWV
     (case-lambda
       ((g$fl$17381$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17381$1i4eWV))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl$17381$1i4eWV)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$17381$1i4eWV)))
       ((g$fl1$17382$1i4eWV g$fl2$17383$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl1$17382$1i4eWV))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl1$17382$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$fl2$17383$1i4eWV))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl2$17383$1i4eWV)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$17382$1i4eWV
            g$fl2$17383$1i4eWV)))))
   (g$flsqrt$16401$1i4eWV
     g$flsqrt$17650$1i4eWV
     (case-lambda
       ((g$fl$17384$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17384$1i4eWV))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$17384$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$17384$1i4eWV))))))))
   (g$flexp$16402$1i4eWV
     g$flexp$17651$1i4eWV
     (case-lambda
       ((g$fl$17385$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17385$1i4eWV))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$17385$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$17385$1i4eWV))))))))
   (g$flexpt$16403$1i4eWV
     g$flexpt$17652$1i4eWV
     (case-lambda
       ((g$fl$17386$1i4eWV g$n$17387$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17386$1i4eWV))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$17386$1i4eWV)
            (void))
          (if (not (g$flonum?$12672$1i4eWV g$n$17387$1i4eWV))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$n$17387$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$17386$1i4eWV
                g$n$17387$1i4eWV))))))))
   (g$flceiling$16404$1i4eWV
     g$flceiling$17653$1i4eWV
     (case-lambda
       ((g$fl$17388$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17388$1i4eWV))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$17388$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$17388$1i4eWV))))))))
   (g$residual-flfloor*$16420$1i4eWV
     g$residual-flfloor*$17654$1i4eWV
     (case-lambda
       ((g$fl$17409$1i4eWV)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$17409$1i4eWV))))
   (g$flfloor$16421$1i4eWV
     g$flfloor$17655$1i4eWV
     (case-lambda
       ((g$fl$17410$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17410$1i4eWV))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$17410$1i4eWV)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$17431$1i4eWV)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$17431$1i4eWV)))
               g$fl$17410$1i4eWV))))))))
   (g$fltruncate$16422$1i4eWV
     g$fltruncate$17656$1i4eWV
     (case-lambda
       ((g$fl$17432$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17432$1i4eWV))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$17432$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$17432$1i4eWV))))))))
   (g$flround$16423$1i4eWV
     g$flround$17657$1i4eWV
     (case-lambda
       ((g$fl$17433$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17433$1i4eWV))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$17433$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$17433$1i4eWV))))))))
   (g$flabs$16424$1i4eWV
     g$flabs$17658$1i4eWV
     (case-lambda
       ((g$fl$17434$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$fl$17434$1i4eWV))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$17434$1i4eWV)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$17434$1i4eWV))))))))
   (g$flpositive?$16425$1i4eWV
     g$flpositive?$17659$1i4eWV
     (case-lambda
       ((g$r$17435$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$r$17435$1i4eWV))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$17435$1i4eWV)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$17435$1i4eWV))))))))
   (g$flnegative?$16426$1i4eWV
     g$flnegative?$17660$1i4eWV
     (case-lambda
       ((g$r$17436$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$r$17436$1i4eWV))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$17436$1i4eWV)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$17436$1i4eWV))))))))
   (g$flzero?$16427$1i4eWV
     g$flzero?$17661$1i4eWV
     (case-lambda
       ((g$r$17437$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$r$17437$1i4eWV))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$17437$1i4eWV)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$17437$1i4eWV))))))))
   (g$fleven?$16428$1i4eWV
     g$fleven?$17662$1i4eWV
     (case-lambda
       ((g$n$17438$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$n$17438$1i4eWV))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$17438$1i4eWV)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (integer-valued? g$n$17438$1i4eWV))
                  (assertion-violation
                    'fleven?
                    '"not integer valued"
                    g$n$17438$1i4eWV)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$17459$1i4eWV g$x2$17460$1i4eWV)
                      ($fl-
                        g$x1$17459$1i4eWV
                        ($fl*
                          ((case-lambda
                             ((g$x1$17481$1i4eWV g$x2$17482$1i4eWV)
                              (if ($fl<? '0.0 g$x2$17482$1i4eWV)
                                ((case-lambda
                                   ((g$fl$17503$1i4eWV)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$17503$1i4eWV)))
                                 ($fl/
                                   g$x1$17481$1i4eWV
                                   g$x2$17482$1i4eWV))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$17524$1i4eWV)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$17524$1i4eWV)))
                                   ($fl/
                                     g$x1$17481$1i4eWV
                                     ($fl- g$x2$17482$1i4eWV)))))))
                           g$x1$17459$1i4eWV
                           g$x2$17460$1i4eWV)
                          g$x2$17460$1i4eWV))))
                   g$n$17438$1i4eWV
                   '2.0))))))))))
   (g$flodd?$16429$1i4eWV
     g$flodd?$17663$1i4eWV
     (case-lambda
       ((g$n$17525$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$n$17525$1i4eWV))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$17525$1i4eWV)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (integer-valued? g$n$17525$1i4eWV))
                  (assertion-violation
                    'flodd?
                    '"not integer valued"
                    g$n$17525$1i4eWV)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$17546$1i4eWV g$x2$17547$1i4eWV)
                      ($fl-
                        g$x1$17546$1i4eWV
                        ($fl*
                          ((case-lambda
                             ((g$x1$17568$1i4eWV g$x2$17569$1i4eWV)
                              (if ($fl<? '0.0 g$x2$17569$1i4eWV)
                                ((case-lambda
                                   ((g$fl$17590$1i4eWV)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$17590$1i4eWV)))
                                 ($fl/
                                   g$x1$17568$1i4eWV
                                   g$x2$17569$1i4eWV))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$17611$1i4eWV)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$17611$1i4eWV)))
                                   ($fl/
                                     g$x1$17568$1i4eWV
                                     ($fl- g$x2$17569$1i4eWV)))))))
                           g$x1$17546$1i4eWV
                           g$x2$17547$1i4eWV)
                          g$x2$17547$1i4eWV))))
                   g$n$17525$1i4eWV
                   '2.0))))))))))
   (g$flmax$16430$1i4eWV
     g$flmax$17664$1i4eWV
     (case-lambda
       ((g$a$17612$1i4eWV . g$rest$17613$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$a$17612$1i4eWV))
            (assertion-violation
              'flmax
              '"not a flonum"
              g$a$17612$1i4eWV)
            (void))
          (g$fold-left$11838$1i4eWV
            (case-lambda
              ((g$a$17614$1i4eWV g$b$17615$1i4eWV)
               (if (g$fl<?$16316$1i4eWV
                     g$a$17614$1i4eWV
                     g$b$17615$1i4eWV)
                 g$b$17615$1i4eWV
                 g$a$17614$1i4eWV)))
            g$a$17612$1i4eWV
            g$rest$17613$1i4eWV)))))
   (g$flmin$16431$1i4eWV
     g$flmin$17665$1i4eWV
     (case-lambda
       ((g$a$17616$1i4eWV . g$rest$17617$1i4eWV)
        (begin
          (if (not (g$flonum?$12672$1i4eWV g$a$17616$1i4eWV))
            (assertion-violation
              'flmin
              '"not a flonum"
              g$a$17616$1i4eWV)
            (void))
          (g$fold-left$11838$1i4eWV
            (case-lambda
              ((g$a$17618$1i4eWV g$b$17619$1i4eWV)
               (if (g$fl>?$16318$1i4eWV
                     g$a$17618$1i4eWV
                     g$b$17619$1i4eWV)
                 g$b$17619$1i4eWV
                 g$a$17618$1i4eWV)))
            g$a$17616$1i4eWV
            g$rest$17617$1i4eWV))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$17667$1i4eWV
     g$using$17687$1i4eWV
     (clr-using-internal 'ironscheme.runtime))
   (g$put-datum$17668$1i4eWV
     g$put-datum$17688$1i4eWV
     (case-lambda
       ((g$p$17676$1i4eWV g$datum$17677$1i4eWV)
        (write g$datum$17677$1i4eWV g$p$17676$1i4eWV))))
   (g$get-datum$17669$1i4eWV g$get-datum$17689$1i4eWV read)
   (g$get-output-string$17670$1i4eWV
     g$get-output-string$17690$1i4eWV
     (case-lambda
       ((g$port$17678$1i4eWV)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$17678$1i4eWV))))
   (g$open-output-string$17671$1i4eWV
     g$open-output-string$17691$1i4eWV
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$17672$1i4eWV
     g$open-string-output-port$17692$1i4eWV
     (case-lambda
       (()
        ((case-lambda
           ((g$p$17679$1i4eWV)
            (values
              g$p$17679$1i4eWV
              (case-lambda
                (()
                 (g$get-output-string$17670$1i4eWV
                   g$p$17679$1i4eWV))))))
         (g$open-output-string$17671$1i4eWV)))))
   (g$port?$17673$1i4eWV
     g$port?$17693$1i4eWV
     (case-lambda
       ((g$obj$17680$1i4eWV)
        ((case-lambda
           ((g$t$17681$1i4eWV)
            (if g$t$17681$1i4eWV
              g$t$17681$1i4eWV
              (begin '#f (binary-port? g$obj$17680$1i4eWV)))))
         (textual-port? g$obj$17680$1i4eWV)))))
   (g$call-with-string-output-port$17674$1i4eWV
     g$call-with-string-output-port$17694$1i4eWV
     (case-lambda
       ((g$proc$17682$1i4eWV)
        ((case-lambda
           ((g$p$17683$1i4eWV)
            (begin
              (g$call-with-port$17675$1i4eWV
                g$p$17683$1i4eWV
                g$proc$17682$1i4eWV)
              (g$get-output-string$17670$1i4eWV g$p$17683$1i4eWV))))
         (g$open-output-string$17671$1i4eWV)))))
   (g$call-with-port$17675$1i4eWV
     g$call-with-port$17695$1i4eWV
     (case-lambda
       ((g$port$17684$1i4eWV g$proc$17685$1i4eWV)
        ((case-lambda
           ((g$r$17686$1i4eWV)
            (begin (close-port g$port$17684$1i4eWV) g$r$17686$1i4eWV)))
         (g$proc$17685$1i4eWV g$port$17684$1i4eWV))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$17696$1i4eWV
     g$peek-char$17751$1i4eWV
     (case-lambda
       (() (g$peek-char$17696$1i4eWV (current-input-port)))
       ((g$port$17723$1i4eWV) (lookahead-char g$port$17723$1i4eWV))))
   (g$read-char$17697$1i4eWV
     g$read-char$17752$1i4eWV
     (case-lambda
       (() (g$read-char$17697$1i4eWV (current-input-port)))
       ((g$port$17724$1i4eWV) (get-char g$port$17724$1i4eWV))))
   (g$write-char$17698$1i4eWV
     g$write-char$17753$1i4eWV
     (case-lambda
       ((g$chr$17725$1i4eWV)
        (g$write-char$17698$1i4eWV
          g$chr$17725$1i4eWV
          (current-output-port)))
       ((g$chr$17726$1i4eWV g$port$17727$1i4eWV)
        (put-char g$port$17727$1i4eWV g$chr$17726$1i4eWV))))
   (g$with-input-from-file$17718$1i4eWV
     g$with-input-from-file$17754$1i4eWV
     (case-lambda
       ((g$filename$17728$1i4eWV g$thunk$17729$1i4eWV)
        ((case-lambda
           ((g$current-input-port$17732$1i4eWV g$t$17733$1i4eWV)
            ((case-lambda
               ((g$swap$17734$1i4eWV)
                (dynamic-wind
                  g$swap$17734$1i4eWV
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$17729$1i4eWV)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$17734$1i4eWV)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$17735$1i4eWV)
                    (begin
                      (g$current-input-port$17732$1i4eWV
                        g$t$17733$1i4eWV)
                      (set! g$t$17733$1i4eWV g$t$17735$1i4eWV))))
                 (g$current-input-port$17732$1i4eWV)))))))
         current-input-port
         (open-input-file g$filename$17728$1i4eWV)))))
   (g$with-output-to-file$17719$1i4eWV
     g$with-output-to-file$17755$1i4eWV
     (case-lambda
       ((g$filename$17736$1i4eWV g$thunk$17737$1i4eWV)
        ((case-lambda
           ((g$current-output-port$17740$1i4eWV g$t$17741$1i4eWV)
            ((case-lambda
               ((g$swap$17742$1i4eWV)
                (dynamic-wind
                  g$swap$17742$1i4eWV
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$17737$1i4eWV)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$17742$1i4eWV)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$17743$1i4eWV)
                    (begin
                      (g$current-output-port$17740$1i4eWV
                        g$t$17741$1i4eWV)
                      (set! g$t$17741$1i4eWV g$t$17743$1i4eWV))))
                 (g$current-output-port$17740$1i4eWV)))))))
         current-output-port
         (open-output-file g$filename$17736$1i4eWV)))))
   (g$call-with-input-file$17720$1i4eWV
     g$call-with-input-file$17756$1i4eWV
     (case-lambda
       ((g$filename$17744$1i4eWV g$proc$17745$1i4eWV)
        ((case-lambda
           ((g$p$17746$1i4eWV)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$17745$1i4eWV g$p$17746$1i4eWV)))
              (case-lambda (() (close-input-port g$p$17746$1i4eWV))))))
         (open-input-file g$filename$17744$1i4eWV)))))
   (g$call-with-output-file$17721$1i4eWV
     g$call-with-output-file$17757$1i4eWV
     (case-lambda
       ((g$filename$17747$1i4eWV g$proc$17748$1i4eWV)
        ((case-lambda
           ((g$p$17749$1i4eWV)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$17748$1i4eWV g$p$17749$1i4eWV)))
              (case-lambda (() (close-output-port g$p$17749$1i4eWV))))))
         (open-output-file g$filename$17747$1i4eWV)))))
   (g$newline$17722$1i4eWV
     g$newline$17758$1i4eWV
     (case-lambda
       (() (g$newline$17722$1i4eWV (current-output-port)))
       ((g$port$17750$1i4eWV) (display '"
" g$port$17750$1i4eWV)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8185$17759$1i4eWV
     g$8185$17872$1i4eWV
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8187$17760$1i4eWV g$8187$17873$1i4eWV '#f)
   (g$8186$17761$1i4eWV
     g$8186$17874$1i4eWV
     (make-record-constructor-descriptor
       g$8185$17759$1i4eWV
       '#f
       g$8187$17760$1i4eWV))
   (g$enum?$17764$1i4eWV
     g$enum?$17875$1i4eWV
     (record-predicate g$8185$17759$1i4eWV))
   (g$make-enum$17765$1i4eWV
     g$make-enum$17876$1i4eWV
     (record-constructor g$8186$17761$1i4eWV))
   (g$enum-value$17766$1i4eWV
     g$enum-value$17877$1i4eWV
     (record-accessor g$8185$17759$1i4eWV '0))
   (g$enum-info$17767$1i4eWV
     g$enum-info$17878$1i4eWV
     (record-accessor g$8185$17759$1i4eWV '1))
   (g$8196$17768$1i4eWV
     g$8196$17879$1i4eWV
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8198$17769$1i4eWV g$8198$17880$1i4eWV '#f)
   (g$8197$17770$1i4eWV
     g$8197$17881$1i4eWV
     (make-record-constructor-descriptor
       g$8196$17768$1i4eWV
       '#f
       g$8198$17769$1i4eWV))
   (g$enum-universe?$17773$1i4eWV
     g$enum-universe?$17882$1i4eWV
     (record-predicate g$8196$17768$1i4eWV))
   (g$make-enum-universe$17774$1i4eWV
     g$make-enum-universe$17883$1i4eWV
     (record-constructor g$8197$17770$1i4eWV))
   (g$enum-universe-id$17775$1i4eWV
     g$enum-universe-id$17884$1i4eWV
     (record-accessor g$8196$17768$1i4eWV '0))
   (g$enum-universe-symbols$17776$1i4eWV
     g$enum-universe-symbols$17885$1i4eWV
     (record-accessor g$8196$17768$1i4eWV '1))
   (g$enum-universe-mapping$17777$1i4eWV
     g$enum-universe-mapping$17886$1i4eWV
     (record-accessor g$8196$17768$1i4eWV '2))
   (g$enum-universe-value$17778$1i4eWV
     g$enum-universe-value$17887$1i4eWV
     (record-accessor g$8196$17768$1i4eWV '3))
   (g$enum-type=?$17779$1i4eWV
     g$enum-type=?$17888$1i4eWV
     (case-lambda
       ((g$enumset1$17801$1i4eWV g$enumset2$17802$1i4eWV)
        (eq? (g$enum-universe-id$17775$1i4eWV
               (g$enum-info$17767$1i4eWV g$enumset1$17801$1i4eWV))
             (g$enum-universe-id$17775$1i4eWV
               (g$enum-info$17767$1i4eWV g$enumset2$17802$1i4eWV))))))
   (g$get-symbols$17780$1i4eWV
     g$get-symbols$17889$1i4eWV
     (case-lambda
       ((g$enumset$17803$1i4eWV)
        (g$enum-universe-symbols$17776$1i4eWV
          (g$enum-info$17767$1i4eWV g$enumset$17803$1i4eWV)))))
   (g$get-value$17781$1i4eWV
     g$get-value$17890$1i4eWV
     (case-lambda
       ((g$enumset$17804$1i4eWV g$s$17805$1i4eWV)
        (g$hashtable-ref$12780$1i4eWV
          (g$enum-universe-mapping$17777$1i4eWV
            (g$enum-info$17767$1i4eWV g$enumset$17804$1i4eWV))
          g$s$17805$1i4eWV
          '#f))))
   (g$assert-enum$17782$1i4eWV
     g$assert-enum$17891$1i4eWV
     (case-lambda
       ((g$who$17806$1i4eWV g$enumset$17807$1i4eWV)
        (if (not (g$enum?$17764$1i4eWV g$enumset$17807$1i4eWV))
          (assertion-violation
            g$who$17806$1i4eWV
            '"not an enumeration"
            g$enumset$17807$1i4eWV)
          (void)))))
   (g$make-info$17783$1i4eWV
     g$make-info$17892$1i4eWV
     (case-lambda
       ((g$symbols$17808$1i4eWV)
        ((case-lambda
           ((g$ht$17809$1i4eWV)
            ((letrec ((g$f$17810$1i4eWV
                        (case-lambda
                          ((g$s$17811$1i4eWV
                             g$a$17812$1i4eWV
                             g$mask$17813$1i4eWV)
                           (if (null? g$s$17811$1i4eWV)
                             (values
                               (reverse! g$a$17812$1i4eWV)
                               g$ht$17809$1i4eWV
                               (- g$mask$17813$1i4eWV '1))
                             ((case-lambda
                                ((g$n$17814$1i4eWV)
                                 (if (g$symbol?$12668$1i4eWV
                                       g$n$17814$1i4eWV)
                                   (if (g$hashtable-contains?$12783$1i4eWV
                                         g$ht$17809$1i4eWV
                                         g$n$17814$1i4eWV)
                                     (g$f$17810$1i4eWV
                                       (cdr g$s$17811$1i4eWV)
                                       g$a$17812$1i4eWV
                                       g$mask$17813$1i4eWV)
                                     (begin
                                       (g$hashtable-set!$12781$1i4eWV
                                         g$ht$17809$1i4eWV
                                         g$n$17814$1i4eWV
                                         g$mask$17813$1i4eWV)
                                       (g$f$17810$1i4eWV
                                         (cdr g$s$17811$1i4eWV)
                                         (cons
                                           g$n$17814$1i4eWV
                                           g$a$17812$1i4eWV)
                                         (g$bitwise-arithmetic-shift-left$13838$1i4eWV
                                           g$mask$17813$1i4eWV
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$17814$1i4eWV))))
                              (car g$s$17811$1i4eWV)))))))
               g$f$17810$1i4eWV)
             g$symbols$17808$1i4eWV
             '()
             '1)))
         (g$make-eq-hashtable$12777$1i4eWV)))))
   (g$make-name$17784$1i4eWV
     g$make-name$17893$1i4eWV
     (case-lambda
       ((g$symbols$17815$1i4eWV)
        (string->symbol
          (g$format$17932$1i4eWV '"~a" g$symbols$17815$1i4eWV)))))
   (g$make-enumeration$17785$1i4eWV
     g$make-enumeration$17894$1i4eWV
     (case-lambda
       ((g$symbols$17816$1i4eWV)
        (call-with-values
          (case-lambda
            (() (g$make-info$17783$1i4eWV g$symbols$17816$1i4eWV)))
          (case-lambda
            ((g$s$17820$1i4eWV
               g$mapping$17821$1i4eWV
               g$mask$17822$1i4eWV)
             ((case-lambda
                ((g$mask$17823$1i4eWV
                   g$mapping$17824$1i4eWV
                   g$s$17825$1i4eWV)
                 (g$make-enum$17765$1i4eWV
                   g$mask$17823$1i4eWV
                   (g$make-enum-universe$17774$1i4eWV
                     (g$make-name$17784$1i4eWV g$s$17825$1i4eWV)
                     g$s$17825$1i4eWV
                     g$mapping$17824$1i4eWV
                     g$mask$17823$1i4eWV))))
              g$mask$17822$1i4eWV
              g$mapping$17821$1i4eWV
              g$s$17820$1i4eWV)))))))
   (g$enum-set-universe$17786$1i4eWV
     g$enum-set-universe$17895$1i4eWV
     (case-lambda
       ((g$enumset$17826$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-universe
            g$enumset$17826$1i4eWV)
          ((case-lambda
             ((g$ei$17827$1i4eWV)
              (g$make-enum$17765$1i4eWV
                (g$enum-universe-value$17778$1i4eWV g$ei$17827$1i4eWV)
                g$ei$17827$1i4eWV)))
           (g$enum-info$17767$1i4eWV g$enumset$17826$1i4eWV))))))
   (g$enum-set-indexer$17787$1i4eWV
     g$enum-set-indexer$17896$1i4eWV
     (case-lambda
       ((g$enumset$17828$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-indexer
            g$enumset$17828$1i4eWV)
          (case-lambda
            ((g$symbol$17829$1i4eWV)
             (begin
               (if (not (g$symbol?$12668$1i4eWV g$symbol$17829$1i4eWV))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$17829$1i4eWV)
                 (void))
               ((case-lambda
                  ((g$v$17830$1i4eWV)
                   (if g$v$17830$1i4eWV
                     (- (bitwise-length g$v$17830$1i4eWV) '1)
                     '#f)))
                (g$get-value$17781$1i4eWV
                  g$enumset$17828$1i4eWV
                  g$symbol$17829$1i4eWV)))))))))
   (g$enum-set-constructor$17788$1i4eWV
     g$enum-set-constructor$17897$1i4eWV
     (case-lambda
       ((g$enumset$17831$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-constructor
            g$enumset$17831$1i4eWV)
          (case-lambda
            ((g$symbols$17832$1i4eWV)
             ((letrec ((g$f$17833$1i4eWV
                         (case-lambda
                           ((g$v$17834$1i4eWV g$s$17835$1i4eWV)
                            (if (null? g$s$17835$1i4eWV)
                              (g$make-enum$17765$1i4eWV
                                g$v$17834$1i4eWV
                                (g$enum-info$17767$1i4eWV
                                  g$enumset$17831$1i4eWV))
                              ((case-lambda
                                 ((g$n$17836$1i4eWV)
                                  (if (g$symbol?$12668$1i4eWV
                                        g$n$17836$1i4eWV)
                                    ((case-lambda
                                       ((g$v*$17837$1i4eWV)
                                        (if g$v*$17837$1i4eWV
                                          (g$f$17833$1i4eWV
                                            (bitwise-ior
                                              g$v$17834$1i4eWV
                                              g$v*$17837$1i4eWV)
                                            (cdr g$s$17835$1i4eWV))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$17836$1i4eWV))))
                                     (g$get-value$17781$1i4eWV
                                       g$enumset$17831$1i4eWV
                                       g$n$17836$1i4eWV))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$17836$1i4eWV))))
                               (car g$s$17835$1i4eWV)))))))
                g$f$17833$1i4eWV)
              '0
              g$symbols$17832$1i4eWV)))))))
   (g$enum-set->list$17789$1i4eWV
     g$enum-set->list$17898$1i4eWV
     (case-lambda
       ((g$enumset$17838$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set->list
            g$enumset$17838$1i4eWV)
          ((case-lambda
             ((g$value$17839$1i4eWV)
              ((letrec ((g$f$17840$1i4eWV
                          (case-lambda
                            ((g$s$17841$1i4eWV g$l$17842$1i4eWV)
                             (if (null? g$s$17841$1i4eWV)
                               (reverse! g$l$17842$1i4eWV)
                               (if (g$zero?$12715$1i4eWV
                                     (bitwise-and
                                       (g$get-value$17781$1i4eWV
                                         g$enumset$17838$1i4eWV
                                         (car g$s$17841$1i4eWV))
                                       g$value$17839$1i4eWV))
                                 (g$f$17840$1i4eWV
                                   (cdr g$s$17841$1i4eWV)
                                   g$l$17842$1i4eWV)
                                 (g$f$17840$1i4eWV
                                   (cdr g$s$17841$1i4eWV)
                                   (cons
                                     (car g$s$17841$1i4eWV)
                                     g$l$17842$1i4eWV))))))))
                 g$f$17840$1i4eWV)
               (g$get-symbols$17780$1i4eWV g$enumset$17838$1i4eWV)
               '())))
           (g$enum-value$17766$1i4eWV g$enumset$17838$1i4eWV))))))
   (g$enum-set-member?$17790$1i4eWV
     g$enum-set-member?$17899$1i4eWV
     (case-lambda
       ((g$symbol$17843$1i4eWV g$enumset$17844$1i4eWV)
        (begin
          (if (not (g$symbol?$12668$1i4eWV g$symbol$17843$1i4eWV))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$17843$1i4eWV)
            (void))
          (g$assert-enum$17782$1i4eWV
            'enum-set-member?
            g$enumset$17844$1i4eWV)
          ((case-lambda
             ((g$v$17845$1i4eWV)
              (if g$v$17845$1i4eWV
                (not (g$zero?$12715$1i4eWV
                       (bitwise-and
                         g$v$17845$1i4eWV
                         (g$enum-value$17766$1i4eWV
                           g$enumset$17844$1i4eWV))))
                '#f)))
           (g$get-value$17781$1i4eWV
             g$enumset$17844$1i4eWV
             g$symbol$17843$1i4eWV))))))
   (g$enum-set-subset?$17791$1i4eWV
     g$enum-set-subset?$17900$1i4eWV
     (case-lambda
       ((g$enumset1$17846$1i4eWV g$enumset2$17847$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-subset?
            g$enumset1$17846$1i4eWV)
          (g$assert-enum$17782$1i4eWV
            'enum-set-subset?
            g$enumset2$17847$1i4eWV)
          ((case-lambda
             ((g$v1$17848$1i4eWV g$v2$17849$1i4eWV)
              (if (g$enum-type=?$17779$1i4eWV
                    g$enumset1$17846$1i4eWV
                    g$enumset2$17847$1i4eWV)
                (= (bitwise-and g$v1$17848$1i4eWV g$v2$17849$1i4eWV)
                   g$v1$17848$1i4eWV)
                ((letrec ((g$f$17850$1i4eWV
                            (case-lambda
                              ((g$s$17851$1i4eWV)
                               (if (null? g$s$17851$1i4eWV)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$17852$1i4eWV
                                       g$v2*$17853$1i4eWV)
                                     (if g$v2*$17853$1i4eWV
                                       ((case-lambda
                                          ((g$has1$17854$1i4eWV
                                             g$has2$17855$1i4eWV)
                                           (if (if g$has1$17854$1i4eWV
                                                 (begin
                                                   '#f
                                                   (not g$has2$17855$1i4eWV))
                                                 '#f)
                                             '#f
                                             (g$f$17850$1i4eWV
                                               (cdr g$s$17851$1i4eWV)))))
                                        (not (g$zero?$12715$1i4eWV
                                               (bitwise-and
                                                 g$v1$17848$1i4eWV
                                                 g$v1*$17852$1i4eWV)))
                                        (not (g$zero?$12715$1i4eWV
                                               (bitwise-and
                                                 g$v2$17849$1i4eWV
                                                 g$v2*$17853$1i4eWV))))
                                       '#f)))
                                  (g$get-value$17781$1i4eWV
                                    g$enumset1$17846$1i4eWV
                                    (car g$s$17851$1i4eWV))
                                  (g$get-value$17781$1i4eWV
                                    g$enumset2$17847$1i4eWV
                                    (car g$s$17851$1i4eWV))))))))
                   g$f$17850$1i4eWV)
                 (g$get-symbols$17780$1i4eWV
                   g$enumset1$17846$1i4eWV)))))
           (g$enum-value$17766$1i4eWV g$enumset1$17846$1i4eWV)
           (g$enum-value$17766$1i4eWV g$enumset2$17847$1i4eWV))))))
   (g$enum-set=?$17792$1i4eWV
     g$enum-set=?$17901$1i4eWV
     (case-lambda
       ((g$enumset1$17856$1i4eWV g$enumset2$17857$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set=?
            g$enumset1$17856$1i4eWV)
          (g$assert-enum$17782$1i4eWV
            'enum-set=?
            g$enumset2$17857$1i4eWV)
          (if (g$enum-set-subset?$17791$1i4eWV
                g$enumset1$17856$1i4eWV
                g$enumset2$17857$1i4eWV)
            (begin
              '#f
              (g$enum-set-subset?$17791$1i4eWV
                g$enumset2$17857$1i4eWV
                g$enumset1$17856$1i4eWV))
            '#f)))))
   (g$enum-set-union$17793$1i4eWV
     g$enum-set-union$17902$1i4eWV
     (case-lambda
       ((g$enumset1$17858$1i4eWV g$enumset2$17859$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-union
            g$enumset1$17858$1i4eWV)
          (g$assert-enum$17782$1i4eWV
            'enum-set-union
            g$enumset2$17859$1i4eWV)
          (if (g$enum-type=?$17779$1i4eWV
                g$enumset1$17858$1i4eWV
                g$enumset2$17859$1i4eWV)
            (g$make-enum$17765$1i4eWV
              (bitwise-ior
                (g$enum-value$17766$1i4eWV g$enumset1$17858$1i4eWV)
                (g$enum-value$17766$1i4eWV g$enumset2$17859$1i4eWV))
              (g$enum-info$17767$1i4eWV g$enumset1$17858$1i4eWV))
            '#f)))))
   (g$enum-set-intersection$17794$1i4eWV
     g$enum-set-intersection$17903$1i4eWV
     (case-lambda
       ((g$enumset1$17860$1i4eWV g$enumset2$17861$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-intersection
            g$enumset1$17860$1i4eWV)
          (g$assert-enum$17782$1i4eWV
            'enum-set-intersection
            g$enumset2$17861$1i4eWV)
          (if (g$enum-type=?$17779$1i4eWV
                g$enumset1$17860$1i4eWV
                g$enumset2$17861$1i4eWV)
            (g$make-enum$17765$1i4eWV
              (bitwise-and
                (g$enum-value$17766$1i4eWV g$enumset1$17860$1i4eWV)
                (g$enum-value$17766$1i4eWV g$enumset2$17861$1i4eWV))
              (g$enum-info$17767$1i4eWV g$enumset1$17860$1i4eWV))
            '#f)))))
   (g$enum-set-difference$17795$1i4eWV
     g$enum-set-difference$17904$1i4eWV
     (case-lambda
       ((g$enumset1$17862$1i4eWV g$enumset2$17863$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-difference
            g$enumset1$17862$1i4eWV)
          (g$assert-enum$17782$1i4eWV
            'enum-set-difference
            g$enumset2$17863$1i4eWV)
          (if (g$enum-type=?$17779$1i4eWV
                g$enumset1$17862$1i4eWV
                g$enumset2$17863$1i4eWV)
            (g$make-enum$17765$1i4eWV
              (bitwise-and
                (g$enum-value$17766$1i4eWV g$enumset1$17862$1i4eWV)
                (bitwise-not
                  (g$enum-value$17766$1i4eWV g$enumset2$17863$1i4eWV)))
              (g$enum-info$17767$1i4eWV g$enumset1$17862$1i4eWV))
            '#f)))))
   (g$enum-set-complement$17796$1i4eWV
     g$enum-set-complement$17905$1i4eWV
     (case-lambda
       ((g$enumset$17864$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-complement
            g$enumset$17864$1i4eWV)
          (g$make-enum$17765$1i4eWV
            (bitwise-not
              (g$enum-value$17766$1i4eWV g$enumset$17864$1i4eWV))
            (g$enum-info$17767$1i4eWV g$enumset$17864$1i4eWV))))))
   (g$enum-set-projection$17797$1i4eWV
     g$enum-set-projection$17906$1i4eWV
     (case-lambda
       ((g$enumset1$17865$1i4eWV g$enumset2$17866$1i4eWV)
        (begin
          (g$assert-enum$17782$1i4eWV
            'enum-set-projection
            g$enumset1$17865$1i4eWV)
          (g$assert-enum$17782$1i4eWV
            'enum-set-projection
            g$enumset2$17866$1i4eWV)
          ((case-lambda
             ((g$v1$17867$1i4eWV)
              ((letrec ((g$f$17868$1i4eWV
                          (case-lambda
                            ((g$s$17869$1i4eWV g$v$17870$1i4eWV)
                             (if (null? g$s$17869$1i4eWV)
                               (g$make-enum$17765$1i4eWV
                                 g$v$17870$1i4eWV
                                 (g$enum-info$17767$1i4eWV
                                   g$enumset2$17866$1i4eWV))
                               (if (g$zero?$12715$1i4eWV
                                     (bitwise-and
                                       g$v1$17867$1i4eWV
                                       (g$get-value$17781$1i4eWV
                                         g$enumset1$17865$1i4eWV
                                         (car g$s$17869$1i4eWV))))
                                 (g$f$17868$1i4eWV
                                   (cdr g$s$17869$1i4eWV)
                                   g$v$17870$1i4eWV)
                                 ((case-lambda
                                    ((g$v2$17871$1i4eWV)
                                     (if g$v2$17871$1i4eWV
                                       (g$f$17868$1i4eWV
                                         (cdr g$s$17869$1i4eWV)
                                         (bitwise-ior
                                           g$v$17870$1i4eWV
                                           g$v2$17871$1i4eWV))
                                       (g$f$17868$1i4eWV
                                         (cdr g$s$17869$1i4eWV)
                                         g$v$17870$1i4eWV))))
                                  (g$get-value$17781$1i4eWV
                                    g$enumset2$17866$1i4eWV
                                    (car g$s$17869$1i4eWV)))))))))
                 g$f$17868$1i4eWV)
               (g$get-symbols$17780$1i4eWV g$enumset1$17865$1i4eWV)
               '0)))
           (g$enum-value$17766$1i4eWV g$enumset1$17865$1i4eWV)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$17798$1i4eWV g$p$17799$1i4eWV g$wr$17800$1i4eWV)
       (g$fprintf$17931$1i4eWV
         g$p$17799$1i4eWV
         '"#[enum-set ~a]"
         (g$enum-set->list$17789$1i4eWV g$x$17798$1i4eWV))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$17907$1i4eWV
     g$dofmt$17929$1i4eWV
     (case-lambda
       ((g$p$17911$1i4eWV g$cntl$17912$1i4eWV g$args$17913$1i4eWV)
        ((case-lambda
           ((g$nmax$17914$1i4eWV)
            ((letrec ((g$loop$17915$1i4eWV
                        (case-lambda
                          ((g$n$17916$1i4eWV g$a$17917$1i4eWV)
                           (if (g$fx<=?$16090$1i4eWV
                                 g$n$17916$1i4eWV
                                 g$nmax$17914$1i4eWV)
                             ((case-lambda
                                ((g$c$17918$1i4eWV)
                                 (if (if (g$char=?$12729$1i4eWV
                                           g$c$17918$1i4eWV
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$16089$1i4eWV
                                           g$n$17916$1i4eWV
                                           g$nmax$17914$1i4eWV))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$17919$1i4eWV)
                                       (if (eqv? g$t$17919$1i4eWV '#\a)
                                         (begin
                                           (display
                                             (car g$a$17917$1i4eWV)
                                             g$p$17911$1i4eWV)
                                           (g$loop$17915$1i4eWV
                                             (g$fx+$16075$1i4eWV
                                               g$n$17916$1i4eWV
                                               '2)
                                             (cdr g$a$17917$1i4eWV)))
                                         (if (eqv?
                                               g$t$17919$1i4eWV
                                               '#\s)
                                           (begin
                                             (write
                                               (car g$a$17917$1i4eWV)
                                               g$p$17911$1i4eWV)
                                             (g$loop$17915$1i4eWV
                                               (g$fx+$16075$1i4eWV
                                                 g$n$17916$1i4eWV
                                                 '2)
                                               (cdr g$a$17917$1i4eWV)))
                                           (if (eqv?
                                                 g$t$17919$1i4eWV
                                                 '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$17917$1i4eWV)
                                                   '2)
                                                 g$p$17911$1i4eWV)
                                               (g$loop$17915$1i4eWV
                                                 (g$fx+$16075$1i4eWV
                                                   g$n$17916$1i4eWV
                                                   '2)
                                                 (cdr g$a$17917$1i4eWV)))
                                             (if (eqv?
                                                   g$t$17919$1i4eWV
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$17917$1i4eWV)
                                                     '8)
                                                   g$p$17911$1i4eWV)
                                                 (g$loop$17915$1i4eWV
                                                   (g$fx+$16075$1i4eWV
                                                     g$n$17916$1i4eWV
                                                     '2)
                                                   (cdr g$a$17917$1i4eWV)))
                                               (if (eqv?
                                                     g$t$17919$1i4eWV
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$17917$1i4eWV)
                                                       '16)
                                                     g$p$17911$1i4eWV)
                                                   (g$loop$17915$1i4eWV
                                                     (g$fx+$16075$1i4eWV
                                                       g$n$17916$1i4eWV
                                                       '2)
                                                     (cdr g$a$17917$1i4eWV)))
                                                 (if (eqv?
                                                       g$t$17919$1i4eWV
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$17917$1i4eWV)
                                                         '10)
                                                       g$p$17911$1i4eWV)
                                                     (g$loop$17915$1i4eWV
                                                       (g$fx+$16075$1i4eWV
                                                         g$n$17916$1i4eWV
                                                         '2)
                                                       (cdr g$a$17917$1i4eWV)))
                                                   (if (eqv?
                                                         g$t$17919$1i4eWV
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$17753$1i4eWV
                                                         '#\~
                                                         g$p$17911$1i4eWV)
                                                       (g$loop$17915$1i4eWV
                                                         (g$fx+$16075$1i4eWV
                                                           g$n$17916$1i4eWV
                                                           '2)
                                                         g$a$17917$1i4eWV))
                                                     (begin
                                                       (g$write-char$17753$1i4eWV
                                                         g$c$17918$1i4eWV
                                                         g$p$17911$1i4eWV)
                                                       (g$loop$17915$1i4eWV
                                                         (g$fx+$16075$1i4eWV
                                                           g$n$17916$1i4eWV
                                                           '1)
                                                         g$a$17917$1i4eWV)))))))))))
                                    (string-ref
                                      g$cntl$17912$1i4eWV
                                      (g$fx+$16075$1i4eWV
                                        g$n$17916$1i4eWV
                                        '1)))
                                   (begin
                                     (g$write-char$17753$1i4eWV
                                       g$c$17918$1i4eWV
                                       g$p$17911$1i4eWV)
                                     (g$loop$17915$1i4eWV
                                       (g$fx+$16075$1i4eWV
                                         g$n$17916$1i4eWV
                                         '1)
                                       g$a$17917$1i4eWV)))))
                              (string-ref
                                g$cntl$17912$1i4eWV
                                g$n$17916$1i4eWV))
                             (void))))))
               g$loop$17915$1i4eWV)
             '0
             g$args$17913$1i4eWV)))
         (g$fx-$16077$1i4eWV (string-length g$cntl$17912$1i4eWV) '1)))))
   (g$printf$17908$1i4eWV
     g$printf$17930$1i4eWV
     (case-lambda
       ((g$control$17920$1i4eWV . g$args$17921$1i4eWV)
        (g$dofmt$17907$1i4eWV
          (current-output-port)
          g$control$17920$1i4eWV
          g$args$17921$1i4eWV))))
   (g$fprintf$17909$1i4eWV
     g$fprintf$17931$1i4eWV
     (case-lambda
       ((g$p$17922$1i4eWV g$control$17923$1i4eWV . g$args$17924$1i4eWV)
        (g$dofmt$17907$1i4eWV
          g$p$17922$1i4eWV
          g$control$17923$1i4eWV
          g$args$17924$1i4eWV))))
   (g$format$17910$1i4eWV
     g$format$17932$1i4eWV
     (case-lambda
       ((g$control$17925$1i4eWV . g$args$17926$1i4eWV)
        (call-with-values
          g$open-string-output-port$17692$1i4eWV
          (case-lambda
            ((g$p$17927$1i4eWV g$c$17928$1i4eWV)
             (begin
               (g$dofmt$17907$1i4eWV
                 g$p$17927$1i4eWV
                 g$control$17925$1i4eWV
                 g$args$17926$1i4eWV)
               (g$c$17928$1i4eWV)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$17933$1i4eWV
     g$make-traced-macro$17936$1i4eWV
     (case-lambda
       ((g$name$17934$1i4eWV g$x$17935$1i4eWV)
        (if (g$procedure?$12670$1i4eWV g$x$17935$1i4eWV)
          (make-traced-procedure
            g$name$17934$1i4eWV
            g$x$17935$1i4eWV
            g$syntax->datum$23490$1i4eWV)
          (if (g$variable-transformer?$23311$1i4eWV g$x$17935$1i4eWV)
            (g$make-variable-transformer$23309$1i4eWV
              (make-traced-procedure
                g$name$17934$1i4eWV
                (g$variable-transformer-procedure$23312$1i4eWV
                  g$x$17935$1i4eWV)
                g$syntax->datum$23490$1i4eWV))
            g$x$17935$1i4eWV))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$17937$1i4eWV
     g$library-version-mismatch-warning$18138$1i4eWV
     (case-lambda
       ((g$name$18110$1i4eWV
          g$depname$18111$1i4eWV
          g$filename$18112$1i4eWV)
        (g$fprintf$17931$1i4eWV
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$18110$1i4eWV
          g$depname$18111$1i4eWV
          g$filename$18112$1i4eWV))))
   (g$file-locator-resolution-error$17938$1i4eWV
     g$file-locator-resolution-error$18139$1i4eWV
     (case-lambda
       ((g$libname$18113$1i4eWV g$failed-list$18114$1i4eWV)
        (letrec* ((g$8374$18115$1i4eWV
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$13345$1i4eWV
                      'g$8377$1i4eWV
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8376$18116$1i4eWV '#f)
                  (g$8375$18117$1i4eWV
                    (make-record-constructor-descriptor
                      g$8374$18115$1i4eWV
                      g$&condition-rcd$13346$1i4eWV
                      g$8376$18116$1i4eWV))
                  (g$8373$18120$1i4eWV
                    (record-predicate g$8374$18115$1i4eWV))
                  (g$make-library-resolution-condition$18121$1i4eWV
                    (record-constructor g$8375$18117$1i4eWV))
                  (g$8371$18122$1i4eWV
                    (record-accessor g$8374$18115$1i4eWV '0))
                  (g$8372$18123$1i4eWV
                    (record-accessor g$8374$18115$1i4eWV '1))
                  (g$library-resolution-condition?$18124$1i4eWV
                    (condition-predicate g$8374$18115$1i4eWV))
                  (g$condition-library$18125$1i4eWV
                    (condition-accessor
                      g$8374$18115$1i4eWV
                      g$8371$18122$1i4eWV))
                  (g$condition-files$18126$1i4eWV
                    (condition-accessor
                      g$8374$18115$1i4eWV
                      g$8372$18123$1i4eWV)))
          (raise
            (condition
              (g$make-error$13377$1i4eWV)
              (g$make-who-condition$13411$1i4eWV 'expander)
              (g$make-message-condition$13351$1i4eWV
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$18121$1i4eWV
                g$libname$18113$1i4eWV
                g$failed-list$18114$1i4eWV)))))))
   (g$read-library-source-file$17939$1i4eWV
     g$read-library-source-file$18140$1i4eWV
     (case-lambda
       ((g$file-name$18127$1i4eWV)
        (g$with-input-from-file$17754$1i4eWV
          g$file-name$18127$1i4eWV
          read-annotated))))
   (g$make-parameter$17940$1i4eWV
     g$make-parameter$18141$1i4eWV
     (case-lambda
       ((g$x$18128$1i4eWV)
        (g$make-parameter$17940$1i4eWV
          g$x$18128$1i4eWV
          (case-lambda ((g$x$18129$1i4eWV) g$x$18129$1i4eWV))))
       ((g$x$18130$1i4eWV g$fender$18131$1i4eWV)
        (begin
          (if (not (g$procedure?$12670$1i4eWV g$fender$18131$1i4eWV))
            (g$assertion-error$23483$1i4eWV
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$18132$1i4eWV)
              (case-lambda
                (() g$x$18132$1i4eWV)
                ((g$v$18133$1i4eWV)
                 (set! g$x$18132$1i4eWV
                   (g$fender$18131$1i4eWV g$v$18133$1i4eWV))))))
           (g$fender$18131$1i4eWV g$x$18130$1i4eWV))))))
   (g$file-options-constructor$18106$1i4eWV
     g$file-options-constructor$18142$1i4eWV
     (g$make-parameter$17940$1i4eWV '#f))
   (g$file-options-spec$18107$1i4eWV
     g$file-options-spec$18143$1i4eWV
     (case-lambda
       ((g$x$18134$1i4eWV)
        ((g$file-options-constructor$18106$1i4eWV) g$x$18134$1i4eWV))))
   (g$set-label-binding!$18108$1i4eWV
     g$set-label-binding!$18144$1i4eWV
     (case-lambda
       ((g$label$18135$1i4eWV g$binding$18136$1i4eWV)
        (set-symbol-value!
          g$label$18135$1i4eWV
          g$binding$18136$1i4eWV))))
   (g$label-binding$18109$1i4eWV
     g$label-binding$18145$1i4eWV
     (case-lambda
       ((g$label$18137$1i4eWV)
        (if (symbol-bound? g$label$18137$1i4eWV)
          (begin '#f (symbol-value g$label$18137$1i4eWV))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$18146$1i4eWV
     g$genwrite:newline-str$18339$1i4eWV
     (make-string '1 '#\newline))
   (g$symbol->string$18147$1i4eWV
     g$symbol->string$18340$1i4eWV
     (case-lambda
       ((g$s$18159$1i4eWV)
        (symbol->string
          (if (g$pretty-gensyms$18156$1i4eWV)
            (ungensym g$s$18159$1i4eWV)
            g$s$18159$1i4eWV)))))
   (g$read-macro-body$18148$1i4eWV
     g$read-macro-body$18341$1i4eWV
     (case-lambda
       ((g$l$18160$1i4eWV) (g$cadr$12686$1i4eWV g$l$18160$1i4eWV))))
   (g$read-macro-prefix$18149$1i4eWV
     g$read-macro-prefix$18342$1i4eWV
     (case-lambda
       ((g$l$18161$1i4eWV)
        ((case-lambda
           ((g$head$18162$1i4eWV g$tail$18163$1i4eWV)
            ((case-lambda
               ((g$t$18164$1i4eWV)
                (if (eqv? g$t$18164$1i4eWV 'syntax)
                  '"#'"
                  (if (eqv? g$t$18164$1i4eWV 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$18164$1i4eWV 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$18164$1i4eWV 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$18164$1i4eWV 'quote)
                          '"'"
                          (if (eqv? g$t$18164$1i4eWV 'quasiquote)
                            '"`"
                            (if (eqv? g$t$18164$1i4eWV 'unquote)
                              '","
                              (if (eqv?
                                    g$t$18164$1i4eWV
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$18162$1i4eWV)))
         (car g$l$18161$1i4eWV)
         (cdr g$l$18161$1i4eWV)))))
   (g$length1?$18150$1i4eWV
     g$length1?$18343$1i4eWV
     (case-lambda
       ((g$l$18165$1i4eWV)
        (if (pair? g$l$18165$1i4eWV)
          (begin '#f (null? (cdr g$l$18165$1i4eWV)))
          '#f))))
   (g$read-macro?$18151$1i4eWV
     g$read-macro?$18344$1i4eWV
     (case-lambda
       ((g$l$18166$1i4eWV)
        ((case-lambda
           ((g$head$18167$1i4eWV g$tail$18168$1i4eWV)
            ((case-lambda
               ((g$t$18169$1i4eWV)
                (if (g$memv$11828$1i4eWV
                      g$t$18169$1i4eWV
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$18150$1i4eWV g$tail$18168$1i4eWV)
                  '#f)))
             g$head$18167$1i4eWV)))
         (car g$l$18166$1i4eWV)
         (cdr g$l$18166$1i4eWV)))))
   (g$generic-write$18152$1i4eWV
     g$generic-write$18345$1i4eWV
     (case-lambda
       ((g$obj$18170$1i4eWV
          g$display?$18171$1i4eWV
          g$width$18172$1i4eWV
          g$output$18173$1i4eWV)
        (letrec* ((g$out$18174$1i4eWV
                    (case-lambda
                      ((g$str$18323$1i4eWV g$col$18324$1i4eWV)
                       (if g$col$18324$1i4eWV
                         (if (g$output$18173$1i4eWV g$str$18323$1i4eWV)
                           (begin
                             '#f
                             (g$fx+$16075$1i4eWV
                               g$col$18324$1i4eWV
                               (string-length g$str$18323$1i4eWV)))
                           '#f)
                         '#f))))
                  (g$wr$18175$1i4eWV
                    (case-lambda
                      ((g$obj$18306$1i4eWV g$col$18307$1i4eWV)
                       (letrec* ((g$wr-expr$18308$1i4eWV
                                   (case-lambda
                                     ((g$expr$18321$1i4eWV
                                        g$col$18322$1i4eWV)
                                      (if (g$read-macro?$18151$1i4eWV
                                            g$expr$18321$1i4eWV)
                                        (g$wr$18175$1i4eWV
                                          (g$read-macro-body$18148$1i4eWV
                                            g$expr$18321$1i4eWV)
                                          (g$out$18174$1i4eWV
                                            (g$read-macro-prefix$18149$1i4eWV
                                              g$expr$18321$1i4eWV)
                                            g$col$18322$1i4eWV))
                                        (g$wr-lst$18309$1i4eWV
                                          g$expr$18321$1i4eWV
                                          g$col$18322$1i4eWV)))))
                                 (g$wr-lst$18309$1i4eWV
                                   (case-lambda
                                     ((g$l$18316$1i4eWV
                                        g$col$18317$1i4eWV)
                                      (if (pair? g$l$18316$1i4eWV)
                                        ((letrec ((g$loop$18318$1i4eWV
                                                    (case-lambda
                                                      ((g$l$18319$1i4eWV
                                                         g$col$18320$1i4eWV)
                                                       (if (not g$col$18320$1i4eWV)
                                                         g$col$18320$1i4eWV
                                                         (if (pair?
                                                               g$l$18319$1i4eWV)
                                                           (g$loop$18318$1i4eWV
                                                             (cdr g$l$18319$1i4eWV)
                                                             (g$wr$18175$1i4eWV
                                                               (car g$l$18319$1i4eWV)
                                                               (g$out$18174$1i4eWV
                                                                 '" "
                                                                 g$col$18320$1i4eWV)))
                                                           (if (null?
                                                                 g$l$18319$1i4eWV)
                                                             (g$out$18174$1i4eWV
                                                               '")"
                                                               g$col$18320$1i4eWV)
                                                             (g$out$18174$1i4eWV
                                                               '")"
                                                               (g$wr$18175$1i4eWV
                                                                 g$l$18319$1i4eWV
                                                                 (g$out$18174$1i4eWV
                                                                   '" . "
                                                                   g$col$18320$1i4eWV))))))))))
                                           g$loop$18318$1i4eWV)
                                         (cdr g$l$18316$1i4eWV)
                                         (if g$col$18317$1i4eWV
                                           (begin
                                             '#f
                                             (g$wr$18175$1i4eWV
                                               (car g$l$18316$1i4eWV)
                                               (g$out$18174$1i4eWV
                                                 '"("
                                                 g$col$18317$1i4eWV)))
                                           '#f))
                                        (g$out$18174$1i4eWV
                                          '"()"
                                          g$col$18317$1i4eWV))))))
                         (if (pair? g$obj$18306$1i4eWV)
                           (g$wr-expr$18308$1i4eWV
                             g$obj$18306$1i4eWV
                             g$col$18307$1i4eWV)
                           (if (null? g$obj$18306$1i4eWV)
                             (g$wr-lst$18309$1i4eWV
                               g$obj$18306$1i4eWV
                               g$col$18307$1i4eWV)
                             (if (g$vector?$12666$1i4eWV
                                   g$obj$18306$1i4eWV)
                               (g$wr-lst$18309$1i4eWV
                                 (vector->list g$obj$18306$1i4eWV)
                                 (g$out$18174$1i4eWV
                                   '"#"
                                   g$col$18307$1i4eWV))
                               (if (g$boolean?$12669$1i4eWV
                                     g$obj$18306$1i4eWV)
                                 (g$out$18174$1i4eWV
                                   (if g$obj$18306$1i4eWV '"#t" '"#f")
                                   g$col$18307$1i4eWV)
                                 (if (number? g$obj$18306$1i4eWV)
                                   (g$out$18174$1i4eWV
                                     (number->string g$obj$18306$1i4eWV)
                                     g$col$18307$1i4eWV)
                                   (if (g$symbol?$12668$1i4eWV
                                         g$obj$18306$1i4eWV)
                                     (g$out$18174$1i4eWV
                                       (g$symbol->string$18147$1i4eWV
                                         g$obj$18306$1i4eWV)
                                       g$col$18307$1i4eWV)
                                     (if (string? g$obj$18306$1i4eWV)
                                       (if g$display?$18171$1i4eWV
                                         (g$out$18174$1i4eWV
                                           g$obj$18306$1i4eWV
                                           g$col$18307$1i4eWV)
                                         ((letrec ((g$loop$18310$1i4eWV
                                                     (case-lambda
                                                       ((g$i$18311$1i4eWV
                                                          g$j$18312$1i4eWV
                                                          g$col$18313$1i4eWV)
                                                        (if (if g$col$18313$1i4eWV
                                                              (begin
                                                                '#f
                                                                (g$fx<?$16089$1i4eWV
                                                                  g$j$18312$1i4eWV
                                                                  (string-length
                                                                    g$obj$18306$1i4eWV)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$18314$1i4eWV)
                                                              (if ((case-lambda
                                                                     ((g$t$18315$1i4eWV)
                                                                      (if g$t$18315$1i4eWV
                                                                        g$t$18315$1i4eWV
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$12729$1i4eWV
                                                                            g$c$18314$1i4eWV
                                                                            '#\")))))
                                                                   (g$char=?$12729$1i4eWV
                                                                     g$c$18314$1i4eWV
                                                                     '#\\))
                                                                (g$loop$18310$1i4eWV
                                                                  g$j$18312$1i4eWV
                                                                  (g$fx+$16075$1i4eWV
                                                                    g$j$18312$1i4eWV
                                                                    '1)
                                                                  (g$out$18174$1i4eWV
                                                                    '"\\"
                                                                    (g$out$18174$1i4eWV
                                                                      (substring
                                                                        g$obj$18306$1i4eWV
                                                                        g$i$18311$1i4eWV
                                                                        g$j$18312$1i4eWV)
                                                                      g$col$18313$1i4eWV)))
                                                                (g$loop$18310$1i4eWV
                                                                  g$i$18311$1i4eWV
                                                                  (g$fx+$16075$1i4eWV
                                                                    g$j$18312$1i4eWV
                                                                    '1)
                                                                  g$col$18313$1i4eWV))))
                                                           (string-ref
                                                             g$obj$18306$1i4eWV
                                                             g$j$18312$1i4eWV))
                                                          (g$out$18174$1i4eWV
                                                            '"\""
                                                            (g$out$18174$1i4eWV
                                                              (substring
                                                                g$obj$18306$1i4eWV
                                                                g$i$18311$1i4eWV
                                                                g$j$18312$1i4eWV)
                                                              g$col$18313$1i4eWV)))))))
                                            g$loop$18310$1i4eWV)
                                          '0
                                          '0
                                          (g$out$18174$1i4eWV
                                            '"\""
                                            g$col$18307$1i4eWV)))
                                       (g$out$18174$1i4eWV
                                         (g$format$17932$1i4eWV
                                           (if g$display?$18171$1i4eWV
                                             '"~a"
                                             '"~s")
                                           g$obj$18306$1i4eWV)
                                         g$col$18307$1i4eWV))))))))))))
                  (g$pp$18176$1i4eWV
                    (case-lambda
                      ((g$obj$18177$1i4eWV g$col$18178$1i4eWV)
                       (letrec* ((g$spaces$18179$1i4eWV
                                   (case-lambda
                                     ((g$n$18304$1i4eWV
                                        g$col$18305$1i4eWV)
                                      (if (g$fx>?$16091$1i4eWV
                                            g$n$18304$1i4eWV
                                            '0)
                                        (if (g$fx>?$16091$1i4eWV
                                              g$n$18304$1i4eWV
                                              '7)
                                          (g$spaces$18179$1i4eWV
                                            (g$fx-$16077$1i4eWV
                                              g$n$18304$1i4eWV
                                              '8)
                                            (g$out$18174$1i4eWV
                                              '"        "
                                              g$col$18305$1i4eWV))
                                          (g$out$18174$1i4eWV
                                            (substring
                                              '"        "
                                              '0
                                              g$n$18304$1i4eWV)
                                            g$col$18305$1i4eWV))
                                        g$col$18305$1i4eWV))))
                                 (g$indent$18180$1i4eWV
                                   (case-lambda
                                     ((g$to$18302$1i4eWV
                                        g$col$18303$1i4eWV)
                                      (if g$col$18303$1i4eWV
                                        (begin
                                          '#f
                                          (if (g$fx<?$16089$1i4eWV
                                                g$to$18302$1i4eWV
                                                g$col$18303$1i4eWV)
                                            (if (g$out$18174$1i4eWV
                                                  g$genwrite:newline-str$18146$1i4eWV
                                                  g$col$18303$1i4eWV)
                                              (begin
                                                '#f
                                                (g$spaces$18179$1i4eWV
                                                  g$to$18302$1i4eWV
                                                  '0))
                                              '#f)
                                            (g$spaces$18179$1i4eWV
                                              (g$fx-$16077$1i4eWV
                                                g$to$18302$1i4eWV
                                                g$col$18303$1i4eWV)
                                              g$col$18303$1i4eWV)))
                                        '#f))))
                                 (g$pr$18181$1i4eWV
                                   (case-lambda
                                     ((g$obj$18294$1i4eWV
                                        g$col$18295$1i4eWV
                                        g$extra$18296$1i4eWV
                                        g$pp-pair$18297$1i4eWV)
                                      (if ((case-lambda
                                             ((g$t$18298$1i4eWV)
                                              (if g$t$18298$1i4eWV
                                                g$t$18298$1i4eWV
                                                (begin
                                                  '#f
                                                  (g$vector?$12666$1i4eWV
                                                    g$obj$18294$1i4eWV)))))
                                           (pair? g$obj$18294$1i4eWV))
                                        ((case-lambda
                                           ((g$result$18299$1i4eWV
                                              g$left$18300$1i4eWV)
                                            (begin
                                              (g$generic-write$18152$1i4eWV
                                                g$obj$18294$1i4eWV
                                                g$display?$18171$1i4eWV
                                                '#f
                                                (case-lambda
                                                  ((g$str$18301$1i4eWV)
                                                   (begin
                                                     (set! g$result$18299$1i4eWV
                                                       (cons
                                                         g$str$18301$1i4eWV
                                                         g$result$18299$1i4eWV))
                                                     (set! g$left$18300$1i4eWV
                                                       (g$fx-$16077$1i4eWV
                                                         g$left$18300$1i4eWV
                                                         (string-length
                                                           g$str$18301$1i4eWV)))
                                                     (g$fx>?$16091$1i4eWV
                                                       g$left$18300$1i4eWV
                                                       '0)))))
                                              (if (g$fx>?$16091$1i4eWV
                                                    g$left$18300$1i4eWV
                                                    '0)
                                                (g$out$18174$1i4eWV
                                                  (g$reverse-string-append$18157$1i4eWV
                                                    g$result$18299$1i4eWV)
                                                  g$col$18295$1i4eWV)
                                                (if (pair?
                                                      g$obj$18294$1i4eWV)
                                                  (g$pp-pair$18297$1i4eWV
                                                    g$obj$18294$1i4eWV
                                                    g$col$18295$1i4eWV
                                                    g$extra$18296$1i4eWV)
                                                  (g$pp-list$18184$1i4eWV
                                                    (vector->list
                                                      g$obj$18294$1i4eWV)
                                                    (g$out$18174$1i4eWV
                                                      '"#"
                                                      g$col$18295$1i4eWV)
                                                    g$extra$18296$1i4eWV
                                                    g$pp-expr$18182$1i4eWV))))))
                                         '()
                                         (g$min$12719$1i4eWV
                                           (g$fx+$16075$1i4eWV
                                             (g$fx-$16077$1i4eWV
                                               (g$fx-$16077$1i4eWV
                                                 g$width$18172$1i4eWV
                                                 g$col$18295$1i4eWV)
                                               g$extra$18296$1i4eWV)
                                             '1)
                                           (g$pretty-width$18153$1i4eWV)))
                                        (g$wr$18175$1i4eWV
                                          g$obj$18294$1i4eWV
                                          g$col$18295$1i4eWV)))))
                                 (g$pp-expr$18182$1i4eWV
                                   (case-lambda
                                     ((g$expr$18289$1i4eWV
                                        g$col$18290$1i4eWV
                                        g$extra$18291$1i4eWV)
                                      (if (g$read-macro?$18151$1i4eWV
                                            g$expr$18289$1i4eWV)
                                        (g$pr$18181$1i4eWV
                                          (g$read-macro-body$18148$1i4eWV
                                            g$expr$18289$1i4eWV)
                                          (g$out$18174$1i4eWV
                                            (g$read-macro-prefix$18149$1i4eWV
                                              g$expr$18289$1i4eWV)
                                            g$col$18290$1i4eWV)
                                          g$extra$18291$1i4eWV
                                          g$pp-expr$18182$1i4eWV)
                                        ((case-lambda
                                           ((g$head$18292$1i4eWV)
                                            (if (g$symbol?$12668$1i4eWV
                                                  g$head$18292$1i4eWV)
                                              ((case-lambda
                                                 ((g$proc$18293$1i4eWV)
                                                  (if g$proc$18293$1i4eWV
                                                    (g$proc$18293$1i4eWV
                                                      g$expr$18289$1i4eWV
                                                      g$col$18290$1i4eWV
                                                      g$extra$18291$1i4eWV)
                                                    (if (g$fx>?$16091$1i4eWV
                                                          (string-length
                                                            (g$symbol->string$18147$1i4eWV
                                                              g$head$18292$1i4eWV))
                                                          (g$max-call-head-width$18155$1i4eWV))
                                                      (g$pp-general$18186$1i4eWV
                                                        g$expr$18289$1i4eWV
                                                        g$col$18290$1i4eWV
                                                        g$extra$18291$1i4eWV
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$18182$1i4eWV)
                                                      (g$pp-call$18183$1i4eWV
                                                        g$expr$18289$1i4eWV
                                                        g$col$18290$1i4eWV
                                                        g$extra$18291$1i4eWV
                                                        g$pp-expr$18182$1i4eWV)))))
                                               (g$style$18198$1i4eWV
                                                 g$head$18292$1i4eWV))
                                              (g$pp-list$18184$1i4eWV
                                                g$expr$18289$1i4eWV
                                                g$col$18290$1i4eWV
                                                g$extra$18291$1i4eWV
                                                g$pp-expr$18182$1i4eWV))))
                                         (car g$expr$18289$1i4eWV))))))
                                 (g$pp-call$18183$1i4eWV
                                   (case-lambda
                                     ((g$expr$18284$1i4eWV
                                        g$col$18285$1i4eWV
                                        g$extra$18286$1i4eWV
                                        g$pp-item$18287$1i4eWV)
                                      ((case-lambda
                                         ((g$col*$18288$1i4eWV)
                                          (if g$col$18285$1i4eWV
                                            (begin
                                              '#f
                                              (g$pp-down$18185$1i4eWV
                                                (cdr g$expr$18284$1i4eWV)
                                                g$col*$18288$1i4eWV
                                                (g$fx+$16075$1i4eWV
                                                  g$col*$18288$1i4eWV
                                                  '1)
                                                g$extra$18286$1i4eWV
                                                g$pp-item$18287$1i4eWV))
                                            '#f)))
                                       (g$wr$18175$1i4eWV
                                         (car g$expr$18284$1i4eWV)
                                         (g$out$18174$1i4eWV
                                           '"("
                                           g$col$18285$1i4eWV))))))
                                 (g$pp-list$18184$1i4eWV
                                   (case-lambda
                                     ((g$l$18279$1i4eWV
                                        g$col$18280$1i4eWV
                                        g$extra$18281$1i4eWV
                                        g$pp-item$18282$1i4eWV)
                                      ((case-lambda
                                         ((g$col$18283$1i4eWV)
                                          (g$pp-down$18185$1i4eWV
                                            g$l$18279$1i4eWV
                                            g$col$18283$1i4eWV
                                            g$col$18283$1i4eWV
                                            g$extra$18281$1i4eWV
                                            g$pp-item$18282$1i4eWV)))
                                       (g$out$18174$1i4eWV
                                         '"("
                                         g$col$18280$1i4eWV)))))
                                 (g$pp-down$18185$1i4eWV
                                   (case-lambda
                                     ((g$l$18269$1i4eWV
                                        g$col1$18270$1i4eWV
                                        g$col2$18271$1i4eWV
                                        g$extra$18272$1i4eWV
                                        g$pp-item$18273$1i4eWV)
                                      ((letrec ((g$loop$18274$1i4eWV
                                                  (case-lambda
                                                    ((g$l$18275$1i4eWV
                                                       g$col$18276$1i4eWV)
                                                     (if g$col$18276$1i4eWV
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$18275$1i4eWV)
                                                           ((case-lambda
                                                              ((g$rest$18277$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$extra$18278$1i4eWV)
                                                                   (g$loop$18274$1i4eWV
                                                                     g$rest$18277$1i4eWV
                                                                     (g$pr$18181$1i4eWV
                                                                       (car g$l$18275$1i4eWV)
                                                                       (g$indent$18180$1i4eWV
                                                                         g$col2$18271$1i4eWV
                                                                         g$col$18276$1i4eWV)
                                                                       g$extra$18278$1i4eWV
                                                                       g$pp-item$18273$1i4eWV))))
                                                                (if (null?
                                                                      g$rest$18277$1i4eWV)
                                                                  (g$fx+$16075$1i4eWV
                                                                    g$extra$18272$1i4eWV
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$18275$1i4eWV))
                                                           (if (null?
                                                                 g$l$18275$1i4eWV)
                                                             (g$out$18174$1i4eWV
                                                               '")"
                                                               g$col$18276$1i4eWV)
                                                             (g$out$18174$1i4eWV
                                                               '")"
                                                               (g$pr$18181$1i4eWV
                                                                 g$l$18275$1i4eWV
                                                                 (g$indent$18180$1i4eWV
                                                                   g$col2$18271$1i4eWV
                                                                   (g$out$18174$1i4eWV
                                                                     '"."
                                                                     (g$indent$18180$1i4eWV
                                                                       g$col2$18271$1i4eWV
                                                                       g$col$18276$1i4eWV)))
                                                                 (g$fx+$16075$1i4eWV
                                                                   g$extra$18272$1i4eWV
                                                                   '1)
                                                                 g$pp-item$18273$1i4eWV)))))
                                                       '#f)))))
                                         g$loop$18274$1i4eWV)
                                       g$l$18269$1i4eWV
                                       g$col1$18270$1i4eWV))))
                                 (g$pp-general$18186$1i4eWV
                                   (case-lambda
                                     ((g$expr$18236$1i4eWV
                                        g$col$18237$1i4eWV
                                        g$extra$18238$1i4eWV
                                        g$named?$18239$1i4eWV
                                        g$pp-1$18240$1i4eWV
                                        g$pp-2$18241$1i4eWV
                                        g$pp-3$18242$1i4eWV)
                                      (letrec* ((g$tail1$18243$1i4eWV
                                                  (case-lambda
                                                    ((g$rest$18262$1i4eWV
                                                       g$col1$18263$1i4eWV
                                                       g$col2$18264$1i4eWV
                                                       g$col3$18265$1i4eWV)
                                                     (if (if g$pp-1$18240$1i4eWV
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$18262$1i4eWV))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$18266$1i4eWV)
                                                           ((case-lambda
                                                              ((g$rest$18267$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$extra$18268$1i4eWV)
                                                                   (g$tail2$18244$1i4eWV
                                                                     g$rest$18267$1i4eWV
                                                                     g$col1$18263$1i4eWV
                                                                     (g$pr$18181$1i4eWV
                                                                       g$val1$18266$1i4eWV
                                                                       (g$indent$18180$1i4eWV
                                                                         g$col3$18265$1i4eWV
                                                                         g$col2$18264$1i4eWV)
                                                                       g$extra$18268$1i4eWV
                                                                       g$pp-1$18240$1i4eWV)
                                                                     g$col3$18265$1i4eWV)))
                                                                (if (null?
                                                                      g$rest$18267$1i4eWV)
                                                                  (g$fx+$16075$1i4eWV
                                                                    g$extra$18238$1i4eWV
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$18262$1i4eWV))))
                                                        (car g$rest$18262$1i4eWV))
                                                       (g$tail2$18244$1i4eWV
                                                         g$rest$18262$1i4eWV
                                                         g$col1$18263$1i4eWV
                                                         g$col2$18264$1i4eWV
                                                         g$col3$18265$1i4eWV)))))
                                                (g$tail2$18244$1i4eWV
                                                  (case-lambda
                                                    ((g$rest$18255$1i4eWV
                                                       g$col1$18256$1i4eWV
                                                       g$col2$18257$1i4eWV
                                                       g$col3$18258$1i4eWV)
                                                     (if (if g$pp-2$18241$1i4eWV
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$18255$1i4eWV))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$18259$1i4eWV)
                                                           ((case-lambda
                                                              ((g$rest$18260$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$extra$18261$1i4eWV)
                                                                   (g$tail3$18245$1i4eWV
                                                                     g$rest$18260$1i4eWV
                                                                     g$col1$18256$1i4eWV
                                                                     (g$pr$18181$1i4eWV
                                                                       g$val1$18259$1i4eWV
                                                                       (g$indent$18180$1i4eWV
                                                                         g$col3$18258$1i4eWV
                                                                         g$col2$18257$1i4eWV)
                                                                       g$extra$18261$1i4eWV
                                                                       g$pp-2$18241$1i4eWV))))
                                                                (if (null?
                                                                      g$rest$18260$1i4eWV)
                                                                  (g$fx+$16075$1i4eWV
                                                                    g$extra$18238$1i4eWV
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$18255$1i4eWV))))
                                                        (car g$rest$18255$1i4eWV))
                                                       (g$tail3$18245$1i4eWV
                                                         g$rest$18255$1i4eWV
                                                         g$col1$18256$1i4eWV
                                                         g$col2$18257$1i4eWV)))))
                                                (g$tail3$18245$1i4eWV
                                                  (case-lambda
                                                    ((g$rest$18252$1i4eWV
                                                       g$col1$18253$1i4eWV
                                                       g$col2$18254$1i4eWV)
                                                     (g$pp-down$18185$1i4eWV
                                                       g$rest$18252$1i4eWV
                                                       g$col2$18254$1i4eWV
                                                       g$col1$18253$1i4eWV
                                                       g$extra$18238$1i4eWV
                                                       g$pp-3$18242$1i4eWV)))))
                                        ((case-lambda
                                           ((g$head$18246$1i4eWV)
                                            ((case-lambda
                                               ((g$rest$18247$1i4eWV)
                                                ((case-lambda
                                                   ((g$col*$18248$1i4eWV)
                                                    (if (if g$named?$18239$1i4eWV
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$18247$1i4eWV))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$18249$1i4eWV)
                                                          ((case-lambda
                                                             ((g$rest$18250$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$col**$18251$1i4eWV)
                                                                  (g$tail1$18243$1i4eWV
                                                                    g$rest$18250$1i4eWV
                                                                    (g$fx+$16075$1i4eWV
                                                                      g$col$18237$1i4eWV
                                                                      (g$indent-general$18154$1i4eWV))
                                                                    g$col**$18251$1i4eWV
                                                                    (g$fx+$16075$1i4eWV
                                                                      g$col**$18251$1i4eWV
                                                                      '1))))
                                                               (g$wr$18175$1i4eWV
                                                                 g$name$18249$1i4eWV
                                                                 (g$out$18174$1i4eWV
                                                                   '" "
                                                                   g$col*$18248$1i4eWV)))))
                                                           (cdr g$rest$18247$1i4eWV))))
                                                       (car g$rest$18247$1i4eWV))
                                                      (g$tail1$18243$1i4eWV
                                                        g$rest$18247$1i4eWV
                                                        (g$fx+$16075$1i4eWV
                                                          g$col$18237$1i4eWV
                                                          (g$indent-general$18154$1i4eWV))
                                                        g$col*$18248$1i4eWV
                                                        (g$fx+$16075$1i4eWV
                                                          g$col*$18248$1i4eWV
                                                          '1)))))
                                                 (g$wr$18175$1i4eWV
                                                   g$head$18246$1i4eWV
                                                   (g$out$18174$1i4eWV
                                                     '"("
                                                     g$col$18237$1i4eWV)))))
                                             (cdr g$expr$18236$1i4eWV))))
                                         (car g$expr$18236$1i4eWV))))))
                                 (g$pp-expr-list$18187$1i4eWV
                                   (case-lambda
                                     ((g$l$18233$1i4eWV
                                        g$col$18234$1i4eWV
                                        g$extra$18235$1i4eWV)
                                      (g$pp-list$18184$1i4eWV
                                        g$l$18233$1i4eWV
                                        g$col$18234$1i4eWV
                                        g$extra$18235$1i4eWV
                                        g$pp-expr$18182$1i4eWV))))
                                 (g$pp-SYNTAX-CASE$18188$1i4eWV
                                   (case-lambda
                                     ((g$expr$18230$1i4eWV
                                        g$col$18231$1i4eWV
                                        g$extra$18232$1i4eWV)
                                      (g$pp-general$18186$1i4eWV
                                        g$expr$18230$1i4eWV
                                        g$col$18231$1i4eWV
                                        g$extra$18232$1i4eWV
                                        '#t
                                        g$pp-expr-list$18187$1i4eWV
                                        '#f
                                        g$pp-expr$18182$1i4eWV))))
                                 (g$pp-LAMBDA$18189$1i4eWV
                                   (case-lambda
                                     ((g$expr$18227$1i4eWV
                                        g$col$18228$1i4eWV
                                        g$extra$18229$1i4eWV)
                                      (g$pp-general$18186$1i4eWV
                                        g$expr$18227$1i4eWV
                                        g$col$18228$1i4eWV
                                        g$extra$18229$1i4eWV
                                        '#f
                                        g$pp-expr-list$18187$1i4eWV
                                        '#f
                                        g$pp-expr$18182$1i4eWV))))
                                 (g$pp-IF$18190$1i4eWV
                                   (case-lambda
                                     ((g$expr$18224$1i4eWV
                                        g$col$18225$1i4eWV
                                        g$extra$18226$1i4eWV)
                                      (g$pp-general$18186$1i4eWV
                                        g$expr$18224$1i4eWV
                                        g$col$18225$1i4eWV
                                        g$extra$18226$1i4eWV
                                        '#f
                                        g$pp-expr$18182$1i4eWV
                                        '#f
                                        g$pp-expr$18182$1i4eWV))))
                                 (g$pp-COND$18191$1i4eWV
                                   (case-lambda
                                     ((g$expr$18221$1i4eWV
                                        g$col$18222$1i4eWV
                                        g$extra$18223$1i4eWV)
                                      (g$pp-call$18183$1i4eWV
                                        g$expr$18221$1i4eWV
                                        g$col$18222$1i4eWV
                                        g$extra$18223$1i4eWV
                                        g$pp-expr-list$18187$1i4eWV))))
                                 (g$pp-CASE$18192$1i4eWV
                                   (case-lambda
                                     ((g$expr$18218$1i4eWV
                                        g$col$18219$1i4eWV
                                        g$extra$18220$1i4eWV)
                                      (g$pp-general$18186$1i4eWV
                                        g$expr$18218$1i4eWV
                                        g$col$18219$1i4eWV
                                        g$extra$18220$1i4eWV
                                        '#f
                                        g$pp-expr$18182$1i4eWV
                                        '#f
                                        g$pp-expr-list$18187$1i4eWV))))
                                 (g$pp-CASE-LAMBDA$18193$1i4eWV
                                   (case-lambda
                                     ((g$expr$18215$1i4eWV
                                        g$col$18216$1i4eWV
                                        g$extra$18217$1i4eWV)
                                      (g$pp-general$18186$1i4eWV
                                        g$expr$18215$1i4eWV
                                        g$col$18216$1i4eWV
                                        g$extra$18217$1i4eWV
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$18187$1i4eWV))))
                                 (g$pp-AND$18194$1i4eWV
                                   (case-lambda
                                     ((g$expr$18212$1i4eWV
                                        g$col$18213$1i4eWV
                                        g$extra$18214$1i4eWV)
                                      (g$pp-call$18183$1i4eWV
                                        g$expr$18212$1i4eWV
                                        g$col$18213$1i4eWV
                                        g$extra$18214$1i4eWV
                                        g$pp-expr$18182$1i4eWV))))
                                 (g$pp-LET$18195$1i4eWV
                                   (case-lambda
                                     ((g$expr$18207$1i4eWV
                                        g$col$18208$1i4eWV
                                        g$extra$18209$1i4eWV)
                                      ((case-lambda
                                         ((g$rest$18210$1i4eWV)
                                          ((case-lambda
                                             ((g$named?$18211$1i4eWV)
                                              (g$pp-general$18186$1i4eWV
                                                g$expr$18207$1i4eWV
                                                g$col$18208$1i4eWV
                                                g$extra$18209$1i4eWV
                                                g$named?$18211$1i4eWV
                                                g$pp-expr-list$18187$1i4eWV
                                                '#f
                                                g$pp-expr$18182$1i4eWV)))
                                           (if (pair?
                                                 g$rest$18210$1i4eWV)
                                             (begin
                                               '#f
                                               (g$symbol?$12668$1i4eWV
                                                 (car g$rest$18210$1i4eWV)))
                                             '#f))))
                                       (cdr g$expr$18207$1i4eWV)))))
                                 (g$pp-BEGIN$18196$1i4eWV
                                   (case-lambda
                                     ((g$expr$18204$1i4eWV
                                        g$col$18205$1i4eWV
                                        g$extra$18206$1i4eWV)
                                      (g$pp-general$18186$1i4eWV
                                        g$expr$18204$1i4eWV
                                        g$col$18205$1i4eWV
                                        g$extra$18206$1i4eWV
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$18182$1i4eWV))))
                                 (g$pp-DO$18197$1i4eWV
                                   (case-lambda
                                     ((g$expr$18201$1i4eWV
                                        g$col$18202$1i4eWV
                                        g$extra$18203$1i4eWV)
                                      (g$pp-general$18186$1i4eWV
                                        g$expr$18201$1i4eWV
                                        g$col$18202$1i4eWV
                                        g$extra$18203$1i4eWV
                                        '#f
                                        g$pp-expr-list$18187$1i4eWV
                                        g$pp-expr-list$18187$1i4eWV
                                        g$pp-expr$18182$1i4eWV))))
                                 (g$style$18198$1i4eWV
                                   (case-lambda
                                     ((g$head$18199$1i4eWV)
                                      ((case-lambda
                                         ((g$t$18200$1i4eWV)
                                          (if (g$memv$11828$1i4eWV
                                                g$t$18200$1i4eWV
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$18189$1i4eWV
                                            (if (eqv?
                                                  g$t$18200$1i4eWV
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$18188$1i4eWV
                                              (if (g$memv$11828$1i4eWV
                                                    g$t$18200$1i4eWV
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$18190$1i4eWV
                                                (if (eqv?
                                                      g$t$18200$1i4eWV
                                                      'cond)
                                                  g$pp-COND$18191$1i4eWV
                                                  (if (eqv?
                                                        g$t$18200$1i4eWV
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$18193$1i4eWV
                                                    (if (eqv?
                                                          g$t$18200$1i4eWV
                                                          'case)
                                                      g$pp-CASE$18192$1i4eWV
                                                      (if (g$memv$11828$1i4eWV
                                                            g$t$18200$1i4eWV
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$18194$1i4eWV
                                                        (if (eqv?
                                                              g$t$18200$1i4eWV
                                                              'let)
                                                          g$pp-LET$18195$1i4eWV
                                                          (if (eqv?
                                                                g$t$18200$1i4eWV
                                                                'begin)
                                                            g$pp-BEGIN$18196$1i4eWV
                                                            (if (eqv?
                                                                  g$t$18200$1i4eWV
                                                                  'do)
                                                              g$pp-DO$18197$1i4eWV
                                                              '#f))))))))))))
                                       g$head$18199$1i4eWV)))))
                         (g$pr$18181$1i4eWV
                           g$obj$18177$1i4eWV
                           g$col$18178$1i4eWV
                           '0
                           g$pp-expr$18182$1i4eWV))))))
          (if g$width$18172$1i4eWV
            (g$out$18174$1i4eWV
              g$genwrite:newline-str$18146$1i4eWV
              (g$pp$18176$1i4eWV g$obj$18170$1i4eWV '0))
            (g$wr$18175$1i4eWV g$obj$18170$1i4eWV '0))))))
   (g$pretty-width$18153$1i4eWV
     g$pretty-width$18346$1i4eWV
     (g$make-parameter$18141$1i4eWV '72))
   (g$indent-general$18154$1i4eWV
     g$indent-general$18347$1i4eWV
     (g$make-parameter$18141$1i4eWV '2))
   (g$max-call-head-width$18155$1i4eWV
     g$max-call-head-width$18348$1i4eWV
     (g$make-parameter$18141$1i4eWV '3))
   (g$pretty-gensyms$18156$1i4eWV
     g$pretty-gensyms$18349$1i4eWV
     (g$make-parameter$18141$1i4eWV '#f))
   (g$reverse-string-append$18157$1i4eWV
     g$reverse-string-append$18350$1i4eWV
     (case-lambda
       ((g$l$18325$1i4eWV)
        (letrec* ((g$rev-string-append$18326$1i4eWV
                    (case-lambda
                      ((g$l$18327$1i4eWV g$i$18328$1i4eWV)
                       (if (pair? g$l$18327$1i4eWV)
                         ((case-lambda
                            ((g$str$18329$1i4eWV)
                             ((case-lambda
                                ((g$len$18330$1i4eWV)
                                 ((case-lambda
                                    ((g$result$18331$1i4eWV)
                                     ((letrec ((g$loop$18332$1i4eWV
                                                 (case-lambda
                                                   ((g$j$18333$1i4eWV
                                                      g$k$18334$1i4eWV)
                                                    (if (g$fx<?$16089$1i4eWV
                                                          g$j$18333$1i4eWV
                                                          g$len$18330$1i4eWV)
                                                      (begin
                                                        (string-set!
                                                          g$result$18331$1i4eWV
                                                          g$k$18334$1i4eWV
                                                          (string-ref
                                                            g$str$18329$1i4eWV
                                                            g$j$18333$1i4eWV))
                                                        (g$loop$18332$1i4eWV
                                                          (g$fx+$16075$1i4eWV
                                                            g$j$18333$1i4eWV
                                                            '1)
                                                          (g$fx+$16075$1i4eWV
                                                            g$k$18334$1i4eWV
                                                            '1)))
                                                      g$result$18331$1i4eWV)))))
                                        g$loop$18332$1i4eWV)
                                      '0
                                      (g$fx-$16077$1i4eWV
                                        (g$fx-$16077$1i4eWV
                                          (string-length
                                            g$result$18331$1i4eWV)
                                          g$i$18328$1i4eWV)
                                        g$len$18330$1i4eWV))))
                                  (g$rev-string-append$18326$1i4eWV
                                    (cdr g$l$18327$1i4eWV)
                                    (g$fx+$16075$1i4eWV
                                      g$i$18328$1i4eWV
                                      g$len$18330$1i4eWV)))))
                              (string-length g$str$18329$1i4eWV))))
                          (car g$l$18327$1i4eWV))
                         (make-string g$i$18328$1i4eWV))))))
          (g$rev-string-append$18326$1i4eWV g$l$18325$1i4eWV '0)))))
   (g$pretty-print$18158$1i4eWV
     g$pretty-print$18351$1i4eWV
     (case-lambda
       ((g$obj$18335$1i4eWV . g$opt$18336$1i4eWV)
        ((case-lambda
           ((g$port$18337$1i4eWV)
            (g$generic-write$18152$1i4eWV
              g$obj$18335$1i4eWV
              '#f
              (g$pretty-width$18153$1i4eWV)
              (case-lambda
                ((g$s$18338$1i4eWV)
                 (begin
                   (display g$s$18338$1i4eWV g$port$18337$1i4eWV)
                   '#t))))))
         (if (pair? g$opt$18336$1i4eWV)
           (car g$opt$18336$1i4eWV)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$18352$1i4eWV
     g$cps/generate-reference$18617$1i4eWV
     (case-lambda
       ((g$variable$18405$1i4eWV)
        (g$cps/generate-operand$18356$1i4eWV
          (g$make-reference$18382$1i4eWV g$variable$18405$1i4eWV)))))
   (g$cps/generate-literal$18353$1i4eWV
     g$cps/generate-literal$18618$1i4eWV
     (case-lambda
       ((g$datum$18406$1i4eWV)
        (g$cps/generate-operand$18356$1i4eWV
          (g$make-literal$18381$1i4eWV g$datum$18406$1i4eWV)))))
   (g$cps/generate-abstraction$18354$1i4eWV
     g$cps/generate-abstraction$18619$1i4eWV
     (case-lambda
       ((g$bvl$18407$1i4eWV g$body-generator$18408$1i4eWV)
        (g$cps/generate-operand$18356$1i4eWV
          (g$make-user-abstraction$18383$1i4eWV
            g$bvl$18407$1i4eWV
            (case-lambda
              ((g$continuation-variable$18409$1i4eWV)
               (g$body-generator$18408$1i4eWV
                 (g$variable-continuator$18369$1i4eWV
                   g$continuation-variable$18409$1i4eWV)))))))))
   (g$cps/generate-abstractions$18355$1i4eWV
     g$cps/generate-abstractions$18620$1i4eWV
     (case-lambda
       ((g$bvls$18410$1i4eWV g$body-generators$18411$1i4eWV)
        (g$cps/generate-operand$18356$1i4eWV
          (g$make-user-abstractions$18384$1i4eWV
            g$bvls$18410$1i4eWV
            (g$map$11835$1i4eWV
              (case-lambda
                ((g$body-generator$18412$1i4eWV)
                 (case-lambda
                   ((g$continuation-variable$18413$1i4eWV)
                    (g$body-generator$18412$1i4eWV
                      (g$variable-continuator$18369$1i4eWV
                        g$continuation-variable$18413$1i4eWV))))))
              g$body-generators$18411$1i4eWV))))))
   (g$cps/generate-operand$18356$1i4eWV
     g$cps/generate-operand$18621$1i4eWV
     (case-lambda
       ((g$operand$18414$1i4eWV)
        (case-lambda
          ((g$continuator$18415$1i4eWV)
           (g$continue-with-operand$18372$1i4eWV
             g$continuator$18415$1i4eWV
             g$operand$18414$1i4eWV))))))
   (g$cps/generate-conditional$18357$1i4eWV
     g$cps/generate-conditional$18622$1i4eWV
     (case-lambda
       ((g$condition-generator$18416$1i4eWV
          g$consequent-generator$18417$1i4eWV
          g$alternative-generator$18418$1i4eWV)
        (case-lambda
          ((g$continuator$18419$1i4eWV)
           (letrec* ((g$if-variable$18420$1i4eWV
                       (case-lambda
                         ((g$continuation-variable$18422$1i4eWV)
                          ((case-lambda
                             ((g$continuator*$18423$1i4eWV)
                              (g$condition-generator$18416$1i4eWV
                                (g$conditional-continuator$18368$1i4eWV
                                  (case-lambda
                                    ((g$condition$18424$1i4eWV)
                                     (g$make-conditional$18391$1i4eWV
                                       g$condition$18424$1i4eWV
                                       (g$consequent-generator$18417$1i4eWV
                                         g$continuator*$18423$1i4eWV)
                                       (g$alternative-generator$18418$1i4eWV
                                         g$continuator*$18423$1i4eWV))))))))
                           (g$variable-continuator$18369$1i4eWV
                             g$continuation-variable$18422$1i4eWV))))))
             (g$reify-continuation*$18374$1i4eWV
               g$continuator$18419$1i4eWV
               g$if-variable$18420$1i4eWV
               (case-lambda
                 ((g$continuation-abstraction$18421$1i4eWV)
                  (g$make-conditional-join$18392$1i4eWV
                    g$continuation-abstraction$18421$1i4eWV
                    g$if-variable$18420$1i4eWV))))))))))
   (g$cps/generate-recursive-bind$18358$1i4eWV
     g$cps/generate-recursive-bind$18623$1i4eWV
     (case-lambda
       ((g$variables$18425$1i4eWV
          g$generators$18426$1i4eWV
          g$body-generator$18427$1i4eWV)
        (case-lambda
          ((g$continuator$18428$1i4eWV)
           (g$make-recursive-bind$18386$1i4eWV
             g$variables$18425$1i4eWV
             (g$map$11835$1i4eWV
               (case-lambda
                 ((g$generator$18429$1i4eWV)
                  (case-lambda
                    ((g$continuation-variable$18430$1i4eWV)
                     (g$generator$18429$1i4eWV
                       (g$variable-continuator$18369$1i4eWV
                         g$continuation-variable$18430$1i4eWV))))))
               g$generators$18426$1i4eWV)
             (g$body-generator$18427$1i4eWV
               (g$reified-continuator$18371$1i4eWV
                 g$continuator$18428$1i4eWV))))))))
   (g$cps/generate-recursive*-bind$18359$1i4eWV
     g$cps/generate-recursive*-bind$18624$1i4eWV
     (case-lambda
       ((g$variables$18431$1i4eWV
          g$generators$18432$1i4eWV
          g$body-generator$18433$1i4eWV)
        (case-lambda
          ((g$continuator$18434$1i4eWV)
           (g$make-recursive*-bind$18387$1i4eWV
             g$variables$18431$1i4eWV
             (g$map$11835$1i4eWV
               (case-lambda
                 ((g$generator$18435$1i4eWV)
                  (case-lambda
                    ((g$continuation-variable$18436$1i4eWV)
                     (g$generator$18435$1i4eWV
                       (g$variable-continuator$18369$1i4eWV
                         g$continuation-variable$18436$1i4eWV))))))
               g$generators$18432$1i4eWV)
             (g$body-generator$18433$1i4eWV
               (g$reified-continuator$18371$1i4eWV
                 g$continuator$18434$1i4eWV))))))))
   (g$cps/generate-recursive*-library-bind$18360$1i4eWV
     g$cps/generate-recursive*-library-bind$18625$1i4eWV
     (case-lambda
       ((g$name$18437$1i4eWV
          g$variables$18438$1i4eWV
          g$variables*$18439$1i4eWV
          g$generators$18440$1i4eWV
          g$body-generator$18441$1i4eWV)
        (case-lambda
          ((g$continuator$18442$1i4eWV)
           (g$make-recursive*-library-bind$18388$1i4eWV
             g$name$18437$1i4eWV
             g$variables$18438$1i4eWV
             g$variables*$18439$1i4eWV
             (g$map$11835$1i4eWV
               (case-lambda
                 ((g$generator$18443$1i4eWV)
                  (case-lambda
                    ((g$continuation-variable$18444$1i4eWV)
                     (g$generator$18443$1i4eWV
                       (g$variable-continuator$18369$1i4eWV
                         g$continuation-variable$18444$1i4eWV))))))
               g$generators$18440$1i4eWV)
             (g$body-generator$18441$1i4eWV
               (g$reified-continuator$18371$1i4eWV
                 g$continuator$18442$1i4eWV))))))))
   (g$cps/generate-sequence$18361$1i4eWV
     g$cps/generate-sequence$18626$1i4eWV
     (case-lambda
       ((g$generators$18445$1i4eWV)
        (case-lambda
          ((g$continuator$18446$1i4eWV)
           ((letrec ((g$recur$18447$1i4eWV
                       (case-lambda
                         ((g$generators$18448$1i4eWV)
                          ((car g$generators$18448$1i4eWV)
                           ((case-lambda
                              ((g$generators$18449$1i4eWV)
                               (if (pair? g$generators$18449$1i4eWV)
                                 (g$effect-continuator$18367$1i4eWV
                                   (case-lambda
                                     (()
                                      (g$recur$18447$1i4eWV
                                        g$generators$18449$1i4eWV))))
                                 g$continuator$18446$1i4eWV)))
                            (cdr g$generators$18448$1i4eWV)))))))
              g$recur$18447$1i4eWV)
            g$generators$18445$1i4eWV))))))
   (g$cps/generate-assignment$18362$1i4eWV
     g$cps/generate-assignment$18627$1i4eWV
     (case-lambda
       ((g$location$18450$1i4eWV g$expression-generator$18451$1i4eWV)
        (case-lambda
          ((g$continuator$18452$1i4eWV)
           (g$expression-generator$18451$1i4eWV
             (g$operand-continuator$18366$1i4eWV
               (case-lambda
                 ((g$operand$18453$1i4eWV)
                  (g$make-assignment$18394$1i4eWV
                    g$location$18450$1i4eWV
                    g$operand$18453$1i4eWV
                    (g$continue-with-operand$18372$1i4eWV
                      g$continuator$18452$1i4eWV
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$18363$1i4eWV
     g$cps/generate-declaration$18628$1i4eWV
     (case-lambda
       ((g$location$18454$1i4eWV g$expression-generator$18455$1i4eWV)
        (case-lambda
          ((g$continuator$18456$1i4eWV)
           (g$expression-generator$18455$1i4eWV
             (g$operand-continuator$18366$1i4eWV
               (case-lambda
                 ((g$operand$18457$1i4eWV)
                  (g$make-declaration$18395$1i4eWV
                    g$location$18454$1i4eWV
                    g$operand$18457$1i4eWV
                    (g$continue-with-operand$18372$1i4eWV
                      g$continuator$18456$1i4eWV
                      '(cps-void))))))))))))
   (g$cps/generate-combination$18364$1i4eWV
     g$cps/generate-combination$18629$1i4eWV
     (case-lambda
       ((g$operator-generator$18458$1i4eWV
          g$operand-generators$18459$1i4eWV)
        (g$cps/generate-subproblems$18365$1i4eWV
          (g$reverse$12684$1i4eWV
            (cons
              g$operator-generator$18458$1i4eWV
              g$operand-generators$18459$1i4eWV))
          (case-lambda
            ((g$operands$18460$1i4eWV g$continuator$18461$1i4eWV)
             (g$make-combination$18389$1i4eWV
               (car g$operands$18460$1i4eWV)
               (g$reify-continuation$18373$1i4eWV
                 g$continuator$18461$1i4eWV)
               (cdr g$operands$18460$1i4eWV))))))))
   (g$cps/generate-subproblems$18365$1i4eWV
     g$cps/generate-subproblems$18630$1i4eWV
     (case-lambda
       ((g$generators$18462$1i4eWV g$combiner$18463$1i4eWV)
        (case-lambda
          ((g$continuator$18464$1i4eWV)
           ((letrec ((g$recur$18465$1i4eWV
                       (case-lambda
                         ((g$generators$18466$1i4eWV
                            g$operands$18467$1i4eWV)
                          (if (pair? g$generators$18466$1i4eWV)
                            ((car g$generators$18466$1i4eWV)
                             ((case-lambda
                                ((g$generators$18468$1i4eWV)
                                 (g$operand-continuator$18366$1i4eWV
                                   (case-lambda
                                     ((g$operand$18469$1i4eWV)
                                      (g$recur$18465$1i4eWV
                                        g$generators$18468$1i4eWV
                                        (cons
                                          g$operand$18469$1i4eWV
                                          g$operands$18467$1i4eWV)))))))
                              (cdr g$generators$18466$1i4eWV)))
                            (g$combiner$18463$1i4eWV
                              g$operands$18467$1i4eWV
                              g$continuator$18464$1i4eWV))))))
              g$recur$18465$1i4eWV)
            g$generators$18462$1i4eWV
            '()))))))
   (g$operand-continuator$18366$1i4eWV
     g$operand-continuator$18631$1i4eWV
     (case-lambda
       ((g$generator$18470$1i4eWV)
        (case-lambda
          ((g$if-operand$18471$1i4eWV
             g$if-effect$18472$1i4eWV
             g$if-conditional$18473$1i4eWV
             g$if-variable$18474$1i4eWV
             g$if-inline$18475$1i4eWV)
           (begin
             g$if-effect$18472$1i4eWV
             g$if-conditional$18473$1i4eWV
             g$if-variable$18474$1i4eWV
             g$if-inline$18475$1i4eWV
             (g$if-operand$18471$1i4eWV g$generator$18470$1i4eWV)))))))
   (g$effect-continuator$18367$1i4eWV
     g$effect-continuator$18632$1i4eWV
     (case-lambda
       ((g$generator$18476$1i4eWV)
        (case-lambda
          ((g$if-operand$18477$1i4eWV
             g$if-effect$18478$1i4eWV
             g$if-conditional$18479$1i4eWV
             g$if-variable$18480$1i4eWV
             g$if-inline$18481$1i4eWV)
           (begin
             g$if-operand$18477$1i4eWV
             g$if-conditional$18479$1i4eWV
             g$if-variable$18480$1i4eWV
             g$if-inline$18481$1i4eWV
             (g$if-effect$18478$1i4eWV g$generator$18476$1i4eWV)))))))
   (g$conditional-continuator$18368$1i4eWV
     g$conditional-continuator$18633$1i4eWV
     (case-lambda
       ((g$generator$18482$1i4eWV)
        (case-lambda
          ((g$if-operand$18483$1i4eWV
             g$if-effect$18484$1i4eWV
             g$if-conditional$18485$1i4eWV
             g$if-variable$18486$1i4eWV
             g$if-inline$18487$1i4eWV)
           (begin
             g$if-operand$18483$1i4eWV
             g$if-effect$18484$1i4eWV
             g$if-variable$18486$1i4eWV
             g$if-inline$18487$1i4eWV
             (g$if-conditional$18485$1i4eWV
               g$generator$18482$1i4eWV)))))))
   (g$variable-continuator$18369$1i4eWV
     g$variable-continuator$18634$1i4eWV
     (case-lambda
       ((g$variable$18488$1i4eWV)
        (case-lambda
          ((g$if-operand$18489$1i4eWV
             g$if-effect$18490$1i4eWV
             g$if-conditional$18491$1i4eWV
             g$if-variable$18492$1i4eWV
             g$if-inline$18493$1i4eWV)
           (begin
             g$if-operand$18489$1i4eWV
             g$if-effect$18490$1i4eWV
             g$if-variable$18492$1i4eWV
             g$if-inline$18493$1i4eWV
             (g$if-variable$18492$1i4eWV g$variable$18488$1i4eWV)))))))
   (g$inline-continuator$18370$1i4eWV
     g$inline-continuator$18635$1i4eWV
     (case-lambda
       ((g$continuation$18494$1i4eWV)
        (case-lambda
          ((g$if-operand$18495$1i4eWV
             g$if-effect$18496$1i4eWV
             g$if-conditional$18497$1i4eWV
             g$if-variable$18498$1i4eWV
             g$if-inline$18499$1i4eWV)
           (begin
             g$if-operand$18495$1i4eWV
             g$if-effect$18496$1i4eWV
             g$if-conditional$18497$1i4eWV
             g$if-variable$18498$1i4eWV
             (g$if-inline$18499$1i4eWV
               g$continuation$18494$1i4eWV)))))))
   (g$reified-continuator$18371$1i4eWV
     g$reified-continuator$18636$1i4eWV
     (case-lambda
       ((g$continuator$18500$1i4eWV)
        (case-lambda
          ((g$if-operand$18501$1i4eWV
             g$if-effect$18502$1i4eWV
             g$if-conditional$18503$1i4eWV
             g$if-variable$18504$1i4eWV
             g$if-inline$18505$1i4eWV)
           (begin
             g$if-operand$18501$1i4eWV
             g$if-effect$18502$1i4eWV
             g$if-conditional$18503$1i4eWV
             (g$reify-continuation*$18374$1i4eWV
               g$continuator$18500$1i4eWV
               g$if-variable$18504$1i4eWV
               g$if-inline$18505$1i4eWV)))))))
   (g$continue-with-operand$18372$1i4eWV
     g$continue-with-operand$18637$1i4eWV
     (case-lambda
       ((g$continuator$18506$1i4eWV g$operand$18507$1i4eWV)
        (g$continuator$18506$1i4eWV
          (case-lambda
            ((g$generator$18508$1i4eWV)
             (g$generator$18508$1i4eWV g$operand$18507$1i4eWV)))
          (case-lambda
            ((g$generator$18509$1i4eWV) (g$generator$18509$1i4eWV)))
          (case-lambda
            ((g$generator$18510$1i4eWV)
             (g$generator$18510$1i4eWV
               (g$make-truth-test$18396$1i4eWV
                 g$operand$18507$1i4eWV))))
          (case-lambda
            ((g$continuation-variable$18511$1i4eWV)
             (g$make-return$18390$1i4eWV
               (g$make-reference$18382$1i4eWV
                 g$continuation-variable$18511$1i4eWV)
               (list g$operand$18507$1i4eWV))))
          (case-lambda
            ((g$continuation-abstraction$18512$1i4eWV)
             (g$make-return$18390$1i4eWV
               g$continuation-abstraction$18512$1i4eWV
               (list g$operand$18507$1i4eWV))))))))
   (g$reify-continuation$18373$1i4eWV
     g$reify-continuation$18638$1i4eWV
     (case-lambda
       ((g$continuator$18513$1i4eWV)
        (g$continuator$18513$1i4eWV
          g$operand-continuation-reifier$18376$1i4eWV
          g$effect-continuation-reifier$18378$1i4eWV
          g$conditional-continuation-reifier$18380$1i4eWV
          (case-lambda
            ((g$variable$18514$1i4eWV)
             (g$make-reference$18382$1i4eWV g$variable$18514$1i4eWV)))
          (case-lambda
            ((g$continuation$18515$1i4eWV)
             g$continuation$18515$1i4eWV))))))
   (g$reify-continuation*$18374$1i4eWV
     g$reify-continuation*$18639$1i4eWV
     (case-lambda
       ((g$continuator$18516$1i4eWV
          g$if-variable$18517$1i4eWV
          g$if-inline$18518$1i4eWV)
        (g$continuator$18516$1i4eWV
          (g$operand-continuation-reifier*$18375$1i4eWV
            g$if-inline$18518$1i4eWV)
          (g$effect-continuation-reifier*$18377$1i4eWV
            g$if-inline$18518$1i4eWV)
          (g$conditional-continuation-reifier*$18379$1i4eWV
            g$if-inline$18518$1i4eWV)
          g$if-variable$18517$1i4eWV
          g$if-inline$18518$1i4eWV))))
   (g$operand-continuation-reifier*$18375$1i4eWV
     g$operand-continuation-reifier*$18640$1i4eWV
     (case-lambda
       ((g$receiver$18519$1i4eWV)
        (case-lambda
          ((g$generator$18520$1i4eWV)
           (g$receiver$18519$1i4eWV
             ((case-lambda
                ((g$variable$18521$1i4eWV)
                 (g$make-continuation-abstraction$18385$1i4eWV
                   (list g$variable$18521$1i4eWV)
                   (g$generator$18520$1i4eWV
                     (g$make-reference$18382$1i4eWV
                       g$variable$18521$1i4eWV)))))
              (g$generate-variable$18397$1i4eWV 'V))))))))
   (g$operand-continuation-reifier$18376$1i4eWV
     g$operand-continuation-reifier$18641$1i4eWV
     (g$operand-continuation-reifier*$18375$1i4eWV values))
   (g$effect-continuation-reifier*$18377$1i4eWV
     g$effect-continuation-reifier*$18642$1i4eWV
     (case-lambda
       ((g$receiver$18522$1i4eWV)
        (case-lambda
          ((g$generator$18523$1i4eWV)
           (g$receiver$18522$1i4eWV
             ((case-lambda
                ((g$variable$18524$1i4eWV)
                 (g$make-continuation-abstraction$18385$1i4eWV
                   g$variable$18524$1i4eWV
                   (g$generator$18523$1i4eWV))))
              (g$generate-variable$18397$1i4eWV 'IGNORE))))))))
   (g$effect-continuation-reifier$18378$1i4eWV
     g$effect-continuation-reifier$18643$1i4eWV
     (g$effect-continuation-reifier*$18377$1i4eWV values))
   (g$conditional-continuation-reifier*$18379$1i4eWV
     g$conditional-continuation-reifier*$18644$1i4eWV
     (case-lambda
       ((g$receiver$18525$1i4eWV)
        (case-lambda
          ((g$generator$18526$1i4eWV)
           (g$receiver$18525$1i4eWV
             ((case-lambda
                ((g$variable$18527$1i4eWV)
                 (g$make-continuation-abstraction$18385$1i4eWV
                   (list g$variable$18527$1i4eWV)
                   (g$generator$18526$1i4eWV
                     (g$make-truth-test$18396$1i4eWV
                       (g$make-reference$18382$1i4eWV
                         g$variable$18527$1i4eWV))))))
              (g$generate-variable$18397$1i4eWV 'T))))))))
   (g$conditional-continuation-reifier$18380$1i4eWV
     g$conditional-continuation-reifier$18645$1i4eWV
     (g$conditional-continuation-reifier*$18379$1i4eWV values))
   (g$make-literal$18381$1i4eWV
     g$make-literal$18646$1i4eWV
     (case-lambda
       ((g$datum$18528$1i4eWV) (list 'quote g$datum$18528$1i4eWV))))
   (g$make-reference$18382$1i4eWV
     g$make-reference$18647$1i4eWV
     (case-lambda ((g$variable$18529$1i4eWV) g$variable$18529$1i4eWV)))
   (g$make-user-abstraction$18383$1i4eWV
     g$make-user-abstraction$18648$1i4eWV
     (case-lambda
       ((g$bvl$18530$1i4eWV g$body-constructor$18531$1i4eWV)
        ((case-lambda
           ((g$continuation$18532$1i4eWV)
            (list
              'case-lambda
              (list
                (cons g$continuation$18532$1i4eWV g$bvl$18530$1i4eWV)
                (g$body-constructor$18531$1i4eWV
                  g$continuation$18532$1i4eWV)))))
         (g$generate-variable$18397$1i4eWV 'C)))))
   (g$make-user-abstractions$18384$1i4eWV
     g$make-user-abstractions$18649$1i4eWV
     (case-lambda
       ((g$bvls$18533$1i4eWV g$body-constructors$18534$1i4eWV)
        ((case-lambda
           ((g$continuation$18535$1i4eWV)
            (cons
              'case-lambda
              (g$map$11835$1i4eWV
                (case-lambda
                  ((g$bvl$18536$1i4eWV g$body-constructor$18537$1i4eWV)
                   (list
                     (cons
                       g$continuation$18535$1i4eWV
                       g$bvl$18536$1i4eWV)
                     (g$body-constructor$18537$1i4eWV
                       g$continuation$18535$1i4eWV))))
                g$bvls$18533$1i4eWV
                g$body-constructors$18534$1i4eWV))))
         (g$generate-variable$18397$1i4eWV 'C)))))
   (g$make-continuation-abstraction$18385$1i4eWV
     g$make-continuation-abstraction$18650$1i4eWV
     (case-lambda
       ((g$bvl$18538$1i4eWV g$body$18539$1i4eWV)
        (list
          'case-lambda
          (list g$bvl$18538$1i4eWV g$body$18539$1i4eWV)))))
   (g$make-recursive-bind$18386$1i4eWV
     g$make-recursive-bind$18651$1i4eWV
     (case-lambda
       ((g$variables$18540$1i4eWV
          g$constructors$18541$1i4eWV
          g$body$18542$1i4eWV)
        (list
          'letrec
          (g$map$11835$1i4eWV
            (case-lambda
              ((g$variable$18543$1i4eWV g$constructor$18544$1i4eWV)
               (list
                 g$variable$18543$1i4eWV
                 (list
                   (g$make-user-abstraction$18383$1i4eWV
                     '()
                     g$constructor$18544$1i4eWV)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$18543$1i4eWV))))))
            g$variables$18540$1i4eWV
            g$constructors$18541$1i4eWV)
          g$body$18542$1i4eWV))))
   (g$make-recursive*-bind$18387$1i4eWV
     g$make-recursive*-bind$18652$1i4eWV
     (case-lambda
       ((g$variables$18545$1i4eWV
          g$constructors$18546$1i4eWV
          g$body$18547$1i4eWV)
        (list
          'letrec*
          (g$map$11835$1i4eWV
            (case-lambda
              ((g$variable$18548$1i4eWV g$constructor$18549$1i4eWV)
               (list
                 g$variable$18548$1i4eWV
                 (list
                   (g$make-user-abstraction$18383$1i4eWV
                     '()
                     g$constructor$18549$1i4eWV)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$18548$1i4eWV))))))
            g$variables$18545$1i4eWV
            g$constructors$18546$1i4eWV)
          g$body$18547$1i4eWV))))
   (g$make-recursive*-library-bind$18388$1i4eWV
     g$make-recursive*-library-bind$18653$1i4eWV
     (case-lambda
       ((g$name$18550$1i4eWV
          g$variables$18551$1i4eWV
          g$variables*$18552$1i4eWV
          g$constructors$18553$1i4eWV
          g$body$18554$1i4eWV)
        (list
          'library-letrec*
          g$name$18550$1i4eWV
          (g$map$11835$1i4eWV
            (case-lambda
              ((g$variable$18555$1i4eWV
                 g$variable*$18556$1i4eWV
                 g$constructor$18557$1i4eWV)
               (list
                 g$variable$18555$1i4eWV
                 g$variable*$18556$1i4eWV
                 (list
                   (g$make-user-abstraction$18383$1i4eWV
                     '()
                     g$constructor$18557$1i4eWV)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$18555$1i4eWV))))))
            g$variables$18551$1i4eWV
            g$variables*$18552$1i4eWV
            g$constructors$18553$1i4eWV)
          g$body$18554$1i4eWV))))
   (g$make-combination$18389$1i4eWV
     g$make-combination$18654$1i4eWV
     (case-lambda
       ((g$operator$18558$1i4eWV
          g$continuation$18559$1i4eWV
          g$operands$18560$1i4eWV)
        (cons
          g$operator$18558$1i4eWV
          (cons g$continuation$18559$1i4eWV g$operands$18560$1i4eWV)))))
   (g$make-return$18390$1i4eWV
     g$make-return$18655$1i4eWV
     (case-lambda
       ((g$continuation$18561$1i4eWV g$operands$18562$1i4eWV)
        (cons g$continuation$18561$1i4eWV g$operands$18562$1i4eWV))))
   (g$make-conditional$18391$1i4eWV
     g$make-conditional$18656$1i4eWV
     (case-lambda
       ((g$condition$18563$1i4eWV
          g$consequent$18564$1i4eWV
          g$alternative$18565$1i4eWV)
        (list
          'if
          g$condition$18563$1i4eWV
          g$consequent$18564$1i4eWV
          g$alternative$18565$1i4eWV))))
   (g$make-conditional-join$18392$1i4eWV
     g$make-conditional-join$18657$1i4eWV
     (case-lambda
       ((g$continuation$18566$1i4eWV g$constructor$18567$1i4eWV)
        ((case-lambda
           ((g$variable$18568$1i4eWV)
            (g$make-let$18393$1i4eWV
              (list g$variable$18568$1i4eWV)
              (list g$continuation$18566$1i4eWV)
              (g$constructor$18567$1i4eWV g$variable$18568$1i4eWV))))
         (g$generate-variable$18397$1i4eWV 'J)))))
   (g$make-let$18393$1i4eWV
     g$make-let$18658$1i4eWV
     (case-lambda
       ((g$variables$18569$1i4eWV
          g$expressions$18570$1i4eWV
          g$body$18571$1i4eWV)
        (cons
          (list
            'case-lambda
            (list g$variables$18569$1i4eWV g$body$18571$1i4eWV))
          g$expressions$18570$1i4eWV))))
   (g$make-assignment$18394$1i4eWV
     g$make-assignment$18659$1i4eWV
     (case-lambda
       ((g$location$18572$1i4eWV
          g$operand$18573$1i4eWV
          g$expression$18574$1i4eWV)
        (list
          'begin
          (list 'set! g$location$18572$1i4eWV g$operand$18573$1i4eWV)
          g$expression$18574$1i4eWV))))
   (g$make-declaration$18395$1i4eWV
     g$make-declaration$18660$1i4eWV
     (case-lambda
       ((g$location$18575$1i4eWV
          g$operand$18576$1i4eWV
          g$expression$18577$1i4eWV)
        (list
          'begin
          (list 'define g$location$18575$1i4eWV g$operand$18576$1i4eWV)
          g$expression$18577$1i4eWV))))
   (g$make-truth-test$18396$1i4eWV
     g$make-truth-test$18661$1i4eWV
     (case-lambda ((g$operand$18578$1i4eWV) g$operand$18578$1i4eWV)))
   (g$generate-variable$18397$1i4eWV
     g$generate-variable$18662$1i4eWV
     (case-lambda ((g$name$18579$1i4eWV) (gensym g$name$18579$1i4eWV))))
   (g$parse$18398$1i4eWV
     g$parse$18663$1i4eWV
     (case-lambda
       ((g$x$18580$1i4eWV)
        (if (pair? g$x$18580$1i4eWV)
          ((case-lambda
             ((g$t$18581$1i4eWV)
              (if (eqv? g$t$18581$1i4eWV 'quote)
                (g$cps/generate-literal$18353$1i4eWV
                  (g$cadr$12686$1i4eWV g$x$18580$1i4eWV))
                (if (eqv? g$t$18581$1i4eWV 'if)
                  (g$cps/generate-conditional$18357$1i4eWV
                    (g$parse$18398$1i4eWV
                      (g$cadr$12686$1i4eWV g$x$18580$1i4eWV))
                    (g$parse$18398$1i4eWV
                      (g$caddr$12692$1i4eWV g$x$18580$1i4eWV))
                    (g$parse$18398$1i4eWV
                      (g$cadddr$12704$1i4eWV g$x$18580$1i4eWV)))
                  (if (eqv? g$t$18581$1i4eWV 'case-lambda)
                    ((case-lambda
                       ((g$d$18582$1i4eWV)
                        (g$cps/generate-abstractions$18355$1i4eWV
                          (g$map$11835$1i4eWV car g$d$18582$1i4eWV)
                          (g$map$11835$1i4eWV
                            (case-lambda
                              ((g$e$18583$1i4eWV)
                               (g$cps/generate-sequence$18361$1i4eWV
                                 (g$map$11835$1i4eWV
                                   g$parse$18398$1i4eWV
                                   (cdr g$e$18583$1i4eWV)))))
                            g$d$18582$1i4eWV))))
                     (cdr g$x$18580$1i4eWV))
                    (if (eqv? g$t$18581$1i4eWV 'letrec)
                      ((case-lambda
                         ((g$bindings$18584$1i4eWV g$body*$18585$1i4eWV)
                          ((case-lambda
                             ((g$lhs*$18586$1i4eWV g$rhs*$18587$1i4eWV)
                              ((case-lambda
                                 ((g$t*$18588$1i4eWV
                                    g$tmps$18589$1i4eWV)
                                  ((case-lambda
                                     ((g$s*$18590$1i4eWV)
                                      (g$parse$18398$1i4eWV
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$18586$1i4eWV
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$18588$1i4eWV
                                                    (append
                                                      g$s*$18590$1i4eWV
                                                      g$body*$18585$1i4eWV)))
                                                g$rhs*$18587$1i4eWV)))
                                          g$tmps$18589$1i4eWV))))
                                   (g$map$11835$1i4eWV
                                     (case-lambda
                                       ((g$i$18591$1i4eWV
                                          g$t$18592$1i4eWV)
                                        (list
                                          'set!
                                          g$i$18591$1i4eWV
                                          g$t$18592$1i4eWV)))
                                     g$lhs*$18586$1i4eWV
                                     g$t*$18588$1i4eWV))))
                               (g$map$11835$1i4eWV
                                 gensym
                                 g$lhs*$18586$1i4eWV)
                               (g$map$11835$1i4eWV
                                 (case-lambda
                                   ((g$x$18593$1i4eWV) 'uninitialized))
                                 g$lhs*$18586$1i4eWV))))
                           (g$map$11835$1i4eWV
                             car
                             g$bindings$18584$1i4eWV)
                           (g$map$11835$1i4eWV
                             g$cadr$12686$1i4eWV
                             g$bindings$18584$1i4eWV))))
                       (g$cadr$12686$1i4eWV g$x$18580$1i4eWV)
                       (g$cddr$12688$1i4eWV g$x$18580$1i4eWV))
                      (if (eqv? g$t$18581$1i4eWV 'letrec*)
                        ((case-lambda
                           ((g$bindings$18594$1i4eWV
                              g$body*$18595$1i4eWV)
                            ((case-lambda
                               ((g$lhs*$18596$1i4eWV
                                  g$rhs*$18597$1i4eWV)
                                (g$cps/generate-recursive*-bind$18359$1i4eWV
                                  g$lhs*$18596$1i4eWV
                                  (g$map$11835$1i4eWV
                                    g$parse$18398$1i4eWV
                                    g$rhs*$18597$1i4eWV)
                                  (g$parse$18398$1i4eWV
                                    (cons
                                      'begin
                                      g$body*$18595$1i4eWV)))))
                             (g$map$11835$1i4eWV
                               car
                               g$bindings$18594$1i4eWV)
                             (g$map$11835$1i4eWV
                               g$cadr$12686$1i4eWV
                               g$bindings$18594$1i4eWV))))
                         (g$cadr$12686$1i4eWV g$x$18580$1i4eWV)
                         (g$cddr$12688$1i4eWV g$x$18580$1i4eWV))
                        (if (eqv? g$t$18581$1i4eWV 'library-letrec*)
                          ((case-lambda
                             ((g$name$18598$1i4eWV g$x$18599$1i4eWV)
                              ((case-lambda
                                 ((g$bindings$18600$1i4eWV
                                    g$body*$18601$1i4eWV)
                                  ((case-lambda
                                     ((g$lhs*$18602$1i4eWV
                                        g$lhs**$18603$1i4eWV
                                        g$rhs*$18604$1i4eWV)
                                      (g$cps/generate-recursive*-library-bind$18360$1i4eWV
                                        g$name$18598$1i4eWV
                                        g$lhs*$18602$1i4eWV
                                        g$lhs**$18603$1i4eWV
                                        (g$map$11835$1i4eWV
                                          g$parse$18398$1i4eWV
                                          g$rhs*$18604$1i4eWV)
                                        (g$parse$18398$1i4eWV
                                          (cons
                                            'begin
                                            g$body*$18601$1i4eWV)))))
                                   (g$map$11835$1i4eWV
                                     car
                                     g$bindings$18600$1i4eWV)
                                   (g$map$11835$1i4eWV
                                     g$cadr$12686$1i4eWV
                                     g$bindings$18600$1i4eWV)
                                   (g$map$11835$1i4eWV
                                     g$caddr$12692$1i4eWV
                                     g$bindings$18600$1i4eWV))))
                               (g$cadr$12686$1i4eWV g$x$18599$1i4eWV)
                               (g$cddr$12688$1i4eWV g$x$18599$1i4eWV))))
                           (g$cadr$12686$1i4eWV g$x$18580$1i4eWV)
                           (cdr g$x$18580$1i4eWV))
                          (if (eqv? g$t$18581$1i4eWV 'begin)
                            (g$cps/generate-sequence$18361$1i4eWV
                              (g$map$11835$1i4eWV
                                g$parse$18398$1i4eWV
                                (cdr g$x$18580$1i4eWV)))
                            (if (eqv? g$t$18581$1i4eWV 'set!)
                              (g$cps/generate-assignment$18362$1i4eWV
                                (g$cadr$12686$1i4eWV g$x$18580$1i4eWV)
                                (g$parse$18398$1i4eWV
                                  (g$caddr$12692$1i4eWV
                                    g$x$18580$1i4eWV)))
                              (if (eqv? g$t$18581$1i4eWV 'define)
                                (g$cps/generate-declaration$18363$1i4eWV
                                  (g$cadr$12686$1i4eWV g$x$18580$1i4eWV)
                                  (g$parse$18398$1i4eWV
                                    (g$caddr$12692$1i4eWV
                                      g$x$18580$1i4eWV)))
                                (if (list? g$x$18580$1i4eWV)
                                  (g$cps/generate-combination$18364$1i4eWV
                                    (g$parse$18398$1i4eWV
                                      (car g$x$18580$1i4eWV))
                                    (g$map$11835$1i4eWV
                                      g$parse$18398$1i4eWV
                                      (cdr g$x$18580$1i4eWV)))
                                  (error
                                    'rewrite
                                    '"invalid form ~s ~s"
                                    g$x$18580$1i4eWV
                                    (list?
                                      g$x$18580$1i4eWV))))))))))))))
           (car g$x$18580$1i4eWV))
          (if (g$symbol?$12668$1i4eWV g$x$18580$1i4eWV)
            (g$cps/generate-reference$18352$1i4eWV g$x$18580$1i4eWV)
            (g$cps/generate-literal$18353$1i4eWV g$x$18580$1i4eWV))))))
   (g$starts-with?$18399$1i4eWV
     g$starts-with?$18664$1i4eWV
     (case-lambda
       ((g$str$18605$1i4eWV g$sub$18606$1i4eWV)
        (clr-call-internal
          'system.string
          'startswith
          g$str$18605$1i4eWV
          g$sub$18606$1i4eWV))))
   (g$ends-with?$18400$1i4eWV
     g$ends-with?$18665$1i4eWV
     (case-lambda
       ((g$str$18607$1i4eWV g$sub$18608$1i4eWV)
        (clr-call-internal
          'system.string
          'endswith
          g$str$18607$1i4eWV
          g$sub$18608$1i4eWV))))
   (g$clr-generator?$18401$1i4eWV
     g$clr-generator?$18666$1i4eWV
     (case-lambda
       ((g$o$18609$1i4eWV)
        (if (g$symbol?$12668$1i4eWV g$o$18609$1i4eWV)
          (begin
            '#f
            ((case-lambda
               ((g$o$18610$1i4eWV)
                (if (g$starts-with?$18399$1i4eWV
                      g$o$18610$1i4eWV
                      '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$18400$1i4eWV
                      g$o$18610$1i4eWV
                      '"-internal"))
                  '#f)))
             (symbol->string g$o$18609$1i4eWV)))
          '#f))))
   (g$fix-primitives$18402$1i4eWV
     g$fix-primitives$18667$1i4eWV
     (case-lambda
       ((g$e$18611$1i4eWV)
        (if (if (pair? g$e$18611$1i4eWV)
              (begin '#f (list? g$e$18611$1i4eWV))
              '#f)
          ((case-lambda
             ((g$o$18612$1i4eWV)
              (if (eq? g$o$18612$1i4eWV 'quote)
                g$e$18611$1i4eWV
                (if (begin
                      '#f
                      (g$clr-generator?$18401$1i4eWV g$o$18612$1i4eWV))
                  (if (pair? (cdr g$e$18611$1i4eWV))
                    (list
                      (g$fix-primitives$18402$1i4eWV
                        (g$cadr$12686$1i4eWV g$e$18611$1i4eWV))
                      (cons
                        g$o$18612$1i4eWV
                        (g$map$11835$1i4eWV
                          g$fix-primitives$18402$1i4eWV
                          (g$cddr$12688$1i4eWV g$e$18611$1i4eWV))))
                    g$e$18611$1i4eWV)
                  (cons
                    (g$fix-primitives$18402$1i4eWV g$o$18612$1i4eWV)
                    (g$map$11835$1i4eWV
                      g$fix-primitives$18402$1i4eWV
                      (cdr g$e$18611$1i4eWV)))))))
           (car g$e$18611$1i4eWV))
          g$e$18611$1i4eWV))))
   (g$parse->cps$18403$1i4eWV
     g$parse->cps$18668$1i4eWV
     (case-lambda
       ((g$e$18613$1i4eWV g$var$18614$1i4eWV)
        ((g$parse$18398$1i4eWV g$e$18613$1i4eWV)
         (g$variable-continuator$18369$1i4eWV g$var$18614$1i4eWV)))))
   (g$convert->cps$18404$1i4eWV
     g$convert->cps$18669$1i4eWV
     (case-lambda
       ((g$e$18615$1i4eWV g$var$18616$1i4eWV)
        (g$fix-primitives$18402$1i4eWV
          (g$parse->cps$18403$1i4eWV
            g$e$18615$1i4eWV
            g$var$18616$1i4eWV))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$18670$1i4eWV
     g$current-primitive-locations$18715$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (case-lambda ((g$x$18676$1i4eWV) '#f))
       (case-lambda
         ((g$p$18677$1i4eWV)
          (begin
            (if (not (g$procedure?$12670$1i4eWV g$p$18677$1i4eWV))
              (g$assertion-error$23483$1i4eWV
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$18677$1i4eWV)))))
   (g$mutable?$18671$1i4eWV
     g$mutable?$18716$1i4eWV
     (case-lambda
       ((g$x$18678$1i4eWV)
        (letrec* ((g$simple?$18679$1i4eWV
                    (case-lambda
                      ((g$x$18680$1i4eWV)
                       ((case-lambda
                          ((g$t$18681$1i4eWV)
                           (if g$t$18681$1i4eWV
                             g$t$18681$1i4eWV
                             ((case-lambda
                                ((g$t$18682$1i4eWV)
                                 (if g$t$18682$1i4eWV
                                   g$t$18682$1i4eWV
                                   ((case-lambda
                                      ((g$t$18683$1i4eWV)
                                       (if g$t$18683$1i4eWV
                                         g$t$18683$1i4eWV
                                         ((case-lambda
                                            ((g$t$18684$1i4eWV)
                                             (if g$t$18684$1i4eWV
                                               g$t$18684$1i4eWV
                                               ((case-lambda
                                                  ((g$t$18685$1i4eWV)
                                                   (if g$t$18685$1i4eWV
                                                     g$t$18685$1i4eWV
                                                     ((case-lambda
                                                        ((g$t$18686$1i4eWV)
                                                         (if g$t$18686$1i4eWV
                                                           g$t$18686$1i4eWV
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$18680$1i4eWV)))))
                                                      (g$bytevector?$12667$1i4eWV
                                                        g$x$18680$1i4eWV)))))
                                                (string?
                                                  g$x$18680$1i4eWV)))))
                                          (g$boolean?$12669$1i4eWV
                                            g$x$18680$1i4eWV)))))
                                    (g$symbol?$12668$1i4eWV
                                      g$x$18680$1i4eWV)))))
                              (g$char?$12665$1i4eWV
                                g$x$18680$1i4eWV)))))
                        (null? g$x$18680$1i4eWV))))))
          (not (g$simple?$18679$1i4eWV g$x$18678$1i4eWV))))))
   (g$rewriter$18672$1i4eWV
     g$rewriter$18717$1i4eWV
     (case-lambda
       ((g$quote-hack?$18687$1i4eWV)
        (letrec* ((g$f$18688$1i4eWV
                    (case-lambda
                      ((g$x$18689$1i4eWV)
                       (if (pair? g$x$18689$1i4eWV)
                         ((case-lambda
                            ((g$t$18690$1i4eWV)
                             (if (eqv? g$t$18690$1i4eWV 'quote)
                               (if (if g$quote-hack?$18687$1i4eWV
                                     (begin
                                       '#f
                                       (g$mutable?$18671$1i4eWV
                                         (g$cadr$12686$1i4eWV
                                           g$x$18689$1i4eWV)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$18691$1i4eWV)
                                     (begin
                                       (set-symbol-value!
                                         g$g$18691$1i4eWV
                                         (g$cadr$12686$1i4eWV
                                           g$x$18689$1i4eWV))
                                       g$g$18691$1i4eWV)))
                                  (gensym 'weak-temp))
                                 g$x$18689$1i4eWV)
                               (if (eqv? g$t$18690$1i4eWV 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$11835$1i4eWV
                                     (case-lambda
                                       ((g$x$18692$1i4eWV)
                                        (cons
                                          (car g$x$18692$1i4eWV)
                                          (g$map$11835$1i4eWV
                                            g$f$18688$1i4eWV
                                            (cdr g$x$18692$1i4eWV)))))
                                     (cdr g$x$18689$1i4eWV)))
                                 (if (eqv? g$t$18690$1i4eWV 'lambda)
                                   (g$cons*$11837$1i4eWV
                                     'lambda
                                     (g$cadr$12686$1i4eWV
                                       g$x$18689$1i4eWV)
                                     (g$map$11835$1i4eWV
                                       g$f$18688$1i4eWV
                                       (g$cddr$12688$1i4eWV
                                         g$x$18689$1i4eWV)))
                                   (if (eqv? g$t$18690$1i4eWV 'letrec)
                                     ((case-lambda
                                        ((g$bindings$18693$1i4eWV
                                           g$body*$18694$1i4eWV)
                                         ((case-lambda
                                            ((g$lhs*$18695$1i4eWV
                                               g$rhs*$18696$1i4eWV)
                                             (g$cons*$11837$1i4eWV
                                               'letrec
                                               (g$map$11835$1i4eWV
                                                 list
                                                 g$lhs*$18695$1i4eWV
                                                 (g$map$11835$1i4eWV
                                                   g$f$18688$1i4eWV
                                                   g$rhs*$18696$1i4eWV))
                                               (g$map$11835$1i4eWV
                                                 g$f$18688$1i4eWV
                                                 g$body*$18694$1i4eWV))))
                                          (g$map$11835$1i4eWV
                                            car
                                            g$bindings$18693$1i4eWV)
                                          (g$map$11835$1i4eWV
                                            g$cadr$12686$1i4eWV
                                            g$bindings$18693$1i4eWV))))
                                      (g$cadr$12686$1i4eWV
                                        g$x$18689$1i4eWV)
                                      (g$cddr$12688$1i4eWV
                                        g$x$18689$1i4eWV))
                                     (if (eqv?
                                           g$t$18690$1i4eWV
                                           'letrec*)
                                       ((case-lambda
                                          ((g$bindings$18697$1i4eWV
                                             g$body*$18698$1i4eWV)
                                           ((case-lambda
                                              ((g$lhs*$18699$1i4eWV
                                                 g$rhs*$18700$1i4eWV)
                                               (g$cons*$11837$1i4eWV
                                                 'letrec*
                                                 (g$map$11835$1i4eWV
                                                   list
                                                   g$lhs*$18699$1i4eWV
                                                   (g$map$11835$1i4eWV
                                                     g$f$18688$1i4eWV
                                                     g$rhs*$18700$1i4eWV))
                                                 (g$map$11835$1i4eWV
                                                   g$f$18688$1i4eWV
                                                   g$body*$18698$1i4eWV))))
                                            (g$map$11835$1i4eWV
                                              car
                                              g$bindings$18697$1i4eWV)
                                            (g$map$11835$1i4eWV
                                              g$cadr$12686$1i4eWV
                                              g$bindings$18697$1i4eWV))))
                                        (g$cadr$12686$1i4eWV
                                          g$x$18689$1i4eWV)
                                        (g$cddr$12688$1i4eWV
                                          g$x$18689$1i4eWV))
                                       (if (eqv?
                                             g$t$18690$1i4eWV
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$18701$1i4eWV
                                               g$x$18702$1i4eWV)
                                             ((case-lambda
                                                ((g$bindings$18703$1i4eWV
                                                   g$body*$18704$1i4eWV)
                                                 ((case-lambda
                                                    ((g$lhs*$18705$1i4eWV
                                                       g$lhs**$18706$1i4eWV
                                                       g$rhs*$18707$1i4eWV)
                                                     (g$cons*$11837$1i4eWV
                                                       'library-letrec*
                                                       g$name$18701$1i4eWV
                                                       (g$map$11835$1i4eWV
                                                         list
                                                         g$lhs*$18705$1i4eWV
                                                         g$lhs**$18706$1i4eWV
                                                         (g$map$11835$1i4eWV
                                                           g$f$18688$1i4eWV
                                                           g$rhs*$18707$1i4eWV))
                                                       (g$map$11835$1i4eWV
                                                         g$f$18688$1i4eWV
                                                         g$body*$18704$1i4eWV))))
                                                  (g$map$11835$1i4eWV
                                                    car
                                                    g$bindings$18703$1i4eWV)
                                                  (g$map$11835$1i4eWV
                                                    g$cadr$12686$1i4eWV
                                                    g$bindings$18703$1i4eWV)
                                                  (g$map$11835$1i4eWV
                                                    g$caddr$12692$1i4eWV
                                                    g$bindings$18703$1i4eWV))))
                                              (g$cadr$12686$1i4eWV
                                                g$x$18702$1i4eWV)
                                              (g$cddr$12688$1i4eWV
                                                g$x$18702$1i4eWV))))
                                          (g$cadr$12686$1i4eWV
                                            g$x$18689$1i4eWV)
                                          (cdr g$x$18689$1i4eWV))
                                         (if (eqv?
                                               g$t$18690$1i4eWV
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$11835$1i4eWV
                                               g$f$18688$1i4eWV
                                               (cdr g$x$18689$1i4eWV)))
                                           (if (eqv?
                                                 g$t$18690$1i4eWV
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$12686$1i4eWV
                                                 g$x$18689$1i4eWV)
                                               (g$f$18688$1i4eWV
                                                 (g$caddr$12692$1i4eWV
                                                   g$x$18689$1i4eWV)))
                                             (if (eqv?
                                                   g$t$18690$1i4eWV
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$18708$1i4eWV)
                                                   ((case-lambda
                                                      ((g$t$18709$1i4eWV)
                                                       (if g$t$18709$1i4eWV
                                                         ((case-lambda
                                                            ((g$loc$18710$1i4eWV)
                                                             g$loc$18710$1i4eWV))
                                                          g$t$18709$1i4eWV)
                                                         g$op$18708$1i4eWV)))
                                                    ((g$current-primitive-locations$18670$1i4eWV)
                                                     g$op$18708$1i4eWV))))
                                                (g$cadr$12686$1i4eWV
                                                  g$x$18689$1i4eWV))
                                               (if (eqv?
                                                     g$t$18690$1i4eWV
                                                     'define)
                                                 g$x$18689$1i4eWV
                                                 (if (list?
                                                       g$x$18689$1i4eWV)
                                                   (g$map$11835$1i4eWV
                                                     g$f$18688$1i4eWV
                                                     g$x$18689$1i4eWV)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$18689$1i4eWV
                                                     (list?
                                                       g$x$18689$1i4eWV)))))))))))))))
                          (car g$x$18689$1i4eWV))
                         g$x$18689$1i4eWV)))))
          g$f$18688$1i4eWV))))
   (g$expanded->core$18673$1i4eWV
     g$expanded->core$18718$1i4eWV
     (case-lambda
       ((g$x$18711$1i4eWV)
        ((g$rewriter$18672$1i4eWV '#t) g$x$18711$1i4eWV))))
   (g$compile-core-expr$18674$1i4eWV
     g$compile-core-expr$18719$1i4eWV
     (case-lambda
       ((g$x$18712$1i4eWV)
        ((g$rewriter$18672$1i4eWV '#f) g$x$18712$1i4eWV))))
   (g$compile-core-expr-to-port$18675$1i4eWV
     g$compile-core-expr-to-port$18720$1i4eWV
     (case-lambda
       ((g$x$18713$1i4eWV g$p$18714$1i4eWV)
        (g$pretty-print$18351$1i4eWV
          ((g$rewriter$18672$1i4eWV '#f) g$x$18713$1i4eWV)
          g$p$18714$1i4eWV)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$18721$1i4eWV
     g$make-collection$18930$1i4eWV
     (case-lambda
       (()
        ((case-lambda
           ((g$set$18784$1i4eWV)
            (letrec* ((g$set-cons$18785$1i4eWV
                        (case-lambda
                          ((g$x$18789$1i4eWV g$ls$18790$1i4eWV)
                           (if (g$memq$11827$1i4eWV
                                 g$x$18789$1i4eWV
                                 g$ls$18790$1i4eWV)
                             g$ls$18790$1i4eWV
                             (cons
                               g$x$18789$1i4eWV
                               g$ls$18790$1i4eWV))))))
              (case-lambda
                (() g$set$18784$1i4eWV)
                ((g$x$18786$1i4eWV)
                 (set! g$set$18784$1i4eWV
                   (g$set-cons$18785$1i4eWV
                     g$x$18786$1i4eWV
                     g$set$18784$1i4eWV)))
                ((g$x$18787$1i4eWV g$del?$18788$1i4eWV)
                 (if g$del?$18788$1i4eWV
                   (set! g$set$18784$1i4eWV
                     (g$remq$11842$1i4eWV
                       g$x$18787$1i4eWV
                       g$set$18784$1i4eWV))
                   (set! g$set$18784$1i4eWV
                     (g$set-cons$18785$1i4eWV
                       g$x$18787$1i4eWV
                       g$set$18784$1i4eWV))))))))
         '()))))
   (g$current-library-collection$18722$1i4eWV
     g$current-library-collection$18931$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (g$make-collection$18721$1i4eWV)
       (case-lambda
         ((g$x$18791$1i4eWV)
          (begin
            (if (not (g$procedure?$12670$1i4eWV g$x$18791$1i4eWV))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$18791$1i4eWV)
              (void))
            g$x$18791$1i4eWV)))))
   (g$8911$18723$1i4eWV
     g$8911$18932$1i4eWV
     (make-record-type-descriptor
       'library
       '#f
       'g$8914$1i4eWV
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8913$18724$1i4eWV g$8913$18933$1i4eWV '#f)
   (g$8912$18725$1i4eWV
     g$8912$18934$1i4eWV
     (make-record-constructor-descriptor
       g$8911$18723$1i4eWV
       '#f
       g$8913$18724$1i4eWV))
   (g$library?$18728$1i4eWV
     g$library?$18935$1i4eWV
     (record-predicate g$8911$18723$1i4eWV))
   (g$make-library$18729$1i4eWV
     g$make-library$18936$1i4eWV
     (record-constructor g$8912$18725$1i4eWV))
   (g$library-id$18730$1i4eWV
     g$library-id$18937$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '0))
   (g$library-name$18731$1i4eWV
     g$library-name$18938$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '1))
   (g$library-version$18732$1i4eWV
     g$library-version$18939$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '2))
   (g$library-imp*$18733$1i4eWV
     g$library-imp*$18940$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '3))
   (g$library-vis*$18734$1i4eWV
     g$library-vis*$18941$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '4))
   (g$library-inv*$18735$1i4eWV
     g$library-inv*$18942$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '5))
   (g$library-subst$18736$1i4eWV
     g$library-subst$18943$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '6))
   (g$library-env$18737$1i4eWV
     g$library-env$18944$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '7))
   (g$library-visit-state$18738$1i4eWV
     g$library-visit-state$18945$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '8))
   (g$library-invoke-state$18739$1i4eWV
     g$library-invoke-state$18946$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '9))
   (g$library-visit-code$18740$1i4eWV
     g$library-visit-code$18947$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '10))
   (g$library-invoke-code$18741$1i4eWV
     g$library-invoke-code$18948$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '11))
   (g$library-visible?$18742$1i4eWV
     g$library-visible?$18949$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '12))
   (g$library-source-file-name$18743$1i4eWV
     g$library-source-file-name$18950$1i4eWV
     (record-accessor g$8911$18723$1i4eWV '13))
   (g$set-library-id!$18744$1i4eWV
     g$set-library-id!$18951$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '0))
   (g$set-library-name!$18745$1i4eWV
     g$set-library-name!$18952$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '1))
   (g$set-library-version!$18746$1i4eWV
     g$set-library-version!$18953$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '2))
   (g$set-library-imp*!$18747$1i4eWV
     g$set-library-imp*!$18954$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '3))
   (g$set-library-vis*!$18748$1i4eWV
     g$set-library-vis*!$18955$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '4))
   (g$set-library-inv*!$18749$1i4eWV
     g$set-library-inv*!$18956$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '5))
   (g$set-library-subst!$18750$1i4eWV
     g$set-library-subst!$18957$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '6))
   (g$set-library-env!$18751$1i4eWV
     g$set-library-env!$18958$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '7))
   (g$set-library-visit-state!$18752$1i4eWV
     g$set-library-visit-state!$18959$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '8))
   (g$set-library-invoke-state!$18753$1i4eWV
     g$set-library-invoke-state!$18960$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '9))
   (g$set-library-visit-code!$18754$1i4eWV
     g$set-library-visit-code!$18961$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '10))
   (g$set-library-invoke-code!$18755$1i4eWV
     g$set-library-invoke-code!$18962$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '11))
   (g$set-library-visible?!$18756$1i4eWV
     g$set-library-visible?!$18963$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '12))
   (g$set-library-source-file-name!$18757$1i4eWV
     g$set-library-source-file-name!$18964$1i4eWV
     (record-mutator g$8911$18723$1i4eWV '13))
   (g$rp$18758$1i4eWV
     g$rp$18965$1i4eWV
     (make-record-printer
       'library
       (case-lambda
         ((g$x$18792$1i4eWV g$p$18793$1i4eWV g$wr$18794$1i4eWV)
          (begin
            (if (not (g$library?$18728$1i4eWV g$x$18792$1i4eWV))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$17932$1i4eWV
                '"#<library ~s>"
                (if (null?
                      (g$library-version$18732$1i4eWV g$x$18792$1i4eWV))
                  (g$library-name$18731$1i4eWV g$x$18792$1i4eWV)
                  (append
                    (g$library-name$18731$1i4eWV g$x$18792$1i4eWV)
                    (list
                      (g$library-version$18732$1i4eWV
                        g$x$18792$1i4eWV)))))
              g$p$18793$1i4eWV))))))
   (g$find-dependencies$18759$1i4eWV
     g$find-dependencies$18966$1i4eWV
     (case-lambda
       ((g$ls$18795$1i4eWV)
        (if (null? g$ls$18795$1i4eWV)
          '()
          (assertion-violation
            'find-dependencies
            '"cannot handle deps yet")))))
   (g$find-library-by$18760$1i4eWV
     g$find-library-by$18967$1i4eWV
     (case-lambda
       ((g$pred$18796$1i4eWV)
        ((letrec ((g$f$18797$1i4eWV
                    (case-lambda
                      ((g$ls$18798$1i4eWV)
                       (if (null? g$ls$18798$1i4eWV)
                         '#f
                         (if (g$pred$18796$1i4eWV
                               (car g$ls$18798$1i4eWV))
                           (car g$ls$18798$1i4eWV)
                           (g$f$18797$1i4eWV
                             (cdr g$ls$18798$1i4eWV))))))))
           g$f$18797$1i4eWV)
         ((g$current-library-collection$18722$1i4eWV))))))
   (g$library-path$18761$1i4eWV
     g$library-path$18968$1i4eWV
     (g$make-parameter$18141$1i4eWV
       '(".")
       (case-lambda
         ((g$x$18799$1i4eWV)
          (if (if (list? g$x$18799$1i4eWV)
                (begin
                  '#f
                  (g$for-all$11833$1i4eWV string? g$x$18799$1i4eWV))
                '#f)
            (g$map$11835$1i4eWV
              (case-lambda ((g$x$18800$1i4eWV) g$x$18800$1i4eWV))
              g$x$18799$1i4eWV)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$18799$1i4eWV))))))
   (g$library-extensions$18762$1i4eWV
     g$library-extensions$18969$1i4eWV
     (g$make-parameter$18141$1i4eWV
       '(".sls" ".ss")
       (case-lambda
         ((g$x$18801$1i4eWV)
          (if (if (list? g$x$18801$1i4eWV)
                (begin
                  '#f
                  (g$for-all$11833$1i4eWV string? g$x$18801$1i4eWV))
                '#f)
            (g$map$11835$1i4eWV
              (case-lambda ((g$x$18802$1i4eWV) g$x$18802$1i4eWV))
              g$x$18801$1i4eWV)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$18801$1i4eWV))))))
   (g$library-name->file-name$18763$1i4eWV
     g$library-name->file-name$18970$1i4eWV
     (case-lambda
       ((g$x$18803$1i4eWV)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$17692$1i4eWV)))
          (case-lambda
            ((g$p$18806$1i4eWV g$extract$18807$1i4eWV)
             ((case-lambda
                ((g$extract$18808$1i4eWV g$p$18809$1i4eWV)
                 (letrec* ((g$display-hex$18810$1i4eWV
                             (case-lambda
                               ((g$n$18818$1i4eWV)
                                (if (<= '0 g$n$18818$1i4eWV '9)
                                  (display
                                    g$n$18818$1i4eWV
                                    g$p$18809$1i4eWV)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$18818$1i4eWV '10)))
                                    g$p$18809$1i4eWV))))))
                   (begin
                     ((letrec ((g$f$18811$1i4eWV
                                 (case-lambda
                                   ((g$ls$18812$1i4eWV)
                                    (if (not (null? g$ls$18812$1i4eWV))
                                      (begin
                                        (display '"/" g$p$18809$1i4eWV)
                                        (g$for-each$11836$1i4eWV
                                          (case-lambda
                                            ((g$c$18813$1i4eWV)
                                             (if ((case-lambda
                                                    ((g$t$18814$1i4eWV)
                                                     (if g$t$18814$1i4eWV
                                                       g$t$18814$1i4eWV
                                                       ((case-lambda
                                                          ((g$t$18815$1i4eWV)
                                                           (if g$t$18815$1i4eWV
                                                             g$t$18815$1i4eWV
                                                             ((case-lambda
                                                                ((g$t$18816$1i4eWV)
                                                                 (if g$t$18816$1i4eWV
                                                                   g$t$18816$1i4eWV
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$11828$1i4eWV
                                                                       g$c$18813$1i4eWV
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$12732$1i4eWV
                                                                '#\0
                                                                g$c$18813$1i4eWV
                                                                '#\9)))))
                                                        (g$char<=?$12732$1i4eWV
                                                          '#\A
                                                          g$c$18813$1i4eWV
                                                          '#\Z)))))
                                                  (g$char<=?$12732$1i4eWV
                                                    '#\a
                                                    g$c$18813$1i4eWV
                                                    '#\z))
                                               (display
                                                 g$c$18813$1i4eWV
                                                 g$p$18809$1i4eWV)
                                               (begin
                                                 (display
                                                   '"%"
                                                   g$p$18809$1i4eWV)
                                                 ((case-lambda
                                                    ((g$n$18817$1i4eWV)
                                                     (begin
                                                       (g$display-hex$18810$1i4eWV
                                                         (g$quotient$13611$1i4eWV
                                                           g$n$18817$1i4eWV
                                                           '16))
                                                       (g$display-hex$18810$1i4eWV
                                                         (g$remainder$13612$1i4eWV
                                                           g$n$18817$1i4eWV
                                                           '16)))))
                                                  (char->integer
                                                    g$c$18813$1i4eWV))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$18812$1i4eWV))))
                                        (g$f$18811$1i4eWV
                                          (cdr g$ls$18812$1i4eWV)))
                                      (void))))))
                        g$f$18811$1i4eWV)
                      g$x$18803$1i4eWV)
                     (g$extract$18808$1i4eWV)))))
              g$extract$18807$1i4eWV
              g$p$18806$1i4eWV)))))))
   (g$file-locator$18764$1i4eWV
     g$file-locator$18971$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (case-lambda
         ((g$x$18819$1i4eWV)
          ((case-lambda
             ((g$str$18820$1i4eWV)
              ((letrec ((g$f$18821$1i4eWV
                          (case-lambda
                            ((g$ls$18822$1i4eWV
                               g$exts$18823$1i4eWV
                               g$failed-list$18824$1i4eWV)
                             (if (null? g$ls$18822$1i4eWV)
                               (g$file-locator-resolution-error$18139$1i4eWV
                                 g$x$18819$1i4eWV
                                 (g$reverse$12684$1i4eWV
                                   g$failed-list$18824$1i4eWV)
                                 ((case-lambda
                                    ((g$ls$18825$1i4eWV)
                                     (if (null? g$ls$18825$1i4eWV)
                                       (error 'library-manager '"BUG")
                                       (cdr g$ls$18825$1i4eWV))))
                                  (g$external-pending-libraries$18770$1i4eWV)))
                               (if (null? g$exts$18823$1i4eWV)
                                 (g$f$18821$1i4eWV
                                   (cdr g$ls$18822$1i4eWV)
                                   (g$library-extensions$18762$1i4eWV)
                                   g$failed-list$18824$1i4eWV)
                                 ((case-lambda
                                    ((g$name$18826$1i4eWV)
                                     (if (g$file-exists?$12795$1i4eWV
                                           g$name$18826$1i4eWV)
                                       g$name$18826$1i4eWV
                                       (g$f$18821$1i4eWV
                                         g$ls$18822$1i4eWV
                                         (cdr g$exts$18823$1i4eWV)
                                         (cons
                                           g$name$18826$1i4eWV
                                           g$failed-list$18824$1i4eWV)))))
                                  (string-append
                                    (car g$ls$18822$1i4eWV)
                                    g$str$18820$1i4eWV
                                    (car g$exts$18823$1i4eWV)))))))))
                 g$f$18821$1i4eWV)
               (g$library-path$18761$1i4eWV)
               (g$library-extensions$18762$1i4eWV)
               '())))
           (g$library-name->file-name$18763$1i4eWV g$x$18819$1i4eWV))))
       (case-lambda
         ((g$f$18827$1i4eWV)
          (if (g$procedure?$12670$1i4eWV g$f$18827$1i4eWV)
            g$f$18827$1i4eWV
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$18827$1i4eWV))))))
   (g$serialize-all$18765$1i4eWV
     g$serialize-all$18972$1i4eWV
     (case-lambda
       ((g$serialize$18828$1i4eWV g$compile$18829$1i4eWV)
        (letrec* ((g$library-desc$18830$1i4eWV
                    (case-lambda
                      ((g$x$18832$1i4eWV)
                       (list
                         (g$library-id$18730$1i4eWV g$x$18832$1i4eWV)
                         (g$library-name$18731$1i4eWV
                           g$x$18832$1i4eWV))))))
          (g$for-each$11836$1i4eWV
            (case-lambda
              ((g$x$18831$1i4eWV)
               (if (g$library-source-file-name$18743$1i4eWV
                     g$x$18831$1i4eWV)
                 (g$serialize$18828$1i4eWV
                   (g$library-source-file-name$18743$1i4eWV
                     g$x$18831$1i4eWV)
                   (list
                     (g$library-id$18730$1i4eWV g$x$18831$1i4eWV)
                     (g$library-name$18731$1i4eWV g$x$18831$1i4eWV)
                     (g$library-version$18732$1i4eWV g$x$18831$1i4eWV)
                     (g$map$11835$1i4eWV
                       g$library-desc$18830$1i4eWV
                       (g$library-imp*$18733$1i4eWV g$x$18831$1i4eWV))
                     (g$map$11835$1i4eWV
                       g$library-desc$18830$1i4eWV
                       (g$library-vis*$18734$1i4eWV g$x$18831$1i4eWV))
                     (g$map$11835$1i4eWV
                       g$library-desc$18830$1i4eWV
                       (g$library-inv*$18735$1i4eWV g$x$18831$1i4eWV))
                     (g$library-subst$18736$1i4eWV g$x$18831$1i4eWV)
                     (g$library-env$18737$1i4eWV g$x$18831$1i4eWV)
                     (g$compile$18829$1i4eWV
                       (g$library-visit-code$18740$1i4eWV
                         g$x$18831$1i4eWV))
                     (g$compile$18829$1i4eWV
                       (g$library-invoke-code$18741$1i4eWV
                         g$x$18831$1i4eWV))
                     (g$library-visible?$18742$1i4eWV
                       g$x$18831$1i4eWV)))
                 (void))))
            ((g$current-library-collection$18722$1i4eWV)))))))
   (g$current-precompiled-library-loader$18766$1i4eWV
     g$current-precompiled-library-loader$18973$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (case-lambda ((g$filename$18833$1i4eWV g$sk$18834$1i4eWV) '#f))))
   (g$try-load-from-file$18767$1i4eWV
     g$try-load-from-file$18974$1i4eWV
     (case-lambda
       ((g$filename$18835$1i4eWV)
        ((g$current-precompiled-library-loader$18766$1i4eWV)
         g$filename$18835$1i4eWV
         (case-lambda
           ((g$id$18836$1i4eWV
              g$name$18837$1i4eWV
              g$ver$18838$1i4eWV
              g$imp*$18839$1i4eWV
              g$vis*$18840$1i4eWV
              g$inv*$18841$1i4eWV
              g$exp-subst$18842$1i4eWV
              g$exp-env$18843$1i4eWV
              g$visit-proc$18844$1i4eWV
              g$invoke-proc$18845$1i4eWV
              g$visible?$18846$1i4eWV)
            ((letrec ((g$f$18847$1i4eWV
                        (case-lambda
                          ((g$deps$18848$1i4eWV)
                           (if (null? g$deps$18848$1i4eWV)
                             (begin
                               (g$install-library$18777$1i4eWV
                                 g$id$18836$1i4eWV
                                 g$name$18837$1i4eWV
                                 g$ver$18838$1i4eWV
                                 g$imp*$18839$1i4eWV
                                 g$vis*$18840$1i4eWV
                                 g$inv*$18841$1i4eWV
                                 g$exp-subst$18842$1i4eWV
                                 g$exp-env$18843$1i4eWV
                                 g$visit-proc$18844$1i4eWV
                                 g$invoke-proc$18845$1i4eWV
                                 '#f
                                 '#f
                                 g$visible?$18846$1i4eWV
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$18849$1i4eWV)
                                 ((case-lambda
                                    ((g$label$18850$1i4eWV
                                       g$dname$18851$1i4eWV)
                                     ((case-lambda
                                        ((g$l$18852$1i4eWV)
                                         (if (if (g$library?$18728$1i4eWV
                                                   g$l$18852$1i4eWV)
                                               (begin
                                                 '#f
                                                 (eq? g$label$18850$1i4eWV
                                                      (g$library-id$18730$1i4eWV
                                                        g$l$18852$1i4eWV)))
                                               '#f)
                                           (g$f$18847$1i4eWV
                                             (cdr g$deps$18848$1i4eWV))
                                           (begin
                                             (g$library-version-mismatch-warning$18138$1i4eWV
                                               g$name$18837$1i4eWV
                                               g$dname$18851$1i4eWV
                                               g$filename$18835$1i4eWV)
                                             '#f))))
                                      (g$find-library-by-name$18772$1i4eWV
                                        g$dname$18851$1i4eWV))))
                                  (car g$d$18849$1i4eWV)
                                  (g$cadr$12686$1i4eWV
                                    g$d$18849$1i4eWV))))
                              (car g$deps$18848$1i4eWV)))))))
               g$f$18847$1i4eWV)
             (append
               g$imp*$18839$1i4eWV
               g$vis*$18840$1i4eWV
               g$inv*$18841$1i4eWV)))
           (g$others$18853$1i4eWV '#f))))))
   (g$library-loader$18768$1i4eWV
     g$library-loader$18975$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (case-lambda
         ((g$x$18854$1i4eWV)
          ((case-lambda
             ((g$file-name$18855$1i4eWV)
              (if (not g$file-name$18855$1i4eWV)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$18854$1i4eWV)
                ((case-lambda
                   ((g$t$18856$1i4eWV)
                    (if g$t$18856$1i4eWV
                      g$t$18856$1i4eWV
                      (begin
                        '#f
                        ((g$current-library-expander$18769$1i4eWV)
                         (g$read-library-source-file$18140$1i4eWV
                           g$file-name$18855$1i4eWV)
                         g$file-name$18855$1i4eWV
                         (case-lambda
                           ((g$name$18857$1i4eWV)
                            (if (not (equal?
                                       g$name$18857$1i4eWV
                                       g$x$18854$1i4eWV))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$17692$1i4eWV)))
                                  (case-lambda
                                    ((g$p$18860$1i4eWV g$e$18861$1i4eWV)
                                     ((case-lambda
                                        ((g$e$18862$1i4eWV
                                           g$p$18863$1i4eWV)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$18863$1i4eWV)
                                           (write
                                             g$x$18854$1i4eWV
                                             g$p$18863$1i4eWV)
                                           (display
                                             '" in file "
                                             g$p$18863$1i4eWV)
                                           (display
                                             g$file-name$18855$1i4eWV
                                             g$p$18863$1i4eWV)
                                           (display
                                             '", found "
                                             g$p$18863$1i4eWV)
                                           (write
                                             g$name$18857$1i4eWV
                                             g$p$18863$1i4eWV)
                                           (display
                                             '" instead"
                                             g$p$18863$1i4eWV)
                                           (g$e$18862$1i4eWV))))
                                      g$e$18861$1i4eWV
                                      g$p$18860$1i4eWV)))))
                              (void)))))))))
                 (g$try-load-from-file$18767$1i4eWV
                   g$file-name$18855$1i4eWV)))))
           ((g$file-locator$18764$1i4eWV) g$x$18854$1i4eWV))))
       (case-lambda
         ((g$f$18864$1i4eWV)
          (if (g$procedure?$12670$1i4eWV g$f$18864$1i4eWV)
            g$f$18864$1i4eWV
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$18864$1i4eWV))))))
   (g$current-library-expander$18769$1i4eWV
     g$current-library-expander$18976$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (case-lambda
         ((g$x$18865$1i4eWV)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$18866$1i4eWV)
          (if (g$procedure?$12670$1i4eWV g$f$18866$1i4eWV)
            g$f$18866$1i4eWV
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$18866$1i4eWV))))))
   (g$external-pending-libraries$18770$1i4eWV
     g$external-pending-libraries$18977$1i4eWV
     (g$make-parameter$18141$1i4eWV '()))
   (g$find-external-library$18771$1i4eWV
     g$find-external-library$18978$1i4eWV
     (case-lambda
       ((g$name$18867$1i4eWV)
        (begin
          (if (g$member$11829$1i4eWV
                g$name$18867$1i4eWV
                (g$external-pending-libraries$18770$1i4eWV))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$18867$1i4eWV)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$18870$1i4eWV
                g$external-pending-libraries$18871$1i4eWV)
              ((case-lambda
                 ((g$swap$18872$1i4eWV)
                  (dynamic-wind
                    g$swap$18872$1i4eWV
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$18768$1i4eWV)
                          g$name$18867$1i4eWV)
                         ((case-lambda
                            ((g$t$18873$1i4eWV)
                             (if g$t$18873$1i4eWV
                               g$t$18873$1i4eWV
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$18867$1i4eWV)))))
                          (g$find-library-by$18760$1i4eWV
                            (case-lambda
                              ((g$x$18874$1i4eWV)
                               (equal?
                                 (g$library-name$18731$1i4eWV
                                   g$x$18874$1i4eWV)
                                 g$name$18867$1i4eWV))))))))
                    g$swap$18872$1i4eWV)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$18875$1i4eWV)
                      (begin
                        (g$external-pending-libraries$18870$1i4eWV
                          g$external-pending-libraries$18871$1i4eWV)
                        (set! g$external-pending-libraries$18871$1i4eWV
                          g$t$18875$1i4eWV))))
                   (g$external-pending-libraries$18870$1i4eWV)))))))
           g$external-pending-libraries$18770$1i4eWV
           (cons
             g$name$18867$1i4eWV
             (g$external-pending-libraries$18770$1i4eWV)))))))
   (g$find-library-by-name$18772$1i4eWV
     g$find-library-by-name$18979$1i4eWV
     (case-lambda
       ((g$name$18876$1i4eWV)
        ((case-lambda
           ((g$t$18877$1i4eWV)
            (if g$t$18877$1i4eWV
              g$t$18877$1i4eWV
              (begin
                '#f
                (g$find-external-library$18771$1i4eWV
                  g$name$18876$1i4eWV)))))
         (g$find-library-by$18760$1i4eWV
           (case-lambda
             ((g$x$18878$1i4eWV)
              (equal?
                (g$library-name$18731$1i4eWV g$x$18878$1i4eWV)
                g$name$18876$1i4eWV))))))))
   (g$uninstall-library$18773$1i4eWV
     g$uninstall-library$18980$1i4eWV
     (case-lambda
       ((g$name$18879$1i4eWV g$err?$18880$1i4eWV)
        (letrec* ((g$who$18881$1i4eWV 'uninstall-library))
          ((case-lambda
             ((g$lib$18882$1i4eWV)
              (begin
                (if (if g$err?$18880$1i4eWV
                      (begin '#f (not g$lib$18882$1i4eWV))
                      '#f)
                  (assertion-violation
                    g$who$18881$1i4eWV
                    '"library not installed"
                    g$name$18879$1i4eWV)
                  (void))
                ((g$current-library-collection$18722$1i4eWV)
                 g$lib$18882$1i4eWV
                 '#t)
                (g$for-each$11836$1i4eWV
                  (case-lambda
                    ((g$x$18883$1i4eWV)
                     ((case-lambda
                        ((g$label$18884$1i4eWV g$binding$18885$1i4eWV)
                         (begin
                           (remove-location g$label$18884$1i4eWV)
                           (if (g$memq$11827$1i4eWV
                                 (car g$binding$18885$1i4eWV)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$18885$1i4eWV))
                             (void)))))
                      (car g$x$18883$1i4eWV)
                      (cdr g$x$18883$1i4eWV))))
                  (g$library-env$18737$1i4eWV g$lib$18882$1i4eWV)))))
           (g$find-library-by$18760$1i4eWV
             (case-lambda
               ((g$x$18886$1i4eWV)
                (equal?
                  (g$library-name$18731$1i4eWV g$x$18886$1i4eWV)
                  g$name$18879$1i4eWV)))))))
       ((g$name$18887$1i4eWV)
        (g$uninstall-library$18773$1i4eWV g$name$18887$1i4eWV '#t))))
   (g$library-exists?$18774$1i4eWV
     g$library-exists?$18981$1i4eWV
     (case-lambda
       ((g$name$18888$1i4eWV)
        (if (g$find-library-by$18760$1i4eWV
              (case-lambda
                ((g$x$18889$1i4eWV)
                 (equal?
                   (g$library-name$18731$1i4eWV g$x$18889$1i4eWV)
                   g$name$18888$1i4eWV))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$18775$1i4eWV
     g$find-library-by-spec/die$18982$1i4eWV
     (case-lambda
       ((g$spec$18890$1i4eWV)
        ((case-lambda
           ((g$id$18891$1i4eWV)
            ((case-lambda
               ((g$t$18892$1i4eWV)
                (if g$t$18892$1i4eWV
                  g$t$18892$1i4eWV
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$18890$1i4eWV)))))
             (g$find-library-by$18760$1i4eWV
               (case-lambda
                 ((g$x$18893$1i4eWV)
                  (eq? g$id$18891$1i4eWV
                       (g$library-id$18730$1i4eWV
                         g$x$18893$1i4eWV))))))))
         (car g$spec$18890$1i4eWV)))))
   (g$install-library-record$18776$1i4eWV
     g$install-library-record$18983$1i4eWV
     (case-lambda
       ((g$lib$18894$1i4eWV)
        (begin
          ((case-lambda
             ((g$exp-env$18895$1i4eWV)
              (g$for-each$11836$1i4eWV
                (case-lambda
                  ((g$x$18896$1i4eWV)
                   ((case-lambda
                      ((g$label$18897$1i4eWV g$binding$18898$1i4eWV)
                       ((case-lambda
                          ((g$binding$18899$1i4eWV)
                           (g$set-label-binding!$18144$1i4eWV
                             g$label$18897$1i4eWV
                             g$binding$18899$1i4eWV)))
                        ((case-lambda
                           ((g$t$18900$1i4eWV)
                            (if (eqv? g$t$18900$1i4eWV 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$18894$1i4eWV
                                  (cdr g$binding$18898$1i4eWV)))
                              (if (eqv? g$t$18900$1i4eWV 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$18894$1i4eWV
                                    (cdr g$binding$18898$1i4eWV)))
                                (if (eqv?
                                      g$t$18900$1i4eWV
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$18894$1i4eWV
                                      (cdr g$binding$18898$1i4eWV)))
                                  (if (eqv?
                                        g$t$18900$1i4eWV
                                        'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$18894$1i4eWV
                                        (cdr g$binding$18898$1i4eWV)))
                                    g$binding$18898$1i4eWV))))))
                         (car g$binding$18898$1i4eWV)))))
                    (car g$x$18896$1i4eWV)
                    (cdr g$x$18896$1i4eWV))))
                g$exp-env$18895$1i4eWV)))
           (g$library-env$18737$1i4eWV g$lib$18894$1i4eWV))
          ((g$current-library-collection$18722$1i4eWV)
           g$lib$18894$1i4eWV)))))
   (g$install-library$18777$1i4eWV
     g$install-library$18984$1i4eWV
     (case-lambda
       ((g$id$18901$1i4eWV
          g$name$18902$1i4eWV
          g$ver$18903$1i4eWV
          g$imp*$18904$1i4eWV
          g$vis*$18905$1i4eWV
          g$inv*$18906$1i4eWV
          g$exp-subst$18907$1i4eWV
          g$exp-env$18908$1i4eWV
          g$visit-proc$18909$1i4eWV
          g$invoke-proc$18910$1i4eWV
          g$visit-code$18911$1i4eWV
          g$invoke-code$18912$1i4eWV
          g$visible?$18913$1i4eWV
          g$source-file-name$18914$1i4eWV)
        ((case-lambda
           ((g$imp-lib*$18915$1i4eWV
              g$vis-lib*$18916$1i4eWV
              g$inv-lib*$18917$1i4eWV)
            (begin
              (if (not (if (g$symbol?$12668$1i4eWV g$id$18901$1i4eWV)
                         (if (list? g$name$18902$1i4eWV)
                           (begin '#f (list? g$ver$18903$1i4eWV))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$18901$1i4eWV
                  g$name$18902$1i4eWV
                  g$ver$18903$1i4eWV)
                (void))
              (if (g$library-exists?$18774$1i4eWV g$name$18902$1i4eWV)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$18902$1i4eWV)
                (void))
              ((case-lambda
                 ((g$lib$18918$1i4eWV)
                  (g$install-library-record$18776$1i4eWV
                    g$lib$18918$1i4eWV)))
               (g$make-library$18729$1i4eWV
                 g$id$18901$1i4eWV
                 g$name$18902$1i4eWV
                 g$ver$18903$1i4eWV
                 g$imp-lib*$18915$1i4eWV
                 g$vis-lib*$18916$1i4eWV
                 g$inv-lib*$18917$1i4eWV
                 g$exp-subst$18907$1i4eWV
                 g$exp-env$18908$1i4eWV
                 g$visit-proc$18909$1i4eWV
                 g$invoke-proc$18910$1i4eWV
                 g$visit-code$18911$1i4eWV
                 g$invoke-code$18912$1i4eWV
                 g$visible?$18913$1i4eWV
                 g$source-file-name$18914$1i4eWV)))))
         (g$map$11835$1i4eWV
           g$find-library-by-spec/die$18775$1i4eWV
           g$imp*$18904$1i4eWV)
         (g$map$11835$1i4eWV
           g$find-library-by-spec/die$18775$1i4eWV
           g$vis*$18905$1i4eWV)
         (g$map$11835$1i4eWV
           g$find-library-by-spec/die$18775$1i4eWV
           g$inv*$18906$1i4eWV)))))
   (g$imported-label->binding$18778$1i4eWV
     g$imported-label->binding$18985$1i4eWV
     (case-lambda
       ((g$lab$18919$1i4eWV)
        (g$label-binding$18145$1i4eWV g$lab$18919$1i4eWV))))
   (g$invoke-library$18779$1i4eWV
     g$invoke-library$18986$1i4eWV
     (case-lambda
       ((g$lib$18920$1i4eWV)
        ((case-lambda
           ((g$invoke$18921$1i4eWV)
            (if (g$procedure?$12670$1i4eWV g$invoke$18921$1i4eWV)
              (begin
                (g$set-library-invoke-state!$18753$1i4eWV
                  g$lib$18920$1i4eWV
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$18920$1i4eWV))))
                (g$for-each$11836$1i4eWV
                  g$invoke-library$18779$1i4eWV
                  (g$library-inv*$18735$1i4eWV g$lib$18920$1i4eWV))
                (g$set-library-invoke-state!$18753$1i4eWV
                  g$lib$18920$1i4eWV
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$18920$1i4eWV))))
                (g$invoke$18921$1i4eWV)
                (g$set-library-invoke-state!$18753$1i4eWV
                  g$lib$18920$1i4eWV
                  '#t))
              (void))))
         (g$library-invoke-state$18739$1i4eWV g$lib$18920$1i4eWV)))))
   (g$visit-library$18780$1i4eWV
     g$visit-library$18987$1i4eWV
     (case-lambda
       ((g$lib$18922$1i4eWV)
        ((case-lambda
           ((g$visit$18923$1i4eWV)
            (if (g$procedure?$12670$1i4eWV g$visit$18923$1i4eWV)
              (begin
                (g$set-library-visit-state!$18752$1i4eWV
                  g$lib$18922$1i4eWV
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$18922$1i4eWV))))
                (g$for-each$11836$1i4eWV
                  g$invoke-library$18779$1i4eWV
                  (g$library-vis*$18734$1i4eWV g$lib$18922$1i4eWV))
                (g$set-library-visit-state!$18752$1i4eWV
                  g$lib$18922$1i4eWV
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$18922$1i4eWV))))
                (g$visit$18923$1i4eWV)
                (g$set-library-visit-state!$18752$1i4eWV
                  g$lib$18922$1i4eWV
                  '#t))
              (void))))
         (g$library-visit-state$18738$1i4eWV g$lib$18922$1i4eWV)))))
   (g$invoke-library-by-spec$18781$1i4eWV
     g$invoke-library-by-spec$18988$1i4eWV
     (case-lambda
       ((g$spec$18924$1i4eWV)
        (g$invoke-library$18779$1i4eWV
          (g$find-library-by-spec/die$18775$1i4eWV
            g$spec$18924$1i4eWV)))))
   (g$installed-libraries$18782$1i4eWV
     g$installed-libraries$18989$1i4eWV
     (case-lambda
       ((g$all?$18925$1i4eWV)
        ((letrec ((g$f$18926$1i4eWV
                    (case-lambda
                      ((g$ls$18927$1i4eWV)
                       (if (null? g$ls$18927$1i4eWV)
                         '()
                         (if ((case-lambda
                                ((g$t$18928$1i4eWV)
                                 (if g$t$18928$1i4eWV
                                   g$t$18928$1i4eWV
                                   (begin
                                     '#f
                                     (g$library-visible?$18742$1i4eWV
                                       (car g$ls$18927$1i4eWV))))))
                              g$all?$18925$1i4eWV)
                           (cons
                             (g$library-name$18731$1i4eWV
                               (car g$ls$18927$1i4eWV))
                             (g$f$18926$1i4eWV (cdr g$ls$18927$1i4eWV)))
                           (g$f$18926$1i4eWV
                             (cdr g$ls$18927$1i4eWV))))))))
           g$f$18926$1i4eWV)
         ((g$current-library-collection$18722$1i4eWV))))
       (() (g$installed-libraries$18782$1i4eWV '#f))))
   (g$library-spec$18783$1i4eWV
     g$library-spec$18990$1i4eWV
     (case-lambda
       ((g$x$18929$1i4eWV)
        (begin
          (if (not (g$library?$18728$1i4eWV g$x$18929$1i4eWV))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$18929$1i4eWV)
            (void))
          (list
            (g$library-id$18730$1i4eWV g$x$18929$1i4eWV)
            (g$library-name$18731$1i4eWV g$x$18929$1i4eWV)
            (g$library-version$18732$1i4eWV g$x$18929$1i4eWV)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$18991$1i4eWV
     g$build-global-define$19201$1i4eWV
     (case-lambda ((g$x$19172$1i4eWV) (g$build-void$19168$1i4eWV))))
   (g$build-lambda$19102$1i4eWV
     g$build-lambda$19202$1i4eWV
     (case-lambda
       ((g$ae$19173$1i4eWV g$vars$19174$1i4eWV g$exp$19175$1i4eWV)
        (list
          'case-lambda
          (list g$vars$19174$1i4eWV g$exp$19175$1i4eWV)))))
   (g$build-case-lambda$19103$1i4eWV
     g$build-case-lambda$19203$1i4eWV
     (case-lambda
       ((g$ae$19176$1i4eWV g$vars*$19177$1i4eWV g$exp*$19178$1i4eWV)
        (cons
          'case-lambda
          (g$map$11835$1i4eWV
            list
            g$vars*$19177$1i4eWV
            g$exp*$19178$1i4eWV)))))
   (g$build-let$19104$1i4eWV
     g$build-let$19204$1i4eWV
     (case-lambda
       ((g$ae$19179$1i4eWV
          g$lhs*$19180$1i4eWV
          g$rhs*$19181$1i4eWV
          g$body$19182$1i4eWV)
        (cons
          (g$build-lambda$19102$1i4eWV
            g$ae$19179$1i4eWV
            g$lhs*$19180$1i4eWV
            g$body$19182$1i4eWV)
          g$rhs*$19181$1i4eWV))))
   (g$build-sequence$19167$1i4eWV
     g$build-sequence$19205$1i4eWV
     (case-lambda
       ((g$ae$19183$1i4eWV g$exps$19184$1i4eWV)
        ((letrec ((g$loop$19185$1i4eWV
                    (case-lambda
                      ((g$exps$19186$1i4eWV)
                       (if (null? (cdr g$exps$19186$1i4eWV))
                         (car g$exps$19186$1i4eWV)
                         (if (equal?
                               (car g$exps$19186$1i4eWV)
                               (g$build-void$19168$1i4eWV))
                           (g$loop$19185$1i4eWV
                             (cdr g$exps$19186$1i4eWV))
                           (cons 'begin g$exps$19186$1i4eWV)))))))
           g$loop$19185$1i4eWV)
         g$exps$19184$1i4eWV))))
   (g$build-void$19168$1i4eWV
     g$build-void$19206$1i4eWV
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$19169$1i4eWV
     g$build-letrec$19207$1i4eWV
     (case-lambda
       ((g$ae$19187$1i4eWV
          g$vars$19188$1i4eWV
          g$val-exps$19189$1i4eWV
          g$body-exp$19190$1i4eWV)
        (if (null? g$vars$19188$1i4eWV)
          g$body-exp$19190$1i4eWV
          (list
            'letrec
            (g$map$11835$1i4eWV
              list
              g$vars$19188$1i4eWV
              g$val-exps$19189$1i4eWV)
            g$body-exp$19190$1i4eWV)))))
   (g$build-letrec*$19170$1i4eWV
     g$build-letrec*$19208$1i4eWV
     (case-lambda
       ((g$ae$19191$1i4eWV
          g$vars$19192$1i4eWV
          g$val-exps$19193$1i4eWV
          g$body-exp$19194$1i4eWV)
        (if (null? g$vars$19192$1i4eWV)
          g$body-exp$19194$1i4eWV
          (list
            'letrec*
            (g$map$11835$1i4eWV
              list
              g$vars$19192$1i4eWV
              g$val-exps$19193$1i4eWV)
            g$body-exp$19194$1i4eWV)))))
   (g$build-library-letrec*$19171$1i4eWV
     g$build-library-letrec*$19209$1i4eWV
     (case-lambda
       ((g$ae$19195$1i4eWV
          g$name$19196$1i4eWV
          g$vars$19197$1i4eWV
          g$locs$19198$1i4eWV
          g$val-exps$19199$1i4eWV
          g$body-exp$19200$1i4eWV)
        (list
          'library-letrec*
          g$name$19196$1i4eWV
          (g$map$11835$1i4eWV
            list
            g$vars$19197$1i4eWV
            g$locs$19198$1i4eWV
            g$val-exps$19199$1i4eWV)
          g$body-exp$19200$1i4eWV)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$19210$1i4eWV
     g$set-cons$23222$1i4eWV
     (case-lambda
       ((g$x$19906$1i4eWV g$ls$19907$1i4eWV)
        (if (g$memq$11827$1i4eWV g$x$19906$1i4eWV g$ls$19907$1i4eWV)
          g$ls$19907$1i4eWV
          (cons g$x$19906$1i4eWV g$ls$19907$1i4eWV)))))
   (g$set-union$19211$1i4eWV
     g$set-union$23223$1i4eWV
     (case-lambda
       ((g$ls1$19908$1i4eWV g$ls2$19909$1i4eWV)
        (if (null? g$ls1$19908$1i4eWV)
          g$ls2$19909$1i4eWV
          (if (g$memq$11827$1i4eWV
                (car g$ls1$19908$1i4eWV)
                g$ls2$19909$1i4eWV)
            (g$set-union$19211$1i4eWV
              (cdr g$ls1$19908$1i4eWV)
              g$ls2$19909$1i4eWV)
            (cons
              (car g$ls1$19908$1i4eWV)
              (g$set-union$19211$1i4eWV
                (cdr g$ls1$19908$1i4eWV)
                g$ls2$19909$1i4eWV)))))))
   (g$top-mark*$19213$1i4eWV g$top-mark*$23224$1i4eWV '(top))
   (g$top-marked?$19214$1i4eWV
     g$top-marked?$23225$1i4eWV
     (case-lambda
       ((g$m*$19910$1i4eWV)
        (g$memq$11827$1i4eWV 'top g$m*$19910$1i4eWV))))
   (g$gen-lexical$19215$1i4eWV
     g$gen-lexical$23226$1i4eWV
     (case-lambda
       ((g$sym$19911$1i4eWV)
        (if (g$symbol?$12668$1i4eWV g$sym$19911$1i4eWV)
          (gensym g$sym$19911$1i4eWV)
          (if (g$stx?$19252$1i4eWV g$sym$19911$1i4eWV)
            (g$gen-lexical$19215$1i4eWV
              (g$id->sym$19281$1i4eWV g$sym$19911$1i4eWV))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$19911$1i4eWV))))))
   (g$gen-global$19216$1i4eWV
     g$gen-global$23227$1i4eWV
     (case-lambda
       ((g$x$19912$1i4eWV)
        (g$gen-lexical$19215$1i4eWV g$x$19912$1i4eWV))))
   (g$gen-label$19217$1i4eWV
     g$gen-label$23228$1i4eWV
     (case-lambda ((g$_$19913$1i4eWV) (gensym))))
   (g$gen-top-level-label$19218$1i4eWV
     g$gen-top-level-label$23229$1i4eWV
     (case-lambda
       ((g$id$19914$1i4eWV g$rib$19915$1i4eWV)
        (letrec* ((g$find$19916$1i4eWV
                    (case-lambda
                      ((g$sym$19922$1i4eWV
                         g$mark*$19923$1i4eWV
                         g$sym*$19924$1i4eWV
                         g$mark**$19925$1i4eWV
                         g$label*$19926$1i4eWV)
                       (if (pair? g$sym*$19924$1i4eWV)
                         (begin
                           '#f
                           (if (if (eq? g$sym$19922$1i4eWV
                                        (car g$sym*$19924$1i4eWV))
                                 (begin
                                   '#f
                                   (g$same-marks?$19282$1i4eWV
                                     g$mark*$19923$1i4eWV
                                     (car g$mark**$19925$1i4eWV)))
                                 '#f)
                             (car g$label*$19926$1i4eWV)
                             (g$find$19916$1i4eWV
                               g$sym$19922$1i4eWV
                               g$mark*$19923$1i4eWV
                               (cdr g$sym*$19924$1i4eWV)
                               (cdr g$mark**$19925$1i4eWV)
                               (cdr g$label*$19926$1i4eWV))))
                         '#f)))))
          ((case-lambda
             ((g$sym$19917$1i4eWV g$mark*$19918$1i4eWV)
              ((case-lambda
                 ((g$sym*$19919$1i4eWV)
                  ((case-lambda
                     ((g$t$19920$1i4eWV)
                      (if g$t$19920$1i4eWV
                        ((case-lambda
                           ((g$label$19921$1i4eWV)
                            (if (g$imported-label->binding$18985$1i4eWV
                                  g$label$19921$1i4eWV)
                              (gensym)
                              g$label$19921$1i4eWV)))
                         g$t$19920$1i4eWV)
                        (gensym))))
                   (if (g$memq$11827$1i4eWV
                         g$sym$19917$1i4eWV
                         (g$rib-sym*$19228$1i4eWV g$rib$19915$1i4eWV))
                     (begin
                       '#f
                       (g$find$19916$1i4eWV
                         g$sym$19917$1i4eWV
                         g$mark*$19918$1i4eWV
                         g$sym*$19919$1i4eWV
                         (g$rib-mark**$19229$1i4eWV g$rib$19915$1i4eWV)
                         (g$rib-label*$19230$1i4eWV
                           g$rib$19915$1i4eWV)))
                     '#f))))
               (g$rib-sym*$19228$1i4eWV g$rib$19915$1i4eWV))))
           (g$id->sym$19281$1i4eWV g$id$19914$1i4eWV)
           (g$stx-mark*$19255$1i4eWV g$id$19914$1i4eWV))))))
   (g$gen-define-label+loc$19219$1i4eWV
     g$gen-define-label+loc$23230$1i4eWV
     (case-lambda
       ((g$id$19927$1i4eWV g$rib$19928$1i4eWV g$sd?$19929$1i4eWV)
        (if g$sd?$19929$1i4eWV
          (values
            (gensym)
            (g$gen-lexical$19215$1i4eWV g$id$19927$1i4eWV))
          ((case-lambda
             ((g$env$19930$1i4eWV)
              ((case-lambda
                 ((g$label$19931$1i4eWV g$locs$19932$1i4eWV)
                  (values
                    g$label$19931$1i4eWV
                    ((case-lambda
                       ((g$t$19933$1i4eWV)
                        (if g$t$19933$1i4eWV
                          (cdr g$t$19933$1i4eWV)
                          ((case-lambda
                             ((g$loc$19934$1i4eWV)
                              (begin
                                (g$set-interaction-env-locs!$19868$1i4eWV
                                  g$env$19930$1i4eWV
                                  (cons
                                    (cons
                                      g$label$19931$1i4eWV
                                      g$loc$19934$1i4eWV)
                                    g$locs$19932$1i4eWV))
                                g$loc$19934$1i4eWV)))
                           (g$gen-lexical$19215$1i4eWV
                             g$id$19927$1i4eWV)))))
                     (g$assq$11823$1i4eWV
                       g$label$19931$1i4eWV
                       g$locs$19932$1i4eWV)))))
               (g$gen-top-level-label$19218$1i4eWV
                 g$id$19927$1i4eWV
                 g$rib$19928$1i4eWV)
               (g$interaction-env-locs$19865$1i4eWV
                 g$env$19930$1i4eWV))))
           (g$top-level-context$19905$1i4eWV))))))
   (g$gen-define-label$19220$1i4eWV
     g$gen-define-label$23231$1i4eWV
     (case-lambda
       ((g$id$19935$1i4eWV g$rib$19936$1i4eWV g$sd?$19937$1i4eWV)
        (if g$sd?$19937$1i4eWV
          (gensym)
          (g$gen-top-level-label$19218$1i4eWV
            g$id$19935$1i4eWV
            g$rib$19936$1i4eWV)))))
   (g$9238$19221$1i4eWV
     g$9238$23232$1i4eWV
     (make-record-type-descriptor
       'rib
       '#f
       'g$9241$1i4eWV
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9240$19222$1i4eWV g$9240$23233$1i4eWV '#f)
   (g$9239$19223$1i4eWV
     g$9239$23234$1i4eWV
     (make-record-constructor-descriptor
       g$9238$19221$1i4eWV
       '#f
       g$9240$19222$1i4eWV))
   (g$rib?$19226$1i4eWV
     g$rib?$23235$1i4eWV
     (record-predicate g$9238$19221$1i4eWV))
   (g$make-rib$19227$1i4eWV
     g$make-rib$23236$1i4eWV
     (record-constructor g$9239$19223$1i4eWV))
   (g$rib-sym*$19228$1i4eWV
     g$rib-sym*$23237$1i4eWV
     (record-accessor g$9238$19221$1i4eWV '0))
   (g$rib-mark**$19229$1i4eWV
     g$rib-mark**$23238$1i4eWV
     (record-accessor g$9238$19221$1i4eWV '1))
   (g$rib-label*$19230$1i4eWV
     g$rib-label*$23239$1i4eWV
     (record-accessor g$9238$19221$1i4eWV '2))
   (g$rib-sealed/freq$19231$1i4eWV
     g$rib-sealed/freq$23240$1i4eWV
     (record-accessor g$9238$19221$1i4eWV '3))
   (g$rib-cache$19232$1i4eWV
     g$rib-cache$23241$1i4eWV
     (record-accessor g$9238$19221$1i4eWV '4))
   (g$set-rib-sym*!$19233$1i4eWV
     g$set-rib-sym*!$23242$1i4eWV
     (record-mutator g$9238$19221$1i4eWV '0))
   (g$set-rib-mark**!$19234$1i4eWV
     g$set-rib-mark**!$23243$1i4eWV
     (record-mutator g$9238$19221$1i4eWV '1))
   (g$set-rib-label*!$19235$1i4eWV
     g$set-rib-label*!$23244$1i4eWV
     (record-mutator g$9238$19221$1i4eWV '2))
   (g$set-rib-sealed/freq!$19236$1i4eWV
     g$set-rib-sealed/freq!$23245$1i4eWV
     (record-mutator g$9238$19221$1i4eWV '3))
   (g$set-rib-cache!$19237$1i4eWV
     g$set-rib-cache!$23246$1i4eWV
     (record-mutator g$9238$19221$1i4eWV '4))
   (g$make-empty-rib$19238$1i4eWV
     g$make-empty-rib$23247$1i4eWV
     (case-lambda (() (g$make-rib$19227$1i4eWV '() '() '() '#f '#f))))
   (g$make-cache-rib$19239$1i4eWV
     g$make-cache-rib$23248$1i4eWV
     (case-lambda
       (()
        (g$make-rib$19227$1i4eWV
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$12777$1i4eWV)))))
   (g$find-label$19240$1i4eWV
     g$find-label$23249$1i4eWV
     (case-lambda
       ((g$rib$19938$1i4eWV g$sym$19939$1i4eWV g$mark*$19940$1i4eWV)
        ((case-lambda
           ((g$ht$19941$1i4eWV)
            (if g$ht$19941$1i4eWV
              (begin
                '#f
                ((case-lambda
                   ((g$cv$19942$1i4eWV)
                    ((case-lambda
                       ((g$t$19943$1i4eWV)
                        (if g$t$19943$1i4eWV
                          (cdr g$t$19943$1i4eWV)
                          '#f)))
                     (if g$cv$19942$1i4eWV
                       (begin
                         '#f
                         (g$assp$11826$1i4eWV
                           (case-lambda
                             ((g$m$19944$1i4eWV)
                              (g$same-marks?$19282$1i4eWV
                                g$mark*$19940$1i4eWV
                                g$m$19944$1i4eWV)))
                           g$cv$19942$1i4eWV))
                       '#f))))
                 (g$hashtable-ref$12780$1i4eWV
                   g$ht$19941$1i4eWV
                   g$sym$19939$1i4eWV
                   '#f)))
              '#f)))
         (g$rib-cache$19232$1i4eWV g$rib$19938$1i4eWV)))))
   (g$extend-rib!$19241$1i4eWV
     g$extend-rib!$23250$1i4eWV
     (case-lambda
       ((g$rib$19945$1i4eWV
          g$id$19946$1i4eWV
          g$label$19947$1i4eWV
          g$sd?$19948$1i4eWV)
        (letrec* ((g$find$19949$1i4eWV
                    (case-lambda
                      ((g$sym$19958$1i4eWV
                         g$mark*$19959$1i4eWV
                         g$sym*$19960$1i4eWV
                         g$mark**$19961$1i4eWV
                         g$label*$19962$1i4eWV)
                       (if (pair? g$sym*$19960$1i4eWV)
                         (begin
                           '#f
                           (if (if (eq? g$sym$19958$1i4eWV
                                        (car g$sym*$19960$1i4eWV))
                                 (begin
                                   '#f
                                   (g$same-marks?$19282$1i4eWV
                                     g$mark*$19959$1i4eWV
                                     (car g$mark**$19961$1i4eWV)))
                                 '#f)
                             g$label*$19962$1i4eWV
                             (g$find$19949$1i4eWV
                               g$sym$19958$1i4eWV
                               g$mark*$19959$1i4eWV
                               (cdr g$sym*$19960$1i4eWV)
                               (cdr g$mark**$19961$1i4eWV)
                               (cdr g$label*$19962$1i4eWV))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$19231$1i4eWV g$rib$19945$1i4eWV)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$19945$1i4eWV)
              (void))
            ((case-lambda
               ((g$sym$19950$1i4eWV g$mark*$19951$1i4eWV)
                ((case-lambda
                   ((g$sym*$19952$1i4eWV)
                    ((case-lambda
                       ((g$t$19953$1i4eWV)
                        (if g$t$19953$1i4eWV
                          ((case-lambda
                             ((g$p$19954$1i4eWV)
                              (if (not (eq? g$label$19947$1i4eWV
                                            g$p$19954$1i4eWV))
                                (g$syntax-violation$19897$1i4eWV
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$19946$1i4eWV)
                                (void))))
                           g$t$19953$1i4eWV)
                          ((case-lambda
                             ((g$t$19955$1i4eWV)
                              (if g$t$19955$1i4eWV
                                ((case-lambda
                                   ((g$p$19956$1i4eWV)
                                    (if (not (eq? g$label$19947$1i4eWV
                                                  (car g$p$19956$1i4eWV)))
                                      (if (not g$sd?$19948$1i4eWV)
                                        (set-car!
                                          g$p$19956$1i4eWV
                                          g$label$19947$1i4eWV)
                                        (g$syntax-violation$19897$1i4eWV
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$19946$1i4eWV))
                                      (void))))
                                 g$t$19955$1i4eWV)
                                (begin
                                  (if (g$rib-cache$19232$1i4eWV
                                        g$rib$19945$1i4eWV)
                                    (g$hashtable-update!$12784$1i4eWV
                                      (g$rib-cache$19232$1i4eWV
                                        g$rib$19945$1i4eWV)
                                      g$sym$19950$1i4eWV
                                      (case-lambda
                                        ((g$e$19957$1i4eWV)
                                         (cons
                                           (cons
                                             g$mark*$19951$1i4eWV
                                             g$label$19947$1i4eWV)
                                           g$e$19957$1i4eWV)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$19233$1i4eWV
                                    g$rib$19945$1i4eWV
                                    (cons
                                      g$sym$19950$1i4eWV
                                      g$sym*$19952$1i4eWV))
                                  (g$set-rib-mark**!$19234$1i4eWV
                                    g$rib$19945$1i4eWV
                                    (cons
                                      g$mark*$19951$1i4eWV
                                      (g$rib-mark**$19229$1i4eWV
                                        g$rib$19945$1i4eWV)))
                                  (g$set-rib-label*!$19235$1i4eWV
                                    g$rib$19945$1i4eWV
                                    (cons
                                      g$label$19947$1i4eWV
                                      (g$rib-label*$19230$1i4eWV
                                        g$rib$19945$1i4eWV)))))))
                           (if (g$memq$11827$1i4eWV
                                 g$sym$19950$1i4eWV
                                 (g$rib-sym*$19228$1i4eWV
                                   g$rib$19945$1i4eWV))
                             (begin
                               '#f
                               (g$find$19949$1i4eWV
                                 g$sym$19950$1i4eWV
                                 g$mark*$19951$1i4eWV
                                 g$sym*$19952$1i4eWV
                                 (g$rib-mark**$19229$1i4eWV
                                   g$rib$19945$1i4eWV)
                                 (g$rib-label*$19230$1i4eWV
                                   g$rib$19945$1i4eWV)))
                             '#f)))))
                     (g$find-label$19240$1i4eWV
                       g$rib$19945$1i4eWV
                       g$sym$19950$1i4eWV
                       g$mark*$19951$1i4eWV))))
                 (g$rib-sym*$19228$1i4eWV g$rib$19945$1i4eWV))))
             (g$id->sym$19281$1i4eWV g$id$19946$1i4eWV)
             (g$stx-mark*$19255$1i4eWV g$id$19946$1i4eWV)))))))
   (g$extend-rib/nc!$19242$1i4eWV
     g$extend-rib/nc!$23251$1i4eWV
     (case-lambda
       ((g$rib$19963$1i4eWV g$id$19964$1i4eWV g$label$19965$1i4eWV)
        ((case-lambda
           ((g$sym$19966$1i4eWV g$mark*$19967$1i4eWV)
            ((case-lambda
               ((g$sym*$19968$1i4eWV)
                (begin
                  (if (g$rib-cache$19232$1i4eWV g$rib$19963$1i4eWV)
                    (g$hashtable-update!$12784$1i4eWV
                      (g$rib-cache$19232$1i4eWV g$rib$19963$1i4eWV)
                      g$sym$19966$1i4eWV
                      (case-lambda
                        ((g$e$19969$1i4eWV)
                         (cons
                           (cons
                             g$mark*$19967$1i4eWV
                             g$label$19965$1i4eWV)
                           g$e$19969$1i4eWV)))
                      '())
                    (void))
                  (g$set-rib-sym*!$19233$1i4eWV
                    g$rib$19963$1i4eWV
                    (cons g$sym$19966$1i4eWV g$sym*$19968$1i4eWV))
                  (g$set-rib-mark**!$19234$1i4eWV
                    g$rib$19963$1i4eWV
                    (cons
                      g$mark*$19967$1i4eWV
                      (g$rib-mark**$19229$1i4eWV g$rib$19963$1i4eWV)))
                  (g$set-rib-label*!$19235$1i4eWV
                    g$rib$19963$1i4eWV
                    (cons
                      g$label$19965$1i4eWV
                      (g$rib-label*$19230$1i4eWV
                        g$rib$19963$1i4eWV))))))
             (g$rib-sym*$19228$1i4eWV g$rib$19963$1i4eWV))))
         (g$id->sym$19281$1i4eWV g$id$19964$1i4eWV)
         (g$stx-mark*$19255$1i4eWV g$id$19964$1i4eWV)))))
   (g$make-rib-map$19243$1i4eWV
     g$make-rib-map$23252$1i4eWV
     (case-lambda
       ((g$sym*$19970$1i4eWV)
        ((case-lambda
           ((g$ht$19971$1i4eWV)
            ((letrec ((g$f$19972$1i4eWV
                        (case-lambda
                          ((g$i$19973$1i4eWV g$sym*$19974$1i4eWV)
                           (if (null? g$sym*$19974$1i4eWV)
                             g$ht$19971$1i4eWV
                             (begin
                               (g$hashtable-update!$12784$1i4eWV
                                 g$ht$19971$1i4eWV
                                 (car g$sym*$19974$1i4eWV)
                                 (case-lambda
                                   ((g$x$19975$1i4eWV)
                                    (cons
                                      g$i$19973$1i4eWV
                                      g$x$19975$1i4eWV)))
                                 '())
                               (g$f$19972$1i4eWV
                                 (+ g$i$19973$1i4eWV '1)
                                 (cdr g$sym*$19974$1i4eWV))))))))
               g$f$19972$1i4eWV)
             '0
             g$sym*$19970$1i4eWV)))
         (g$make-eq-hashtable$12777$1i4eWV)))))
   (g$seal-rib!$19244$1i4eWV
     g$seal-rib!$23253$1i4eWV
     (case-lambda
       ((g$rib$19976$1i4eWV)
        ((case-lambda
           ((g$sym*$19977$1i4eWV)
            (if (not (null? g$sym*$19977$1i4eWV))
              (begin
                (g$set-rib-sym*!$19233$1i4eWV
                  g$rib$19976$1i4eWV
                  (g$list->vector$12678$1i4eWV g$sym*$19977$1i4eWV))
                (g$set-rib-mark**!$19234$1i4eWV
                  g$rib$19976$1i4eWV
                  (g$list->vector$12678$1i4eWV
                    (g$rib-mark**$19229$1i4eWV g$rib$19976$1i4eWV)))
                (g$set-rib-label*!$19235$1i4eWV
                  g$rib$19976$1i4eWV
                  (g$list->vector$12678$1i4eWV
                    (g$rib-label*$19230$1i4eWV g$rib$19976$1i4eWV)))
                (g$set-rib-sealed/freq!$19236$1i4eWV
                  g$rib$19976$1i4eWV
                  (g$make-rib-map$19243$1i4eWV g$sym*$19977$1i4eWV)))
              (void))))
         (g$rib-sym*$19228$1i4eWV g$rib$19976$1i4eWV)))))
   (g$unseal-rib!$19245$1i4eWV
     g$unseal-rib!$23254$1i4eWV
     (case-lambda
       ((g$rib$19978$1i4eWV)
        (if (g$rib-sealed/freq$19231$1i4eWV g$rib$19978$1i4eWV)
          (begin
            (g$set-rib-sealed/freq!$19236$1i4eWV g$rib$19978$1i4eWV '#f)
            (g$set-rib-sym*!$19233$1i4eWV
              g$rib$19978$1i4eWV
              (vector->list
                (g$rib-sym*$19228$1i4eWV g$rib$19978$1i4eWV)))
            (g$set-rib-mark**!$19234$1i4eWV
              g$rib$19978$1i4eWV
              (vector->list
                (g$rib-mark**$19229$1i4eWV g$rib$19978$1i4eWV)))
            (g$set-rib-label*!$19235$1i4eWV
              g$rib$19978$1i4eWV
              (vector->list
                (g$rib-label*$19230$1i4eWV g$rib$19978$1i4eWV))))
          (void)))))
   (g$make-full-rib$19246$1i4eWV
     g$make-full-rib$23255$1i4eWV
     (case-lambda
       ((g$id*$19979$1i4eWV g$label*$19980$1i4eWV)
        ((case-lambda
           ((g$r$19981$1i4eWV)
            (begin
              (g$seal-rib!$19244$1i4eWV g$r$19981$1i4eWV)
              g$r$19981$1i4eWV)))
         (g$make-rib$19227$1i4eWV
           (g$map$11835$1i4eWV
             g$id->sym$19281$1i4eWV
             g$id*$19979$1i4eWV)
           (g$map$11835$1i4eWV
             g$stx-mark*$19255$1i4eWV
             g$id*$19979$1i4eWV)
           g$label*$19980$1i4eWV
           '#f
           '#f)))))
   (g$9267$19247$1i4eWV
     g$9267$23256$1i4eWV
     (make-record-type-descriptor
       'stx
       '#f
       'g$9270$1i4eWV
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$9269$19248$1i4eWV g$9269$23257$1i4eWV '#f)
   (g$9268$19249$1i4eWV
     g$9268$23258$1i4eWV
     (make-record-constructor-descriptor
       g$9267$19247$1i4eWV
       '#f
       g$9269$19248$1i4eWV))
   (g$stx?$19252$1i4eWV
     g$stx?$23259$1i4eWV
     (record-predicate g$9267$19247$1i4eWV))
   (g$make-stx$19253$1i4eWV
     g$make-stx$23260$1i4eWV
     (record-constructor g$9268$19249$1i4eWV))
   (g$stx-expr$19254$1i4eWV
     g$stx-expr$23261$1i4eWV
     (record-accessor g$9267$19247$1i4eWV '0))
   (g$stx-mark*$19255$1i4eWV
     g$stx-mark*$23262$1i4eWV
     (record-accessor g$9267$19247$1i4eWV '1))
   (g$stx-subst*$19256$1i4eWV
     g$stx-subst*$23263$1i4eWV
     (record-accessor g$9267$19247$1i4eWV '2))
   (g$stx-ae*$19257$1i4eWV
     g$stx-ae*$23264$1i4eWV
     (record-accessor g$9267$19247$1i4eWV '3))
   (g$set-stx-expr!$19258$1i4eWV
     g$set-stx-expr!$23265$1i4eWV
     (record-mutator g$9267$19247$1i4eWV '0))
   (g$set-stx-mark*!$19259$1i4eWV
     g$set-stx-mark*!$23266$1i4eWV
     (record-mutator g$9267$19247$1i4eWV '1))
   (g$set-stx-subst*!$19260$1i4eWV
     g$set-stx-subst*!$23267$1i4eWV
     (record-mutator g$9267$19247$1i4eWV '2))
   (g$set-stx-ae*!$19261$1i4eWV
     g$set-stx-ae*!$23268$1i4eWV
     (record-mutator g$9267$19247$1i4eWV '3))
   (g$rp$19262$1i4eWV
     g$rp$23269$1i4eWV
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$19982$1i4eWV g$p$19983$1i4eWV g$wr$19984$1i4eWV)
          (begin
            (display '"#<syntax " g$p$19983$1i4eWV)
            (write
              (g$stx->datum$19291$1i4eWV g$x$19982$1i4eWV)
              g$p$19983$1i4eWV)
            ((case-lambda
               ((g$expr$19985$1i4eWV)
                (if (annotation? g$expr$19985$1i4eWV)
                  ((case-lambda
                     ((g$src$19986$1i4eWV)
                      (if (pair? g$src$19986$1i4eWV)
                        (begin
                          (display '" (" g$p$19983$1i4eWV)
                          (display
                            (cdr g$src$19986$1i4eWV)
                            g$p$19983$1i4eWV)
                          (display '" of " g$p$19983$1i4eWV)
                          (display
                            (car g$src$19986$1i4eWV)
                            g$p$19983$1i4eWV)
                          (display '")" g$p$19983$1i4eWV))
                        (void))))
                   (annotation-source g$expr$19985$1i4eWV))
                  (void))))
             (g$stx-expr$19254$1i4eWV g$x$19982$1i4eWV))
            (display '">" g$p$19983$1i4eWV))))))
   (g$datum->stx$19263$1i4eWV
     g$datum->stx$23270$1i4eWV
     (case-lambda
       ((g$id$19987$1i4eWV g$datum$19988$1i4eWV)
        (g$make-stx$19253$1i4eWV
          g$datum$19988$1i4eWV
          (g$stx-mark*$19255$1i4eWV g$id$19987$1i4eWV)
          (g$stx-subst*$19256$1i4eWV g$id$19987$1i4eWV)
          (g$stx-ae*$19257$1i4eWV g$id$19987$1i4eWV)))))
   (g$gen-mark$19264$1i4eWV
     g$gen-mark$23271$1i4eWV
     (case-lambda (() (string '#\m))))
   (g$anti-mark$19265$1i4eWV g$anti-mark$23272$1i4eWV '#f)
   (g$anti-mark?$19266$1i4eWV g$anti-mark?$23273$1i4eWV not)
   (g$join-wraps$19267$1i4eWV
     g$join-wraps$23274$1i4eWV
     (case-lambda
       ((g$m1*$19989$1i4eWV
          g$s1*$19990$1i4eWV
          g$ae1*$19991$1i4eWV
          g$e$19992$1i4eWV)
        (letrec* ((g$cancel$19993$1i4eWV
                    (case-lambda
                      ((g$ls1$19997$1i4eWV g$ls2$19998$1i4eWV)
                       ((letrec ((g$f$19999$1i4eWV
                                   (case-lambda
                                     ((g$x$20000$1i4eWV
                                        g$ls1$20001$1i4eWV)
                                      (if (null? g$ls1$20001$1i4eWV)
                                        (cdr g$ls2$19998$1i4eWV)
                                        (cons
                                          g$x$20000$1i4eWV
                                          (g$f$19999$1i4eWV
                                            (car g$ls1$20001$1i4eWV)
                                            (cdr g$ls1$20001$1i4eWV))))))))
                          g$f$19999$1i4eWV)
                        (car g$ls1$19997$1i4eWV)
                        (cdr g$ls1$19997$1i4eWV))))))
          ((case-lambda
             ((g$m2*$19994$1i4eWV
                g$s2*$19995$1i4eWV
                g$ae2*$19996$1i4eWV)
              (if (if (not (null? g$m1*$19989$1i4eWV))
                    (if (not (null? g$m2*$19994$1i4eWV))
                      (begin
                        '#f
                        (g$anti-mark?$19266$1i4eWV
                          (car g$m2*$19994$1i4eWV)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$19993$1i4eWV
                    g$m1*$19989$1i4eWV
                    g$m2*$19994$1i4eWV)
                  (g$cancel$19993$1i4eWV
                    g$s1*$19990$1i4eWV
                    g$s2*$19995$1i4eWV)
                  (g$cancel$19993$1i4eWV
                    g$ae1*$19991$1i4eWV
                    g$ae2*$19996$1i4eWV))
                (values
                  (append g$m1*$19989$1i4eWV g$m2*$19994$1i4eWV)
                  (append g$s1*$19990$1i4eWV g$s2*$19995$1i4eWV)
                  (append g$ae1*$19991$1i4eWV g$ae2*$19996$1i4eWV)))))
           (g$stx-mark*$19255$1i4eWV g$e$19992$1i4eWV)
           (g$stx-subst*$19256$1i4eWV g$e$19992$1i4eWV)
           (g$stx-ae*$19257$1i4eWV g$e$19992$1i4eWV))))))
   (g$mkstx$19268$1i4eWV
     g$mkstx$23275$1i4eWV
     (case-lambda
       ((g$e$20002$1i4eWV
          g$m*$20003$1i4eWV
          g$s*$20004$1i4eWV
          g$ae*$20005$1i4eWV)
        (if (if (g$stx?$19252$1i4eWV g$e$20002$1i4eWV)
              (begin
                '#f
                (not (g$top-marked?$19214$1i4eWV g$m*$20003$1i4eWV)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$19267$1i4eWV
                 g$m*$20003$1i4eWV
                 g$s*$20004$1i4eWV
                 g$ae*$20005$1i4eWV
                 g$e$20002$1i4eWV)))
            (case-lambda
              ((g$m*$20009$1i4eWV g$s*$20010$1i4eWV g$ae*$20011$1i4eWV)
               ((case-lambda
                  ((g$ae*$20012$1i4eWV
                     g$s*$20013$1i4eWV
                     g$m*$20014$1i4eWV)
                   (g$make-stx$19253$1i4eWV
                     (g$stx-expr$19254$1i4eWV g$e$20002$1i4eWV)
                     g$m*$20014$1i4eWV
                     g$s*$20013$1i4eWV
                     g$ae*$20012$1i4eWV)))
                g$ae*$20011$1i4eWV
                g$s*$20010$1i4eWV
                g$m*$20009$1i4eWV))))
          (g$make-stx$19253$1i4eWV
            g$e$20002$1i4eWV
            g$m*$20003$1i4eWV
            g$s*$20004$1i4eWV
            g$ae*$20005$1i4eWV)))))
   (g$add-mark$19269$1i4eWV
     g$add-mark$23276$1i4eWV
     (case-lambda
       ((g$m$20015$1i4eWV g$e$20016$1i4eWV g$ae$20017$1i4eWV)
        (g$mkstx$19268$1i4eWV
          g$e$20016$1i4eWV
          (list g$m$20015$1i4eWV)
          '(shift)
          (list g$ae$20017$1i4eWV)))))
   (g$add-subst$19270$1i4eWV
     g$add-subst$23277$1i4eWV
     (case-lambda
       ((g$subst$20018$1i4eWV g$e$20019$1i4eWV)
        (g$mkstx$19268$1i4eWV
          g$e$20019$1i4eWV
          '()
          (list g$subst$20018$1i4eWV)
          '()))))
   (g$syntax-kind?$19271$1i4eWV
     g$syntax-kind?$23278$1i4eWV
     (case-lambda
       ((g$x$20020$1i4eWV g$p?$20021$1i4eWV)
        (if (g$stx?$19252$1i4eWV g$x$20020$1i4eWV)
          (g$syntax-kind?$19271$1i4eWV
            (g$stx-expr$19254$1i4eWV g$x$20020$1i4eWV)
            g$p?$20021$1i4eWV)
          (if (annotation? g$x$20020$1i4eWV)
            (g$syntax-kind?$19271$1i4eWV
              (annotation-expression g$x$20020$1i4eWV)
              g$p?$20021$1i4eWV)
            (g$p?$20021$1i4eWV g$x$20020$1i4eWV))))))
   (g$syntax-vector->list$19272$1i4eWV
     g$syntax-vector->list$23279$1i4eWV
     (case-lambda
       ((g$x$20022$1i4eWV)
        (if (g$stx?$19252$1i4eWV g$x$20022$1i4eWV)
          ((case-lambda
             ((g$ls$20023$1i4eWV
                g$m*$20024$1i4eWV
                g$s*$20025$1i4eWV
                g$ae*$20026$1i4eWV)
              (g$map$11835$1i4eWV
                (case-lambda
                  ((g$x$20027$1i4eWV)
                   (g$mkstx$19268$1i4eWV
                     g$x$20027$1i4eWV
                     g$m*$20024$1i4eWV
                     g$s*$20025$1i4eWV
                     g$ae*$20026$1i4eWV)))
                g$ls$20023$1i4eWV)))
           (g$syntax-vector->list$19272$1i4eWV
             (g$stx-expr$19254$1i4eWV g$x$20022$1i4eWV))
           (g$stx-mark*$19255$1i4eWV g$x$20022$1i4eWV)
           (g$stx-subst*$19256$1i4eWV g$x$20022$1i4eWV)
           (g$stx-ae*$19257$1i4eWV g$x$20022$1i4eWV))
          (if (annotation? g$x$20022$1i4eWV)
            (g$syntax-vector->list$19272$1i4eWV
              (annotation-expression g$x$20022$1i4eWV))
            (if (g$vector?$12666$1i4eWV g$x$20022$1i4eWV)
              (vector->list g$x$20022$1i4eWV)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$20022$1i4eWV)))))))
   (g$syntax-pair?$19273$1i4eWV
     g$syntax-pair?$23280$1i4eWV
     (case-lambda
       ((g$x$20028$1i4eWV)
        (g$syntax-kind?$19271$1i4eWV g$x$20028$1i4eWV pair?))))
   (g$syntax-vector?$19274$1i4eWV
     g$syntax-vector?$23281$1i4eWV
     (case-lambda
       ((g$x$20029$1i4eWV)
        (g$syntax-kind?$19271$1i4eWV
          g$x$20029$1i4eWV
          g$vector?$12666$1i4eWV))))
   (g$syntax-null?$19275$1i4eWV
     g$syntax-null?$23282$1i4eWV
     (case-lambda
       ((g$x$20030$1i4eWV)
        (g$syntax-kind?$19271$1i4eWV g$x$20030$1i4eWV null?))))
   (g$syntax-list?$19276$1i4eWV
     g$syntax-list?$23283$1i4eWV
     (case-lambda
       ((g$x$20031$1i4eWV)
        ((case-lambda
           ((g$t$20032$1i4eWV)
            (if g$t$20032$1i4eWV
              g$t$20032$1i4eWV
              (begin
                '#f
                (if (g$syntax-pair?$19273$1i4eWV g$x$20031$1i4eWV)
                  (begin
                    '#f
                    (g$syntax-list?$19276$1i4eWV
                      (g$syntax-cdr$19278$1i4eWV g$x$20031$1i4eWV)))
                  '#f)))))
         (g$syntax-null?$19275$1i4eWV g$x$20031$1i4eWV)))))
   (g$syntax-car$19277$1i4eWV
     g$syntax-car$23284$1i4eWV
     (case-lambda
       ((g$x$20033$1i4eWV)
        (if (g$stx?$19252$1i4eWV g$x$20033$1i4eWV)
          (g$mkstx$19268$1i4eWV
            (g$syntax-car$19277$1i4eWV
              (g$stx-expr$19254$1i4eWV g$x$20033$1i4eWV))
            (g$stx-mark*$19255$1i4eWV g$x$20033$1i4eWV)
            (g$stx-subst*$19256$1i4eWV g$x$20033$1i4eWV)
            (g$stx-ae*$19257$1i4eWV g$x$20033$1i4eWV))
          (if (annotation? g$x$20033$1i4eWV)
            (g$syntax-car$19277$1i4eWV
              (annotation-expression g$x$20033$1i4eWV))
            (if (pair? g$x$20033$1i4eWV)
              (car g$x$20033$1i4eWV)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$20033$1i4eWV)))))))
   (g$syntax-cdr$19278$1i4eWV
     g$syntax-cdr$23285$1i4eWV
     (case-lambda
       ((g$x$20034$1i4eWV)
        (if (g$stx?$19252$1i4eWV g$x$20034$1i4eWV)
          (g$mkstx$19268$1i4eWV
            (g$syntax-cdr$19278$1i4eWV
              (g$stx-expr$19254$1i4eWV g$x$20034$1i4eWV))
            (g$stx-mark*$19255$1i4eWV g$x$20034$1i4eWV)
            (g$stx-subst*$19256$1i4eWV g$x$20034$1i4eWV)
            (g$stx-ae*$19257$1i4eWV g$x$20034$1i4eWV))
          (if (annotation? g$x$20034$1i4eWV)
            (g$syntax-cdr$19278$1i4eWV
              (annotation-expression g$x$20034$1i4eWV))
            (if (pair? g$x$20034$1i4eWV)
              (cdr g$x$20034$1i4eWV)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$20034$1i4eWV)))))))
   (g$syntax->list$19279$1i4eWV
     g$syntax->list$23286$1i4eWV
     (case-lambda
       ((g$x$20035$1i4eWV)
        (if (g$syntax-pair?$19273$1i4eWV g$x$20035$1i4eWV)
          (cons
            (g$syntax-car$19277$1i4eWV g$x$20035$1i4eWV)
            (g$syntax->list$19279$1i4eWV
              (g$syntax-cdr$19278$1i4eWV g$x$20035$1i4eWV)))
          (if (g$syntax-null?$19275$1i4eWV g$x$20035$1i4eWV)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$20035$1i4eWV))))))
   (g$id?$19280$1i4eWV
     g$id?$23287$1i4eWV
     (case-lambda
       ((g$x$20036$1i4eWV)
        (if (g$stx?$19252$1i4eWV g$x$20036$1i4eWV)
          (begin
            '#f
            ((case-lambda
               ((g$expr$20037$1i4eWV)
                (g$symbol?$12668$1i4eWV
                  (if (annotation? g$expr$20037$1i4eWV)
                    (annotation-stripped g$expr$20037$1i4eWV)
                    g$expr$20037$1i4eWV))))
             (g$stx-expr$19254$1i4eWV g$x$20036$1i4eWV)))
          '#f))))
   (g$id->sym$19281$1i4eWV
     g$id->sym$23288$1i4eWV
     (case-lambda
       ((g$x$20038$1i4eWV)
        (begin
          (if (not (g$stx?$19252$1i4eWV g$x$20038$1i4eWV))
            (error
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$20038$1i4eWV)
            (void))
          ((case-lambda
             ((g$expr$20039$1i4eWV)
              ((case-lambda
                 ((g$sym$20040$1i4eWV)
                  (if (g$symbol?$12668$1i4eWV g$sym$20040$1i4eWV)
                    g$sym$20040$1i4eWV
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$20038$1i4eWV))))
               (if (annotation? g$expr$20039$1i4eWV)
                 (annotation-stripped g$expr$20039$1i4eWV)
                 g$expr$20039$1i4eWV))))
           (g$stx-expr$19254$1i4eWV g$x$20038$1i4eWV))))))
   (g$same-marks?$19282$1i4eWV
     g$same-marks?$23289$1i4eWV
     (case-lambda
       ((g$x$20041$1i4eWV g$y$20042$1i4eWV)
        ((case-lambda
           ((g$t$20043$1i4eWV)
            (if g$t$20043$1i4eWV
              g$t$20043$1i4eWV
              (begin
                '#f
                (if (pair? g$x$20041$1i4eWV)
                  (if (pair? g$y$20042$1i4eWV)
                    (if (eq? (car g$x$20041$1i4eWV)
                             (car g$y$20042$1i4eWV))
                      (begin
                        '#f
                        (g$same-marks?$19282$1i4eWV
                          (cdr g$x$20041$1i4eWV)
                          (cdr g$y$20042$1i4eWV)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$20041$1i4eWV)
           (begin '#f (null? g$y$20042$1i4eWV))
           '#f)))))
   (g$bound-id=?$19283$1i4eWV
     g$bound-id=?$23290$1i4eWV
     (case-lambda
       ((g$x$20044$1i4eWV g$y$20045$1i4eWV)
        (if (eq? (g$id->sym$19281$1i4eWV g$x$20044$1i4eWV)
                 (g$id->sym$19281$1i4eWV g$y$20045$1i4eWV))
          (begin
            '#f
            (g$same-marks?$19282$1i4eWV
              (g$stx-mark*$19255$1i4eWV g$x$20044$1i4eWV)
              (g$stx-mark*$19255$1i4eWV g$y$20045$1i4eWV)))
          '#f))))
   (g$free-id=?$19284$1i4eWV
     g$free-id=?$23291$1i4eWV
     (case-lambda
       ((g$i$20046$1i4eWV g$j$20047$1i4eWV)
        ((case-lambda
           ((g$t0$20048$1i4eWV g$t1$20049$1i4eWV)
            (if ((case-lambda
                   ((g$t$20050$1i4eWV)
                    (if g$t$20050$1i4eWV
                      g$t$20050$1i4eWV
                      (begin '#f g$t1$20049$1i4eWV))))
                 g$t0$20048$1i4eWV)
              (eq? g$t0$20048$1i4eWV g$t1$20049$1i4eWV)
              (eq? (g$id->sym$19281$1i4eWV g$i$20046$1i4eWV)
                   (g$id->sym$19281$1i4eWV g$j$20047$1i4eWV)))))
         (g$id->real-label$19294$1i4eWV g$i$20046$1i4eWV)
         (g$id->real-label$19294$1i4eWV g$j$20047$1i4eWV)))))
   (g$valid-bound-ids?$19285$1i4eWV
     g$valid-bound-ids?$23292$1i4eWV
     (case-lambda
       ((g$id*$20051$1i4eWV)
        (if (g$for-all$11833$1i4eWV
              g$id?$19280$1i4eWV
              g$id*$20051$1i4eWV)
          (begin
            '#f
            (g$distinct-bound-ids?$19286$1i4eWV g$id*$20051$1i4eWV))
          '#f))))
   (g$distinct-bound-ids?$19286$1i4eWV
     g$distinct-bound-ids?$23293$1i4eWV
     (case-lambda
       ((g$id*$20052$1i4eWV)
        ((case-lambda
           ((g$t$20053$1i4eWV)
            (if g$t$20053$1i4eWV
              g$t$20053$1i4eWV
              (begin
                '#f
                (if (not (g$bound-id-member?$19287$1i4eWV
                           (car g$id*$20052$1i4eWV)
                           (cdr g$id*$20052$1i4eWV)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$19286$1i4eWV
                      (cdr g$id*$20052$1i4eWV)))
                  '#f)))))
         (null? g$id*$20052$1i4eWV)))))
   (g$bound-id-member?$19287$1i4eWV
     g$bound-id-member?$23294$1i4eWV
     (case-lambda
       ((g$id$20054$1i4eWV g$id*$20055$1i4eWV)
        (if (pair? g$id*$20055$1i4eWV)
          (begin
            '#f
            ((case-lambda
               ((g$t$20056$1i4eWV)
                (if g$t$20056$1i4eWV
                  g$t$20056$1i4eWV
                  (begin
                    '#f
                    (g$bound-id-member?$19287$1i4eWV
                      g$id$20054$1i4eWV
                      (cdr g$id*$20055$1i4eWV))))))
             (g$bound-id=?$19283$1i4eWV
               g$id$20054$1i4eWV
               (car g$id*$20055$1i4eWV))))
          '#f))))
   (g$self-evaluating?$19288$1i4eWV
     g$self-evaluating?$23295$1i4eWV
     (case-lambda
       ((g$x$20057$1i4eWV)
        ((case-lambda
           ((g$t$20058$1i4eWV)
            (if g$t$20058$1i4eWV
              g$t$20058$1i4eWV
              ((case-lambda
                 ((g$t$20059$1i4eWV)
                  (if g$t$20059$1i4eWV
                    g$t$20059$1i4eWV
                    ((case-lambda
                       ((g$t$20060$1i4eWV)
                        (if g$t$20060$1i4eWV
                          g$t$20060$1i4eWV
                          ((case-lambda
                             ((g$t$20061$1i4eWV)
                              (if g$t$20061$1i4eWV
                                g$t$20061$1i4eWV
                                (begin
                                  '#f
                                  (g$bytevector?$12667$1i4eWV
                                    g$x$20057$1i4eWV)))))
                           (g$boolean?$12669$1i4eWV
                             g$x$20057$1i4eWV)))))
                     (g$char?$12665$1i4eWV g$x$20057$1i4eWV)))))
               (string? g$x$20057$1i4eWV)))))
         (number? g$x$20057$1i4eWV)))))
   (g$strip-annotations$19289$1i4eWV
     g$strip-annotations$23296$1i4eWV
     (case-lambda
       ((g$x$20062$1i4eWV)
        (if (pair? g$x$20062$1i4eWV)
          (cons
            (g$strip-annotations$19289$1i4eWV (car g$x$20062$1i4eWV))
            (g$strip-annotations$19289$1i4eWV (cdr g$x$20062$1i4eWV)))
          (if (g$vector?$12666$1i4eWV g$x$20062$1i4eWV)
            (g$vector-map$12737$1i4eWV
              g$strip-annotations$19289$1i4eWV
              g$x$20062$1i4eWV)
            (if (annotation? g$x$20062$1i4eWV)
              (annotation-stripped g$x$20062$1i4eWV)
              g$x$20062$1i4eWV))))))
   (g$strip$19290$1i4eWV
     g$strip$23297$1i4eWV
     (case-lambda
       ((g$x$20063$1i4eWV g$m*$20064$1i4eWV)
        (if (g$top-marked?$19214$1i4eWV g$m*$20064$1i4eWV)
          (if ((case-lambda
                 ((g$t$20065$1i4eWV)
                  (if g$t$20065$1i4eWV
                    g$t$20065$1i4eWV
                    ((case-lambda
                       ((g$t$20066$1i4eWV)
                        (if g$t$20066$1i4eWV
                          g$t$20066$1i4eWV
                          (begin
                            '#f
                            (if (g$vector?$12666$1i4eWV
                                  g$x$20063$1i4eWV)
                              (if (> (vector-length g$x$20063$1i4eWV)
                                     '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$12680$1i4eWV
                                      g$x$20063$1i4eWV
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$20063$1i4eWV)
                       (begin '#f (annotation? (car g$x$20063$1i4eWV)))
                       '#f)))))
               (annotation? g$x$20063$1i4eWV))
            (g$strip-annotations$19289$1i4eWV g$x$20063$1i4eWV)
            g$x$20063$1i4eWV)
          ((letrec ((g$f$20067$1i4eWV
                      (case-lambda
                        ((g$x$20068$1i4eWV)
                         (if (g$stx?$19252$1i4eWV g$x$20068$1i4eWV)
                           (g$strip$19290$1i4eWV
                             (g$stx-expr$19254$1i4eWV g$x$20068$1i4eWV)
                             (g$stx-mark*$19255$1i4eWV
                               g$x$20068$1i4eWV))
                           (if (annotation? g$x$20068$1i4eWV)
                             (annotation-stripped g$x$20068$1i4eWV)
                             (if (pair? g$x$20068$1i4eWV)
                               ((case-lambda
                                  ((g$a$20069$1i4eWV g$d$20070$1i4eWV)
                                   (if (if (eq? g$a$20069$1i4eWV
                                                (car g$x$20068$1i4eWV))
                                         (begin
                                           '#f
                                           (eq? g$d$20070$1i4eWV
                                                (cdr g$x$20068$1i4eWV)))
                                         '#f)
                                     g$x$20068$1i4eWV
                                     (cons
                                       g$a$20069$1i4eWV
                                       g$d$20070$1i4eWV))))
                                (g$f$20067$1i4eWV
                                  (car g$x$20068$1i4eWV))
                                (g$f$20067$1i4eWV
                                  (cdr g$x$20068$1i4eWV)))
                               (if (g$vector?$12666$1i4eWV
                                     g$x$20068$1i4eWV)
                                 ((case-lambda
                                    ((g$old$20071$1i4eWV)
                                     ((case-lambda
                                        ((g$new$20072$1i4eWV)
                                         (if (g$for-all$11833$1i4eWV
                                               eq?
                                               g$old$20071$1i4eWV
                                               g$new$20072$1i4eWV)
                                           g$x$20068$1i4eWV
                                           (g$list->vector$12678$1i4eWV
                                             g$new$20072$1i4eWV))))
                                      (g$map$11835$1i4eWV
                                        g$f$20067$1i4eWV
                                        g$old$20071$1i4eWV))))
                                  (vector->list g$x$20068$1i4eWV))
                                 g$x$20068$1i4eWV))))))))
             g$f$20067$1i4eWV)
           g$x$20063$1i4eWV)))))
   (g$stx->datum$19291$1i4eWV
     g$stx->datum$23298$1i4eWV
     (case-lambda
       ((g$x$20073$1i4eWV)
        (g$strip$19290$1i4eWV g$x$20073$1i4eWV '()))))
   (g$same-marks*?$19292$1i4eWV
     g$same-marks*?$23299$1i4eWV
     (case-lambda
       ((g$mark*$20074$1i4eWV g$mark**$20075$1i4eWV g$si$20076$1i4eWV)
        (if (null? g$si$20076$1i4eWV)
          '#f
          (if (g$same-marks?$19282$1i4eWV
                g$mark*$20074$1i4eWV
                (g$vector-ref$12680$1i4eWV
                  g$mark**$20075$1i4eWV
                  (car g$si$20076$1i4eWV)))
            (car g$si$20076$1i4eWV)
            (g$same-marks*?$19292$1i4eWV
              g$mark*$20074$1i4eWV
              g$mark**$20075$1i4eWV
              (cdr g$si$20076$1i4eWV)))))))
   (g$id->label$19293$1i4eWV
     g$id->label$23300$1i4eWV
     (case-lambda
       ((g$id$20077$1i4eWV)
        ((case-lambda
           ((g$t$20078$1i4eWV)
            (if g$t$20078$1i4eWV
              g$t$20078$1i4eWV
              (begin
                '#f
                ((case-lambda
                   ((g$t$20079$1i4eWV)
                    (if g$t$20079$1i4eWV
                      ((case-lambda
                         ((g$env$20080$1i4eWV)
                          ((case-lambda
                             ((g$rib$20081$1i4eWV)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$19219$1i4eWV
                                     g$id$20077$1i4eWV
                                     g$rib$20081$1i4eWV
                                     '#f)))
                                (case-lambda
                                  ((g$lab$20084$1i4eWV
                                     g$_loc$20085$1i4eWV)
                                   ((case-lambda
                                      ((g$_loc$20086$1i4eWV
                                         g$lab$20087$1i4eWV)
                                       (begin
                                         (g$extend-rib!$19241$1i4eWV
                                           g$rib$20081$1i4eWV
                                           g$id$20077$1i4eWV
                                           g$lab$20087$1i4eWV
                                           '#t)
                                         g$lab$20087$1i4eWV)))
                                    g$_loc$20085$1i4eWV
                                    g$lab$20084$1i4eWV))))))
                           (g$interaction-env-rib$19863$1i4eWV
                             g$env$20080$1i4eWV))))
                       g$t$20079$1i4eWV)
                      '#f)))
                 (g$top-level-context$19905$1i4eWV))))))
         (g$id->real-label$19294$1i4eWV g$id$20077$1i4eWV)))))
   (g$id->real-label$19294$1i4eWV
     g$id->real-label$23301$1i4eWV
     (case-lambda
       ((g$id$20088$1i4eWV)
        ((case-lambda
           ((g$sym$20089$1i4eWV)
            ((letrec ((g$search$20090$1i4eWV
                        (case-lambda
                          ((g$subst*$20091$1i4eWV g$mark*$20092$1i4eWV)
                           (if (null? g$subst*$20091$1i4eWV)
                             '#f
                             (if (eq? (car g$subst*$20091$1i4eWV)
                                      'shift)
                               (g$search$20090$1i4eWV
                                 (cdr g$subst*$20091$1i4eWV)
                                 (cdr g$mark*$20092$1i4eWV))
                               ((case-lambda
                                  ((g$rib$20093$1i4eWV)
                                   ((case-lambda
                                      ((g$t$20094$1i4eWV)
                                       (if g$t$20094$1i4eWV
                                         ((case-lambda
                                            ((g$ht$20095$1i4eWV)
                                             ((case-lambda
                                                ((g$si$20096$1i4eWV)
                                                 ((case-lambda
                                                    ((g$i$20097$1i4eWV)
                                                     (if g$i$20097$1i4eWV
                                                       (g$vector-ref$12680$1i4eWV
                                                         (g$rib-label*$19230$1i4eWV
                                                           g$rib$20093$1i4eWV)
                                                         g$i$20097$1i4eWV)
                                                       (g$search$20090$1i4eWV
                                                         (cdr g$subst*$20091$1i4eWV)
                                                         g$mark*$20092$1i4eWV))))
                                                  (if g$si$20096$1i4eWV
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$19292$1i4eWV
                                                        g$mark*$20092$1i4eWV
                                                        (g$rib-mark**$19229$1i4eWV
                                                          g$rib$20093$1i4eWV)
                                                        (g$reverse$12684$1i4eWV
                                                          g$si$20096$1i4eWV)))
                                                    '#f))))
                                              (g$hashtable-ref$12780$1i4eWV
                                                g$ht$20095$1i4eWV
                                                g$sym$20089$1i4eWV
                                                '#f))))
                                          g$t$20094$1i4eWV)
                                         ((case-lambda
                                            ((g$t$20098$1i4eWV)
                                             (if g$t$20098$1i4eWV
                                               g$t$20098$1i4eWV
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$20099$1i4eWV
                                                             (case-lambda
                                                               ((g$sym*$20100$1i4eWV
                                                                  g$mark**$20101$1i4eWV
                                                                  g$label*$20102$1i4eWV)
                                                                (if (null?
                                                                      g$sym*$20100$1i4eWV)
                                                                  (g$search$20090$1i4eWV
                                                                    (cdr g$subst*$20091$1i4eWV)
                                                                    g$mark*$20092$1i4eWV)
                                                                  (if (if (eq? (car g$sym*$20100$1i4eWV)
                                                                               g$sym$20089$1i4eWV)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$19282$1i4eWV
                                                                            (car g$mark**$20101$1i4eWV)
                                                                            g$mark*$20092$1i4eWV))
                                                                        '#f)
                                                                    (car g$label*$20102$1i4eWV)
                                                                    (g$f$20099$1i4eWV
                                                                      (cdr g$sym*$20100$1i4eWV)
                                                                      (cdr g$mark**$20101$1i4eWV)
                                                                      (cdr g$label*$20102$1i4eWV))))))))
                                                    g$f$20099$1i4eWV)
                                                  (g$rib-sym*$19228$1i4eWV
                                                    g$rib$20093$1i4eWV)
                                                  (g$rib-mark**$19229$1i4eWV
                                                    g$rib$20093$1i4eWV)
                                                  (g$rib-label*$19230$1i4eWV
                                                    g$rib$20093$1i4eWV))))))
                                          (g$find-label$19240$1i4eWV
                                            g$rib$20093$1i4eWV
                                            g$sym$20089$1i4eWV
                                            g$mark*$20092$1i4eWV)))))
                                    (g$rib-sealed/freq$19231$1i4eWV
                                      g$rib$20093$1i4eWV))))
                                (car g$subst*$20091$1i4eWV))))))))
               g$search$20090$1i4eWV)
             (g$stx-subst*$19256$1i4eWV g$id$20088$1i4eWV)
             (g$stx-mark*$19255$1i4eWV g$id$20088$1i4eWV))))
         (g$id->sym$19281$1i4eWV g$id$20088$1i4eWV)))))
   (g$label->binding$19295$1i4eWV
     g$label->binding$23302$1i4eWV
     (case-lambda
       ((g$x$20103$1i4eWV g$r$20104$1i4eWV)
        (if (not g$x$20103$1i4eWV)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$20105$1i4eWV)
              (if g$t$20105$1i4eWV
                ((case-lambda
                   ((g$b$20106$1i4eWV)
                    (if (if (pair? g$b$20106$1i4eWV)
                          (begin
                            '#f
                            (eq? (car g$b$20106$1i4eWV) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$11835$1i4eWV
                          g$bless$19741$1i4eWV
                          (cdr g$b$20106$1i4eWV)))
                      (if (if (pair? g$b$20106$1i4eWV)
                            (begin
                              '#f
                              (eq? (car g$b$20106$1i4eWV) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$20107$1i4eWV g$loc$20108$1i4eWV)
                            (cons
                              '$rtd
                              (symbol-value g$loc$20108$1i4eWV))))
                         (g$cadr$12686$1i4eWV g$b$20106$1i4eWV)
                         (g$cddr$12688$1i4eWV g$b$20106$1i4eWV))
                        g$b$20106$1i4eWV))))
                 g$t$20105$1i4eWV)
                ((case-lambda
                   ((g$t$20109$1i4eWV)
                    (if g$t$20109$1i4eWV
                      (cdr g$t$20109$1i4eWV)
                      ((case-lambda
                         ((g$t$20110$1i4eWV)
                          (if g$t$20110$1i4eWV
                            ((case-lambda
                               ((g$env$20111$1i4eWV)
                                ((case-lambda
                                   ((g$t$20112$1i4eWV)
                                    (if g$t$20112$1i4eWV
                                      ((case-lambda
                                         ((g$p$20113$1i4eWV)
                                          (g$cons*$11837$1i4eWV
                                            'lexical
                                            (cdr g$p$20113$1i4eWV)
                                            '#f)))
                                       g$t$20112$1i4eWV)
                                      '(displaced-lexical . #f))))
                                 (g$assq$11823$1i4eWV
                                   g$x$20103$1i4eWV
                                   (g$interaction-env-locs$19865$1i4eWV
                                     g$env$20111$1i4eWV)))))
                             g$t$20110$1i4eWV)
                            '(displaced-lexical . #f))))
                       (g$top-level-context$19905$1i4eWV)))))
                 (g$assq$11823$1i4eWV
                   g$x$20103$1i4eWV
                   g$r$20104$1i4eWV)))))
           (g$imported-label->binding$18985$1i4eWV
             g$x$20103$1i4eWV))))))
   (g$make-binding$19296$1i4eWV g$make-binding$23303$1i4eWV cons)
   (g$binding-type$19297$1i4eWV g$binding-type$23304$1i4eWV car)
   (g$binding-value$19298$1i4eWV g$binding-value$23305$1i4eWV cdr)
   (g$raise-unbound-error$19299$1i4eWV
     g$raise-unbound-error$23306$1i4eWV
     (case-lambda
       ((g$id$20114$1i4eWV)
        (g$syntax-violation*$19896$1i4eWV
          '#f
          '"unbound identifier"
          g$id$20114$1i4eWV
          (g$make-undefined-violation$13457$1i4eWV)))))
   (g$syntax-type$19300$1i4eWV
     g$syntax-type$23307$1i4eWV
     (case-lambda
       ((g$e$20115$1i4eWV g$r$20116$1i4eWV)
        (if (g$id?$19280$1i4eWV g$e$20115$1i4eWV)
          ((case-lambda
             ((g$id$20117$1i4eWV)
              ((case-lambda
                 ((g$label$20118$1i4eWV)
                  ((case-lambda
                     ((g$b$20119$1i4eWV)
                      ((case-lambda
                         ((g$type$20120$1i4eWV)
                          (begin
                            (if (not g$label$20118$1i4eWV)
                              (g$raise-unbound-error$19299$1i4eWV
                                g$id$20117$1i4eWV)
                              (void))
                            ((case-lambda
                               ((g$t$20121$1i4eWV)
                                (if (g$memv$11828$1i4eWV
                                      g$t$20121$1i4eWV
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$20120$1i4eWV
                                    (g$binding-value$19298$1i4eWV
                                      g$b$20119$1i4eWV)
                                    g$id$20117$1i4eWV)
                                  (values 'other '#f '#f))))
                             g$type$20120$1i4eWV))))
                       (g$binding-type$19297$1i4eWV g$b$20119$1i4eWV))))
                   (g$label->binding$19295$1i4eWV
                     g$label$20118$1i4eWV
                     g$r$20116$1i4eWV))))
               (g$id->label$19293$1i4eWV g$id$20117$1i4eWV))))
           g$e$20115$1i4eWV)
          (if (g$syntax-pair?$19273$1i4eWV g$e$20115$1i4eWV)
            ((case-lambda
               ((g$id$20122$1i4eWV)
                (if (g$id?$19280$1i4eWV g$id$20122$1i4eWV)
                  ((case-lambda
                     ((g$label$20123$1i4eWV)
                      ((case-lambda
                         ((g$b$20124$1i4eWV)
                          ((case-lambda
                             ((g$type$20125$1i4eWV)
                              (begin
                                (if (not g$label$20123$1i4eWV)
                                  (g$raise-unbound-error$19299$1i4eWV
                                    g$id$20122$1i4eWV)
                                  (void))
                                ((case-lambda
                                   ((g$t$20126$1i4eWV)
                                    (if (g$memv$11828$1i4eWV
                                          g$t$20126$1i4eWV
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$20125$1i4eWV
                                        (g$binding-value$19298$1i4eWV
                                          g$b$20124$1i4eWV)
                                        g$id$20122$1i4eWV)
                                      (values 'call '#f '#f))))
                                 g$type$20125$1i4eWV))))
                           (g$binding-type$19297$1i4eWV
                             g$b$20124$1i4eWV))))
                       (g$label->binding$19295$1i4eWV
                         g$label$20123$1i4eWV
                         g$r$20116$1i4eWV))))
                   (g$id->label$19293$1i4eWV g$id$20122$1i4eWV))
                  (values 'call '#f '#f))))
             (g$syntax-car$19277$1i4eWV g$e$20115$1i4eWV))
            ((case-lambda
               ((g$d$20127$1i4eWV)
                (if (g$self-evaluating?$19288$1i4eWV g$d$20127$1i4eWV)
                  (values 'constant g$d$20127$1i4eWV '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$19291$1i4eWV g$e$20115$1i4eWV)))))))
   (g$sanitize-binding$19323$1i4eWV
     g$sanitize-binding$23308$1i4eWV
     (case-lambda
       ((g$x$20128$1i4eWV g$src$20129$1i4eWV)
        (if (g$procedure?$12670$1i4eWV g$x$20128$1i4eWV)
          (g$cons*$11837$1i4eWV
            'local-macro
            g$x$20128$1i4eWV
            g$src$20129$1i4eWV)
          (if (if (pair? g$x$20128$1i4eWV)
                (if (eq? (car g$x$20128$1i4eWV) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$12670$1i4eWV (cdr g$x$20128$1i4eWV)))
                  '#f)
                '#f)
            (g$cons*$11837$1i4eWV
              'local-macro!
              (cdr g$x$20128$1i4eWV)
              g$src$20129$1i4eWV)
            (if (if (pair? g$x$20128$1i4eWV)
                  (begin '#f (eq? (car g$x$20128$1i4eWV) '$rtd))
                  '#f)
              g$x$20128$1i4eWV
              (if (if (pair? g$x$20128$1i4eWV)
                    (begin '#f (eq? (car g$x$20128$1i4eWV) 'ctv))
                    '#f)
                (g$cons*$11837$1i4eWV
                  'local-ctv
                  (cdr g$x$20128$1i4eWV)
                  g$src$20129$1i4eWV)
                (assertion-violation
                  'expand
                  '"invalid transformer"
                  g$x$20128$1i4eWV))))))))
   (g$make-variable-transformer$19324$1i4eWV
     g$make-variable-transformer$23309$1i4eWV
     (case-lambda
       ((g$x$20130$1i4eWV)
        (if (g$procedure?$12670$1i4eWV g$x$20130$1i4eWV)
          (cons 'macro! g$x$20130$1i4eWV)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$20130$1i4eWV)))))
   (g$make-compile-time-value$19325$1i4eWV
     g$make-compile-time-value$23310$1i4eWV
     (case-lambda ((g$x$20131$1i4eWV) (cons 'ctv g$x$20131$1i4eWV))))
   (g$variable-transformer?$19326$1i4eWV
     g$variable-transformer?$23311$1i4eWV
     (case-lambda
       ((g$x$20132$1i4eWV)
        (if (pair? g$x$20132$1i4eWV)
          (if (eq? (car g$x$20132$1i4eWV) 'macro!)
            (begin
              '#f
              (g$procedure?$12670$1i4eWV (cdr g$x$20132$1i4eWV)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$19327$1i4eWV
     g$variable-transformer-procedure$23312$1i4eWV
     (case-lambda
       ((g$x$20133$1i4eWV)
        (if (g$variable-transformer?$19326$1i4eWV g$x$20133$1i4eWV)
          (cdr g$x$20133$1i4eWV)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$20133$1i4eWV)))))
   (g$make-eval-transformer$19328$1i4eWV
     g$make-eval-transformer$23313$1i4eWV
     (case-lambda
       ((g$x$20134$1i4eWV)
        (g$sanitize-binding$19323$1i4eWV
          (eval-core (g$expanded->core$18718$1i4eWV g$x$20134$1i4eWV))
          g$x$20134$1i4eWV))))
   (g$parse-define$19718$1i4eWV
     g$parse-define$23314$1i4eWV
     (case-lambda
       ((g$x$20135$1i4eWV)
        ((case-lambda
           ((g$t$20136$1i4eWV)
            ((case-lambda
               ((g$ls/false$20137$1i4eWV)
                (if (if g$ls/false$20137$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20138$1i4eWV
                               g$fmls$20139$1i4eWV
                               g$b$20140$1i4eWV
                               g$b*$20141$1i4eWV)
                             (g$id?$19280$1i4eWV g$id$20138$1i4eWV)))
                          g$ls/false$20137$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20142$1i4eWV
                         g$fmls$20143$1i4eWV
                         g$b$20144$1i4eWV
                         g$b*$20145$1i4eWV)
                       (begin
                         (g$verify-formals$19798$1i4eWV
                           g$fmls$20143$1i4eWV
                           g$x$20135$1i4eWV)
                         (values
                           g$id$20142$1i4eWV
                           (cons
                             'defun
                             (cons
                               g$fmls$20143$1i4eWV
                               (cons
                                 g$b$20144$1i4eWV
                                 g$b*$20145$1i4eWV)))))))
                    g$ls/false$20137$1i4eWV)
                  ((case-lambda
                     ((g$t$20146$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20147$1i4eWV)
                          (if (if g$ls/false$20147$1i4eWV
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$20148$1i4eWV
                                         g$val$20149$1i4eWV)
                                       (g$id?$19280$1i4eWV
                                         g$id$20148$1i4eWV)))
                                    g$ls/false$20147$1i4eWV))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$20150$1i4eWV g$val$20151$1i4eWV)
                                 (values
                                   g$id$20150$1i4eWV
                                   (cons 'expr g$val$20151$1i4eWV))))
                              g$ls/false$20147$1i4eWV)
                            ((case-lambda
                               ((g$t$20152$1i4eWV)
                                ((case-lambda
                                   ((g$ls/false$20153$1i4eWV)
                                    (if (if g$ls/false$20153$1i4eWV
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$20154$1i4eWV)
                                                 (g$id?$19280$1i4eWV
                                                   g$id$20154$1i4eWV)))
                                              g$ls/false$20153$1i4eWV))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$20155$1i4eWV)
                                           (values
                                             g$id$20155$1i4eWV
                                             (cons
                                               'expr
                                               (g$bless$19741$1i4eWV
                                                 '(void))))))
                                        g$ls/false$20153$1i4eWV)
                                      (g$syntax-violation$19897$1i4eWV
                                        '#f
                                        '"invalid syntax"
                                        g$t$20152$1i4eWV))))
                                 (g$syntax-dispatch$19778$1i4eWV
                                   g$t$20152$1i4eWV
                                   '(_ any)))))
                             g$t$20146$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20146$1i4eWV
                         '(_ any any)))))
                   g$t$20136$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20136$1i4eWV
               '(_ (any . any) any . each-any)))))
         g$x$20135$1i4eWV))))
   (g$parse-define-syntax$19719$1i4eWV
     g$parse-define-syntax$23315$1i4eWV
     (case-lambda
       ((g$x$20156$1i4eWV)
        ((case-lambda
           ((g$t$20157$1i4eWV)
            ((case-lambda
               ((g$ls/false$20158$1i4eWV)
                (if (if g$ls/false$20158$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20159$1i4eWV g$val$20160$1i4eWV)
                             (g$id?$19280$1i4eWV g$id$20159$1i4eWV)))
                          g$ls/false$20158$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20161$1i4eWV g$val$20162$1i4eWV)
                       (values g$id$20161$1i4eWV g$val$20162$1i4eWV)))
                    g$ls/false$20158$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20157$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20157$1i4eWV
               '(_ any any)))))
         g$x$20156$1i4eWV))))
   (g$scheme-stx-hashtable$19720$1i4eWV
     g$scheme-stx-hashtable$23316$1i4eWV
     (g$make-eq-hashtable$12777$1i4eWV))
   (g$scheme-stx$19721$1i4eWV
     g$scheme-stx$23317$1i4eWV
     (case-lambda
       ((g$sym$20163$1i4eWV)
        ((case-lambda
           ((g$t$20164$1i4eWV)
            (if g$t$20164$1i4eWV
              g$t$20164$1i4eWV
              (begin
                '#f
                ((case-lambda
                   ((g$subst$20165$1i4eWV)
                    ((case-lambda
                       ((g$stx$20166$1i4eWV)
                        ((case-lambda
                           ((g$stx$20167$1i4eWV)
                            (begin
                              (g$hashtable-set!$12781$1i4eWV
                                g$scheme-stx-hashtable$19720$1i4eWV
                                g$sym$20163$1i4eWV
                                g$stx$20167$1i4eWV)
                              g$stx$20167$1i4eWV)))
                         ((case-lambda
                            ((g$t$20168$1i4eWV)
                             (if g$t$20168$1i4eWV
                               ((case-lambda
                                  ((g$x$20169$1i4eWV)
                                   ((case-lambda
                                      ((g$name$20170$1i4eWV
                                         g$label$20171$1i4eWV)
                                       (g$add-subst$19270$1i4eWV
                                         (g$make-rib$19227$1i4eWV
                                           (list g$name$20170$1i4eWV)
                                           (list
                                             g$top-mark*$19213$1i4eWV)
                                           (list g$label$20171$1i4eWV)
                                           '#f
                                           '#f)
                                         g$stx$20166$1i4eWV)))
                                    (car g$x$20169$1i4eWV)
                                    (cdr g$x$20169$1i4eWV))))
                                g$t$20168$1i4eWV)
                               g$stx$20166$1i4eWV)))
                          (g$assq$11823$1i4eWV
                            g$sym$20163$1i4eWV
                            g$subst$20165$1i4eWV)))))
                     (g$make-stx$19253$1i4eWV
                       g$sym$20163$1i4eWV
                       g$top-mark*$19213$1i4eWV
                       '()
                       '()))))
                 (g$library-subst$18943$1i4eWV
                   (g$find-library-by-name$18979$1i4eWV
                     '(psyntax system $all))))))))
         (g$hashtable-ref$12780$1i4eWV
           g$scheme-stx-hashtable$19720$1i4eWV
           g$sym$20163$1i4eWV
           '#f)))))
   (g$lexical-var$19722$1i4eWV g$lexical-var$23318$1i4eWV car)
   (g$lexical-mutable?$19723$1i4eWV g$lexical-mutable?$23319$1i4eWV cdr)
   (g$set-lexical-mutable!$19724$1i4eWV
     g$set-lexical-mutable!$23320$1i4eWV
     set-cdr!)
   (g$add-lexical$19725$1i4eWV
     g$add-lexical$23321$1i4eWV
     (case-lambda
       ((g$lab$20172$1i4eWV g$lex$20173$1i4eWV g$r$20174$1i4eWV)
        (cons
          (g$cons*$11837$1i4eWV
            g$lab$20172$1i4eWV
            'lexical
            g$lex$20173$1i4eWV
            '#f)
          g$r$20174$1i4eWV))))
   (g$add-lexicals$19726$1i4eWV
     g$add-lexicals$23322$1i4eWV
     (case-lambda
       ((g$lab*$20175$1i4eWV g$lex*$20176$1i4eWV g$r$20177$1i4eWV)
        (if (null? g$lab*$20175$1i4eWV)
          g$r$20177$1i4eWV
          (g$add-lexicals$19726$1i4eWV
            (cdr g$lab*$20175$1i4eWV)
            (cdr g$lex*$20176$1i4eWV)
            (g$add-lexical$19725$1i4eWV
              (car g$lab*$20175$1i4eWV)
              (car g$lex*$20176$1i4eWV)
              g$r$20177$1i4eWV))))))
   (g$letrec-helper$19727$1i4eWV
     g$letrec-helper$23323$1i4eWV
     (case-lambda
       ((g$e$20178$1i4eWV
          g$r$20179$1i4eWV
          g$mr$20180$1i4eWV
          g$build$20181$1i4eWV)
        ((case-lambda
           ((g$t$20182$1i4eWV)
            ((case-lambda
               ((g$ls/false$20183$1i4eWV)
                (if g$ls/false$20183$1i4eWV
                  (apply
                    (case-lambda
                      ((g$lhs*$20184$1i4eWV
                         g$rhs*$20185$1i4eWV
                         g$b$20186$1i4eWV
                         g$b*$20187$1i4eWV)
                       (if (not (g$valid-bound-ids?$19285$1i4eWV
                                  g$lhs*$20184$1i4eWV))
                         (g$invalid-fmls-error$19743$1i4eWV
                           g$e$20178$1i4eWV
                           g$lhs*$20184$1i4eWV)
                         ((case-lambda
                            ((g$lex*$20188$1i4eWV g$lab*$20189$1i4eWV)
                             ((case-lambda
                                ((g$rib$20190$1i4eWV g$r$20191$1i4eWV)
                                 ((case-lambda
                                    ((g$body$20192$1i4eWV
                                       g$rhs*$20193$1i4eWV)
                                     (g$build$20181$1i4eWV
                                       '#f
                                       g$lex*$20188$1i4eWV
                                       g$rhs*$20193$1i4eWV
                                       g$body$20192$1i4eWV)))
                                  (g$chi-internal$19807$1i4eWV
                                    (g$add-subst$19270$1i4eWV
                                      g$rib$20190$1i4eWV
                                      (cons
                                        g$b$20186$1i4eWV
                                        g$b*$20187$1i4eWV))
                                    g$r$20191$1i4eWV
                                    g$mr$20180$1i4eWV)
                                  (g$chi-expr*$19794$1i4eWV
                                    (g$map$11835$1i4eWV
                                      (case-lambda
                                        ((g$x$20194$1i4eWV)
                                         (g$add-subst$19270$1i4eWV
                                           g$rib$20190$1i4eWV
                                           g$x$20194$1i4eWV)))
                                      g$rhs*$20185$1i4eWV)
                                    g$r$20191$1i4eWV
                                    g$mr$20180$1i4eWV))))
                              (g$make-full-rib$19246$1i4eWV
                                g$lhs*$20184$1i4eWV
                                g$lab*$20189$1i4eWV)
                              (g$add-lexicals$19726$1i4eWV
                                g$lab*$20189$1i4eWV
                                g$lex*$20188$1i4eWV
                                g$r$20179$1i4eWV))))
                          (g$map$11835$1i4eWV
                            g$gen-lexical$19215$1i4eWV
                            g$lhs*$20184$1i4eWV)
                          (g$map$11835$1i4eWV
                            g$gen-label$19217$1i4eWV
                            g$lhs*$20184$1i4eWV)))))
                    g$ls/false$20183$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20182$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20182$1i4eWV
               '(_ #(each (any any)) any . each-any)))))
         g$e$20178$1i4eWV))))
   (g$letrec-transformer$19728$1i4eWV
     g$letrec-transformer$23324$1i4eWV
     (case-lambda
       ((g$e$20195$1i4eWV g$r$20196$1i4eWV g$mr$20197$1i4eWV)
        (g$letrec-helper$19727$1i4eWV
          g$e$20195$1i4eWV
          g$r$20196$1i4eWV
          g$mr$20197$1i4eWV
          g$build-letrec$19207$1i4eWV))))
   (g$letrec*-transformer$19729$1i4eWV
     g$letrec*-transformer$23325$1i4eWV
     (case-lambda
       ((g$e$20198$1i4eWV g$r$20199$1i4eWV g$mr$20200$1i4eWV)
        (g$letrec-helper$19727$1i4eWV
          g$e$20198$1i4eWV
          g$r$20199$1i4eWV
          g$mr$20200$1i4eWV
          g$build-letrec*$19208$1i4eWV))))
   (g$fluid-let-syntax-transformer$19730$1i4eWV
     g$fluid-let-syntax-transformer$23326$1i4eWV
     (case-lambda
       ((g$e$20201$1i4eWV g$r$20202$1i4eWV g$mr$20203$1i4eWV)
        (letrec* ((g$lookup$20204$1i4eWV
                    (case-lambda
                      ((g$x$20214$1i4eWV)
                       ((case-lambda
                          ((g$t$20215$1i4eWV)
                           (if g$t$20215$1i4eWV
                             g$t$20215$1i4eWV
                             (begin
                               '#f
                               (g$syntax-violation$19897$1i4eWV
                                 '#f
                                 '"unbound identifier"
                                 g$e$20201$1i4eWV
                                 g$x$20214$1i4eWV)))))
                        (g$id->label$19293$1i4eWV g$x$20214$1i4eWV))))))
          ((case-lambda
             ((g$t$20205$1i4eWV)
              ((case-lambda
                 ((g$ls/false$20206$1i4eWV)
                  (if g$ls/false$20206$1i4eWV
                    (apply
                      (case-lambda
                        ((g$lhs*$20207$1i4eWV
                           g$rhs*$20208$1i4eWV
                           g$b$20209$1i4eWV
                           g$b*$20210$1i4eWV)
                         (if (not (g$valid-bound-ids?$19285$1i4eWV
                                    g$lhs*$20207$1i4eWV))
                           (g$invalid-fmls-error$19743$1i4eWV
                             g$e$20201$1i4eWV
                             g$lhs*$20207$1i4eWV)
                           ((case-lambda
                              ((g$lab*$20211$1i4eWV g$rhs*$20212$1i4eWV)
                               (g$chi-internal$19807$1i4eWV
                                 (cons
                                   g$b$20209$1i4eWV
                                   g$b*$20210$1i4eWV)
                                 (append
                                   (g$map$11835$1i4eWV
                                     cons
                                     g$lab*$20211$1i4eWV
                                     g$rhs*$20212$1i4eWV)
                                   g$r$20202$1i4eWV)
                                 (append
                                   (g$map$11835$1i4eWV
                                     cons
                                     g$lab*$20211$1i4eWV
                                     g$rhs*$20212$1i4eWV)
                                   g$mr$20203$1i4eWV))))
                            (g$map$11835$1i4eWV
                              g$lookup$20204$1i4eWV
                              g$lhs*$20207$1i4eWV)
                            (g$map$11835$1i4eWV
                              (case-lambda
                                ((g$x$20213$1i4eWV)
                                 (g$make-eval-transformer$19328$1i4eWV
                                   (g$expand-transformer$19826$1i4eWV
                                     g$x$20213$1i4eWV
                                     g$mr$20203$1i4eWV))))
                              g$rhs*$20208$1i4eWV)))))
                      g$ls/false$20206$1i4eWV)
                    (g$syntax-violation$19897$1i4eWV
                      '#f
                      '"invalid syntax"
                      g$t$20205$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$20205$1i4eWV
                 '(_ #(each (any any)) any . each-any)))))
           g$e$20201$1i4eWV)))))
   (g$type-descriptor-transformer$19731$1i4eWV
     g$type-descriptor-transformer$23327$1i4eWV
     (case-lambda
       ((g$e$20216$1i4eWV g$r$20217$1i4eWV g$mr$20218$1i4eWV)
        ((case-lambda
           ((g$t$20219$1i4eWV)
            ((case-lambda
               ((g$ls/false$20220$1i4eWV)
                (if (if g$ls/false$20220$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20221$1i4eWV)
                             (g$id?$19280$1i4eWV g$id$20221$1i4eWV)))
                          g$ls/false$20220$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20222$1i4eWV)
                       ((case-lambda
                          ((g$lab$20223$1i4eWV)
                           ((case-lambda
                              ((g$b$20224$1i4eWV)
                               ((case-lambda
                                  ((g$type$20225$1i4eWV)
                                   (begin
                                     (if (not g$lab$20223$1i4eWV)
                                       (g$raise-unbound-error$19299$1i4eWV
                                         g$id$20222$1i4eWV)
                                       (void))
                                     (if (not (if (eq? g$type$20225$1i4eWV
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$19298$1i4eWV
                                                           g$b$20224$1i4eWV))))
                                                '#f))
                                       (g$syntax-violation$19897$1i4eWV
                                         '#f
                                         '"not a record type"
                                         g$e$20216$1i4eWV)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$19298$1i4eWV
                                         g$b$20224$1i4eWV)))))
                                (g$binding-type$19297$1i4eWV
                                  g$b$20224$1i4eWV))))
                            (g$label->binding$19295$1i4eWV
                              g$lab$20223$1i4eWV
                              g$r$20217$1i4eWV))))
                        (g$id->label$19293$1i4eWV g$id$20222$1i4eWV))))
                    g$ls/false$20220$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20219$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20219$1i4eWV
               '(_ any)))))
         g$e$20216$1i4eWV))))
   (g$record-type-descriptor-transformer$19732$1i4eWV
     g$record-type-descriptor-transformer$23328$1i4eWV
     (case-lambda
       ((g$e$20226$1i4eWV g$r$20227$1i4eWV g$mr$20228$1i4eWV)
        ((case-lambda
           ((g$t$20229$1i4eWV)
            ((case-lambda
               ((g$ls/false$20230$1i4eWV)
                (if (if g$ls/false$20230$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20231$1i4eWV)
                             (g$id?$19280$1i4eWV g$id$20231$1i4eWV)))
                          g$ls/false$20230$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20232$1i4eWV)
                       ((case-lambda
                          ((g$lab$20233$1i4eWV)
                           ((case-lambda
                              ((g$b$20234$1i4eWV)
                               ((case-lambda
                                  ((g$type$20235$1i4eWV)
                                   (begin
                                     (if (not g$lab$20233$1i4eWV)
                                       (g$raise-unbound-error$19299$1i4eWV
                                         g$id$20232$1i4eWV)
                                       (void))
                                     (if (not (if (eq? g$type$20235$1i4eWV
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$19298$1i4eWV
                                                      g$b$20234$1i4eWV)))
                                                '#f))
                                       (g$syntax-violation$19897$1i4eWV
                                         '#f
                                         '"not a record type"
                                         g$e$20226$1i4eWV)
                                       (void))
                                     (g$chi-expr$19796$1i4eWV
                                       (car (g$binding-value$19298$1i4eWV
                                              g$b$20234$1i4eWV))
                                       g$r$20227$1i4eWV
                                       g$mr$20228$1i4eWV))))
                                (g$binding-type$19297$1i4eWV
                                  g$b$20234$1i4eWV))))
                            (g$label->binding$19295$1i4eWV
                              g$lab$20233$1i4eWV
                              g$r$20227$1i4eWV))))
                        (g$id->label$19293$1i4eWV g$id$20232$1i4eWV))))
                    g$ls/false$20230$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20229$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20229$1i4eWV
               '(_ any)))))
         g$e$20226$1i4eWV))))
   (g$record-constructor-descriptor-transformer$19733$1i4eWV
     g$record-constructor-descriptor-transformer$23329$1i4eWV
     (case-lambda
       ((g$e$20236$1i4eWV g$r$20237$1i4eWV g$mr$20238$1i4eWV)
        ((case-lambda
           ((g$t$20239$1i4eWV)
            ((case-lambda
               ((g$ls/false$20240$1i4eWV)
                (if (if g$ls/false$20240$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20241$1i4eWV)
                             (g$id?$19280$1i4eWV g$id$20241$1i4eWV)))
                          g$ls/false$20240$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20242$1i4eWV)
                       ((case-lambda
                          ((g$lab$20243$1i4eWV)
                           ((case-lambda
                              ((g$b$20244$1i4eWV)
                               ((case-lambda
                                  ((g$type$20245$1i4eWV)
                                   (begin
                                     (if (not g$lab$20243$1i4eWV)
                                       (g$raise-unbound-error$19299$1i4eWV
                                         g$id$20242$1i4eWV)
                                       (void))
                                     (if (not (if (eq? g$type$20245$1i4eWV
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$19298$1i4eWV
                                                      g$b$20244$1i4eWV)))
                                                '#f))
                                       (g$syntax-violation$19897$1i4eWV
                                         '#f
                                         '"invalid type"
                                         g$e$20236$1i4eWV)
                                       (void))
                                     (g$chi-expr$19796$1i4eWV
                                       (g$cadr$12686$1i4eWV
                                         (g$binding-value$19298$1i4eWV
                                           g$b$20244$1i4eWV))
                                       g$r$20237$1i4eWV
                                       g$mr$20238$1i4eWV))))
                                (g$binding-type$19297$1i4eWV
                                  g$b$20244$1i4eWV))))
                            (g$label->binding$19295$1i4eWV
                              g$lab$20243$1i4eWV
                              g$r$20237$1i4eWV))))
                        (g$id->label$19293$1i4eWV g$id$20242$1i4eWV))))
                    g$ls/false$20240$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20239$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20239$1i4eWV
               '(_ any)))))
         g$e$20236$1i4eWV))))
   (g$when-macro$19734$1i4eWV
     g$when-macro$23330$1i4eWV
     (case-lambda
       ((g$e$20246$1i4eWV)
        ((case-lambda
           ((g$t$20247$1i4eWV)
            ((case-lambda
               ((g$ls/false$20248$1i4eWV)
                (if g$ls/false$20248$1i4eWV
                  (apply
                    (case-lambda
                      ((g$test$20249$1i4eWV
                         g$e$20250$1i4eWV
                         g$e*$20251$1i4eWV)
                       (g$bless$19741$1i4eWV
                         (list
                           'if
                           g$test$20249$1i4eWV
                           (cons
                             'begin
                             (cons
                               g$e$20250$1i4eWV
                               g$e*$20251$1i4eWV))))))
                    g$ls/false$20248$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20247$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20247$1i4eWV
               '(_ any any . each-any)))))
         g$e$20246$1i4eWV))))
   (g$unless-macro$19735$1i4eWV
     g$unless-macro$23331$1i4eWV
     (case-lambda
       ((g$e$20252$1i4eWV)
        ((case-lambda
           ((g$t$20253$1i4eWV)
            ((case-lambda
               ((g$ls/false$20254$1i4eWV)
                (if g$ls/false$20254$1i4eWV
                  (apply
                    (case-lambda
                      ((g$test$20255$1i4eWV
                         g$e$20256$1i4eWV
                         g$e*$20257$1i4eWV)
                       (g$bless$19741$1i4eWV
                         (list
                           'if
                           (list 'not g$test$20255$1i4eWV)
                           (cons
                             'begin
                             (cons
                               g$e$20256$1i4eWV
                               g$e*$20257$1i4eWV))))))
                    g$ls/false$20254$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20253$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20253$1i4eWV
               '(_ any any . each-any)))))
         g$e$20252$1i4eWV))))
   (g$if-transformer$19736$1i4eWV
     g$if-transformer$23332$1i4eWV
     (case-lambda
       ((g$e$20258$1i4eWV g$r$20259$1i4eWV g$mr$20260$1i4eWV)
        ((case-lambda
           ((g$t$20261$1i4eWV)
            ((case-lambda
               ((g$ls/false$20262$1i4eWV)
                (if g$ls/false$20262$1i4eWV
                  (apply
                    (case-lambda
                      ((g$e0$20263$1i4eWV
                         g$e1$20264$1i4eWV
                         g$e2$20265$1i4eWV)
                       (list
                         'if
                         (g$chi-expr$19796$1i4eWV
                           g$e0$20263$1i4eWV
                           g$r$20259$1i4eWV
                           g$mr$20260$1i4eWV)
                         (g$chi-expr$19796$1i4eWV
                           g$e1$20264$1i4eWV
                           g$r$20259$1i4eWV
                           g$mr$20260$1i4eWV)
                         (g$chi-expr$19796$1i4eWV
                           g$e2$20265$1i4eWV
                           g$r$20259$1i4eWV
                           g$mr$20260$1i4eWV))))
                    g$ls/false$20262$1i4eWV)
                  ((case-lambda
                     ((g$t$20266$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20267$1i4eWV)
                          (if g$ls/false$20267$1i4eWV
                            (apply
                              (case-lambda
                                ((g$e0$20268$1i4eWV g$e1$20269$1i4eWV)
                                 (list
                                   'if
                                   (g$chi-expr$19796$1i4eWV
                                     g$e0$20268$1i4eWV
                                     g$r$20259$1i4eWV
                                     g$mr$20260$1i4eWV)
                                   (g$chi-expr$19796$1i4eWV
                                     g$e1$20269$1i4eWV
                                     g$r$20259$1i4eWV
                                     g$mr$20260$1i4eWV)
                                   (g$build-void$19206$1i4eWV))))
                              g$ls/false$20267$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$20266$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20266$1i4eWV
                         '(_ any any)))))
                   g$t$20261$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20261$1i4eWV
               '(_ any any any)))))
         g$e$20258$1i4eWV))))
   (g$case-macro$19737$1i4eWV
     g$case-macro$23333$1i4eWV
     (case-lambda
       ((g$e$20270$1i4eWV)
        (letrec* ((g$build-last$20271$1i4eWV
                    (case-lambda
                      ((g$cls$20291$1i4eWV)
                       ((case-lambda
                          ((g$t$20292$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$20293$1i4eWV)
                               (if g$ls/false$20293$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$e$20294$1i4eWV
                                        g$e*$20295$1i4eWV)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$20294$1i4eWV
                                          g$e*$20295$1i4eWV))))
                                   g$ls/false$20293$1i4eWV)
                                 ((case-lambda
                                    ((g$t$20296$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$20297$1i4eWV)
                                         (if g$ls/false$20297$1i4eWV
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$20272$1i4eWV
                                                  g$cls$20291$1i4eWV
                                                  '(if #f #f))))
                                             g$ls/false$20297$1i4eWV)
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$t$20296$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$20296$1i4eWV
                                        '_))))
                                  g$t$20292$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$20292$1i4eWV
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$20291$1i4eWV))))
                  (g$build-one$20272$1i4eWV
                    (case-lambda
                      ((g$cls$20284$1i4eWV g$k$20285$1i4eWV)
                       ((case-lambda
                          ((g$t$20286$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$20287$1i4eWV)
                               (if g$ls/false$20287$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$d*$20288$1i4eWV
                                        g$e$20289$1i4eWV
                                        g$e*$20290$1i4eWV)
                                      (if (= '1
                                             (length g$d*$20288$1i4eWV))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$20288$1i4eWV)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$20289$1i4eWV
                                              g$e*$20290$1i4eWV))
                                          g$k$20285$1i4eWV)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$20288$1i4eWV))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$20289$1i4eWV
                                              g$e*$20290$1i4eWV))
                                          g$k$20285$1i4eWV))))
                                   g$ls/false$20287$1i4eWV)
                                 (g$syntax-violation$19897$1i4eWV
                                   '#f
                                   '"invalid syntax"
                                   g$t$20286$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$20286$1i4eWV
                              '(each-any any . each-any)))))
                        g$cls$20284$1i4eWV)))))
          ((case-lambda
             ((g$t$20273$1i4eWV)
              ((case-lambda
                 ((g$ls/false$20274$1i4eWV)
                  (if g$ls/false$20274$1i4eWV
                    (apply
                      (case-lambda
                        ((g$expr$20275$1i4eWV)
                         (g$bless$19741$1i4eWV
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$20275$1i4eWV))
                               '((if #f #f)))))))
                      g$ls/false$20274$1i4eWV)
                    ((case-lambda
                       ((g$t$20276$1i4eWV)
                        ((case-lambda
                           ((g$ls/false$20277$1i4eWV)
                            (if g$ls/false$20277$1i4eWV
                              (apply
                                (case-lambda
                                  ((g$expr$20278$1i4eWV
                                     g$cls$20279$1i4eWV
                                     g$cls*$20280$1i4eWV)
                                   (g$bless$19741$1i4eWV
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$20278$1i4eWV))
                                       ((letrec ((g$f$20281$1i4eWV
                                                   (case-lambda
                                                     ((g$cls$20282$1i4eWV
                                                        g$cls*$20283$1i4eWV)
                                                      (if (null?
                                                            g$cls*$20283$1i4eWV)
                                                        (g$build-last$20271$1i4eWV
                                                          g$cls$20282$1i4eWV)
                                                        (g$build-one$20272$1i4eWV
                                                          g$cls$20282$1i4eWV
                                                          (g$f$20281$1i4eWV
                                                            (car g$cls*$20283$1i4eWV)
                                                            (cdr g$cls*$20283$1i4eWV))))))))
                                          g$f$20281$1i4eWV)
                                        g$cls$20279$1i4eWV
                                        g$cls*$20280$1i4eWV)))))
                                g$ls/false$20277$1i4eWV)
                              (g$syntax-violation$19897$1i4eWV
                                '#f
                                '"invalid syntax"
                                g$t$20276$1i4eWV))))
                         (g$syntax-dispatch$19778$1i4eWV
                           g$t$20276$1i4eWV
                           '(_ any any . each-any)))))
                     g$t$20273$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$20273$1i4eWV
                 '(_ any)))))
           g$e$20270$1i4eWV)))))
   (g$quote-transformer$19738$1i4eWV
     g$quote-transformer$23334$1i4eWV
     (case-lambda
       ((g$e$20298$1i4eWV g$r$20299$1i4eWV g$mr$20300$1i4eWV)
        ((case-lambda
           ((g$t$20301$1i4eWV)
            ((case-lambda
               ((g$ls/false$20302$1i4eWV)
                (if g$ls/false$20302$1i4eWV
                  (apply
                    (case-lambda
                      ((g$datum$20303$1i4eWV)
                       (list
                         'quote
                         (g$stx->datum$19291$1i4eWV
                           g$datum$20303$1i4eWV))))
                    g$ls/false$20302$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20301$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20301$1i4eWV
               '(_ any)))))
         g$e$20298$1i4eWV))))
   (g$case-lambda-transformer$19739$1i4eWV
     g$case-lambda-transformer$23335$1i4eWV
     (case-lambda
       ((g$e$20304$1i4eWV g$r$20305$1i4eWV g$mr$20306$1i4eWV)
        ((case-lambda
           ((g$t$20307$1i4eWV)
            ((case-lambda
               ((g$ls/false$20308$1i4eWV)
                (if g$ls/false$20308$1i4eWV
                  (apply
                    (case-lambda
                      ((g$fmls*$20309$1i4eWV
                         g$b*$20310$1i4eWV
                         g$b**$20311$1i4eWV)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$19800$1i4eWV
                              g$e$20304$1i4eWV
                              g$fmls*$20309$1i4eWV
                              (g$map$11835$1i4eWV
                                cons
                                g$b*$20310$1i4eWV
                                g$b**$20311$1i4eWV)
                              g$r$20305$1i4eWV
                              g$mr$20306$1i4eWV)))
                         (case-lambda
                           ((g$fmls*$20314$1i4eWV g$body*$20315$1i4eWV)
                            ((case-lambda
                               ((g$body*$20316$1i4eWV
                                  g$fmls*$20317$1i4eWV)
                                (g$build-case-lambda$19203$1i4eWV
                                  '#f
                                  g$fmls*$20317$1i4eWV
                                  g$body*$20316$1i4eWV)))
                             g$body*$20315$1i4eWV
                             g$fmls*$20314$1i4eWV))))))
                    g$ls/false$20308$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20307$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20307$1i4eWV
               '(_ . #(each (any any . each-any)))))))
         g$e$20304$1i4eWV))))
   (g$lambda-transformer$19740$1i4eWV
     g$lambda-transformer$23336$1i4eWV
     (case-lambda
       ((g$e$20318$1i4eWV g$r$20319$1i4eWV g$mr$20320$1i4eWV)
        ((case-lambda
           ((g$t$20321$1i4eWV)
            ((case-lambda
               ((g$ls/false$20322$1i4eWV)
                (if g$ls/false$20322$1i4eWV
                  (apply
                    (case-lambda
                      ((g$fmls$20323$1i4eWV
                         g$b$20324$1i4eWV
                         g$b*$20325$1i4eWV)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$19799$1i4eWV
                              g$e$20318$1i4eWV
                              g$fmls$20323$1i4eWV
                              (cons g$b$20324$1i4eWV g$b*$20325$1i4eWV)
                              g$r$20319$1i4eWV
                              g$mr$20320$1i4eWV)))
                         (case-lambda
                           ((g$fmls$20328$1i4eWV g$body$20329$1i4eWV)
                            ((case-lambda
                               ((g$body$20330$1i4eWV
                                  g$fmls$20331$1i4eWV)
                                (g$build-lambda$19202$1i4eWV
                                  '#f
                                  g$fmls$20331$1i4eWV
                                  g$body$20330$1i4eWV)))
                             g$body$20329$1i4eWV
                             g$fmls$20328$1i4eWV))))))
                    g$ls/false$20322$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20321$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20321$1i4eWV
               '(_ any any . each-any)))))
         g$e$20318$1i4eWV))))
   (g$bless$19741$1i4eWV
     g$bless$23337$1i4eWV
     (case-lambda
       ((g$x$20332$1i4eWV)
        (g$mkstx$19268$1i4eWV
          ((letrec ((g$f$20333$1i4eWV
                      (case-lambda
                        ((g$x$20334$1i4eWV)
                         (if (g$stx?$19252$1i4eWV g$x$20334$1i4eWV)
                           g$x$20334$1i4eWV
                           (if (pair? g$x$20334$1i4eWV)
                             (cons
                               (g$f$20333$1i4eWV (car g$x$20334$1i4eWV))
                               (g$f$20333$1i4eWV
                                 (cdr g$x$20334$1i4eWV)))
                             (if (g$symbol?$12668$1i4eWV
                                   g$x$20334$1i4eWV)
                               (g$scheme-stx$19721$1i4eWV
                                 g$x$20334$1i4eWV)
                               (if (g$vector?$12666$1i4eWV
                                     g$x$20334$1i4eWV)
                                 (g$vector-map$12737$1i4eWV
                                   g$f$20333$1i4eWV
                                   g$x$20334$1i4eWV)
                                 g$x$20334$1i4eWV))))))))
             g$f$20333$1i4eWV)
           g$x$20332$1i4eWV)
          '()
          '()
          '()))))
   (g$with-syntax-macro$19742$1i4eWV
     g$with-syntax-macro$23338$1i4eWV
     (case-lambda
       ((g$e$20335$1i4eWV)
        ((case-lambda
           ((g$t$20336$1i4eWV)
            ((case-lambda
               ((g$ls/false$20337$1i4eWV)
                (if g$ls/false$20337$1i4eWV
                  (apply
                    (case-lambda
                      ((g$pat*$20338$1i4eWV
                         g$expr*$20339$1i4eWV
                         g$b$20340$1i4eWV
                         g$b*$20341$1i4eWV)
                       ((case-lambda
                          ((g$idn*$20342$1i4eWV)
                           (begin
                             (g$verify-formals$19798$1i4eWV
                               (g$map$11835$1i4eWV
                                 car
                                 g$idn*$20342$1i4eWV)
                               g$e$20335$1i4eWV)
                             ((case-lambda
                                ((g$t*$20343$1i4eWV)
                                 (g$bless$19741$1i4eWV
                                   (list
                                     'let
                                     (g$map$11835$1i4eWV
                                       list
                                       g$t*$20343$1i4eWV
                                       g$expr*$20339$1i4eWV)
                                     ((letrec ((g$f$20344$1i4eWV
                                                 (case-lambda
                                                   ((g$pat*$20345$1i4eWV
                                                      g$t*$20346$1i4eWV)
                                                    (if (null?
                                                          g$pat*$20345$1i4eWV)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$20340$1i4eWV
                                                            g$b*$20341$1i4eWV)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$20346$1i4eWV)
                                                        '()
                                                        (list
                                                          (car g$pat*$20345$1i4eWV)
                                                          (g$f$20344$1i4eWV
                                                            (cdr g$pat*$20345$1i4eWV)
                                                            (cdr g$t*$20346$1i4eWV)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$20345$1i4eWV))
                                                            (car g$t*$20346$1i4eWV)))))))))
                                        g$f$20344$1i4eWV)
                                      g$pat*$20338$1i4eWV
                                      g$t*$20343$1i4eWV)))))
                              (g$generate-temporaries$19887$1i4eWV
                                g$expr*$20339$1i4eWV)))))
                        ((letrec ((g$f$20347$1i4eWV
                                    (case-lambda
                                      ((g$pat*$20348$1i4eWV)
                                       (if (null? g$pat*$20348$1i4eWV)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$19777$1i4eWV
                                                (car g$pat*$20348$1i4eWV)
                                                '())))
                                           (case-lambda
                                             ((g$pat$20351$1i4eWV
                                                g$idn*$20352$1i4eWV)
                                              ((case-lambda
                                                 ((g$idn*$20353$1i4eWV
                                                    g$pat$20354$1i4eWV)
                                                  (append
                                                    g$idn*$20353$1i4eWV
                                                    (g$f$20347$1i4eWV
                                                      (cdr g$pat*$20348$1i4eWV)))))
                                               g$idn*$20352$1i4eWV
                                               g$pat$20351$1i4eWV)))))))))
                           g$f$20347$1i4eWV)
                         g$pat*$20338$1i4eWV))))
                    g$ls/false$20337$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20336$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20336$1i4eWV
               '(_ #(each (any any)) any . each-any)))))
         g$e$20335$1i4eWV))))
   (g$invalid-fmls-error$19743$1i4eWV
     g$invalid-fmls-error$23339$1i4eWV
     (case-lambda
       ((g$stx$20355$1i4eWV g$fmls$20356$1i4eWV)
        ((case-lambda
           ((g$t$20357$1i4eWV)
            ((case-lambda
               ((g$ls/false$20358$1i4eWV)
                (if g$ls/false$20358$1i4eWV
                  (apply
                    (case-lambda
                      ((g$id*$20359$1i4eWV g$last$20360$1i4eWV)
                       ((letrec ((g$f$20361$1i4eWV
                                   (case-lambda
                                     ((g$id*$20362$1i4eWV)
                                      (if (null? g$id*$20362$1i4eWV)
                                        (values)
                                        (if (not (g$id?$19280$1i4eWV
                                                   (car g$id*$20362$1i4eWV)))
                                          (g$syntax-violation$19897$1i4eWV
                                            '#f
                                            '"not an identifier"
                                            g$stx$20355$1i4eWV
                                            (car g$id*$20362$1i4eWV))
                                          (begin
                                            (g$f$20361$1i4eWV
                                              (cdr g$id*$20362$1i4eWV))
                                            (if (g$bound-id-member?$19287$1i4eWV
                                                  (car g$id*$20362$1i4eWV)
                                                  (cdr g$id*$20362$1i4eWV))
                                              (g$syntax-violation$19897$1i4eWV
                                                '#f
                                                '"duplicate binding"
                                                g$stx$20355$1i4eWV
                                                (car g$id*$20362$1i4eWV))
                                              (void)))))))))
                          g$f$20361$1i4eWV)
                        (if (g$id?$19280$1i4eWV g$last$20360$1i4eWV)
                          (cons g$last$20360$1i4eWV g$id*$20359$1i4eWV)
                          (if (g$syntax-null?$19275$1i4eWV
                                g$last$20360$1i4eWV)
                            g$id*$20359$1i4eWV
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"not an identifier"
                              g$stx$20355$1i4eWV
                              g$last$20360$1i4eWV))))))
                    g$ls/false$20358$1i4eWV)
                  ((case-lambda
                     ((g$t$20363$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20364$1i4eWV)
                          (if g$ls/false$20364$1i4eWV
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$19897$1i4eWV
                                   '#f
                                   '"malformed binding form"
                                   g$stx$20355$1i4eWV
                                   g$fmls$20356$1i4eWV)))
                              g$ls/false$20364$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$20363$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20363$1i4eWV
                         '_))))
                   g$t$20357$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20357$1i4eWV
               '#(each+ any () any)))))
         g$fmls$20356$1i4eWV))))
   (g$let-macro$19744$1i4eWV
     g$let-macro$23340$1i4eWV
     (case-lambda
       ((g$stx$20365$1i4eWV)
        ((case-lambda
           ((g$t$20366$1i4eWV)
            ((case-lambda
               ((g$ls/false$20367$1i4eWV)
                (if g$ls/false$20367$1i4eWV
                  (apply
                    (case-lambda
                      ((g$lhs*$20368$1i4eWV
                         g$rhs*$20369$1i4eWV
                         g$b$20370$1i4eWV
                         g$b*$20371$1i4eWV)
                       (if (g$valid-bound-ids?$19285$1i4eWV
                             g$lhs*$20368$1i4eWV)
                         (g$bless$19741$1i4eWV
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$20368$1i4eWV
                                 (cons
                                   g$b$20370$1i4eWV
                                   g$b*$20371$1i4eWV)))
                             g$rhs*$20369$1i4eWV))
                         (g$invalid-fmls-error$19743$1i4eWV
                           g$stx$20365$1i4eWV
                           g$lhs*$20368$1i4eWV))))
                    g$ls/false$20367$1i4eWV)
                  ((case-lambda
                     ((g$t$20372$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20373$1i4eWV)
                          (if (if g$ls/false$20373$1i4eWV
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$20374$1i4eWV
                                         g$lhs*$20375$1i4eWV
                                         g$rhs*$20376$1i4eWV
                                         g$b$20377$1i4eWV
                                         g$b*$20378$1i4eWV)
                                       (g$id?$19280$1i4eWV
                                         g$f$20374$1i4eWV)))
                                    g$ls/false$20373$1i4eWV))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$20379$1i4eWV
                                   g$lhs*$20380$1i4eWV
                                   g$rhs*$20381$1i4eWV
                                   g$b$20382$1i4eWV
                                   g$b*$20383$1i4eWV)
                                 (if (g$valid-bound-ids?$19285$1i4eWV
                                       g$lhs*$20380$1i4eWV)
                                   (g$bless$19741$1i4eWV
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$20379$1i4eWV
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$20380$1i4eWV
                                                 (cons
                                                   g$b$20382$1i4eWV
                                                   g$b*$20383$1i4eWV)))))
                                         g$f$20379$1i4eWV)
                                       g$rhs*$20381$1i4eWV))
                                   (g$invalid-fmls-error$19743$1i4eWV
                                     g$stx$20365$1i4eWV
                                     g$lhs*$20380$1i4eWV))))
                              g$ls/false$20373$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$20372$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20372$1i4eWV
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$20366$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20366$1i4eWV
               '(_ #(each (any any)) any . each-any)))))
         g$stx$20365$1i4eWV))))
   (g$let-values-macro$19745$1i4eWV
     g$let-values-macro$23341$1i4eWV
     (case-lambda
       ((g$stx$20384$1i4eWV)
        (letrec* ((g$rename$20385$1i4eWV
                    (case-lambda
                      ((g$x$20436$1i4eWV
                         g$old*$20437$1i4eWV
                         g$new*$20438$1i4eWV)
                       (begin
                         (if (not (g$id?$19280$1i4eWV g$x$20436$1i4eWV))
                           (g$syntax-violation$19897$1i4eWV
                             '#f
                             '"not an indentifier"
                             g$stx$20384$1i4eWV
                             g$x$20436$1i4eWV)
                           (void))
                         (if (g$bound-id-member?$19287$1i4eWV
                               g$x$20436$1i4eWV
                               g$old*$20437$1i4eWV)
                           (g$syntax-violation$19897$1i4eWV
                             '#f
                             '"duplicate binding"
                             g$stx$20384$1i4eWV
                             g$x$20436$1i4eWV)
                           (void))
                         ((case-lambda
                            ((g$y$20439$1i4eWV)
                             (values
                               g$y$20439$1i4eWV
                               (cons
                                 g$x$20436$1i4eWV
                                 g$old*$20437$1i4eWV)
                               (cons
                                 g$y$20439$1i4eWV
                                 g$new*$20438$1i4eWV))))
                          (gensym
                            (g$syntax->datum$19900$1i4eWV
                              g$x$20436$1i4eWV)))))))
                  (g$rename*$20386$1i4eWV
                    (case-lambda
                      ((g$x*$20427$1i4eWV
                         g$old*$20428$1i4eWV
                         g$new*$20429$1i4eWV)
                       (if (null? g$x*$20427$1i4eWV)
                         (values
                           '()
                           g$old*$20428$1i4eWV
                           g$new*$20429$1i4eWV)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$20385$1i4eWV
                                (car g$x*$20427$1i4eWV)
                                g$old*$20428$1i4eWV
                                g$new*$20429$1i4eWV)))
                           (case-lambda
                             ((g$x$20430$1i4eWV
                                g$old*$20431$1i4eWV
                                g$new*$20432$1i4eWV)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$20386$1i4eWV
                                     (cdr g$x*$20427$1i4eWV)
                                     g$old*$20431$1i4eWV
                                     g$new*$20432$1i4eWV)))
                                (case-lambda
                                  ((g$x*$20433$1i4eWV
                                     g$old*$20434$1i4eWV
                                     g$new*$20435$1i4eWV)
                                   (values
                                     (cons
                                       g$x$20430$1i4eWV
                                       g$x*$20433$1i4eWV)
                                     g$old*$20434$1i4eWV
                                     g$new*$20435$1i4eWV))))))))))))
          ((case-lambda
             ((g$t$20387$1i4eWV)
              ((case-lambda
                 ((g$ls/false$20388$1i4eWV)
                  (if g$ls/false$20388$1i4eWV
                    (apply
                      (case-lambda
                        ((g$b$20389$1i4eWV g$b*$20390$1i4eWV)
                         (g$cons*$11837$1i4eWV
                           (g$bless$19741$1i4eWV 'let)
                           '()
                           g$b$20389$1i4eWV
                           g$b*$20390$1i4eWV)))
                      g$ls/false$20388$1i4eWV)
                    ((case-lambda
                       ((g$t$20391$1i4eWV)
                        ((case-lambda
                           ((g$ls/false$20392$1i4eWV)
                            (if g$ls/false$20392$1i4eWV
                              (apply
                                (case-lambda
                                  ((g$lhs*$20393$1i4eWV
                                     g$rhs*$20394$1i4eWV
                                     g$b$20395$1i4eWV
                                     g$b*$20396$1i4eWV)
                                   (g$bless$19741$1i4eWV
                                     ((letrec ((g$f$20397$1i4eWV
                                                 (case-lambda
                                                   ((g$lhs*$20398$1i4eWV
                                                      g$rhs*$20399$1i4eWV
                                                      g$old*$20400$1i4eWV
                                                      g$new*$20401$1i4eWV)
                                                    (if (null?
                                                          g$lhs*$20398$1i4eWV)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$11835$1i4eWV
                                                            list
                                                            g$old*$20400$1i4eWV
                                                            g$new*$20401$1i4eWV)
                                                          (cons
                                                            g$b$20395$1i4eWV
                                                            g$b*$20396$1i4eWV)))
                                                      ((case-lambda
                                                         ((g$t$20402$1i4eWV)
                                                          ((case-lambda
                                                             ((g$ls/false$20403$1i4eWV)
                                                              (if g$ls/false$20403$1i4eWV
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$20404$1i4eWV)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$20386$1i4eWV
                                                                            g$x*$20404$1i4eWV
                                                                            g$old*$20400$1i4eWV
                                                                            g$new*$20401$1i4eWV)))
                                                                       (case-lambda
                                                                         ((g$y*$20408$1i4eWV
                                                                            g$old*$20409$1i4eWV
                                                                            g$new*$20410$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$new*$20411$1i4eWV
                                                                                g$old*$20412$1i4eWV
                                                                                g$y*$20413$1i4eWV)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$20399$1i4eWV))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$20413$1i4eWV
                                                                                  (g$f$20397$1i4eWV
                                                                                    (cdr g$lhs*$20398$1i4eWV)
                                                                                    (cdr g$rhs*$20399$1i4eWV)
                                                                                    g$old*$20412$1i4eWV
                                                                                    g$new*$20411$1i4eWV)))))
                                                                           g$new*$20410$1i4eWV
                                                                           g$old*$20409$1i4eWV
                                                                           g$y*$20408$1i4eWV))))))
                                                                  g$ls/false$20403$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$t$20414$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20415$1i4eWV)
                                                                        (if g$ls/false$20415$1i4eWV
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$20416$1i4eWV
                                                                                 g$x$20417$1i4eWV)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$20385$1i4eWV
                                                                                      g$x$20417$1i4eWV
                                                                                      g$old*$20400$1i4eWV
                                                                                      g$new*$20401$1i4eWV)))
                                                                                 (case-lambda
                                                                                   ((g$y$20418$1i4eWV
                                                                                      g$old*$20419$1i4eWV
                                                                                      g$new*$20420$1i4eWV)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$20386$1i4eWV
                                                                                           g$x*$20416$1i4eWV
                                                                                           g$old*$20419$1i4eWV
                                                                                           g$new*$20420$1i4eWV)))
                                                                                      (case-lambda
                                                                                        ((g$y*$20421$1i4eWV
                                                                                           g$old*$20422$1i4eWV
                                                                                           g$new*$20423$1i4eWV)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$20399$1i4eWV))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$20421$1i4eWV
                                                                                               g$y$20418$1i4eWV)
                                                                                             (g$f$20397$1i4eWV
                                                                                               (cdr g$lhs*$20398$1i4eWV)
                                                                                               (cdr g$rhs*$20399$1i4eWV)
                                                                                               g$old*$20422$1i4eWV
                                                                                               g$new*$20423$1i4eWV)))))))))))
                                                                            g$ls/false$20415$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$t$20424$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20425$1i4eWV)
                                                                                  (if g$ls/false$20425$1i4eWV
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$20426$1i4eWV)
                                                                                         (g$syntax-violation$19897$1i4eWV
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$20384$1i4eWV
                                                                                           g$others$20426$1i4eWV)))
                                                                                      g$ls/false$20425$1i4eWV)
                                                                                    (g$syntax-violation$19897$1i4eWV
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$20424$1i4eWV))))
                                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                                 g$t$20424$1i4eWV
                                                                                 'any))))
                                                                           g$t$20414$1i4eWV))))
                                                                     (g$syntax-dispatch$19778$1i4eWV
                                                                       g$t$20414$1i4eWV
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$20402$1i4eWV))))
                                                           (g$syntax-dispatch$19778$1i4eWV
                                                             g$t$20402$1i4eWV
                                                             'each-any))))
                                                       (car g$lhs*$20398$1i4eWV)))))))
                                        g$f$20397$1i4eWV)
                                      g$lhs*$20393$1i4eWV
                                      g$rhs*$20394$1i4eWV
                                      '()
                                      '()))))
                                g$ls/false$20392$1i4eWV)
                              (g$syntax-violation$19897$1i4eWV
                                '#f
                                '"invalid syntax"
                                g$t$20391$1i4eWV))))
                         (g$syntax-dispatch$19778$1i4eWV
                           g$t$20391$1i4eWV
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$20387$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$20387$1i4eWV
                 '(_ () any . each-any)))))
           g$stx$20384$1i4eWV)))))
   (g$let*-values-macro$19746$1i4eWV
     g$let*-values-macro$23342$1i4eWV
     (case-lambda
       ((g$stx$20440$1i4eWV)
        (letrec* ((g$check$20441$1i4eWV
                    (case-lambda
                      ((g$x*$20465$1i4eWV)
                       (if (not (null? g$x*$20465$1i4eWV))
                         ((case-lambda
                            ((g$x$20466$1i4eWV)
                             (begin
                               (if (not (g$id?$19280$1i4eWV
                                          g$x$20466$1i4eWV))
                                 (g$syntax-violation$19897$1i4eWV
                                   '#f
                                   '"not an identifier"
                                   g$stx$20440$1i4eWV
                                   g$x$20466$1i4eWV)
                                 (void))
                               (g$check$20441$1i4eWV
                                 (cdr g$x*$20465$1i4eWV))
                               (if (g$bound-id-member?$19287$1i4eWV
                                     g$x$20466$1i4eWV
                                     (cdr g$x*$20465$1i4eWV))
                                 (g$syntax-violation$19897$1i4eWV
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$20440$1i4eWV
                                   g$x$20466$1i4eWV)
                                 (void)))))
                          (car g$x*$20465$1i4eWV))
                         (void))))))
          ((case-lambda
             ((g$t$20442$1i4eWV)
              ((case-lambda
                 ((g$ls/false$20443$1i4eWV)
                  (if g$ls/false$20443$1i4eWV
                    (apply
                      (case-lambda
                        ((g$b$20444$1i4eWV g$b*$20445$1i4eWV)
                         (g$cons*$11837$1i4eWV
                           (g$bless$19741$1i4eWV 'let)
                           '()
                           g$b$20444$1i4eWV
                           g$b*$20445$1i4eWV)))
                      g$ls/false$20443$1i4eWV)
                    ((case-lambda
                       ((g$t$20446$1i4eWV)
                        ((case-lambda
                           ((g$ls/false$20447$1i4eWV)
                            (if g$ls/false$20447$1i4eWV
                              (apply
                                (case-lambda
                                  ((g$lhs*$20448$1i4eWV
                                     g$rhs*$20449$1i4eWV
                                     g$b$20450$1i4eWV
                                     g$b*$20451$1i4eWV)
                                   (g$bless$19741$1i4eWV
                                     ((letrec ((g$f$20452$1i4eWV
                                                 (case-lambda
                                                   ((g$lhs*$20453$1i4eWV
                                                      g$rhs*$20454$1i4eWV)
                                                    (if (null?
                                                          g$lhs*$20453$1i4eWV)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$20450$1i4eWV
                                                          g$b*$20451$1i4eWV))
                                                      ((case-lambda
                                                         ((g$t$20455$1i4eWV)
                                                          ((case-lambda
                                                             ((g$ls/false$20456$1i4eWV)
                                                              (if g$ls/false$20456$1i4eWV
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$20457$1i4eWV)
                                                                     (begin
                                                                       (g$check$20441$1i4eWV
                                                                         g$x*$20457$1i4eWV)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$20454$1i4eWV))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$20457$1i4eWV
                                                                           (g$f$20452$1i4eWV
                                                                             (cdr g$lhs*$20453$1i4eWV)
                                                                             (cdr g$rhs*$20454$1i4eWV)))))))
                                                                  g$ls/false$20456$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$t$20458$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20459$1i4eWV)
                                                                        (if g$ls/false$20459$1i4eWV
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$20460$1i4eWV
                                                                                 g$x$20461$1i4eWV)
                                                                               (begin
                                                                                 (g$check$20441$1i4eWV
                                                                                   (cons
                                                                                     g$x$20461$1i4eWV
                                                                                     g$x*$20460$1i4eWV))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$20454$1i4eWV))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$20460$1i4eWV
                                                                                       g$x$20461$1i4eWV)
                                                                                     (g$f$20452$1i4eWV
                                                                                       (cdr g$lhs*$20453$1i4eWV)
                                                                                       (cdr g$rhs*$20454$1i4eWV)))))))
                                                                            g$ls/false$20459$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$t$20462$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20463$1i4eWV)
                                                                                  (if g$ls/false$20463$1i4eWV
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$20464$1i4eWV)
                                                                                         (g$syntax-violation$19897$1i4eWV
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$20440$1i4eWV
                                                                                           g$others$20464$1i4eWV)))
                                                                                      g$ls/false$20463$1i4eWV)
                                                                                    (g$syntax-violation$19897$1i4eWV
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$20462$1i4eWV))))
                                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                                 g$t$20462$1i4eWV
                                                                                 'any))))
                                                                           g$t$20458$1i4eWV))))
                                                                     (g$syntax-dispatch$19778$1i4eWV
                                                                       g$t$20458$1i4eWV
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$20455$1i4eWV))))
                                                           (g$syntax-dispatch$19778$1i4eWV
                                                             g$t$20455$1i4eWV
                                                             'each-any))))
                                                       (car g$lhs*$20453$1i4eWV)))))))
                                        g$f$20452$1i4eWV)
                                      g$lhs*$20448$1i4eWV
                                      g$rhs*$20449$1i4eWV))))
                                g$ls/false$20447$1i4eWV)
                              (g$syntax-violation$19897$1i4eWV
                                '#f
                                '"invalid syntax"
                                g$t$20446$1i4eWV))))
                         (g$syntax-dispatch$19778$1i4eWV
                           g$t$20446$1i4eWV
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$20442$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$20442$1i4eWV
                 '(_ () any . each-any)))))
           g$stx$20440$1i4eWV)))))
   (g$trace-lambda-macro$19747$1i4eWV
     g$trace-lambda-macro$23343$1i4eWV
     (case-lambda
       ((g$stx$20467$1i4eWV)
        ((case-lambda
           ((g$t$20468$1i4eWV)
            ((case-lambda
               ((g$ls/false$20469$1i4eWV)
                (if g$ls/false$20469$1i4eWV
                  (apply
                    (case-lambda
                      ((g$who$20470$1i4eWV
                         g$fmls$20471$1i4eWV
                         g$b$20472$1i4eWV
                         g$b*$20473$1i4eWV)
                       (if (g$valid-bound-ids?$19285$1i4eWV
                             g$fmls$20471$1i4eWV)
                         (g$bless$19741$1i4eWV
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$20470$1i4eWV)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$20471$1i4eWV
                                 (cons
                                   g$b$20472$1i4eWV
                                   g$b*$20473$1i4eWV)))))
                         (g$invalid-fmls-error$19743$1i4eWV
                           g$stx$20467$1i4eWV
                           g$fmls$20471$1i4eWV))))
                    g$ls/false$20469$1i4eWV)
                  ((case-lambda
                     ((g$t$20474$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20475$1i4eWV)
                          (if g$ls/false$20475$1i4eWV
                            (apply
                              (case-lambda
                                ((g$who$20476$1i4eWV
                                   g$fmls$20477$1i4eWV
                                   g$last$20478$1i4eWV
                                   g$b$20479$1i4eWV
                                   g$b*$20480$1i4eWV)
                                 (if (g$valid-bound-ids?$19285$1i4eWV
                                       (cons
                                         g$last$20478$1i4eWV
                                         g$fmls$20477$1i4eWV))
                                   (g$bless$19741$1i4eWV
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$20476$1i4eWV)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$20477$1i4eWV
                                             g$last$20478$1i4eWV)
                                           (cons
                                             g$b$20479$1i4eWV
                                             g$b*$20480$1i4eWV)))))
                                   (g$invalid-fmls-error$19743$1i4eWV
                                     g$stx$20467$1i4eWV
                                     (append
                                       g$fmls$20477$1i4eWV
                                       g$last$20478$1i4eWV)))))
                              g$ls/false$20475$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$20474$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20474$1i4eWV
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$20468$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20468$1i4eWV
               '(_ any each-any any . each-any)))))
         g$stx$20467$1i4eWV))))
   (g$trace-define-macro$19748$1i4eWV
     g$trace-define-macro$23344$1i4eWV
     (case-lambda
       ((g$stx$20481$1i4eWV)
        ((case-lambda
           ((g$t$20482$1i4eWV)
            ((case-lambda
               ((g$ls/false$20483$1i4eWV)
                (if g$ls/false$20483$1i4eWV
                  (apply
                    (case-lambda
                      ((g$who$20484$1i4eWV
                         g$fmls$20485$1i4eWV
                         g$b$20486$1i4eWV
                         g$b*$20487$1i4eWV)
                       (if (g$valid-bound-ids?$19285$1i4eWV
                             g$fmls$20485$1i4eWV)
                         (g$bless$19741$1i4eWV
                           (list
                             'define
                             g$who$20484$1i4eWV
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$20484$1i4eWV)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$20485$1i4eWV
                                   (cons
                                     g$b$20486$1i4eWV
                                     g$b*$20487$1i4eWV))))))
                         (g$invalid-fmls-error$19743$1i4eWV
                           g$stx$20481$1i4eWV
                           g$fmls$20485$1i4eWV))))
                    g$ls/false$20483$1i4eWV)
                  ((case-lambda
                     ((g$t$20488$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20489$1i4eWV)
                          (if g$ls/false$20489$1i4eWV
                            (apply
                              (case-lambda
                                ((g$who$20490$1i4eWV
                                   g$fmls$20491$1i4eWV
                                   g$last$20492$1i4eWV
                                   g$b$20493$1i4eWV
                                   g$b*$20494$1i4eWV)
                                 (if (g$valid-bound-ids?$19285$1i4eWV
                                       (cons
                                         g$last$20492$1i4eWV
                                         g$fmls$20491$1i4eWV))
                                   (g$bless$19741$1i4eWV
                                     (list
                                       'define
                                       g$who$20490$1i4eWV
                                       (list
                                         'make-traced-procedure
                                         (list
                                           'quote
                                           g$who$20490$1i4eWV)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$20491$1i4eWV
                                               g$last$20492$1i4eWV)
                                             (cons
                                               g$b$20493$1i4eWV
                                               g$b*$20494$1i4eWV))))))
                                   (g$invalid-fmls-error$19743$1i4eWV
                                     g$stx$20481$1i4eWV
                                     (append
                                       g$fmls$20491$1i4eWV
                                       g$last$20492$1i4eWV)))))
                              g$ls/false$20489$1i4eWV)
                            ((case-lambda
                               ((g$t$20495$1i4eWV)
                                ((case-lambda
                                   ((g$ls/false$20496$1i4eWV)
                                    (if g$ls/false$20496$1i4eWV
                                      (apply
                                        (case-lambda
                                          ((g$who$20497$1i4eWV
                                             g$expr$20498$1i4eWV)
                                           (if (g$id?$19280$1i4eWV
                                                 g$who$20497$1i4eWV)
                                             (g$bless$19741$1i4eWV
                                               (list
                                                 'define
                                                 g$who$20497$1i4eWV
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$20498$1i4eWV))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$20497$1i4eWV)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$19897$1i4eWV
                                               '#f
                                               '"invalid name"
                                               g$stx$20481$1i4eWV))))
                                        g$ls/false$20496$1i4eWV)
                                      (g$syntax-violation$19897$1i4eWV
                                        '#f
                                        '"invalid syntax"
                                        g$t$20495$1i4eWV))))
                                 (g$syntax-dispatch$19778$1i4eWV
                                   g$t$20495$1i4eWV
                                   '(_ any any)))))
                             g$t$20488$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20488$1i4eWV
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$20482$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20482$1i4eWV
               '(_ (any . each-any) any . each-any)))))
         g$stx$20481$1i4eWV))))
   (g$trace-define-syntax-macro$19749$1i4eWV
     g$trace-define-syntax-macro$23345$1i4eWV
     (case-lambda
       ((g$stx$20499$1i4eWV)
        ((case-lambda
           ((g$t$20500$1i4eWV)
            ((case-lambda
               ((g$ls/false$20501$1i4eWV)
                (if g$ls/false$20501$1i4eWV
                  (apply
                    (case-lambda
                      ((g$who$20502$1i4eWV g$expr$20503$1i4eWV)
                       (if (g$id?$19280$1i4eWV g$who$20502$1i4eWV)
                         (g$bless$19741$1i4eWV
                           (list
                             'define-syntax
                             g$who$20502$1i4eWV
                             (list
                               'make-traced-macro
                               (list 'quote g$who$20502$1i4eWV)
                               g$expr$20503$1i4eWV)))
                         (g$syntax-violation$19897$1i4eWV
                           '#f
                           '"invalid name"
                           g$stx$20499$1i4eWV))))
                    g$ls/false$20501$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20500$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20500$1i4eWV
               '(_ any any)))))
         g$stx$20499$1i4eWV))))
   (g$trace-let/rec-syntax$19750$1i4eWV
     g$trace-let/rec-syntax$23346$1i4eWV
     (case-lambda
       ((g$who$20504$1i4eWV)
        (case-lambda
          ((g$stx$20505$1i4eWV)
           ((case-lambda
              ((g$t$20506$1i4eWV)
               ((case-lambda
                  ((g$ls/false$20507$1i4eWV)
                   (if g$ls/false$20507$1i4eWV
                     (apply
                       (case-lambda
                         ((g$lhs*$20508$1i4eWV
                            g$rhs*$20509$1i4eWV
                            g$b$20510$1i4eWV
                            g$b*$20511$1i4eWV)
                          (if (g$valid-bound-ids?$19285$1i4eWV
                                g$lhs*$20508$1i4eWV)
                            ((case-lambda
                               ((g$rhs*$20512$1i4eWV)
                                (g$bless$19741$1i4eWV
                                  (cons
                                    g$who$20504$1i4eWV
                                    (cons
                                      (g$map$11835$1i4eWV
                                        list
                                        g$lhs*$20508$1i4eWV
                                        g$rhs*$20512$1i4eWV)
                                      (cons
                                        g$b$20510$1i4eWV
                                        g$b*$20511$1i4eWV))))))
                             (g$map$11835$1i4eWV
                               (case-lambda
                                 ((g$lhs$20513$1i4eWV
                                    g$rhs$20514$1i4eWV)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$20513$1i4eWV)
                                    g$rhs$20514$1i4eWV)))
                               g$lhs*$20508$1i4eWV
                               g$rhs*$20509$1i4eWV))
                            (g$invalid-fmls-error$19743$1i4eWV
                              g$stx$20505$1i4eWV
                              g$lhs*$20508$1i4eWV))))
                       g$ls/false$20507$1i4eWV)
                     (g$syntax-violation$19897$1i4eWV
                       '#f
                       '"invalid syntax"
                       g$t$20506$1i4eWV))))
                (g$syntax-dispatch$19778$1i4eWV
                  g$t$20506$1i4eWV
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$20505$1i4eWV))))))
   (g$trace-let-syntax-macro$19751$1i4eWV
     g$trace-let-syntax-macro$23347$1i4eWV
     (g$trace-let/rec-syntax$19750$1i4eWV 'let-syntax))
   (g$trace-letrec-syntax-macro$19752$1i4eWV
     g$trace-letrec-syntax-macro$23348$1i4eWV
     (g$trace-let/rec-syntax$19750$1i4eWV 'letrec-syntax))
   (g$guard-macro$19753$1i4eWV
     g$guard-macro$23349$1i4eWV
     (case-lambda
       ((g$x$20515$1i4eWV)
        (letrec* ((g$gen-clauses$20516$1i4eWV
                    (case-lambda
                      ((g$con$20528$1i4eWV
                         g$outerk$20529$1i4eWV
                         g$clause*$20530$1i4eWV)
                       (letrec* ((g$f$20531$1i4eWV
                                   (case-lambda
                                     ((g$x$20559$1i4eWV
                                        g$k$20560$1i4eWV)
                                      ((case-lambda
                                         ((g$t$20561$1i4eWV)
                                          ((case-lambda
                                             ((g$ls/false$20562$1i4eWV)
                                              (if g$ls/false$20562$1i4eWV
                                                (apply
                                                  (case-lambda
                                                    ((g$e$20563$1i4eWV
                                                       g$p$20564$1i4eWV)
                                                     ((case-lambda
                                                        ((g$t$20565$1i4eWV)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$20565$1i4eWV
                                                               g$e$20563$1i4eWV))
                                                           (list
                                                             'if
                                                             g$t$20565$1i4eWV
                                                             (list
                                                               g$p$20564$1i4eWV
                                                               g$t$20565$1i4eWV)
                                                             g$k$20560$1i4eWV))))
                                                      (gensym))))
                                                  g$ls/false$20562$1i4eWV)
                                                ((case-lambda
                                                   ((g$t$20566$1i4eWV)
                                                    ((case-lambda
                                                       ((g$ls/false$20567$1i4eWV)
                                                        (if g$ls/false$20567$1i4eWV
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$20568$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$t$20569$1i4eWV)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$20569$1i4eWV
                                                                         g$e$20568$1i4eWV))
                                                                     (list
                                                                       'if
                                                                       g$t$20569$1i4eWV
                                                                       g$t$20569$1i4eWV
                                                                       g$k$20560$1i4eWV))))
                                                                (gensym))))
                                                            g$ls/false$20567$1i4eWV)
                                                          ((case-lambda
                                                             ((g$t$20570$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$ls/false$20571$1i4eWV)
                                                                  (if g$ls/false$20571$1i4eWV
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$20572$1i4eWV
                                                                           g$v$20573$1i4eWV
                                                                           g$v*$20574$1i4eWV)
                                                                         (list
                                                                           'if
                                                                           g$e$20572$1i4eWV
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$20573$1i4eWV
                                                                               g$v*$20574$1i4eWV))
                                                                           g$k$20560$1i4eWV)))
                                                                      g$ls/false$20571$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$t$20575$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$ls/false$20576$1i4eWV)
                                                                            (if g$ls/false$20576$1i4eWV
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$19897$1i4eWV
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$20559$1i4eWV)))
                                                                                g$ls/false$20576$1i4eWV)
                                                                              (g$syntax-violation$19897$1i4eWV
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$20575$1i4eWV))))
                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                           g$t$20575$1i4eWV
                                                                           '_))))
                                                                     g$t$20570$1i4eWV))))
                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                 g$t$20570$1i4eWV
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$20566$1i4eWV))))
                                                     (g$syntax-dispatch$19778$1i4eWV
                                                       g$t$20566$1i4eWV
                                                       '(any)))))
                                                 g$t$20561$1i4eWV))))
                                           (g$syntax-dispatch$19778$1i4eWV
                                             g$t$20561$1i4eWV
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$20559$1i4eWV))))
                                 (g$f*$20532$1i4eWV
                                   (case-lambda
                                     ((g$x*$20539$1i4eWV)
                                      ((case-lambda
                                         ((g$t$20540$1i4eWV)
                                          ((case-lambda
                                             ((g$ls/false$20541$1i4eWV)
                                              (if g$ls/false$20541$1i4eWV
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$20528$1i4eWV)
                                                       '#t)))
                                                  g$ls/false$20541$1i4eWV)
                                                ((case-lambda
                                                   ((g$t$20542$1i4eWV)
                                                    ((case-lambda
                                                       ((g$ls/false$20543$1i4eWV)
                                                        (if g$ls/false$20543$1i4eWV
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$20544$1i4eWV
                                                                 g$e*$20545$1i4eWV)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$20544$1i4eWV
                                                                     g$e*$20545$1i4eWV))
                                                                 '#f)))
                                                            g$ls/false$20543$1i4eWV)
                                                          ((case-lambda
                                                             ((g$t$20546$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$ls/false$20547$1i4eWV)
                                                                  (if g$ls/false$20547$1i4eWV
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$20548$1i4eWV
                                                                           g$cls*$20549$1i4eWV)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$20532$1i4eWV
                                                                                g$cls*$20549$1i4eWV)))
                                                                           (case-lambda
                                                                             ((g$e$20552$1i4eWV
                                                                                g$g$20553$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$g$20554$1i4eWV
                                                                                    g$e$20555$1i4eWV)
                                                                                  (values
                                                                                    (g$f$20531$1i4eWV
                                                                                      g$cls$20548$1i4eWV
                                                                                      g$e$20555$1i4eWV)
                                                                                    g$g$20554$1i4eWV)))
                                                                               g$g$20553$1i4eWV
                                                                               g$e$20552$1i4eWV))))))
                                                                      g$ls/false$20547$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$t$20556$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$ls/false$20557$1i4eWV)
                                                                            (if g$ls/false$20557$1i4eWV
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$20558$1i4eWV)
                                                                                   (g$syntax-violation$19897$1i4eWV
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$20558$1i4eWV)))
                                                                                g$ls/false$20557$1i4eWV)
                                                                              (g$syntax-violation$19897$1i4eWV
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$20556$1i4eWV))))
                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                           g$t$20556$1i4eWV
                                                                           'any))))
                                                                     g$t$20546$1i4eWV))))
                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                 g$t$20546$1i4eWV
                                                                 '(any .
                                                                       any)))))
                                                           g$t$20542$1i4eWV))))
                                                     (g$syntax-dispatch$19778$1i4eWV
                                                       g$t$20542$1i4eWV
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$20540$1i4eWV))))
                                           (g$syntax-dispatch$19778$1i4eWV
                                             g$t$20540$1i4eWV
                                             '()))))
                                       g$x*$20539$1i4eWV)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$20532$1i4eWV
                                g$clause*$20530$1i4eWV)))
                           (case-lambda
                             ((g$code$20535$1i4eWV
                                g$raisek$20536$1i4eWV)
                              ((case-lambda
                                 ((g$raisek$20537$1i4eWV
                                    g$code$20538$1i4eWV)
                                  (if g$raisek$20537$1i4eWV
                                    (list
                                      g$outerk$20529$1i4eWV
                                      g$code$20538$1i4eWV)
                                    g$code$20538$1i4eWV)))
                               g$raisek$20536$1i4eWV
                               g$code$20535$1i4eWV)))))))))
          ((case-lambda
             ((g$t$20517$1i4eWV)
              ((case-lambda
                 ((g$ls/false$20518$1i4eWV)
                  (if (if g$ls/false$20518$1i4eWV
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$20519$1i4eWV
                                 g$clause*$20520$1i4eWV
                                 g$b$20521$1i4eWV
                                 g$b*$20522$1i4eWV)
                               (g$id?$19280$1i4eWV g$con$20519$1i4eWV)))
                            g$ls/false$20518$1i4eWV))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$20523$1i4eWV
                           g$clause*$20524$1i4eWV
                           g$b$20525$1i4eWV
                           g$b*$20526$1i4eWV)
                         ((case-lambda
                            ((g$outerk$20527$1i4eWV)
                             (g$bless$19741$1i4eWV
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$20527$1i4eWV)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$20523$1i4eWV)
                                           (g$gen-clauses$20516$1i4eWV
                                             g$con$20523$1i4eWV
                                             g$outerk$20527$1i4eWV
                                             g$clause*$20524$1i4eWV))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$20525$1i4eWV
                                               g$b*$20526$1i4eWV)))))))))))
                          (gensym))))
                      g$ls/false$20518$1i4eWV)
                    (g$syntax-violation$19897$1i4eWV
                      '#f
                      '"invalid syntax"
                      g$t$20517$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$20517$1i4eWV
                 '(_ (any . each-any) any . each-any)))))
           g$x$20515$1i4eWV)))))
   (g$define-enumeration-macro$19754$1i4eWV
     g$define-enumeration-macro$23350$1i4eWV
     (case-lambda
       ((g$stx$20577$1i4eWV)
        (letrec* ((g$set?$20578$1i4eWV
                    (case-lambda
                      ((g$x$20591$1i4eWV)
                       ((case-lambda
                          ((g$t$20592$1i4eWV)
                           (if g$t$20592$1i4eWV
                             g$t$20592$1i4eWV
                             (begin
                               '#f
                               (if (not (g$memq$11827$1i4eWV
                                          (car g$x$20591$1i4eWV)
                                          (cdr g$x$20591$1i4eWV)))
                                 (begin
                                   '#f
                                   (g$set?$20578$1i4eWV
                                     (cdr g$x$20591$1i4eWV)))
                                 '#f)))))
                        (null? g$x$20591$1i4eWV)))))
                  (g$remove-dups$20579$1i4eWV
                    (case-lambda
                      ((g$ls$20590$1i4eWV)
                       (if (null? g$ls$20590$1i4eWV)
                         '()
                         (cons
                           (car g$ls$20590$1i4eWV)
                           (g$remove-dups$20579$1i4eWV
                             (g$remq$11842$1i4eWV
                               (car g$ls$20590$1i4eWV)
                               (cdr g$ls$20590$1i4eWV)))))))))
          ((case-lambda
             ((g$t$20580$1i4eWV)
              ((case-lambda
                 ((g$ls/false$20581$1i4eWV)
                  (if (if g$ls/false$20581$1i4eWV
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$20582$1i4eWV
                                 g$id*$20583$1i4eWV
                                 g$maker$20584$1i4eWV)
                               (if (g$id?$19280$1i4eWV
                                     g$name$20582$1i4eWV)
                                 (if (g$id?$19280$1i4eWV
                                       g$maker$20584$1i4eWV)
                                   (begin
                                     '#f
                                     (g$for-all$11833$1i4eWV
                                       g$id?$19280$1i4eWV
                                       g$id*$20583$1i4eWV))
                                   '#f)
                                 '#f)))
                            g$ls/false$20581$1i4eWV))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$20585$1i4eWV
                           g$id*$20586$1i4eWV
                           g$maker$20587$1i4eWV)
                         ((case-lambda
                            ((g$name*$20588$1i4eWV g$mk$20589$1i4eWV)
                             (g$bless$19741$1i4eWV
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$20589$1i4eWV
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$20588$1i4eWV))))
                                 (list
                                   'define-syntax
                                   g$name$20585$1i4eWV
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$20588$1i4eWV))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$20585$1i4eWV)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$20587$1i4eWV
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$20587$1i4eWV)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$20588$1i4eWV))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$20587$1i4eWV)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$20589$1i4eWV
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$20579$1i4eWV
                            (g$syntax->datum$19900$1i4eWV
                              g$id*$20586$1i4eWV))
                          (gensym))))
                      g$ls/false$20581$1i4eWV)
                    (g$syntax-violation$19897$1i4eWV
                      '#f
                      '"invalid syntax"
                      g$t$20580$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$20580$1i4eWV
                 '(_ any each-any any)))))
           g$stx$20577$1i4eWV)))))
   (g$time-macro$19755$1i4eWV
     g$time-macro$23351$1i4eWV
     (case-lambda
       ((g$stx$20593$1i4eWV)
        ((case-lambda
           ((g$t$20594$1i4eWV)
            ((case-lambda
               ((g$ls/false$20595$1i4eWV)
                (if g$ls/false$20595$1i4eWV
                  (apply
                    (case-lambda
                      ((g$expr$20596$1i4eWV)
                       ((case-lambda
                          ((g$str$20597$1i4eWV)
                           (g$bless$19741$1i4eWV
                             (list
                               'time-it
                               g$str$20597$1i4eWV
                               (list
                                 'lambda
                                 '()
                                 g$expr$20596$1i4eWV)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$17692$1i4eWV)))
                          (case-lambda
                            ((g$p$20600$1i4eWV g$e$20601$1i4eWV)
                             ((case-lambda
                                ((g$e$20602$1i4eWV g$p$20603$1i4eWV)
                                 (begin
                                   (write
                                     (g$syntax->datum$19900$1i4eWV
                                       g$expr$20596$1i4eWV)
                                     g$p$20603$1i4eWV)
                                   (g$e$20602$1i4eWV))))
                              g$e$20601$1i4eWV
                              g$p$20600$1i4eWV)))))))
                    g$ls/false$20595$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20594$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20594$1i4eWV
               '(_ any)))))
         g$stx$20593$1i4eWV))))
   (g$delay-macro$19756$1i4eWV
     g$delay-macro$23352$1i4eWV
     (case-lambda
       ((g$stx$20604$1i4eWV)
        ((case-lambda
           ((g$t$20605$1i4eWV)
            ((case-lambda
               ((g$ls/false$20606$1i4eWV)
                (if g$ls/false$20606$1i4eWV
                  (apply
                    (case-lambda
                      ((g$expr$20607$1i4eWV)
                       (g$bless$19741$1i4eWV
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$20607$1i4eWV)))))
                    g$ls/false$20606$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20605$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20605$1i4eWV
               '(_ any)))))
         g$stx$20604$1i4eWV))))
   (g$assert-macro$19757$1i4eWV
     g$assert-macro$23353$1i4eWV
     (case-lambda
       ((g$stx$20608$1i4eWV)
        ((case-lambda
           ((g$t$20609$1i4eWV)
            ((case-lambda
               ((g$ls/false$20610$1i4eWV)
                (if g$ls/false$20610$1i4eWV
                  (apply
                    (case-lambda
                      ((g$expr$20611$1i4eWV)
                       ((case-lambda
                          ((g$pos$20612$1i4eWV)
                           (g$bless$19741$1i4eWV
                             (list
                               'unless
                               g$expr$20611$1i4eWV
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$20611$1i4eWV)
                                 (list 'quote g$pos$20612$1i4eWV))))))
                        ((case-lambda
                           ((g$t$20613$1i4eWV)
                            (if g$t$20613$1i4eWV
                              g$t$20613$1i4eWV
                              (begin
                                '#f
                                (g$expression-position$19892$1i4eWV
                                  g$expr$20611$1i4eWV)))))
                         (g$expression-position$19892$1i4eWV
                           g$stx$20608$1i4eWV)))))
                    g$ls/false$20610$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20609$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20609$1i4eWV
               '(_ any)))))
         g$stx$20608$1i4eWV))))
   (g$endianness-macro$19758$1i4eWV
     g$endianness-macro$23354$1i4eWV
     (case-lambda
       ((g$stx$20614$1i4eWV)
        ((case-lambda
           ((g$t$20615$1i4eWV)
            ((case-lambda
               ((g$ls/false$20616$1i4eWV)
                (if g$ls/false$20616$1i4eWV
                  (apply
                    (case-lambda
                      ((g$e$20617$1i4eWV)
                       ((case-lambda
                          ((g$t$20618$1i4eWV)
                           (if (eqv? g$t$20618$1i4eWV 'little)
                             (g$bless$19741$1i4eWV ''little)
                             (if (eqv? g$t$20618$1i4eWV 'big)
                               (g$bless$19741$1i4eWV ''big)
                               (g$syntax-violation$19897$1i4eWV
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$20614$1i4eWV)))))
                        (g$syntax->datum$19900$1i4eWV
                          g$e$20617$1i4eWV))))
                    g$ls/false$20616$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20615$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20615$1i4eWV
               '(_ any)))))
         g$stx$20614$1i4eWV))))
   (g$identifier-syntax-macro$19759$1i4eWV
     g$identifier-syntax-macro$23355$1i4eWV
     (case-lambda
       ((g$stx$20619$1i4eWV)
        ((case-lambda
           ((g$t$20620$1i4eWV)
            ((case-lambda
               ((g$ls/false$20621$1i4eWV)
                (if g$ls/false$20621$1i4eWV
                  (apply
                    (case-lambda
                      ((g$expr$20622$1i4eWV)
                       (g$bless$19741$1i4eWV
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$20622$1i4eWV))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$20622$1i4eWV)
                                   '(#'(e* ...))))))))))
                    g$ls/false$20621$1i4eWV)
                  ((case-lambda
                     ((g$t$20623$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20624$1i4eWV)
                          (if (if g$ls/false$20624$1i4eWV
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$20625$1i4eWV
                                         g$expr1$20626$1i4eWV
                                         g$id2$20627$1i4eWV
                                         g$expr2$20628$1i4eWV
                                         g$expr3$20629$1i4eWV)
                                       (if (g$id?$19280$1i4eWV
                                             g$id1$20625$1i4eWV)
                                         (if (g$id?$19280$1i4eWV
                                               g$id2$20627$1i4eWV)
                                           (begin
                                             '#f
                                             (g$id?$19280$1i4eWV
                                               g$expr2$20628$1i4eWV))
                                           '#f)
                                         '#f)))
                                    g$ls/false$20624$1i4eWV))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$20630$1i4eWV
                                   g$expr1$20631$1i4eWV
                                   g$id2$20632$1i4eWV
                                   g$expr2$20633$1i4eWV
                                   g$expr3$20634$1i4eWV)
                                 (g$bless$19741$1i4eWV
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$20631$1i4eWV))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$20633$1i4eWV)
                                           (list
                                             'syntax
                                             g$expr3$20634$1i4eWV))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$20631$1i4eWV
                                               '(e* ...))))))))))
                              g$ls/false$20624$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$20623$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20623$1i4eWV
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$20620$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20620$1i4eWV
               '(_ any)))))
         g$stx$20619$1i4eWV))))
   (g$do-macro$19760$1i4eWV
     g$do-macro$23356$1i4eWV
     (case-lambda
       ((g$stx$20635$1i4eWV)
        (letrec* ((g$bind$20636$1i4eWV
                    (case-lambda
                      ((g$x$20648$1i4eWV)
                       ((case-lambda
                          ((g$t$20649$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$20650$1i4eWV)
                               (if g$ls/false$20650$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$x$20651$1i4eWV
                                        g$init$20652$1i4eWV)
                                      (list
                                        g$x$20651$1i4eWV
                                        g$init$20652$1i4eWV
                                        g$x$20651$1i4eWV)))
                                   g$ls/false$20650$1i4eWV)
                                 ((case-lambda
                                    ((g$t$20653$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$20654$1i4eWV)
                                         (if g$ls/false$20654$1i4eWV
                                           (apply
                                             (case-lambda
                                               ((g$x$20655$1i4eWV
                                                  g$init$20656$1i4eWV
                                                  g$step$20657$1i4eWV)
                                                (list
                                                  g$x$20655$1i4eWV
                                                  g$init$20656$1i4eWV
                                                  g$step$20657$1i4eWV)))
                                             g$ls/false$20654$1i4eWV)
                                           ((case-lambda
                                              ((g$t$20658$1i4eWV)
                                               ((case-lambda
                                                  ((g$ls/false$20659$1i4eWV)
                                                   (if g$ls/false$20659$1i4eWV
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$19897$1i4eWV
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$20635$1i4eWV)))
                                                       g$ls/false$20659$1i4eWV)
                                                     (g$syntax-violation$19897$1i4eWV
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$20658$1i4eWV))))
                                                (g$syntax-dispatch$19778$1i4eWV
                                                  g$t$20658$1i4eWV
                                                  '_))))
                                            g$t$20653$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$20653$1i4eWV
                                        '(any any any)))))
                                  g$t$20649$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$20649$1i4eWV
                              '(any any)))))
                        g$x$20648$1i4eWV)))))
          ((case-lambda
             ((g$t$20637$1i4eWV)
              ((case-lambda
                 ((g$ls/false$20638$1i4eWV)
                  (if g$ls/false$20638$1i4eWV
                    (apply
                      (case-lambda
                        ((g$binding*$20639$1i4eWV
                           g$test$20640$1i4eWV
                           g$expr*$20641$1i4eWV
                           g$command*$20642$1i4eWV)
                         ((case-lambda
                            ((g$t$20643$1i4eWV)
                             ((case-lambda
                                ((g$ls/false$20644$1i4eWV)
                                 (if g$ls/false$20644$1i4eWV
                                   (apply
                                     (case-lambda
                                       ((g$x*$20645$1i4eWV
                                          g$init*$20646$1i4eWV
                                          g$step*$20647$1i4eWV)
                                        (if (g$valid-bound-ids?$19285$1i4eWV
                                              g$x*$20645$1i4eWV)
                                          (g$bless$19741$1i4eWV
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$20645$1i4eWV
                                                    (list
                                                      'if
                                                      g$test$20640$1i4eWV
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$20641$1i4eWV))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$20642$1i4eWV
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$20647$1i4eWV))))))))
                                              (cons
                                                'loop
                                                g$init*$20646$1i4eWV)))
                                          (g$syntax-violation$19897$1i4eWV
                                            '#f
                                            '"invalid bindings"
                                            g$stx$20635$1i4eWV))))
                                     g$ls/false$20644$1i4eWV)
                                   (g$syntax-violation$19897$1i4eWV
                                     '#f
                                     '"invalid syntax"
                                     g$t$20643$1i4eWV))))
                              (g$syntax-dispatch$19778$1i4eWV
                                g$t$20643$1i4eWV
                                '#(each (any any any))))))
                          (g$map$11835$1i4eWV
                            g$bind$20636$1i4eWV
                            g$binding*$20639$1i4eWV))))
                      g$ls/false$20638$1i4eWV)
                    (g$syntax-violation$19897$1i4eWV
                      '#f
                      '"invalid syntax"
                      g$t$20637$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$20637$1i4eWV
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$20635$1i4eWV)))))
   (g$let*-macro$19761$1i4eWV
     g$let*-macro$23357$1i4eWV
     (case-lambda
       ((g$stx$20660$1i4eWV)
        ((case-lambda
           ((g$t$20661$1i4eWV)
            ((case-lambda
               ((g$ls/false$20662$1i4eWV)
                (if (if g$ls/false$20662$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$20663$1i4eWV
                               g$rhs*$20664$1i4eWV
                               g$b$20665$1i4eWV
                               g$b*$20666$1i4eWV)
                             (g$for-all$11833$1i4eWV
                               g$id?$19280$1i4eWV
                               g$lhs*$20663$1i4eWV)))
                          g$ls/false$20662$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$20667$1i4eWV
                         g$rhs*$20668$1i4eWV
                         g$b$20669$1i4eWV
                         g$b*$20670$1i4eWV)
                       (g$bless$19741$1i4eWV
                         ((letrec ((g$f$20671$1i4eWV
                                     (case-lambda
                                       ((g$x*$20672$1i4eWV)
                                        (if (null? g$x*$20672$1i4eWV)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$20669$1i4eWV
                                                g$b*$20670$1i4eWV)))
                                          (if (null?
                                                (cdr g$x*$20672$1i4eWV))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$20672$1i4eWV))
                                                (cons
                                                  g$b$20669$1i4eWV
                                                  g$b*$20670$1i4eWV)))
                                            (list
                                              'let
                                              (list
                                                (car g$x*$20672$1i4eWV))
                                              (g$f$20671$1i4eWV
                                                (cdr g$x*$20672$1i4eWV)))))))))
                            g$f$20671$1i4eWV)
                          (g$map$11835$1i4eWV
                            list
                            g$lhs*$20667$1i4eWV
                            g$rhs*$20668$1i4eWV)))))
                    g$ls/false$20662$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20661$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20661$1i4eWV
               '(_ #(each (any any)) any . each-any)))))
         g$stx$20660$1i4eWV))))
   (g$or-macro$19762$1i4eWV
     g$or-macro$23358$1i4eWV
     (case-lambda
       ((g$stx$20673$1i4eWV)
        ((case-lambda
           ((g$t$20674$1i4eWV)
            ((case-lambda
               ((g$ls/false$20675$1i4eWV)
                (if g$ls/false$20675$1i4eWV
                  (apply (case-lambda (() '#f)) g$ls/false$20675$1i4eWV)
                  ((case-lambda
                     ((g$t$20676$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20677$1i4eWV)
                          (if g$ls/false$20677$1i4eWV
                            (apply
                              (case-lambda
                                ((g$e$20678$1i4eWV g$e*$20679$1i4eWV)
                                 (g$bless$19741$1i4eWV
                                   ((letrec ((g$f$20680$1i4eWV
                                               (case-lambda
                                                 ((g$e$20681$1i4eWV
                                                    g$e*$20682$1i4eWV)
                                                  (if (null?
                                                        g$e*$20682$1i4eWV)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$20681$1i4eWV)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$20681$1i4eWV))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$20680$1i4eWV
                                                          (car g$e*$20682$1i4eWV)
                                                          (cdr g$e*$20682$1i4eWV)))))))))
                                      g$f$20680$1i4eWV)
                                    g$e$20678$1i4eWV
                                    g$e*$20679$1i4eWV))))
                              g$ls/false$20677$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$20676$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20676$1i4eWV
                         '(_ any . each-any)))))
                   g$t$20674$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV g$t$20674$1i4eWV '(_)))))
         g$stx$20673$1i4eWV))))
   (g$and-macro$19763$1i4eWV
     g$and-macro$23359$1i4eWV
     (case-lambda
       ((g$stx$20683$1i4eWV)
        ((case-lambda
           ((g$t$20684$1i4eWV)
            ((case-lambda
               ((g$ls/false$20685$1i4eWV)
                (if g$ls/false$20685$1i4eWV
                  (apply (case-lambda (() '#t)) g$ls/false$20685$1i4eWV)
                  ((case-lambda
                     ((g$t$20686$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$20687$1i4eWV)
                          (if g$ls/false$20687$1i4eWV
                            (apply
                              (case-lambda
                                ((g$e$20688$1i4eWV g$e*$20689$1i4eWV)
                                 (g$bless$19741$1i4eWV
                                   ((letrec ((g$f$20690$1i4eWV
                                               (case-lambda
                                                 ((g$e$20691$1i4eWV
                                                    g$e*$20692$1i4eWV)
                                                  (if (null?
                                                        g$e*$20692$1i4eWV)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$20691$1i4eWV)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$20691$1i4eWV
                                                        (cons
                                                          (g$f$20690$1i4eWV
                                                            (car g$e*$20692$1i4eWV)
                                                            (cdr g$e*$20692$1i4eWV))
                                                          '(#f)))))))))
                                      g$f$20690$1i4eWV)
                                    g$e$20688$1i4eWV
                                    g$e*$20689$1i4eWV))))
                              g$ls/false$20687$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$20686$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$20686$1i4eWV
                         '(_ any . each-any)))))
                   g$t$20684$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV g$t$20684$1i4eWV '(_)))))
         g$stx$20683$1i4eWV))))
   (g$cond-macro$19764$1i4eWV
     g$cond-macro$23360$1i4eWV
     (case-lambda
       ((g$stx$20693$1i4eWV)
        ((case-lambda
           ((g$t$20694$1i4eWV)
            ((case-lambda
               ((g$ls/false$20695$1i4eWV)
                (if g$ls/false$20695$1i4eWV
                  (apply
                    (case-lambda
                      ((g$cls$20696$1i4eWV g$cls*$20697$1i4eWV)
                       (g$bless$19741$1i4eWV
                         ((letrec ((g$f$20698$1i4eWV
                                     (case-lambda
                                       ((g$cls$20699$1i4eWV
                                          g$cls*$20700$1i4eWV)
                                        (if (null? g$cls*$20700$1i4eWV)
                                          ((case-lambda
                                             ((g$t$20701$1i4eWV)
                                              ((case-lambda
                                                 ((g$ls/false$20702$1i4eWV)
                                                  (if g$ls/false$20702$1i4eWV
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$20703$1i4eWV
                                                           g$e*$20704$1i4eWV)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$20703$1i4eWV
                                                             g$e*$20704$1i4eWV))))
                                                      g$ls/false$20702$1i4eWV)
                                                    ((case-lambda
                                                       ((g$t$20705$1i4eWV)
                                                        ((case-lambda
                                                           ((g$ls/false$20706$1i4eWV)
                                                            (if g$ls/false$20706$1i4eWV
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$20707$1i4eWV
                                                                     g$p$20708$1i4eWV)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$20707$1i4eWV))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$20708$1i4eWV
                                                                         '(t))))))
                                                                g$ls/false$20706$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$t$20709$1i4eWV)
                                                                  ((case-lambda
                                                                     ((g$ls/false$20710$1i4eWV)
                                                                      (if g$ls/false$20710$1i4eWV
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$20711$1i4eWV)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$20711$1i4eWV
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$20710$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$t$20712$1i4eWV)
                                                                            ((case-lambda
                                                                               ((g$ls/false$20713$1i4eWV)
                                                                                (if g$ls/false$20713$1i4eWV
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$20714$1i4eWV
                                                                                         g$e*$20715$1i4eWV)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$20714$1i4eWV
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$20715$1i4eWV))))
                                                                                    g$ls/false$20713$1i4eWV)
                                                                                  ((case-lambda
                                                                                     ((g$t$20716$1i4eWV)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$20717$1i4eWV)
                                                                                          (if g$ls/false$20717$1i4eWV
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$19897$1i4eWV
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$20693$1i4eWV)))
                                                                                              g$ls/false$20717$1i4eWV)
                                                                                            (g$syntax-violation$19897$1i4eWV
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$20716$1i4eWV))))
                                                                                       (g$syntax-dispatch$19778$1i4eWV
                                                                                         g$t$20716$1i4eWV
                                                                                         '_))))
                                                                                   g$t$20712$1i4eWV))))
                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                               g$t$20712$1i4eWV
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$20709$1i4eWV))))
                                                                   (g$syntax-dispatch$19778$1i4eWV
                                                                     g$t$20709$1i4eWV
                                                                     '(any)))))
                                                               g$t$20705$1i4eWV))))
                                                         (g$syntax-dispatch$19778$1i4eWV
                                                           g$t$20705$1i4eWV
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$20701$1i4eWV))))
                                               (g$syntax-dispatch$19778$1i4eWV
                                                 g$t$20701$1i4eWV
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$20699$1i4eWV)
                                          ((case-lambda
                                             ((g$t$20718$1i4eWV)
                                              ((case-lambda
                                                 ((g$ls/false$20719$1i4eWV)
                                                  (if g$ls/false$20719$1i4eWV
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$20720$1i4eWV
                                                           g$e*$20721$1i4eWV)
                                                         (g$syntax-violation$19897$1i4eWV
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$20693$1i4eWV)))
                                                      g$ls/false$20719$1i4eWV)
                                                    ((case-lambda
                                                       ((g$t$20722$1i4eWV)
                                                        ((case-lambda
                                                           ((g$ls/false$20723$1i4eWV)
                                                            (if g$ls/false$20723$1i4eWV
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$20724$1i4eWV
                                                                     g$p$20725$1i4eWV)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$20724$1i4eWV))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$20725$1i4eWV
                                                                         '(t))
                                                                       (g$f$20698$1i4eWV
                                                                         (car g$cls*$20700$1i4eWV)
                                                                         (cdr g$cls*$20700$1i4eWV))))))
                                                                g$ls/false$20723$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$t$20726$1i4eWV)
                                                                  ((case-lambda
                                                                     ((g$ls/false$20727$1i4eWV)
                                                                      (if g$ls/false$20727$1i4eWV
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$20728$1i4eWV)
                                                                             (list
                                                                               'or
                                                                               g$e$20728$1i4eWV
                                                                               (g$f$20698$1i4eWV
                                                                                 (car g$cls*$20700$1i4eWV)
                                                                                 (cdr g$cls*$20700$1i4eWV)))))
                                                                          g$ls/false$20727$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$t$20729$1i4eWV)
                                                                            ((case-lambda
                                                                               ((g$ls/false$20730$1i4eWV)
                                                                                (if g$ls/false$20730$1i4eWV
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$20731$1i4eWV
                                                                                         g$e*$20732$1i4eWV)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$20731$1i4eWV
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$20732$1i4eWV)
                                                                                         (g$f$20698$1i4eWV
                                                                                           (car g$cls*$20700$1i4eWV)
                                                                                           (cdr g$cls*$20700$1i4eWV)))))
                                                                                    g$ls/false$20730$1i4eWV)
                                                                                  ((case-lambda
                                                                                     ((g$t$20733$1i4eWV)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$20734$1i4eWV)
                                                                                          (if g$ls/false$20734$1i4eWV
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$19897$1i4eWV
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$20693$1i4eWV)))
                                                                                              g$ls/false$20734$1i4eWV)
                                                                                            (g$syntax-violation$19897$1i4eWV
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$20733$1i4eWV))))
                                                                                       (g$syntax-dispatch$19778$1i4eWV
                                                                                         g$t$20733$1i4eWV
                                                                                         '_))))
                                                                                   g$t$20729$1i4eWV))))
                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                               g$t$20729$1i4eWV
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$20726$1i4eWV))))
                                                                   (g$syntax-dispatch$19778$1i4eWV
                                                                     g$t$20726$1i4eWV
                                                                     '(any)))))
                                                               g$t$20722$1i4eWV))))
                                                         (g$syntax-dispatch$19778$1i4eWV
                                                           g$t$20722$1i4eWV
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$20718$1i4eWV))))
                                               (g$syntax-dispatch$19778$1i4eWV
                                                 g$t$20718$1i4eWV
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$20699$1i4eWV))))))
                            g$f$20698$1i4eWV)
                          g$cls$20696$1i4eWV
                          g$cls*$20697$1i4eWV))))
                    g$ls/false$20695$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20694$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20694$1i4eWV
               '(_ any . each-any)))))
         g$stx$20693$1i4eWV))))
   (g$do-include$19765$1i4eWV
     g$do-include$23361$1i4eWV
     (case-lambda
       ((g$stx$20735$1i4eWV g$id$20736$1i4eWV g$filename$20737$1i4eWV)
        ((case-lambda
           ((g$filename$20738$1i4eWV)
            (begin
              (if (not (if (string? g$filename$20738$1i4eWV)
                         (begin
                           '#f
                           (g$id?$19280$1i4eWV g$id$20736$1i4eWV))
                         '#f))
                (g$syntax-violation$19897$1i4eWV
                  '#f
                  '"invalid syntax"
                  g$stx$20735$1i4eWV)
                (void))
              (cons
                (g$bless$19741$1i4eWV 'begin)
                (g$with-input-from-file$17754$1i4eWV
                  g$filename$20738$1i4eWV
                  (case-lambda
                    (()
                     ((letrec ((g$f$20739$1i4eWV
                                 (case-lambda
                                   ((g$ls$20740$1i4eWV)
                                    ((case-lambda
                                       ((g$x$20741$1i4eWV)
                                        (if (eof-object?
                                              g$x$20741$1i4eWV)
                                          (g$reverse$12684$1i4eWV
                                            g$ls$20740$1i4eWV)
                                          (g$f$20739$1i4eWV
                                            (cons
                                              (g$datum->stx$19263$1i4eWV
                                                g$id$20736$1i4eWV
                                                g$x$20741$1i4eWV)
                                              g$ls$20740$1i4eWV)))))
                                     (read-annotated))))))
                        g$f$20739$1i4eWV)
                      '()))))))))
         (g$stx->datum$19291$1i4eWV g$filename$20737$1i4eWV)))))
   (g$include-macro$19766$1i4eWV
     g$include-macro$23362$1i4eWV
     (case-lambda
       ((g$e$20742$1i4eWV)
        ((case-lambda
           ((g$t$20743$1i4eWV)
            ((case-lambda
               ((g$ls/false$20744$1i4eWV)
                (if g$ls/false$20744$1i4eWV
                  (apply
                    (case-lambda
                      ((g$id$20745$1i4eWV g$filename$20746$1i4eWV)
                       (g$do-include$19765$1i4eWV
                         g$e$20742$1i4eWV
                         g$id$20745$1i4eWV
                         g$filename$20746$1i4eWV)))
                    g$ls/false$20744$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20743$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20743$1i4eWV
               '(any any)))))
         g$e$20742$1i4eWV))))
   (g$include-into-macro$19767$1i4eWV
     g$include-into-macro$23363$1i4eWV
     (case-lambda
       ((g$e$20747$1i4eWV)
        ((case-lambda
           ((g$t$20748$1i4eWV)
            ((case-lambda
               ((g$ls/false$20749$1i4eWV)
                (if g$ls/false$20749$1i4eWV
                  (apply
                    (case-lambda
                      ((g$id$20750$1i4eWV g$filename$20751$1i4eWV)
                       (g$do-include$19765$1i4eWV
                         g$e$20747$1i4eWV
                         g$id$20750$1i4eWV
                         g$filename$20751$1i4eWV)))
                    g$ls/false$20749$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20748$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20748$1i4eWV
               '(_ any any)))))
         g$e$20747$1i4eWV))))
   (g$syntax-rules-macro$19768$1i4eWV
     g$syntax-rules-macro$23364$1i4eWV
     (case-lambda
       ((g$e$20752$1i4eWV)
        ((case-lambda
           ((g$t$20753$1i4eWV)
            ((case-lambda
               ((g$ls/false$20754$1i4eWV)
                (if g$ls/false$20754$1i4eWV
                  (apply
                    (case-lambda
                      ((g$lits$20755$1i4eWV
                         g$pat*$20756$1i4eWV
                         g$tmp*$20757$1i4eWV)
                       (begin
                         (g$verify-literals$19781$1i4eWV
                           g$lits$20755$1i4eWV
                           g$e$20752$1i4eWV)
                         (g$bless$19741$1i4eWV
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$20755$1i4eWV
                                   (g$map$11835$1i4eWV
                                     (case-lambda
                                       ((g$pat$20758$1i4eWV
                                          g$tmp$20759$1i4eWV)
                                        ((case-lambda
                                           ((g$t$20760$1i4eWV)
                                            ((case-lambda
                                               ((g$ls/false$20761$1i4eWV)
                                                (if g$ls/false$20761$1i4eWV
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$20762$1i4eWV)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$20762$1i4eWV)
                                                         (list
                                                           'syntax
                                                           g$tmp$20759$1i4eWV))))
                                                    g$ls/false$20761$1i4eWV)
                                                  ((case-lambda
                                                     ((g$t$20763$1i4eWV)
                                                      ((case-lambda
                                                         ((g$ls/false$20764$1i4eWV)
                                                          (if g$ls/false$20764$1i4eWV
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$19897$1i4eWV
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$20752$1i4eWV
                                                                   g$pat$20758$1i4eWV)))
                                                              g$ls/false$20764$1i4eWV)
                                                            (g$syntax-violation$19897$1i4eWV
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$20763$1i4eWV))))
                                                       (g$syntax-dispatch$19778$1i4eWV
                                                         g$t$20763$1i4eWV
                                                         '_))))
                                                   g$t$20760$1i4eWV))))
                                             (g$syntax-dispatch$19778$1i4eWV
                                               g$t$20760$1i4eWV
                                               '(_ . any)))))
                                         g$pat$20758$1i4eWV)))
                                     g$pat*$20756$1i4eWV
                                     g$tmp*$20757$1i4eWV)))))))))
                    g$ls/false$20754$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$20753$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$20753$1i4eWV
               '(_ each-any . #(each (any any)))))))
         g$e$20752$1i4eWV))))
   (g$quasiquote-macro$19769$1i4eWV
     g$quasiquote-macro$23365$1i4eWV
     ((case-lambda
        (()
         (letrec* ((g$datum$20765$1i4eWV
                     (case-lambda
                       ((g$x$20915$1i4eWV)
                        (list
                          (g$scheme-stx$19721$1i4eWV 'quote)
                          (g$mkstx$19268$1i4eWV
                            g$x$20915$1i4eWV
                            '()
                            '()
                            '())))))
                   (g$quasicons*$20800$1i4eWV
                     (case-lambda
                       ((g$x$20911$1i4eWV g$y$20912$1i4eWV)
                        ((letrec ((g$f$20913$1i4eWV
                                    (case-lambda
                                      ((g$x$20914$1i4eWV)
                                       (if (null? g$x$20914$1i4eWV)
                                         g$y$20912$1i4eWV
                                         (g$quasicons$20801$1i4eWV
                                           (car g$x$20914$1i4eWV)
                                           (g$f$20913$1i4eWV
                                             (cdr g$x$20914$1i4eWV))))))))
                           g$f$20913$1i4eWV)
                         g$x$20911$1i4eWV))))
                   (g$quasicons$20801$1i4eWV
                     (case-lambda
                       ((g$x$20892$1i4eWV g$y$20893$1i4eWV)
                        ((case-lambda
                           ((g$t$20894$1i4eWV)
                            ((case-lambda
                               ((g$ls/false$20895$1i4eWV)
                                (if g$ls/false$20895$1i4eWV
                                  (apply
                                    (case-lambda
                                      ((g$dy$20896$1i4eWV)
                                       ((case-lambda
                                          ((g$t$20897$1i4eWV)
                                           ((case-lambda
                                              ((g$ls/false$20898$1i4eWV)
                                               (if g$ls/false$20898$1i4eWV
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$20899$1i4eWV)
                                                      (list
                                                        (g$scheme-stx$19721$1i4eWV
                                                          'quote)
                                                        (cons
                                                          g$dx$20899$1i4eWV
                                                          g$dy$20896$1i4eWV))))
                                                   g$ls/false$20898$1i4eWV)
                                                 ((case-lambda
                                                    ((g$t$20900$1i4eWV)
                                                     ((case-lambda
                                                        ((g$ls/false$20901$1i4eWV)
                                                         (if g$ls/false$20901$1i4eWV
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$20902$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20903$1i4eWV)
                                                                        (if g$ls/false$20903$1i4eWV
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$19721$1i4eWV
                                                                                   'list)
                                                                                 g$x$20892$1i4eWV)))
                                                                            g$ls/false$20903$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$t$20904$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20905$1i4eWV)
                                                                                  (if g$ls/false$20905$1i4eWV
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$19721$1i4eWV
                                                                                             'cons)
                                                                                           g$x$20892$1i4eWV
                                                                                           g$y$20893$1i4eWV)))
                                                                                      g$ls/false$20905$1i4eWV)
                                                                                    (g$syntax-violation$19897$1i4eWV
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$20904$1i4eWV))))
                                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                                 g$t$20904$1i4eWV
                                                                                 '_))))
                                                                           g$t$20902$1i4eWV))))
                                                                     (g$syntax-dispatch$19778$1i4eWV
                                                                       g$t$20902$1i4eWV
                                                                       '()))))
                                                                 g$dy$20896$1i4eWV)))
                                                             g$ls/false$20901$1i4eWV)
                                                           (g$syntax-violation$19897$1i4eWV
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$20900$1i4eWV))))
                                                      (g$syntax-dispatch$19778$1i4eWV
                                                        g$t$20900$1i4eWV
                                                        '_))))
                                                  g$t$20897$1i4eWV))))
                                            (g$syntax-dispatch$19778$1i4eWV
                                              g$t$20897$1i4eWV
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$20892$1i4eWV)))
                                    g$ls/false$20895$1i4eWV)
                                  ((case-lambda
                                     ((g$t$20906$1i4eWV)
                                      ((case-lambda
                                         ((g$ls/false$20907$1i4eWV)
                                          (if g$ls/false$20907$1i4eWV
                                            (apply
                                              (case-lambda
                                                ((g$stuff$20908$1i4eWV)
                                                 (g$cons*$11837$1i4eWV
                                                   (g$scheme-stx$19721$1i4eWV
                                                     'list)
                                                   g$x$20892$1i4eWV
                                                   g$stuff$20908$1i4eWV)))
                                              g$ls/false$20907$1i4eWV)
                                            ((case-lambda
                                               ((g$t$20909$1i4eWV)
                                                ((case-lambda
                                                   ((g$ls/false$20910$1i4eWV)
                                                    (if g$ls/false$20910$1i4eWV
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$19721$1i4eWV
                                                               'cons)
                                                             g$x$20892$1i4eWV
                                                             g$y$20893$1i4eWV)))
                                                        g$ls/false$20910$1i4eWV)
                                                      (g$syntax-violation$19897$1i4eWV
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$20909$1i4eWV))))
                                                 (g$syntax-dispatch$19778$1i4eWV
                                                   g$t$20909$1i4eWV
                                                   '_))))
                                             g$t$20906$1i4eWV))))
                                       (g$syntax-dispatch$19778$1i4eWV
                                         g$t$20906$1i4eWV
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$20894$1i4eWV))))
                             (g$syntax-dispatch$19778$1i4eWV
                               g$t$20894$1i4eWV
                               '(#(scheme-id quote) any)))))
                         g$y$20893$1i4eWV))))
                   (g$quasiappend$20802$1i4eWV
                     (case-lambda
                       ((g$x$20879$1i4eWV g$y$20880$1i4eWV)
                        ((case-lambda
                           ((g$ls$20881$1i4eWV)
                            (if (null? g$ls$20881$1i4eWV)
                              (list
                                (g$scheme-stx$19721$1i4eWV 'quote)
                                '())
                              (if (null? (cdr g$ls$20881$1i4eWV))
                                (car g$ls$20881$1i4eWV)
                                (g$cons*$11837$1i4eWV
                                  (g$scheme-stx$19721$1i4eWV 'append)
                                  g$ls$20881$1i4eWV)))))
                         ((letrec ((g$f$20882$1i4eWV
                                     (case-lambda
                                       ((g$x$20883$1i4eWV)
                                        (if (null? g$x$20883$1i4eWV)
                                          ((case-lambda
                                             ((g$t$20884$1i4eWV)
                                              ((case-lambda
                                                 ((g$ls/false$20885$1i4eWV)
                                                  (if g$ls/false$20885$1i4eWV
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$20885$1i4eWV)
                                                    ((case-lambda
                                                       ((g$t$20886$1i4eWV)
                                                        ((case-lambda
                                                           ((g$ls/false$20887$1i4eWV)
                                                            (if g$ls/false$20887$1i4eWV
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$20880$1i4eWV)))
                                                                g$ls/false$20887$1i4eWV)
                                                              (g$syntax-violation$19897$1i4eWV
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$20886$1i4eWV))))
                                                         (g$syntax-dispatch$19778$1i4eWV
                                                           g$t$20886$1i4eWV
                                                           '_))))
                                                     g$t$20884$1i4eWV))))
                                               (g$syntax-dispatch$19778$1i4eWV
                                                 g$t$20884$1i4eWV
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$20880$1i4eWV)
                                          ((case-lambda
                                             ((g$t$20888$1i4eWV)
                                              ((case-lambda
                                                 ((g$ls/false$20889$1i4eWV)
                                                  (if g$ls/false$20889$1i4eWV
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$20882$1i4eWV
                                                           (cdr g$x$20883$1i4eWV))))
                                                      g$ls/false$20889$1i4eWV)
                                                    ((case-lambda
                                                       ((g$t$20890$1i4eWV)
                                                        ((case-lambda
                                                           ((g$ls/false$20891$1i4eWV)
                                                            (if g$ls/false$20891$1i4eWV
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$20883$1i4eWV)
                                                                     (g$f$20882$1i4eWV
                                                                       (cdr g$x$20883$1i4eWV)))))
                                                                g$ls/false$20891$1i4eWV)
                                                              (g$syntax-violation$19897$1i4eWV
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$20890$1i4eWV))))
                                                         (g$syntax-dispatch$19778$1i4eWV
                                                           g$t$20890$1i4eWV
                                                           '_))))
                                                     g$t$20888$1i4eWV))))
                                               (g$syntax-dispatch$19778$1i4eWV
                                                 g$t$20888$1i4eWV
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$20883$1i4eWV)))))))
                            g$f$20882$1i4eWV)
                          g$x$20879$1i4eWV)))))
                   (g$quasivector$20803$1i4eWV
                     (case-lambda
                       ((g$x$20854$1i4eWV)
                        ((case-lambda
                           ((g$pat-x$20855$1i4eWV)
                            ((case-lambda
                               ((g$t$20856$1i4eWV)
                                ((case-lambda
                                   ((g$ls/false$20857$1i4eWV)
                                    (if g$ls/false$20857$1i4eWV
                                      (apply
                                        (case-lambda
                                          ((g$x*$20858$1i4eWV)
                                           (list
                                             (g$scheme-stx$19721$1i4eWV
                                               'quote)
                                             (g$list->vector$12678$1i4eWV
                                               g$x*$20858$1i4eWV))))
                                        g$ls/false$20857$1i4eWV)
                                      ((case-lambda
                                         ((g$t$20859$1i4eWV)
                                          ((case-lambda
                                             ((g$ls/false$20860$1i4eWV)
                                              (if g$ls/false$20860$1i4eWV
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$20861$1i4eWV
                                                                 (case-lambda
                                                                   ((g$x$20862$1i4eWV
                                                                      g$k$20863$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$t$20864$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$ls/false$20865$1i4eWV)
                                                                            (if g$ls/false$20865$1i4eWV
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$20866$1i4eWV)
                                                                                   (g$k$20863$1i4eWV
                                                                                     (g$map$11835$1i4eWV
                                                                                       (case-lambda
                                                                                         ((g$x$20867$1i4eWV)
                                                                                          (list
                                                                                            (g$scheme-stx$19721$1i4eWV
                                                                                              'quote)
                                                                                            g$x$20867$1i4eWV)))
                                                                                       g$x*$20866$1i4eWV))))
                                                                                g$ls/false$20865$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$t$20868$1i4eWV)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$20869$1i4eWV)
                                                                                      (if g$ls/false$20869$1i4eWV
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$20870$1i4eWV)
                                                                                             (g$k$20863$1i4eWV
                                                                                               g$x*$20870$1i4eWV)))
                                                                                          g$ls/false$20869$1i4eWV)
                                                                                        ((case-lambda
                                                                                           ((g$t$20871$1i4eWV)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$20872$1i4eWV)
                                                                                                (if g$ls/false$20872$1i4eWV
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$20873$1i4eWV
                                                                                                         g$y$20874$1i4eWV)
                                                                                                       (g$f$20861$1i4eWV
                                                                                                         g$y$20874$1i4eWV
                                                                                                         (case-lambda
                                                                                                           ((g$ls$20875$1i4eWV)
                                                                                                            (g$k$20863$1i4eWV
                                                                                                              (cons
                                                                                                                g$x$20873$1i4eWV
                                                                                                                g$ls$20875$1i4eWV)))))))
                                                                                                    g$ls/false$20872$1i4eWV)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$20876$1i4eWV)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$20877$1i4eWV)
                                                                                                          (if g$ls/false$20877$1i4eWV
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$19721$1i4eWV
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$20855$1i4eWV)))
                                                                                                              g$ls/false$20877$1i4eWV)
                                                                                                            (g$syntax-violation$19897$1i4eWV
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$20876$1i4eWV))))
                                                                                                       (g$syntax-dispatch$19778$1i4eWV
                                                                                                         g$t$20876$1i4eWV
                                                                                                         '_))))
                                                                                                   g$t$20871$1i4eWV))))
                                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                                               g$t$20871$1i4eWV
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$20868$1i4eWV))))
                                                                                   (g$syntax-dispatch$19778$1i4eWV
                                                                                     g$t$20868$1i4eWV
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$20864$1i4eWV))))
                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                           g$t$20864$1i4eWV
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$20862$1i4eWV)))))
                                                        g$f$20861$1i4eWV)
                                                      g$x$20854$1i4eWV
                                                      (case-lambda
                                                        ((g$ls$20878$1i4eWV)
                                                         (g$cons*$11837$1i4eWV
                                                           (g$scheme-stx$19721$1i4eWV
                                                             'vector)
                                                           g$ls$20878$1i4eWV))))))
                                                  g$ls/false$20860$1i4eWV)
                                                (g$syntax-violation$19897$1i4eWV
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$20859$1i4eWV))))
                                           (g$syntax-dispatch$19778$1i4eWV
                                             g$t$20859$1i4eWV
                                             '_))))
                                       g$t$20856$1i4eWV))))
                                 (g$syntax-dispatch$19778$1i4eWV
                                   g$t$20856$1i4eWV
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$20855$1i4eWV)))
                         g$x$20854$1i4eWV))))
                   (g$vquasi$20804$1i4eWV
                     (case-lambda
                       ((g$p$20837$1i4eWV g$lev$20838$1i4eWV)
                        ((case-lambda
                           ((g$t$20839$1i4eWV)
                            ((case-lambda
                               ((g$ls/false$20840$1i4eWV)
                                (if g$ls/false$20840$1i4eWV
                                  (apply
                                    (case-lambda
                                      ((g$p$20841$1i4eWV
                                         g$q$20842$1i4eWV)
                                       ((case-lambda
                                          ((g$t$20843$1i4eWV)
                                           ((case-lambda
                                              ((g$ls/false$20844$1i4eWV)
                                               (if g$ls/false$20844$1i4eWV
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$20845$1i4eWV)
                                                      (if (= g$lev$20838$1i4eWV
                                                             '0)
                                                        (g$quasicons*$20800$1i4eWV
                                                          g$p$20845$1i4eWV
                                                          (g$vquasi$20804$1i4eWV
                                                            g$q$20842$1i4eWV
                                                            g$lev$20838$1i4eWV))
                                                        (g$quasicons$20801$1i4eWV
                                                          (g$quasicons$20801$1i4eWV
                                                            (g$datum$20765$1i4eWV
                                                              'unquote)
                                                            (g$quasi$20805$1i4eWV
                                                              g$p$20845$1i4eWV
                                                              (- g$lev$20838$1i4eWV
                                                                 '1)))
                                                          (g$vquasi$20804$1i4eWV
                                                            g$q$20842$1i4eWV
                                                            g$lev$20838$1i4eWV)))))
                                                   g$ls/false$20844$1i4eWV)
                                                 ((case-lambda
                                                    ((g$t$20846$1i4eWV)
                                                     ((case-lambda
                                                        ((g$ls/false$20847$1i4eWV)
                                                         (if g$ls/false$20847$1i4eWV
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$20848$1i4eWV)
                                                                (if (= g$lev$20838$1i4eWV
                                                                       '0)
                                                                  (g$quasiappend$20802$1i4eWV
                                                                    g$p$20848$1i4eWV
                                                                    (g$vquasi$20804$1i4eWV
                                                                      g$q$20842$1i4eWV
                                                                      g$lev$20838$1i4eWV))
                                                                  (g$quasicons$20801$1i4eWV
                                                                    (g$quasicons$20801$1i4eWV
                                                                      (g$datum$20765$1i4eWV
                                                                        'unquote-splicing)
                                                                      (g$quasi$20805$1i4eWV
                                                                        g$p$20848$1i4eWV
                                                                        (- g$lev$20838$1i4eWV
                                                                           '1)))
                                                                    (g$vquasi$20804$1i4eWV
                                                                      g$q$20842$1i4eWV
                                                                      g$lev$20838$1i4eWV)))))
                                                             g$ls/false$20847$1i4eWV)
                                                           ((case-lambda
                                                              ((g$t$20849$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$ls/false$20850$1i4eWV)
                                                                   (if g$ls/false$20850$1i4eWV
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$20851$1i4eWV)
                                                                          (g$quasicons$20801$1i4eWV
                                                                            (g$quasi$20805$1i4eWV
                                                                              g$p$20851$1i4eWV
                                                                              g$lev$20838$1i4eWV)
                                                                            (g$vquasi$20804$1i4eWV
                                                                              g$q$20842$1i4eWV
                                                                              g$lev$20838$1i4eWV))))
                                                                       g$ls/false$20850$1i4eWV)
                                                                     (g$syntax-violation$19897$1i4eWV
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$20849$1i4eWV))))
                                                                (g$syntax-dispatch$19778$1i4eWV
                                                                  g$t$20849$1i4eWV
                                                                  'any))))
                                                            g$t$20846$1i4eWV))))
                                                      (g$syntax-dispatch$19778$1i4eWV
                                                        g$t$20846$1i4eWV
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$20843$1i4eWV))))
                                            (g$syntax-dispatch$19778$1i4eWV
                                              g$t$20843$1i4eWV
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$20841$1i4eWV)))
                                    g$ls/false$20840$1i4eWV)
                                  ((case-lambda
                                     ((g$t$20852$1i4eWV)
                                      ((case-lambda
                                         ((g$ls/false$20853$1i4eWV)
                                          (if g$ls/false$20853$1i4eWV
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$19721$1i4eWV
                                                     'quote)
                                                   '())))
                                              g$ls/false$20853$1i4eWV)
                                            (g$syntax-violation$19897$1i4eWV
                                              '#f
                                              '"invalid syntax"
                                              g$t$20852$1i4eWV))))
                                       (g$syntax-dispatch$19778$1i4eWV
                                         g$t$20852$1i4eWV
                                         '()))))
                                   g$t$20839$1i4eWV))))
                             (g$syntax-dispatch$19778$1i4eWV
                               g$t$20839$1i4eWV
                               '(any . any)))))
                         g$p$20837$1i4eWV))))
                   (g$quasi$20805$1i4eWV
                     (case-lambda
                       ((g$p$20810$1i4eWV g$lev$20811$1i4eWV)
                        ((case-lambda
                           ((g$t$20812$1i4eWV)
                            ((case-lambda
                               ((g$ls/false$20813$1i4eWV)
                                (if g$ls/false$20813$1i4eWV
                                  (apply
                                    (case-lambda
                                      ((g$p$20814$1i4eWV)
                                       (if (= g$lev$20811$1i4eWV '0)
                                         g$p$20814$1i4eWV
                                         (g$quasicons$20801$1i4eWV
                                           (g$datum$20765$1i4eWV
                                             'unquote)
                                           (g$quasi$20805$1i4eWV
                                             (list g$p$20814$1i4eWV)
                                             (- g$lev$20811$1i4eWV
                                                '1))))))
                                    g$ls/false$20813$1i4eWV)
                                  ((case-lambda
                                     ((g$t$20815$1i4eWV)
                                      ((case-lambda
                                         ((g$ls/false$20816$1i4eWV)
                                          (if g$ls/false$20816$1i4eWV
                                            (apply
                                              (case-lambda
                                                ((g$p$20817$1i4eWV
                                                   g$q$20818$1i4eWV)
                                                 (if (= g$lev$20811$1i4eWV
                                                        '0)
                                                   (g$quasicons*$20800$1i4eWV
                                                     g$p$20817$1i4eWV
                                                     (g$quasi$20805$1i4eWV
                                                       g$q$20818$1i4eWV
                                                       g$lev$20811$1i4eWV))
                                                   (g$quasicons$20801$1i4eWV
                                                     (g$quasicons$20801$1i4eWV
                                                       (g$datum$20765$1i4eWV
                                                         'unquote)
                                                       (g$quasi$20805$1i4eWV
                                                         g$p$20817$1i4eWV
                                                         (- g$lev$20811$1i4eWV
                                                            '1)))
                                                     (g$quasi$20805$1i4eWV
                                                       g$q$20818$1i4eWV
                                                       g$lev$20811$1i4eWV)))))
                                              g$ls/false$20816$1i4eWV)
                                            ((case-lambda
                                               ((g$t$20819$1i4eWV)
                                                ((case-lambda
                                                   ((g$ls/false$20820$1i4eWV)
                                                    (if g$ls/false$20820$1i4eWV
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$20821$1i4eWV
                                                             g$q$20822$1i4eWV)
                                                           (if (= g$lev$20811$1i4eWV
                                                                  '0)
                                                             (g$quasiappend$20802$1i4eWV
                                                               g$p$20821$1i4eWV
                                                               (g$quasi$20805$1i4eWV
                                                                 g$q$20822$1i4eWV
                                                                 g$lev$20811$1i4eWV))
                                                             (g$quasicons$20801$1i4eWV
                                                               (g$quasicons$20801$1i4eWV
                                                                 (g$datum$20765$1i4eWV
                                                                   'unquote-splicing)
                                                                 (g$quasi$20805$1i4eWV
                                                                   g$p$20821$1i4eWV
                                                                   (- g$lev$20811$1i4eWV
                                                                      '1)))
                                                               (g$quasi$20805$1i4eWV
                                                                 g$q$20822$1i4eWV
                                                                 g$lev$20811$1i4eWV)))))
                                                        g$ls/false$20820$1i4eWV)
                                                      ((case-lambda
                                                         ((g$t$20823$1i4eWV)
                                                          ((case-lambda
                                                             ((g$ls/false$20824$1i4eWV)
                                                              (if g$ls/false$20824$1i4eWV
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$20825$1i4eWV)
                                                                     (g$quasicons$20801$1i4eWV
                                                                       (g$datum$20765$1i4eWV
                                                                         'quasiquote)
                                                                       (g$quasi$20805$1i4eWV
                                                                         (list
                                                                           g$p$20825$1i4eWV)
                                                                         (+ g$lev$20811$1i4eWV
                                                                            '1)))))
                                                                  g$ls/false$20824$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$t$20826$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20827$1i4eWV)
                                                                        (if g$ls/false$20827$1i4eWV
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$20828$1i4eWV
                                                                                 g$q$20829$1i4eWV)
                                                                               (g$quasicons$20801$1i4eWV
                                                                                 (g$quasi$20805$1i4eWV
                                                                                   g$p$20828$1i4eWV
                                                                                   g$lev$20811$1i4eWV)
                                                                                 (g$quasi$20805$1i4eWV
                                                                                   g$q$20829$1i4eWV
                                                                                   g$lev$20811$1i4eWV))))
                                                                            g$ls/false$20827$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$t$20830$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$20831$1i4eWV)
                                                                                  (if (if g$ls/false$20831$1i4eWV
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$20832$1i4eWV)
                                                                                               (not (g$stx?$19252$1i4eWV
                                                                                                      g$x$20832$1i4eWV))))
                                                                                            g$ls/false$20831$1i4eWV))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$20833$1i4eWV)
                                                                                         (g$quasivector$20803$1i4eWV
                                                                                           (g$vquasi$20804$1i4eWV
                                                                                             g$x$20833$1i4eWV
                                                                                             g$lev$20811$1i4eWV))))
                                                                                      g$ls/false$20831$1i4eWV)
                                                                                    ((case-lambda
                                                                                       ((g$t$20834$1i4eWV)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$20835$1i4eWV)
                                                                                            (if g$ls/false$20835$1i4eWV
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$20836$1i4eWV)
                                                                                                   (list
                                                                                                     (g$scheme-stx$19721$1i4eWV
                                                                                                       'quote)
                                                                                                     g$p$20836$1i4eWV)))
                                                                                                g$ls/false$20835$1i4eWV)
                                                                                              (g$syntax-violation$19897$1i4eWV
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$20834$1i4eWV))))
                                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                                           g$t$20834$1i4eWV
                                                                                           'any))))
                                                                                     g$t$20830$1i4eWV))))
                                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                                 g$t$20830$1i4eWV
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$20826$1i4eWV))))
                                                                     (g$syntax-dispatch$19778$1i4eWV
                                                                       g$t$20826$1i4eWV
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$20823$1i4eWV))))
                                                           (g$syntax-dispatch$19778$1i4eWV
                                                             g$t$20823$1i4eWV
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$20819$1i4eWV))))
                                                 (g$syntax-dispatch$19778$1i4eWV
                                                   g$t$20819$1i4eWV
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$20815$1i4eWV))))
                                       (g$syntax-dispatch$19778$1i4eWV
                                         g$t$20815$1i4eWV
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$20812$1i4eWV))))
                             (g$syntax-dispatch$19778$1i4eWV
                               g$t$20812$1i4eWV
                               '(#(scheme-id unquote) any)))))
                         g$p$20810$1i4eWV)))))
           (case-lambda
             ((g$x$20806$1i4eWV)
              ((case-lambda
                 ((g$t$20807$1i4eWV)
                  ((case-lambda
                     ((g$ls/false$20808$1i4eWV)
                      (if g$ls/false$20808$1i4eWV
                        (apply
                          (case-lambda
                            ((g$e$20809$1i4eWV)
                             (g$quasi$20805$1i4eWV
                               g$e$20809$1i4eWV
                               '0)))
                          g$ls/false$20808$1i4eWV)
                        (g$syntax-violation$19897$1i4eWV
                          '#f
                          '"invalid syntax"
                          g$t$20807$1i4eWV))))
                   (g$syntax-dispatch$19778$1i4eWV
                     g$t$20807$1i4eWV
                     '(_ any)))))
               g$x$20806$1i4eWV))))))))
   (g$quasisyntax-macro$19770$1i4eWV
     g$quasisyntax-macro$23366$1i4eWV
     ((case-lambda
        (()
         (letrec* ((g$quasi$20916$1i4eWV
                     (case-lambda
                       ((g$p$20930$1i4eWV g$lev$20931$1i4eWV)
                        ((case-lambda
                           ((g$t$20932$1i4eWV)
                            ((case-lambda
                               ((g$ls/false$20933$1i4eWV)
                                (if g$ls/false$20933$1i4eWV
                                  (apply
                                    (case-lambda
                                      ((g$p$20934$1i4eWV)
                                       (if (= g$lev$20931$1i4eWV '0)
                                         ((case-lambda
                                            ((g$g$20935$1i4eWV)
                                             (values
                                               (list g$g$20935$1i4eWV)
                                               (list g$p$20934$1i4eWV)
                                               g$g$20935$1i4eWV)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$20916$1i4eWV
                                                g$p$20934$1i4eWV
                                                (- g$lev$20931$1i4eWV
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$20939$1i4eWV
                                                g$rhs*$20940$1i4eWV
                                                g$p$20941$1i4eWV)
                                              ((case-lambda
                                                 ((g$p$20942$1i4eWV
                                                    g$rhs*$20943$1i4eWV
                                                    g$lhs*$20944$1i4eWV)
                                                  (values
                                                    g$lhs*$20944$1i4eWV
                                                    g$rhs*$20943$1i4eWV
                                                    (list
                                                      'unsyntax
                                                      g$p$20942$1i4eWV))))
                                               g$p$20941$1i4eWV
                                               g$rhs*$20940$1i4eWV
                                               g$lhs*$20939$1i4eWV)))))))
                                    g$ls/false$20933$1i4eWV)
                                  ((case-lambda
                                     ((g$t$20945$1i4eWV)
                                      ((case-lambda
                                         ((g$ls/false$20946$1i4eWV)
                                          (if (if g$ls/false$20946$1i4eWV
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$20931$1i4eWV
                                                          '0)))
                                                    g$ls/false$20946$1i4eWV))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$19897$1i4eWV
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$20930$1i4eWV)))
                                              g$ls/false$20946$1i4eWV)
                                            ((case-lambda
                                               ((g$t$20947$1i4eWV)
                                                ((case-lambda
                                                   ((g$ls/false$20948$1i4eWV)
                                                    (if g$ls/false$20948$1i4eWV
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$20949$1i4eWV
                                                             g$q$20950$1i4eWV)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$20916$1i4eWV
                                                                  g$q$20950$1i4eWV
                                                                  g$lev$20931$1i4eWV)))
                                                             (case-lambda
                                                               ((g$lhs*$20954$1i4eWV
                                                                  g$rhs*$20955$1i4eWV
                                                                  g$q$20956$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$q$20957$1i4eWV
                                                                      g$rhs*$20958$1i4eWV
                                                                      g$lhs*$20959$1i4eWV)
                                                                    (if (= g$lev$20931$1i4eWV
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$20960$1i4eWV)
                                                                          (values
                                                                            (append
                                                                              g$g*$20960$1i4eWV
                                                                              g$lhs*$20959$1i4eWV)
                                                                            (append
                                                                              g$p*$20949$1i4eWV
                                                                              g$rhs*$20958$1i4eWV)
                                                                            (append
                                                                              g$g*$20960$1i4eWV
                                                                              g$q$20957$1i4eWV))))
                                                                       (g$map$11835$1i4eWV
                                                                         (case-lambda
                                                                           ((g$x$20961$1i4eWV)
                                                                            (gensym)))
                                                                         g$p*$20949$1i4eWV))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$20916$1i4eWV
                                                                             g$p*$20949$1i4eWV
                                                                             (- g$lev$20931$1i4eWV
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$20965$1i4eWV
                                                                             g$rhs2*$20966$1i4eWV
                                                                             g$p*$20967$1i4eWV)
                                                                           ((case-lambda
                                                                              ((g$p*$20968$1i4eWV
                                                                                 g$rhs2*$20969$1i4eWV
                                                                                 g$lhs2*$20970$1i4eWV)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$20970$1i4eWV
                                                                                   g$lhs*$20959$1i4eWV)
                                                                                 (append
                                                                                   g$rhs2*$20969$1i4eWV
                                                                                   g$rhs*$20958$1i4eWV)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$20968$1i4eWV)
                                                                                   g$q$20957$1i4eWV))))
                                                                            g$p*$20967$1i4eWV
                                                                            g$rhs2*$20966$1i4eWV
                                                                            g$lhs2*$20965$1i4eWV)))))))
                                                                 g$q$20956$1i4eWV
                                                                 g$rhs*$20955$1i4eWV
                                                                 g$lhs*$20954$1i4eWV))))))
                                                        g$ls/false$20948$1i4eWV)
                                                      ((case-lambda
                                                         ((g$t$20971$1i4eWV)
                                                          ((case-lambda
                                                             ((g$ls/false$20972$1i4eWV)
                                                              (if g$ls/false$20972$1i4eWV
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$20973$1i4eWV
                                                                       g$q$20974$1i4eWV)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$20916$1i4eWV
                                                                            g$q$20974$1i4eWV
                                                                            g$lev$20931$1i4eWV)))
                                                                       (case-lambda
                                                                         ((g$lhs*$20978$1i4eWV
                                                                            g$rhs*$20979$1i4eWV
                                                                            g$q$20980$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$q$20981$1i4eWV
                                                                                g$rhs*$20982$1i4eWV
                                                                                g$lhs*$20983$1i4eWV)
                                                                              (if (= g$lev$20931$1i4eWV
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$20984$1i4eWV)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$11835$1i4eWV
                                                                                          (case-lambda
                                                                                            ((g$g$20985$1i4eWV)
                                                                                             (cons
                                                                                               g$g$20985$1i4eWV
                                                                                               '(...))))
                                                                                          g$g*$20984$1i4eWV)
                                                                                        g$lhs*$20983$1i4eWV)
                                                                                      (append
                                                                                        g$p*$20973$1i4eWV
                                                                                        g$rhs*$20982$1i4eWV)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$11835$1i4eWV
                                                                                            (case-lambda
                                                                                              ((g$g$20986$1i4eWV)
                                                                                               (cons
                                                                                                 g$g$20986$1i4eWV
                                                                                                 '(...))))
                                                                                            g$g*$20984$1i4eWV))
                                                                                        g$q$20981$1i4eWV))))
                                                                                 (g$map$11835$1i4eWV
                                                                                   (case-lambda
                                                                                     ((g$x$20987$1i4eWV)
                                                                                      (gensym)))
                                                                                   g$p*$20973$1i4eWV))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$20916$1i4eWV
                                                                                       g$p*$20973$1i4eWV
                                                                                       (- g$lev$20931$1i4eWV
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$20991$1i4eWV
                                                                                       g$rhs2*$20992$1i4eWV
                                                                                       g$p*$20993$1i4eWV)
                                                                                     ((case-lambda
                                                                                        ((g$p*$20994$1i4eWV
                                                                                           g$rhs2*$20995$1i4eWV
                                                                                           g$lhs2*$20996$1i4eWV)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$20996$1i4eWV
                                                                                             g$lhs*$20983$1i4eWV)
                                                                                           (append
                                                                                             g$rhs2*$20995$1i4eWV
                                                                                             g$rhs*$20982$1i4eWV)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$20994$1i4eWV)
                                                                                             g$q$20981$1i4eWV))))
                                                                                      g$p*$20993$1i4eWV
                                                                                      g$rhs2*$20992$1i4eWV
                                                                                      g$lhs2*$20991$1i4eWV)))))))
                                                                           g$q$20980$1i4eWV
                                                                           g$rhs*$20979$1i4eWV
                                                                           g$lhs*$20978$1i4eWV))))))
                                                                  g$ls/false$20972$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$t$20997$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$ls/false$20998$1i4eWV)
                                                                        (if (if g$ls/false$20998$1i4eWV
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$20931$1i4eWV
                                                                                        '0)))
                                                                                  g$ls/false$20998$1i4eWV))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$19897$1i4eWV
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$20930$1i4eWV)))
                                                                            g$ls/false$20998$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$t$20999$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21000$1i4eWV)
                                                                                  (if g$ls/false$21000$1i4eWV
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$21001$1i4eWV)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$20916$1i4eWV
                                                                                                g$p$21001$1i4eWV
                                                                                                (+ g$lev$20931$1i4eWV
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$21005$1i4eWV
                                                                                                g$rhs*$21006$1i4eWV
                                                                                                g$p$21007$1i4eWV)
                                                                                              ((case-lambda
                                                                                                 ((g$p$21008$1i4eWV
                                                                                                    g$rhs*$21009$1i4eWV
                                                                                                    g$lhs*$21010$1i4eWV)
                                                                                                  (values
                                                                                                    g$lhs*$21010$1i4eWV
                                                                                                    g$rhs*$21009$1i4eWV
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$21008$1i4eWV))))
                                                                                               g$p$21007$1i4eWV
                                                                                               g$rhs*$21006$1i4eWV
                                                                                               g$lhs*$21005$1i4eWV))))))
                                                                                      g$ls/false$21000$1i4eWV)
                                                                                    ((case-lambda
                                                                                       ((g$t$21011$1i4eWV)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21012$1i4eWV)
                                                                                            (if g$ls/false$21012$1i4eWV
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$21013$1i4eWV
                                                                                                     g$q$21014$1i4eWV)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$20916$1i4eWV
                                                                                                          g$p$21013$1i4eWV
                                                                                                          g$lev$20931$1i4eWV)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$21021$1i4eWV
                                                                                                          g$rhs*$21022$1i4eWV
                                                                                                          g$p$21023$1i4eWV)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$20916$1i4eWV
                                                                                                               g$q$21014$1i4eWV
                                                                                                               g$lev$20931$1i4eWV)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$21024$1i4eWV
                                                                                                               g$rhs2*$21025$1i4eWV
                                                                                                               g$q$21026$1i4eWV)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$21027$1i4eWV
                                                                                                                   g$rhs2*$21028$1i4eWV
                                                                                                                   g$lhs2*$21029$1i4eWV
                                                                                                                   g$p$21030$1i4eWV
                                                                                                                   g$rhs*$21031$1i4eWV
                                                                                                                   g$lhs*$21032$1i4eWV)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$21029$1i4eWV
                                                                                                                     g$lhs*$21032$1i4eWV)
                                                                                                                   (append
                                                                                                                     g$rhs2*$21028$1i4eWV
                                                                                                                     g$rhs*$21031$1i4eWV)
                                                                                                                   (cons
                                                                                                                     g$p$21030$1i4eWV
                                                                                                                     g$q$21027$1i4eWV))))
                                                                                                              g$q$21026$1i4eWV
                                                                                                              g$rhs2*$21025$1i4eWV
                                                                                                              g$lhs2*$21024$1i4eWV
                                                                                                              g$p$21023$1i4eWV
                                                                                                              g$rhs*$21022$1i4eWV
                                                                                                              g$lhs*$21021$1i4eWV)))))))))
                                                                                                g$ls/false$21012$1i4eWV)
                                                                                              ((case-lambda
                                                                                                 ((g$t$21033$1i4eWV)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$21034$1i4eWV)
                                                                                                      (if g$ls/false$21034$1i4eWV
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$21035$1i4eWV)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$20916$1i4eWV
                                                                                                                    g$x*$21035$1i4eWV
                                                                                                                    g$lev$20931$1i4eWV)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$21039$1i4eWV
                                                                                                                    g$rhs*$21040$1i4eWV
                                                                                                                    g$x*$21041$1i4eWV)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$21042$1i4eWV
                                                                                                                        g$rhs*$21043$1i4eWV
                                                                                                                        g$lhs*$21044$1i4eWV)
                                                                                                                      (values
                                                                                                                        g$lhs*$21044$1i4eWV
                                                                                                                        g$rhs*$21043$1i4eWV
                                                                                                                        (g$list->vector$12678$1i4eWV
                                                                                                                          g$x*$21042$1i4eWV))))
                                                                                                                   g$x*$21041$1i4eWV
                                                                                                                   g$rhs*$21040$1i4eWV
                                                                                                                   g$lhs*$21039$1i4eWV))))))
                                                                                                          g$ls/false$21034$1i4eWV)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$21045$1i4eWV)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$21046$1i4eWV)
                                                                                                                (if g$ls/false$21046$1i4eWV
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$20930$1i4eWV)))
                                                                                                                    g$ls/false$21046$1i4eWV)
                                                                                                                  (g$syntax-violation$19897$1i4eWV
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$21045$1i4eWV))))
                                                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                                                               g$t$21045$1i4eWV
                                                                                                               '_))))
                                                                                                         g$t$21033$1i4eWV))))
                                                                                                   (g$syntax-dispatch$19778$1i4eWV
                                                                                                     g$t$21033$1i4eWV
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$21011$1i4eWV))))
                                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                                           g$t$21011$1i4eWV
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$20999$1i4eWV))))
                                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                                 g$t$20999$1i4eWV
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$20997$1i4eWV))))
                                                                     (g$syntax-dispatch$19778$1i4eWV
                                                                       g$t$20997$1i4eWV
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$20971$1i4eWV))))
                                                           (g$syntax-dispatch$19778$1i4eWV
                                                             g$t$20971$1i4eWV
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$20947$1i4eWV))))
                                                 (g$syntax-dispatch$19778$1i4eWV
                                                   g$t$20947$1i4eWV
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$20945$1i4eWV))))
                                       (g$syntax-dispatch$19778$1i4eWV
                                         g$t$20945$1i4eWV
                                         '#(scheme-id unsyntax)))))
                                   g$t$20932$1i4eWV))))
                             (g$syntax-dispatch$19778$1i4eWV
                               g$t$20932$1i4eWV
                               '(#(scheme-id unsyntax) any)))))
                         g$p$20930$1i4eWV)))))
           (case-lambda
             ((g$x$20917$1i4eWV)
              ((case-lambda
                 ((g$t$20918$1i4eWV)
                  ((case-lambda
                     ((g$ls/false$20919$1i4eWV)
                      (if g$ls/false$20919$1i4eWV
                        (apply
                          (case-lambda
                            ((g$e$20920$1i4eWV)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$20916$1i4eWV
                                    g$e$20920$1i4eWV
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$20924$1i4eWV
                                    g$rhs*$20925$1i4eWV
                                    g$v$20926$1i4eWV)
                                  ((case-lambda
                                     ((g$v$20927$1i4eWV
                                        g$rhs*$20928$1i4eWV
                                        g$lhs*$20929$1i4eWV)
                                      (g$bless$19741$1i4eWV
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$20928$1i4eWV)
                                          '()
                                          (list
                                            g$lhs*$20929$1i4eWV
                                            (list
                                              'syntax
                                              g$v$20927$1i4eWV))))))
                                   g$v$20926$1i4eWV
                                   g$rhs*$20925$1i4eWV
                                   g$lhs*$20924$1i4eWV))))))
                          g$ls/false$20919$1i4eWV)
                        (g$syntax-violation$19897$1i4eWV
                          '#f
                          '"invalid syntax"
                          g$t$20918$1i4eWV))))
                   (g$syntax-dispatch$19778$1i4eWV
                     g$t$20918$1i4eWV
                     '(_ any)))))
               g$x$20917$1i4eWV))))))))
   (g$define-struct-macro$19771$1i4eWV
     g$define-struct-macro$23367$1i4eWV
     (case-lambda
       ((g$stx$21047$1i4eWV)
        (g$syntax-violation$19897$1i4eWV
          '#f
          '"define-struct not supported"
          g$stx$21047$1i4eWV))))
   (g$define-record-type-macro$19772$1i4eWV
     g$define-record-type-macro$23368$1i4eWV
     (case-lambda
       ((g$x$21048$1i4eWV)
        (letrec* ((g$id$21049$1i4eWV
                    (case-lambda
                      ((g$ctxt$21301$1i4eWV . g$str*$21302$1i4eWV)
                       (g$datum->syntax$19899$1i4eWV
                         g$ctxt$21301$1i4eWV
                         (string->symbol
                           (apply
                             string-append
                             (g$map$11835$1i4eWV
                               (case-lambda
                                 ((g$x$21303$1i4eWV)
                                  (if (g$symbol?$12668$1i4eWV
                                        g$x$21303$1i4eWV)
                                    (symbol->string g$x$21303$1i4eWV)
                                    (if (string? g$x$21303$1i4eWV)
                                      g$x$21303$1i4eWV
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$21302$1i4eWV)))))))
                  (g$get-record-name$21050$1i4eWV
                    (case-lambda
                      ((g$spec$21292$1i4eWV)
                       ((case-lambda
                          ((g$t$21293$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21294$1i4eWV)
                               (if g$ls/false$21294$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$foo$21295$1i4eWV
                                        g$make-foo$21296$1i4eWV
                                        g$foo?$21297$1i4eWV)
                                      g$foo$21295$1i4eWV))
                                   g$ls/false$21294$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21298$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21299$1i4eWV)
                                         (if g$ls/false$21299$1i4eWV
                                           (apply
                                             (case-lambda
                                               ((g$foo$21300$1i4eWV)
                                                g$foo$21300$1i4eWV))
                                             g$ls/false$21299$1i4eWV)
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$t$21298$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21298$1i4eWV
                                        'any))))
                                  g$t$21293$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21293$1i4eWV
                              '(any any any)))))
                        g$spec$21292$1i4eWV))))
                  (g$get-record-constructor-name$21051$1i4eWV
                    (case-lambda
                      ((g$spec$21282$1i4eWV)
                       ((case-lambda
                          ((g$t$21283$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21284$1i4eWV)
                               (if g$ls/false$21284$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$foo$21285$1i4eWV
                                        g$make-foo$21286$1i4eWV
                                        g$foo?$21287$1i4eWV)
                                      g$make-foo$21286$1i4eWV))
                                   g$ls/false$21284$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21288$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21289$1i4eWV)
                                         (if (if g$ls/false$21289$1i4eWV
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$21290$1i4eWV)
                                                      (g$id?$19280$1i4eWV
                                                        g$foo$21290$1i4eWV)))
                                                   g$ls/false$21289$1i4eWV))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$21291$1i4eWV)
                                                (g$id$21049$1i4eWV
                                                  g$foo$21291$1i4eWV
                                                  '"make-"
                                                  (g$stx->datum$19291$1i4eWV
                                                    g$foo$21291$1i4eWV))))
                                             g$ls/false$21289$1i4eWV)
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$t$21288$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21288$1i4eWV
                                        'any))))
                                  g$t$21283$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21283$1i4eWV
                              '(any any any)))))
                        g$spec$21282$1i4eWV))))
                  (g$get-record-predicate-name$21052$1i4eWV
                    (case-lambda
                      ((g$spec$21272$1i4eWV)
                       ((case-lambda
                          ((g$t$21273$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21274$1i4eWV)
                               (if g$ls/false$21274$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$foo$21275$1i4eWV
                                        g$make-foo$21276$1i4eWV
                                        g$foo?$21277$1i4eWV)
                                      g$foo?$21277$1i4eWV))
                                   g$ls/false$21274$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21278$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21279$1i4eWV)
                                         (if (if g$ls/false$21279$1i4eWV
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$21280$1i4eWV)
                                                      (g$id?$19280$1i4eWV
                                                        g$foo$21280$1i4eWV)))
                                                   g$ls/false$21279$1i4eWV))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$21281$1i4eWV)
                                                (g$id$21049$1i4eWV
                                                  g$foo$21281$1i4eWV
                                                  (g$stx->datum$19291$1i4eWV
                                                    g$foo$21281$1i4eWV)
                                                  '"?")))
                                             g$ls/false$21279$1i4eWV)
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$t$21278$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21278$1i4eWV
                                        'any))))
                                  g$t$21273$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21273$1i4eWV
                              '(any any any)))))
                        g$spec$21272$1i4eWV))))
                  (g$get-clause$21053$1i4eWV
                    (case-lambda
                      ((g$id$21263$1i4eWV g$ls$21264$1i4eWV)
                       ((case-lambda
                          ((g$t$21265$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21266$1i4eWV)
                               (if g$ls/false$21266$1i4eWV
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$21266$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21267$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21268$1i4eWV)
                                         (if g$ls/false$21268$1i4eWV
                                           (apply
                                             (case-lambda
                                               ((g$x$21269$1i4eWV
                                                  g$rest$21270$1i4eWV
                                                  g$ls$21271$1i4eWV)
                                                (if (g$free-id=?$19284$1i4eWV
                                                      (g$bless$19741$1i4eWV
                                                        g$id$21263$1i4eWV)
                                                      g$x$21269$1i4eWV)
                                                  (cons
                                                    g$x$21269$1i4eWV
                                                    g$rest$21270$1i4eWV)
                                                  (g$get-clause$21053$1i4eWV
                                                    g$id$21263$1i4eWV
                                                    g$ls$21271$1i4eWV))))
                                             g$ls/false$21268$1i4eWV)
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$t$21267$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21267$1i4eWV
                                        '((any . any) . any)))))
                                  g$t$21265$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21265$1i4eWV
                              '()))))
                        g$ls$21264$1i4eWV))))
                  (g$foo-rtd-code$21054$1i4eWV
                    (case-lambda
                      ((g$name$21222$1i4eWV
                         g$clause*$21223$1i4eWV
                         g$parent-rtd-code$21224$1i4eWV)
                       (letrec* ((g$convert-field-spec*$21225$1i4eWV
                                   (case-lambda
                                     ((g$ls$21250$1i4eWV)
                                      (g$list->vector$12678$1i4eWV
                                        (g$map$11835$1i4eWV
                                          (case-lambda
                                            ((g$x$21251$1i4eWV)
                                             ((case-lambda
                                                ((g$t$21252$1i4eWV)
                                                 ((case-lambda
                                                    ((g$ls/false$21253$1i4eWV)
                                                     (if g$ls/false$21253$1i4eWV
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$21254$1i4eWV
                                                              g$rest$21255$1i4eWV)
                                                            (list
                                                              'mutable
                                                              g$name$21254$1i4eWV)))
                                                         g$ls/false$21253$1i4eWV)
                                                       ((case-lambda
                                                          ((g$t$21256$1i4eWV)
                                                           ((case-lambda
                                                              ((g$ls/false$21257$1i4eWV)
                                                               (if g$ls/false$21257$1i4eWV
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$21258$1i4eWV
                                                                        g$rest$21259$1i4eWV)
                                                                      (list
                                                                        'immutable
                                                                        g$name$21258$1i4eWV)))
                                                                   g$ls/false$21257$1i4eWV)
                                                                 ((case-lambda
                                                                    ((g$t$21260$1i4eWV)
                                                                     ((case-lambda
                                                                        ((g$ls/false$21261$1i4eWV)
                                                                         (if g$ls/false$21261$1i4eWV
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$21262$1i4eWV)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$21262$1i4eWV)))
                                                                             g$ls/false$21261$1i4eWV)
                                                                           (g$syntax-violation$19897$1i4eWV
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$21260$1i4eWV))))
                                                                      (g$syntax-dispatch$19778$1i4eWV
                                                                        g$t$21260$1i4eWV
                                                                        'any))))
                                                                  g$t$21256$1i4eWV))))
                                                            (g$syntax-dispatch$19778$1i4eWV
                                                              g$t$21256$1i4eWV
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$21252$1i4eWV))))
                                                  (g$syntax-dispatch$19778$1i4eWV
                                                    g$t$21252$1i4eWV
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$21251$1i4eWV)))
                                          g$ls$21250$1i4eWV))))))
                         ((case-lambda
                            ((g$uid-code$21226$1i4eWV
                               g$sealed?$21227$1i4eWV
                               g$opaque?$21228$1i4eWV
                               g$fields$21229$1i4eWV)
                             (g$bless$19741$1i4eWV
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$21222$1i4eWV)
                                 g$parent-rtd-code$21224$1i4eWV
                                 g$uid-code$21226$1i4eWV
                                 g$sealed?$21227$1i4eWV
                                 g$opaque?$21228$1i4eWV
                                 g$fields$21229$1i4eWV))))
                          ((case-lambda
                             ((g$t$21230$1i4eWV)
                              ((case-lambda
                                 ((g$ls/false$21231$1i4eWV)
                                  (if g$ls/false$21231$1i4eWV
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$21231$1i4eWV)
                                    ((case-lambda
                                       ((g$t$21232$1i4eWV)
                                        ((case-lambda
                                           ((g$ls/false$21233$1i4eWV)
                                            (if g$ls/false$21233$1i4eWV
                                              (apply
                                                (case-lambda
                                                  ((g$uid$21234$1i4eWV)
                                                   (list
                                                     'quote
                                                     g$uid$21234$1i4eWV)))
                                                g$ls/false$21233$1i4eWV)
                                              ((case-lambda
                                                 ((g$t$21235$1i4eWV)
                                                  ((case-lambda
                                                     ((g$ls/false$21236$1i4eWV)
                                                      (if g$ls/false$21236$1i4eWV
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$21236$1i4eWV)
                                                        (g$syntax-violation$19897$1i4eWV
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$21235$1i4eWV))))
                                                   (g$syntax-dispatch$19778$1i4eWV
                                                     g$t$21235$1i4eWV
                                                     '_))))
                                               g$t$21232$1i4eWV))))
                                         (g$syntax-dispatch$19778$1i4eWV
                                           g$t$21232$1i4eWV
                                           '(_ any)))))
                                     g$t$21230$1i4eWV))))
                               (g$syntax-dispatch$19778$1i4eWV
                                 g$t$21230$1i4eWV
                                 '(_)))))
                           (g$get-clause$21053$1i4eWV
                             'nongenerative
                             g$clause*$21223$1i4eWV))
                          ((case-lambda
                             ((g$t$21237$1i4eWV)
                              ((case-lambda
                                 ((g$ls/false$21238$1i4eWV)
                                  (if g$ls/false$21238$1i4eWV
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$21238$1i4eWV)
                                    ((case-lambda
                                       ((g$t$21239$1i4eWV)
                                        ((case-lambda
                                           ((g$ls/false$21240$1i4eWV)
                                            (if g$ls/false$21240$1i4eWV
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$21240$1i4eWV)
                                              (g$syntax-violation$19897$1i4eWV
                                                '#f
                                                '"invalid syntax"
                                                g$t$21239$1i4eWV))))
                                         (g$syntax-dispatch$19778$1i4eWV
                                           g$t$21239$1i4eWV
                                           '_))))
                                     g$t$21237$1i4eWV))))
                               (g$syntax-dispatch$19778$1i4eWV
                                 g$t$21237$1i4eWV
                                 '(_ #(atom #t))))))
                           (g$get-clause$21053$1i4eWV
                             'sealed
                             g$clause*$21223$1i4eWV))
                          ((case-lambda
                             ((g$t$21241$1i4eWV)
                              ((case-lambda
                                 ((g$ls/false$21242$1i4eWV)
                                  (if g$ls/false$21242$1i4eWV
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$21242$1i4eWV)
                                    ((case-lambda
                                       ((g$t$21243$1i4eWV)
                                        ((case-lambda
                                           ((g$ls/false$21244$1i4eWV)
                                            (if g$ls/false$21244$1i4eWV
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$21244$1i4eWV)
                                              (g$syntax-violation$19897$1i4eWV
                                                '#f
                                                '"invalid syntax"
                                                g$t$21243$1i4eWV))))
                                         (g$syntax-dispatch$19778$1i4eWV
                                           g$t$21243$1i4eWV
                                           '_))))
                                     g$t$21241$1i4eWV))))
                               (g$syntax-dispatch$19778$1i4eWV
                                 g$t$21241$1i4eWV
                                 '(_ #(atom #t))))))
                           (g$get-clause$21053$1i4eWV
                             'opaque
                             g$clause*$21223$1i4eWV))
                          ((case-lambda
                             ((g$t$21245$1i4eWV)
                              ((case-lambda
                                 ((g$ls/false$21246$1i4eWV)
                                  (if g$ls/false$21246$1i4eWV
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$21247$1i4eWV)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$21225$1i4eWV
                                             g$field-spec*$21247$1i4eWV))))
                                      g$ls/false$21246$1i4eWV)
                                    ((case-lambda
                                       ((g$t$21248$1i4eWV)
                                        ((case-lambda
                                           ((g$ls/false$21249$1i4eWV)
                                            (if g$ls/false$21249$1i4eWV
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$21249$1i4eWV)
                                              (g$syntax-violation$19897$1i4eWV
                                                '#f
                                                '"invalid syntax"
                                                g$t$21248$1i4eWV))))
                                         (g$syntax-dispatch$19778$1i4eWV
                                           g$t$21248$1i4eWV
                                           '_))))
                                     g$t$21245$1i4eWV))))
                               (g$syntax-dispatch$19778$1i4eWV
                                 g$t$21245$1i4eWV
                                 '(_ . each-any)))))
                           (g$get-clause$21053$1i4eWV
                             'fields
                             g$clause*$21223$1i4eWV)))))))
                  (g$parent-rtd-code$21055$1i4eWV
                    (case-lambda
                      ((g$clause*$21210$1i4eWV)
                       ((case-lambda
                          ((g$t$21211$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21212$1i4eWV)
                               (if g$ls/false$21212$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$name$21213$1i4eWV)
                                      (list
                                        'record-type-descriptor
                                        g$name$21213$1i4eWV)))
                                   g$ls/false$21212$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21214$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21215$1i4eWV)
                                         (if g$ls/false$21215$1i4eWV
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$21216$1i4eWV)
                                                    ((case-lambda
                                                       ((g$ls/false$21217$1i4eWV)
                                                        (if g$ls/false$21217$1i4eWV
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$21218$1i4eWV
                                                                 g$rcd$21219$1i4eWV)
                                                               g$rtd$21218$1i4eWV))
                                                            g$ls/false$21217$1i4eWV)
                                                          ((case-lambda
                                                             ((g$t$21220$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$ls/false$21221$1i4eWV)
                                                                  (if g$ls/false$21221$1i4eWV
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$21221$1i4eWV)
                                                                    (g$syntax-violation$19897$1i4eWV
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21220$1i4eWV))))
                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                 g$t$21220$1i4eWV
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$21216$1i4eWV))))
                                                     (g$syntax-dispatch$19778$1i4eWV
                                                       g$t$21216$1i4eWV
                                                       '(_ any any)))))
                                                 (g$get-clause$21053$1i4eWV
                                                   'parent-rtd
                                                   g$clause*$21210$1i4eWV))))
                                             g$ls/false$21215$1i4eWV)
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$t$21214$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21214$1i4eWV
                                        '#(atom #f)))))
                                  g$t$21211$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21211$1i4eWV
                              '(_ any)))))
                        (g$get-clause$21053$1i4eWV
                          'parent
                          g$clause*$21210$1i4eWV)))))
                  (g$parent-rcd-code$21056$1i4eWV
                    (case-lambda
                      ((g$clause*$21198$1i4eWV)
                       ((case-lambda
                          ((g$t$21199$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21200$1i4eWV)
                               (if g$ls/false$21200$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$name$21201$1i4eWV)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$21201$1i4eWV)))
                                   g$ls/false$21200$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21202$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21203$1i4eWV)
                                         (if g$ls/false$21203$1i4eWV
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$21204$1i4eWV)
                                                    ((case-lambda
                                                       ((g$ls/false$21205$1i4eWV)
                                                        (if g$ls/false$21205$1i4eWV
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$21206$1i4eWV
                                                                 g$rcd$21207$1i4eWV)
                                                               g$rcd$21207$1i4eWV))
                                                            g$ls/false$21205$1i4eWV)
                                                          ((case-lambda
                                                             ((g$t$21208$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$ls/false$21209$1i4eWV)
                                                                  (if g$ls/false$21209$1i4eWV
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$21209$1i4eWV)
                                                                    (g$syntax-violation$19897$1i4eWV
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21208$1i4eWV))))
                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                 g$t$21208$1i4eWV
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$21204$1i4eWV))))
                                                     (g$syntax-dispatch$19778$1i4eWV
                                                       g$t$21204$1i4eWV
                                                       '(_ any any)))))
                                                 (g$get-clause$21053$1i4eWV
                                                   'parent-rtd
                                                   g$clause*$21198$1i4eWV))))
                                             g$ls/false$21203$1i4eWV)
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$t$21202$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21202$1i4eWV
                                        '#(atom #f)))))
                                  g$t$21199$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21199$1i4eWV
                              '(_ any)))))
                        (g$get-clause$21053$1i4eWV
                          'parent
                          g$clause*$21198$1i4eWV)))))
                  (g$foo-rcd-code$21057$1i4eWV
                    (case-lambda
                      ((g$clause*$21194$1i4eWV
                         g$foo-rtd$21195$1i4eWV
                         g$protocol$21196$1i4eWV
                         g$parent-rcd-code$21197$1i4eWV)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$21195$1i4eWV
                         g$parent-rcd-code$21197$1i4eWV
                         g$protocol$21196$1i4eWV))))
                  (g$get-protocol-code$21058$1i4eWV
                    (case-lambda
                      ((g$clause*$21188$1i4eWV)
                       ((case-lambda
                          ((g$t$21189$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21190$1i4eWV)
                               (if g$ls/false$21190$1i4eWV
                                 (apply
                                   (case-lambda
                                     ((g$expr$21191$1i4eWV)
                                      g$expr$21191$1i4eWV))
                                   g$ls/false$21190$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21192$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21193$1i4eWV)
                                         (if g$ls/false$21193$1i4eWV
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$21193$1i4eWV)
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$t$21192$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21192$1i4eWV
                                        '_))))
                                  g$t$21189$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21189$1i4eWV
                              '(_ any)))))
                        (g$get-clause$21053$1i4eWV
                          'protocol
                          g$clause*$21188$1i4eWV)))))
                  (g$get-fields$21059$1i4eWV
                    (case-lambda
                      ((g$clause*$21179$1i4eWV)
                       ((case-lambda
                          ((g$t$21180$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21181$1i4eWV)
                               (if g$ls/false$21181$1i4eWV
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$21181$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21182$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21183$1i4eWV)
                                         (if g$ls/false$21183$1i4eWV
                                           (apply
                                             (case-lambda
                                               ((g$f*$21184$1i4eWV)
                                                g$f*$21184$1i4eWV))
                                             g$ls/false$21183$1i4eWV)
                                           ((case-lambda
                                              ((g$t$21185$1i4eWV)
                                               ((case-lambda
                                                  ((g$ls/false$21186$1i4eWV)
                                                   (if g$ls/false$21186$1i4eWV
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$21187$1i4eWV)
                                                          (g$get-fields$21059$1i4eWV
                                                            g$rest$21187$1i4eWV)))
                                                       g$ls/false$21186$1i4eWV)
                                                     (g$syntax-violation$19897$1i4eWV
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$21185$1i4eWV))))
                                                (g$syntax-dispatch$19778$1i4eWV
                                                  g$t$21185$1i4eWV
                                                  '(_ . any)))))
                                            g$t$21182$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21182$1i4eWV
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$21180$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21180$1i4eWV
                              '()))))
                        g$clause*$21179$1i4eWV))))
                  (g$get-mutator-indices$21060$1i4eWV
                    (case-lambda
                      ((g$fields$21167$1i4eWV)
                       ((letrec ((g$f$21168$1i4eWV
                                   (case-lambda
                                     ((g$fields$21169$1i4eWV
                                        g$i$21170$1i4eWV)
                                      ((case-lambda
                                         ((g$t$21171$1i4eWV)
                                          ((case-lambda
                                             ((g$ls/false$21172$1i4eWV)
                                              (if g$ls/false$21172$1i4eWV
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$21172$1i4eWV)
                                                ((case-lambda
                                                   ((g$t$21173$1i4eWV)
                                                    ((case-lambda
                                                       ((g$ls/false$21174$1i4eWV)
                                                        (if g$ls/false$21174$1i4eWV
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$21175$1i4eWV)
                                                               (cons
                                                                 g$i$21170$1i4eWV
                                                                 (g$f$21168$1i4eWV
                                                                   g$rest$21175$1i4eWV
                                                                   (+ g$i$21170$1i4eWV
                                                                      '1)))))
                                                            g$ls/false$21174$1i4eWV)
                                                          ((case-lambda
                                                             ((g$t$21176$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$ls/false$21177$1i4eWV)
                                                                  (if g$ls/false$21177$1i4eWV
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$21178$1i4eWV)
                                                                         (g$f$21168$1i4eWV
                                                                           g$rest$21178$1i4eWV
                                                                           (+ g$i$21170$1i4eWV
                                                                              '1))))
                                                                      g$ls/false$21177$1i4eWV)
                                                                    (g$syntax-violation$19897$1i4eWV
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$21176$1i4eWV))))
                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                 g$t$21176$1i4eWV
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$21173$1i4eWV))))
                                                     (g$syntax-dispatch$19778$1i4eWV
                                                       g$t$21173$1i4eWV
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$21171$1i4eWV))))
                                           (g$syntax-dispatch$19778$1i4eWV
                                             g$t$21171$1i4eWV
                                             '()))))
                                       g$fields$21169$1i4eWV)))))
                          g$f$21168$1i4eWV)
                        g$fields$21167$1i4eWV
                        '0))))
                  (g$get-mutators$21061$1i4eWV
                    (case-lambda
                      ((g$foo$21146$1i4eWV g$fields$21147$1i4eWV)
                       (letrec* ((g$gen-name$21148$1i4eWV
                                   (case-lambda
                                     ((g$x$21166$1i4eWV)
                                      (g$datum->syntax$19899$1i4eWV
                                        g$foo$21146$1i4eWV
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$19900$1i4eWV
                                                g$foo$21146$1i4eWV))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$19900$1i4eWV
                                                g$x$21166$1i4eWV))
                                            '"-set!")))))))
                         ((letrec ((g$f$21149$1i4eWV
                                     (case-lambda
                                       ((g$fields$21150$1i4eWV)
                                        ((case-lambda
                                           ((g$t$21151$1i4eWV)
                                            ((case-lambda
                                               ((g$ls/false$21152$1i4eWV)
                                                (if g$ls/false$21152$1i4eWV
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$21152$1i4eWV)
                                                  ((case-lambda
                                                     ((g$t$21153$1i4eWV)
                                                      ((case-lambda
                                                         ((g$ls/false$21154$1i4eWV)
                                                          (if g$ls/false$21154$1i4eWV
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$21155$1i4eWV
                                                                   g$accessor$21156$1i4eWV
                                                                   g$mutator$21157$1i4eWV
                                                                   g$rest$21158$1i4eWV)
                                                                 (cons
                                                                   g$mutator$21157$1i4eWV
                                                                   (g$f$21149$1i4eWV
                                                                     g$rest$21158$1i4eWV))))
                                                              g$ls/false$21154$1i4eWV)
                                                            ((case-lambda
                                                               ((g$t$21159$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$ls/false$21160$1i4eWV)
                                                                    (if g$ls/false$21160$1i4eWV
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$21161$1i4eWV
                                                                             g$rest$21162$1i4eWV)
                                                                           (cons
                                                                             (g$gen-name$21148$1i4eWV
                                                                               g$name$21161$1i4eWV)
                                                                             (g$f$21149$1i4eWV
                                                                               g$rest$21162$1i4eWV))))
                                                                        g$ls/false$21160$1i4eWV)
                                                                      ((case-lambda
                                                                         ((g$t$21163$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21164$1i4eWV)
                                                                              (if g$ls/false$21164$1i4eWV
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$21165$1i4eWV)
                                                                                     (g$f$21149$1i4eWV
                                                                                       g$rest$21165$1i4eWV)))
                                                                                  g$ls/false$21164$1i4eWV)
                                                                                (g$syntax-violation$19897$1i4eWV
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$21163$1i4eWV))))
                                                                           (g$syntax-dispatch$19778$1i4eWV
                                                                             g$t$21163$1i4eWV
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$21159$1i4eWV))))
                                                                 (g$syntax-dispatch$19778$1i4eWV
                                                                   g$t$21159$1i4eWV
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$21153$1i4eWV))))
                                                       (g$syntax-dispatch$19778$1i4eWV
                                                         g$t$21153$1i4eWV
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$21151$1i4eWV))))
                                             (g$syntax-dispatch$19778$1i4eWV
                                               g$t$21151$1i4eWV
                                               '()))))
                                         g$fields$21150$1i4eWV)))))
                            g$f$21149$1i4eWV)
                          g$fields$21147$1i4eWV)))))
                  (g$get-accessors$21062$1i4eWV
                    (case-lambda
                      ((g$foo$21112$1i4eWV g$fields$21113$1i4eWV)
                       (letrec* ((g$gen-name$21114$1i4eWV
                                   (case-lambda
                                     ((g$x$21145$1i4eWV)
                                      (g$datum->syntax$19899$1i4eWV
                                        g$foo$21112$1i4eWV
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$19900$1i4eWV
                                                g$foo$21112$1i4eWV))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$19900$1i4eWV
                                                g$x$21145$1i4eWV)))))))))
                         (g$map$11835$1i4eWV
                           (case-lambda
                             ((g$field$21115$1i4eWV)
                              ((case-lambda
                                 ((g$t$21116$1i4eWV)
                                  ((case-lambda
                                     ((g$ls/false$21117$1i4eWV)
                                      (if (if g$ls/false$21117$1i4eWV
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$21118$1i4eWV
                                                     g$accessor$21119$1i4eWV
                                                     g$mutator$21120$1i4eWV)
                                                   (g$id?$19280$1i4eWV
                                                     g$accessor$21119$1i4eWV)))
                                                g$ls/false$21117$1i4eWV))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$21121$1i4eWV
                                               g$accessor$21122$1i4eWV
                                               g$mutator$21123$1i4eWV)
                                             g$accessor$21122$1i4eWV))
                                          g$ls/false$21117$1i4eWV)
                                        ((case-lambda
                                           ((g$t$21124$1i4eWV)
                                            ((case-lambda
                                               ((g$ls/false$21125$1i4eWV)
                                                (if (if g$ls/false$21125$1i4eWV
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$21126$1i4eWV
                                                               g$accessor$21127$1i4eWV)
                                                             (g$id?$19280$1i4eWV
                                                               g$accessor$21127$1i4eWV)))
                                                          g$ls/false$21125$1i4eWV))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$21128$1i4eWV
                                                         g$accessor$21129$1i4eWV)
                                                       g$accessor$21129$1i4eWV))
                                                    g$ls/false$21125$1i4eWV)
                                                  ((case-lambda
                                                     ((g$t$21130$1i4eWV)
                                                      ((case-lambda
                                                         ((g$ls/false$21131$1i4eWV)
                                                          (if (if g$ls/false$21131$1i4eWV
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$21132$1i4eWV)
                                                                       (g$id?$19280$1i4eWV
                                                                         g$name$21132$1i4eWV)))
                                                                    g$ls/false$21131$1i4eWV))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$21133$1i4eWV)
                                                                 (g$gen-name$21114$1i4eWV
                                                                   g$name$21133$1i4eWV)))
                                                              g$ls/false$21131$1i4eWV)
                                                            ((case-lambda
                                                               ((g$t$21134$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$ls/false$21135$1i4eWV)
                                                                    (if (if g$ls/false$21135$1i4eWV
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$21136$1i4eWV)
                                                                                 (g$id?$19280$1i4eWV
                                                                                   g$name$21136$1i4eWV)))
                                                                              g$ls/false$21135$1i4eWV))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$21137$1i4eWV)
                                                                           (g$gen-name$21114$1i4eWV
                                                                             g$name$21137$1i4eWV)))
                                                                        g$ls/false$21135$1i4eWV)
                                                                      ((case-lambda
                                                                         ((g$t$21138$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21139$1i4eWV)
                                                                              (if (if g$ls/false$21139$1i4eWV
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$21140$1i4eWV)
                                                                                           (g$id?$19280$1i4eWV
                                                                                             g$name$21140$1i4eWV)))
                                                                                        g$ls/false$21139$1i4eWV))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$21141$1i4eWV)
                                                                                     (g$gen-name$21114$1i4eWV
                                                                                       g$name$21141$1i4eWV)))
                                                                                  g$ls/false$21139$1i4eWV)
                                                                                ((case-lambda
                                                                                   ((g$t$21142$1i4eWV)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$21143$1i4eWV)
                                                                                        (if g$ls/false$21143$1i4eWV
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$21144$1i4eWV)
                                                                                               (g$syntax-violation$19897$1i4eWV
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$21115$1i4eWV)))
                                                                                            g$ls/false$21143$1i4eWV)
                                                                                          (g$syntax-violation$19897$1i4eWV
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$21142$1i4eWV))))
                                                                                     (g$syntax-dispatch$19778$1i4eWV
                                                                                       g$t$21142$1i4eWV
                                                                                       'any))))
                                                                                 g$t$21138$1i4eWV))))
                                                                           (g$syntax-dispatch$19778$1i4eWV
                                                                             g$t$21138$1i4eWV
                                                                             'any))))
                                                                       g$t$21134$1i4eWV))))
                                                                 (g$syntax-dispatch$19778$1i4eWV
                                                                   g$t$21134$1i4eWV
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$21130$1i4eWV))))
                                                       (g$syntax-dispatch$19778$1i4eWV
                                                         g$t$21130$1i4eWV
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$21124$1i4eWV))))
                                             (g$syntax-dispatch$19778$1i4eWV
                                               g$t$21124$1i4eWV
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$21116$1i4eWV))))
                                   (g$syntax-dispatch$19778$1i4eWV
                                     g$t$21116$1i4eWV
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$21115$1i4eWV)))
                           g$fields$21113$1i4eWV)))))
                  (g$enumerate$21063$1i4eWV
                    (case-lambda
                      ((g$ls$21108$1i4eWV)
                       ((letrec ((g$f$21109$1i4eWV
                                   (case-lambda
                                     ((g$ls$21110$1i4eWV
                                        g$i$21111$1i4eWV)
                                      (if (null? g$ls$21110$1i4eWV)
                                        '()
                                        (cons
                                          g$i$21111$1i4eWV
                                          (g$f$21109$1i4eWV
                                            (cdr g$ls$21110$1i4eWV)
                                            (+ g$i$21111$1i4eWV
                                               '1))))))))
                          g$f$21109$1i4eWV)
                        g$ls$21108$1i4eWV
                        '0))))
                  (g$do-define-record$21064$1i4eWV
                    (case-lambda
                      ((g$namespec$21088$1i4eWV g$clause*$21089$1i4eWV)
                       ((case-lambda
                          ((g$foo$21090$1i4eWV)
                           ((case-lambda
                              ((g$foo-rtd$21091$1i4eWV)
                               ((case-lambda
                                  ((g$foo-rcd$21092$1i4eWV)
                                   ((case-lambda
                                      ((g$protocol$21093$1i4eWV)
                                       ((case-lambda
                                          ((g$make-foo$21094$1i4eWV)
                                           ((case-lambda
                                              ((g$fields$21095$1i4eWV)
                                               ((case-lambda
                                                  ((g$idx*$21096$1i4eWV)
                                                   ((case-lambda
                                                      ((g$foo-x*$21097$1i4eWV)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$21098$1i4eWV)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$21099$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$foo?$21100$1i4eWV)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$21101$1i4eWV)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$21102$1i4eWV)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$21103$1i4eWV)
                                                                               (g$bless$19741$1i4eWV
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$21091$1i4eWV
                                                                                       g$foo-rtd-code$21101$1i4eWV)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$21093$1i4eWV
                                                                                         g$protocol-code$21103$1i4eWV)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$21092$1i4eWV
                                                                                           g$foo-rcd-code$21102$1i4eWV)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$21090$1i4eWV
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$21091$1i4eWV)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$21092$1i4eWV)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$21100$1i4eWV
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$21091$1i4eWV))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$21094$1i4eWV
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$21092$1i4eWV))
                                                                                               (append
                                                                                                 (g$map$11835$1i4eWV
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$21104$1i4eWV
                                                                                                        g$idx$21105$1i4eWV)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$21104$1i4eWV
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$21091$1i4eWV
                                                                                                          g$idx$21105$1i4eWV))))
                                                                                                   g$foo-x*$21097$1i4eWV
                                                                                                   g$idx*$21096$1i4eWV)
                                                                                                 (g$map$11835$1i4eWV
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$21106$1i4eWV
                                                                                                        g$idx$21107$1i4eWV)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$21106$1i4eWV
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$21091$1i4eWV
                                                                                                          g$idx$21107$1i4eWV))))
                                                                                                   g$set-foo-x!*$21098$1i4eWV
                                                                                                   g$set-foo-idx*$21099$1i4eWV))))))))))))
                                                                            (g$get-protocol-code$21058$1i4eWV
                                                                              g$clause*$21089$1i4eWV))))
                                                                        (g$foo-rcd-code$21057$1i4eWV
                                                                          g$clause*$21089$1i4eWV
                                                                          g$foo-rtd$21091$1i4eWV
                                                                          g$protocol$21093$1i4eWV
                                                                          (g$parent-rcd-code$21056$1i4eWV
                                                                            g$clause*$21089$1i4eWV)))))
                                                                    (g$foo-rtd-code$21054$1i4eWV
                                                                      g$foo$21090$1i4eWV
                                                                      g$clause*$21089$1i4eWV
                                                                      (g$parent-rtd-code$21055$1i4eWV
                                                                        g$clause*$21089$1i4eWV)))))
                                                                (g$get-record-predicate-name$21052$1i4eWV
                                                                  g$namespec$21088$1i4eWV))))
                                                            (g$get-mutator-indices$21060$1i4eWV
                                                              g$fields$21095$1i4eWV))))
                                                        (g$get-mutators$21061$1i4eWV
                                                          g$foo$21090$1i4eWV
                                                          g$fields$21095$1i4eWV))))
                                                    (g$get-accessors$21062$1i4eWV
                                                      g$foo$21090$1i4eWV
                                                      g$fields$21095$1i4eWV))))
                                                (g$enumerate$21063$1i4eWV
                                                  g$fields$21095$1i4eWV))))
                                            (g$get-fields$21059$1i4eWV
                                              g$clause*$21089$1i4eWV))))
                                        (g$get-record-constructor-name$21051$1i4eWV
                                          g$namespec$21088$1i4eWV))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$21050$1i4eWV
                          g$namespec$21088$1i4eWV)))))
                  (g$verify-clauses$21065$1i4eWV
                    (case-lambda
                      ((g$x$21070$1i4eWV g$cls*$21071$1i4eWV)
                       (letrec* ((g$valid-kwds$21072$1i4eWV
                                   (g$map$11835$1i4eWV
                                     g$bless$19741$1i4eWV
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$21073$1i4eWV
                                   (case-lambda
                                     ((g$x$21085$1i4eWV
                                        g$ls$21086$1i4eWV)
                                      (if (pair? g$ls$21086$1i4eWV)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$21087$1i4eWV)
                                              (if g$t$21087$1i4eWV
                                                g$t$21087$1i4eWV
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$21073$1i4eWV
                                                    g$x$21085$1i4eWV
                                                    (cdr g$ls$21086$1i4eWV))))))
                                           (g$free-id=?$19284$1i4eWV
                                             g$x$21085$1i4eWV
                                             (car g$ls$21086$1i4eWV))))
                                        '#f)))))
                         ((letrec ((g$f$21074$1i4eWV
                                     (case-lambda
                                       ((g$cls*$21075$1i4eWV
                                          g$seen*$21076$1i4eWV)
                                        (if (not (null?
                                                   g$cls*$21075$1i4eWV))
                                          ((case-lambda
                                             ((g$t$21077$1i4eWV)
                                              ((case-lambda
                                                 ((g$ls/false$21078$1i4eWV)
                                                  (if g$ls/false$21078$1i4eWV
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$21079$1i4eWV
                                                           g$rest$21080$1i4eWV)
                                                         (if ((case-lambda
                                                                ((g$t$21081$1i4eWV)
                                                                 (if g$t$21081$1i4eWV
                                                                   g$t$21081$1i4eWV
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$21073$1i4eWV
                                                                            g$kwd$21079$1i4eWV
                                                                            g$valid-kwds$21072$1i4eWV))))))
                                                              (not (g$id?$19280$1i4eWV
                                                                     g$kwd$21079$1i4eWV)))
                                                           (g$syntax-violation$19897$1i4eWV
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$21079$1i4eWV)
                                                           (if (g$bound-id-member?$19287$1i4eWV
                                                                 g$kwd$21079$1i4eWV
                                                                 g$seen*$21076$1i4eWV)
                                                             (g$syntax-violation$19897$1i4eWV
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$21070$1i4eWV
                                                               g$kwd$21079$1i4eWV)
                                                             (g$f$21074$1i4eWV
                                                               (cdr g$cls*$21075$1i4eWV)
                                                               (cons
                                                                 g$kwd$21079$1i4eWV
                                                                 g$seen*$21076$1i4eWV))))))
                                                      g$ls/false$21078$1i4eWV)
                                                    ((case-lambda
                                                       ((g$t$21082$1i4eWV)
                                                        ((case-lambda
                                                           ((g$ls/false$21083$1i4eWV)
                                                            (if g$ls/false$21083$1i4eWV
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$21084$1i4eWV)
                                                                   (g$syntax-violation$19897$1i4eWV
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$21084$1i4eWV)))
                                                                g$ls/false$21083$1i4eWV)
                                                              (g$syntax-violation$19897$1i4eWV
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21082$1i4eWV))))
                                                         (g$syntax-dispatch$19778$1i4eWV
                                                           g$t$21082$1i4eWV
                                                           'any))))
                                                     g$t$21077$1i4eWV))))
                                               (g$syntax-dispatch$19778$1i4eWV
                                                 g$t$21077$1i4eWV
                                                 '(any . any)))))
                                           (car g$cls*$21075$1i4eWV))
                                          (void))))))
                            g$f$21074$1i4eWV)
                          g$cls*$21071$1i4eWV
                          '()))))))
          ((case-lambda
             ((g$t$21066$1i4eWV)
              ((case-lambda
                 ((g$ls/false$21067$1i4eWV)
                  (if g$ls/false$21067$1i4eWV
                    (apply
                      (case-lambda
                        ((g$namespec$21068$1i4eWV
                           g$clause*$21069$1i4eWV)
                         (begin
                           (g$verify-clauses$21065$1i4eWV
                             g$x$21048$1i4eWV
                             g$clause*$21069$1i4eWV)
                           (g$do-define-record$21064$1i4eWV
                             g$namespec$21068$1i4eWV
                             g$clause*$21069$1i4eWV))))
                      g$ls/false$21067$1i4eWV)
                    (g$syntax-violation$19897$1i4eWV
                      '#f
                      '"invalid syntax"
                      g$t$21066$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$21066$1i4eWV
                 '(_ any . each-any)))))
           g$x$21048$1i4eWV)))))
   (g$define-condition-type-macro$19773$1i4eWV
     g$define-condition-type-macro$23369$1i4eWV
     (case-lambda
       ((g$x$21304$1i4eWV)
        (letrec* ((g$mkname$21305$1i4eWV
                    (case-lambda
                      ((g$name$21328$1i4eWV g$suffix$21329$1i4eWV)
                       (g$datum->syntax$19899$1i4eWV
                         g$name$21328$1i4eWV
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$19900$1i4eWV
                                 g$name$21328$1i4eWV))
                             g$suffix$21329$1i4eWV)))))))
          ((case-lambda
             ((g$t$21306$1i4eWV)
              ((case-lambda
                 ((g$ls/false$21307$1i4eWV)
                  (if (if g$ls/false$21307$1i4eWV
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$21308$1i4eWV
                                 g$name$21309$1i4eWV
                                 g$super$21310$1i4eWV
                                 g$constructor$21311$1i4eWV
                                 g$predicate$21312$1i4eWV
                                 g$field*$21313$1i4eWV
                                 g$accessor*$21314$1i4eWV)
                               (if (g$id?$19280$1i4eWV
                                     g$name$21309$1i4eWV)
                                 (if (g$id?$19280$1i4eWV
                                       g$super$21310$1i4eWV)
                                   (if (g$id?$19280$1i4eWV
                                         g$constructor$21311$1i4eWV)
                                     (if (g$id?$19280$1i4eWV
                                           g$predicate$21312$1i4eWV)
                                       (if (g$for-all$11833$1i4eWV
                                             g$id?$19280$1i4eWV
                                             g$field*$21313$1i4eWV)
                                         (begin
                                           '#f
                                           (g$for-all$11833$1i4eWV
                                             g$id?$19280$1i4eWV
                                             g$accessor*$21314$1i4eWV))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$21307$1i4eWV))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$21315$1i4eWV
                           g$name$21316$1i4eWV
                           g$super$21317$1i4eWV
                           g$constructor$21318$1i4eWV
                           g$predicate$21319$1i4eWV
                           g$field*$21320$1i4eWV
                           g$accessor*$21321$1i4eWV)
                         ((case-lambda
                            ((g$aux-accessor*$21322$1i4eWV)
                             (g$bless$19741$1i4eWV
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$21316$1i4eWV
                                         g$constructor$21318$1i4eWV
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$21317$1i4eWV)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$11835$1i4eWV
                                               (case-lambda
                                                 ((g$field$21323$1i4eWV
                                                    g$aux$21324$1i4eWV)
                                                  (list
                                                    'immutable
                                                    g$field$21323$1i4eWV
                                                    g$aux$21324$1i4eWV)))
                                               g$field*$21320$1i4eWV
                                               g$aux-accessor*$21322$1i4eWV))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$21319$1i4eWV
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$21316$1i4eWV)))
                                     (g$map$11835$1i4eWV
                                       (case-lambda
                                         ((g$accessor$21325$1i4eWV
                                            g$aux$21326$1i4eWV)
                                          (list
                                            'define
                                            g$accessor$21325$1i4eWV
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$21316$1i4eWV)
                                              g$aux$21326$1i4eWV))))
                                       g$accessor*$21321$1i4eWV
                                       g$aux-accessor*$21322$1i4eWV)))))))
                          (g$map$11835$1i4eWV
                            (case-lambda ((g$x$21327$1i4eWV) (gensym)))
                            g$accessor*$21321$1i4eWV))))
                      g$ls/false$21307$1i4eWV)
                    (g$syntax-violation$19897$1i4eWV
                      '#f
                      '"invalid syntax"
                      g$t$21306$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$21306$1i4eWV
                 '(any any any any any . #(each (any any)))))))
           g$x$21304$1i4eWV)))))
   (g$incorrect-usage-macro$19774$1i4eWV
     g$incorrect-usage-macro$23370$1i4eWV
     (case-lambda
       ((g$e$21330$1i4eWV)
        (g$syntax-violation$19897$1i4eWV
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$21330$1i4eWV))))
   (g$parameterize-macro$19775$1i4eWV
     g$parameterize-macro$23371$1i4eWV
     (case-lambda
       ((g$e$21331$1i4eWV)
        ((case-lambda
           ((g$t$21332$1i4eWV)
            ((case-lambda
               ((g$ls/false$21333$1i4eWV)
                (if g$ls/false$21333$1i4eWV
                  (apply
                    (case-lambda
                      ((g$b$21334$1i4eWV g$b*$21335$1i4eWV)
                       (g$bless$19741$1i4eWV
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$21334$1i4eWV
                               g$b*$21335$1i4eWV))))))
                    g$ls/false$21333$1i4eWV)
                  ((case-lambda
                     ((g$t$21336$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$21337$1i4eWV)
                          (if g$ls/false$21337$1i4eWV
                            (apply
                              (case-lambda
                                ((g$olhs*$21338$1i4eWV
                                   g$orhs*$21339$1i4eWV
                                   g$b$21340$1i4eWV
                                   g$b*$21341$1i4eWV)
                                 ((case-lambda
                                    ((g$lhs*$21342$1i4eWV
                                       g$rhs*$21343$1i4eWV)
                                     (g$bless$19741$1i4eWV
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$21342$1i4eWV
                                             g$rhs*$21343$1i4eWV)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$11835$1i4eWV
                                                       (case-lambda
                                                         ((g$lhs$21344$1i4eWV
                                                            g$rhs$21345$1i4eWV)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$21344$1i4eWV)))
                                                            (list
                                                              g$lhs$21344$1i4eWV
                                                              g$rhs$21345$1i4eWV)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$21345$1i4eWV
                                                                '(t))))))
                                                       g$lhs*$21342$1i4eWV
                                                       g$rhs*$21343$1i4eWV)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$21340$1i4eWV
                                                         g$b*$21341$1i4eWV)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$21338$1i4eWV
                                           g$orhs*$21339$1i4eWV)))))
                                  (g$generate-temporaries$19887$1i4eWV
                                    g$olhs*$21338$1i4eWV)
                                  (g$generate-temporaries$19887$1i4eWV
                                    g$orhs*$21339$1i4eWV))))
                              g$ls/false$21337$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$21336$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$21336$1i4eWV
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$21332$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$21332$1i4eWV
               '(_ () any . each-any)))))
         g$e$21331$1i4eWV))))
   (g$foreign-call-transformer$19776$1i4eWV
     g$foreign-call-transformer$23372$1i4eWV
     (case-lambda
       ((g$e$21346$1i4eWV g$r$21347$1i4eWV g$mr$21348$1i4eWV)
        ((case-lambda
           ((g$t$21349$1i4eWV)
            ((case-lambda
               ((g$ls/false$21350$1i4eWV)
                (if g$ls/false$21350$1i4eWV
                  (apply
                    (case-lambda
                      ((g$name$21351$1i4eWV g$arg*$21352$1i4eWV)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$19796$1i4eWV
                             g$name$21351$1i4eWV
                             g$r$21347$1i4eWV
                             g$mr$21348$1i4eWV)
                           (g$chi-expr*$19794$1i4eWV
                             g$arg*$21352$1i4eWV
                             g$r$21347$1i4eWV
                             g$mr$21348$1i4eWV)))))
                    g$ls/false$21350$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$21349$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$21349$1i4eWV
               '(_ any . each-any)))))
         g$e$21346$1i4eWV))))
   (g$convert-pattern$19777$1i4eWV
     g$convert-pattern$23373$1i4eWV
     (case-lambda
       ((g$pattern$21353$1i4eWV g$keys$21354$1i4eWV)
        (letrec* ((g$cvt*$21355$1i4eWV
                    (case-lambda
                      ((g$p*$21435$1i4eWV
                         g$n$21436$1i4eWV
                         g$ids$21437$1i4eWV)
                       (if (null? g$p*$21435$1i4eWV)
                         (values '() g$ids$21437$1i4eWV)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$21355$1i4eWV
                                (cdr g$p*$21435$1i4eWV)
                                g$n$21436$1i4eWV
                                g$ids$21437$1i4eWV)))
                           (case-lambda
                             ((g$y$21440$1i4eWV g$ids$21441$1i4eWV)
                              ((case-lambda
                                 ((g$ids$21442$1i4eWV g$y$21443$1i4eWV)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$21356$1i4eWV
                                         (car g$p*$21435$1i4eWV)
                                         g$n$21436$1i4eWV
                                         g$ids$21442$1i4eWV)))
                                    (case-lambda
                                      ((g$x$21446$1i4eWV
                                         g$ids$21447$1i4eWV)
                                       ((case-lambda
                                          ((g$ids$21448$1i4eWV
                                             g$x$21449$1i4eWV)
                                           (values
                                             (cons
                                               g$x$21449$1i4eWV
                                               g$y$21443$1i4eWV)
                                             g$ids$21448$1i4eWV)))
                                        g$ids$21447$1i4eWV
                                        g$x$21446$1i4eWV))))))
                               g$ids$21441$1i4eWV
                               g$y$21440$1i4eWV))))))))
                  (g$cvt$21356$1i4eWV
                    (case-lambda
                      ((g$p$21357$1i4eWV
                         g$n$21358$1i4eWV
                         g$ids$21359$1i4eWV)
                       ((case-lambda
                          ((g$t$21360$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$21361$1i4eWV)
                               (if (if g$ls/false$21361$1i4eWV
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$21362$1i4eWV)
                                            (g$id?$19280$1i4eWV
                                              g$id$21362$1i4eWV)))
                                         g$ls/false$21361$1i4eWV))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$21363$1i4eWV)
                                      (if (g$bound-id-member?$19287$1i4eWV
                                            g$p$21357$1i4eWV
                                            g$keys$21354$1i4eWV)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$21357$1i4eWV)
                                          g$ids$21359$1i4eWV)
                                        (if (g$free-id=?$19284$1i4eWV
                                              g$p$21357$1i4eWV
                                              (g$scheme-stx$19721$1i4eWV
                                                '_))
                                          (values '_ g$ids$21359$1i4eWV)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$21357$1i4eWV
                                                g$n$21358$1i4eWV)
                                              g$ids$21359$1i4eWV))))))
                                   g$ls/false$21361$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21364$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$21365$1i4eWV)
                                         (if (if g$ls/false$21365$1i4eWV
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$21366$1i4eWV
                                                        g$dots$21367$1i4eWV)
                                                      (g$ellipsis?$19779$1i4eWV
                                                        g$dots$21367$1i4eWV)))
                                                   g$ls/false$21365$1i4eWV))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$21368$1i4eWV
                                                  g$dots$21369$1i4eWV)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$21356$1i4eWV
                                                       g$p$21368$1i4eWV
                                                       (+ g$n$21358$1i4eWV
                                                          '1)
                                                       g$ids$21359$1i4eWV)))
                                                  (case-lambda
                                                    ((g$p$21372$1i4eWV
                                                       g$ids$21373$1i4eWV)
                                                     ((case-lambda
                                                        ((g$ids$21374$1i4eWV
                                                           g$p$21375$1i4eWV)
                                                         (values
                                                           (if (eq? g$p$21375$1i4eWV
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$21375$1i4eWV))
                                                           g$ids$21374$1i4eWV)))
                                                      g$ids$21373$1i4eWV
                                                      g$p$21372$1i4eWV))))))
                                             g$ls/false$21365$1i4eWV)
                                           ((case-lambda
                                              ((g$t$21376$1i4eWV)
                                               ((case-lambda
                                                  ((g$ls/false$21377$1i4eWV)
                                                   (if (if g$ls/false$21377$1i4eWV
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$21378$1i4eWV
                                                                  g$dots$21379$1i4eWV
                                                                  g$ys$21380$1i4eWV
                                                                  g$z$21381$1i4eWV)
                                                                (g$ellipsis?$19779$1i4eWV
                                                                  g$dots$21379$1i4eWV)))
                                                             g$ls/false$21377$1i4eWV))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$21382$1i4eWV
                                                            g$dots$21383$1i4eWV
                                                            g$ys$21384$1i4eWV
                                                            g$z$21385$1i4eWV)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$21356$1i4eWV
                                                                 g$z$21385$1i4eWV
                                                                 g$n$21358$1i4eWV
                                                                 g$ids$21359$1i4eWV)))
                                                            (case-lambda
                                                              ((g$z$21388$1i4eWV
                                                                 g$ids$21389$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$ids$21390$1i4eWV
                                                                     g$z$21391$1i4eWV)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$21355$1i4eWV
                                                                          g$ys$21384$1i4eWV
                                                                          g$n$21358$1i4eWV
                                                                          g$ids$21390$1i4eWV)))
                                                                     (case-lambda
                                                                       ((g$ys$21394$1i4eWV
                                                                          g$ids$21395$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$ids$21396$1i4eWV
                                                                              g$ys$21397$1i4eWV)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$21356$1i4eWV
                                                                                   g$x$21382$1i4eWV
                                                                                   (+ g$n$21358$1i4eWV
                                                                                      '1)
                                                                                   g$ids$21396$1i4eWV)))
                                                                              (case-lambda
                                                                                ((g$x$21400$1i4eWV
                                                                                   g$ids$21401$1i4eWV)
                                                                                 ((case-lambda
                                                                                    ((g$ids$21402$1i4eWV
                                                                                       g$x$21403$1i4eWV)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$21403$1i4eWV
                                                                                         (g$reverse$12684$1i4eWV
                                                                                           g$ys$21397$1i4eWV)
                                                                                         g$z$21391$1i4eWV)
                                                                                       g$ids$21402$1i4eWV)))
                                                                                  g$ids$21401$1i4eWV
                                                                                  g$x$21400$1i4eWV))))))
                                                                         g$ids$21395$1i4eWV
                                                                         g$ys$21394$1i4eWV))))))
                                                                g$ids$21389$1i4eWV
                                                                g$z$21388$1i4eWV))))))
                                                       g$ls/false$21377$1i4eWV)
                                                     ((case-lambda
                                                        ((g$t$21404$1i4eWV)
                                                         ((case-lambda
                                                            ((g$ls/false$21405$1i4eWV)
                                                             (if g$ls/false$21405$1i4eWV
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$21406$1i4eWV
                                                                      g$y$21407$1i4eWV)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$21356$1i4eWV
                                                                           g$y$21407$1i4eWV
                                                                           g$n$21358$1i4eWV
                                                                           g$ids$21359$1i4eWV)))
                                                                      (case-lambda
                                                                        ((g$y$21410$1i4eWV
                                                                           g$ids$21411$1i4eWV)
                                                                         ((case-lambda
                                                                            ((g$ids$21412$1i4eWV
                                                                               g$y$21413$1i4eWV)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$21356$1i4eWV
                                                                                    g$x$21406$1i4eWV
                                                                                    g$n$21358$1i4eWV
                                                                                    g$ids$21412$1i4eWV)))
                                                                               (case-lambda
                                                                                 ((g$x$21416$1i4eWV
                                                                                    g$ids$21417$1i4eWV)
                                                                                  ((case-lambda
                                                                                     ((g$ids$21418$1i4eWV
                                                                                        g$x$21419$1i4eWV)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$21419$1i4eWV
                                                                                          g$y$21413$1i4eWV)
                                                                                        g$ids$21418$1i4eWV)))
                                                                                   g$ids$21417$1i4eWV
                                                                                   g$x$21416$1i4eWV))))))
                                                                          g$ids$21411$1i4eWV
                                                                          g$y$21410$1i4eWV))))))
                                                                 g$ls/false$21405$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$t$21420$1i4eWV)
                                                                   ((case-lambda
                                                                      ((g$ls/false$21421$1i4eWV)
                                                                       (if g$ls/false$21421$1i4eWV
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$21359$1i4eWV)))
                                                                           g$ls/false$21421$1i4eWV)
                                                                         ((case-lambda
                                                                            ((g$t$21422$1i4eWV)
                                                                             ((case-lambda
                                                                                ((g$ls/false$21423$1i4eWV)
                                                                                 (if (if g$ls/false$21423$1i4eWV
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$21424$1i4eWV)
                                                                                              (not (g$stx?$19252$1i4eWV
                                                                                                     g$p$21424$1i4eWV))))
                                                                                           g$ls/false$21423$1i4eWV))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$21425$1i4eWV)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$21356$1i4eWV
                                                                                               g$p$21425$1i4eWV
                                                                                               g$n$21358$1i4eWV
                                                                                               g$ids$21359$1i4eWV)))
                                                                                          (case-lambda
                                                                                            ((g$p$21428$1i4eWV
                                                                                               g$ids$21429$1i4eWV)
                                                                                             ((case-lambda
                                                                                                ((g$ids$21430$1i4eWV
                                                                                                   g$p$21431$1i4eWV)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$21431$1i4eWV)
                                                                                                   g$ids$21430$1i4eWV)))
                                                                                              g$ids$21429$1i4eWV
                                                                                              g$p$21428$1i4eWV))))))
                                                                                     g$ls/false$21423$1i4eWV)
                                                                                   ((case-lambda
                                                                                      ((g$t$21432$1i4eWV)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$21433$1i4eWV)
                                                                                           (if g$ls/false$21433$1i4eWV
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$21434$1i4eWV)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$19291$1i4eWV
                                                                                                        g$datum$21434$1i4eWV))
                                                                                                    g$ids$21359$1i4eWV)))
                                                                                               g$ls/false$21433$1i4eWV)
                                                                                             (g$syntax-violation$19897$1i4eWV
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$21432$1i4eWV))))
                                                                                        (g$syntax-dispatch$19778$1i4eWV
                                                                                          g$t$21432$1i4eWV
                                                                                          'any))))
                                                                                    g$t$21422$1i4eWV))))
                                                                              (g$syntax-dispatch$19778$1i4eWV
                                                                                g$t$21422$1i4eWV
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$21420$1i4eWV))))
                                                                    (g$syntax-dispatch$19778$1i4eWV
                                                                      g$t$21420$1i4eWV
                                                                      '()))))
                                                                g$t$21404$1i4eWV))))
                                                          (g$syntax-dispatch$19778$1i4eWV
                                                            g$t$21404$1i4eWV
                                                            '(any .
                                                                  any)))))
                                                      g$t$21376$1i4eWV))))
                                                (g$syntax-dispatch$19778$1i4eWV
                                                  g$t$21376$1i4eWV
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$21364$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$21364$1i4eWV
                                        '(any any)))))
                                  g$t$21360$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$21360$1i4eWV
                              'any))))
                        g$p$21357$1i4eWV)))))
          (g$cvt$21356$1i4eWV g$pattern$21353$1i4eWV '0 '())))))
   (g$syntax-dispatch$19778$1i4eWV
     g$syntax-dispatch$23374$1i4eWV
     (case-lambda
       ((g$e$21450$1i4eWV g$p$21451$1i4eWV)
        (letrec* ((g$stx^$21452$1i4eWV
                    (case-lambda
                      ((g$e$21560$1i4eWV
                         g$m*$21561$1i4eWV
                         g$s*$21562$1i4eWV
                         g$ae*$21563$1i4eWV)
                       (if (if (null? g$m*$21561$1i4eWV)
                             (if (null? g$s*$21562$1i4eWV)
                               (begin '#f (null? g$ae*$21563$1i4eWV))
                               '#f)
                             '#f)
                         g$e$21560$1i4eWV
                         (g$mkstx$19268$1i4eWV
                           g$e$21560$1i4eWV
                           g$m*$21561$1i4eWV
                           g$s*$21562$1i4eWV
                           g$ae*$21563$1i4eWV)))))
                  (g$match-each$21453$1i4eWV
                    (case-lambda
                      ((g$e$21544$1i4eWV
                         g$p$21545$1i4eWV
                         g$m*$21546$1i4eWV
                         g$s*$21547$1i4eWV
                         g$ae*$21548$1i4eWV)
                       (if (pair? g$e$21544$1i4eWV)
                         ((case-lambda
                            ((g$first$21549$1i4eWV)
                             (if g$first$21549$1i4eWV
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$21550$1i4eWV)
                                     (if g$rest$21550$1i4eWV
                                       (begin
                                         '#f
                                         (cons
                                           g$first$21549$1i4eWV
                                           g$rest$21550$1i4eWV))
                                       '#f)))
                                  (g$match-each$21453$1i4eWV
                                    (cdr g$e$21544$1i4eWV)
                                    g$p$21545$1i4eWV
                                    g$m*$21546$1i4eWV
                                    g$s*$21547$1i4eWV
                                    g$ae*$21548$1i4eWV)))
                               '#f)))
                          (g$match$21459$1i4eWV
                            (car g$e$21544$1i4eWV)
                            g$p$21545$1i4eWV
                            g$m*$21546$1i4eWV
                            g$s*$21547$1i4eWV
                            g$ae*$21548$1i4eWV
                            '()))
                         (if (null? g$e$21544$1i4eWV)
                           '()
                           (if (g$stx?$19252$1i4eWV g$e$21544$1i4eWV)
                             (if (not (g$top-marked?$19214$1i4eWV
                                        g$m*$21546$1i4eWV))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$19267$1i4eWV
                                        g$m*$21546$1i4eWV
                                        g$s*$21547$1i4eWV
                                        g$ae*$21548$1i4eWV
                                        g$e$21544$1i4eWV)))
                                   (case-lambda
                                     ((g$m*$21554$1i4eWV
                                        g$s*$21555$1i4eWV
                                        g$ae*$21556$1i4eWV)
                                      ((case-lambda
                                         ((g$ae*$21557$1i4eWV
                                            g$s*$21558$1i4eWV
                                            g$m*$21559$1i4eWV)
                                          (g$match-each$21453$1i4eWV
                                            (g$stx-expr$19254$1i4eWV
                                              g$e$21544$1i4eWV)
                                            g$p$21545$1i4eWV
                                            g$m*$21559$1i4eWV
                                            g$s*$21558$1i4eWV
                                            g$ae*$21557$1i4eWV)))
                                       g$ae*$21556$1i4eWV
                                       g$s*$21555$1i4eWV
                                       g$m*$21554$1i4eWV)))))
                               '#f)
                             (if (annotation? g$e$21544$1i4eWV)
                               (g$match-each$21453$1i4eWV
                                 (annotation-expression
                                   g$e$21544$1i4eWV)
                                 g$p$21545$1i4eWV
                                 g$m*$21546$1i4eWV
                                 g$s*$21547$1i4eWV
                                 g$ae*$21548$1i4eWV)
                               '#f)))))))
                  (g$match-each+$21454$1i4eWV
                    (case-lambda
                      ((g$e$21512$1i4eWV
                         g$x-pat$21513$1i4eWV
                         g$y-pat$21514$1i4eWV
                         g$z-pat$21515$1i4eWV
                         g$m*$21516$1i4eWV
                         g$s*$21517$1i4eWV
                         g$ae*$21518$1i4eWV
                         g$r$21519$1i4eWV)
                       ((letrec ((g$f$21520$1i4eWV
                                   (case-lambda
                                     ((g$e$21521$1i4eWV
                                        g$m*$21522$1i4eWV
                                        g$s*$21523$1i4eWV
                                        g$ae*$21524$1i4eWV)
                                      (if (pair? g$e$21521$1i4eWV)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$21520$1i4eWV
                                               (cdr g$e$21521$1i4eWV)
                                               g$m*$21522$1i4eWV
                                               g$s*$21523$1i4eWV
                                               g$ae*$21524$1i4eWV)))
                                          (case-lambda
                                            ((g$xr*$21528$1i4eWV
                                               g$y-pat$21529$1i4eWV
                                               g$r$21530$1i4eWV)
                                             ((case-lambda
                                                ((g$r$21531$1i4eWV
                                                   g$y-pat$21532$1i4eWV
                                                   g$xr*$21533$1i4eWV)
                                                 (if g$r$21531$1i4eWV
                                                   (if (null?
                                                         g$y-pat$21532$1i4eWV)
                                                     ((case-lambda
                                                        ((g$xr$21534$1i4eWV)
                                                         (if g$xr$21534$1i4eWV
                                                           (values
                                                             (cons
                                                               g$xr$21534$1i4eWV
                                                               g$xr*$21533$1i4eWV)
                                                             g$y-pat$21532$1i4eWV
                                                             g$r$21531$1i4eWV)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$21459$1i4eWV
                                                        (car g$e$21521$1i4eWV)
                                                        g$x-pat$21513$1i4eWV
                                                        g$m*$21522$1i4eWV
                                                        g$s*$21523$1i4eWV
                                                        g$ae*$21524$1i4eWV
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$21532$1i4eWV)
                                                       (g$match$21459$1i4eWV
                                                         (car g$e$21521$1i4eWV)
                                                         (car g$y-pat$21532$1i4eWV)
                                                         g$m*$21522$1i4eWV
                                                         g$s*$21523$1i4eWV
                                                         g$ae*$21524$1i4eWV
                                                         g$r$21531$1i4eWV)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$21530$1i4eWV
                                              g$y-pat$21529$1i4eWV
                                              g$xr*$21528$1i4eWV))))
                                        (if (g$stx?$19252$1i4eWV
                                              g$e$21521$1i4eWV)
                                          (if (g$top-marked?$19214$1i4eWV
                                                g$m*$21522$1i4eWV)
                                            (values
                                              '()
                                              g$y-pat$21514$1i4eWV
                                              (g$match$21459$1i4eWV
                                                g$e$21521$1i4eWV
                                                g$z-pat$21515$1i4eWV
                                                g$m*$21522$1i4eWV
                                                g$s*$21523$1i4eWV
                                                g$ae*$21524$1i4eWV
                                                g$r$21519$1i4eWV))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$19267$1i4eWV
                                                   g$m*$21522$1i4eWV
                                                   g$s*$21523$1i4eWV
                                                   g$ae*$21524$1i4eWV
                                                   g$e$21521$1i4eWV)))
                                              (case-lambda
                                                ((g$m*$21538$1i4eWV
                                                   g$s*$21539$1i4eWV
                                                   g$ae*$21540$1i4eWV)
                                                 ((case-lambda
                                                    ((g$ae*$21541$1i4eWV
                                                       g$s*$21542$1i4eWV
                                                       g$m*$21543$1i4eWV)
                                                     (g$f$21520$1i4eWV
                                                       (g$stx-expr$19254$1i4eWV
                                                         g$e$21521$1i4eWV)
                                                       g$m*$21543$1i4eWV
                                                       g$s*$21542$1i4eWV
                                                       g$ae*$21541$1i4eWV)))
                                                  g$ae*$21540$1i4eWV
                                                  g$s*$21539$1i4eWV
                                                  g$m*$21538$1i4eWV)))))
                                          (if (annotation?
                                                g$e$21521$1i4eWV)
                                            (g$f$21520$1i4eWV
                                              (annotation-expression
                                                g$e$21521$1i4eWV)
                                              g$m*$21522$1i4eWV
                                              g$s*$21523$1i4eWV
                                              g$ae*$21524$1i4eWV)
                                            (values
                                              '()
                                              g$y-pat$21514$1i4eWV
                                              (g$match$21459$1i4eWV
                                                g$e$21521$1i4eWV
                                                g$z-pat$21515$1i4eWV
                                                g$m*$21522$1i4eWV
                                                g$s*$21523$1i4eWV
                                                g$ae*$21524$1i4eWV
                                                g$r$21519$1i4eWV)))))))))
                          g$f$21520$1i4eWV)
                        g$e$21512$1i4eWV
                        g$m*$21516$1i4eWV
                        g$s*$21517$1i4eWV
                        g$ae*$21518$1i4eWV))))
                  (g$match-each-any$21455$1i4eWV
                    (case-lambda
                      ((g$e$21498$1i4eWV
                         g$m*$21499$1i4eWV
                         g$s*$21500$1i4eWV
                         g$ae*$21501$1i4eWV)
                       (if (pair? g$e$21498$1i4eWV)
                         ((case-lambda
                            ((g$l$21502$1i4eWV)
                             (if g$l$21502$1i4eWV
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$21452$1i4eWV
                                     (car g$e$21498$1i4eWV)
                                     g$m*$21499$1i4eWV
                                     g$s*$21500$1i4eWV
                                     g$ae*$21501$1i4eWV)
                                   g$l$21502$1i4eWV))
                               '#f)))
                          (g$match-each-any$21455$1i4eWV
                            (cdr g$e$21498$1i4eWV)
                            g$m*$21499$1i4eWV
                            g$s*$21500$1i4eWV
                            g$ae*$21501$1i4eWV))
                         (if (null? g$e$21498$1i4eWV)
                           '()
                           (if (g$stx?$19252$1i4eWV g$e$21498$1i4eWV)
                             (if (not (g$top-marked?$19214$1i4eWV
                                        g$m*$21499$1i4eWV))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$19267$1i4eWV
                                        g$m*$21499$1i4eWV
                                        g$s*$21500$1i4eWV
                                        g$ae*$21501$1i4eWV
                                        g$e$21498$1i4eWV)))
                                   (case-lambda
                                     ((g$m*$21506$1i4eWV
                                        g$s*$21507$1i4eWV
                                        g$ae*$21508$1i4eWV)
                                      ((case-lambda
                                         ((g$ae*$21509$1i4eWV
                                            g$s*$21510$1i4eWV
                                            g$m*$21511$1i4eWV)
                                          (g$match-each-any$21455$1i4eWV
                                            (g$stx-expr$19254$1i4eWV
                                              g$e$21498$1i4eWV)
                                            g$m*$21511$1i4eWV
                                            g$s*$21510$1i4eWV
                                            g$ae*$21509$1i4eWV)))
                                       g$ae*$21508$1i4eWV
                                       g$s*$21507$1i4eWV
                                       g$m*$21506$1i4eWV)))))
                               '#f)
                             (if (annotation? g$e$21498$1i4eWV)
                               (g$match-each-any$21455$1i4eWV
                                 (annotation-expression
                                   g$e$21498$1i4eWV)
                                 g$m*$21499$1i4eWV
                                 g$s*$21500$1i4eWV
                                 g$ae*$21501$1i4eWV)
                               '#f)))))))
                  (g$match-empty$21456$1i4eWV
                    (case-lambda
                      ((g$p$21495$1i4eWV g$r$21496$1i4eWV)
                       (if (null? g$p$21495$1i4eWV)
                         g$r$21496$1i4eWV
                         (if (eq? g$p$21495$1i4eWV '_)
                           g$r$21496$1i4eWV
                           (if (eq? g$p$21495$1i4eWV 'any)
                             (cons '() g$r$21496$1i4eWV)
                             (if (pair? g$p$21495$1i4eWV)
                               (g$match-empty$21456$1i4eWV
                                 (car g$p$21495$1i4eWV)
                                 (g$match-empty$21456$1i4eWV
                                   (cdr g$p$21495$1i4eWV)
                                   g$r$21496$1i4eWV))
                               (if (eq? g$p$21495$1i4eWV 'each-any)
                                 (cons '() g$r$21496$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21497$1i4eWV)
                                     (if (eqv? g$t$21497$1i4eWV 'each)
                                       (g$match-empty$21456$1i4eWV
                                         (g$vector-ref$12680$1i4eWV
                                           g$p$21495$1i4eWV
                                           '1)
                                         g$r$21496$1i4eWV)
                                       (if (eqv?
                                             g$t$21497$1i4eWV
                                             'each+)
                                         (g$match-empty$21456$1i4eWV
                                           (g$vector-ref$12680$1i4eWV
                                             g$p$21495$1i4eWV
                                             '1)
                                           (g$match-empty$21456$1i4eWV
                                             (g$reverse$12684$1i4eWV
                                               (g$vector-ref$12680$1i4eWV
                                                 g$p$21495$1i4eWV
                                                 '2))
                                             (g$match-empty$21456$1i4eWV
                                               (g$vector-ref$12680$1i4eWV
                                                 g$p$21495$1i4eWV
                                                 '3)
                                               g$r$21496$1i4eWV)))
                                         (if (g$memv$11828$1i4eWV
                                               g$t$21497$1i4eWV
                                               '(free-id atom))
                                           g$r$21496$1i4eWV
                                           (if (g$memv$11828$1i4eWV
                                                 g$t$21497$1i4eWV
                                                 '(scheme-id atom))
                                             g$r$21496$1i4eWV
                                             (if (eqv?
                                                   g$t$21497$1i4eWV
                                                   'vector)
                                               (g$match-empty$21456$1i4eWV
                                                 (g$vector-ref$12680$1i4eWV
                                                   g$p$21495$1i4eWV
                                                   '1)
                                                 g$r$21496$1i4eWV)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$21495$1i4eWV))))))))
                                  (g$vector-ref$12680$1i4eWV
                                    g$p$21495$1i4eWV
                                    '0))))))))))
                  (g$combine$21457$1i4eWV
                    (case-lambda
                      ((g$r*$21493$1i4eWV g$r$21494$1i4eWV)
                       (if (null? (car g$r*$21493$1i4eWV))
                         g$r$21494$1i4eWV
                         (cons
                           (g$map$11835$1i4eWV car g$r*$21493$1i4eWV)
                           (g$combine$21457$1i4eWV
                             (g$map$11835$1i4eWV cdr g$r*$21493$1i4eWV)
                             g$r$21494$1i4eWV))))))
                  (g$match*$21458$1i4eWV
                    (case-lambda
                      ((g$e$21475$1i4eWV
                         g$p$21476$1i4eWV
                         g$m*$21477$1i4eWV
                         g$s*$21478$1i4eWV
                         g$ae*$21479$1i4eWV
                         g$r$21480$1i4eWV)
                       (if (null? g$p$21476$1i4eWV)
                         (if (null? g$e$21475$1i4eWV)
                           (begin '#f g$r$21480$1i4eWV)
                           '#f)
                         (if (pair? g$p$21476$1i4eWV)
                           (if (pair? g$e$21475$1i4eWV)
                             (begin
                               '#f
                               (g$match$21459$1i4eWV
                                 (car g$e$21475$1i4eWV)
                                 (car g$p$21476$1i4eWV)
                                 g$m*$21477$1i4eWV
                                 g$s*$21478$1i4eWV
                                 g$ae*$21479$1i4eWV
                                 (g$match$21459$1i4eWV
                                   (cdr g$e$21475$1i4eWV)
                                   (cdr g$p$21476$1i4eWV)
                                   g$m*$21477$1i4eWV
                                   g$s*$21478$1i4eWV
                                   g$ae*$21479$1i4eWV
                                   g$r$21480$1i4eWV)))
                             '#f)
                           (if (eq? g$p$21476$1i4eWV 'each-any)
                             ((case-lambda
                                ((g$l$21481$1i4eWV)
                                 (if g$l$21481$1i4eWV
                                   (begin
                                     '#f
                                     (cons
                                       g$l$21481$1i4eWV
                                       g$r$21480$1i4eWV))
                                   '#f)))
                              (g$match-each-any$21455$1i4eWV
                                g$e$21475$1i4eWV
                                g$m*$21477$1i4eWV
                                g$s*$21478$1i4eWV
                                g$ae*$21479$1i4eWV))
                             ((case-lambda
                                ((g$t$21482$1i4eWV)
                                 (if (eqv? g$t$21482$1i4eWV 'each)
                                   (if (null? g$e$21475$1i4eWV)
                                     (g$match-empty$21456$1i4eWV
                                       (g$vector-ref$12680$1i4eWV
                                         g$p$21476$1i4eWV
                                         '1)
                                       g$r$21480$1i4eWV)
                                     ((case-lambda
                                        ((g$r*$21483$1i4eWV)
                                         (if g$r*$21483$1i4eWV
                                           (begin
                                             '#f
                                             (g$combine$21457$1i4eWV
                                               g$r*$21483$1i4eWV
                                               g$r$21480$1i4eWV))
                                           '#f)))
                                      (g$match-each$21453$1i4eWV
                                        g$e$21475$1i4eWV
                                        (g$vector-ref$12680$1i4eWV
                                          g$p$21476$1i4eWV
                                          '1)
                                        g$m*$21477$1i4eWV
                                        g$s*$21478$1i4eWV
                                        g$ae*$21479$1i4eWV)))
                                   (if (eqv? g$t$21482$1i4eWV 'free-id)
                                     (if (g$symbol?$12668$1i4eWV
                                           g$e$21475$1i4eWV)
                                       (if (g$top-marked?$19214$1i4eWV
                                             g$m*$21477$1i4eWV)
                                         (if (g$free-id=?$19284$1i4eWV
                                               (g$stx^$21452$1i4eWV
                                                 g$e$21475$1i4eWV
                                                 g$m*$21477$1i4eWV
                                                 g$s*$21478$1i4eWV
                                                 g$ae*$21479$1i4eWV)
                                               (g$vector-ref$12680$1i4eWV
                                                 g$p$21476$1i4eWV
                                                 '1))
                                           (begin '#f g$r$21480$1i4eWV)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (eqv?
                                           g$t$21482$1i4eWV
                                           'scheme-id)
                                       (if (g$symbol?$12668$1i4eWV
                                             g$e$21475$1i4eWV)
                                         (if (g$top-marked?$19214$1i4eWV
                                               g$m*$21477$1i4eWV)
                                           (if (g$free-id=?$19284$1i4eWV
                                                 (g$stx^$21452$1i4eWV
                                                   g$e$21475$1i4eWV
                                                   g$m*$21477$1i4eWV
                                                   g$s*$21478$1i4eWV
                                                   g$ae*$21479$1i4eWV)
                                                 (g$scheme-stx$19721$1i4eWV
                                                   (g$vector-ref$12680$1i4eWV
                                                     g$p$21476$1i4eWV
                                                     '1)))
                                             (begin
                                               '#f
                                               g$r$21480$1i4eWV)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv?
                                             g$t$21482$1i4eWV
                                             'each+)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$21454$1i4eWV
                                                g$e$21475$1i4eWV
                                                (g$vector-ref$12680$1i4eWV
                                                  g$p$21476$1i4eWV
                                                  '1)
                                                (g$vector-ref$12680$1i4eWV
                                                  g$p$21476$1i4eWV
                                                  '2)
                                                (g$vector-ref$12680$1i4eWV
                                                  g$p$21476$1i4eWV
                                                  '3)
                                                g$m*$21477$1i4eWV
                                                g$s*$21478$1i4eWV
                                                g$ae*$21479$1i4eWV
                                                g$r$21480$1i4eWV)))
                                           (case-lambda
                                             ((g$xr*$21487$1i4eWV
                                                g$y-pat$21488$1i4eWV
                                                g$r$21489$1i4eWV)
                                              ((case-lambda
                                                 ((g$r$21490$1i4eWV
                                                    g$y-pat$21491$1i4eWV
                                                    g$xr*$21492$1i4eWV)
                                                  (if g$r$21490$1i4eWV
                                                    (if (null?
                                                          g$y-pat$21491$1i4eWV)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$21492$1i4eWV)
                                                          (g$match-empty$21456$1i4eWV
                                                            (g$vector-ref$12680$1i4eWV
                                                              g$p$21476$1i4eWV
                                                              '1)
                                                            g$r$21490$1i4eWV)
                                                          (g$combine$21457$1i4eWV
                                                            g$xr*$21492$1i4eWV
                                                            g$r$21490$1i4eWV)))
                                                      '#f)
                                                    '#f)))
                                               g$r$21489$1i4eWV
                                               g$y-pat$21488$1i4eWV
                                               g$xr*$21487$1i4eWV))))
                                         (if (eqv?
                                               g$t$21482$1i4eWV
                                               'atom)
                                           (if (equal?
                                                 (g$vector-ref$12680$1i4eWV
                                                   g$p$21476$1i4eWV
                                                   '1)
                                                 (g$strip$19290$1i4eWV
                                                   g$e$21475$1i4eWV
                                                   g$m*$21477$1i4eWV))
                                             (begin
                                               '#f
                                               g$r$21480$1i4eWV)
                                             '#f)
                                           (if (eqv?
                                                 g$t$21482$1i4eWV
                                                 'vector)
                                             (if (g$vector?$12666$1i4eWV
                                                   g$e$21475$1i4eWV)
                                               (begin
                                                 '#f
                                                 (g$match$21459$1i4eWV
                                                   (vector->list
                                                     g$e$21475$1i4eWV)
                                                   (g$vector-ref$12680$1i4eWV
                                                     g$p$21476$1i4eWV
                                                     '1)
                                                   g$m*$21477$1i4eWV
                                                   g$s*$21478$1i4eWV
                                                   g$ae*$21479$1i4eWV
                                                   g$r$21480$1i4eWV))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$21476$1i4eWV)))))))))
                              (g$vector-ref$12680$1i4eWV
                                g$p$21476$1i4eWV
                                '0))))))))
                  (g$match$21459$1i4eWV
                    (case-lambda
                      ((g$e$21460$1i4eWV
                         g$p$21461$1i4eWV
                         g$m*$21462$1i4eWV
                         g$s*$21463$1i4eWV
                         g$ae*$21464$1i4eWV
                         g$r$21465$1i4eWV)
                       (if (not g$r$21465$1i4eWV)
                         '#f
                         (if (eq? g$p$21461$1i4eWV '_)
                           g$r$21465$1i4eWV
                           (if (eq? g$p$21461$1i4eWV 'any)
                             (cons
                               (g$stx^$21452$1i4eWV
                                 g$e$21460$1i4eWV
                                 g$m*$21462$1i4eWV
                                 g$s*$21463$1i4eWV
                                 g$ae*$21464$1i4eWV)
                               g$r$21465$1i4eWV)
                             (if (g$stx?$19252$1i4eWV g$e$21460$1i4eWV)
                               (if (not (g$top-marked?$19214$1i4eWV
                                          g$m*$21462$1i4eWV))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$19267$1i4eWV
                                          g$m*$21462$1i4eWV
                                          g$s*$21463$1i4eWV
                                          g$ae*$21464$1i4eWV
                                          g$e$21460$1i4eWV)))
                                     (case-lambda
                                       ((g$m*$21469$1i4eWV
                                          g$s*$21470$1i4eWV
                                          g$ae*$21471$1i4eWV)
                                        ((case-lambda
                                           ((g$ae*$21472$1i4eWV
                                              g$s*$21473$1i4eWV
                                              g$m*$21474$1i4eWV)
                                            (g$match$21459$1i4eWV
                                              (g$stx-expr$19254$1i4eWV
                                                g$e$21460$1i4eWV)
                                              g$p$21461$1i4eWV
                                              g$m*$21474$1i4eWV
                                              g$s*$21473$1i4eWV
                                              g$ae*$21472$1i4eWV
                                              g$r$21465$1i4eWV)))
                                         g$ae*$21471$1i4eWV
                                         g$s*$21470$1i4eWV
                                         g$m*$21469$1i4eWV)))))
                                 '#f)
                               (if (annotation? g$e$21460$1i4eWV)
                                 (g$match$21459$1i4eWV
                                   (annotation-expression
                                     g$e$21460$1i4eWV)
                                   g$p$21461$1i4eWV
                                   g$m*$21462$1i4eWV
                                   g$s*$21463$1i4eWV
                                   g$ae*$21464$1i4eWV
                                   g$r$21465$1i4eWV)
                                 (g$match*$21458$1i4eWV
                                   g$e$21460$1i4eWV
                                   g$p$21461$1i4eWV
                                   g$m*$21462$1i4eWV
                                   g$s*$21463$1i4eWV
                                   g$ae*$21464$1i4eWV
                                   g$r$21465$1i4eWV))))))))))
          (g$match$21459$1i4eWV
            g$e$21450$1i4eWV
            g$p$21451$1i4eWV
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$19779$1i4eWV
     g$ellipsis?$23375$1i4eWV
     (case-lambda
       ((g$x$21564$1i4eWV)
        (if (g$id?$19280$1i4eWV g$x$21564$1i4eWV)
          (begin
            '#f
            (g$free-id=?$19284$1i4eWV
              g$x$21564$1i4eWV
              (g$scheme-stx$19721$1i4eWV '...)))
          '#f))))
   (g$underscore?$19780$1i4eWV
     g$underscore?$23376$1i4eWV
     (case-lambda
       ((g$x$21565$1i4eWV)
        (if (g$id?$19280$1i4eWV g$x$21565$1i4eWV)
          (begin
            '#f
            (g$free-id=?$19284$1i4eWV
              g$x$21565$1i4eWV
              (g$scheme-stx$19721$1i4eWV '_)))
          '#f))))
   (g$verify-literals$19781$1i4eWV
     g$verify-literals$23377$1i4eWV
     (case-lambda
       ((g$lits$21566$1i4eWV g$expr$21567$1i4eWV)
        (g$for-each$11836$1i4eWV
          (case-lambda
            ((g$x$21568$1i4eWV)
             (if ((case-lambda
                    ((g$t$21569$1i4eWV)
                     (if g$t$21569$1i4eWV
                       g$t$21569$1i4eWV
                       ((case-lambda
                          ((g$t$21570$1i4eWV)
                           (if g$t$21570$1i4eWV
                             g$t$21570$1i4eWV
                             (begin
                               '#f
                               (g$underscore?$19780$1i4eWV
                                 g$x$21568$1i4eWV)))))
                        (g$ellipsis?$19779$1i4eWV g$x$21568$1i4eWV)))))
                  (not (g$id?$19280$1i4eWV g$x$21568$1i4eWV)))
               (g$syntax-violation$19897$1i4eWV
                 '#f
                 '"invalid literal"
                 g$expr$21567$1i4eWV
                 g$x$21568$1i4eWV)
               (void))))
          g$lits$21566$1i4eWV))))
   (g$syntax-case-transformer$19782$1i4eWV
     g$syntax-case-transformer$23378$1i4eWV
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$21571$1i4eWV
                     (case-lambda
                       ((g$pvars$21628$1i4eWV
                          g$expr$21629$1i4eWV
                          g$y$21630$1i4eWV
                          g$r$21631$1i4eWV
                          g$mr$21632$1i4eWV)
                        ((case-lambda
                           ((g$ids$21633$1i4eWV g$levels$21634$1i4eWV)
                            ((case-lambda
                               ((g$labels$21635$1i4eWV
                                  g$new-vars$21636$1i4eWV)
                                ((case-lambda
                                   ((g$body$21637$1i4eWV)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$19202$1i4eWV
                                        '#f
                                        g$new-vars$21636$1i4eWV
                                        g$body$21637$1i4eWV)
                                      g$y$21630$1i4eWV)))
                                 (g$chi-expr$19796$1i4eWV
                                   (g$add-subst$19270$1i4eWV
                                     (g$make-full-rib$19246$1i4eWV
                                       g$ids$21633$1i4eWV
                                       g$labels$21635$1i4eWV)
                                     g$expr$21629$1i4eWV)
                                   (append
                                     (g$map$11835$1i4eWV
                                       (case-lambda
                                         ((g$label$21638$1i4eWV
                                            g$var$21639$1i4eWV
                                            g$level$21640$1i4eWV)
                                          (cons
                                            g$label$21638$1i4eWV
                                            (g$make-binding$19296$1i4eWV
                                              'syntax
                                              (cons
                                                g$var$21639$1i4eWV
                                                g$level$21640$1i4eWV)))))
                                       g$labels$21635$1i4eWV
                                       g$new-vars$21636$1i4eWV
                                       (g$map$11835$1i4eWV
                                         cdr
                                         g$pvars$21628$1i4eWV))
                                     g$r$21631$1i4eWV)
                                   g$mr$21632$1i4eWV))))
                             (g$map$11835$1i4eWV
                               g$gen-label$19217$1i4eWV
                               g$ids$21633$1i4eWV)
                             (g$map$11835$1i4eWV
                               g$gen-lexical$19215$1i4eWV
                               g$ids$21633$1i4eWV))))
                         (g$map$11835$1i4eWV car g$pvars$21628$1i4eWV)
                         (g$map$11835$1i4eWV
                           cdr
                           g$pvars$21628$1i4eWV)))))
                   (g$invalid-ids-error$21572$1i4eWV
                     (case-lambda
                       ((g$id*$21622$1i4eWV
                          g$e$21623$1i4eWV
                          g$class$21624$1i4eWV)
                        ((letrec ((g$find$21625$1i4eWV
                                    (case-lambda
                                      ((g$id*$21626$1i4eWV
                                         g$ok*$21627$1i4eWV)
                                       (if (null? g$id*$21626$1i4eWV)
                                         (g$syntax-violation$19897$1i4eWV
                                           '#f
                                           '"invalid syntax"
                                           g$e$21623$1i4eWV)
                                         (if (g$id?$19280$1i4eWV
                                               (car g$id*$21626$1i4eWV))
                                           (if (g$bound-id-member?$19287$1i4eWV
                                                 (car g$id*$21626$1i4eWV)
                                                 g$ok*$21627$1i4eWV)
                                             (g$syntax-error$19894$1i4eWV
                                               (car g$id*$21626$1i4eWV)
                                               '"duplicate "
                                               g$class$21624$1i4eWV)
                                             (g$find$21625$1i4eWV
                                               (cdr g$id*$21626$1i4eWV)
                                               (cons
                                                 (car g$id*$21626$1i4eWV)
                                                 g$ok*$21627$1i4eWV)))
                                           (g$syntax-error$19894$1i4eWV
                                             (car g$id*$21626$1i4eWV)
                                             '"invalid "
                                             g$class$21624$1i4eWV)))))))
                           g$find$21625$1i4eWV)
                         g$id*$21622$1i4eWV
                         '()))))
                   (g$gen-clause$21573$1i4eWV
                     (case-lambda
                       ((g$x$21602$1i4eWV
                          g$keys$21603$1i4eWV
                          g$clauses$21604$1i4eWV
                          g$r$21605$1i4eWV
                          g$mr$21606$1i4eWV
                          g$pat$21607$1i4eWV
                          g$fender$21608$1i4eWV
                          g$expr$21609$1i4eWV)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$19777$1i4eWV
                               g$pat$21607$1i4eWV
                               g$keys$21603$1i4eWV)))
                          (case-lambda
                            ((g$p$21612$1i4eWV g$pvars$21613$1i4eWV)
                             ((case-lambda
                                ((g$pvars$21614$1i4eWV g$p$21615$1i4eWV)
                                 (if (not (g$distinct-bound-ids?$19286$1i4eWV
                                            (g$map$11835$1i4eWV
                                              car
                                              g$pvars$21614$1i4eWV)))
                                   (g$invalid-ids-error$21572$1i4eWV
                                     (g$map$11835$1i4eWV
                                       car
                                       g$pvars$21614$1i4eWV)
                                     g$pat$21607$1i4eWV
                                     '"pattern variable")
                                   (if (not (g$for-all$11833$1i4eWV
                                              (case-lambda
                                                ((g$x$21616$1i4eWV)
                                                 (not (g$ellipsis?$19779$1i4eWV
                                                        (car g$x$21616$1i4eWV)))))
                                              g$pvars$21614$1i4eWV))
                                     (g$syntax-violation$19897$1i4eWV
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$21607$1i4eWV)
                                     ((case-lambda
                                        ((g$y$21617$1i4eWV)
                                         ((case-lambda
                                            ((g$test$21618$1i4eWV)
                                             ((case-lambda
                                                ((g$conseq$21619$1i4eWV)
                                                 ((case-lambda
                                                    ((g$altern$21620$1i4eWV)
                                                     (list
                                                       (g$build-lambda$19202$1i4eWV
                                                         '#f
                                                         (list
                                                           g$y$21617$1i4eWV)
                                                         (list
                                                           'if
                                                           g$test$21618$1i4eWV
                                                           g$conseq$21619$1i4eWV
                                                           g$altern$21620$1i4eWV))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$21602$1i4eWV
                                                         (list
                                                           'quote
                                                           g$p$21615$1i4eWV)))))
                                                  (g$gen-syntax-case$21574$1i4eWV
                                                    g$x$21602$1i4eWV
                                                    g$keys$21603$1i4eWV
                                                    g$clauses$21604$1i4eWV
                                                    g$r$21605$1i4eWV
                                                    g$mr$21606$1i4eWV))))
                                              (g$build-dispatch-call$21571$1i4eWV
                                                g$pvars$21614$1i4eWV
                                                g$expr$21609$1i4eWV
                                                g$y$21617$1i4eWV
                                                g$r$21605$1i4eWV
                                                g$mr$21606$1i4eWV))))
                                          (if (eq? g$fender$21608$1i4eWV
                                                   '#t)
                                            g$y$21617$1i4eWV
                                            ((case-lambda
                                               ((g$call$21621$1i4eWV)
                                                (list
                                                  'if
                                                  g$y$21617$1i4eWV
                                                  g$call$21621$1i4eWV
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$21571$1i4eWV
                                               g$pvars$21614$1i4eWV
                                               g$fender$21608$1i4eWV
                                               g$y$21617$1i4eWV
                                               g$r$21605$1i4eWV
                                               g$mr$21606$1i4eWV))))))
                                      (g$gen-lexical$19215$1i4eWV
                                        'tmp))))))
                              g$pvars$21613$1i4eWV
                              g$p$21612$1i4eWV)))))))
                   (g$gen-syntax-case$21574$1i4eWV
                     (case-lambda
                       ((g$x$21585$1i4eWV
                          g$keys$21586$1i4eWV
                          g$clauses$21587$1i4eWV
                          g$r$21588$1i4eWV
                          g$mr$21589$1i4eWV)
                        (if (null? g$clauses$21587$1i4eWV)
                          (list
                            '(primitive syntax-error)
                            g$x$21585$1i4eWV)
                          ((case-lambda
                             ((g$t$21590$1i4eWV)
                              ((case-lambda
                                 ((g$ls/false$21591$1i4eWV)
                                  (if g$ls/false$21591$1i4eWV
                                    (apply
                                      (case-lambda
                                        ((g$pat$21592$1i4eWV
                                           g$expr$21593$1i4eWV)
                                         (if (if (g$id?$19280$1i4eWV
                                                   g$pat$21592$1i4eWV)
                                               (if (not (g$bound-id-member?$19287$1i4eWV
                                                          g$pat$21592$1i4eWV
                                                          g$keys$21586$1i4eWV))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$19779$1i4eWV
                                                          g$pat$21592$1i4eWV)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$19284$1i4eWV
                                                 g$pat$21592$1i4eWV
                                                 (g$scheme-stx$19721$1i4eWV
                                                   '_))
                                             (g$chi-expr$19796$1i4eWV
                                               g$expr$21593$1i4eWV
                                               g$r$21588$1i4eWV
                                               g$mr$21589$1i4eWV)
                                             ((case-lambda
                                                ((g$lab$21594$1i4eWV
                                                   g$lex$21595$1i4eWV)
                                                 ((case-lambda
                                                    ((g$body$21596$1i4eWV)
                                                     (list
                                                       (g$build-lambda$19202$1i4eWV
                                                         '#f
                                                         (list
                                                           g$lex$21595$1i4eWV)
                                                         g$body$21596$1i4eWV)
                                                       g$x$21585$1i4eWV)))
                                                  (g$chi-expr$19796$1i4eWV
                                                    (g$add-subst$19270$1i4eWV
                                                      (g$make-full-rib$19246$1i4eWV
                                                        (list
                                                          g$pat$21592$1i4eWV)
                                                        (list
                                                          g$lab$21594$1i4eWV))
                                                      g$expr$21593$1i4eWV)
                                                    (cons
                                                      (cons
                                                        g$lab$21594$1i4eWV
                                                        (g$make-binding$19296$1i4eWV
                                                          'syntax
                                                          (cons
                                                            g$lex$21595$1i4eWV
                                                            '0)))
                                                      g$r$21588$1i4eWV)
                                                    g$mr$21589$1i4eWV))))
                                              (g$gen-label$19217$1i4eWV
                                                g$pat$21592$1i4eWV)
                                              (g$gen-lexical$19215$1i4eWV
                                                g$pat$21592$1i4eWV)))
                                           (g$gen-clause$21573$1i4eWV
                                             g$x$21585$1i4eWV
                                             g$keys$21586$1i4eWV
                                             (cdr g$clauses$21587$1i4eWV)
                                             g$r$21588$1i4eWV
                                             g$mr$21589$1i4eWV
                                             g$pat$21592$1i4eWV
                                             '#t
                                             g$expr$21593$1i4eWV))))
                                      g$ls/false$21591$1i4eWV)
                                    ((case-lambda
                                       ((g$t$21597$1i4eWV)
                                        ((case-lambda
                                           ((g$ls/false$21598$1i4eWV)
                                            (if g$ls/false$21598$1i4eWV
                                              (apply
                                                (case-lambda
                                                  ((g$pat$21599$1i4eWV
                                                     g$fender$21600$1i4eWV
                                                     g$expr$21601$1i4eWV)
                                                   (g$gen-clause$21573$1i4eWV
                                                     g$x$21585$1i4eWV
                                                     g$keys$21586$1i4eWV
                                                     (cdr g$clauses$21587$1i4eWV)
                                                     g$r$21588$1i4eWV
                                                     g$mr$21589$1i4eWV
                                                     g$pat$21599$1i4eWV
                                                     g$fender$21600$1i4eWV
                                                     g$expr$21601$1i4eWV)))
                                                g$ls/false$21598$1i4eWV)
                                              (g$syntax-violation$19897$1i4eWV
                                                '#f
                                                '"invalid syntax"
                                                g$t$21597$1i4eWV))))
                                         (g$syntax-dispatch$19778$1i4eWV
                                           g$t$21597$1i4eWV
                                           '(any any any)))))
                                     g$t$21590$1i4eWV))))
                               (g$syntax-dispatch$19778$1i4eWV
                                 g$t$21590$1i4eWV
                                 '(any any)))))
                           (car g$clauses$21587$1i4eWV)))))))
           (case-lambda
             ((g$e$21575$1i4eWV g$r$21576$1i4eWV g$mr$21577$1i4eWV)
              ((case-lambda
                 ((g$t$21578$1i4eWV)
                  ((case-lambda
                     ((g$ls/false$21579$1i4eWV)
                      (if g$ls/false$21579$1i4eWV
                        (apply
                          (case-lambda
                            ((g$expr$21580$1i4eWV
                               g$keys$21581$1i4eWV
                               g$clauses$21582$1i4eWV)
                             (begin
                               (g$verify-literals$19781$1i4eWV
                                 g$keys$21581$1i4eWV
                                 g$e$21575$1i4eWV)
                               ((case-lambda
                                  ((g$x$21583$1i4eWV)
                                   ((case-lambda
                                      ((g$body$21584$1i4eWV)
                                       (list
                                         (g$build-lambda$19202$1i4eWV
                                           '#f
                                           (list g$x$21583$1i4eWV)
                                           g$body$21584$1i4eWV)
                                         (g$chi-expr$19796$1i4eWV
                                           g$expr$21580$1i4eWV
                                           g$r$21576$1i4eWV
                                           g$mr$21577$1i4eWV))))
                                    (g$gen-syntax-case$21574$1i4eWV
                                      g$x$21583$1i4eWV
                                      g$keys$21581$1i4eWV
                                      g$clauses$21582$1i4eWV
                                      g$r$21576$1i4eWV
                                      g$mr$21577$1i4eWV))))
                                (g$gen-lexical$19215$1i4eWV 'tmp)))))
                          g$ls/false$21579$1i4eWV)
                        (g$syntax-violation$19897$1i4eWV
                          '#f
                          '"invalid syntax"
                          g$t$21578$1i4eWV))))
                   (g$syntax-dispatch$19778$1i4eWV
                     g$t$21578$1i4eWV
                     '(_ any each-any . each-any)))))
               g$e$21575$1i4eWV))))))))
   (g$ellipsis-map$19783$1i4eWV
     g$ellipsis-map$23379$1i4eWV
     (case-lambda
       ((g$proc$21641$1i4eWV g$ls$21642$1i4eWV . g$ls*$21643$1i4eWV)
        (letrec* ((g$who$21644$1i4eWV '...))
          (begin
            (if (not (list? g$ls$21642$1i4eWV))
              (assertion-violation
                g$who$21644$1i4eWV
                '"not a list"
                g$ls$21642$1i4eWV)
              (void))
            (if (not (null? g$ls*$21643$1i4eWV))
              ((case-lambda
                 ((g$n$21645$1i4eWV)
                  (g$for-each$11836$1i4eWV
                    (case-lambda
                      ((g$x$21646$1i4eWV)
                       (begin
                         (if (not (list? g$x$21646$1i4eWV))
                           (assertion-violation
                             g$who$21644$1i4eWV
                             '"not a list"
                             g$x$21646$1i4eWV)
                           (void))
                         (if (not (= (length g$x$21646$1i4eWV)
                                     g$n$21645$1i4eWV))
                           (assertion-violation
                             g$who$21644$1i4eWV
                             '"length mismatch"
                             g$ls$21642$1i4eWV
                             g$x$21646$1i4eWV)
                           (void)))))
                    g$ls*$21643$1i4eWV)))
               (length g$ls$21642$1i4eWV))
              (void))
            (apply
              g$map$11835$1i4eWV
              g$proc$21641$1i4eWV
              g$ls$21642$1i4eWV
              g$ls*$21643$1i4eWV))))))
   (g$syntax-transformer$19784$1i4eWV
     g$syntax-transformer$23380$1i4eWV
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$21647$1i4eWV
                     (case-lambda
                       ((g$src$21707$1i4eWV
                          g$e$21708$1i4eWV
                          g$r$21709$1i4eWV
                          g$maps$21710$1i4eWV
                          g$ellipsis?$21711$1i4eWV
                          g$vec?$21712$1i4eWV)
                        ((case-lambda
                           ((g$t$21713$1i4eWV)
                            ((case-lambda
                               ((g$ls/false$21714$1i4eWV)
                                (if (if g$ls/false$21714$1i4eWV
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$21715$1i4eWV)
                                             (g$ellipsis?$21711$1i4eWV
                                               g$dots$21715$1i4eWV)))
                                          g$ls/false$21714$1i4eWV))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$21716$1i4eWV)
                                       (g$syntax-violation$19897$1i4eWV
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$21707$1i4eWV)))
                                    g$ls/false$21714$1i4eWV)
                                  ((case-lambda
                                     ((g$t$21717$1i4eWV)
                                      ((case-lambda
                                         ((g$ls/false$21718$1i4eWV)
                                          (if (if g$ls/false$21718$1i4eWV
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$21719$1i4eWV)
                                                       (g$id?$19280$1i4eWV
                                                         g$id$21719$1i4eWV)))
                                                    g$ls/false$21718$1i4eWV))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$21720$1i4eWV)
                                                 ((case-lambda
                                                    ((g$label$21721$1i4eWV)
                                                     ((case-lambda
                                                        ((g$b$21722$1i4eWV)
                                                         (if (eq? (g$binding-type$19297$1i4eWV
                                                                    g$b$21722$1i4eWV)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$21725$1i4eWV)
                                                                    (g$gen-ref$21648$1i4eWV
                                                                      g$src$21707$1i4eWV
                                                                      (car g$var.lev$21725$1i4eWV)
                                                                      (cdr g$var.lev$21725$1i4eWV)
                                                                      g$maps$21710$1i4eWV)))
                                                                 (g$binding-value$19298$1i4eWV
                                                                   g$b$21722$1i4eWV))))
                                                             (case-lambda
                                                               ((g$var$21726$1i4eWV
                                                                  g$maps$21727$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$maps$21728$1i4eWV
                                                                      g$var$21729$1i4eWV)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$21729$1i4eWV)
                                                                      g$maps$21728$1i4eWV)))
                                                                 g$maps$21727$1i4eWV
                                                                 g$var$21726$1i4eWV))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$21708$1i4eWV)
                                                             g$maps$21710$1i4eWV))))
                                                      (g$label->binding$19295$1i4eWV
                                                        g$label$21721$1i4eWV
                                                        g$r$21709$1i4eWV))))
                                                  (g$id->label$19293$1i4eWV
                                                    g$e$21708$1i4eWV))))
                                              g$ls/false$21718$1i4eWV)
                                            ((case-lambda
                                               ((g$t$21730$1i4eWV)
                                                ((case-lambda
                                                   ((g$ls/false$21731$1i4eWV)
                                                    (if (if g$ls/false$21731$1i4eWV
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$21732$1i4eWV
                                                                   g$e$21733$1i4eWV)
                                                                 (g$ellipsis?$21711$1i4eWV
                                                                   g$dots$21732$1i4eWV)))
                                                              g$ls/false$21731$1i4eWV))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$21734$1i4eWV
                                                             g$e$21735$1i4eWV)
                                                           (if g$vec?$21712$1i4eWV
                                                             (g$syntax-violation$19897$1i4eWV
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$21707$1i4eWV)
                                                             (g$gen-syntax$21647$1i4eWV
                                                               g$src$21707$1i4eWV
                                                               g$e$21735$1i4eWV
                                                               g$r$21709$1i4eWV
                                                               g$maps$21710$1i4eWV
                                                               (case-lambda
                                                                 ((g$x$21736$1i4eWV)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$21731$1i4eWV)
                                                      ((case-lambda
                                                         ((g$t$21737$1i4eWV)
                                                          ((case-lambda
                                                             ((g$ls/false$21738$1i4eWV)
                                                              (if (if g$ls/false$21738$1i4eWV
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$21739$1i4eWV
                                                                             g$dots$21740$1i4eWV
                                                                             g$y$21741$1i4eWV)
                                                                           (g$ellipsis?$21711$1i4eWV
                                                                             g$dots$21740$1i4eWV)))
                                                                        g$ls/false$21738$1i4eWV))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$21742$1i4eWV
                                                                       g$dots$21743$1i4eWV
                                                                       g$y$21744$1i4eWV)
                                                                     ((letrec ((g$f$21745$1i4eWV
                                                                                 (case-lambda
                                                                                   ((g$y$21746$1i4eWV
                                                                                      g$k$21747$1i4eWV)
                                                                                    ((case-lambda
                                                                                       ((g$t$21748$1i4eWV)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21749$1i4eWV)
                                                                                            (if g$ls/false$21749$1i4eWV
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$21747$1i4eWV
                                                                                                     g$maps$21710$1i4eWV)))
                                                                                                g$ls/false$21749$1i4eWV)
                                                                                              ((case-lambda
                                                                                                 ((g$t$21750$1i4eWV)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$21751$1i4eWV)
                                                                                                      (if (if g$ls/false$21751$1i4eWV
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$21752$1i4eWV
                                                                                                                     g$y$21753$1i4eWV)
                                                                                                                   (g$ellipsis?$21711$1i4eWV
                                                                                                                     g$dots$21752$1i4eWV)))
                                                                                                                g$ls/false$21751$1i4eWV))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$21754$1i4eWV
                                                                                                               g$y$21755$1i4eWV)
                                                                                                             (g$f$21745$1i4eWV
                                                                                                               g$y$21755$1i4eWV
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$21756$1i4eWV)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$21747$1i4eWV
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$21756$1i4eWV))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$21759$1i4eWV
                                                                                                                         g$maps$21760$1i4eWV)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$21761$1i4eWV
                                                                                                                             g$x$21762$1i4eWV)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$21761$1i4eWV))
                                                                                                                             (g$syntax-violation$19897$1i4eWV
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$21707$1i4eWV)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$21650$1i4eWV
                                                                                                                                 g$x$21762$1i4eWV
                                                                                                                                 (car g$maps$21761$1i4eWV))
                                                                                                                               (cdr g$maps$21761$1i4eWV)))))
                                                                                                                        g$maps$21760$1i4eWV
                                                                                                                        g$x$21759$1i4eWV)))))))))
                                                                                                          g$ls/false$21751$1i4eWV)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$21763$1i4eWV)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$21764$1i4eWV)
                                                                                                                (if g$ls/false$21764$1i4eWV
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$21647$1i4eWV
                                                                                                                              g$src$21707$1i4eWV
                                                                                                                              g$y$21746$1i4eWV
                                                                                                                              g$r$21709$1i4eWV
                                                                                                                              g$maps$21710$1i4eWV
                                                                                                                              g$ellipsis?$21711$1i4eWV
                                                                                                                              g$vec?$21712$1i4eWV)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$21767$1i4eWV
                                                                                                                              g$maps$21768$1i4eWV)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$21769$1i4eWV
                                                                                                                                  g$y$21770$1i4eWV)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$21747$1i4eWV
                                                                                                                                       g$maps$21769$1i4eWV)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$21773$1i4eWV
                                                                                                                                       g$maps$21774$1i4eWV)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$21775$1i4eWV
                                                                                                                                           g$x$21776$1i4eWV)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$21649$1i4eWV
                                                                                                                                             g$x$21776$1i4eWV
                                                                                                                                             g$y$21770$1i4eWV)
                                                                                                                                           g$maps$21775$1i4eWV)))
                                                                                                                                      g$maps$21774$1i4eWV
                                                                                                                                      g$x$21773$1i4eWV))))))
                                                                                                                             g$maps$21768$1i4eWV
                                                                                                                             g$y$21767$1i4eWV))))))
                                                                                                                    g$ls/false$21764$1i4eWV)
                                                                                                                  (g$syntax-violation$19897$1i4eWV
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$21763$1i4eWV))))
                                                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                                                               g$t$21763$1i4eWV
                                                                                                               '_))))
                                                                                                         g$t$21750$1i4eWV))))
                                                                                                   (g$syntax-dispatch$19778$1i4eWV
                                                                                                     g$t$21750$1i4eWV
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$21748$1i4eWV))))
                                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                                           g$t$21748$1i4eWV
                                                                                           '()))))
                                                                                     g$y$21746$1i4eWV)))))
                                                                        g$f$21745$1i4eWV)
                                                                      g$y$21744$1i4eWV
                                                                      (case-lambda
                                                                        ((g$maps$21777$1i4eWV)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$21647$1i4eWV
                                                                                g$src$21707$1i4eWV
                                                                                g$x$21742$1i4eWV
                                                                                g$r$21709$1i4eWV
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$21777$1i4eWV)
                                                                                g$ellipsis?$21711$1i4eWV
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$21780$1i4eWV
                                                                                g$maps$21781$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$maps$21782$1i4eWV
                                                                                    g$x$21783$1i4eWV)
                                                                                  (if (null?
                                                                                        (car g$maps$21782$1i4eWV))
                                                                                    (g$syntax-violation$19897$1i4eWV
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$21707$1i4eWV)
                                                                                    (values
                                                                                      (g$gen-map$21651$1i4eWV
                                                                                        g$x$21783$1i4eWV
                                                                                        (car g$maps$21782$1i4eWV))
                                                                                      (cdr g$maps$21782$1i4eWV)))))
                                                                               g$maps$21781$1i4eWV
                                                                               g$x$21780$1i4eWV)))))))))
                                                                  g$ls/false$21738$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$t$21784$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21785$1i4eWV)
                                                                        (if g$ls/false$21785$1i4eWV
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$21786$1i4eWV
                                                                                 g$y$21787$1i4eWV)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$21647$1i4eWV
                                                                                      g$src$21707$1i4eWV
                                                                                      g$x$21786$1i4eWV
                                                                                      g$r$21709$1i4eWV
                                                                                      g$maps$21710$1i4eWV
                                                                                      g$ellipsis?$21711$1i4eWV
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$21790$1i4eWV
                                                                                      g$maps$21791$1i4eWV)
                                                                                    ((case-lambda
                                                                                       ((g$maps$21792$1i4eWV
                                                                                          g$xnew$21793$1i4eWV)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$21647$1i4eWV
                                                                                               g$src$21707$1i4eWV
                                                                                               g$y$21787$1i4eWV
                                                                                               g$r$21709$1i4eWV
                                                                                               g$maps$21792$1i4eWV
                                                                                               g$ellipsis?$21711$1i4eWV
                                                                                               g$vec?$21712$1i4eWV)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$21796$1i4eWV
                                                                                               g$maps$21797$1i4eWV)
                                                                                             ((case-lambda
                                                                                                ((g$maps$21798$1i4eWV
                                                                                                   g$ynew$21799$1i4eWV)
                                                                                                 (values
                                                                                                   (g$gen-cons$21652$1i4eWV
                                                                                                     g$e$21708$1i4eWV
                                                                                                     g$x$21786$1i4eWV
                                                                                                     g$y$21787$1i4eWV
                                                                                                     g$xnew$21793$1i4eWV
                                                                                                     g$ynew$21799$1i4eWV)
                                                                                                   g$maps$21798$1i4eWV)))
                                                                                              g$maps$21797$1i4eWV
                                                                                              g$ynew$21796$1i4eWV))))))
                                                                                     g$maps$21791$1i4eWV
                                                                                     g$xnew$21790$1i4eWV))))))
                                                                            g$ls/false$21785$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$t$21800$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21801$1i4eWV)
                                                                                  (if g$ls/false$21801$1i4eWV
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$21802$1i4eWV)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$21647$1i4eWV
                                                                                                g$src$21707$1i4eWV
                                                                                                g$ls$21802$1i4eWV
                                                                                                g$r$21709$1i4eWV
                                                                                                g$maps$21710$1i4eWV
                                                                                                g$ellipsis?$21711$1i4eWV
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$21805$1i4eWV
                                                                                                g$maps$21806$1i4eWV)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$21807$1i4eWV
                                                                                                    g$lsnew$21808$1i4eWV)
                                                                                                  (values
                                                                                                    (g$gen-vector$21653$1i4eWV
                                                                                                      g$e$21708$1i4eWV
                                                                                                      g$ls$21802$1i4eWV
                                                                                                      g$lsnew$21808$1i4eWV)
                                                                                                    g$maps$21807$1i4eWV)))
                                                                                               g$maps$21806$1i4eWV
                                                                                               g$lsnew$21805$1i4eWV))))))
                                                                                      g$ls/false$21801$1i4eWV)
                                                                                    ((case-lambda
                                                                                       ((g$t$21809$1i4eWV)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21810$1i4eWV)
                                                                                            (if g$ls/false$21810$1i4eWV
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$21708$1i4eWV)
                                                                                                     g$maps$21710$1i4eWV)))
                                                                                                g$ls/false$21810$1i4eWV)
                                                                                              (g$syntax-violation$19897$1i4eWV
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$21809$1i4eWV))))
                                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                                           g$t$21809$1i4eWV
                                                                                           '_))))
                                                                                     g$t$21800$1i4eWV))))
                                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                                 g$t$21800$1i4eWV
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$21784$1i4eWV))))
                                                                     (g$syntax-dispatch$19778$1i4eWV
                                                                       g$t$21784$1i4eWV
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$21737$1i4eWV))))
                                                           (g$syntax-dispatch$19778$1i4eWV
                                                             g$t$21737$1i4eWV
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$21730$1i4eWV))))
                                                 (g$syntax-dispatch$19778$1i4eWV
                                                   g$t$21730$1i4eWV
                                                   '(any any)))))
                                             g$t$21717$1i4eWV))))
                                       (g$syntax-dispatch$19778$1i4eWV
                                         g$t$21717$1i4eWV
                                         'any))))
                                   g$t$21713$1i4eWV))))
                             (g$syntax-dispatch$19778$1i4eWV
                               g$t$21713$1i4eWV
                               'any))))
                         g$e$21708$1i4eWV))))
                   (g$gen-ref$21648$1i4eWV
                     (case-lambda
                       ((g$src$21694$1i4eWV
                          g$var$21695$1i4eWV
                          g$level$21696$1i4eWV
                          g$maps$21697$1i4eWV)
                        (if (= g$level$21696$1i4eWV '0)
                          (values
                            g$var$21695$1i4eWV
                            g$maps$21697$1i4eWV)
                          (if (null? g$maps$21697$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$21694$1i4eWV)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$21648$1i4eWV
                                   g$src$21694$1i4eWV
                                   g$var$21695$1i4eWV
                                   (- g$level$21696$1i4eWV '1)
                                   (cdr g$maps$21697$1i4eWV))))
                              (case-lambda
                                ((g$outer-var$21700$1i4eWV
                                   g$outer-maps$21701$1i4eWV)
                                 ((case-lambda
                                    ((g$outer-maps$21702$1i4eWV
                                       g$outer-var$21703$1i4eWV)
                                     ((case-lambda
                                        ((g$t$21704$1i4eWV)
                                         (if g$t$21704$1i4eWV
                                           ((case-lambda
                                              ((g$b$21705$1i4eWV)
                                               (values
                                                 (cdr g$b$21705$1i4eWV)
                                                 g$maps$21697$1i4eWV)))
                                            g$t$21704$1i4eWV)
                                           ((case-lambda
                                              ((g$inner-var$21706$1i4eWV)
                                               (values
                                                 g$inner-var$21706$1i4eWV
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$21703$1i4eWV
                                                       g$inner-var$21706$1i4eWV)
                                                     (car g$maps$21697$1i4eWV))
                                                   g$outer-maps$21702$1i4eWV))))
                                            (g$gen-lexical$19215$1i4eWV
                                              'tmp)))))
                                      (g$assq$11823$1i4eWV
                                        g$outer-var$21703$1i4eWV
                                        (car g$maps$21697$1i4eWV)))))
                                  g$outer-maps$21701$1i4eWV
                                  g$outer-var$21700$1i4eWV)))))))))
                   (g$gen-append$21649$1i4eWV
                     (case-lambda
                       ((g$x$21692$1i4eWV g$y$21693$1i4eWV)
                        (if (equal? g$y$21693$1i4eWV ''())
                          g$x$21692$1i4eWV
                          (list
                            'append
                            g$x$21692$1i4eWV
                            g$y$21693$1i4eWV)))))
                   (g$gen-mappend$21650$1i4eWV
                     (case-lambda
                       ((g$e$21690$1i4eWV g$map-env$21691$1i4eWV)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$21651$1i4eWV
                            g$e$21690$1i4eWV
                            g$map-env$21691$1i4eWV)))))
                   (g$gen-map$21651$1i4eWV
                     (case-lambda
                       ((g$e$21681$1i4eWV g$map-env$21682$1i4eWV)
                        ((case-lambda
                           ((g$formals$21683$1i4eWV
                              g$actuals$21684$1i4eWV)
                            (if (eq? (car g$e$21681$1i4eWV) 'ref)
                              (car g$actuals$21684$1i4eWV)
                              (if (g$for-all$11833$1i4eWV
                                    (case-lambda
                                      ((g$x$21685$1i4eWV)
                                       (if (eq? (car g$x$21685$1i4eWV)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$11827$1i4eWV
                                             (g$cadr$12686$1i4eWV
                                               g$x$21685$1i4eWV)
                                             g$formals$21683$1i4eWV))
                                         '#f)))
                                    (cdr g$e$21681$1i4eWV))
                                ((case-lambda
                                   ((g$args$21686$1i4eWV)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$21681$1i4eWV))
                                        g$args$21686$1i4eWV))))
                                 (g$map$11835$1i4eWV
                                   ((case-lambda
                                      ((g$r$21687$1i4eWV)
                                       (case-lambda
                                         ((g$x$21688$1i4eWV)
                                          (cdr (g$assq$11823$1i4eWV
                                                 (g$cadr$12686$1i4eWV
                                                   g$x$21688$1i4eWV)
                                                 g$r$21687$1i4eWV))))))
                                    (g$map$11835$1i4eWV
                                      cons
                                      g$formals$21683$1i4eWV
                                      g$actuals$21684$1i4eWV))
                                   (cdr g$e$21681$1i4eWV)))
                                (g$cons*$11837$1i4eWV
                                  'map
                                  (list
                                    'lambda
                                    g$formals$21683$1i4eWV
                                    g$e$21681$1i4eWV)
                                  g$actuals$21684$1i4eWV)))))
                         (g$map$11835$1i4eWV cdr g$map-env$21682$1i4eWV)
                         (g$map$11835$1i4eWV
                           (case-lambda
                             ((g$x$21689$1i4eWV)
                              (list 'ref (car g$x$21689$1i4eWV))))
                           g$map-env$21682$1i4eWV)))))
                   (g$gen-cons$21652$1i4eWV
                     (case-lambda
                       ((g$e$21673$1i4eWV
                          g$x$21674$1i4eWV
                          g$y$21675$1i4eWV
                          g$xnew$21676$1i4eWV
                          g$ynew$21677$1i4eWV)
                        ((case-lambda
                           ((g$t$21678$1i4eWV)
                            (if (eqv? g$t$21678$1i4eWV 'quote)
                              (if (eq? (car g$xnew$21676$1i4eWV) 'quote)
                                ((case-lambda
                                   ((g$xnew$21679$1i4eWV
                                      g$ynew$21680$1i4eWV)
                                    (if (if (eq? g$xnew$21679$1i4eWV
                                                 g$x$21674$1i4eWV)
                                          (begin
                                            '#f
                                            (eq? g$ynew$21680$1i4eWV
                                                 g$y$21675$1i4eWV))
                                          '#f)
                                      (list 'quote g$e$21673$1i4eWV)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$21679$1i4eWV
                                          g$ynew$21680$1i4eWV)))))
                                 (g$cadr$12686$1i4eWV
                                   g$xnew$21676$1i4eWV)
                                 (g$cadr$12686$1i4eWV
                                   g$ynew$21677$1i4eWV))
                                (if (null?
                                      (g$cadr$12686$1i4eWV
                                        g$ynew$21677$1i4eWV))
                                  (list 'list g$xnew$21676$1i4eWV)
                                  (list
                                    'cons
                                    g$xnew$21676$1i4eWV
                                    g$ynew$21677$1i4eWV)))
                              (if (eqv? g$t$21678$1i4eWV 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$21676$1i4eWV
                                    (cdr g$ynew$21677$1i4eWV)))
                                (list
                                  'cons
                                  g$xnew$21676$1i4eWV
                                  g$ynew$21677$1i4eWV)))))
                         (car g$ynew$21677$1i4eWV)))))
                   (g$gen-vector$21653$1i4eWV
                     (case-lambda
                       ((g$e$21670$1i4eWV
                          g$ls$21671$1i4eWV
                          g$lsnew$21672$1i4eWV)
                        (if (eq? (car g$lsnew$21672$1i4eWV) 'quote)
                          (if (eq? (g$cadr$12686$1i4eWV
                                     g$lsnew$21672$1i4eWV)
                                   g$ls$21671$1i4eWV)
                            (list 'quote g$e$21670$1i4eWV)
                            (list
                              'quote
                              (g$list->vector$12678$1i4eWV
                                (g$cadr$12686$1i4eWV
                                  g$lsnew$21672$1i4eWV))))
                          (if (eq? (car g$lsnew$21672$1i4eWV) 'list)
                            (cons 'vector (cdr g$lsnew$21672$1i4eWV))
                            (list
                              'list->vector
                              g$lsnew$21672$1i4eWV))))))
                   (g$regen$21654$1i4eWV
                     (case-lambda
                       ((g$x$21667$1i4eWV)
                        ((case-lambda
                           ((g$t$21668$1i4eWV)
                            (if (eqv? g$t$21668$1i4eWV 'ref)
                              (g$cadr$12686$1i4eWV g$x$21667$1i4eWV)
                              (if (eqv? g$t$21668$1i4eWV 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$12686$1i4eWV
                                    g$x$21667$1i4eWV))
                                (if (eqv? g$t$21668$1i4eWV 'quote)
                                  (list
                                    'quote
                                    (g$cadr$12686$1i4eWV
                                      g$x$21667$1i4eWV))
                                  (if (eqv? g$t$21668$1i4eWV 'lambda)
                                    (g$build-lambda$19202$1i4eWV
                                      '#f
                                      (g$cadr$12686$1i4eWV
                                        g$x$21667$1i4eWV)
                                      (g$regen$21654$1i4eWV
                                        (g$caddr$12692$1i4eWV
                                          g$x$21667$1i4eWV)))
                                    (if (eqv? g$t$21668$1i4eWV 'map)
                                      ((case-lambda
                                         ((g$ls$21669$1i4eWV)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$21669$1i4eWV)))
                                       (g$map$11835$1i4eWV
                                         g$regen$21654$1i4eWV
                                         (cdr g$x$21667$1i4eWV)))
                                      (cons
                                        (list
                                          'primitive
                                          (car g$x$21667$1i4eWV))
                                        (g$map$11835$1i4eWV
                                          g$regen$21654$1i4eWV
                                          (cdr g$x$21667$1i4eWV))))))))))
                         (car g$x$21667$1i4eWV))))))
           (case-lambda
             ((g$e$21655$1i4eWV g$r$21656$1i4eWV g$mr$21657$1i4eWV)
              ((case-lambda
                 ((g$t$21658$1i4eWV)
                  ((case-lambda
                     ((g$ls/false$21659$1i4eWV)
                      (if g$ls/false$21659$1i4eWV
                        (apply
                          (case-lambda
                            ((g$x$21660$1i4eWV)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$21647$1i4eWV
                                    g$e$21655$1i4eWV
                                    g$x$21660$1i4eWV
                                    g$r$21656$1i4eWV
                                    '()
                                    g$ellipsis?$19779$1i4eWV
                                    '#f)))
                               (case-lambda
                                 ((g$e$21663$1i4eWV g$maps$21664$1i4eWV)
                                  ((case-lambda
                                     ((g$maps$21665$1i4eWV
                                        g$e$21666$1i4eWV)
                                      (g$regen$21654$1i4eWV
                                        g$e$21666$1i4eWV)))
                                   g$maps$21664$1i4eWV
                                   g$e$21663$1i4eWV))))))
                          g$ls/false$21659$1i4eWV)
                        (g$syntax-violation$19897$1i4eWV
                          '#f
                          '"invalid syntax"
                          g$t$21658$1i4eWV))))
                   (g$syntax-dispatch$19778$1i4eWV
                     g$t$21658$1i4eWV
                     '(_ any)))))
               g$e$21655$1i4eWV))))))))
   (g$core-macro-transformer$19785$1i4eWV
     g$core-macro-transformer$23381$1i4eWV
     (case-lambda
       ((g$name$21811$1i4eWV)
        ((case-lambda
           ((g$t$21812$1i4eWV)
            (if (eqv? g$t$21812$1i4eWV 'quote)
              g$quote-transformer$19738$1i4eWV
              (if (eqv? g$t$21812$1i4eWV 'lambda)
                g$lambda-transformer$19740$1i4eWV
                (if (eqv? g$t$21812$1i4eWV 'case-lambda)
                  g$case-lambda-transformer$19739$1i4eWV
                  (if (eqv? g$t$21812$1i4eWV 'letrec)
                    g$letrec-transformer$19728$1i4eWV
                    (if (eqv? g$t$21812$1i4eWV 'letrec*)
                      g$letrec*-transformer$19729$1i4eWV
                      (if (eqv? g$t$21812$1i4eWV 'if)
                        g$if-transformer$19736$1i4eWV
                        (if (eqv? g$t$21812$1i4eWV 'foreign-call)
                          g$foreign-call-transformer$19776$1i4eWV
                          (if (eqv? g$t$21812$1i4eWV 'syntax-case)
                            g$syntax-case-transformer$19782$1i4eWV
                            (if (eqv? g$t$21812$1i4eWV 'syntax)
                              g$syntax-transformer$19784$1i4eWV
                              (if (eqv?
                                    g$t$21812$1i4eWV
                                    'type-descriptor)
                                g$type-descriptor-transformer$19731$1i4eWV
                                (if (eqv?
                                      g$t$21812$1i4eWV
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$19732$1i4eWV
                                  (if (eqv?
                                        g$t$21812$1i4eWV
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$19733$1i4eWV
                                    (if (eqv?
                                          g$t$21812$1i4eWV
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$19730$1i4eWV
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$21811$1i4eWV))))))))))))))))
         g$name$21811$1i4eWV))))
   (g$file-options-macro$19786$1i4eWV
     g$file-options-macro$23382$1i4eWV
     (case-lambda
       ((g$x$21813$1i4eWV)
        (letrec* ((g$valid-option?$21814$1i4eWV
                    (case-lambda
                      ((g$x$21819$1i4eWV)
                       (if (g$id?$19280$1i4eWV g$x$21819$1i4eWV)
                         (begin
                           '#f
                           (g$memq$11827$1i4eWV
                             (g$id->sym$19281$1i4eWV g$x$21819$1i4eWV)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$21815$1i4eWV)
              ((case-lambda
                 ((g$ls/false$21816$1i4eWV)
                  (if (if g$ls/false$21816$1i4eWV
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$21817$1i4eWV)
                               (if (g$for-all$11833$1i4eWV
                                     g$valid-option?$21814$1i4eWV
                                     g$opt*$21817$1i4eWV)
                                 (begin
                                   '#f
                                   (g$file-options-spec$18143$1i4eWV
                                     (g$map$11835$1i4eWV
                                       g$id->sym$19281$1i4eWV
                                       g$opt*$21817$1i4eWV)))
                                 '#f)))
                            g$ls/false$21816$1i4eWV))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$21818$1i4eWV)
                         (g$bless$19741$1i4eWV
                           (list
                             'quote
                             (g$file-options-spec$18143$1i4eWV
                               (g$map$11835$1i4eWV
                                 g$id->sym$19281$1i4eWV
                                 g$opt*$21818$1i4eWV))))))
                      g$ls/false$21816$1i4eWV)
                    (g$syntax-violation$19897$1i4eWV
                      '#f
                      '"invalid syntax"
                      g$t$21815$1i4eWV))))
               (g$syntax-dispatch$19778$1i4eWV
                 g$t$21815$1i4eWV
                 '(_ . each-any)))))
           g$x$21813$1i4eWV)))))
   (g$symbol-macro$19787$1i4eWV
     g$symbol-macro$23383$1i4eWV
     (case-lambda
       ((g$x$21820$1i4eWV g$set$21821$1i4eWV)
        ((case-lambda
           ((g$t$21822$1i4eWV)
            ((case-lambda
               ((g$ls/false$21823$1i4eWV)
                (if (if g$ls/false$21823$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$21824$1i4eWV)
                             (if (g$id?$19280$1i4eWV
                                   g$name$21824$1i4eWV)
                               (begin
                                 '#f
                                 (g$memq$11827$1i4eWV
                                   (g$id->sym$19281$1i4eWV
                                     g$name$21824$1i4eWV)
                                   g$set$21821$1i4eWV))
                               '#f)))
                          g$ls/false$21823$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$21825$1i4eWV)
                       (g$bless$19741$1i4eWV
                         (list 'quote g$name$21825$1i4eWV))))
                    g$ls/false$21823$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$21822$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$21822$1i4eWV
               '(_ any)))))
         g$x$21820$1i4eWV))))
   (g$macro-transformer$19788$1i4eWV
     g$macro-transformer$23384$1i4eWV
     (case-lambda
       ((g$x$21826$1i4eWV)
        (if (g$procedure?$12670$1i4eWV g$x$21826$1i4eWV)
          g$x$21826$1i4eWV
          (if (g$symbol?$12668$1i4eWV g$x$21826$1i4eWV)
            ((case-lambda
               ((g$t$21827$1i4eWV)
                (if (eqv? g$t$21827$1i4eWV 'define-record-type)
                  g$define-record-type-macro$19772$1i4eWV
                  (if (eqv? g$t$21827$1i4eWV 'define-struct)
                    g$define-struct-macro$19771$1i4eWV
                    (if (eqv? g$t$21827$1i4eWV 'include)
                      g$include-macro$19766$1i4eWV
                      (if (eqv? g$t$21827$1i4eWV 'cond)
                        g$cond-macro$19764$1i4eWV
                        (if (eqv? g$t$21827$1i4eWV 'let)
                          g$let-macro$19744$1i4eWV
                          (if (eqv? g$t$21827$1i4eWV 'do)
                            g$do-macro$19760$1i4eWV
                            (if (eqv? g$t$21827$1i4eWV 'or)
                              g$or-macro$19762$1i4eWV
                              (if (eqv? g$t$21827$1i4eWV 'and)
                                g$and-macro$19763$1i4eWV
                                (if (eqv? g$t$21827$1i4eWV 'let*)
                                  g$let*-macro$19761$1i4eWV
                                  (if (eqv?
                                        g$t$21827$1i4eWV
                                        'let-values)
                                    g$let-values-macro$19745$1i4eWV
                                    (if (eqv?
                                          g$t$21827$1i4eWV
                                          'let*-values)
                                      g$let*-values-macro$19746$1i4eWV
                                      (if (eqv?
                                            g$t$21827$1i4eWV
                                            'syntax-rules)
                                        g$syntax-rules-macro$19768$1i4eWV
                                        (if (eqv?
                                              g$t$21827$1i4eWV
                                              'quasiquote)
                                          g$quasiquote-macro$19769$1i4eWV
                                          (if (eqv?
                                                g$t$21827$1i4eWV
                                                'quasisyntax)
                                            g$quasisyntax-macro$19770$1i4eWV
                                            (if (eqv?
                                                  g$t$21827$1i4eWV
                                                  'with-syntax)
                                              g$with-syntax-macro$19742$1i4eWV
                                              (if (eqv?
                                                    g$t$21827$1i4eWV
                                                    'when)
                                                g$when-macro$19734$1i4eWV
                                                (if (eqv?
                                                      g$t$21827$1i4eWV
                                                      'unless)
                                                  g$unless-macro$19735$1i4eWV
                                                  (if (eqv?
                                                        g$t$21827$1i4eWV
                                                        'case)
                                                    g$case-macro$19737$1i4eWV
                                                    (if (eqv?
                                                          g$t$21827$1i4eWV
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$19759$1i4eWV
                                                      (if (eqv?
                                                            g$t$21827$1i4eWV
                                                            'time)
                                                        g$time-macro$19755$1i4eWV
                                                        (if (eqv?
                                                              g$t$21827$1i4eWV
                                                              'delay)
                                                          g$delay-macro$19756$1i4eWV
                                                          (if (eqv?
                                                                g$t$21827$1i4eWV
                                                                'assert)
                                                            g$assert-macro$19757$1i4eWV
                                                            (if (eqv?
                                                                  g$t$21827$1i4eWV
                                                                  'endianness)
                                                              g$endianness-macro$19758$1i4eWV
                                                              (if (eqv?
                                                                    g$t$21827$1i4eWV
                                                                    'guard)
                                                                g$guard-macro$19753$1i4eWV
                                                                (if (eqv?
                                                                      g$t$21827$1i4eWV
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$19754$1i4eWV
                                                                  (if (eqv?
                                                                        g$t$21827$1i4eWV
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$19747$1i4eWV
                                                                    (if (eqv?
                                                                          g$t$21827$1i4eWV
                                                                          'trace-define)
                                                                      g$trace-define-macro$19748$1i4eWV
                                                                      (if (eqv?
                                                                            g$t$21827$1i4eWV
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$19749$1i4eWV
                                                                        (if (eqv?
                                                                              g$t$21827$1i4eWV
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$19751$1i4eWV
                                                                          (if (eqv?
                                                                                g$t$21827$1i4eWV
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$19752$1i4eWV
                                                                            (if (eqv?
                                                                                  g$t$21827$1i4eWV
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$19773$1i4eWV
                                                                              (if (eqv?
                                                                                    g$t$21827$1i4eWV
                                                                                    'parameterize)
                                                                                g$parameterize-macro$19775$1i4eWV
                                                                                (if (eqv?
                                                                                      g$t$21827$1i4eWV
                                                                                      'include-into)
                                                                                  g$include-into-macro$19767$1i4eWV
                                                                                  (if (eqv?
                                                                                        g$t$21827$1i4eWV
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$21828$1i4eWV)
                                                                                       (g$symbol-macro$19787$1i4eWV
                                                                                         g$x$21828$1i4eWV
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$21827$1i4eWV
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$21829$1i4eWV)
                                                                                         (g$symbol-macro$19787$1i4eWV
                                                                                           g$x$21829$1i4eWV
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$21827$1i4eWV
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$21830$1i4eWV)
                                                                                           (g$symbol-macro$19787$1i4eWV
                                                                                             g$x$21830$1i4eWV
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$21827$1i4eWV
                                                                                              'file-options)
                                                                                          g$file-options-macro$19786$1i4eWV
                                                                                          (if (g$memv$11828$1i4eWV
                                                                                                g$t$21827$1i4eWV
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$19774$1i4eWV
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$21826$1i4eWV)))))))))))))))))))))))))))))))))))))))))
             g$x$21826$1i4eWV)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$21826$1i4eWV))))))
   (g$local-macro-transformer$19789$1i4eWV
     g$local-macro-transformer$23385$1i4eWV
     (case-lambda ((g$x$21831$1i4eWV) (car g$x$21831$1i4eWV))))
   (g$do-macro-call$19790$1i4eWV
     g$do-macro-call$23386$1i4eWV
     (case-lambda
       ((g$transformer$21832$1i4eWV
          g$expr$21833$1i4eWV
          g$r$21834$1i4eWV)
        (letrec* ((g$return$21835$1i4eWV
                    (case-lambda
                      ((g$x$21843$1i4eWV)
                       (begin
                         ((letrec ((g$f$21844$1i4eWV
                                     (case-lambda
                                       ((g$x$21845$1i4eWV)
                                        (if (not (g$stx?$19252$1i4eWV
                                                   g$x$21845$1i4eWV))
                                          (if (pair? g$x$21845$1i4eWV)
                                            (begin
                                              (g$f$21844$1i4eWV
                                                (car g$x$21845$1i4eWV))
                                              (g$f$21844$1i4eWV
                                                (cdr g$x$21845$1i4eWV)))
                                            (if (g$vector?$12666$1i4eWV
                                                  g$x$21845$1i4eWV)
                                              (g$vector-for-each$12738$1i4eWV
                                                g$f$21844$1i4eWV
                                                g$x$21845$1i4eWV)
                                              (if (g$symbol?$12668$1i4eWV
                                                    g$x$21845$1i4eWV)
                                                (g$syntax-violation$19897$1i4eWV
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$21833$1i4eWV
                                                  g$x$21845$1i4eWV)
                                                (void))))
                                          (void))))))
                            g$f$21844$1i4eWV)
                          g$x$21843$1i4eWV)
                         (g$add-mark$19269$1i4eWV
                           (g$gen-mark$19264$1i4eWV)
                           g$x$21843$1i4eWV
                           g$expr$21833$1i4eWV))))))
          ((case-lambda
             ((g$x$21836$1i4eWV)
              (if (g$procedure?$12670$1i4eWV g$x$21836$1i4eWV)
                (g$return$21835$1i4eWV
                  (g$x$21836$1i4eWV
                    (case-lambda
                      ((g$id$21837$1i4eWV)
                       (begin
                         (if (not (g$id?$19280$1i4eWV
                                    g$id$21837$1i4eWV))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$21837$1i4eWV)
                           (void))
                         ((case-lambda
                            ((g$label$21838$1i4eWV)
                             ((case-lambda
                                ((g$binding$21839$1i4eWV)
                                 ((case-lambda
                                    ((g$t$21840$1i4eWV)
                                     (if (eqv?
                                           g$t$21840$1i4eWV
                                           'local-ctv)
                                       (g$cadr$12686$1i4eWV
                                         g$binding$21839$1i4eWV)
                                       (if (eqv?
                                             g$t$21840$1i4eWV
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$21841$1i4eWV
                                               g$loc$21842$1i4eWV)
                                             (begin
                                               (g$visit-library$18987$1i4eWV
                                                 g$lib$21841$1i4eWV)
                                               (symbol-value
                                                 g$loc$21842$1i4eWV))))
                                          (g$cadr$12686$1i4eWV
                                            g$binding$21839$1i4eWV)
                                          (g$cddr$12688$1i4eWV
                                            g$binding$21839$1i4eWV))
                                         '#f))))
                                  (car g$binding$21839$1i4eWV))))
                              (g$label->binding$19295$1i4eWV
                                g$label$21838$1i4eWV
                                g$r$21834$1i4eWV))))
                          (g$id->label$19293$1i4eWV
                            g$id$21837$1i4eWV)))))))
                (g$return$21835$1i4eWV g$x$21836$1i4eWV))))
           (g$transformer$21832$1i4eWV
             (g$add-mark$19269$1i4eWV
               g$anti-mark$19265$1i4eWV
               g$expr$21833$1i4eWV
               '#f)))))))
   (g$chi-macro$19791$1i4eWV
     g$chi-macro$23387$1i4eWV
     (case-lambda
       ((g$p$21846$1i4eWV g$e$21847$1i4eWV g$r$21848$1i4eWV)
        (g$do-macro-call$19790$1i4eWV
          (g$macro-transformer$19788$1i4eWV g$p$21846$1i4eWV)
          g$e$21847$1i4eWV
          g$r$21848$1i4eWV))))
   (g$chi-local-macro$19792$1i4eWV
     g$chi-local-macro$23388$1i4eWV
     (case-lambda
       ((g$p$21849$1i4eWV g$e$21850$1i4eWV g$r$21851$1i4eWV)
        (g$do-macro-call$19790$1i4eWV
          (g$local-macro-transformer$19789$1i4eWV g$p$21849$1i4eWV)
          g$e$21850$1i4eWV
          g$r$21851$1i4eWV))))
   (g$chi-global-macro$19793$1i4eWV
     g$chi-global-macro$23389$1i4eWV
     (case-lambda
       ((g$p$21852$1i4eWV g$e$21853$1i4eWV g$r$21854$1i4eWV)
        ((case-lambda
           ((g$lib$21855$1i4eWV g$loc$21856$1i4eWV)
            (begin
              (g$visit-library$18987$1i4eWV g$lib$21855$1i4eWV)
              ((case-lambda
                 ((g$x$21857$1i4eWV)
                  ((case-lambda
                     ((g$transformer$21858$1i4eWV)
                      (g$do-macro-call$19790$1i4eWV
                        g$transformer$21858$1i4eWV
                        g$e$21853$1i4eWV
                        g$r$21854$1i4eWV)))
                   (if (g$procedure?$12670$1i4eWV g$x$21857$1i4eWV)
                     g$x$21857$1i4eWV
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$21857$1i4eWV)))))
               (symbol-value g$loc$21856$1i4eWV)))))
         (car g$p$21852$1i4eWV)
         (cdr g$p$21852$1i4eWV)))))
   (g$chi-expr*$19794$1i4eWV
     g$chi-expr*$23390$1i4eWV
     (case-lambda
       ((g$e*$21859$1i4eWV g$r$21860$1i4eWV g$mr$21861$1i4eWV)
        (if (null? g$e*$21859$1i4eWV)
          '()
          ((case-lambda
             ((g$e$21862$1i4eWV)
              (cons
                g$e$21862$1i4eWV
                (g$chi-expr*$19794$1i4eWV
                  (cdr g$e*$21859$1i4eWV)
                  g$r$21860$1i4eWV
                  g$mr$21861$1i4eWV))))
           (g$chi-expr$19796$1i4eWV
             (car g$e*$21859$1i4eWV)
             g$r$21860$1i4eWV
             g$mr$21861$1i4eWV))))))
   (g$chi-application$19795$1i4eWV
     g$chi-application$23391$1i4eWV
     (case-lambda
       ((g$e$21863$1i4eWV g$r$21864$1i4eWV g$mr$21865$1i4eWV)
        ((case-lambda
           ((g$t$21866$1i4eWV)
            ((case-lambda
               ((g$ls/false$21867$1i4eWV)
                (if g$ls/false$21867$1i4eWV
                  (apply
                    (case-lambda
                      ((g$rator$21868$1i4eWV g$rands$21869$1i4eWV)
                       ((case-lambda
                          ((g$rator$21870$1i4eWV)
                           (cons
                             g$rator$21870$1i4eWV
                             (g$chi-expr*$19794$1i4eWV
                               g$rands$21869$1i4eWV
                               g$r$21864$1i4eWV
                               g$mr$21865$1i4eWV))))
                        (g$chi-expr$19796$1i4eWV
                          g$rator$21868$1i4eWV
                          g$r$21864$1i4eWV
                          g$mr$21865$1i4eWV))))
                    g$ls/false$21867$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$21866$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$21866$1i4eWV
               '(any . each-any)))))
         g$e$21863$1i4eWV))))
   (g$chi-expr$19796$1i4eWV
     g$chi-expr$23392$1i4eWV
     (case-lambda
       ((g$e$21871$1i4eWV g$r$21872$1i4eWV g$mr$21873$1i4eWV)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$19300$1i4eWV
               g$e$21871$1i4eWV
               g$r$21872$1i4eWV)))
          (case-lambda
            ((g$type$21877$1i4eWV
               g$value$21878$1i4eWV
               g$kwd$21879$1i4eWV)
             ((case-lambda
                ((g$kwd$21880$1i4eWV
                   g$value$21881$1i4eWV
                   g$type$21882$1i4eWV)
                 ((case-lambda
                    ((g$t$21883$1i4eWV)
                     (if (eqv? g$t$21883$1i4eWV 'core-macro)
                       ((case-lambda
                          ((g$transformer$21884$1i4eWV)
                           (g$transformer$21884$1i4eWV
                             g$e$21871$1i4eWV
                             g$r$21872$1i4eWV
                             g$mr$21873$1i4eWV)))
                        (g$core-macro-transformer$19785$1i4eWV
                          g$value$21881$1i4eWV))
                       (if (eqv? g$t$21883$1i4eWV 'global)
                         ((case-lambda
                            ((g$lib$21885$1i4eWV)
                             ((case-lambda
                                ((g$loc$21886$1i4eWV)
                                 (begin
                                   ((g$inv-collector$19833$1i4eWV)
                                    g$lib$21885$1i4eWV)
                                   g$loc$21886$1i4eWV)))
                              (cdr g$value$21881$1i4eWV))))
                          (car g$value$21881$1i4eWV))
                         (if (eqv? g$t$21883$1i4eWV 'core-prim)
                           ((case-lambda
                              ((g$name$21887$1i4eWV)
                               (list 'primitive g$name$21887$1i4eWV)))
                            g$value$21881$1i4eWV)
                           (if (eqv? g$t$21883$1i4eWV 'call)
                             (g$chi-application$19795$1i4eWV
                               g$e$21871$1i4eWV
                               g$r$21872$1i4eWV
                               g$mr$21873$1i4eWV)
                             (if (eqv? g$t$21883$1i4eWV 'lexical)
                               ((case-lambda
                                  ((g$lex$21888$1i4eWV)
                                   g$lex$21888$1i4eWV))
                                (g$lexical-var$19722$1i4eWV
                                  g$value$21881$1i4eWV))
                               (if (g$memv$11828$1i4eWV
                                     g$t$21883$1i4eWV
                                     '(global-macro global-macro!))
                                 (g$chi-expr$19796$1i4eWV
                                   (g$chi-global-macro$19793$1i4eWV
                                     g$value$21881$1i4eWV
                                     g$e$21871$1i4eWV
                                     g$r$21872$1i4eWV)
                                   g$r$21872$1i4eWV
                                   g$mr$21873$1i4eWV)
                                 (if (g$memv$11828$1i4eWV
                                       g$t$21883$1i4eWV
                                       '(local-macro local-macro!))
                                   (g$chi-expr$19796$1i4eWV
                                     (g$chi-local-macro$19792$1i4eWV
                                       g$value$21881$1i4eWV
                                       g$e$21871$1i4eWV
                                       g$r$21872$1i4eWV)
                                     g$r$21872$1i4eWV
                                     g$mr$21873$1i4eWV)
                                   (if (g$memv$11828$1i4eWV
                                         g$t$21883$1i4eWV
                                         '(macro macro!))
                                     (g$chi-expr$19796$1i4eWV
                                       (g$chi-macro$19791$1i4eWV
                                         g$value$21881$1i4eWV
                                         g$e$21871$1i4eWV
                                         g$r$21872$1i4eWV)
                                       g$r$21872$1i4eWV
                                       g$mr$21873$1i4eWV)
                                     (if (eqv?
                                           g$t$21883$1i4eWV
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$21889$1i4eWV)
                                           (list
                                             'quote
                                             g$datum$21889$1i4eWV)))
                                        g$value$21881$1i4eWV)
                                       (if (eqv? g$t$21883$1i4eWV 'set!)
                                         (g$chi-set!$19797$1i4eWV
                                           g$e$21871$1i4eWV
                                           g$r$21872$1i4eWV
                                           g$mr$21873$1i4eWV)
                                         (if (eqv?
                                               g$t$21883$1i4eWV
                                               'begin)
                                           ((case-lambda
                                              ((g$t$21890$1i4eWV)
                                               ((case-lambda
                                                  ((g$ls/false$21891$1i4eWV)
                                                   (if g$ls/false$21891$1i4eWV
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$21892$1i4eWV
                                                            g$x*$21893$1i4eWV)
                                                          (g$build-sequence$19205$1i4eWV
                                                            '#f
                                                            (g$chi-expr*$19794$1i4eWV
                                                              (cons
                                                                g$x$21892$1i4eWV
                                                                g$x*$21893$1i4eWV)
                                                              g$r$21872$1i4eWV
                                                              g$mr$21873$1i4eWV))))
                                                       g$ls/false$21891$1i4eWV)
                                                     (g$syntax-violation$19897$1i4eWV
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$21890$1i4eWV))))
                                                (g$syntax-dispatch$19778$1i4eWV
                                                  g$t$21890$1i4eWV
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$21871$1i4eWV)
                                           (if (g$memv$11828$1i4eWV
                                                 g$t$21883$1i4eWV
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$21894$1i4eWV)
                                                 ((case-lambda
                                                    ((g$ls/false$21895$1i4eWV)
                                                     (if (if g$ls/false$21895$1i4eWV
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$21896$1i4eWV
                                                                    g$xrhs*$21897$1i4eWV
                                                                    g$xbody$21898$1i4eWV
                                                                    g$xbody*$21899$1i4eWV)
                                                                  (if (not (g$valid-bound-ids?$19285$1i4eWV
                                                                             g$xlhs*$21896$1i4eWV))
                                                                    (g$syntax-violation$19897$1i4eWV
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$21871$1i4eWV)
                                                                    (void))))
                                                               g$ls/false$21895$1i4eWV))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$21900$1i4eWV
                                                              g$xrhs*$21901$1i4eWV
                                                              g$xbody$21902$1i4eWV
                                                              g$xbody*$21903$1i4eWV)
                                                            ((case-lambda
                                                               ((g$xlab*$21904$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$xrib$21905$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$xb*$21906$1i4eWV)
                                                                        (g$build-sequence$19205$1i4eWV
                                                                          '#f
                                                                          (g$chi-expr*$19794$1i4eWV
                                                                            (g$map$11835$1i4eWV
                                                                              (case-lambda
                                                                                ((g$x$21907$1i4eWV)
                                                                                 (g$add-subst$19270$1i4eWV
                                                                                   g$xrib$21905$1i4eWV
                                                                                   g$x$21907$1i4eWV)))
                                                                              (cons
                                                                                g$xbody$21902$1i4eWV
                                                                                g$xbody*$21903$1i4eWV))
                                                                            (append
                                                                              (g$map$11835$1i4eWV
                                                                                cons
                                                                                g$xlab*$21904$1i4eWV
                                                                                g$xb*$21906$1i4eWV)
                                                                              g$r$21872$1i4eWV)
                                                                            (append
                                                                              (g$map$11835$1i4eWV
                                                                                cons
                                                                                g$xlab*$21904$1i4eWV
                                                                                g$xb*$21906$1i4eWV)
                                                                              g$mr$21873$1i4eWV)))))
                                                                     (g$map$11835$1i4eWV
                                                                       (case-lambda
                                                                         ((g$x$21908$1i4eWV)
                                                                          (g$make-eval-transformer$19328$1i4eWV
                                                                            (g$expand-transformer$19826$1i4eWV
                                                                              (if (eq? g$type$21882$1i4eWV
                                                                                       'let-syntax)
                                                                                g$x$21908$1i4eWV
                                                                                (g$add-subst$19270$1i4eWV
                                                                                  g$xrib$21905$1i4eWV
                                                                                  g$x$21908$1i4eWV))
                                                                              g$mr$21873$1i4eWV))))
                                                                       g$xrhs*$21901$1i4eWV))))
                                                                 (g$make-full-rib$19246$1i4eWV
                                                                   g$xlhs*$21900$1i4eWV
                                                                   g$xlab*$21904$1i4eWV))))
                                                             (g$map$11835$1i4eWV
                                                               g$gen-label$19217$1i4eWV
                                                               g$xlhs*$21900$1i4eWV))))
                                                         g$ls/false$21895$1i4eWV)
                                                       (g$syntax-violation$19897$1i4eWV
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$21894$1i4eWV))))
                                                  (g$syntax-dispatch$19778$1i4eWV
                                                    g$t$21894$1i4eWV
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$21871$1i4eWV)
                                             (if (eqv?
                                                   g$t$21883$1i4eWV
                                                   'displaced-lexical)
                                               (g$syntax-violation$19897$1i4eWV
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$21871$1i4eWV)
                                               (if (eqv?
                                                     g$t$21883$1i4eWV
                                                     'syntax)
                                                 (g$syntax-violation$19897$1i4eWV
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$21871$1i4eWV)
                                                 (if (g$memv$11828$1i4eWV
                                                       g$t$21883$1i4eWV
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$19897$1i4eWV
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$21909$1i4eWV)
                                                           (if (eqv?
                                                                 g$t$21909$1i4eWV
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$21909$1i4eWV
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$21909$1i4eWV
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$21909$1i4eWV
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$21909$1i4eWV
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$21909$1i4eWV
                                                                           'export)
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$21882$1i4eWV)
                                                       '" was found where an expression was expected")
                                                     g$e$21871$1i4eWV)
                                                   (if (eqv?
                                                         g$t$21883$1i4eWV
                                                         'mutable)
                                                     (g$syntax-violation$19897$1i4eWV
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$21871$1i4eWV)
                                                     (g$syntax-violation$19897$1i4eWV
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$21871$1i4eWV)))))))))))))))))))
                  g$type$21882$1i4eWV)))
              g$kwd$21879$1i4eWV
              g$value$21878$1i4eWV
              g$type$21877$1i4eWV)))))))
   (g$chi-set!$19797$1i4eWV
     g$chi-set!$23393$1i4eWV
     (case-lambda
       ((g$e$21910$1i4eWV g$r$21911$1i4eWV g$mr$21912$1i4eWV)
        ((case-lambda
           ((g$t$21913$1i4eWV)
            ((case-lambda
               ((g$ls/false$21914$1i4eWV)
                (if (if g$ls/false$21914$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$21915$1i4eWV g$v$21916$1i4eWV)
                             (g$id?$19280$1i4eWV g$x$21915$1i4eWV)))
                          g$ls/false$21914$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$21917$1i4eWV g$v$21918$1i4eWV)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$19300$1i4eWV
                              g$x$21917$1i4eWV
                              g$r$21911$1i4eWV)))
                         (case-lambda
                           ((g$type$21922$1i4eWV
                              g$value$21923$1i4eWV
                              g$kwd$21924$1i4eWV)
                            ((case-lambda
                               ((g$kwd$21925$1i4eWV
                                  g$value$21926$1i4eWV
                                  g$type$21927$1i4eWV)
                                ((case-lambda
                                   ((g$t$21928$1i4eWV)
                                    (if (eqv? g$t$21928$1i4eWV 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$19724$1i4eWV
                                          g$value$21926$1i4eWV
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$19722$1i4eWV
                                            g$value$21926$1i4eWV)
                                          (g$chi-expr$19796$1i4eWV
                                            g$v$21918$1i4eWV
                                            g$r$21911$1i4eWV
                                            g$mr$21912$1i4eWV)))
                                      (if (eqv?
                                            g$t$21928$1i4eWV
                                            'core-prim)
                                        (g$syntax-violation$19897$1i4eWV
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$21910$1i4eWV)
                                        (if (eqv?
                                              g$t$21928$1i4eWV
                                              'global)
                                          (g$syntax-violation$19897$1i4eWV
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$21910$1i4eWV)
                                          (if (eqv?
                                                g$t$21928$1i4eWV
                                                'global-macro!)
                                            (g$chi-expr$19796$1i4eWV
                                              (g$chi-global-macro$19793$1i4eWV
                                                g$value$21926$1i4eWV
                                                g$e$21910$1i4eWV
                                                g$r$21911$1i4eWV)
                                              g$r$21911$1i4eWV
                                              g$mr$21912$1i4eWV)
                                            (if (eqv?
                                                  g$t$21928$1i4eWV
                                                  'local-macro!)
                                              (g$chi-expr$19796$1i4eWV
                                                (g$chi-local-macro$19792$1i4eWV
                                                  g$value$21926$1i4eWV
                                                  g$e$21910$1i4eWV
                                                  g$r$21911$1i4eWV)
                                                g$r$21911$1i4eWV
                                                g$mr$21912$1i4eWV)
                                              (if (eqv?
                                                    g$t$21928$1i4eWV
                                                    'mutable)
                                                (g$syntax-violation$19897$1i4eWV
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$21910$1i4eWV)
                                                (g$syntax-violation$19897$1i4eWV
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$21910$1i4eWV)))))))))
                                 g$type$21927$1i4eWV)))
                             g$kwd$21924$1i4eWV
                             g$value$21923$1i4eWV
                             g$type$21922$1i4eWV))))))
                    g$ls/false$21914$1i4eWV)
                  (g$syntax-violation$19897$1i4eWV
                    '#f
                    '"invalid syntax"
                    g$t$21913$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$21913$1i4eWV
               '(_ any any)))))
         g$e$21910$1i4eWV))))
   (g$verify-formals$19798$1i4eWV
     g$verify-formals$23394$1i4eWV
     (case-lambda
       ((g$fmls$21929$1i4eWV g$stx$21930$1i4eWV)
        ((case-lambda
           ((g$t$21931$1i4eWV)
            ((case-lambda
               ((g$ls/false$21932$1i4eWV)
                (if g$ls/false$21932$1i4eWV
                  (apply
                    (case-lambda
                      ((g$x*$21933$1i4eWV)
                       (if (not (g$valid-bound-ids?$19285$1i4eWV
                                  g$x*$21933$1i4eWV))
                         (g$invalid-fmls-error$19743$1i4eWV
                           g$stx$21930$1i4eWV
                           g$fmls$21929$1i4eWV)
                         (void))))
                    g$ls/false$21932$1i4eWV)
                  ((case-lambda
                     ((g$t$21934$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$21935$1i4eWV)
                          (if g$ls/false$21935$1i4eWV
                            (apply
                              (case-lambda
                                ((g$x*$21936$1i4eWV g$x$21937$1i4eWV)
                                 (if (not (g$valid-bound-ids?$19285$1i4eWV
                                            (cons
                                              g$x$21937$1i4eWV
                                              g$x*$21936$1i4eWV)))
                                   (g$invalid-fmls-error$19743$1i4eWV
                                     g$stx$21930$1i4eWV
                                     g$fmls$21929$1i4eWV)
                                   (void))))
                              g$ls/false$21935$1i4eWV)
                            ((case-lambda
                               ((g$t$21938$1i4eWV)
                                ((case-lambda
                                   ((g$ls/false$21939$1i4eWV)
                                    (if g$ls/false$21939$1i4eWV
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$stx$21930$1i4eWV)))
                                        g$ls/false$21939$1i4eWV)
                                      (g$syntax-violation$19897$1i4eWV
                                        '#f
                                        '"invalid syntax"
                                        g$t$21938$1i4eWV))))
                                 (g$syntax-dispatch$19778$1i4eWV
                                   g$t$21938$1i4eWV
                                   '_))))
                             g$t$21934$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$21934$1i4eWV
                         '#(each+ any () any)))))
                   g$t$21931$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$21931$1i4eWV
               'each-any))))
         g$fmls$21929$1i4eWV))))
   (g$chi-lambda-clause$19799$1i4eWV
     g$chi-lambda-clause$23395$1i4eWV
     (case-lambda
       ((g$stx$21940$1i4eWV
          g$fmls$21941$1i4eWV
          g$body*$21942$1i4eWV
          g$r$21943$1i4eWV
          g$mr$21944$1i4eWV)
        ((case-lambda
           ((g$t$21945$1i4eWV)
            ((case-lambda
               ((g$ls/false$21946$1i4eWV)
                (if g$ls/false$21946$1i4eWV
                  (apply
                    (case-lambda
                      ((g$x*$21947$1i4eWV)
                       (begin
                         (g$verify-formals$19798$1i4eWV
                           g$fmls$21941$1i4eWV
                           g$stx$21940$1i4eWV)
                         ((case-lambda
                            ((g$lex*$21948$1i4eWV g$lab*$21949$1i4eWV)
                             (values
                               g$lex*$21948$1i4eWV
                               (g$chi-internal$19807$1i4eWV
                                 (g$add-subst$19270$1i4eWV
                                   (g$make-full-rib$19246$1i4eWV
                                     g$x*$21947$1i4eWV
                                     g$lab*$21949$1i4eWV)
                                   g$body*$21942$1i4eWV)
                                 (g$add-lexicals$19726$1i4eWV
                                   g$lab*$21949$1i4eWV
                                   g$lex*$21948$1i4eWV
                                   g$r$21943$1i4eWV)
                                 g$mr$21944$1i4eWV))))
                          (g$map$11835$1i4eWV
                            g$gen-lexical$19215$1i4eWV
                            g$x*$21947$1i4eWV)
                          (g$map$11835$1i4eWV
                            g$gen-label$19217$1i4eWV
                            g$x*$21947$1i4eWV)))))
                    g$ls/false$21946$1i4eWV)
                  ((case-lambda
                     ((g$t$21950$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$21951$1i4eWV)
                          (if g$ls/false$21951$1i4eWV
                            (apply
                              (case-lambda
                                ((g$x*$21952$1i4eWV g$x$21953$1i4eWV)
                                 (begin
                                   (g$verify-formals$19798$1i4eWV
                                     g$fmls$21941$1i4eWV
                                     g$stx$21940$1i4eWV)
                                   ((case-lambda
                                      ((g$lex*$21954$1i4eWV
                                         g$lab*$21955$1i4eWV
                                         g$lex$21956$1i4eWV
                                         g$lab$21957$1i4eWV)
                                       (values
                                         (append
                                           g$lex*$21954$1i4eWV
                                           g$lex$21956$1i4eWV)
                                         (g$chi-internal$19807$1i4eWV
                                           (g$add-subst$19270$1i4eWV
                                             (g$make-full-rib$19246$1i4eWV
                                               (cons
                                                 g$x$21953$1i4eWV
                                                 g$x*$21952$1i4eWV)
                                               (cons
                                                 g$lab$21957$1i4eWV
                                                 g$lab*$21955$1i4eWV))
                                             g$body*$21942$1i4eWV)
                                           (g$add-lexicals$19726$1i4eWV
                                             (cons
                                               g$lab$21957$1i4eWV
                                               g$lab*$21955$1i4eWV)
                                             (cons
                                               g$lex$21956$1i4eWV
                                               g$lex*$21954$1i4eWV)
                                             g$r$21943$1i4eWV)
                                           g$mr$21944$1i4eWV))))
                                    (g$map$11835$1i4eWV
                                      g$gen-lexical$19215$1i4eWV
                                      g$x*$21952$1i4eWV)
                                    (g$map$11835$1i4eWV
                                      g$gen-label$19217$1i4eWV
                                      g$x*$21952$1i4eWV)
                                    (g$gen-lexical$19215$1i4eWV
                                      g$x$21953$1i4eWV)
                                    (g$gen-label$19217$1i4eWV
                                      g$x$21953$1i4eWV)))))
                              g$ls/false$21951$1i4eWV)
                            ((case-lambda
                               ((g$t$21958$1i4eWV)
                                ((case-lambda
                                   ((g$ls/false$21959$1i4eWV)
                                    (if g$ls/false$21959$1i4eWV
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$19897$1i4eWV
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$21941$1i4eWV)))
                                        g$ls/false$21959$1i4eWV)
                                      (g$syntax-violation$19897$1i4eWV
                                        '#f
                                        '"invalid syntax"
                                        g$t$21958$1i4eWV))))
                                 (g$syntax-dispatch$19778$1i4eWV
                                   g$t$21958$1i4eWV
                                   '_))))
                             g$t$21950$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$21950$1i4eWV
                         '#(each+ any () any)))))
                   g$t$21945$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$21945$1i4eWV
               'each-any))))
         g$fmls$21941$1i4eWV))))
   (g$chi-lambda-clause*$19800$1i4eWV
     g$chi-lambda-clause*$23396$1i4eWV
     (case-lambda
       ((g$stx$21960$1i4eWV
          g$fmls*$21961$1i4eWV
          g$body**$21962$1i4eWV
          g$r$21963$1i4eWV
          g$mr$21964$1i4eWV)
        (if (null? g$fmls*$21961$1i4eWV)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$19799$1i4eWV
                 g$stx$21960$1i4eWV
                 (car g$fmls*$21961$1i4eWV)
                 (car g$body**$21962$1i4eWV)
                 g$r$21963$1i4eWV
                 g$mr$21964$1i4eWV)))
            (case-lambda
              ((g$a$21967$1i4eWV g$b$21968$1i4eWV)
               ((case-lambda
                  ((g$b$21969$1i4eWV g$a$21970$1i4eWV)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$19800$1i4eWV
                          g$stx$21960$1i4eWV
                          (cdr g$fmls*$21961$1i4eWV)
                          (cdr g$body**$21962$1i4eWV)
                          g$r$21963$1i4eWV
                          g$mr$21964$1i4eWV)))
                     (case-lambda
                       ((g$a*$21973$1i4eWV g$b*$21974$1i4eWV)
                        ((case-lambda
                           ((g$b*$21975$1i4eWV g$a*$21976$1i4eWV)
                            (values
                              (cons g$a$21970$1i4eWV g$a*$21976$1i4eWV)
                              (cons
                                g$b$21969$1i4eWV
                                g$b*$21975$1i4eWV))))
                         g$b*$21974$1i4eWV
                         g$a*$21973$1i4eWV))))))
                g$b$21968$1i4eWV
                g$a$21967$1i4eWV))))))))
   (g$chi-defun$19801$1i4eWV
     g$chi-defun$23397$1i4eWV
     (case-lambda
       ((g$x$21977$1i4eWV g$r$21978$1i4eWV g$mr$21979$1i4eWV)
        ((case-lambda
           ((g$fmls$21980$1i4eWV g$body*$21981$1i4eWV)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$19799$1i4eWV
                   g$fmls$21980$1i4eWV
                   g$fmls$21980$1i4eWV
                   g$body*$21981$1i4eWV
                   g$r$21978$1i4eWV
                   g$mr$21979$1i4eWV)))
              (case-lambda
                ((g$fmls$21984$1i4eWV g$body$21985$1i4eWV)
                 ((case-lambda
                    ((g$body$21986$1i4eWV g$fmls$21987$1i4eWV)
                     (g$build-lambda$19202$1i4eWV
                       '#f
                       g$fmls$21987$1i4eWV
                       g$body$21986$1i4eWV)))
                  g$body$21985$1i4eWV
                  g$fmls$21984$1i4eWV))))))
         (car g$x$21977$1i4eWV)
         (cdr g$x$21977$1i4eWV)))))
   (g$chi-rhs$19802$1i4eWV
     g$chi-rhs$23398$1i4eWV
     (case-lambda
       ((g$rhs$21988$1i4eWV g$r$21989$1i4eWV g$mr$21990$1i4eWV)
        ((case-lambda
           ((g$t$21991$1i4eWV)
            (if (eqv? g$t$21991$1i4eWV 'defun)
              (g$chi-defun$19801$1i4eWV
                (cdr g$rhs$21988$1i4eWV)
                g$r$21989$1i4eWV
                g$mr$21990$1i4eWV)
              (if (eqv? g$t$21991$1i4eWV 'expr)
                ((case-lambda
                   ((g$expr$21992$1i4eWV)
                    (g$chi-expr$19796$1i4eWV
                      g$expr$21992$1i4eWV
                      g$r$21989$1i4eWV
                      g$mr$21990$1i4eWV)))
                 (cdr g$rhs$21988$1i4eWV))
                (if (eqv? g$t$21991$1i4eWV 'top-expr)
                  ((case-lambda
                     ((g$expr$21993$1i4eWV)
                      (g$build-sequence$19205$1i4eWV
                        '#f
                        (list
                          (g$chi-expr$19796$1i4eWV
                            g$expr$21993$1i4eWV
                            g$r$21989$1i4eWV
                            g$mr$21990$1i4eWV)
                          (g$build-void$19206$1i4eWV)))))
                   (cdr g$rhs$21988$1i4eWV))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$21988$1i4eWV))))))
         (car g$rhs$21988$1i4eWV)))))
   (g$expand-interaction-rhs*/init*$19803$1i4eWV
     g$expand-interaction-rhs*/init*$23399$1i4eWV
     (case-lambda
       ((g$lhs*$21994$1i4eWV
          g$rhs*$21995$1i4eWV
          g$init*$21996$1i4eWV
          g$r$21997$1i4eWV
          g$mr$21998$1i4eWV)
        ((letrec ((g$f$21999$1i4eWV
                    (case-lambda
                      ((g$lhs*$22000$1i4eWV g$rhs*$22001$1i4eWV)
                       (if (null? g$lhs*$22000$1i4eWV)
                         (g$map$11835$1i4eWV
                           (case-lambda
                             ((g$x$22002$1i4eWV)
                              (g$chi-expr$19796$1i4eWV
                                g$x$22002$1i4eWV
                                g$r$21997$1i4eWV
                                g$mr$21998$1i4eWV)))
                           g$init*$21996$1i4eWV)
                         ((case-lambda
                            ((g$lhs$22003$1i4eWV g$rhs$22004$1i4eWV)
                             ((case-lambda
                                ((g$t$22005$1i4eWV)
                                 (if (eqv? g$t$22005$1i4eWV 'defun)
                                   ((case-lambda
                                      ((g$rhs$22006$1i4eWV)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$22003$1i4eWV
                                           g$rhs$22006$1i4eWV)
                                         (g$f$21999$1i4eWV
                                           (cdr g$lhs*$22000$1i4eWV)
                                           (cdr g$rhs*$22001$1i4eWV)))))
                                    (g$chi-defun$19801$1i4eWV
                                      (cdr g$rhs$22004$1i4eWV)
                                      g$r$21997$1i4eWV
                                      g$mr$21998$1i4eWV))
                                   (if (eqv? g$t$22005$1i4eWV 'expr)
                                     ((case-lambda
                                        ((g$rhs$22007$1i4eWV)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$22003$1i4eWV
                                             g$rhs$22007$1i4eWV)
                                           (g$f$21999$1i4eWV
                                             (cdr g$lhs*$22000$1i4eWV)
                                             (cdr g$rhs*$22001$1i4eWV)))))
                                      (g$chi-expr$19796$1i4eWV
                                        (cdr g$rhs$22004$1i4eWV)
                                        g$r$21997$1i4eWV
                                        g$mr$21998$1i4eWV))
                                     (if (eqv?
                                           g$t$22005$1i4eWV
                                           'top-expr)
                                       ((case-lambda
                                          ((g$e$22008$1i4eWV)
                                           (cons
                                             g$e$22008$1i4eWV
                                             (g$f$21999$1i4eWV
                                               (cdr g$lhs*$22000$1i4eWV)
                                               (cdr g$rhs*$22001$1i4eWV)))))
                                        (g$chi-expr$19796$1i4eWV
                                          (cdr g$rhs$22004$1i4eWV)
                                          g$r$21997$1i4eWV
                                          g$mr$21998$1i4eWV))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$22004$1i4eWV))))))
                              (car g$rhs$22004$1i4eWV))))
                          (car g$lhs*$22000$1i4eWV)
                          (car g$rhs*$22001$1i4eWV)))))))
           g$f$21999$1i4eWV)
         g$lhs*$21994$1i4eWV
         g$rhs*$21995$1i4eWV))))
   (g$chi-rhs*$19804$1i4eWV
     g$chi-rhs*$23400$1i4eWV
     (case-lambda
       ((g$rhs*$22009$1i4eWV g$r$22010$1i4eWV g$mr$22011$1i4eWV)
        ((letrec ((g$f$22012$1i4eWV
                    (case-lambda
                      ((g$ls$22013$1i4eWV)
                       (if (null? g$ls$22013$1i4eWV)
                         '()
                         ((case-lambda
                            ((g$a$22014$1i4eWV)
                             (cons
                               g$a$22014$1i4eWV
                               (g$f$22012$1i4eWV
                                 (cdr g$ls$22013$1i4eWV)))))
                          (g$chi-rhs$19802$1i4eWV
                            (car g$ls$22013$1i4eWV)
                            g$r$22010$1i4eWV
                            g$mr$22011$1i4eWV)))))))
           g$f$22012$1i4eWV)
         g$rhs*$22009$1i4eWV))))
   (g$find-bound=?$19805$1i4eWV
     g$find-bound=?$23401$1i4eWV
     (case-lambda
       ((g$x$22015$1i4eWV g$lhs*$22016$1i4eWV g$rhs*$22017$1i4eWV)
        (if (null? g$lhs*$22016$1i4eWV)
          '#f
          (if (g$bound-id=?$19283$1i4eWV
                g$x$22015$1i4eWV
                (car g$lhs*$22016$1i4eWV))
            (car g$rhs*$22017$1i4eWV)
            (g$find-bound=?$19805$1i4eWV
              g$x$22015$1i4eWV
              (cdr g$lhs*$22016$1i4eWV)
              (cdr g$rhs*$22017$1i4eWV)))))))
   (g$find-dups$19806$1i4eWV
     g$find-dups$23402$1i4eWV
     (case-lambda
       ((g$ls$22018$1i4eWV)
        ((letrec ((g$f$22019$1i4eWV
                    (case-lambda
                      ((g$ls$22020$1i4eWV g$dups$22021$1i4eWV)
                       (if (null? g$ls$22020$1i4eWV)
                         g$dups$22021$1i4eWV
                         ((case-lambda
                            ((g$t$22022$1i4eWV)
                             (if g$t$22022$1i4eWV
                               ((case-lambda
                                  ((g$x$22023$1i4eWV)
                                   (g$f$22019$1i4eWV
                                     (cdr g$ls$22020$1i4eWV)
                                     (cons
                                       (list
                                         (car g$ls$22020$1i4eWV)
                                         g$x$22023$1i4eWV)
                                       g$dups$22021$1i4eWV))))
                                g$t$22022$1i4eWV)
                               (g$f$22019$1i4eWV
                                 (cdr g$ls$22020$1i4eWV)
                                 g$dups$22021$1i4eWV))))
                          (g$find-bound=?$19805$1i4eWV
                            (car g$ls$22020$1i4eWV)
                            (cdr g$ls$22020$1i4eWV)
                            (cdr g$ls$22020$1i4eWV))))))))
           g$f$22019$1i4eWV)
         g$ls$22018$1i4eWV
         '()))))
   (g$chi-internal$19807$1i4eWV
     g$chi-internal$23403$1i4eWV
     (case-lambda
       ((g$e*$22024$1i4eWV g$r$22025$1i4eWV g$mr$22026$1i4eWV)
        ((case-lambda
           ((g$rib$22027$1i4eWV)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$19825$1i4eWV
                   (g$map$11835$1i4eWV
                     (case-lambda
                       ((g$x$22036$1i4eWV)
                        (g$add-subst$19270$1i4eWV
                          g$rib$22027$1i4eWV
                          g$x$22036$1i4eWV)))
                     (g$syntax->list$19279$1i4eWV g$e*$22024$1i4eWV))
                   g$r$22025$1i4eWV
                   g$mr$22026$1i4eWV
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$22027$1i4eWV
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$22037$1i4eWV
                   g$r$22038$1i4eWV
                   g$mr$22039$1i4eWV
                   g$lex*$22040$1i4eWV
                   g$rhs*$22041$1i4eWV
                   g$mod**$22042$1i4eWV
                   g$kwd*$22043$1i4eWV
                   g$_exp*$22044$1i4eWV)
                 ((case-lambda
                    ((g$_exp*$22045$1i4eWV
                       g$kwd*$22046$1i4eWV
                       g$mod**$22047$1i4eWV
                       g$rhs*$22048$1i4eWV
                       g$lex*$22049$1i4eWV
                       g$mr$22050$1i4eWV
                       g$r$22051$1i4eWV
                       g$e*$22052$1i4eWV)
                     (begin
                       (if (null? g$e*$22052$1i4eWV)
                         (g$syntax-violation$19897$1i4eWV
                           '#f
                           '"no expression in body"
                           g$e*$22052$1i4eWV)
                         (void))
                       ((case-lambda
                          ((g$init*$22053$1i4eWV)
                           ((case-lambda
                              ((g$rhs*$22054$1i4eWV)
                               (g$build-letrec*$19208$1i4eWV
                                 '#f
                                 (g$reverse$12684$1i4eWV
                                   g$lex*$22049$1i4eWV)
                                 (g$reverse$12684$1i4eWV
                                   g$rhs*$22054$1i4eWV)
                                 (g$build-sequence$19205$1i4eWV
                                   '#f
                                   g$init*$22053$1i4eWV))))
                            (g$chi-rhs*$19804$1i4eWV
                              g$rhs*$22048$1i4eWV
                              g$r$22051$1i4eWV
                              g$mr$22050$1i4eWV))))
                        (g$chi-expr*$19794$1i4eWV
                          (append
                            (apply
                              append
                              (g$reverse$12684$1i4eWV
                                g$mod**$22047$1i4eWV))
                            g$e*$22052$1i4eWV)
                          g$r$22051$1i4eWV
                          g$mr$22050$1i4eWV)))))
                  g$_exp*$22044$1i4eWV
                  g$kwd*$22043$1i4eWV
                  g$mod**$22042$1i4eWV
                  g$rhs*$22041$1i4eWV
                  g$lex*$22040$1i4eWV
                  g$mr$22039$1i4eWV
                  g$r$22038$1i4eWV
                  g$e*$22037$1i4eWV))))))
         (g$make-empty-rib$19238$1i4eWV)))))
   (g$parse-module$19808$1i4eWV
     g$parse-module$23404$1i4eWV
     (case-lambda
       ((g$e$22055$1i4eWV)
        ((case-lambda
           ((g$t$22056$1i4eWV)
            ((case-lambda
               ((g$ls/false$22057$1i4eWV)
                (if g$ls/false$22057$1i4eWV
                  (apply
                    (case-lambda
                      ((g$export*$22058$1i4eWV g$b*$22059$1i4eWV)
                       (begin
                         (if (not (g$for-all$11833$1i4eWV
                                    g$id?$19280$1i4eWV
                                    g$export*$22058$1i4eWV))
                           (g$syntax-violation$19897$1i4eWV
                             '#f
                             '"module exports must be identifiers"
                             g$e$22055$1i4eWV)
                           (void))
                         (values
                           '#f
                           (g$list->vector$12678$1i4eWV
                             g$export*$22058$1i4eWV)
                           g$b*$22059$1i4eWV))))
                    g$ls/false$22057$1i4eWV)
                  ((case-lambda
                     ((g$t$22060$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$22061$1i4eWV)
                          (if g$ls/false$22061$1i4eWV
                            (apply
                              (case-lambda
                                ((g$name$22062$1i4eWV
                                   g$export*$22063$1i4eWV
                                   g$b*$22064$1i4eWV)
                                 (begin
                                   (if (not (g$id?$19280$1i4eWV
                                              g$name$22062$1i4eWV))
                                     (g$syntax-violation$19897$1i4eWV
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$22055$1i4eWV)
                                     (void))
                                   (if (not (g$for-all$11833$1i4eWV
                                              g$id?$19280$1i4eWV
                                              g$export*$22063$1i4eWV))
                                     (g$syntax-violation$19897$1i4eWV
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$22055$1i4eWV)
                                     (void))
                                   (values
                                     g$name$22062$1i4eWV
                                     (g$list->vector$12678$1i4eWV
                                       g$export*$22063$1i4eWV)
                                     g$b*$22064$1i4eWV))))
                              g$ls/false$22061$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$22060$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$22060$1i4eWV
                         '(_ any each-any . each-any)))))
                   g$t$22056$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$22056$1i4eWV
               '(_ each-any . each-any)))))
         g$e$22055$1i4eWV))))
   (g$9552$19809$1i4eWV
     g$9552$23405$1i4eWV
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9555$1i4eWV
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$9554$19810$1i4eWV g$9554$23406$1i4eWV '#f)
   (g$9553$19811$1i4eWV
     g$9553$23407$1i4eWV
     (make-record-constructor-descriptor
       g$9552$19809$1i4eWV
       '#f
       g$9554$19810$1i4eWV))
   (g$module-interface?$19814$1i4eWV
     g$module-interface?$23408$1i4eWV
     (record-predicate g$9552$19809$1i4eWV))
   (g$make-module-interface$19815$1i4eWV
     g$make-module-interface$23409$1i4eWV
     (record-constructor g$9553$19811$1i4eWV))
   (g$module-interface-first-mark$19816$1i4eWV
     g$module-interface-first-mark$23410$1i4eWV
     (record-accessor g$9552$19809$1i4eWV '0))
   (g$module-interface-exp-id-vec$19817$1i4eWV
     g$module-interface-exp-id-vec$23411$1i4eWV
     (record-accessor g$9552$19809$1i4eWV '1))
   (g$module-interface-exp-lab-vec$19818$1i4eWV
     g$module-interface-exp-lab-vec$23412$1i4eWV
     (record-accessor g$9552$19809$1i4eWV '2))
   (g$set-module-interface-first-mark!$19819$1i4eWV
     g$set-module-interface-first-mark!$23413$1i4eWV
     (record-mutator g$9552$19809$1i4eWV '0))
   (g$set-module-interface-exp-id-vec!$19820$1i4eWV
     g$set-module-interface-exp-id-vec!$23414$1i4eWV
     (record-mutator g$9552$19809$1i4eWV '1))
   (g$set-module-interface-exp-lab-vec!$19821$1i4eWV
     g$set-module-interface-exp-lab-vec!$23415$1i4eWV
     (record-mutator g$9552$19809$1i4eWV '2))
   (g$module-interface-exp-id*$19822$1i4eWV
     g$module-interface-exp-id*$23416$1i4eWV
     (case-lambda
       ((g$iface$22065$1i4eWV g$id$22066$1i4eWV)
        (letrec* ((g$diff-marks$22067$1i4eWV
                    (case-lambda
                      ((g$ls$22071$1i4eWV g$x$22072$1i4eWV)
                       (begin
                         (if (null? g$ls$22071$1i4eWV)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$22073$1i4eWV)
                             (if (eq? g$a$22073$1i4eWV g$x$22072$1i4eWV)
                               '()
                               (cons
                                 g$a$22073$1i4eWV
                                 (g$diff-marks$22067$1i4eWV
                                   (cdr g$ls$22071$1i4eWV)
                                   g$x$22072$1i4eWV)))))
                          (car g$ls$22071$1i4eWV)))))))
          ((case-lambda
             ((g$diff$22068$1i4eWV g$id-vec$22069$1i4eWV)
              (if (null? g$diff$22068$1i4eWV)
                g$id-vec$22069$1i4eWV
                (g$vector-map$12737$1i4eWV
                  (case-lambda
                    ((g$x$22070$1i4eWV)
                     (g$make-stx$19253$1i4eWV
                       (g$stx-expr$19254$1i4eWV g$x$22070$1i4eWV)
                       (append
                         g$diff$22068$1i4eWV
                         (g$stx-mark*$19255$1i4eWV g$x$22070$1i4eWV))
                       '()
                       '())))
                  g$id-vec$22069$1i4eWV))))
           (g$diff-marks$22067$1i4eWV
             (g$stx-mark*$19255$1i4eWV g$id$22066$1i4eWV)
             (g$module-interface-first-mark$19816$1i4eWV
               g$iface$22065$1i4eWV))
           (g$module-interface-exp-id-vec$19817$1i4eWV
             g$iface$22065$1i4eWV))))))
   (g$syntax-transpose$19823$1i4eWV
     g$syntax-transpose$23417$1i4eWV
     (case-lambda
       ((g$object$22074$1i4eWV
          g$base-id$22075$1i4eWV
          g$new-id$22076$1i4eWV)
        (letrec* ((g$who$22077$1i4eWV 'syntax-transpose)
                  (g$err$22078$1i4eWV
                    (case-lambda
                      ((g$msg$22120$1i4eWV . g$args$22121$1i4eWV)
                       (apply
                         assertion-violation
                         g$who$22077$1i4eWV
                         g$msg$22120$1i4eWV
                         g$args$22121$1i4eWV))))
                  (g$split$22079$1i4eWV
                    (case-lambda
                      ((g$s*$22113$1i4eWV)
                       (if (eq? (car g$s*$22113$1i4eWV) 'shift)
                         (values (list 'shift) (cdr g$s*$22113$1i4eWV))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$22079$1i4eWV
                                (cdr g$s*$22113$1i4eWV))))
                           (case-lambda
                             ((g$s1*$22116$1i4eWV g$s2*$22117$1i4eWV)
                              ((case-lambda
                                 ((g$s2*$22118$1i4eWV
                                    g$s1*$22119$1i4eWV)
                                  (values
                                    (cons
                                      (car g$s*$22113$1i4eWV)
                                      g$s1*$22119$1i4eWV)
                                    g$s2*$22118$1i4eWV)))
                               g$s2*$22117$1i4eWV
                               g$s1*$22116$1i4eWV))))))))
                  (g$final$22080$1i4eWV
                    (case-lambda
                      ((g$s*$22111$1i4eWV)
                       (if ((case-lambda
                              ((g$t$22112$1i4eWV)
                               (if g$t$22112$1i4eWV
                                 g$t$22112$1i4eWV
                                 (begin
                                   '#f
                                   (eq? (car g$s*$22111$1i4eWV)
                                        'shift)))))
                            (null? g$s*$22111$1i4eWV))
                         '()
                         (cons
                           (car g$s*$22111$1i4eWV)
                           (g$final$22080$1i4eWV
                             (cdr g$s*$22111$1i4eWV)))))))
                  (g$diff$22081$1i4eWV
                    (case-lambda
                      ((g$m$22091$1i4eWV
                         g$m*$22092$1i4eWV
                         g$s*$22093$1i4eWV
                         g$ae*$22094$1i4eWV)
                       (if (null? g$m*$22092$1i4eWV)
                         (g$err$22078$1i4eWV
                           '"unmatched identifiers"
                           g$base-id$22075$1i4eWV
                           g$new-id$22076$1i4eWV)
                         ((case-lambda
                            ((g$m1$22095$1i4eWV)
                             (if (eq? g$m$22091$1i4eWV
                                      g$m1$22095$1i4eWV)
                               (values
                                 '()
                                 (g$final$22080$1i4eWV
                                   g$s*$22093$1i4eWV)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$22079$1i4eWV
                                      g$s*$22093$1i4eWV)))
                                 (case-lambda
                                   ((g$s1*$22098$1i4eWV
                                      g$s2*$22099$1i4eWV)
                                    ((case-lambda
                                       ((g$s2*$22100$1i4eWV
                                          g$s1*$22101$1i4eWV)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$22081$1i4eWV
                                               g$m$22091$1i4eWV
                                               (cdr g$m*$22092$1i4eWV)
                                               g$s2*$22100$1i4eWV
                                               (cdr g$ae*$22094$1i4eWV))))
                                          (case-lambda
                                            ((g$nm*$22105$1i4eWV
                                               g$ns*$22106$1i4eWV
                                               g$nae*$22107$1i4eWV)
                                             ((case-lambda
                                                ((g$nae*$22108$1i4eWV
                                                   g$ns*$22109$1i4eWV
                                                   g$nm*$22110$1i4eWV)
                                                 (values
                                                   (cons
                                                     g$m1$22095$1i4eWV
                                                     g$nm*$22110$1i4eWV)
                                                   (append
                                                     g$s1*$22101$1i4eWV
                                                     g$ns*$22109$1i4eWV)
                                                   (cons
                                                     (car g$ae*$22094$1i4eWV)
                                                     g$nae*$22108$1i4eWV))))
                                              g$nae*$22107$1i4eWV
                                              g$ns*$22106$1i4eWV
                                              g$nm*$22105$1i4eWV))))))
                                     g$s2*$22099$1i4eWV
                                     g$s1*$22098$1i4eWV)))))))
                          (car g$m*$22092$1i4eWV)))))))
          (begin
            (if (not (g$id?$19280$1i4eWV g$base-id$22075$1i4eWV))
              (g$err$22078$1i4eWV
                '"not an identifier"
                g$base-id$22075$1i4eWV)
              (void))
            (if (not (g$id?$19280$1i4eWV g$new-id$22076$1i4eWV))
              (g$err$22078$1i4eWV
                '"not an identifier"
                g$new-id$22076$1i4eWV)
              (void))
            (if (not (g$free-identifier=?$19888$1i4eWV
                       g$base-id$22075$1i4eWV
                       g$new-id$22076$1i4eWV))
              (g$err$22078$1i4eWV
                '"not the same identifier"
                g$base-id$22075$1i4eWV
                g$new-id$22076$1i4eWV)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$22081$1i4eWV
                   (car (g$stx-mark*$19255$1i4eWV
                          g$base-id$22075$1i4eWV))
                   (g$stx-mark*$19255$1i4eWV g$new-id$22076$1i4eWV)
                   (g$stx-subst*$19256$1i4eWV g$new-id$22076$1i4eWV)
                   (g$stx-ae*$19257$1i4eWV g$new-id$22076$1i4eWV))))
              (case-lambda
                ((g$m*$22085$1i4eWV
                   g$s*$22086$1i4eWV
                   g$ae*$22087$1i4eWV)
                 ((case-lambda
                    ((g$ae*$22088$1i4eWV
                       g$s*$22089$1i4eWV
                       g$m*$22090$1i4eWV)
                     (if (if (null? g$m*$22090$1i4eWV)
                           (begin '#f (null? g$s*$22089$1i4eWV))
                           '#f)
                       g$object$22074$1i4eWV
                       (g$mkstx$19268$1i4eWV
                         g$object$22074$1i4eWV
                         g$m*$22090$1i4eWV
                         g$s*$22089$1i4eWV
                         g$ae*$22088$1i4eWV))))
                  g$ae*$22087$1i4eWV
                  g$s*$22086$1i4eWV
                  g$m*$22085$1i4eWV)))))))))
   (g$chi-internal-module$19824$1i4eWV
     g$chi-internal-module$23418$1i4eWV
     (case-lambda
       ((g$e$22122$1i4eWV
          g$r$22123$1i4eWV
          g$mr$22124$1i4eWV
          g$lex*$22125$1i4eWV
          g$rhs*$22126$1i4eWV
          g$mod**$22127$1i4eWV
          g$kwd*$22128$1i4eWV)
        (call-with-values
          (case-lambda
            (() (g$parse-module$19808$1i4eWV g$e$22122$1i4eWV)))
          (case-lambda
            ((g$name$22132$1i4eWV
               g$exp-id*$22133$1i4eWV
               g$e*$22134$1i4eWV)
             ((case-lambda
                ((g$e*$22135$1i4eWV
                   g$exp-id*$22136$1i4eWV
                   g$name$22137$1i4eWV)
                 ((case-lambda
                    ((g$rib$22138$1i4eWV)
                     ((case-lambda
                        ((g$e*$22139$1i4eWV)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$19825$1i4eWV
                                g$e*$22139$1i4eWV
                                g$r$22123$1i4eWV
                                g$mr$22124$1i4eWV
                                g$lex*$22125$1i4eWV
                                g$rhs*$22126$1i4eWV
                                g$mod**$22127$1i4eWV
                                g$kwd*$22128$1i4eWV
                                '()
                                g$rib$22138$1i4eWV
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$22148$1i4eWV
                                g$r$22149$1i4eWV
                                g$mr$22150$1i4eWV
                                g$lex*$22151$1i4eWV
                                g$rhs*$22152$1i4eWV
                                g$mod**$22153$1i4eWV
                                g$kwd*$22154$1i4eWV
                                g$_exp*$22155$1i4eWV)
                              ((case-lambda
                                 ((g$_exp*$22156$1i4eWV
                                    g$kwd*$22157$1i4eWV
                                    g$mod**$22158$1i4eWV
                                    g$rhs*$22159$1i4eWV
                                    g$lex*$22160$1i4eWV
                                    g$mr$22161$1i4eWV
                                    g$r$22162$1i4eWV
                                    g$e*$22163$1i4eWV)
                                  ((case-lambda
                                     ((g$exp-lab*$22164$1i4eWV
                                        g$mod**$22165$1i4eWV)
                                      (if (not g$name$22137$1i4eWV)
                                        (values
                                          g$lex*$22160$1i4eWV
                                          g$rhs*$22159$1i4eWV
                                          g$exp-id*$22136$1i4eWV
                                          g$exp-lab*$22164$1i4eWV
                                          g$r$22162$1i4eWV
                                          g$mr$22161$1i4eWV
                                          g$mod**$22165$1i4eWV
                                          g$kwd*$22157$1i4eWV)
                                        ((case-lambda
                                           ((g$lab$22166$1i4eWV
                                              g$iface$22167$1i4eWV)
                                            (values
                                              g$lex*$22160$1i4eWV
                                              g$rhs*$22159$1i4eWV
                                              (vector
                                                g$name$22137$1i4eWV)
                                              (vector
                                                g$lab$22166$1i4eWV)
                                              (cons
                                                (cons
                                                  g$lab$22166$1i4eWV
                                                  (cons
                                                    '$module
                                                    g$iface$22167$1i4eWV))
                                                g$r$22162$1i4eWV)
                                              (cons
                                                (cons
                                                  g$lab$22166$1i4eWV
                                                  (cons
                                                    '$module
                                                    g$iface$22167$1i4eWV))
                                                g$mr$22161$1i4eWV)
                                              g$mod**$22165$1i4eWV
                                              g$kwd*$22157$1i4eWV)))
                                         (g$gen-label$19217$1i4eWV
                                           'module)
                                         (g$make-module-interface$19815$1i4eWV
                                           (car (g$stx-mark*$19255$1i4eWV
                                                  g$name$22137$1i4eWV))
                                           (g$vector-map$12737$1i4eWV
                                             (case-lambda
                                               ((g$x$22168$1i4eWV)
                                                (g$make-stx$19253$1i4eWV
                                                  (g$stx-expr$19254$1i4eWV
                                                    g$x$22168$1i4eWV)
                                                  (g$stx-mark*$19255$1i4eWV
                                                    g$x$22168$1i4eWV)
                                                  '()
                                                  '())))
                                             g$exp-id*$22136$1i4eWV)
                                           g$exp-lab*$22164$1i4eWV)))))
                                   (g$vector-map$12737$1i4eWV
                                     (case-lambda
                                       ((g$x$22169$1i4eWV)
                                        ((case-lambda
                                           ((g$t$22170$1i4eWV)
                                            (if g$t$22170$1i4eWV
                                              g$t$22170$1i4eWV
                                              (begin
                                                '#f
                                                (g$syntax-violation$19897$1i4eWV
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$22169$1i4eWV)))))
                                         (g$id->label$19293$1i4eWV
                                           (g$make-stx$19253$1i4eWV
                                             (g$id->sym$19281$1i4eWV
                                               g$x$22169$1i4eWV)
                                             (g$stx-mark*$19255$1i4eWV
                                               g$x$22169$1i4eWV)
                                             (list g$rib$22138$1i4eWV)
                                             '())))))
                                     g$exp-id*$22136$1i4eWV)
                                   (cons
                                     g$e*$22163$1i4eWV
                                     g$mod**$22158$1i4eWV))))
                               g$_exp*$22155$1i4eWV
                               g$kwd*$22154$1i4eWV
                               g$mod**$22153$1i4eWV
                               g$rhs*$22152$1i4eWV
                               g$lex*$22151$1i4eWV
                               g$mr$22150$1i4eWV
                               g$r$22149$1i4eWV
                               g$e*$22148$1i4eWV))))))
                      (g$map$11835$1i4eWV
                        (case-lambda
                          ((g$x$22171$1i4eWV)
                           (g$add-subst$19270$1i4eWV
                             g$rib$22138$1i4eWV
                             g$x$22171$1i4eWV)))
                        (g$syntax->list$19279$1i4eWV
                          g$e*$22135$1i4eWV)))))
                  (g$make-empty-rib$19238$1i4eWV))))
              g$e*$22134$1i4eWV
              g$exp-id*$22133$1i4eWV
              g$name$22132$1i4eWV)))))))
   (g$chi-body*$19825$1i4eWV
     g$chi-body*$23419$1i4eWV
     (case-lambda
       ((g$e*$22172$1i4eWV
          g$r$22173$1i4eWV
          g$mr$22174$1i4eWV
          g$lex*$22175$1i4eWV
          g$rhs*$22176$1i4eWV
          g$mod**$22177$1i4eWV
          g$kwd*$22178$1i4eWV
          g$exp*$22179$1i4eWV
          g$rib$22180$1i4eWV
          g$mix?$22181$1i4eWV
          g$sd?$22182$1i4eWV)
        (if (null? g$e*$22172$1i4eWV)
          (values
            g$e*$22172$1i4eWV
            g$r$22173$1i4eWV
            g$mr$22174$1i4eWV
            g$lex*$22175$1i4eWV
            g$rhs*$22176$1i4eWV
            g$mod**$22177$1i4eWV
            g$kwd*$22178$1i4eWV
            g$exp*$22179$1i4eWV)
          ((case-lambda
             ((g$e$22183$1i4eWV)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$19300$1i4eWV
                     g$e$22183$1i4eWV
                     g$r$22173$1i4eWV)))
                (case-lambda
                  ((g$type$22187$1i4eWV
                     g$value$22188$1i4eWV
                     g$kwd$22189$1i4eWV)
                   ((case-lambda
                      ((g$kwd$22190$1i4eWV
                         g$value$22191$1i4eWV
                         g$type$22192$1i4eWV)
                       ((case-lambda
                          ((g$kwd*$22193$1i4eWV)
                           ((case-lambda
                              ((g$t$22194$1i4eWV)
                               (if (eqv? g$t$22194$1i4eWV 'define)
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$19718$1i4eWV
                                        g$e$22183$1i4eWV)))
                                   (case-lambda
                                     ((g$id$22197$1i4eWV
                                        g$rhs$22198$1i4eWV)
                                      ((case-lambda
                                         ((g$rhs$22199$1i4eWV
                                            g$id$22200$1i4eWV)
                                          (begin
                                            (if (g$bound-id-member?$19287$1i4eWV
                                                  g$id$22200$1i4eWV
                                                  g$kwd*$22193$1i4eWV)
                                              (g$syntax-violation$19897$1i4eWV
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$22183$1i4eWV)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$19219$1i4eWV
                                                   g$id$22200$1i4eWV
                                                   g$rib$22180$1i4eWV
                                                   g$sd?$22182$1i4eWV)))
                                              (case-lambda
                                                ((g$lab$22203$1i4eWV
                                                   g$lex$22204$1i4eWV)
                                                 ((case-lambda
                                                    ((g$lex$22205$1i4eWV
                                                       g$lab$22206$1i4eWV)
                                                     (begin
                                                       (g$extend-rib!$19241$1i4eWV
                                                         g$rib$22180$1i4eWV
                                                         g$id$22200$1i4eWV
                                                         g$lab$22206$1i4eWV
                                                         g$sd?$22182$1i4eWV)
                                                       (g$chi-body*$19825$1i4eWV
                                                         (cdr g$e*$22172$1i4eWV)
                                                         (g$add-lexical$19725$1i4eWV
                                                           g$lab$22206$1i4eWV
                                                           g$lex$22205$1i4eWV
                                                           g$r$22173$1i4eWV)
                                                         g$mr$22174$1i4eWV
                                                         (cons
                                                           g$lex$22205$1i4eWV
                                                           g$lex*$22175$1i4eWV)
                                                         (cons
                                                           g$rhs$22199$1i4eWV
                                                           g$rhs*$22176$1i4eWV)
                                                         g$mod**$22177$1i4eWV
                                                         g$kwd*$22193$1i4eWV
                                                         g$exp*$22179$1i4eWV
                                                         g$rib$22180$1i4eWV
                                                         g$mix?$22181$1i4eWV
                                                         g$sd?$22182$1i4eWV))))
                                                  g$lex$22204$1i4eWV
                                                  g$lab$22203$1i4eWV)))))))
                                       g$rhs$22198$1i4eWV
                                       g$id$22197$1i4eWV))))
                                 (if (eqv?
                                       g$t$22194$1i4eWV
                                       'define-syntax)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$19719$1i4eWV
                                          g$e$22183$1i4eWV)))
                                     (case-lambda
                                       ((g$id$22209$1i4eWV
                                          g$rhs$22210$1i4eWV)
                                        ((case-lambda
                                           ((g$rhs$22211$1i4eWV
                                              g$id$22212$1i4eWV)
                                            (begin
                                              (if (g$bound-id-member?$19287$1i4eWV
                                                    g$id$22212$1i4eWV
                                                    g$kwd*$22193$1i4eWV)
                                                (g$syntax-violation$19897$1i4eWV
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$22183$1i4eWV)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$22213$1i4eWV)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$22214$1i4eWV)
                                                      (begin
                                                        (g$extend-rib!$19241$1i4eWV
                                                          g$rib$22180$1i4eWV
                                                          g$id$22212$1i4eWV
                                                          g$lab$22213$1i4eWV
                                                          g$sd?$22182$1i4eWV)
                                                        ((case-lambda
                                                           ((g$b$22215$1i4eWV)
                                                            (g$chi-body*$19825$1i4eWV
                                                              (cdr g$e*$22172$1i4eWV)
                                                              (cons
                                                                (cons
                                                                  g$lab$22213$1i4eWV
                                                                  g$b$22215$1i4eWV)
                                                                g$r$22173$1i4eWV)
                                                              (cons
                                                                (cons
                                                                  g$lab$22213$1i4eWV
                                                                  g$b$22215$1i4eWV)
                                                                g$mr$22174$1i4eWV)
                                                              g$lex*$22175$1i4eWV
                                                              g$rhs*$22176$1i4eWV
                                                              g$mod**$22177$1i4eWV
                                                              g$kwd*$22193$1i4eWV
                                                              g$exp*$22179$1i4eWV
                                                              g$rib$22180$1i4eWV
                                                              g$mix?$22181$1i4eWV
                                                              g$sd?$22182$1i4eWV)))
                                                         (g$make-eval-transformer$19328$1i4eWV
                                                           g$expanded-rhs$22214$1i4eWV)))))
                                                   (g$expand-transformer$19826$1i4eWV
                                                     g$rhs$22211$1i4eWV
                                                     g$mr$22174$1i4eWV))))
                                               (g$gen-define-label$19220$1i4eWV
                                                 g$id$22212$1i4eWV
                                                 g$rib$22180$1i4eWV
                                                 g$sd?$22182$1i4eWV)))))
                                         g$rhs$22210$1i4eWV
                                         g$id$22209$1i4eWV))))
                                   (if (g$memv$11828$1i4eWV
                                         g$t$22194$1i4eWV
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$22216$1i4eWV)
                                         ((case-lambda
                                            ((g$ls/false$22217$1i4eWV)
                                             (if (if g$ls/false$22217$1i4eWV
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$22218$1i4eWV
                                                            g$xrhs*$22219$1i4eWV
                                                            g$xbody*$22220$1i4eWV)
                                                          (if (not (g$valid-bound-ids?$19285$1i4eWV
                                                                     g$xlhs*$22218$1i4eWV))
                                                            (g$syntax-violation$19897$1i4eWV
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$22183$1i4eWV)
                                                            (void))))
                                                       g$ls/false$22217$1i4eWV))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$22221$1i4eWV
                                                      g$xrhs*$22222$1i4eWV
                                                      g$xbody*$22223$1i4eWV)
                                                    ((case-lambda
                                                       ((g$xlab*$22224$1i4eWV)
                                                        ((case-lambda
                                                           ((g$xrib$22225$1i4eWV)
                                                            ((case-lambda
                                                               ((g$xb*$22226$1i4eWV)
                                                                (g$chi-body*$19825$1i4eWV
                                                                  (append
                                                                    (g$map$11835$1i4eWV
                                                                      (case-lambda
                                                                        ((g$x$22227$1i4eWV)
                                                                         (g$add-subst$19270$1i4eWV
                                                                           g$xrib$22225$1i4eWV
                                                                           g$x$22227$1i4eWV)))
                                                                      g$xbody*$22223$1i4eWV)
                                                                    (cdr g$e*$22172$1i4eWV))
                                                                  (append
                                                                    (g$map$11835$1i4eWV
                                                                      cons
                                                                      g$xlab*$22224$1i4eWV
                                                                      g$xb*$22226$1i4eWV)
                                                                    g$r$22173$1i4eWV)
                                                                  (append
                                                                    (g$map$11835$1i4eWV
                                                                      cons
                                                                      g$xlab*$22224$1i4eWV
                                                                      g$xb*$22226$1i4eWV)
                                                                    g$mr$22174$1i4eWV)
                                                                  g$lex*$22175$1i4eWV
                                                                  g$rhs*$22176$1i4eWV
                                                                  g$mod**$22177$1i4eWV
                                                                  g$kwd*$22193$1i4eWV
                                                                  g$exp*$22179$1i4eWV
                                                                  g$rib$22180$1i4eWV
                                                                  g$mix?$22181$1i4eWV
                                                                  g$sd?$22182$1i4eWV)))
                                                             (g$map$11835$1i4eWV
                                                               (case-lambda
                                                                 ((g$x$22228$1i4eWV)
                                                                  (g$make-eval-transformer$19328$1i4eWV
                                                                    (g$expand-transformer$19826$1i4eWV
                                                                      (if (eq? g$type$22192$1i4eWV
                                                                               'let-syntax)
                                                                        g$x$22228$1i4eWV
                                                                        (g$add-subst$19270$1i4eWV
                                                                          g$xrib$22225$1i4eWV
                                                                          g$x$22228$1i4eWV))
                                                                      g$mr$22174$1i4eWV))))
                                                               g$xrhs*$22222$1i4eWV))))
                                                         (g$make-full-rib$19246$1i4eWV
                                                           g$xlhs*$22221$1i4eWV
                                                           g$xlab*$22224$1i4eWV))))
                                                     (g$map$11835$1i4eWV
                                                       g$gen-label$19217$1i4eWV
                                                       g$xlhs*$22221$1i4eWV))))
                                                 g$ls/false$22217$1i4eWV)
                                               (g$syntax-violation$19897$1i4eWV
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$22216$1i4eWV))))
                                          (g$syntax-dispatch$19778$1i4eWV
                                            g$t$22216$1i4eWV
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$22183$1i4eWV)
                                     (if (eqv? g$t$22194$1i4eWV 'begin)
                                       ((case-lambda
                                          ((g$t$22229$1i4eWV)
                                           ((case-lambda
                                              ((g$ls/false$22230$1i4eWV)
                                               (if g$ls/false$22230$1i4eWV
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$22231$1i4eWV)
                                                      (g$chi-body*$19825$1i4eWV
                                                        (append
                                                          g$x*$22231$1i4eWV
                                                          (cdr g$e*$22172$1i4eWV))
                                                        g$r$22173$1i4eWV
                                                        g$mr$22174$1i4eWV
                                                        g$lex*$22175$1i4eWV
                                                        g$rhs*$22176$1i4eWV
                                                        g$mod**$22177$1i4eWV
                                                        g$kwd*$22193$1i4eWV
                                                        g$exp*$22179$1i4eWV
                                                        g$rib$22180$1i4eWV
                                                        g$mix?$22181$1i4eWV
                                                        g$sd?$22182$1i4eWV)))
                                                   g$ls/false$22230$1i4eWV)
                                                 (g$syntax-violation$19897$1i4eWV
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$22229$1i4eWV))))
                                            (g$syntax-dispatch$19778$1i4eWV
                                              g$t$22229$1i4eWV
                                              '(_ . each-any)))))
                                        g$e$22183$1i4eWV)
                                       (if (g$memv$11828$1i4eWV
                                             g$t$22194$1i4eWV
                                             '(global-macro
                                                global-macro!))
                                         (g$chi-body*$19825$1i4eWV
                                           (cons
                                             (g$add-subst$19270$1i4eWV
                                               g$rib$22180$1i4eWV
                                               (g$chi-global-macro$19793$1i4eWV
                                                 g$value$22191$1i4eWV
                                                 g$e$22183$1i4eWV
                                                 g$r$22173$1i4eWV))
                                             (cdr g$e*$22172$1i4eWV))
                                           g$r$22173$1i4eWV
                                           g$mr$22174$1i4eWV
                                           g$lex*$22175$1i4eWV
                                           g$rhs*$22176$1i4eWV
                                           g$mod**$22177$1i4eWV
                                           g$kwd*$22193$1i4eWV
                                           g$exp*$22179$1i4eWV
                                           g$rib$22180$1i4eWV
                                           g$mix?$22181$1i4eWV
                                           g$sd?$22182$1i4eWV)
                                         (if (g$memv$11828$1i4eWV
                                               g$t$22194$1i4eWV
                                               '(local-macro
                                                  local-macro!))
                                           (g$chi-body*$19825$1i4eWV
                                             (cons
                                               (g$add-subst$19270$1i4eWV
                                                 g$rib$22180$1i4eWV
                                                 (g$chi-local-macro$19792$1i4eWV
                                                   g$value$22191$1i4eWV
                                                   g$e$22183$1i4eWV
                                                   g$r$22173$1i4eWV))
                                               (cdr g$e*$22172$1i4eWV))
                                             g$r$22173$1i4eWV
                                             g$mr$22174$1i4eWV
                                             g$lex*$22175$1i4eWV
                                             g$rhs*$22176$1i4eWV
                                             g$mod**$22177$1i4eWV
                                             g$kwd*$22193$1i4eWV
                                             g$exp*$22179$1i4eWV
                                             g$rib$22180$1i4eWV
                                             g$mix?$22181$1i4eWV
                                             g$sd?$22182$1i4eWV)
                                           (if (g$memv$11828$1i4eWV
                                                 g$t$22194$1i4eWV
                                                 '(macro macro!))
                                             (g$chi-body*$19825$1i4eWV
                                               (cons
                                                 (g$add-subst$19270$1i4eWV
                                                   g$rib$22180$1i4eWV
                                                   (g$chi-macro$19791$1i4eWV
                                                     g$value$22191$1i4eWV
                                                     g$e$22183$1i4eWV
                                                     g$r$22173$1i4eWV))
                                                 (cdr g$e*$22172$1i4eWV))
                                               g$r$22173$1i4eWV
                                               g$mr$22174$1i4eWV
                                               g$lex*$22175$1i4eWV
                                               g$rhs*$22176$1i4eWV
                                               g$mod**$22177$1i4eWV
                                               g$kwd*$22193$1i4eWV
                                               g$exp*$22179$1i4eWV
                                               g$rib$22180$1i4eWV
                                               g$mix?$22181$1i4eWV
                                               g$sd?$22182$1i4eWV)
                                             (if (eqv?
                                                   g$t$22194$1i4eWV
                                                   'module)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$19824$1i4eWV
                                                      g$e$22183$1i4eWV
                                                      g$r$22173$1i4eWV
                                                      g$mr$22174$1i4eWV
                                                      g$lex*$22175$1i4eWV
                                                      g$rhs*$22176$1i4eWV
                                                      g$mod**$22177$1i4eWV
                                                      g$kwd*$22193$1i4eWV)))
                                                 (case-lambda
                                                   ((g$lex*$22240$1i4eWV
                                                      g$rhs*$22241$1i4eWV
                                                      g$m-exp-id*$22242$1i4eWV
                                                      g$m-exp-lab*$22243$1i4eWV
                                                      g$r$22244$1i4eWV
                                                      g$mr$22245$1i4eWV
                                                      g$mod**$22246$1i4eWV
                                                      g$kwd*$22247$1i4eWV)
                                                    ((case-lambda
                                                       ((g$kwd*$22248$1i4eWV
                                                          g$mod**$22249$1i4eWV
                                                          g$mr$22250$1i4eWV
                                                          g$r$22251$1i4eWV
                                                          g$m-exp-lab*$22252$1i4eWV
                                                          g$m-exp-id*$22253$1i4eWV
                                                          g$rhs*$22254$1i4eWV
                                                          g$lex*$22255$1i4eWV)
                                                        (begin
                                                          (g$vector-for-each$12738$1i4eWV
                                                            (case-lambda
                                                              ((g$id$22256$1i4eWV
                                                                 g$lab$22257$1i4eWV)
                                                               (g$extend-rib!$19241$1i4eWV
                                                                 g$rib$22180$1i4eWV
                                                                 g$id$22256$1i4eWV
                                                                 g$lab$22257$1i4eWV
                                                                 g$sd?$22182$1i4eWV)))
                                                            g$m-exp-id*$22253$1i4eWV
                                                            g$m-exp-lab*$22252$1i4eWV)
                                                          (g$chi-body*$19825$1i4eWV
                                                            (cdr g$e*$22172$1i4eWV)
                                                            g$r$22251$1i4eWV
                                                            g$mr$22250$1i4eWV
                                                            g$lex*$22255$1i4eWV
                                                            g$rhs*$22254$1i4eWV
                                                            g$mod**$22249$1i4eWV
                                                            g$kwd*$22248$1i4eWV
                                                            g$exp*$22179$1i4eWV
                                                            g$rib$22180$1i4eWV
                                                            g$mix?$22181$1i4eWV
                                                            g$sd?$22182$1i4eWV))))
                                                     g$kwd*$22247$1i4eWV
                                                     g$mod**$22246$1i4eWV
                                                     g$mr$22245$1i4eWV
                                                     g$r$22244$1i4eWV
                                                     g$m-exp-lab*$22243$1i4eWV
                                                     g$m-exp-id*$22242$1i4eWV
                                                     g$rhs*$22241$1i4eWV
                                                     g$lex*$22240$1i4eWV))))
                                               (if (eqv?
                                                     g$t$22194$1i4eWV
                                                     'library)
                                                 (begin
                                                   (g$library-expander$19881$1i4eWV
                                                     (g$stx->datum$19291$1i4eWV
                                                       g$e$22183$1i4eWV))
                                                   (g$chi-body*$19825$1i4eWV
                                                     (cdr g$e*$22172$1i4eWV)
                                                     g$r$22173$1i4eWV
                                                     g$mr$22174$1i4eWV
                                                     g$lex*$22175$1i4eWV
                                                     g$rhs*$22176$1i4eWV
                                                     g$mod**$22177$1i4eWV
                                                     g$kwd*$22193$1i4eWV
                                                     g$exp*$22179$1i4eWV
                                                     g$rib$22180$1i4eWV
                                                     g$mix?$22181$1i4eWV
                                                     g$sd?$22182$1i4eWV))
                                                 (if (eqv?
                                                       g$t$22194$1i4eWV
                                                       'export)
                                                   ((case-lambda
                                                      ((g$t$22258$1i4eWV)
                                                       ((case-lambda
                                                          ((g$ls/false$22259$1i4eWV)
                                                           (if g$ls/false$22259$1i4eWV
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$22260$1i4eWV)
                                                                  (g$chi-body*$19825$1i4eWV
                                                                    (cdr g$e*$22172$1i4eWV)
                                                                    g$r$22173$1i4eWV
                                                                    g$mr$22174$1i4eWV
                                                                    g$lex*$22175$1i4eWV
                                                                    g$rhs*$22176$1i4eWV
                                                                    g$mod**$22177$1i4eWV
                                                                    g$kwd*$22193$1i4eWV
                                                                    (append
                                                                      g$exp-decl*$22260$1i4eWV
                                                                      g$exp*$22179$1i4eWV)
                                                                    g$rib$22180$1i4eWV
                                                                    g$mix?$22181$1i4eWV
                                                                    g$sd?$22182$1i4eWV)))
                                                               g$ls/false$22259$1i4eWV)
                                                             (g$syntax-violation$19897$1i4eWV
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$22258$1i4eWV))))
                                                        (g$syntax-dispatch$19778$1i4eWV
                                                          g$t$22258$1i4eWV
                                                          '(_ .
                                                              each-any)))))
                                                    g$e$22183$1i4eWV)
                                                   (if (eqv?
                                                         g$t$22194$1i4eWV
                                                         'import)
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$22261$1i4eWV
                                                                     (case-lambda
                                                                       ((g$e$22303$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$t$22304$1i4eWV)
                                                                            ((case-lambda
                                                                               ((g$ls/false$22305$1i4eWV)
                                                                                (if (if g$ls/false$22305$1i4eWV
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$22306$1i4eWV)
                                                                                             (g$id?$19280$1i4eWV
                                                                                               g$id$22306$1i4eWV)))
                                                                                          g$ls/false$22305$1i4eWV))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$22307$1i4eWV)
                                                                                       '#t))
                                                                                    g$ls/false$22305$1i4eWV)
                                                                                  ((case-lambda
                                                                                     ((g$t$22308$1i4eWV)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$22309$1i4eWV)
                                                                                          (if g$ls/false$22309$1i4eWV
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$22310$1i4eWV)
                                                                                                 '#f))
                                                                                              g$ls/false$22309$1i4eWV)
                                                                                            ((case-lambda
                                                                                               ((g$t$22311$1i4eWV)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$22312$1i4eWV)
                                                                                                    (if g$ls/false$22312$1i4eWV
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$19897$1i4eWV
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$22303$1i4eWV)))
                                                                                                        g$ls/false$22312$1i4eWV)
                                                                                                      (g$syntax-violation$19897$1i4eWV
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$22311$1i4eWV))))
                                                                                                 (g$syntax-dispatch$19778$1i4eWV
                                                                                                   g$t$22311$1i4eWV
                                                                                                   '_))))
                                                                                             g$t$22308$1i4eWV))))
                                                                                       (g$syntax-dispatch$19778$1i4eWV
                                                                                         g$t$22308$1i4eWV
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$22304$1i4eWV))))
                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                               g$t$22304$1i4eWV
                                                                               '(_ any)))))
                                                                         g$e$22303$1i4eWV))))
                                                                   (g$module-import$22262$1i4eWV
                                                                     (case-lambda
                                                                       ((g$e$22286$1i4eWV
                                                                          g$r$22287$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$t$22288$1i4eWV)
                                                                            ((case-lambda
                                                                               ((g$ls/false$22289$1i4eWV)
                                                                                (if (if g$ls/false$22289$1i4eWV
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$22290$1i4eWV)
                                                                                             (g$id?$19280$1i4eWV
                                                                                               g$id$22290$1i4eWV)))
                                                                                          g$ls/false$22289$1i4eWV))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$22291$1i4eWV)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$19300$1i4eWV
                                                                                              g$id$22291$1i4eWV
                                                                                              g$r$22287$1i4eWV)))
                                                                                         (case-lambda
                                                                                           ((g$type$22295$1i4eWV
                                                                                              g$value$22296$1i4eWV
                                                                                              g$kwd$22297$1i4eWV)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$22298$1i4eWV
                                                                                                  g$value$22299$1i4eWV
                                                                                                  g$type$22300$1i4eWV)
                                                                                                ((case-lambda
                                                                                                   ((g$t$22301$1i4eWV)
                                                                                                    (if (eqv?
                                                                                                          g$t$22301$1i4eWV
                                                                                                          '$module)
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$22302$1i4eWV)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$19822$1i4eWV
                                                                                                              g$iface$22302$1i4eWV
                                                                                                              g$id$22291$1i4eWV)
                                                                                                            (g$module-interface-exp-lab-vec$19818$1i4eWV
                                                                                                              g$iface$22302$1i4eWV))))
                                                                                                       g$value$22299$1i4eWV)
                                                                                                      (g$syntax-violation$19897$1i4eWV
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$22286$1i4eWV))))
                                                                                                 g$type$22300$1i4eWV)))
                                                                                             g$kwd$22297$1i4eWV
                                                                                             g$value$22296$1i4eWV
                                                                                             g$type$22295$1i4eWV))))))
                                                                                    g$ls/false$22289$1i4eWV)
                                                                                  (g$syntax-violation$19897$1i4eWV
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$22288$1i4eWV))))
                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                               g$t$22288$1i4eWV
                                                                               '(_ any)))))
                                                                         g$e$22286$1i4eWV))))
                                                                   (g$library-import$22263$1i4eWV
                                                                     (case-lambda
                                                                       ((g$e$22272$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$t$22273$1i4eWV)
                                                                            ((case-lambda
                                                                               ((g$ls/false$22274$1i4eWV)
                                                                                (if g$ls/false$22274$1i4eWV
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$22275$1i4eWV
                                                                                         g$imp*$22276$1i4eWV)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$19830$1i4eWV
                                                                                              (g$syntax->datum$19900$1i4eWV
                                                                                                g$imp*$22276$1i4eWV))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$22279$1i4eWV
                                                                                              g$subst-labels$22280$1i4eWV)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$22281$1i4eWV
                                                                                                  g$subst-names$22282$1i4eWV)
                                                                                                (values
                                                                                                  (g$vector-map$12737$1i4eWV
                                                                                                    (case-lambda
                                                                                                      ((g$name$22283$1i4eWV)
                                                                                                       (g$datum->stx$19263$1i4eWV
                                                                                                         g$ctxt$22275$1i4eWV
                                                                                                         g$name$22283$1i4eWV)))
                                                                                                    g$subst-names$22282$1i4eWV)
                                                                                                  g$subst-labels$22281$1i4eWV)))
                                                                                             g$subst-labels$22280$1i4eWV
                                                                                             g$subst-names$22279$1i4eWV))))))
                                                                                    g$ls/false$22274$1i4eWV)
                                                                                  ((case-lambda
                                                                                     ((g$t$22284$1i4eWV)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$22285$1i4eWV)
                                                                                          (if g$ls/false$22285$1i4eWV
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$19897$1i4eWV
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$22272$1i4eWV)))
                                                                                              g$ls/false$22285$1i4eWV)
                                                                                            (g$syntax-violation$19897$1i4eWV
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$22284$1i4eWV))))
                                                                                       (g$syntax-dispatch$19778$1i4eWV
                                                                                         g$t$22284$1i4eWV
                                                                                         '_))))
                                                                                   g$t$22273$1i4eWV))))
                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                               g$t$22273$1i4eWV
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$22272$1i4eWV)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$22261$1i4eWV
                                                                        g$e$22183$1i4eWV)
                                                                    (g$module-import$22262$1i4eWV
                                                                      g$e$22183$1i4eWV
                                                                      g$r$22173$1i4eWV)
                                                                    (g$library-import$22263$1i4eWV
                                                                      g$e$22183$1i4eWV))))
                                                               (case-lambda
                                                                 ((g$id*$22266$1i4eWV
                                                                    g$lab*$22267$1i4eWV)
                                                                  ((case-lambda
                                                                     ((g$lab*$22268$1i4eWV
                                                                        g$id*$22269$1i4eWV)
                                                                      (g$vector-for-each$12738$1i4eWV
                                                                        (case-lambda
                                                                          ((g$id$22270$1i4eWV
                                                                             g$lab$22271$1i4eWV)
                                                                           (g$extend-rib!$19241$1i4eWV
                                                                             g$rib$22180$1i4eWV
                                                                             g$id$22270$1i4eWV
                                                                             g$lab$22271$1i4eWV
                                                                             g$sd?$22182$1i4eWV)))
                                                                        g$id*$22269$1i4eWV
                                                                        g$lab*$22268$1i4eWV)))
                                                                   g$lab*$22267$1i4eWV
                                                                   g$id*$22266$1i4eWV))))
                                                             (g$chi-body*$19825$1i4eWV
                                                               (cdr g$e*$22172$1i4eWV)
                                                               g$r$22173$1i4eWV
                                                               g$mr$22174$1i4eWV
                                                               g$lex*$22175$1i4eWV
                                                               g$rhs*$22176$1i4eWV
                                                               g$mod**$22177$1i4eWV
                                                               g$kwd*$22193$1i4eWV
                                                               g$exp*$22179$1i4eWV
                                                               g$rib$22180$1i4eWV
                                                               g$mix?$22181$1i4eWV
                                                               g$sd?$22182$1i4eWV))))))
                                                     (if g$mix?$22181$1i4eWV
                                                       (g$chi-body*$19825$1i4eWV
                                                         (cdr g$e*$22172$1i4eWV)
                                                         g$r$22173$1i4eWV
                                                         g$mr$22174$1i4eWV
                                                         (cons
                                                           (g$gen-lexical$19215$1i4eWV
                                                             'dummy)
                                                           g$lex*$22175$1i4eWV)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$22183$1i4eWV)
                                                           g$rhs*$22176$1i4eWV)
                                                         g$mod**$22177$1i4eWV
                                                         g$kwd*$22193$1i4eWV
                                                         g$exp*$22179$1i4eWV
                                                         g$rib$22180$1i4eWV
                                                         '#t
                                                         g$sd?$22182$1i4eWV)
                                                       (values
                                                         g$e*$22172$1i4eWV
                                                         g$r$22173$1i4eWV
                                                         g$mr$22174$1i4eWV
                                                         g$lex*$22175$1i4eWV
                                                         g$rhs*$22176$1i4eWV
                                                         g$mod**$22177$1i4eWV
                                                         g$kwd*$22193$1i4eWV
                                                         g$exp*$22179$1i4eWV)))))))))))))))
                            g$type$22192$1i4eWV)))
                        (if (g$id?$19280$1i4eWV g$kwd$22190$1i4eWV)
                          (cons g$kwd$22190$1i4eWV g$kwd*$22178$1i4eWV)
                          g$kwd*$22178$1i4eWV))))
                    g$kwd$22189$1i4eWV
                    g$value$22188$1i4eWV
                    g$type$22187$1i4eWV))))))
           (car g$e*$22172$1i4eWV))))))
   (g$expand-transformer$19826$1i4eWV
     g$expand-transformer$23420$1i4eWV
     (case-lambda
       ((g$expr$22313$1i4eWV g$r$22314$1i4eWV)
        ((case-lambda
           ((g$rtc$22315$1i4eWV)
            ((case-lambda
               ((g$expanded-rhs$22316$1i4eWV)
                (begin
                  (g$for-each$11836$1i4eWV
                    ((case-lambda
                       ((g$mark-visit$22317$1i4eWV)
                        (case-lambda
                          ((g$x$22318$1i4eWV)
                           (begin
                             (g$invoke-library$18986$1i4eWV
                               g$x$22318$1i4eWV)
                             (g$mark-visit$22317$1i4eWV
                               g$x$22318$1i4eWV))))))
                     (g$vis-collector$19834$1i4eWV))
                    (g$rtc$22315$1i4eWV))
                  g$expanded-rhs$22316$1i4eWV)))
             ((case-lambda
                ((g$inv-collector$22323$1i4eWV
                   g$vis-collector$22324$1i4eWV
                   g$inv-collector$22325$1i4eWV
                   g$vis-collector$22326$1i4eWV)
                 ((case-lambda
                    ((g$swap$22327$1i4eWV)
                     (dynamic-wind
                       g$swap$22327$1i4eWV
                       (case-lambda
                         (()
                          (g$chi-expr$19796$1i4eWV
                            g$expr$22313$1i4eWV
                            g$r$22314$1i4eWV
                            g$r$22314$1i4eWV)))
                       g$swap$22327$1i4eWV)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$22328$1i4eWV)
                           (begin
                             (g$inv-collector$22323$1i4eWV
                               g$inv-collector$22325$1i4eWV)
                             (set! g$inv-collector$22325$1i4eWV
                               g$t$22328$1i4eWV))))
                        (g$inv-collector$22323$1i4eWV))
                       ((case-lambda
                          ((g$t$22329$1i4eWV)
                           (begin
                             (g$vis-collector$22324$1i4eWV
                               g$vis-collector$22326$1i4eWV)
                             (set! g$vis-collector$22326$1i4eWV
                               g$t$22329$1i4eWV))))
                        (g$vis-collector$22324$1i4eWV))))))))
              g$inv-collector$19833$1i4eWV
              g$vis-collector$19834$1i4eWV
              g$rtc$22315$1i4eWV
              (case-lambda ((g$x$22330$1i4eWV) (values)))))))
         (g$make-collector$19832$1i4eWV)))))
   (g$parse-exports$19827$1i4eWV
     g$parse-exports$23421$1i4eWV
     (case-lambda
       ((g$exp*$22331$1i4eWV)
        ((letrec ((g$f$22332$1i4eWV
                    (case-lambda
                      ((g$exp*$22333$1i4eWV
                         g$int*$22334$1i4eWV
                         g$ext*$22335$1i4eWV)
                       (if (null? g$exp*$22333$1i4eWV)
                         (begin
                           (if (not (g$valid-bound-ids?$19285$1i4eWV
                                      g$ext*$22335$1i4eWV))
                             (g$syntax-violation$19897$1i4eWV
                               'export
                               '"invalid exports"
                               (g$find-dups$19806$1i4eWV
                                 g$ext*$22335$1i4eWV))
                             (void))
                           (values
                             (g$map$11835$1i4eWV
                               g$syntax->datum$19900$1i4eWV
                               g$ext*$22335$1i4eWV)
                             g$int*$22334$1i4eWV))
                         ((case-lambda
                            ((g$t$22336$1i4eWV)
                             ((case-lambda
                                ((g$ls/false$22337$1i4eWV)
                                 (if g$ls/false$22337$1i4eWV
                                   (apply
                                     (case-lambda
                                       ((g$rename$22338$1i4eWV
                                          g$i*$22339$1i4eWV
                                          g$e*$22340$1i4eWV)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$19900$1i4eWV
                                                              g$rename$22338$1i4eWV)
                                                            'rename)
                                                     (if (g$for-all$11833$1i4eWV
                                                           g$id?$19280$1i4eWV
                                                           g$i*$22339$1i4eWV)
                                                       (begin
                                                         '#f
                                                         (g$for-all$11833$1i4eWV
                                                           g$id?$19280$1i4eWV
                                                           g$e*$22340$1i4eWV))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$19897$1i4eWV
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$22333$1i4eWV))
                                            (void))
                                          (g$f$22332$1i4eWV
                                            (cdr g$exp*$22333$1i4eWV)
                                            (append
                                              g$i*$22339$1i4eWV
                                              g$int*$22334$1i4eWV)
                                            (append
                                              g$e*$22340$1i4eWV
                                              g$ext*$22335$1i4eWV)))))
                                     g$ls/false$22337$1i4eWV)
                                   ((case-lambda
                                      ((g$t$22341$1i4eWV)
                                       ((case-lambda
                                          ((g$ls/false$22342$1i4eWV)
                                           (if g$ls/false$22342$1i4eWV
                                             (apply
                                               (case-lambda
                                                 ((g$ie$22343$1i4eWV)
                                                  (begin
                                                    (if (not (g$id?$19280$1i4eWV
                                                               g$ie$22343$1i4eWV))
                                                      (g$syntax-violation$19897$1i4eWV
                                                        'export
                                                        '"invalid export"
                                                        g$ie$22343$1i4eWV)
                                                      (void))
                                                    (g$f$22332$1i4eWV
                                                      (cdr g$exp*$22333$1i4eWV)
                                                      (cons
                                                        g$ie$22343$1i4eWV
                                                        g$int*$22334$1i4eWV)
                                                      (cons
                                                        g$ie$22343$1i4eWV
                                                        g$ext*$22335$1i4eWV)))))
                                               g$ls/false$22342$1i4eWV)
                                             (g$syntax-violation$19897$1i4eWV
                                               '#f
                                               '"invalid syntax"
                                               g$t$22341$1i4eWV))))
                                        (g$syntax-dispatch$19778$1i4eWV
                                          g$t$22341$1i4eWV
                                          'any))))
                                    g$t$22336$1i4eWV))))
                              (g$syntax-dispatch$19778$1i4eWV
                                g$t$22336$1i4eWV
                                '(any . #(each (any any)))))))
                          (car g$exp*$22333$1i4eWV)))))))
           g$f$22332$1i4eWV)
         g$exp*$22331$1i4eWV
         '()
         '()))))
   (g$parse-library-name$19828$1i4eWV
     g$parse-library-name$23422$1i4eWV
     (case-lambda
       ((g$spec$22344$1i4eWV)
        (letrec* ((g$parse$22345$1i4eWV
                    (case-lambda
                      ((g$x$22352$1i4eWV)
                       ((case-lambda
                          ((g$t$22353$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$22354$1i4eWV)
                               (if (if g$ls/false$22354$1i4eWV
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$22355$1i4eWV)
                                            (g$for-all$11833$1i4eWV
                                              (case-lambda
                                                ((g$x$22356$1i4eWV)
                                                 ((case-lambda
                                                    ((g$x$22357$1i4eWV)
                                                     (if (integer?
                                                           g$x$22357$1i4eWV)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$22357$1i4eWV))
                                                       '#f)))
                                                  (g$syntax->datum$19900$1i4eWV
                                                    g$x$22356$1i4eWV))))
                                              g$v*$22355$1i4eWV)))
                                         g$ls/false$22354$1i4eWV))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$22358$1i4eWV)
                                      (values
                                        '()
                                        (g$map$11835$1i4eWV
                                          g$syntax->datum$19900$1i4eWV
                                          g$v*$22358$1i4eWV))))
                                   g$ls/false$22354$1i4eWV)
                                 ((case-lambda
                                    ((g$t$22359$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$22360$1i4eWV)
                                         (if (if g$ls/false$22360$1i4eWV
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$22361$1i4eWV
                                                        g$rest$22362$1i4eWV)
                                                      (g$symbol?$12668$1i4eWV
                                                        (g$syntax->datum$19900$1i4eWV
                                                          g$x$22361$1i4eWV))))
                                                   g$ls/false$22360$1i4eWV))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$22363$1i4eWV
                                                  g$rest$22364$1i4eWV)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$22345$1i4eWV
                                                       g$rest$22364$1i4eWV)))
                                                  (case-lambda
                                                    ((g$x*$22367$1i4eWV
                                                       g$v*$22368$1i4eWV)
                                                     ((case-lambda
                                                        ((g$v*$22369$1i4eWV
                                                           g$x*$22370$1i4eWV)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$19900$1i4eWV
                                                               g$x$22363$1i4eWV)
                                                             g$x*$22370$1i4eWV)
                                                           g$v*$22369$1i4eWV)))
                                                      g$v*$22368$1i4eWV
                                                      g$x*$22367$1i4eWV))))))
                                             g$ls/false$22360$1i4eWV)
                                           ((case-lambda
                                              ((g$t$22371$1i4eWV)
                                               ((case-lambda
                                                  ((g$ls/false$22372$1i4eWV)
                                                   (if g$ls/false$22372$1i4eWV
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$22372$1i4eWV)
                                                     ((case-lambda
                                                        ((g$t$22373$1i4eWV)
                                                         ((case-lambda
                                                            ((g$ls/false$22374$1i4eWV)
                                                             (if g$ls/false$22374$1i4eWV
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$19897$1i4eWV
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$22344$1i4eWV)))
                                                                 g$ls/false$22374$1i4eWV)
                                                               (g$syntax-violation$19897$1i4eWV
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$22373$1i4eWV))))
                                                          (g$syntax-dispatch$19778$1i4eWV
                                                            g$t$22373$1i4eWV
                                                            '_))))
                                                      g$t$22371$1i4eWV))))
                                                (g$syntax-dispatch$19778$1i4eWV
                                                  g$t$22371$1i4eWV
                                                  '()))))
                                            g$t$22359$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$22359$1i4eWV
                                        '(any . any)))))
                                  g$t$22353$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$22353$1i4eWV
                              '(each-any)))))
                        g$x$22352$1i4eWV)))))
          (call-with-values
            (case-lambda
              (() (g$parse$22345$1i4eWV g$spec$22344$1i4eWV)))
            (case-lambda
              ((g$name*$22348$1i4eWV g$ver*$22349$1i4eWV)
               ((case-lambda
                  ((g$ver*$22350$1i4eWV g$name*$22351$1i4eWV)
                   (begin
                     (if (null? g$name*$22351$1i4eWV)
                       (g$syntax-violation$19897$1i4eWV
                         '#f
                         '"empty library name"
                         g$spec$22344$1i4eWV)
                       (void))
                     (values
                       g$name*$22351$1i4eWV
                       g$ver*$22350$1i4eWV))))
                g$ver*$22349$1i4eWV
                g$name*$22348$1i4eWV))))))))
   (g$parse-library$19829$1i4eWV
     g$parse-library$23423$1i4eWV
     (case-lambda
       ((g$e$22375$1i4eWV)
        ((case-lambda
           ((g$t$22376$1i4eWV)
            ((case-lambda
               ((g$ls/false$22377$1i4eWV)
                (if (if g$ls/false$22377$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$22378$1i4eWV
                               g$name*$22379$1i4eWV
                               g$export$22380$1i4eWV
                               g$exp*$22381$1i4eWV
                               g$import$22382$1i4eWV
                               g$imp*$22383$1i4eWV
                               g$b*$22384$1i4eWV)
                             (if (eq? (g$syntax->datum$19900$1i4eWV
                                        g$export$22380$1i4eWV)
                                      'export)
                               (if (eq? (g$syntax->datum$19900$1i4eWV
                                          g$import$22382$1i4eWV)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$19900$1i4eWV
                                          g$library$22378$1i4eWV)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$22377$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$22385$1i4eWV
                         g$name*$22386$1i4eWV
                         g$export$22387$1i4eWV
                         g$exp*$22388$1i4eWV
                         g$import$22389$1i4eWV
                         g$imp*$22390$1i4eWV
                         g$b*$22391$1i4eWV)
                       (values
                         g$name*$22386$1i4eWV
                         g$exp*$22388$1i4eWV
                         g$imp*$22390$1i4eWV
                         g$b*$22391$1i4eWV)))
                    g$ls/false$22377$1i4eWV)
                  ((case-lambda
                     ((g$t$22392$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$22393$1i4eWV)
                          (if g$ls/false$22393$1i4eWV
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$19897$1i4eWV
                                   '#f
                                   '"malformed library"
                                   g$e$22375$1i4eWV)))
                              g$ls/false$22393$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$22392$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$22392$1i4eWV
                         '_))))
                   g$t$22376$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$22376$1i4eWV
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$22375$1i4eWV))))
   (g$parse-import-spec*$19830$1i4eWV
     g$parse-import-spec*$23424$1i4eWV
     (case-lambda
       ((g$imp*$22394$1i4eWV)
        (letrec* ((g$idsyn?$22395$1i4eWV
                    (case-lambda
                      ((g$x$22655$1i4eWV)
                       (g$symbol?$12668$1i4eWV
                         (g$syntax->datum$19900$1i4eWV
                           g$x$22655$1i4eWV)))))
                  (g$dup-error$22396$1i4eWV
                    (case-lambda
                      ((g$name$22654$1i4eWV)
                       (g$syntax-violation$19897$1i4eWV
                         'import
                         '"two imports with different bindings"
                         g$name$22654$1i4eWV))))
                  (g$merge-substs$22397$1i4eWV
                    (case-lambda
                      ((g$s$22645$1i4eWV g$subst$22646$1i4eWV)
                       (letrec* ((g$insert-to-subst$22647$1i4eWV
                                   (case-lambda
                                     ((g$a$22648$1i4eWV
                                        g$subst$22649$1i4eWV)
                                      ((case-lambda
                                         ((g$name$22650$1i4eWV
                                            g$label$22651$1i4eWV)
                                          ((case-lambda
                                             ((g$t$22652$1i4eWV)
                                              (if g$t$22652$1i4eWV
                                                ((case-lambda
                                                   ((g$x$22653$1i4eWV)
                                                    (if (eq? (cdr g$x$22653$1i4eWV)
                                                             g$label$22651$1i4eWV)
                                                      g$subst$22649$1i4eWV
                                                      (g$dup-error$22396$1i4eWV
                                                        g$name$22650$1i4eWV))))
                                                 g$t$22652$1i4eWV)
                                                (cons
                                                  g$a$22648$1i4eWV
                                                  g$subst$22649$1i4eWV))))
                                           (g$assq$11823$1i4eWV
                                             g$name$22650$1i4eWV
                                             g$subst$22649$1i4eWV))))
                                       (car g$a$22648$1i4eWV)
                                       (cdr g$a$22648$1i4eWV))))))
                         (if (null? g$s$22645$1i4eWV)
                           g$subst$22646$1i4eWV
                           (g$insert-to-subst$22647$1i4eWV
                             (car g$s$22645$1i4eWV)
                             (g$merge-substs$22397$1i4eWV
                               (cdr g$s$22645$1i4eWV)
                               g$subst$22646$1i4eWV)))))))
                  (g$exclude*$22398$1i4eWV
                    (case-lambda
                      ((g$sym*$22621$1i4eWV g$subst$22622$1i4eWV)
                       (letrec* ((g$exclude$22623$1i4eWV
                                   (case-lambda
                                     ((g$sym$22636$1i4eWV
                                        g$subst$22637$1i4eWV)
                                      (if (null? g$subst$22637$1i4eWV)
                                        (g$syntax-violation$19897$1i4eWV
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$22636$1i4eWV)
                                        (if (eq? g$sym$22636$1i4eWV
                                                 (g$caar$12685$1i4eWV
                                                   g$subst$22637$1i4eWV))
                                          (values
                                            (g$cdar$12687$1i4eWV
                                              g$subst$22637$1i4eWV)
                                            (cdr g$subst$22637$1i4eWV))
                                          ((case-lambda
                                             ((g$a$22638$1i4eWV)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$22623$1i4eWV
                                                     g$sym$22636$1i4eWV
                                                     (cdr g$subst$22637$1i4eWV))))
                                                (case-lambda
                                                  ((g$old$22641$1i4eWV
                                                     g$subst$22642$1i4eWV)
                                                   ((case-lambda
                                                      ((g$subst$22643$1i4eWV
                                                         g$old$22644$1i4eWV)
                                                       (values
                                                         g$old$22644$1i4eWV
                                                         (cons
                                                           g$a$22638$1i4eWV
                                                           g$subst$22643$1i4eWV))))
                                                    g$subst$22642$1i4eWV
                                                    g$old$22641$1i4eWV))))))
                                           (car g$subst$22637$1i4eWV))))))))
                         (if (null? g$sym*$22621$1i4eWV)
                           (values '() g$subst$22622$1i4eWV)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$22623$1i4eWV
                                  (car g$sym*$22621$1i4eWV)
                                  g$subst$22622$1i4eWV)))
                             (case-lambda
                               ((g$old$22626$1i4eWV
                                  g$subst$22627$1i4eWV)
                                ((case-lambda
                                   ((g$subst$22628$1i4eWV
                                      g$old$22629$1i4eWV)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$22398$1i4eWV
                                           (cdr g$sym*$22621$1i4eWV)
                                           g$subst$22628$1i4eWV)))
                                      (case-lambda
                                        ((g$old*$22632$1i4eWV
                                           g$subst$22633$1i4eWV)
                                         ((case-lambda
                                            ((g$subst$22634$1i4eWV
                                               g$old*$22635$1i4eWV)
                                             (values
                                               (cons
                                                 g$old$22629$1i4eWV
                                                 g$old*$22635$1i4eWV)
                                               g$subst$22634$1i4eWV)))
                                          g$subst$22633$1i4eWV
                                          g$old*$22632$1i4eWV))))))
                                 g$subst$22627$1i4eWV
                                 g$old$22626$1i4eWV)))))))))
                  (g$find*$22399$1i4eWV
                    (case-lambda
                      ((g$sym*$22617$1i4eWV g$subst$22618$1i4eWV)
                       (g$map$11835$1i4eWV
                         (case-lambda
                           ((g$x$22619$1i4eWV)
                            ((case-lambda
                               ((g$t$22620$1i4eWV)
                                (if g$t$22620$1i4eWV
                                  (cdr g$t$22620$1i4eWV)
                                  (g$syntax-violation$19897$1i4eWV
                                    'import
                                    '"cannot find identifier"
                                    g$x$22619$1i4eWV))))
                             (g$assq$11823$1i4eWV
                               g$x$22619$1i4eWV
                               g$subst$22618$1i4eWV))))
                         g$sym*$22617$1i4eWV))))
                  (g$rem*$22400$1i4eWV
                    (case-lambda
                      ((g$sym*$22613$1i4eWV g$subst$22614$1i4eWV)
                       ((letrec ((g$f$22615$1i4eWV
                                   (case-lambda
                                     ((g$subst$22616$1i4eWV)
                                      (if (null? g$subst$22616$1i4eWV)
                                        '()
                                        (if (g$memq$11827$1i4eWV
                                              (g$caar$12685$1i4eWV
                                                g$subst$22616$1i4eWV)
                                              g$sym*$22613$1i4eWV)
                                          (g$f$22615$1i4eWV
                                            (cdr g$subst$22616$1i4eWV))
                                          (cons
                                            (car g$subst$22616$1i4eWV)
                                            (g$f$22615$1i4eWV
                                              (cdr g$subst$22616$1i4eWV)))))))))
                          g$f$22615$1i4eWV)
                        g$subst$22614$1i4eWV))))
                  (g$remove-dups$22401$1i4eWV
                    (case-lambda
                      ((g$ls$22612$1i4eWV)
                       (if (null? g$ls$22612$1i4eWV)
                         '()
                         (if (g$memq$11827$1i4eWV
                               (car g$ls$22612$1i4eWV)
                               (cdr g$ls$22612$1i4eWV))
                           (g$remove-dups$22401$1i4eWV
                             (cdr g$ls$22612$1i4eWV))
                           (cons
                             (car g$ls$22612$1i4eWV)
                             (g$remove-dups$22401$1i4eWV
                               (cdr g$ls$22612$1i4eWV))))))))
                  (g$parse-library-name$22402$1i4eWV
                    (case-lambda
                      ((g$spec$22496$1i4eWV)
                       (letrec* ((g$subversion?$22497$1i4eWV
                                   (case-lambda
                                     ((g$x$22610$1i4eWV)
                                      ((case-lambda
                                         ((g$x$22611$1i4eWV)
                                          (if (integer?
                                                g$x$22611$1i4eWV)
                                            (if (exact?
                                                  g$x$22611$1i4eWV)
                                              (begin
                                                '#f
                                                (>= g$x$22611$1i4eWV
                                                    '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$19900$1i4eWV
                                         g$x$22610$1i4eWV)))))
                                 (g$subversion-pred$22498$1i4eWV
                                   (case-lambda
                                     ((g$x*$22562$1i4eWV)
                                      ((case-lambda
                                         ((g$t$22563$1i4eWV)
                                          ((case-lambda
                                             ((g$ls/false$22564$1i4eWV)
                                              (if (if g$ls/false$22564$1i4eWV
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$22565$1i4eWV)
                                                           (g$subversion?$22497$1i4eWV
                                                             g$n$22565$1i4eWV)))
                                                        g$ls/false$22564$1i4eWV))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$22566$1i4eWV)
                                                     (case-lambda
                                                       ((g$x$22567$1i4eWV)
                                                        (= g$x$22567$1i4eWV
                                                           (g$syntax->datum$19900$1i4eWV
                                                             g$n$22566$1i4eWV))))))
                                                  g$ls/false$22564$1i4eWV)
                                                ((case-lambda
                                                   ((g$t$22568$1i4eWV)
                                                    ((case-lambda
                                                       ((g$ls/false$22569$1i4eWV)
                                                        (if (if g$ls/false$22569$1i4eWV
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$22570$1i4eWV
                                                                       g$sub*$22571$1i4eWV)
                                                                     (eq? (g$syntax->datum$19900$1i4eWV
                                                                            g$p?$22570$1i4eWV)
                                                                          'and)))
                                                                  g$ls/false$22569$1i4eWV))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$22572$1i4eWV
                                                                 g$sub*$22573$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$p*$22574$1i4eWV)
                                                                   (case-lambda
                                                                     ((g$x$22575$1i4eWV)
                                                                      (g$for-all$11833$1i4eWV
                                                                        (case-lambda
                                                                          ((g$p$22576$1i4eWV)
                                                                           (g$p$22576$1i4eWV
                                                                             g$x$22575$1i4eWV)))
                                                                        g$p*$22574$1i4eWV)))))
                                                                (g$map$11835$1i4eWV
                                                                  g$subversion-pred$22498$1i4eWV
                                                                  g$sub*$22573$1i4eWV))))
                                                            g$ls/false$22569$1i4eWV)
                                                          ((case-lambda
                                                             ((g$t$22577$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$ls/false$22578$1i4eWV)
                                                                  (if (if g$ls/false$22578$1i4eWV
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$22579$1i4eWV
                                                                                 g$sub*$22580$1i4eWV)
                                                                               (eq? (g$syntax->datum$19900$1i4eWV
                                                                                      g$p?$22579$1i4eWV)
                                                                                    'or)))
                                                                            g$ls/false$22578$1i4eWV))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$22581$1i4eWV
                                                                           g$sub*$22582$1i4eWV)
                                                                         ((case-lambda
                                                                            ((g$p*$22583$1i4eWV)
                                                                             (case-lambda
                                                                               ((g$x$22584$1i4eWV)
                                                                                (g$exists$11834$1i4eWV
                                                                                  (case-lambda
                                                                                    ((g$p$22585$1i4eWV)
                                                                                     (g$p$22585$1i4eWV
                                                                                       g$x$22584$1i4eWV)))
                                                                                  g$p*$22583$1i4eWV)))))
                                                                          (g$map$11835$1i4eWV
                                                                            g$subversion-pred$22498$1i4eWV
                                                                            g$sub*$22582$1i4eWV))))
                                                                      g$ls/false$22578$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$t$22586$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$ls/false$22587$1i4eWV)
                                                                            (if (if g$ls/false$22587$1i4eWV
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$22588$1i4eWV
                                                                                           g$sub$22589$1i4eWV)
                                                                                         (eq? (g$syntax->datum$19900$1i4eWV
                                                                                                g$p?$22588$1i4eWV)
                                                                                              'not)))
                                                                                      g$ls/false$22587$1i4eWV))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$22590$1i4eWV
                                                                                     g$sub$22591$1i4eWV)
                                                                                   ((case-lambda
                                                                                      ((g$p$22592$1i4eWV)
                                                                                       (case-lambda
                                                                                         ((g$x$22593$1i4eWV)
                                                                                          (not (g$p$22592$1i4eWV
                                                                                                 g$x$22593$1i4eWV))))))
                                                                                    (g$subversion-pred$22498$1i4eWV
                                                                                      g$sub$22591$1i4eWV))))
                                                                                g$ls/false$22587$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$t$22594$1i4eWV)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$22595$1i4eWV)
                                                                                      (if (if g$ls/false$22595$1i4eWV
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$22596$1i4eWV
                                                                                                     g$n$22597$1i4eWV)
                                                                                                   (if (eq? (g$syntax->datum$19900$1i4eWV
                                                                                                              g$p?$22596$1i4eWV)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$22497$1i4eWV
                                                                                                         g$n$22597$1i4eWV))
                                                                                                     '#f)))
                                                                                                g$ls/false$22595$1i4eWV))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$22598$1i4eWV
                                                                                               g$n$22599$1i4eWV)
                                                                                             (case-lambda
                                                                                               ((g$x$22600$1i4eWV)
                                                                                                (<= g$x$22600$1i4eWV
                                                                                                    (g$syntax->datum$19900$1i4eWV
                                                                                                      g$n$22599$1i4eWV))))))
                                                                                          g$ls/false$22595$1i4eWV)
                                                                                        ((case-lambda
                                                                                           ((g$t$22601$1i4eWV)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$22602$1i4eWV)
                                                                                                (if (if g$ls/false$22602$1i4eWV
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$22603$1i4eWV
                                                                                                               g$n$22604$1i4eWV)
                                                                                                             (if (eq? (g$syntax->datum$19900$1i4eWV
                                                                                                                        g$p?$22603$1i4eWV)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$22497$1i4eWV
                                                                                                                   g$n$22604$1i4eWV))
                                                                                                               '#f)))
                                                                                                          g$ls/false$22602$1i4eWV))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$22605$1i4eWV
                                                                                                         g$n$22606$1i4eWV)
                                                                                                       (case-lambda
                                                                                                         ((g$x$22607$1i4eWV)
                                                                                                          (>= g$x$22607$1i4eWV
                                                                                                              (g$syntax->datum$19900$1i4eWV
                                                                                                                g$n$22606$1i4eWV))))))
                                                                                                    g$ls/false$22602$1i4eWV)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$22608$1i4eWV)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$22609$1i4eWV)
                                                                                                          (if g$ls/false$22609$1i4eWV
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$19897$1i4eWV
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$22496$1i4eWV
                                                                                                                   g$x*$22562$1i4eWV)))
                                                                                                              g$ls/false$22609$1i4eWV)
                                                                                                            (g$syntax-violation$19897$1i4eWV
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$22608$1i4eWV))))
                                                                                                       (g$syntax-dispatch$19778$1i4eWV
                                                                                                         g$t$22608$1i4eWV
                                                                                                         '_))))
                                                                                                   g$t$22601$1i4eWV))))
                                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                                               g$t$22601$1i4eWV
                                                                                               '(any any)))))
                                                                                         g$t$22594$1i4eWV))))
                                                                                   (g$syntax-dispatch$19778$1i4eWV
                                                                                     g$t$22594$1i4eWV
                                                                                     '(any any)))))
                                                                               g$t$22586$1i4eWV))))
                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                           g$t$22586$1i4eWV
                                                                           '(any any)))))
                                                                     g$t$22577$1i4eWV))))
                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                 g$t$22577$1i4eWV
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$22568$1i4eWV))))
                                                     (g$syntax-dispatch$19778$1i4eWV
                                                       g$t$22568$1i4eWV
                                                       '(any .
                                                             each-any)))))
                                                 g$t$22563$1i4eWV))))
                                           (g$syntax-dispatch$19778$1i4eWV
                                             g$t$22563$1i4eWV
                                             'any))))
                                       g$x*$22562$1i4eWV))))
                                 (g$version-pred$22499$1i4eWV
                                   (case-lambda
                                     ((g$x*$22522$1i4eWV)
                                      ((case-lambda
                                         ((g$t$22523$1i4eWV)
                                          ((case-lambda
                                             ((g$ls/false$22524$1i4eWV)
                                              (if g$ls/false$22524$1i4eWV
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$22525$1i4eWV)
                                                        '#t))))
                                                  g$ls/false$22524$1i4eWV)
                                                ((case-lambda
                                                   ((g$t$22526$1i4eWV)
                                                    ((case-lambda
                                                       ((g$ls/false$22527$1i4eWV)
                                                        (if (if g$ls/false$22527$1i4eWV
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$22528$1i4eWV
                                                                       g$ver*$22529$1i4eWV)
                                                                     (eq? (g$syntax->datum$19900$1i4eWV
                                                                            g$c$22528$1i4eWV)
                                                                          'and)))
                                                                  g$ls/false$22527$1i4eWV))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$22530$1i4eWV
                                                                 g$ver*$22531$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$p*$22532$1i4eWV)
                                                                   (case-lambda
                                                                     ((g$x$22533$1i4eWV)
                                                                      (g$for-all$11833$1i4eWV
                                                                        (case-lambda
                                                                          ((g$p$22534$1i4eWV)
                                                                           (g$p$22534$1i4eWV
                                                                             g$x$22533$1i4eWV)))
                                                                        g$p*$22532$1i4eWV)))))
                                                                (g$map$11835$1i4eWV
                                                                  g$version-pred$22499$1i4eWV
                                                                  g$ver*$22531$1i4eWV))))
                                                            g$ls/false$22527$1i4eWV)
                                                          ((case-lambda
                                                             ((g$t$22535$1i4eWV)
                                                              ((case-lambda
                                                                 ((g$ls/false$22536$1i4eWV)
                                                                  (if (if g$ls/false$22536$1i4eWV
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$22537$1i4eWV
                                                                                 g$ver*$22538$1i4eWV)
                                                                               (eq? (g$syntax->datum$19900$1i4eWV
                                                                                      g$c$22537$1i4eWV)
                                                                                    'or)))
                                                                            g$ls/false$22536$1i4eWV))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$22539$1i4eWV
                                                                           g$ver*$22540$1i4eWV)
                                                                         ((case-lambda
                                                                            ((g$p*$22541$1i4eWV)
                                                                             (case-lambda
                                                                               ((g$x$22542$1i4eWV)
                                                                                (g$exists$11834$1i4eWV
                                                                                  (case-lambda
                                                                                    ((g$p$22543$1i4eWV)
                                                                                     (g$p$22543$1i4eWV
                                                                                       g$x$22542$1i4eWV)))
                                                                                  g$p*$22541$1i4eWV)))))
                                                                          (g$map$11835$1i4eWV
                                                                            g$version-pred$22499$1i4eWV
                                                                            g$ver*$22540$1i4eWV))))
                                                                      g$ls/false$22536$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$t$22544$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$ls/false$22545$1i4eWV)
                                                                            (if (if g$ls/false$22545$1i4eWV
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$22546$1i4eWV
                                                                                           g$ver$22547$1i4eWV)
                                                                                         (eq? (g$syntax->datum$19900$1i4eWV
                                                                                                g$c$22546$1i4eWV)
                                                                                              'not)))
                                                                                      g$ls/false$22545$1i4eWV))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$22548$1i4eWV
                                                                                     g$ver$22549$1i4eWV)
                                                                                   ((case-lambda
                                                                                      ((g$p$22550$1i4eWV)
                                                                                       (case-lambda
                                                                                         ((g$x$22551$1i4eWV)
                                                                                          (not (g$p$22550$1i4eWV
                                                                                                 g$x$22551$1i4eWV))))))
                                                                                    (g$version-pred$22499$1i4eWV
                                                                                      g$ver$22549$1i4eWV))))
                                                                                g$ls/false$22545$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$t$22552$1i4eWV)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$22553$1i4eWV)
                                                                                      (if g$ls/false$22553$1i4eWV
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$22554$1i4eWV)
                                                                                             ((case-lambda
                                                                                                ((g$p*$22555$1i4eWV)
                                                                                                 (case-lambda
                                                                                                   ((g$x$22556$1i4eWV)
                                                                                                    ((letrec ((g$f$22557$1i4eWV
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$22558$1i4eWV
                                                                                                                     g$x$22559$1i4eWV)
                                                                                                                   (if (null?
                                                                                                                         g$p*$22558$1i4eWV)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$22559$1i4eWV)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$22558$1i4eWV)
                                                                                                                            (car g$x$22559$1i4eWV))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$22557$1i4eWV
                                                                                                                             (cdr g$p*$22558$1i4eWV)
                                                                                                                             (cdr g$x$22559$1i4eWV)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$22557$1i4eWV)
                                                                                                     g$p*$22555$1i4eWV
                                                                                                     g$x$22556$1i4eWV)))))
                                                                                              (g$map$11835$1i4eWV
                                                                                                g$subversion-pred$22498$1i4eWV
                                                                                                g$sub*$22554$1i4eWV))))
                                                                                          g$ls/false$22553$1i4eWV)
                                                                                        ((case-lambda
                                                                                           ((g$t$22560$1i4eWV)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$22561$1i4eWV)
                                                                                                (if g$ls/false$22561$1i4eWV
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$19897$1i4eWV
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$22496$1i4eWV
                                                                                                         g$x*$22522$1i4eWV)))
                                                                                                    g$ls/false$22561$1i4eWV)
                                                                                                  (g$syntax-violation$19897$1i4eWV
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$22560$1i4eWV))))
                                                                                             (g$syntax-dispatch$19778$1i4eWV
                                                                                               g$t$22560$1i4eWV
                                                                                               '_))))
                                                                                         g$t$22552$1i4eWV))))
                                                                                   (g$syntax-dispatch$19778$1i4eWV
                                                                                     g$t$22552$1i4eWV
                                                                                     'each-any))))
                                                                               g$t$22544$1i4eWV))))
                                                                         (g$syntax-dispatch$19778$1i4eWV
                                                                           g$t$22544$1i4eWV
                                                                           '(any any)))))
                                                                     g$t$22535$1i4eWV))))
                                                               (g$syntax-dispatch$19778$1i4eWV
                                                                 g$t$22535$1i4eWV
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$22526$1i4eWV))))
                                                     (g$syntax-dispatch$19778$1i4eWV
                                                       g$t$22526$1i4eWV
                                                       '(any .
                                                             each-any)))))
                                                 g$t$22523$1i4eWV))))
                                           (g$syntax-dispatch$19778$1i4eWV
                                             g$t$22523$1i4eWV
                                             '()))))
                                       g$x*$22522$1i4eWV)))))
                         ((letrec ((g$f$22500$1i4eWV
                                     (case-lambda
                                       ((g$x$22501$1i4eWV)
                                        ((case-lambda
                                           ((g$t$22502$1i4eWV)
                                            ((case-lambda
                                               ((g$ls/false$22503$1i4eWV)
                                                (if g$ls/false$22503$1i4eWV
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$22504$1i4eWV)
                                                       (values
                                                         '()
                                                         (g$version-pred$22499$1i4eWV
                                                           g$version-spec*$22504$1i4eWV))))
                                                    g$ls/false$22503$1i4eWV)
                                                  ((case-lambda
                                                     ((g$t$22505$1i4eWV)
                                                      ((case-lambda
                                                         ((g$ls/false$22506$1i4eWV)
                                                          (if (if g$ls/false$22506$1i4eWV
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$22507$1i4eWV
                                                                         g$x*$22508$1i4eWV)
                                                                       (g$idsyn?$22395$1i4eWV
                                                                         g$x$22507$1i4eWV)))
                                                                    g$ls/false$22506$1i4eWV))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$22509$1i4eWV
                                                                   g$x*$22510$1i4eWV)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$22500$1i4eWV
                                                                        g$x*$22510$1i4eWV)))
                                                                   (case-lambda
                                                                     ((g$name$22513$1i4eWV
                                                                        g$pred$22514$1i4eWV)
                                                                      ((case-lambda
                                                                         ((g$pred$22515$1i4eWV
                                                                            g$name$22516$1i4eWV)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$19900$1i4eWV
                                                                                g$x$22509$1i4eWV)
                                                                              g$name$22516$1i4eWV)
                                                                            g$pred$22515$1i4eWV)))
                                                                       g$pred$22514$1i4eWV
                                                                       g$name$22513$1i4eWV))))))
                                                              g$ls/false$22506$1i4eWV)
                                                            ((case-lambda
                                                               ((g$t$22517$1i4eWV)
                                                                ((case-lambda
                                                                   ((g$ls/false$22518$1i4eWV)
                                                                    (if g$ls/false$22518$1i4eWV
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$22519$1i4eWV)
                                                                                '#t)))))
                                                                        g$ls/false$22518$1i4eWV)
                                                                      ((case-lambda
                                                                         ((g$t$22520$1i4eWV)
                                                                          ((case-lambda
                                                                             ((g$ls/false$22521$1i4eWV)
                                                                              (if g$ls/false$22521$1i4eWV
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$19897$1i4eWV
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$22496$1i4eWV)))
                                                                                  g$ls/false$22521$1i4eWV)
                                                                                (g$syntax-violation$19897$1i4eWV
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$22520$1i4eWV))))
                                                                           (g$syntax-dispatch$19778$1i4eWV
                                                                             g$t$22520$1i4eWV
                                                                             '_))))
                                                                       g$t$22517$1i4eWV))))
                                                                 (g$syntax-dispatch$19778$1i4eWV
                                                                   g$t$22517$1i4eWV
                                                                   '()))))
                                                             g$t$22505$1i4eWV))))
                                                       (g$syntax-dispatch$19778$1i4eWV
                                                         g$t$22505$1i4eWV
                                                         '(any .
                                                               any)))))
                                                   g$t$22502$1i4eWV))))
                                             (g$syntax-dispatch$19778$1i4eWV
                                               g$t$22502$1i4eWV
                                               '(each-any)))))
                                         g$x$22501$1i4eWV)))))
                            g$f$22500$1i4eWV)
                          g$spec$22496$1i4eWV)))))
                  (g$import-library$22403$1i4eWV
                    (case-lambda
                      ((g$spec*$22488$1i4eWV)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$22402$1i4eWV
                              g$spec*$22488$1i4eWV)))
                         (case-lambda
                           ((g$name$22491$1i4eWV g$pred$22492$1i4eWV)
                            ((case-lambda
                               ((g$pred$22493$1i4eWV
                                  g$name$22494$1i4eWV)
                                (begin
                                  (if (null? g$name$22494$1i4eWV)
                                    (g$syntax-violation$19897$1i4eWV
                                      'import
                                      '"empty library name"
                                      g$spec*$22488$1i4eWV)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$22495$1i4eWV)
                                      (begin
                                        (if (not g$lib$22495$1i4eWV)
                                          (g$syntax-violation$19897$1i4eWV
                                            'import
                                            '"cannot find library with required name"
                                            g$name$22494$1i4eWV)
                                          (void))
                                        (if (not (g$pred$22493$1i4eWV
                                                   (g$library-version$18939$1i4eWV
                                                     g$lib$22495$1i4eWV)))
                                          (g$syntax-violation$19897$1i4eWV
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$22488$1i4eWV
                                            g$lib$22495$1i4eWV)
                                          (void))
                                        ((g$imp-collector$19835$1i4eWV)
                                         g$lib$22495$1i4eWV)
                                        (g$library-subst$18943$1i4eWV
                                          g$lib$22495$1i4eWV))))
                                   (g$find-library-by-name$18979$1i4eWV
                                     g$name$22494$1i4eWV)))))
                             g$pred$22492$1i4eWV
                             g$name$22491$1i4eWV)))))))
                  (g$get-import$22404$1i4eWV
                    (case-lambda
                      ((g$spec$22417$1i4eWV)
                       ((case-lambda
                          ((g$t$22418$1i4eWV)
                           ((case-lambda
                              ((g$ls/false$22419$1i4eWV)
                               (if (if g$ls/false$22419$1i4eWV
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$22420$1i4eWV
                                              g$x*$22421$1i4eWV)
                                            (not (g$memq$11827$1i4eWV
                                                   (g$syntax->datum$19900$1i4eWV
                                                     g$x$22420$1i4eWV)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$22419$1i4eWV))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$22422$1i4eWV
                                        g$x*$22423$1i4eWV)
                                      (g$import-library$22403$1i4eWV
                                        (cons
                                          g$x$22422$1i4eWV
                                          g$x*$22423$1i4eWV))))
                                   g$ls/false$22419$1i4eWV)
                                 ((case-lambda
                                    ((g$t$22424$1i4eWV)
                                     ((case-lambda
                                        ((g$ls/false$22425$1i4eWV)
                                         (if (if g$ls/false$22425$1i4eWV
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$22426$1i4eWV
                                                        g$isp$22427$1i4eWV
                                                        g$old*$22428$1i4eWV
                                                        g$new*$22429$1i4eWV)
                                                      (if (eq? (g$syntax->datum$19900$1i4eWV
                                                                 g$rename$22426$1i4eWV)
                                                               'rename)
                                                        (if (g$for-all$11833$1i4eWV
                                                              g$idsyn?$22395$1i4eWV
                                                              g$old*$22428$1i4eWV)
                                                          (begin
                                                            '#f
                                                            (g$for-all$11833$1i4eWV
                                                              g$idsyn?$22395$1i4eWV
                                                              g$new*$22429$1i4eWV))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$22425$1i4eWV))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$22430$1i4eWV
                                                  g$isp$22431$1i4eWV
                                                  g$old*$22432$1i4eWV
                                                  g$new*$22433$1i4eWV)
                                                ((case-lambda
                                                   ((g$subst$22434$1i4eWV
                                                      g$old*$22435$1i4eWV
                                                      g$new*$22436$1i4eWV)
                                                    ((case-lambda
                                                       ((g$old-label*$22437$1i4eWV)
                                                        ((case-lambda
                                                           ((g$subst$22438$1i4eWV)
                                                            (g$merge-substs$22397$1i4eWV
                                                              (g$map$11835$1i4eWV
                                                                cons
                                                                g$new*$22436$1i4eWV
                                                                g$old-label*$22437$1i4eWV)
                                                              g$subst$22438$1i4eWV)))
                                                         (g$rem*$22400$1i4eWV
                                                           g$old*$22435$1i4eWV
                                                           g$subst$22434$1i4eWV))))
                                                     (g$find*$22399$1i4eWV
                                                       g$old*$22435$1i4eWV
                                                       g$subst$22434$1i4eWV))))
                                                 (g$get-import$22404$1i4eWV
                                                   g$isp$22431$1i4eWV)
                                                 (g$map$11835$1i4eWV
                                                   g$syntax->datum$19900$1i4eWV
                                                   g$old*$22432$1i4eWV)
                                                 (g$map$11835$1i4eWV
                                                   g$syntax->datum$19900$1i4eWV
                                                   g$new*$22433$1i4eWV))))
                                             g$ls/false$22425$1i4eWV)
                                           ((case-lambda
                                              ((g$t$22439$1i4eWV)
                                               ((case-lambda
                                                  ((g$ls/false$22440$1i4eWV)
                                                   (if (if g$ls/false$22440$1i4eWV
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$22441$1i4eWV
                                                                  g$isp$22442$1i4eWV
                                                                  g$sym*$22443$1i4eWV)
                                                                (if (eq? (g$syntax->datum$19900$1i4eWV
                                                                           g$except$22441$1i4eWV)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$11833$1i4eWV
                                                                      g$idsyn?$22395$1i4eWV
                                                                      g$sym*$22443$1i4eWV))
                                                                  '#f)))
                                                             g$ls/false$22440$1i4eWV))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$22444$1i4eWV
                                                            g$isp$22445$1i4eWV
                                                            g$sym*$22446$1i4eWV)
                                                          ((case-lambda
                                                             ((g$subst$22447$1i4eWV)
                                                              (g$rem*$22400$1i4eWV
                                                                (g$map$11835$1i4eWV
                                                                  g$syntax->datum$19900$1i4eWV
                                                                  g$sym*$22446$1i4eWV)
                                                                g$subst$22447$1i4eWV)))
                                                           (g$get-import$22404$1i4eWV
                                                             g$isp$22445$1i4eWV))))
                                                       g$ls/false$22440$1i4eWV)
                                                     ((case-lambda
                                                        ((g$t$22448$1i4eWV)
                                                         ((case-lambda
                                                            ((g$ls/false$22449$1i4eWV)
                                                             (if (if g$ls/false$22449$1i4eWV
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$22450$1i4eWV
                                                                            g$isp$22451$1i4eWV
                                                                            g$sym*$22452$1i4eWV)
                                                                          (if (eq? (g$syntax->datum$19900$1i4eWV
                                                                                     g$only$22450$1i4eWV)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$11833$1i4eWV
                                                                                g$idsyn?$22395$1i4eWV
                                                                                g$sym*$22452$1i4eWV))
                                                                            '#f)))
                                                                       g$ls/false$22449$1i4eWV))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$22453$1i4eWV
                                                                      g$isp$22454$1i4eWV
                                                                      g$sym*$22455$1i4eWV)
                                                                    ((case-lambda
                                                                       ((g$subst$22456$1i4eWV
                                                                          g$sym*$22457$1i4eWV)
                                                                        ((case-lambda
                                                                           ((g$sym*$22458$1i4eWV)
                                                                            ((case-lambda
                                                                               ((g$lab*$22459$1i4eWV)
                                                                                (g$map$11835$1i4eWV
                                                                                  cons
                                                                                  g$sym*$22458$1i4eWV
                                                                                  g$lab*$22459$1i4eWV)))
                                                                             (g$find*$22399$1i4eWV
                                                                               g$sym*$22458$1i4eWV
                                                                               g$subst$22456$1i4eWV))))
                                                                         (g$remove-dups$22401$1i4eWV
                                                                           g$sym*$22457$1i4eWV))))
                                                                     (g$get-import$22404$1i4eWV
                                                                       g$isp$22454$1i4eWV)
                                                                     (g$map$11835$1i4eWV
                                                                       g$syntax->datum$19900$1i4eWV
                                                                       g$sym*$22455$1i4eWV))))
                                                                 g$ls/false$22449$1i4eWV)
                                                               ((case-lambda
                                                                  ((g$t$22460$1i4eWV)
                                                                   ((case-lambda
                                                                      ((g$ls/false$22461$1i4eWV)
                                                                       (if (if g$ls/false$22461$1i4eWV
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$22462$1i4eWV
                                                                                      g$isp$22463$1i4eWV
                                                                                      g$p$22464$1i4eWV)
                                                                                    (if (eq? (g$syntax->datum$19900$1i4eWV
                                                                                               g$prefix$22462$1i4eWV)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$22395$1i4eWV
                                                                                          g$p$22464$1i4eWV))
                                                                                      '#f)))
                                                                                 g$ls/false$22461$1i4eWV))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$22465$1i4eWV
                                                                                g$isp$22466$1i4eWV
                                                                                g$p$22467$1i4eWV)
                                                                              ((case-lambda
                                                                                 ((g$subst$22468$1i4eWV
                                                                                    g$prefix$22469$1i4eWV)
                                                                                  (g$map$11835$1i4eWV
                                                                                    (case-lambda
                                                                                      ((g$x$22470$1i4eWV)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$22469$1i4eWV
                                                                                             (symbol->string
                                                                                               (car g$x$22470$1i4eWV))))
                                                                                         (cdr g$x$22470$1i4eWV))))
                                                                                    g$subst$22468$1i4eWV)))
                                                                               (g$get-import$22404$1i4eWV
                                                                                 g$isp$22466$1i4eWV)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$19900$1i4eWV
                                                                                   g$p$22467$1i4eWV)))))
                                                                           g$ls/false$22461$1i4eWV)
                                                                         ((case-lambda
                                                                            ((g$t$22471$1i4eWV)
                                                                             ((case-lambda
                                                                                ((g$ls/false$22472$1i4eWV)
                                                                                 (if (if g$ls/false$22472$1i4eWV
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$22473$1i4eWV
                                                                                                g$spec*$22474$1i4eWV)
                                                                                              (eq? (g$syntax->datum$19900$1i4eWV
                                                                                                     g$library$22473$1i4eWV)
                                                                                                   'library)))
                                                                                           g$ls/false$22472$1i4eWV))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$22475$1i4eWV
                                                                                          g$spec*$22476$1i4eWV)
                                                                                        (g$import-library$22403$1i4eWV
                                                                                          g$spec*$22476$1i4eWV)))
                                                                                     g$ls/false$22472$1i4eWV)
                                                                                   ((case-lambda
                                                                                      ((g$t$22477$1i4eWV)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$22478$1i4eWV)
                                                                                           (if (if g$ls/false$22478$1i4eWV
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$22479$1i4eWV
                                                                                                          g$isp$22480$1i4eWV
                                                                                                          g$rest$22481$1i4eWV)
                                                                                                        (eq? (g$syntax->datum$19900$1i4eWV
                                                                                                               g$for$22479$1i4eWV)
                                                                                                             'for)))
                                                                                                     g$ls/false$22478$1i4eWV))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$22482$1i4eWV
                                                                                                    g$isp$22483$1i4eWV
                                                                                                    g$rest$22484$1i4eWV)
                                                                                                  (g$get-import$22404$1i4eWV
                                                                                                    g$isp$22483$1i4eWV)))
                                                                                               g$ls/false$22478$1i4eWV)
                                                                                             ((case-lambda
                                                                                                ((g$t$22485$1i4eWV)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$22486$1i4eWV)
                                                                                                     (if g$ls/false$22486$1i4eWV
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$22487$1i4eWV)
                                                                                                            (g$syntax-violation$19897$1i4eWV
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$22487$1i4eWV)))
                                                                                                         g$ls/false$22486$1i4eWV)
                                                                                                       (g$syntax-violation$19897$1i4eWV
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$22485$1i4eWV))))
                                                                                                  (g$syntax-dispatch$19778$1i4eWV
                                                                                                    g$t$22485$1i4eWV
                                                                                                    'any))))
                                                                                              g$t$22477$1i4eWV))))
                                                                                        (g$syntax-dispatch$19778$1i4eWV
                                                                                          g$t$22477$1i4eWV
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$22471$1i4eWV))))
                                                                              (g$syntax-dispatch$19778$1i4eWV
                                                                                g$t$22471$1i4eWV
                                                                                '(any each-any)))))
                                                                          g$t$22460$1i4eWV))))
                                                                    (g$syntax-dispatch$19778$1i4eWV
                                                                      g$t$22460$1i4eWV
                                                                      '(any any
                                                                            any)))))
                                                                g$t$22448$1i4eWV))))
                                                          (g$syntax-dispatch$19778$1i4eWV
                                                            g$t$22448$1i4eWV
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$22439$1i4eWV))))
                                                (g$syntax-dispatch$19778$1i4eWV
                                                  g$t$22439$1i4eWV
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$22424$1i4eWV))))
                                      (g$syntax-dispatch$19778$1i4eWV
                                        g$t$22424$1i4eWV
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$22418$1i4eWV))))
                            (g$syntax-dispatch$19778$1i4eWV
                              g$t$22418$1i4eWV
                              '(any . each-any)))))
                        g$spec$22417$1i4eWV))))
                  (g$add-imports!$22405$1i4eWV
                    (case-lambda
                      ((g$imp$22409$1i4eWV g$h$22410$1i4eWV)
                       ((case-lambda
                          ((g$subst$22411$1i4eWV)
                           (g$for-each$11836$1i4eWV
                             (case-lambda
                               ((g$x$22412$1i4eWV)
                                ((case-lambda
                                   ((g$name$22413$1i4eWV
                                      g$label$22414$1i4eWV)
                                    ((case-lambda
                                       ((g$t$22415$1i4eWV)
                                        (if g$t$22415$1i4eWV
                                          ((case-lambda
                                             ((g$l$22416$1i4eWV)
                                              (if (not (eq? g$l$22416$1i4eWV
                                                            g$label$22414$1i4eWV))
                                                (g$dup-error$22396$1i4eWV
                                                  g$name$22413$1i4eWV)
                                                (void))))
                                           g$t$22415$1i4eWV)
                                          (g$hashtable-set!$12781$1i4eWV
                                            g$h$22410$1i4eWV
                                            g$name$22413$1i4eWV
                                            g$label$22414$1i4eWV))))
                                     (g$hashtable-ref$12780$1i4eWV
                                       g$h$22410$1i4eWV
                                       g$name$22413$1i4eWV
                                       '#f))))
                                 (car g$x$22412$1i4eWV)
                                 (cdr g$x$22412$1i4eWV))))
                             g$subst$22411$1i4eWV)))
                        (g$get-import$22404$1i4eWV
                          g$imp$22409$1i4eWV))))))
          ((letrec ((g$f$22406$1i4eWV
                      (case-lambda
                        ((g$imp*$22407$1i4eWV g$h$22408$1i4eWV)
                         (if (null? g$imp*$22407$1i4eWV)
                           (hashtable-entries g$h$22408$1i4eWV)
                           (begin
                             (g$add-imports!$22405$1i4eWV
                               (car g$imp*$22407$1i4eWV)
                               g$h$22408$1i4eWV)
                             (g$f$22406$1i4eWV
                               (cdr g$imp*$22407$1i4eWV)
                               g$h$22408$1i4eWV)))))))
             g$f$22406$1i4eWV)
           g$imp*$22394$1i4eWV
           (g$make-eq-hashtable$12777$1i4eWV))))))
   (g$make-top-rib$19831$1i4eWV
     g$make-top-rib$23425$1i4eWV
     (case-lambda
       ((g$names$22656$1i4eWV g$labels$22657$1i4eWV)
        ((case-lambda
           ((g$rib$22658$1i4eWV)
            (begin
              (g$vector-for-each$12738$1i4eWV
                (case-lambda
                  ((g$name$22659$1i4eWV g$label$22660$1i4eWV)
                   (begin
                     (if (not (g$symbol?$12668$1i4eWV
                                g$name$22659$1i4eWV))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$22659$1i4eWV)
                       (void))
                     (g$extend-rib/nc!$19242$1i4eWV
                       g$rib$22658$1i4eWV
                       (g$make-stx$19253$1i4eWV
                         g$name$22659$1i4eWV
                         g$top-mark*$19213$1i4eWV
                         '()
                         '())
                       g$label$22660$1i4eWV))))
                g$names$22656$1i4eWV
                g$labels$22657$1i4eWV)
              g$rib$22658$1i4eWV)))
         (g$make-cache-rib$19239$1i4eWV)))))
   (g$make-collector$19832$1i4eWV
     g$make-collector$23426$1i4eWV
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$22661$1i4eWV)
            (case-lambda
              (() g$ls$22661$1i4eWV)
              ((g$x$22662$1i4eWV)
               (set! g$ls$22661$1i4eWV
                 (g$set-cons$19210$1i4eWV
                   g$x$22662$1i4eWV
                   g$ls$22661$1i4eWV))))))
         '()))))
   (g$inv-collector$19833$1i4eWV
     g$inv-collector$23427$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (case-lambda
         (g$args$22663$1i4eWV
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$22664$1i4eWV)
          (begin
            (if (not (g$procedure?$12670$1i4eWV g$x$22664$1i4eWV))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$22664$1i4eWV)
              (void))
            g$x$22664$1i4eWV)))))
   (g$vis-collector$19834$1i4eWV
     g$vis-collector$23428$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (case-lambda
         (g$args$22665$1i4eWV
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$22666$1i4eWV)
          (begin
            (if (not (g$procedure?$12670$1i4eWV g$x$22666$1i4eWV))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$22666$1i4eWV)
              (void))
            g$x$22666$1i4eWV)))))
   (g$imp-collector$19835$1i4eWV
     g$imp-collector$23429$1i4eWV
     (g$make-parameter$18141$1i4eWV
       (case-lambda
         (g$args$22667$1i4eWV
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$22668$1i4eWV)
          (begin
            (if (not (g$procedure?$12670$1i4eWV g$x$22668$1i4eWV))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$22668$1i4eWV)
              (void))
            g$x$22668$1i4eWV)))))
   (g$chi-library-internal$19836$1i4eWV
     g$chi-library-internal$23430$1i4eWV
     (case-lambda
       ((g$e*$22669$1i4eWV g$rib$22670$1i4eWV g$mix?$22671$1i4eWV)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$19825$1i4eWV
               g$e*$22669$1i4eWV
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$22670$1i4eWV
               g$mix?$22671$1i4eWV
               '#t)))
          (case-lambda
            ((g$e*$22680$1i4eWV
               g$r$22681$1i4eWV
               g$mr$22682$1i4eWV
               g$lex*$22683$1i4eWV
               g$rhs*$22684$1i4eWV
               g$mod**$22685$1i4eWV
               g$_kwd*$22686$1i4eWV
               g$exp*$22687$1i4eWV)
             ((case-lambda
                ((g$exp*$22688$1i4eWV
                   g$_kwd*$22689$1i4eWV
                   g$mod**$22690$1i4eWV
                   g$rhs*$22691$1i4eWV
                   g$lex*$22692$1i4eWV
                   g$mr$22693$1i4eWV
                   g$r$22694$1i4eWV
                   g$e*$22695$1i4eWV)
                 (values
                   (append
                     (apply
                       append
                       (g$reverse$12684$1i4eWV g$mod**$22690$1i4eWV))
                     g$e*$22695$1i4eWV)
                   g$r$22694$1i4eWV
                   g$mr$22693$1i4eWV
                   (g$reverse$12684$1i4eWV g$lex*$22692$1i4eWV)
                   (g$reverse$12684$1i4eWV g$rhs*$22691$1i4eWV)
                   g$exp*$22688$1i4eWV)))
              g$exp*$22687$1i4eWV
              g$_kwd*$22686$1i4eWV
              g$mod**$22685$1i4eWV
              g$rhs*$22684$1i4eWV
              g$lex*$22683$1i4eWV
              g$mr$22682$1i4eWV
              g$r$22681$1i4eWV
              g$e*$22680$1i4eWV)))))))
   (g$chi-interaction-expr$19837$1i4eWV
     g$chi-interaction-expr$23431$1i4eWV
     (case-lambda
       ((g$e$22696$1i4eWV g$rib$22697$1i4eWV g$r$22698$1i4eWV)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$19825$1i4eWV
               (list g$e$22696$1i4eWV)
               g$r$22698$1i4eWV
               g$r$22698$1i4eWV
               '()
               '()
               '()
               '()
               '()
               g$rib$22697$1i4eWV
               '#t
               '#f)))
          (case-lambda
            ((g$e*$22707$1i4eWV
               g$r$22708$1i4eWV
               g$mr$22709$1i4eWV
               g$lex*$22710$1i4eWV
               g$rhs*$22711$1i4eWV
               g$mod**$22712$1i4eWV
               g$_kwd*$22713$1i4eWV
               g$_exp*$22714$1i4eWV)
             ((case-lambda
                ((g$_exp*$22715$1i4eWV
                   g$_kwd*$22716$1i4eWV
                   g$mod**$22717$1i4eWV
                   g$rhs*$22718$1i4eWV
                   g$lex*$22719$1i4eWV
                   g$mr$22720$1i4eWV
                   g$r$22721$1i4eWV
                   g$e*$22722$1i4eWV)
                 ((case-lambda
                    ((g$e*$22723$1i4eWV)
                     ((case-lambda
                        ((g$e$22724$1i4eWV)
                         (values g$e$22724$1i4eWV g$r$22721$1i4eWV)))
                      (if (null? g$e*$22723$1i4eWV)
                        (g$build-void$19206$1i4eWV)
                        (if (null? (cdr g$e*$22723$1i4eWV))
                          (car g$e*$22723$1i4eWV)
                          (g$build-sequence$19205$1i4eWV
                            '#f
                            g$e*$22723$1i4eWV))))))
                  (g$expand-interaction-rhs*/init*$19803$1i4eWV
                    (g$reverse$12684$1i4eWV g$lex*$22719$1i4eWV)
                    (g$reverse$12684$1i4eWV g$rhs*$22718$1i4eWV)
                    (append
                      (apply
                        append
                        (g$reverse$12684$1i4eWV g$mod**$22717$1i4eWV))
                      g$e*$22722$1i4eWV)
                    g$r$22721$1i4eWV
                    g$mr$22720$1i4eWV))))
              g$_exp*$22714$1i4eWV
              g$_kwd*$22713$1i4eWV
              g$mod**$22712$1i4eWV
              g$rhs*$22711$1i4eWV
              g$lex*$22710$1i4eWV
              g$mr$22709$1i4eWV
              g$r$22708$1i4eWV
              g$e*$22707$1i4eWV)))))))
   (g$library-body-expander$19838$1i4eWV
     g$library-body-expander$23432$1i4eWV
     (case-lambda
       ((g$name$22725$1i4eWV
          g$main-exp*$22726$1i4eWV
          g$imp*$22727$1i4eWV
          g$b*$22728$1i4eWV
          g$mix?$22729$1i4eWV)
        (letrec* ((g$itc$22730$1i4eWV (g$make-collector$19832$1i4eWV)))
          ((case-lambda
             ((g$imp-collector$22735$1i4eWV
                g$top-level-context$22736$1i4eWV
                g$imp-collector$22737$1i4eWV
                g$top-level-context$22738$1i4eWV)
              ((case-lambda
                 ((g$swap$22739$1i4eWV)
                  (dynamic-wind
                    g$swap$22739$1i4eWV
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$19830$1i4eWV
                              g$imp*$22727$1i4eWV)))
                         (case-lambda
                           ((g$subst-names$22742$1i4eWV
                              g$subst-labels$22743$1i4eWV)
                            ((case-lambda
                               ((g$subst-labels$22744$1i4eWV
                                  g$subst-names$22745$1i4eWV)
                                ((case-lambda
                                   ((g$rib$22746$1i4eWV)
                                    (letrec* ((g$wrap$22747$1i4eWV
                                                (case-lambda
                                                  ((g$x$22809$1i4eWV)
                                                   (g$make-stx$19253$1i4eWV
                                                     g$x$22809$1i4eWV
                                                     g$top-mark*$19213$1i4eWV
                                                     (list
                                                       g$rib$22746$1i4eWV)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$22748$1i4eWV
                                            g$main-exp*$22749$1i4eWV
                                            g$rtc$22750$1i4eWV
                                            g$vtc$22751$1i4eWV)
                                          ((case-lambda
                                             ((g$inv-collector$22756$1i4eWV
                                                g$vis-collector$22757$1i4eWV
                                                g$inv-collector$22758$1i4eWV
                                                g$vis-collector$22759$1i4eWV)
                                              ((case-lambda
                                                 ((g$swap$22760$1i4eWV)
                                                  (dynamic-wind
                                                    g$swap$22760$1i4eWV
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$19836$1i4eWV
                                                              g$b*$22748$1i4eWV
                                                              g$rib$22746$1i4eWV
                                                              g$mix?$22729$1i4eWV)))
                                                         (case-lambda
                                                           ((g$init*$22767$1i4eWV
                                                              g$r$22768$1i4eWV
                                                              g$mr$22769$1i4eWV
                                                              g$lex*$22770$1i4eWV
                                                              g$rhs*$22771$1i4eWV
                                                              g$internal-exp*$22772$1i4eWV)
                                                            ((case-lambda
                                                               ((g$internal-exp*$22773$1i4eWV
                                                                  g$rhs*$22774$1i4eWV
                                                                  g$lex*$22775$1i4eWV
                                                                  g$mr$22776$1i4eWV
                                                                  g$r$22777$1i4eWV
                                                                  g$init*$22778$1i4eWV)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$19827$1i4eWV
                                                                       (append
                                                                         g$main-exp*$22749$1i4eWV
                                                                         g$internal-exp*$22773$1i4eWV))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$22781$1i4eWV
                                                                       g$exp-id*$22782$1i4eWV)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$22783$1i4eWV
                                                                           g$exp-name*$22784$1i4eWV)
                                                                         (begin
                                                                           (g$seal-rib!$19244$1i4eWV
                                                                             g$rib$22746$1i4eWV)
                                                                           ((case-lambda
                                                                              ((g$init*$22785$1i4eWV)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$22786$1i4eWV)
                                                                                   (begin
                                                                                     (g$unseal-rib!$19245$1i4eWV
                                                                                       g$rib$22746$1i4eWV)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$22787$1i4eWV
                                                                                           g$export-subst$22788$1i4eWV)
                                                                                         (letrec* ((g$errstr$22789$1i4eWV
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$19886$1i4eWV
                                                                                                  g$lex*$22775$1i4eWV
                                                                                                  g$loc*$22787$1i4eWV
                                                                                                  g$r$22777$1i4eWV)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$22793$1i4eWV
                                                                                                  g$global*$22794$1i4eWV
                                                                                                  g$macro*$22795$1i4eWV)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$22796$1i4eWV
                                                                                                      g$global*$22797$1i4eWV
                                                                                                      g$export-env$22798$1i4eWV)
                                                                                                    (begin
                                                                                                      (g$for-each$11836$1i4eWV
                                                                                                        (case-lambda
                                                                                                          ((g$s$22799$1i4eWV)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$22800$1i4eWV
                                                                                                                 g$label$22801$1i4eWV)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$22802$1i4eWV)
                                                                                                                   (if g$p$22802$1i4eWV
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$22803$1i4eWV)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$22804$1i4eWV)
                                                                                                                             (if (eq? g$type$22804$1i4eWV
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$19897$1i4eWV
                                                                                                                                 'export
                                                                                                                                 g$errstr$22789$1i4eWV
                                                                                                                                 g$name$22800$1i4eWV)
                                                                                                                               (void))))
                                                                                                                          (car g$b$22803$1i4eWV))))
                                                                                                                      (cdr g$p$22802$1i4eWV))
                                                                                                                     (void))))
                                                                                                                (g$assq$11823$1i4eWV
                                                                                                                  g$label$22801$1i4eWV
                                                                                                                  g$export-env$22798$1i4eWV))))
                                                                                                            (car g$s$22799$1i4eWV)
                                                                                                            (cdr g$s$22799$1i4eWV))))
                                                                                                        g$export-subst$22788$1i4eWV)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$22805$1i4eWV
                                                                                                            g$invoke-definitions$22806$1i4eWV)
                                                                                                          (values
                                                                                                            (g$itc$22730$1i4eWV)
                                                                                                            (g$rtc$22750$1i4eWV)
                                                                                                            (g$vtc$22751$1i4eWV)
                                                                                                            (g$build-sequence$19205$1i4eWV
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$22806$1i4eWV
                                                                                                                (list
                                                                                                                  g$invoke-body$22805$1i4eWV)))
                                                                                                            g$macro*$22796$1i4eWV
                                                                                                            g$export-subst$22788$1i4eWV
                                                                                                            g$export-env$22798$1i4eWV)))
                                                                                                       (g$build-library-letrec*$19209$1i4eWV
                                                                                                         '#f
                                                                                                         g$name$22725$1i4eWV
                                                                                                         g$lex*$22775$1i4eWV
                                                                                                         g$loc*$22787$1i4eWV
                                                                                                         g$rhs*$22786$1i4eWV
                                                                                                         (if (null?
                                                                                                               g$init*$22785$1i4eWV)
                                                                                                           (g$build-void$19206$1i4eWV)
                                                                                                           (g$build-sequence$19205$1i4eWV
                                                                                                             '#f
                                                                                                             g$init*$22785$1i4eWV)))
                                                                                                       (g$map$11835$1i4eWV
                                                                                                         g$build-global-define$19201$1i4eWV
                                                                                                         (g$map$11835$1i4eWV
                                                                                                           cdr
                                                                                                           g$global*$22797$1i4eWV))))))
                                                                                                 g$macro*$22795$1i4eWV
                                                                                                 g$global*$22794$1i4eWV
                                                                                                 g$export-env$22793$1i4eWV)))))))
                                                                                      (g$map$11835$1i4eWV
                                                                                        g$gen-global$19216$1i4eWV
                                                                                        g$lex*$22775$1i4eWV)
                                                                                      (g$make-export-subst$19885$1i4eWV
                                                                                        g$exp-name*$22784$1i4eWV
                                                                                        g$exp-id*$22783$1i4eWV)))))
                                                                                (g$chi-rhs*$19804$1i4eWV
                                                                                  g$rhs*$22774$1i4eWV
                                                                                  g$r$22777$1i4eWV
                                                                                  g$mr$22776$1i4eWV))))
                                                                            (g$chi-expr*$19794$1i4eWV
                                                                              g$init*$22778$1i4eWV
                                                                              g$r$22777$1i4eWV
                                                                              g$mr$22776$1i4eWV)))))
                                                                      g$exp-id*$22782$1i4eWV
                                                                      g$exp-name*$22781$1i4eWV))))))
                                                             g$internal-exp*$22772$1i4eWV
                                                             g$rhs*$22771$1i4eWV
                                                             g$lex*$22770$1i4eWV
                                                             g$mr$22769$1i4eWV
                                                             g$r$22768$1i4eWV
                                                             g$init*$22767$1i4eWV))))))
                                                    g$swap$22760$1i4eWV)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$22807$1i4eWV)
                                                        (begin
                                                          (g$inv-collector$22756$1i4eWV
                                                            g$inv-collector$22758$1i4eWV)
                                                          (set! g$inv-collector$22758$1i4eWV
                                                            g$t$22807$1i4eWV))))
                                                     (g$inv-collector$22756$1i4eWV))
                                                    ((case-lambda
                                                       ((g$t$22808$1i4eWV)
                                                        (begin
                                                          (g$vis-collector$22757$1i4eWV
                                                            g$vis-collector$22759$1i4eWV)
                                                          (set! g$vis-collector$22759$1i4eWV
                                                            g$t$22808$1i4eWV))))
                                                     (g$vis-collector$22757$1i4eWV))))))))
                                           g$inv-collector$19833$1i4eWV
                                           g$vis-collector$19834$1i4eWV
                                           g$rtc$22750$1i4eWV
                                           g$vtc$22751$1i4eWV)))
                                       (g$map$11835$1i4eWV
                                         g$wrap$22747$1i4eWV
                                         g$b*$22728$1i4eWV)
                                       (g$map$11835$1i4eWV
                                         g$wrap$22747$1i4eWV
                                         g$main-exp*$22726$1i4eWV)
                                       (g$make-collector$19832$1i4eWV)
                                       (g$make-collector$19832$1i4eWV)))))
                                 (g$make-top-rib$19831$1i4eWV
                                   g$subst-names$22745$1i4eWV
                                   g$subst-labels$22744$1i4eWV))))
                             g$subst-labels$22743$1i4eWV
                             g$subst-names$22742$1i4eWV))))))
                    g$swap$22739$1i4eWV)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$22810$1i4eWV)
                        (begin
                          (g$imp-collector$22735$1i4eWV
                            g$imp-collector$22737$1i4eWV)
                          (set! g$imp-collector$22737$1i4eWV
                            g$t$22810$1i4eWV))))
                     (g$imp-collector$22735$1i4eWV))
                    ((case-lambda
                       ((g$t$22811$1i4eWV)
                        (begin
                          (g$top-level-context$22736$1i4eWV
                            g$top-level-context$22738$1i4eWV)
                          (set! g$top-level-context$22738$1i4eWV
                            g$t$22811$1i4eWV))))
                     (g$top-level-context$22736$1i4eWV))))))))
           g$imp-collector$19835$1i4eWV
           g$top-level-context$19905$1i4eWV
           g$itc$22730$1i4eWV
           '#f)))))
   (g$core-library-expander$19839$1i4eWV
     g$core-library-expander$23433$1i4eWV
     (case-lambda
       ((g$e$22812$1i4eWV g$verify-name$22813$1i4eWV)
        (call-with-values
          (case-lambda
            (() (g$parse-library$19829$1i4eWV g$e$22812$1i4eWV)))
          (case-lambda
            ((g$name*$22818$1i4eWV
               g$exp*$22819$1i4eWV
               g$imp*$22820$1i4eWV
               g$b*$22821$1i4eWV)
             ((case-lambda
                ((g$b*$22822$1i4eWV
                   g$imp*$22823$1i4eWV
                   g$exp*$22824$1i4eWV
                   g$name*$22825$1i4eWV)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$19828$1i4eWV
                        g$name*$22825$1i4eWV)))
                   (case-lambda
                     ((g$name$22828$1i4eWV g$ver$22829$1i4eWV)
                      ((case-lambda
                         ((g$ver$22830$1i4eWV g$name$22831$1i4eWV)
                          (begin
                            (g$verify-name$22813$1i4eWV
                              g$name$22831$1i4eWV)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$19838$1i4eWV
                                   g$name$22831$1i4eWV
                                   g$exp*$22824$1i4eWV
                                   g$imp*$22823$1i4eWV
                                   g$b*$22822$1i4eWV
                                   '#f)))
                              (case-lambda
                                ((g$imp*$22839$1i4eWV
                                   g$invoke-req*$22840$1i4eWV
                                   g$visit-req*$22841$1i4eWV
                                   g$invoke-code$22842$1i4eWV
                                   g$visit-code$22843$1i4eWV
                                   g$export-subst$22844$1i4eWV
                                   g$export-env$22845$1i4eWV)
                                 ((case-lambda
                                    ((g$export-env$22846$1i4eWV
                                       g$export-subst$22847$1i4eWV
                                       g$visit-code$22848$1i4eWV
                                       g$invoke-code$22849$1i4eWV
                                       g$visit-req*$22850$1i4eWV
                                       g$invoke-req*$22851$1i4eWV
                                       g$imp*$22852$1i4eWV)
                                     (values
                                       g$name$22831$1i4eWV
                                       g$ver$22830$1i4eWV
                                       g$imp*$22852$1i4eWV
                                       g$invoke-req*$22851$1i4eWV
                                       g$visit-req*$22850$1i4eWV
                                       g$invoke-code$22849$1i4eWV
                                       g$visit-code$22848$1i4eWV
                                       g$export-subst$22847$1i4eWV
                                       g$export-env$22846$1i4eWV)))
                                  g$export-env$22845$1i4eWV
                                  g$export-subst$22844$1i4eWV
                                  g$visit-code$22843$1i4eWV
                                  g$invoke-code$22842$1i4eWV
                                  g$visit-req*$22841$1i4eWV
                                  g$invoke-req*$22840$1i4eWV
                                  g$imp*$22839$1i4eWV)))))))
                       g$ver$22829$1i4eWV
                       g$name$22828$1i4eWV))))))
              g$b*$22821$1i4eWV
              g$imp*$22820$1i4eWV
              g$exp*$22819$1i4eWV
              g$name*$22818$1i4eWV)))))))
   (g$parse-top-level-program$19840$1i4eWV
     g$parse-top-level-program$23434$1i4eWV
     (case-lambda
       ((g$e*$22853$1i4eWV)
        ((case-lambda
           ((g$t$22854$1i4eWV)
            ((case-lambda
               ((g$ls/false$22855$1i4eWV)
                (if (if g$ls/false$22855$1i4eWV
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$22856$1i4eWV
                               g$imp*$22857$1i4eWV
                               g$b*$22858$1i4eWV)
                             (eq? (g$syntax->datum$19900$1i4eWV
                                    g$import$22856$1i4eWV)
                                  'import)))
                          g$ls/false$22855$1i4eWV))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$22859$1i4eWV
                         g$imp*$22860$1i4eWV
                         g$b*$22861$1i4eWV)
                       (values g$imp*$22860$1i4eWV g$b*$22861$1i4eWV)))
                    g$ls/false$22855$1i4eWV)
                  ((case-lambda
                     ((g$t$22862$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$22863$1i4eWV)
                          (if (if g$ls/false$22863$1i4eWV
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$22864$1i4eWV
                                         g$x$22865$1i4eWV
                                         g$y$22866$1i4eWV)
                                       (eq? (g$syntax->datum$19900$1i4eWV
                                              g$import$22864$1i4eWV)
                                            'import)))
                                    g$ls/false$22863$1i4eWV))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$22867$1i4eWV
                                   g$x$22868$1i4eWV
                                   g$y$22869$1i4eWV)
                                 (g$syntax-violation$19897$1i4eWV
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$19277$1i4eWV
                                     g$e*$22853$1i4eWV))))
                              g$ls/false$22863$1i4eWV)
                            ((case-lambda
                               ((g$t$22870$1i4eWV)
                                ((case-lambda
                                   ((g$ls/false$22871$1i4eWV)
                                    (if g$ls/false$22871$1i4eWV
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$22871$1i4eWV)
                                      (g$syntax-violation$19897$1i4eWV
                                        '#f
                                        '"invalid syntax"
                                        g$t$22870$1i4eWV))))
                                 (g$syntax-dispatch$19778$1i4eWV
                                   g$t$22870$1i4eWV
                                   '_))))
                             g$t$22862$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$22862$1i4eWV
                         '((any . any) . any)))))
                   g$t$22854$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$22854$1i4eWV
               '((any . each-any) . each-any)))))
         g$e*$22853$1i4eWV))))
   (g$top-level-expander$19841$1i4eWV
     g$top-level-expander$23435$1i4eWV
     (case-lambda
       ((g$e*$22872$1i4eWV)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$19840$1i4eWV
               g$e*$22872$1i4eWV)))
          (case-lambda
            ((g$imp*$22875$1i4eWV g$b*$22876$1i4eWV)
             ((case-lambda
                ((g$b*$22877$1i4eWV g$imp*$22878$1i4eWV)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$19838$1i4eWV
                        '()
                        '()
                        g$imp*$22878$1i4eWV
                        g$b*$22877$1i4eWV
                        '#t)))
                   (case-lambda
                     ((g$imp*$22886$1i4eWV
                        g$invoke-req*$22887$1i4eWV
                        g$visit-req*$22888$1i4eWV
                        g$invoke-code$22889$1i4eWV
                        g$visit-code$22890$1i4eWV
                        g$export-subst$22891$1i4eWV
                        g$export-env$22892$1i4eWV)
                      ((case-lambda
                         ((g$export-env$22893$1i4eWV
                            g$export-subst$22894$1i4eWV
                            g$visit-code$22895$1i4eWV
                            g$invoke-code$22896$1i4eWV
                            g$visit-req*$22897$1i4eWV
                            g$invoke-req*$22898$1i4eWV
                            g$imp*$22899$1i4eWV)
                          (values
                            g$invoke-req*$22898$1i4eWV
                            g$invoke-code$22896$1i4eWV)))
                       g$export-env$22892$1i4eWV
                       g$export-subst$22891$1i4eWV
                       g$visit-code$22890$1i4eWV
                       g$invoke-code$22889$1i4eWV
                       g$visit-req*$22888$1i4eWV
                       g$invoke-req*$22887$1i4eWV
                       g$imp*$22886$1i4eWV))))))
              g$b*$22876$1i4eWV
              g$imp*$22875$1i4eWV)))))))
   (g$9588$19842$1i4eWV
     g$9588$23436$1i4eWV
     (make-record-type-descriptor
       'env
       '#f
       'g$9591$1i4eWV
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9590$19843$1i4eWV g$9590$23437$1i4eWV '#f)
   (g$9589$19844$1i4eWV
     g$9589$23438$1i4eWV
     (make-record-constructor-descriptor
       g$9588$19842$1i4eWV
       '#f
       g$9590$19843$1i4eWV))
   (g$env?$19847$1i4eWV
     g$env?$23439$1i4eWV
     (record-predicate g$9588$19842$1i4eWV))
   (g$make-env$19848$1i4eWV
     g$make-env$23440$1i4eWV
     (record-constructor g$9589$19844$1i4eWV))
   (g$env-names$19849$1i4eWV
     g$env-names$23441$1i4eWV
     (record-accessor g$9588$19842$1i4eWV '0))
   (g$env-labels$19850$1i4eWV
     g$env-labels$23442$1i4eWV
     (record-accessor g$9588$19842$1i4eWV '1))
   (g$env-itc$19851$1i4eWV
     g$env-itc$23443$1i4eWV
     (record-accessor g$9588$19842$1i4eWV '2))
   (g$set-env-names!$19852$1i4eWV
     g$set-env-names!$23444$1i4eWV
     (record-mutator g$9588$19842$1i4eWV '0))
   (g$set-env-labels!$19853$1i4eWV
     g$set-env-labels!$23445$1i4eWV
     (record-mutator g$9588$19842$1i4eWV '1))
   (g$set-env-itc!$19854$1i4eWV
     g$set-env-itc!$23446$1i4eWV
     (record-mutator g$9588$19842$1i4eWV '2))
   (g$rp$19855$1i4eWV
     g$rp$23447$1i4eWV
     (make-record-printer
       'env
       (case-lambda
         ((g$x$22900$1i4eWV g$p$22901$1i4eWV g$wr$22902$1i4eWV)
          (display '"#<environment>" g$p$22901$1i4eWV)))))
   (g$9605$19856$1i4eWV
     g$9605$23448$1i4eWV
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9608$1i4eWV
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9607$19857$1i4eWV g$9607$23449$1i4eWV '#f)
   (g$9606$19858$1i4eWV
     g$9606$23450$1i4eWV
     (make-record-constructor-descriptor
       g$9605$19856$1i4eWV
       '#f
       g$9607$19857$1i4eWV))
   (g$interaction-env?$19861$1i4eWV
     g$interaction-env?$23451$1i4eWV
     (record-predicate g$9605$19856$1i4eWV))
   (g$make-interaction-env$19862$1i4eWV
     g$make-interaction-env$23452$1i4eWV
     (record-constructor g$9606$19858$1i4eWV))
   (g$interaction-env-rib$19863$1i4eWV
     g$interaction-env-rib$23453$1i4eWV
     (record-accessor g$9605$19856$1i4eWV '0))
   (g$interaction-env-r$19864$1i4eWV
     g$interaction-env-r$23454$1i4eWV
     (record-accessor g$9605$19856$1i4eWV '1))
   (g$interaction-env-locs$19865$1i4eWV
     g$interaction-env-locs$23455$1i4eWV
     (record-accessor g$9605$19856$1i4eWV '2))
   (g$set-interaction-env-rib!$19866$1i4eWV
     g$set-interaction-env-rib!$23456$1i4eWV
     (record-mutator g$9605$19856$1i4eWV '0))
   (g$set-interaction-env-r!$19867$1i4eWV
     g$set-interaction-env-r!$23457$1i4eWV
     (record-mutator g$9605$19856$1i4eWV '1))
   (g$set-interaction-env-locs!$19868$1i4eWV
     g$set-interaction-env-locs!$23458$1i4eWV
     (record-mutator g$9605$19856$1i4eWV '2))
   (g$rp$19869$1i4eWV
     g$rp$23459$1i4eWV
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$22903$1i4eWV g$p$22904$1i4eWV g$wr$22905$1i4eWV)
          (display '"#<environment>" g$p$22904$1i4eWV)))))
   (g$interaction-environment-symbols$19870$1i4eWV
     g$interaction-environment-symbols$23460$1i4eWV
     (case-lambda
       (()
        (g$environment-symbols$19874$1i4eWV
          (g$interaction-environment$19904$1i4eWV)))))
   (g$environment-bindings$19871$1i4eWV
     g$environment-bindings$23461$1i4eWV
     (case-lambda
       ((g$e$22906$1i4eWV)
        (vector->list
          (g$vector-map$12737$1i4eWV
            (case-lambda
              ((g$name$22907$1i4eWV g$label$22908$1i4eWV)
               (g$parse-binding$19872$1i4eWV
                 (cons
                   g$name$22907$1i4eWV
                   (g$imported-label->binding$18985$1i4eWV
                     g$label$22908$1i4eWV)))))
            (g$env-names$19849$1i4eWV g$e$22906$1i4eWV)
            (g$env-labels$19850$1i4eWV g$e$22906$1i4eWV))))))
   (g$parse-binding$19872$1i4eWV
     g$parse-binding$23462$1i4eWV
     (case-lambda
       ((g$b$22909$1i4eWV)
        (cons
          (car g$b$22909$1i4eWV)
          ((case-lambda
             ((g$t$22910$1i4eWV)
              (if (g$memv$11828$1i4eWV
                    g$t$22910$1i4eWV
                    '(core-prim global))
                'procedure
                (if (g$memv$11828$1i4eWV
                      g$t$22910$1i4eWV
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$22910$1i4eWV '$core-rtd)
                    'record
                    (if (eq? (car g$b$22909$1i4eWV)
                             (g$cadr$12686$1i4eWV g$b$22909$1i4eWV))
                      'syntax
                      'unknown))))))
           (g$cadr$12686$1i4eWV g$b$22909$1i4eWV))))))
   (g$environment?$19873$1i4eWV
     g$environment?$23463$1i4eWV
     (case-lambda
       ((g$x$22911$1i4eWV)
        ((case-lambda
           ((g$t$22912$1i4eWV)
            (if g$t$22912$1i4eWV
              g$t$22912$1i4eWV
              (begin
                '#f
                (g$interaction-env?$19861$1i4eWV g$x$22911$1i4eWV)))))
         (g$env?$19847$1i4eWV g$x$22911$1i4eWV)))))
   (g$environment-symbols$19874$1i4eWV
     g$environment-symbols$23464$1i4eWV
     (case-lambda
       ((g$x$22913$1i4eWV)
        (if (g$env?$19847$1i4eWV g$x$22913$1i4eWV)
          (vector->list (g$env-names$19849$1i4eWV g$x$22913$1i4eWV))
          (if (g$interaction-env?$19861$1i4eWV g$x$22913$1i4eWV)
            (g$map$11835$1i4eWV
              values
              (g$rib-sym*$19228$1i4eWV
                (g$interaction-env-rib$19863$1i4eWV g$x$22913$1i4eWV)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$22913$1i4eWV))))))
   (g$environment$19875$1i4eWV
     g$environment$23465$1i4eWV
     (case-lambda
       (g$imp*$22914$1i4eWV
        ((case-lambda
           ((g$itc$22915$1i4eWV)
            ((case-lambda
               ((g$imp-collector$22918$1i4eWV
                  g$imp-collector$22919$1i4eWV)
                ((case-lambda
                   ((g$swap$22920$1i4eWV)
                    (dynamic-wind
                      g$swap$22920$1i4eWV
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$19830$1i4eWV
                                g$imp*$22914$1i4eWV)))
                           (case-lambda
                             ((g$subst-names$22923$1i4eWV
                                g$subst-labels$22924$1i4eWV)
                              ((case-lambda
                                 ((g$subst-labels$22925$1i4eWV
                                    g$subst-names$22926$1i4eWV)
                                  (g$make-env$19848$1i4eWV
                                    g$subst-names$22926$1i4eWV
                                    g$subst-labels$22925$1i4eWV
                                    g$itc$22915$1i4eWV)))
                               g$subst-labels$22924$1i4eWV
                               g$subst-names$22923$1i4eWV))))))
                      g$swap$22920$1i4eWV)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$22927$1i4eWV)
                        (begin
                          (g$imp-collector$22918$1i4eWV
                            g$imp-collector$22919$1i4eWV)
                          (set! g$imp-collector$22919$1i4eWV
                            g$t$22927$1i4eWV))))
                     (g$imp-collector$22918$1i4eWV)))))))
             g$imp-collector$19835$1i4eWV
             g$itc$22915$1i4eWV)))
         (g$make-collector$19832$1i4eWV)))))
   (g$null-environment$19876$1i4eWV
     g$null-environment$23466$1i4eWV
     (case-lambda
       ((g$n$22928$1i4eWV)
        (begin
          (if (not (eqv? g$n$22928$1i4eWV '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$22928$1i4eWV)
            (void))
          (g$environment$19875$1i4eWV '(psyntax null-environment-5))))))
   (g$scheme-report-environment$19877$1i4eWV
     g$scheme-report-environment$23467$1i4eWV
     (case-lambda
       ((g$n$22929$1i4eWV)
        (begin
          (if (not (eqv? g$n$22929$1i4eWV '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$22929$1i4eWV)
            (void))
          (g$environment$19875$1i4eWV
            '(psyntax scheme-report-environment-5))))))
   (g$expand$19878$1i4eWV
     g$expand$23468$1i4eWV
     (case-lambda
       ((g$x$22930$1i4eWV g$env$22931$1i4eWV)
        (if (g$env?$19847$1i4eWV g$env$22931$1i4eWV)
          ((case-lambda
             ((g$rib$22932$1i4eWV)
              ((case-lambda
                 ((g$x$22933$1i4eWV
                    g$itc$22934$1i4eWV
                    g$rtc$22935$1i4eWV
                    g$vtc$22936$1i4eWV)
                  ((case-lambda
                     ((g$x$22937$1i4eWV)
                      (begin
                        (g$seal-rib!$19244$1i4eWV g$rib$22932$1i4eWV)
                        (values
                          g$x$22937$1i4eWV
                          (g$rtc$22935$1i4eWV)))))
                   ((case-lambda
                      ((g$top-level-context$22946$1i4eWV
                         g$inv-collector$22947$1i4eWV
                         g$vis-collector$22948$1i4eWV
                         g$imp-collector$22949$1i4eWV
                         g$top-level-context$22950$1i4eWV
                         g$inv-collector$22951$1i4eWV
                         g$vis-collector$22952$1i4eWV
                         g$imp-collector$22953$1i4eWV)
                       ((case-lambda
                          ((g$swap$22954$1i4eWV)
                           (dynamic-wind
                             g$swap$22954$1i4eWV
                             (case-lambda
                               (()
                                (g$chi-expr$19796$1i4eWV
                                  g$x$22933$1i4eWV
                                  '()
                                  '())))
                             g$swap$22954$1i4eWV)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$22955$1i4eWV)
                                 (begin
                                   (g$top-level-context$22946$1i4eWV
                                     g$top-level-context$22950$1i4eWV)
                                   (set! g$top-level-context$22950$1i4eWV
                                     g$t$22955$1i4eWV))))
                              (g$top-level-context$22946$1i4eWV))
                             ((case-lambda
                                ((g$t$22956$1i4eWV)
                                 (begin
                                   (g$inv-collector$22947$1i4eWV
                                     g$inv-collector$22951$1i4eWV)
                                   (set! g$inv-collector$22951$1i4eWV
                                     g$t$22956$1i4eWV))))
                              (g$inv-collector$22947$1i4eWV))
                             ((case-lambda
                                ((g$t$22957$1i4eWV)
                                 (begin
                                   (g$vis-collector$22948$1i4eWV
                                     g$vis-collector$22952$1i4eWV)
                                   (set! g$vis-collector$22952$1i4eWV
                                     g$t$22957$1i4eWV))))
                              (g$vis-collector$22948$1i4eWV))
                             ((case-lambda
                                ((g$t$22958$1i4eWV)
                                 (begin
                                   (g$imp-collector$22949$1i4eWV
                                     g$imp-collector$22953$1i4eWV)
                                   (set! g$imp-collector$22953$1i4eWV
                                     g$t$22958$1i4eWV))))
                              (g$imp-collector$22949$1i4eWV))))))))
                    g$top-level-context$19905$1i4eWV
                    g$inv-collector$19833$1i4eWV
                    g$vis-collector$19834$1i4eWV
                    g$imp-collector$19835$1i4eWV
                    '#f
                    g$rtc$22935$1i4eWV
                    g$vtc$22936$1i4eWV
                    g$itc$22934$1i4eWV))))
               (g$make-stx$19253$1i4eWV
                 g$x$22930$1i4eWV
                 g$top-mark*$19213$1i4eWV
                 (list g$rib$22932$1i4eWV)
                 '())
               (g$env-itc$19851$1i4eWV g$env$22931$1i4eWV)
               (g$make-collector$19832$1i4eWV)
               (g$make-collector$19832$1i4eWV))))
           (g$make-top-rib$19831$1i4eWV
             (g$env-names$19849$1i4eWV g$env$22931$1i4eWV)
             (g$env-labels$19850$1i4eWV g$env$22931$1i4eWV)))
          (if (g$interaction-env?$19861$1i4eWV g$env$22931$1i4eWV)
            ((case-lambda
               ((g$rib$22959$1i4eWV g$r$22960$1i4eWV g$rtc$22961$1i4eWV)
                ((case-lambda
                   ((g$x$22962$1i4eWV)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$22973$1i4eWV
                               g$inv-collector$22974$1i4eWV
                               g$vis-collector$22975$1i4eWV
                               g$imp-collector$22976$1i4eWV
                               g$top-level-context$22977$1i4eWV
                               g$inv-collector$22978$1i4eWV
                               g$vis-collector$22979$1i4eWV
                               g$imp-collector$22980$1i4eWV)
                             ((case-lambda
                                ((g$swap$22981$1i4eWV)
                                 (dynamic-wind
                                   g$swap$22981$1i4eWV
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$19837$1i4eWV
                                        g$x$22962$1i4eWV
                                        g$rib$22959$1i4eWV
                                        g$r$22960$1i4eWV)))
                                   g$swap$22981$1i4eWV)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$22982$1i4eWV)
                                       (begin
                                         (g$top-level-context$22973$1i4eWV
                                           g$top-level-context$22977$1i4eWV)
                                         (set! g$top-level-context$22977$1i4eWV
                                           g$t$22982$1i4eWV))))
                                    (g$top-level-context$22973$1i4eWV))
                                   ((case-lambda
                                      ((g$t$22983$1i4eWV)
                                       (begin
                                         (g$inv-collector$22974$1i4eWV
                                           g$inv-collector$22978$1i4eWV)
                                         (set! g$inv-collector$22978$1i4eWV
                                           g$t$22983$1i4eWV))))
                                    (g$inv-collector$22974$1i4eWV))
                                   ((case-lambda
                                      ((g$t$22984$1i4eWV)
                                       (begin
                                         (g$vis-collector$22975$1i4eWV
                                           g$vis-collector$22979$1i4eWV)
                                         (set! g$vis-collector$22979$1i4eWV
                                           g$t$22984$1i4eWV))))
                                    (g$vis-collector$22975$1i4eWV))
                                   ((case-lambda
                                      ((g$t$22985$1i4eWV)
                                       (begin
                                         (g$imp-collector$22976$1i4eWV
                                           g$imp-collector$22980$1i4eWV)
                                         (set! g$imp-collector$22980$1i4eWV
                                           g$t$22985$1i4eWV))))
                                    (g$imp-collector$22976$1i4eWV))))))))
                          g$top-level-context$19905$1i4eWV
                          g$inv-collector$19833$1i4eWV
                          g$vis-collector$19834$1i4eWV
                          g$imp-collector$19835$1i4eWV
                          g$env$22931$1i4eWV
                          g$rtc$22961$1i4eWV
                          (g$make-collector$19832$1i4eWV)
                          (g$make-collector$19832$1i4eWV))))
                      (case-lambda
                        ((g$e$22986$1i4eWV g$r^$22987$1i4eWV)
                         ((case-lambda
                            ((g$r^$22988$1i4eWV g$e$22989$1i4eWV)
                             (begin
                               (g$set-interaction-env-r!$19867$1i4eWV
                                 g$env$22931$1i4eWV
                                 g$r^$22988$1i4eWV)
                               (values
                                 g$e$22989$1i4eWV
                                 (g$rtc$22961$1i4eWV)))))
                          g$r^$22987$1i4eWV
                          g$e$22986$1i4eWV))))))
                 (g$make-stx$19253$1i4eWV
                   g$x$22930$1i4eWV
                   g$top-mark*$19213$1i4eWV
                   (list g$rib$22959$1i4eWV)
                   '()))))
             (g$interaction-env-rib$19863$1i4eWV g$env$22931$1i4eWV)
             (g$interaction-env-r$19864$1i4eWV g$env$22931$1i4eWV)
             (g$make-collector$19832$1i4eWV))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$22931$1i4eWV))))))
   (g$eval$19879$1i4eWV
     g$eval$23469$1i4eWV
     (case-lambda
       ((g$x$22990$1i4eWV g$env$22991$1i4eWV)
        (begin
          (if (not (g$environment?$19873$1i4eWV g$env$22991$1i4eWV))
            (error 'eval '"not an environment" g$env$22991$1i4eWV)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$19878$1i4eWV
                 g$x$22990$1i4eWV
                 g$env$22991$1i4eWV)))
            (case-lambda
              ((g$x$22994$1i4eWV g$invoke-req*$22995$1i4eWV)
               ((case-lambda
                  ((g$invoke-req*$22996$1i4eWV g$x$22997$1i4eWV)
                   (begin
                     (g$for-each$11836$1i4eWV
                       g$invoke-library$18986$1i4eWV
                       g$invoke-req*$22996$1i4eWV)
                     (eval-core
                       (g$expanded->core$18718$1i4eWV
                         g$x$22997$1i4eWV)))))
                g$invoke-req*$22995$1i4eWV
                g$x$22994$1i4eWV))))))))
   (g$expand->core$19880$1i4eWV
     g$expand->core$23470$1i4eWV
     (case-lambda
       ((g$x$22998$1i4eWV g$env$22999$1i4eWV)
        (begin
          (if (not (g$environment?$19873$1i4eWV g$env$22999$1i4eWV))
            (error 'eval '"not an environment" g$env$22999$1i4eWV)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$19878$1i4eWV
                 g$x$22998$1i4eWV
                 g$env$22999$1i4eWV)))
            (case-lambda
              ((g$x$23002$1i4eWV g$invoke-req*$23003$1i4eWV)
               ((case-lambda
                  ((g$invoke-req*$23004$1i4eWV g$x$23005$1i4eWV)
                   (begin
                     (g$for-each$11836$1i4eWV
                       g$invoke-library$18986$1i4eWV
                       g$invoke-req*$23004$1i4eWV)
                     (g$expanded->core$18718$1i4eWV g$x$23005$1i4eWV))))
                g$invoke-req*$23003$1i4eWV
                g$x$23002$1i4eWV))))))))
   (g$library-expander$19881$1i4eWV
     g$library-expander$23471$1i4eWV
     (case-lambda
       ((g$x$23006$1i4eWV
          g$filename$23007$1i4eWV
          g$verify-name$23008$1i4eWV)
        (letrec* ((g$build-visit-code$23009$1i4eWV
                    (case-lambda
                      ((g$macro*$23052$1i4eWV)
                       (if (null? g$macro*$23052$1i4eWV)
                         (g$build-void$19206$1i4eWV)
                         (g$build-sequence$19205$1i4eWV
                           '#f
                           (g$map$11835$1i4eWV
                             (case-lambda
                               ((g$x$23053$1i4eWV)
                                ((case-lambda
                                   ((g$loc$23054$1i4eWV
                                      g$src$23055$1i4eWV)
                                    (list
                                      'set!
                                      g$loc$23054$1i4eWV
                                      g$src$23055$1i4eWV)))
                                 (car g$x$23053$1i4eWV)
                                 (g$cddr$12688$1i4eWV
                                   g$x$23053$1i4eWV))))
                             g$macro*$23052$1i4eWV))))))
                  (g$visit!$23010$1i4eWV
                    (case-lambda
                      ((g$macro*$23048$1i4eWV)
                       (g$for-each$11836$1i4eWV
                         (case-lambda
                           ((g$x$23049$1i4eWV)
                            ((case-lambda
                               ((g$loc$23050$1i4eWV g$proc$23051$1i4eWV)
                                (set-symbol-value!
                                  g$loc$23050$1i4eWV
                                  g$proc$23051$1i4eWV)))
                             (car g$x$23049$1i4eWV)
                             (g$cadr$12686$1i4eWV g$x$23049$1i4eWV))))
                         g$macro*$23048$1i4eWV)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$19839$1i4eWV
                 g$x$23006$1i4eWV
                 g$verify-name$23008$1i4eWV)))
            (case-lambda
              ((g$name$23020$1i4eWV
                 g$ver$23021$1i4eWV
                 g$imp*$23022$1i4eWV
                 g$inv*$23023$1i4eWV
                 g$vis*$23024$1i4eWV
                 g$invoke-code$23025$1i4eWV
                 g$macro*$23026$1i4eWV
                 g$export-subst$23027$1i4eWV
                 g$export-env$23028$1i4eWV)
               ((case-lambda
                  ((g$export-env$23029$1i4eWV
                     g$export-subst$23030$1i4eWV
                     g$macro*$23031$1i4eWV
                     g$invoke-code$23032$1i4eWV
                     g$vis*$23033$1i4eWV
                     g$inv*$23034$1i4eWV
                     g$imp*$23035$1i4eWV
                     g$ver$23036$1i4eWV
                     g$name$23037$1i4eWV)
                   ((case-lambda
                      ((g$id$23038$1i4eWV
                         g$name$23039$1i4eWV
                         g$ver$23040$1i4eWV
                         g$imp*$23041$1i4eWV
                         g$vis*$23042$1i4eWV
                         g$inv*$23043$1i4eWV
                         g$visit-proc$23044$1i4eWV
                         g$invoke-proc$23045$1i4eWV
                         g$visit-code$23046$1i4eWV
                         g$invoke-code$23047$1i4eWV)
                       (begin
                         (g$install-library$18984$1i4eWV
                           g$id$23038$1i4eWV
                           g$name$23039$1i4eWV
                           g$ver$23040$1i4eWV
                           g$imp*$23041$1i4eWV
                           g$vis*$23042$1i4eWV
                           g$inv*$23043$1i4eWV
                           g$export-subst$23030$1i4eWV
                           g$export-env$23029$1i4eWV
                           g$visit-proc$23044$1i4eWV
                           g$invoke-proc$23045$1i4eWV
                           g$visit-code$23046$1i4eWV
                           g$invoke-code$23047$1i4eWV
                           '#t
                           g$filename$23007$1i4eWV)
                         (values
                           g$id$23038$1i4eWV
                           g$name$23039$1i4eWV
                           g$ver$23040$1i4eWV
                           g$imp*$23041$1i4eWV
                           g$vis*$23042$1i4eWV
                           g$inv*$23043$1i4eWV
                           g$invoke-code$23047$1i4eWV
                           g$visit-code$23046$1i4eWV
                           g$export-subst$23030$1i4eWV
                           g$export-env$23029$1i4eWV))))
                    (gensym)
                    g$name$23037$1i4eWV
                    g$ver$23036$1i4eWV
                    (g$map$11835$1i4eWV
                      g$library-spec$18990$1i4eWV
                      g$imp*$23035$1i4eWV)
                    (g$map$11835$1i4eWV
                      g$library-spec$18990$1i4eWV
                      g$vis*$23033$1i4eWV)
                    (g$map$11835$1i4eWV
                      g$library-spec$18990$1i4eWV
                      g$inv*$23034$1i4eWV)
                    (case-lambda
                      (()
                       (g$visit!$23010$1i4eWV g$macro*$23031$1i4eWV)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$18718$1i4eWV
                           g$invoke-code$23032$1i4eWV))))
                    (g$build-visit-code$23009$1i4eWV
                      g$macro*$23031$1i4eWV)
                    g$invoke-code$23032$1i4eWV)))
                g$export-env$23028$1i4eWV
                g$export-subst$23027$1i4eWV
                g$macro*$23026$1i4eWV
                g$invoke-code$23025$1i4eWV
                g$vis*$23024$1i4eWV
                g$inv*$23023$1i4eWV
                g$imp*$23022$1i4eWV
                g$ver$23021$1i4eWV
                g$name$23020$1i4eWV))))))
       ((g$x$23056$1i4eWV g$filename$23057$1i4eWV)
        (g$library-expander$19881$1i4eWV
          g$x$23056$1i4eWV
          g$filename$23057$1i4eWV
          (case-lambda ((g$x$23058$1i4eWV) (values)))))
       ((g$x$23059$1i4eWV)
        (g$library-expander$19881$1i4eWV
          g$x$23059$1i4eWV
          '#f
          (case-lambda ((g$x$23060$1i4eWV) (values)))))))
   (g$boot-library-expand$19882$1i4eWV
     g$boot-library-expand$23472$1i4eWV
     (case-lambda
       ((g$x$23061$1i4eWV)
        (call-with-values
          (case-lambda
            (() (g$library-expander$19881$1i4eWV g$x$23061$1i4eWV)))
          (case-lambda
            ((g$id$23072$1i4eWV
               g$name$23073$1i4eWV
               g$ver$23074$1i4eWV
               g$imp*$23075$1i4eWV
               g$vis*$23076$1i4eWV
               g$inv*$23077$1i4eWV
               g$invoke-code$23078$1i4eWV
               g$visit-code$23079$1i4eWV
               g$export-subst$23080$1i4eWV
               g$export-env$23081$1i4eWV)
             ((case-lambda
                ((g$export-env$23082$1i4eWV
                   g$export-subst$23083$1i4eWV
                   g$visit-code$23084$1i4eWV
                   g$invoke-code$23085$1i4eWV
                   g$inv*$23086$1i4eWV
                   g$vis*$23087$1i4eWV
                   g$imp*$23088$1i4eWV
                   g$ver$23089$1i4eWV
                   g$name$23090$1i4eWV
                   g$id$23091$1i4eWV)
                 (values
                   g$name$23090$1i4eWV
                   g$invoke-code$23085$1i4eWV
                   g$export-subst$23083$1i4eWV
                   g$export-env$23082$1i4eWV)))
              g$export-env$23081$1i4eWV
              g$export-subst$23080$1i4eWV
              g$visit-code$23079$1i4eWV
              g$invoke-code$23078$1i4eWV
              g$inv*$23077$1i4eWV
              g$vis*$23076$1i4eWV
              g$imp*$23075$1i4eWV
              g$ver$23074$1i4eWV
              g$name$23073$1i4eWV
              g$id$23072$1i4eWV)))))))
   (g$rev-map-append$19883$1i4eWV
     g$rev-map-append$23473$1i4eWV
     (case-lambda
       ((g$f$23092$1i4eWV g$ls$23093$1i4eWV g$ac$23094$1i4eWV)
        (if (null? g$ls$23093$1i4eWV)
          g$ac$23094$1i4eWV
          (g$rev-map-append$19883$1i4eWV
            g$f$23092$1i4eWV
            (cdr g$ls$23093$1i4eWV)
            (cons
              (g$f$23092$1i4eWV (car g$ls$23093$1i4eWV))
              g$ac$23094$1i4eWV))))))
   (g$build-exports$19884$1i4eWV
     g$build-exports$23474$1i4eWV
     (case-lambda
       ((g$lex*+loc*$23095$1i4eWV g$init*$23096$1i4eWV)
        (g$build-sequence$19205$1i4eWV
          '#f
          (cons
            (g$build-void$19206$1i4eWV)
            (g$rev-map-append$19883$1i4eWV
              (case-lambda
                ((g$x$23097$1i4eWV)
                 (list
                   'set!
                   (cdr g$x$23097$1i4eWV)
                   (car g$x$23097$1i4eWV))))
              g$lex*+loc*$23095$1i4eWV
              g$init*$23096$1i4eWV))))))
   (g$make-export-subst$19885$1i4eWV
     g$make-export-subst$23475$1i4eWV
     (case-lambda
       ((g$name*$23098$1i4eWV g$id*$23099$1i4eWV)
        (g$map$11835$1i4eWV
          (case-lambda
            ((g$name$23100$1i4eWV g$id$23101$1i4eWV)
             ((case-lambda
                ((g$label$23102$1i4eWV)
                 (begin
                   (if (not g$label$23102$1i4eWV)
                     (g$syntax-violation$19897$1i4eWV
                       '#f
                       '"cannot export unbound identifier"
                       g$id$23101$1i4eWV)
                     (void))
                   (cons g$name$23100$1i4eWV g$label$23102$1i4eWV))))
              (g$id->label$19293$1i4eWV g$id$23101$1i4eWV))))
          g$name*$23098$1i4eWV
          g$id*$23099$1i4eWV))))
   (g$make-export-env/macros$19886$1i4eWV
     g$make-export-env/macros$23476$1i4eWV
     (case-lambda
       ((g$lex*$23103$1i4eWV g$loc*$23104$1i4eWV g$r$23105$1i4eWV)
        (letrec* ((g$lookup$23106$1i4eWV
                    (case-lambda
                      ((g$x$23122$1i4eWV)
                       ((letrec ((g$f$23123$1i4eWV
                                   (case-lambda
                                     ((g$x$23124$1i4eWV
                                        g$lex*$23125$1i4eWV
                                        g$loc*$23126$1i4eWV)
                                      (if (pair? g$lex*$23125$1i4eWV)
                                        (if (eq? g$x$23124$1i4eWV
                                                 (car g$lex*$23125$1i4eWV))
                                          (car g$loc*$23126$1i4eWV)
                                          (g$f$23123$1i4eWV
                                            g$x$23124$1i4eWV
                                            (cdr g$lex*$23125$1i4eWV)
                                            (cdr g$loc*$23126$1i4eWV)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$23123$1i4eWV)
                        g$x$23122$1i4eWV
                        g$lex*$23103$1i4eWV
                        g$loc*$23104$1i4eWV)))))
          ((letrec ((g$f$23107$1i4eWV
                      (case-lambda
                        ((g$r$23108$1i4eWV
                           g$env$23109$1i4eWV
                           g$global*$23110$1i4eWV
                           g$macro*$23111$1i4eWV)
                         (if (null? g$r$23108$1i4eWV)
                           (values
                             g$env$23109$1i4eWV
                             g$global*$23110$1i4eWV
                             g$macro*$23111$1i4eWV)
                           ((case-lambda
                              ((g$x$23112$1i4eWV)
                               ((case-lambda
                                  ((g$label$23113$1i4eWV
                                     g$b$23114$1i4eWV)
                                   ((case-lambda
                                      ((g$t$23115$1i4eWV)
                                       (if (eqv?
                                             g$t$23115$1i4eWV
                                             'lexical)
                                         ((case-lambda
                                            ((g$v$23116$1i4eWV)
                                             ((case-lambda
                                                ((g$loc$23117$1i4eWV
                                                   g$type$23118$1i4eWV)
                                                 (g$f$23107$1i4eWV
                                                   (cdr g$r$23108$1i4eWV)
                                                   (cons
                                                     (g$cons*$11837$1i4eWV
                                                       g$label$23113$1i4eWV
                                                       g$type$23118$1i4eWV
                                                       g$loc$23117$1i4eWV)
                                                     g$env$23109$1i4eWV)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$19722$1i4eWV
                                                         g$v$23116$1i4eWV)
                                                       g$loc$23117$1i4eWV)
                                                     g$global*$23110$1i4eWV)
                                                   g$macro*$23111$1i4eWV)))
                                              (g$lookup$23106$1i4eWV
                                                (g$lexical-var$19722$1i4eWV
                                                  g$v$23116$1i4eWV))
                                              (if (g$lexical-mutable?$19723$1i4eWV
                                                    g$v$23116$1i4eWV)
                                                'mutable
                                                'global))))
                                          (g$binding-value$19298$1i4eWV
                                            g$b$23114$1i4eWV))
                                         (if (eqv?
                                               g$t$23115$1i4eWV
                                               'local-macro)
                                           ((case-lambda
                                              ((g$loc$23119$1i4eWV)
                                               (g$f$23107$1i4eWV
                                                 (cdr g$r$23108$1i4eWV)
                                                 (cons
                                                   (g$cons*$11837$1i4eWV
                                                     g$label$23113$1i4eWV
                                                     'global-macro
                                                     g$loc$23119$1i4eWV)
                                                   g$env$23109$1i4eWV)
                                                 g$global*$23110$1i4eWV
                                                 (cons
                                                   (cons
                                                     g$loc$23119$1i4eWV
                                                     (g$binding-value$19298$1i4eWV
                                                       g$b$23114$1i4eWV))
                                                   g$macro*$23111$1i4eWV))))
                                            (gensym))
                                           (if (eqv?
                                                 g$t$23115$1i4eWV
                                                 'local-macro!)
                                             ((case-lambda
                                                ((g$loc$23120$1i4eWV)
                                                 (g$f$23107$1i4eWV
                                                   (cdr g$r$23108$1i4eWV)
                                                   (cons
                                                     (g$cons*$11837$1i4eWV
                                                       g$label$23113$1i4eWV
                                                       'global-macro!
                                                       g$loc$23120$1i4eWV)
                                                     g$env$23109$1i4eWV)
                                                   g$global*$23110$1i4eWV
                                                   (cons
                                                     (cons
                                                       g$loc$23120$1i4eWV
                                                       (g$binding-value$19298$1i4eWV
                                                         g$b$23114$1i4eWV))
                                                     g$macro*$23111$1i4eWV))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$23115$1i4eWV
                                                   'local-ctv)
                                               ((case-lambda
                                                  ((g$loc$23121$1i4eWV)
                                                   (g$f$23107$1i4eWV
                                                     (cdr g$r$23108$1i4eWV)
                                                     (cons
                                                       (g$cons*$11837$1i4eWV
                                                         g$label$23113$1i4eWV
                                                         'global-ctv
                                                         g$loc$23121$1i4eWV)
                                                       g$env$23109$1i4eWV)
                                                     g$global*$23110$1i4eWV
                                                     (cons
                                                       (cons
                                                         g$loc$23121$1i4eWV
                                                         (g$binding-value$19298$1i4eWV
                                                           g$b$23114$1i4eWV))
                                                       g$macro*$23111$1i4eWV))))
                                                (gensym))
                                               (if (g$memv$11828$1i4eWV
                                                     g$t$23115$1i4eWV
                                                     '($rtd $module))
                                                 (g$f$23107$1i4eWV
                                                   (cdr g$r$23108$1i4eWV)
                                                   (cons
                                                     g$x$23112$1i4eWV
                                                     g$env$23109$1i4eWV)
                                                   g$global*$23110$1i4eWV
                                                   g$macro*$23111$1i4eWV)
                                                 (assertion-violation
                                                   'expander
                                                   '"BUG: do not know how to export"
                                                   (g$binding-type$19297$1i4eWV
                                                     g$b$23114$1i4eWV)
                                                   (g$binding-value$19298$1i4eWV
                                                     g$b$23114$1i4eWV)))))))))
                                    (g$binding-type$19297$1i4eWV
                                      g$b$23114$1i4eWV))))
                                (car g$x$23112$1i4eWV)
                                (cdr g$x$23112$1i4eWV))))
                            (car g$r$23108$1i4eWV)))))))
             g$f$23107$1i4eWV)
           g$r$23105$1i4eWV
           '()
           '()
           '())))))
   (g$generate-temporaries$19887$1i4eWV
     g$generate-temporaries$23477$1i4eWV
     (case-lambda
       ((g$ls$23127$1i4eWV)
        ((case-lambda
           ((g$t$23128$1i4eWV)
            ((case-lambda
               ((g$ls/false$23129$1i4eWV)
                (if g$ls/false$23129$1i4eWV
                  (apply
                    (case-lambda
                      ((g$ls$23130$1i4eWV)
                       (g$map$11835$1i4eWV
                         (case-lambda
                           ((g$x$23131$1i4eWV)
                            (g$make-stx$19253$1i4eWV
                              ((case-lambda
                                 ((g$x$23132$1i4eWV)
                                  (if ((case-lambda
                                         ((g$t$23133$1i4eWV)
                                          (if g$t$23133$1i4eWV
                                            g$t$23133$1i4eWV
                                            (begin
                                              '#f
                                              (string?
                                                g$x$23132$1i4eWV)))))
                                       (g$symbol?$12668$1i4eWV
                                         g$x$23132$1i4eWV))
                                    (gensym g$x$23132$1i4eWV)
                                    (gensym 't))))
                               (g$syntax->datum$19900$1i4eWV
                                 g$x$23131$1i4eWV))
                              g$top-mark*$19213$1i4eWV
                              '()
                              '())))
                         g$ls$23130$1i4eWV)))
                    g$ls/false$23129$1i4eWV)
                  ((case-lambda
                     ((g$t$23134$1i4eWV)
                      ((case-lambda
                         ((g$ls/false$23135$1i4eWV)
                          (if g$ls/false$23135$1i4eWV
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$23135$1i4eWV)
                            (g$syntax-violation$19897$1i4eWV
                              '#f
                              '"invalid syntax"
                              g$t$23134$1i4eWV))))
                       (g$syntax-dispatch$19778$1i4eWV
                         g$t$23134$1i4eWV
                         '_))))
                   g$t$23128$1i4eWV))))
             (g$syntax-dispatch$19778$1i4eWV
               g$t$23128$1i4eWV
               'each-any))))
         g$ls$23127$1i4eWV))))
   (g$free-identifier=?$19888$1i4eWV
     g$free-identifier=?$23478$1i4eWV
     (case-lambda
       ((g$x$23136$1i4eWV g$y$23137$1i4eWV)
        (if (g$id?$19280$1i4eWV g$x$23136$1i4eWV)
          (if (g$id?$19280$1i4eWV g$y$23137$1i4eWV)
            (g$free-id=?$19284$1i4eWV g$x$23136$1i4eWV g$y$23137$1i4eWV)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$23137$1i4eWV))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$23136$1i4eWV)))))
   (g$bound-identifier=?$19889$1i4eWV
     g$bound-identifier=?$23479$1i4eWV
     (case-lambda
       ((g$x$23138$1i4eWV g$y$23139$1i4eWV)
        (if (g$id?$19280$1i4eWV g$x$23138$1i4eWV)
          (if (g$id?$19280$1i4eWV g$y$23139$1i4eWV)
            (g$bound-id=?$19283$1i4eWV
              g$x$23138$1i4eWV
              g$y$23139$1i4eWV)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$23139$1i4eWV))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$23138$1i4eWV)))))
   (g$make-source-condition$19890$1i4eWV
     g$make-source-condition$23480$1i4eWV
     (case-lambda
       ((g$x$23140$1i4eWV)
        (letrec* ((g$12578$23141$1i4eWV
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$13345$1i4eWV
                      'g$12581$1i4eWV
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12580$23142$1i4eWV '#f)
                  (g$12579$23143$1i4eWV
                    (make-record-constructor-descriptor
                      g$12578$23141$1i4eWV
                      g$&condition-rcd$13346$1i4eWV
                      g$12580$23142$1i4eWV))
                  (g$12577$23146$1i4eWV
                    (record-predicate g$12578$23141$1i4eWV))
                  (g$make-source-condition$23147$1i4eWV
                    (record-constructor g$12579$23143$1i4eWV))
                  (g$12575$23148$1i4eWV
                    (record-accessor g$12578$23141$1i4eWV '0))
                  (g$12576$23149$1i4eWV
                    (record-accessor g$12578$23141$1i4eWV '1))
                  (g$source-condition?$23150$1i4eWV
                    (condition-predicate g$12578$23141$1i4eWV))
                  (g$source-filename$23151$1i4eWV
                    (condition-accessor
                      g$12578$23141$1i4eWV
                      g$12575$23148$1i4eWV))
                  (g$source-character$23152$1i4eWV
                    (condition-accessor
                      g$12578$23141$1i4eWV
                      g$12576$23149$1i4eWV)))
          (if (pair? g$x$23140$1i4eWV)
            (g$make-source-condition$23147$1i4eWV
              (car g$x$23140$1i4eWV)
              (cdr g$x$23140$1i4eWV))
            (condition))))))
   (g$extract-position-condition$19891$1i4eWV
     g$extract-position-condition$23481$1i4eWV
     (case-lambda
       ((g$x$23153$1i4eWV)
        (g$make-source-condition$19890$1i4eWV
          (g$expression-position$19892$1i4eWV g$x$23153$1i4eWV)))))
   (g$expression-position$19892$1i4eWV
     g$expression-position$23482$1i4eWV
     (case-lambda
       ((g$x$23154$1i4eWV)
        (if (g$stx?$19252$1i4eWV g$x$23154$1i4eWV)
          (begin
            '#f
            ((case-lambda
               ((g$x$23155$1i4eWV)
                (if (annotation? g$x$23155$1i4eWV)
                  (begin '#f (annotation-source g$x$23155$1i4eWV))
                  '#f)))
             (g$stx-expr$19254$1i4eWV g$x$23154$1i4eWV)))
          '#f))))
   (g$assertion-error$19893$1i4eWV
     g$assertion-error$23483$1i4eWV
     (case-lambda
       ((g$expr$23156$1i4eWV g$pos$23157$1i4eWV)
        (raise
          (condition
            (g$make-assertion-violation$13393$1i4eWV)
            (g$make-who-condition$13411$1i4eWV 'assert)
            (g$make-message-condition$13351$1i4eWV '"assertion failed")
            (g$make-irritants-condition$13401$1i4eWV
              (list g$expr$23156$1i4eWV))
            (g$make-source-condition$19890$1i4eWV
              g$pos$23157$1i4eWV))))))
   (g$syntax-error$19894$1i4eWV
     g$syntax-error$23484$1i4eWV
     (case-lambda
       ((g$x$23158$1i4eWV . g$args$23159$1i4eWV)
        (begin
          (if (not (g$for-all$11833$1i4eWV string? g$args$23159$1i4eWV))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$23159$1i4eWV)
            (void))
          (raise
            (condition
              (g$make-message-condition$13351$1i4eWV
                (if (null? g$args$23159$1i4eWV)
                  '"invalid syntax"
                  (apply string-append g$args$23159$1i4eWV)))
              (g$make-syntax-violation$13445$1i4eWV
                (g$syntax->datum$19900$1i4eWV g$x$23158$1i4eWV)
                '#f)
              (g$extract-position-condition$19891$1i4eWV
                g$x$23158$1i4eWV)
              (g$extract-trace$19895$1i4eWV g$x$23158$1i4eWV)))))))
   (g$extract-trace$19895$1i4eWV
     g$extract-trace$23485$1i4eWV
     (case-lambda
       ((g$x$23160$1i4eWV)
        (letrec* ((g$12603$23161$1i4eWV
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$13345$1i4eWV
                      'g$12606$1i4eWV
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12605$23162$1i4eWV '#f)
                  (g$12604$23163$1i4eWV
                    (make-record-constructor-descriptor
                      g$12603$23161$1i4eWV
                      g$&condition-rcd$13346$1i4eWV
                      g$12605$23162$1i4eWV))
                  (g$12602$23166$1i4eWV
                    (record-predicate g$12603$23161$1i4eWV))
                  (g$make-trace$23167$1i4eWV
                    (record-constructor g$12604$23163$1i4eWV))
                  (g$12601$23168$1i4eWV
                    (record-accessor g$12603$23161$1i4eWV '0))
                  (g$trace?$23169$1i4eWV
                    (condition-predicate g$12603$23161$1i4eWV))
                  (g$trace-form$23170$1i4eWV
                    (condition-accessor
                      g$12603$23161$1i4eWV
                      g$12601$23168$1i4eWV)))
          ((letrec ((g$f$23171$1i4eWV
                      (case-lambda
                        ((g$x$23172$1i4eWV)
                         (if (g$stx?$19252$1i4eWV g$x$23172$1i4eWV)
                           (apply
                             condition
                             (g$make-trace$23167$1i4eWV
                               g$x$23172$1i4eWV)
                             (g$map$11835$1i4eWV
                               g$f$23171$1i4eWV
                               (g$stx-ae*$19257$1i4eWV
                                 g$x$23172$1i4eWV)))
                           (if (annotation? g$x$23172$1i4eWV)
                             (g$make-trace$23167$1i4eWV
                               (g$make-stx$19253$1i4eWV
                                 g$x$23172$1i4eWV
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$23171$1i4eWV)
           g$x$23160$1i4eWV)))))
   (g$syntax-violation*$19896$1i4eWV
     g$syntax-violation*$23486$1i4eWV
     (case-lambda
       ((g$who$23173$1i4eWV
          g$msg$23174$1i4eWV
          g$form$23175$1i4eWV
          g$condition-object$23176$1i4eWV)
        (begin
          (if (not (string? g$msg$23174$1i4eWV))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$23174$1i4eWV)
            (void))
          ((case-lambda
             ((g$who$23177$1i4eWV)
              (raise
                (condition
                  (if g$who$23177$1i4eWV
                    (g$make-who-condition$13411$1i4eWV
                      g$who$23177$1i4eWV)
                    (condition))
                  (g$make-message-condition$13351$1i4eWV
                    g$msg$23174$1i4eWV)
                  g$condition-object$23176$1i4eWV
                  (g$extract-position-condition$19891$1i4eWV
                    g$form$23175$1i4eWV)
                  (g$extract-trace$19895$1i4eWV g$form$23175$1i4eWV)))))
           (if ((case-lambda
                  ((g$t$23178$1i4eWV)
                   (if g$t$23178$1i4eWV
                     g$t$23178$1i4eWV
                     (begin
                       '#f
                       (g$symbol?$12668$1i4eWV g$who$23173$1i4eWV)))))
                (string? g$who$23173$1i4eWV))
             g$who$23173$1i4eWV
             (if (not g$who$23173$1i4eWV)
               ((case-lambda
                  ((g$t$23179$1i4eWV)
                   ((case-lambda
                      ((g$ls/false$23180$1i4eWV)
                       (if (if g$ls/false$23180$1i4eWV
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$23181$1i4eWV)
                                    (g$id?$19280$1i4eWV
                                      g$id$23181$1i4eWV)))
                                 g$ls/false$23180$1i4eWV))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$23182$1i4eWV)
                              (g$syntax->datum$19900$1i4eWV
                                g$id$23182$1i4eWV)))
                           g$ls/false$23180$1i4eWV)
                         ((case-lambda
                            ((g$t$23183$1i4eWV)
                             ((case-lambda
                                ((g$ls/false$23184$1i4eWV)
                                 (if (if g$ls/false$23184$1i4eWV
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$23185$1i4eWV
                                                g$rest$23186$1i4eWV)
                                              (g$id?$19280$1i4eWV
                                                g$id$23185$1i4eWV)))
                                           g$ls/false$23184$1i4eWV))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$23187$1i4eWV
                                          g$rest$23188$1i4eWV)
                                        (g$syntax->datum$19900$1i4eWV
                                          g$id$23187$1i4eWV)))
                                     g$ls/false$23184$1i4eWV)
                                   ((case-lambda
                                      ((g$t$23189$1i4eWV)
                                       ((case-lambda
                                          ((g$ls/false$23190$1i4eWV)
                                           (if g$ls/false$23190$1i4eWV
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$23190$1i4eWV)
                                             (g$syntax-violation$19897$1i4eWV
                                               '#f
                                               '"invalid syntax"
                                               g$t$23189$1i4eWV))))
                                        (g$syntax-dispatch$19778$1i4eWV
                                          g$t$23189$1i4eWV
                                          '_))))
                                    g$t$23183$1i4eWV))))
                              (g$syntax-dispatch$19778$1i4eWV
                                g$t$23183$1i4eWV
                                '(any . any)))))
                          g$t$23179$1i4eWV))))
                    (g$syntax-dispatch$19778$1i4eWV
                      g$t$23179$1i4eWV
                      'any))))
                g$form$23175$1i4eWV)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$23173$1i4eWV))))))))
   (g$syntax-violation$19897$1i4eWV
     g$syntax-violation$23487$1i4eWV
     (case-lambda
       ((g$who$23191$1i4eWV g$msg$23192$1i4eWV g$form$23193$1i4eWV)
        (g$syntax-violation$19897$1i4eWV
          g$who$23191$1i4eWV
          g$msg$23192$1i4eWV
          g$form$23193$1i4eWV
          '#f))
       ((g$who$23194$1i4eWV
          g$msg$23195$1i4eWV
          g$form$23196$1i4eWV
          g$subform$23197$1i4eWV)
        (g$syntax-violation*$19896$1i4eWV
          g$who$23194$1i4eWV
          g$msg$23195$1i4eWV
          g$form$23196$1i4eWV
          (g$make-syntax-violation$13445$1i4eWV
            (g$syntax->datum$19900$1i4eWV g$form$23196$1i4eWV)
            (g$syntax->datum$19900$1i4eWV g$subform$23197$1i4eWV))))))
   (g$identifier?$19898$1i4eWV
     g$identifier?$23488$1i4eWV
     (case-lambda
       ((g$x$23198$1i4eWV) (g$id?$19280$1i4eWV g$x$23198$1i4eWV))))
   (g$datum->syntax$19899$1i4eWV
     g$datum->syntax$23489$1i4eWV
     (case-lambda
       ((g$id$23199$1i4eWV g$datum$23200$1i4eWV)
        (if (g$id?$19280$1i4eWV g$id$23199$1i4eWV)
          (g$datum->stx$19263$1i4eWV
            g$id$23199$1i4eWV
            g$datum$23200$1i4eWV)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$23199$1i4eWV)))))
   (g$syntax->datum$19900$1i4eWV
     g$syntax->datum$23490$1i4eWV
     (case-lambda
       ((g$x$23201$1i4eWV)
        (g$stx->datum$19291$1i4eWV g$x$23201$1i4eWV))))
   (g$compile-r6rs-top-level$19901$1i4eWV
     g$compile-r6rs-top-level$23491$1i4eWV
     (case-lambda
       ((g$x*$23202$1i4eWV)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$19841$1i4eWV g$x*$23202$1i4eWV)))
          (case-lambda
            ((g$lib*$23205$1i4eWV g$invoke-code$23206$1i4eWV)
             ((case-lambda
                ((g$invoke-code$23207$1i4eWV g$lib*$23208$1i4eWV)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$11836$1i4eWV
                        g$invoke-library$18986$1i4eWV
                        g$lib*$23208$1i4eWV)
                      (eval-core
                        (g$expanded->core$18718$1i4eWV
                          g$invoke-code$23207$1i4eWV)))))))
              g$invoke-code$23206$1i4eWV
              g$lib*$23205$1i4eWV)))))))
   (g$pre-compile-r6rs-top-level$19902$1i4eWV
     g$pre-compile-r6rs-top-level$23492$1i4eWV
     (case-lambda
       ((g$x*$23209$1i4eWV)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$19841$1i4eWV g$x*$23209$1i4eWV)))
          (case-lambda
            ((g$lib*$23212$1i4eWV g$invoke-code$23213$1i4eWV)
             ((case-lambda
                ((g$invoke-code$23214$1i4eWV g$lib*$23215$1i4eWV)
                 (begin
                   (g$for-each$11836$1i4eWV
                     g$invoke-library$18986$1i4eWV
                     g$lib*$23215$1i4eWV)
                   (compile-core
                     (g$expanded->core$18718$1i4eWV
                       g$invoke-code$23214$1i4eWV)))))
              g$invoke-code$23213$1i4eWV
              g$lib*$23212$1i4eWV)))))))
   (g$new-interaction-environment$19903$1i4eWV
     g$new-interaction-environment$23493$1i4eWV
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$23216$1i4eWV g$rib$23217$1i4eWV)
            (begin
              ((case-lambda
                 ((g$subst$23218$1i4eWV)
                  (begin
                    (g$set-rib-sym*!$19233$1i4eWV
                      g$rib$23217$1i4eWV
                      (g$map$11835$1i4eWV car g$subst$23218$1i4eWV))
                    (g$set-rib-mark**!$19234$1i4eWV
                      g$rib$23217$1i4eWV
                      (g$map$11835$1i4eWV
                        (case-lambda
                          ((g$x$23219$1i4eWV) g$top-mark*$19213$1i4eWV))
                        g$subst$23218$1i4eWV))
                    (g$set-rib-label*!$19235$1i4eWV
                      g$rib$23217$1i4eWV
                      (g$map$11835$1i4eWV cdr g$subst$23218$1i4eWV)))))
               (g$library-subst$18943$1i4eWV g$lib$23216$1i4eWV))
              (g$make-interaction-env$19862$1i4eWV
                g$rib$23217$1i4eWV
                '()
                '()))))
         (g$find-library-by-name$18979$1i4eWV '(ironscheme))
         (g$make-empty-rib$19238$1i4eWV)))))
   (g$interaction-environment$19904$1i4eWV
     g$interaction-environment$23494$1i4eWV
     ((case-lambda
        ((g$e$23220$1i4eWV)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$23221$1i4eWV)
                (if g$t$23221$1i4eWV
                  g$t$23221$1i4eWV
                  (begin
                    '#f
                    (begin
                      (set! g$e$23220$1i4eWV
                        (g$new-interaction-environment$19903$1i4eWV))
                      g$e$23220$1i4eWV)))))
             g$e$23220$1i4eWV)))))
      '#f))
   (g$top-level-context$19905$1i4eWV
     g$top-level-context$23495$1i4eWV
     (g$make-parameter$18141$1i4eWV '#f)))
  (g$current-library-expander$18976$1i4eWV
    g$library-expander$19881$1i4eWV))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$18715$1i4eWV
      (case-lambda
        ((g$x$23576$1i4eWV)
         ((case-lambda
            ((g$t$23577$1i4eWV)
             (if g$t$23577$1i4eWV (cdr g$t$23577$1i4eWV) '#f)))
          (g$assq$11823$1i4eWV
            g$x$23576$1i4eWV
            '((ellipsis-map . g$ellipsis-map$23379$1i4eWV)
              (&no-nans-rcd . g$&no-nans-rcd$13580$1i4eWV)
              (&no-nans-rtd . g$&no-nans-rtd$13579$1i4eWV)
              (&no-infinities-rcd . g$&no-infinities-rcd$13572$1i4eWV)
              (&no-infinities-rtd . g$&no-infinities-rtd$13571$1i4eWV)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$13564$1i4eWV)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$13563$1i4eWV)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$13554$1i4eWV)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$13553$1i4eWV)
              (&i/o-port-rcd . g$&i/o-port-rcd$13546$1i4eWV)
              (&i/o-port-rtd . g$&i/o-port-rtd$13545$1i4eWV)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$13536$1i4eWV)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$13535$1i4eWV)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$13528$1i4eWV)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$13527$1i4eWV)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$13520$1i4eWV)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$13519$1i4eWV)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$13512$1i4eWV)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$13511$1i4eWV)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$13504$1i4eWV)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$13503$1i4eWV)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$13494$1i4eWV)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$13493$1i4eWV)
              (&i/o-write-rcd . g$&i/o-write-rcd$13484$1i4eWV)
              (&i/o-write-rtd . g$&i/o-write-rtd$13483$1i4eWV)
              (&i/o-read-rcd . g$&i/o-read-rcd$13476$1i4eWV)
              (&i/o-read-rtd . g$&i/o-read-rtd$13475$1i4eWV)
              (&i/o-rcd . g$&i/o-rcd$13468$1i4eWV)
              (&i/o-rtd . g$&i/o-rtd$13467$1i4eWV)
              (&undefined-rcd . g$&undefined-rcd$13460$1i4eWV)
              (&undefined-rtd . g$&undefined-rtd$13459$1i4eWV)
              (&syntax-rcd . g$&syntax-rcd$13452$1i4eWV)
              (&syntax-rtd . g$&syntax-rtd$13451$1i4eWV)
              (&lexical-rcd . g$&lexical-rcd$13440$1i4eWV)
              (&lexical-rtd . g$&lexical-rtd$13439$1i4eWV)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$13432$1i4eWV)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$13431$1i4eWV)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$13424$1i4eWV)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$13423$1i4eWV)
              (&who-rcd . g$&who-rcd$13416$1i4eWV)
              (&who-rtd . g$&who-rtd$13415$1i4eWV)
              (&irritants-rcd . g$&irritants-rcd$13406$1i4eWV)
              (&irritants-rtd . g$&irritants-rtd$13405$1i4eWV)
              (&assertion-rcd . g$&assertion-rcd$13396$1i4eWV)
              (&assertion-rtd . g$&assertion-rtd$13395$1i4eWV)
              (&violation-rcd . g$&violation-rcd$13388$1i4eWV)
              (&violation-rtd . g$&violation-rtd$13387$1i4eWV)
              (&error-rcd . g$&error-rcd$13380$1i4eWV)
              (&error-rtd . g$&error-rtd$13379$1i4eWV)
              (&serious-rcd . g$&serious-rcd$13372$1i4eWV)
              (&serious-rtd . g$&serious-rtd$13371$1i4eWV)
              (&warning-rcd . g$&warning-rcd$13364$1i4eWV)
              (&warning-rtd . g$&warning-rtd$13363$1i4eWV)
              (&message-rcd . g$&message-rcd$13356$1i4eWV)
              (&message-rtd . g$&message-rtd$13355$1i4eWV)
              (&condition-rcd . g$&condition-rcd$13346$1i4eWV)
              (&condition-rtd . g$&condition-rtd$13345$1i4eWV)
              (make-list . g$make-list$11818$1i4eWV)
              (last-pair . g$last-pair$11817$1i4eWV)
              (ironscheme-build . g$ironscheme-build$23567$1i4eWV)
              (syntax-error . g$syntax-error$23484$1i4eWV)
              (syntax-dispatch . g$syntax-dispatch$23374$1i4eWV)
              (compile-system-libraries
                .
                g$compile-system-libraries$23571$1i4eWV)
              (compile->closure . g$compile->closure$23573$1i4eWV)
              (compile . g$compile$23572$1i4eWV)
              (load . g$load$23566$1i4eWV)
              (interaction-environment
                .
                g$interaction-environment$23494$1i4eWV)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$13802$1i4eWV)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$13801$1i4eWV)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$13800$1i4eWV)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$13799$1i4eWV)
              (string-ci>? . g$string-ci>?$13791$1i4eWV)
              (string-ci>=? . g$string-ci>=?$13793$1i4eWV)
              (string-ci=? . g$string-ci=?$13789$1i4eWV)
              (string-ci<? . g$string-ci<?$13790$1i4eWV)
              (string-ci<=? . g$string-ci<=?$13792$1i4eWV)
              (char-ci>? . g$char-ci>?$13796$1i4eWV)
              (char-ci>=? . g$char-ci>=?$13798$1i4eWV)
              (char-ci=? . g$char-ci=?$13794$1i4eWV)
              (char-ci<? . g$char-ci<?$13795$1i4eWV)
              (char-ci<=? . g$char-ci<=?$13797$1i4eWV)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$23312$1i4eWV)
              (variable-transformer?
                .
                g$variable-transformer?$23311$1i4eWV)
              (make-variable-transformer
                .
                g$make-variable-transformer$23309$1i4eWV)
              (identifier? . g$identifier?$23488$1i4eWV)
              (generate-temporaries
                .
                g$generate-temporaries$23477$1i4eWV)
              (free-identifier=? . g$free-identifier=?$23478$1i4eWV)
              (syntax->datum . g$syntax->datum$23490$1i4eWV)
              (datum->syntax . g$datum->syntax$23489$1i4eWV)
              (bound-identifier=? . g$bound-identifier=?$23479$1i4eWV)
              (delete-file . g$delete-file$12796$1i4eWV)
              (file-exists? . g$file-exists?$12795$1i4eWV)
              (list-sort . g$list-sort$13644$1i4eWV)
              (make-eqv-hashtable . g$make-eqv-hashtable$12778$1i4eWV)
              (make-eq-hashtable . g$make-eq-hashtable$12777$1i4eWV)
              (hashtable-update! . g$hashtable-update!$12784$1i4eWV)
              (hashtable-size . g$hashtable-size$12779$1i4eWV)
              (hashtable-set! . g$hashtable-set!$12781$1i4eWV)
              (hashtable-ref . g$hashtable-ref$12780$1i4eWV)
              (hashtable-delete! . g$hashtable-delete!$12782$1i4eWV)
              (hashtable-contains? . g$hashtable-contains?$12783$1i4eWV)
              (hashtable-clear! . g$hashtable-clear!$12785$1i4eWV)
              (call-with-output-file
                .
                g$call-with-output-file$17757$1i4eWV)
              (call-with-input-file
                .
                g$call-with-input-file$17756$1i4eWV)
              (write-char . g$write-char$17753$1i4eWV)
              (with-output-to-file . g$with-output-to-file$17755$1i4eWV)
              (with-input-from-file
                .
                g$with-input-from-file$17754$1i4eWV)
              (read-char . g$read-char$17752$1i4eWV)
              (peek-char . g$peek-char$17751$1i4eWV)
              (newline . g$newline$17758$1i4eWV)
              (put-datum . g$put-datum$17688$1i4eWV)
              (port? . g$port?$17693$1i4eWV)
              (open-string-output-port
                .
                g$open-string-output-port$17692$1i4eWV)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$13481$1i4eWV)
              (make-i/o-read-error . g$make-i/o-read-error$13473$1i4eWV)
              (make-i/o-port-error . g$make-i/o-port-error$13541$1i4eWV)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$13489$1i4eWV)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$13499$1i4eWV)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$13509$1i4eWV)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$13517$1i4eWV)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$13533$1i4eWV)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$13525$1i4eWV)
              (make-i/o-error . g$make-i/o-error$13465$1i4eWV)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$13559$1i4eWV)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$13551$1i4eWV)
              (i/o-write-error? . g$i/o-write-error?$13482$1i4eWV)
              (i/o-read-error? . g$i/o-read-error?$13474$1i4eWV)
              (i/o-port-error? . g$i/o-port-error?$13543$1i4eWV)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$13491$1i4eWV)
              (i/o-error-position . g$i/o-error-position$13492$1i4eWV)
              (i/o-filename-error? . g$i/o-filename-error?$13501$1i4eWV)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$13510$1i4eWV)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$13518$1i4eWV)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$13534$1i4eWV)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$13526$1i4eWV)
              (i/o-error? . g$i/o-error?$13466$1i4eWV)
              (i/o-error-port . g$i/o-error-port$13544$1i4eWV)
              (i/o-error-filename . g$i/o-error-filename$13502$1i4eWV)
              (i/o-encoding-error? . g$i/o-encoding-error?$13561$1i4eWV)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$13562$1i4eWV)
              (i/o-decoding-error? . g$i/o-decoding-error?$13552$1i4eWV)
              (get-datum . g$get-datum$17689$1i4eWV)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$17694$1i4eWV)
              (call-with-port . g$call-with-port$17695$1i4eWV)
              (scheme-report-environment
                .
                g$scheme-report-environment$23467$1i4eWV)
              (quotient . g$quotient$13611$1i4eWV)
              (null-environment . g$null-environment$23466$1i4eWV)
              (remainder . g$remainder$13612$1i4eWV)
              (modulo . g$modulo$13613$1i4eWV)
              (inexact->exact . g$inexact->exact$13608$1i4eWV)
              (force . g$force$13615$1i4eWV)
              (exact->inexact . g$exact->inexact$13609$1i4eWV)
              (command-line . g$command-line$23562$1i4eWV)
              (remove . g$remove$11840$1i4eWV)
              (remv . g$remv$11841$1i4eWV)
              (remp . g$remp$11821$1i4eWV)
              (remq . g$remq$11842$1i4eWV)
              (partition . g$partition$11820$1i4eWV)
              (memv . g$memv$11828$1i4eWV)
              (memq . g$memq$11827$1i4eWV)
              (memp . g$memp$11830$1i4eWV)
              (member . g$member$11829$1i4eWV)
              (exists . g$exists$11834$1i4eWV)
              (for-all . g$for-all$11833$1i4eWV)
              (fold-right . g$fold-right$11839$1i4eWV)
              (fold-left . g$fold-left$11838$1i4eWV)
              (find . g$find$11819$1i4eWV)
              (filter . g$filter$11822$1i4eWV)
              (cons* . g$cons*$11837$1i4eWV)
              (assv . g$assv$11824$1i4eWV)
              (assq . g$assq$11823$1i4eWV)
              (assp . g$assp$11826$1i4eWV)
              (assoc . g$assoc$11825$1i4eWV)
              (eval . g$eval$23469$1i4eWV)
              (environment . g$environment$23465$1i4eWV)
              (make-enumeration . g$make-enumeration$17894$1i4eWV)
              (enum-set=? . g$enum-set=?$17901$1i4eWV)
              (enum-set-universe . g$enum-set-universe$17895$1i4eWV)
              (enum-set-union . g$enum-set-union$17902$1i4eWV)
              (enum-set-subset? . g$enum-set-subset?$17900$1i4eWV)
              (enum-set-projection . g$enum-set-projection$17906$1i4eWV)
              (enum-set-member? . g$enum-set-member?$17899$1i4eWV)
              (enum-set-intersection
                .
                g$enum-set-intersection$17903$1i4eWV)
              (enum-set-indexer . g$enum-set-indexer$17896$1i4eWV)
              (enum-set-difference . g$enum-set-difference$17904$1i4eWV)
              (enum-set-constructor
                .
                g$enum-set-constructor$17897$1i4eWV)
              (enum-set-complement . g$enum-set-complement$17905$1i4eWV)
              (enum-set->list . g$enum-set->list$17898$1i4eWV)
              (who-condition? . g$who-condition?$13413$1i4eWV)
              (warning? . g$warning?$13362$1i4eWV)
              (violation? . g$violation?$13386$1i4eWV)
              (undefined-violation?
                .
                g$undefined-violation?$13458$1i4eWV)
              (syntax-violation? . g$syntax-violation?$13448$1i4eWV)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$13450$1i4eWV)
              (syntax-violation-form
                .
                g$syntax-violation-form$13449$1i4eWV)
              (syntax-violation . g$syntax-violation$23487$1i4eWV)
              (serious-condition? . g$serious-condition?$13370$1i4eWV)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$13422$1i4eWV)
              (message-condition? . g$message-condition?$13353$1i4eWV)
              (make-who-condition . g$make-who-condition$13411$1i4eWV)
              (make-warning . g$make-warning$13361$1i4eWV)
              (make-violation . g$make-violation$13385$1i4eWV)
              (make-undefined-violation
                .
                g$make-undefined-violation$13457$1i4eWV)
              (make-syntax-violation
                .
                g$make-syntax-violation$13445$1i4eWV)
              (make-serious-condition
                .
                g$make-serious-condition$13369$1i4eWV)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$13421$1i4eWV)
              (make-message-condition
                .
                g$make-message-condition$13351$1i4eWV)
              (make-lexical-violation
                .
                g$make-lexical-violation$13437$1i4eWV)
              (make-irritants-condition
                .
                g$make-irritants-condition$13401$1i4eWV)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$13429$1i4eWV)
              (make-error . g$make-error$13377$1i4eWV)
              (make-assertion-violation
                .
                g$make-assertion-violation$13393$1i4eWV)
              (lexical-violation? . g$lexical-violation?$13438$1i4eWV)
              (irritants-condition?
                .
                g$irritants-condition?$13403$1i4eWV)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$13430$1i4eWV)
              (error? . g$error?$13378$1i4eWV)
              (condition-who . g$condition-who$13414$1i4eWV)
              (condition-message . g$condition-message$13354$1i4eWV)
              (condition-irritants . g$condition-irritants$13404$1i4eWV)
              (assertion-violation?
                .
                g$assertion-violation?$13394$1i4eWV)
              (native-endianness . g$native-endianness$12909$1i4eWV)
              (bytevector? . g$bytevector?$12667$1i4eWV)
              (bytevector-u64-set! . g$bytevector-u64-set!$12930$1i4eWV)
              (bytevector-u64-ref . g$bytevector-u64-ref$12926$1i4eWV)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$12932$1i4eWV)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$12928$1i4eWV)
              (bytevector-u32-set! . g$bytevector-u32-set!$12922$1i4eWV)
              (bytevector-u32-ref . g$bytevector-u32-ref$12918$1i4eWV)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$12924$1i4eWV)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$12920$1i4eWV)
              (bytevector-u16-set! . g$bytevector-u16-set!$12914$1i4eWV)
              (bytevector-u16-ref . g$bytevector-u16-ref$12910$1i4eWV)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$12916$1i4eWV)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$12912$1i4eWV)
              (bytevector-s64-set! . g$bytevector-s64-set!$12931$1i4eWV)
              (bytevector-s64-ref . g$bytevector-s64-ref$12927$1i4eWV)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$12933$1i4eWV)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$12929$1i4eWV)
              (bytevector-s32-set! . g$bytevector-s32-set!$12923$1i4eWV)
              (bytevector-s32-ref . g$bytevector-s32-ref$12919$1i4eWV)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$12925$1i4eWV)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$12921$1i4eWV)
              (bytevector-s16-set! . g$bytevector-s16-set!$12915$1i4eWV)
              (bytevector-s16-ref . g$bytevector-s16-ref$12911$1i4eWV)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$12917$1i4eWV)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$12913$1i4eWV)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$12936$1i4eWV)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$12934$1i4eWV)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$12937$1i4eWV)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$12935$1i4eWV)
              (no-nans-violation? . g$no-nans-violation?$13578$1i4eWV)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$13570$1i4eWV)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$13577$1i4eWV)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$13569$1i4eWV)
              (flzero? . g$flzero?$17661$1i4eWV)
              (fltruncate . g$fltruncate$17656$1i4eWV)
              (fltan . g$fltan$17645$1i4eWV)
              (flsqrt . g$flsqrt$17650$1i4eWV)
              (flsin . g$flsin$17643$1i4eWV)
              (flround . g$flround$17657$1i4eWV)
              (flpositive? . g$flpositive?$17659$1i4eWV)
              (flonum? . g$flonum?$12672$1i4eWV)
              (flodd? . g$flodd?$17663$1i4eWV)
              (flnegative? . g$flnegative?$17660$1i4eWV)
              (flnan? . g$flnan?$17642$1i4eWV)
              (flmod0 . g$flmod0$17633$1i4eWV)
              (flmod . g$flmod$17632$1i4eWV)
              (flmin . g$flmin$17665$1i4eWV)
              (flmax . g$flmax$17664$1i4eWV)
              (fllog . g$fllog$17649$1i4eWV)
              (flinteger? . g$flinteger?$17638$1i4eWV)
              (flinfinite? . g$flinfinite?$17641$1i4eWV)
              (flfloor . g$flfloor$17655$1i4eWV)
              (flfinite? . g$flfinite?$17639$1i4eWV)
              (flexpt . g$flexpt$17652$1i4eWV)
              (flexp . g$flexp$17651$1i4eWV)
              (fleven? . g$fleven?$17662$1i4eWV)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$17637$1i4eWV)
              (fldiv0 . g$fldiv0$17630$1i4eWV)
              (fldiv-and-mod . g$fldiv-and-mod$17634$1i4eWV)
              (fldiv . g$fldiv$17636$1i4eWV)
              (flcos . g$flcos$17644$1i4eWV)
              (flceiling . g$flceiling$17653$1i4eWV)
              (flatan . g$flatan$17648$1i4eWV)
              (flasin . g$flasin$17646$1i4eWV)
              (flacos . g$flacos$17647$1i4eWV)
              (flabs . g$flabs$17658$1i4eWV)
              (fl>? . g$fl>?$17627$1i4eWV)
              (fl>=? . g$fl>=?$17628$1i4eWV)
              (fl=? . g$fl=?$17624$1i4eWV)
              (fl<? . g$fl<?$17625$1i4eWV)
              (fl<=? . g$fl<=?$17626$1i4eWV)
              (fl/ . g$fl/$17623$1i4eWV)
              (fl- . g$fl-$17622$1i4eWV)
              (fl+ . g$fl+$17620$1i4eWV)
              (fl* . g$fl*$17621$1i4eWV)
              (fxzero? . g$fxzero?$16111$1i4eWV)
              (fxxor . g$fxxor$16095$1i4eWV)
              (fxrotate-bit-field . g$fxrotate-bit-field$16131$1i4eWV)
              (fxreverse-bit-field . g$fxreverse-bit-field$16132$1i4eWV)
              (fxpositive? . g$fxpositive?$16107$1i4eWV)
              (fxodd? . g$fxodd?$16115$1i4eWV)
              (fxnot . g$fxnot$16087$1i4eWV)
              (fxnegative? . g$fxnegative?$16109$1i4eWV)
              (fxmod0 . g$fxmod0$16100$1i4eWV)
              (fxmod . g$fxmod$16099$1i4eWV)
              (fxmin . g$fxmin$16117$1i4eWV)
              (fxmax . g$fxmax$16116$1i4eWV)
              (fxlength . g$fxlength$16084$1i4eWV)
              (fxior . g$fxior$16094$1i4eWV)
              (fxif . g$fxif$16122$1i4eWV)
              (fxfirst-bit-set . g$fxfirst-bit-set$16085$1i4eWV)
              (fxeven? . g$fxeven?$16113$1i4eWV)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$16105$1i4eWV)
              (fxdiv0 . g$fxdiv0$16103$1i4eWV)
              (fxdiv-and-mod . g$fxdiv-and-mod$16101$1i4eWV)
              (fxdiv . g$fxdiv$16097$1i4eWV)
              (fxcopy-bit-field . g$fxcopy-bit-field$16128$1i4eWV)
              (fxcopy-bit . g$fxcopy-bit$16124$1i4eWV)
              (fxbit-set? . g$fxbit-set?$16086$1i4eWV)
              (fxbit-field . g$fxbit-field$16126$1i4eWV)
              (fxbit-count . g$fxbit-count$16082$1i4eWV)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$16130$1i4eWV)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$16129$1i4eWV)
              (fxarithmetic-shift . g$fxarithmetic-shift$16080$1i4eWV)
              (fxand . g$fxand$16093$1i4eWV)
              (fx>? . g$fx>?$16091$1i4eWV)
              (fx>=? . g$fx>=?$16092$1i4eWV)
              (fx=? . g$fx=?$16088$1i4eWV)
              (fx<? . g$fx<?$16089$1i4eWV)
              (fx<=? . g$fx<=?$16090$1i4eWV)
              (fx-/carry . g$fx-/carry$16119$1i4eWV)
              (fx- . g$fx-$16077$1i4eWV)
              (fx+/carry . g$fx+/carry$16120$1i4eWV)
              (fx+ . g$fx+$16075$1i4eWV)
              (fx*/carry . g$fx*/carry$16118$1i4eWV)
              (fx* . g$fx*$16076$1i4eWV)
              (greatest-fixnum . g$greatest-fixnum$16073$1i4eWV)
              (least-fixnum . g$least-fixnum$16074$1i4eWV)
              (fixnum-width . g$fixnum-width$12673$1i4eWV)
              (fixnum? . g$fixnum?$12671$1i4eWV)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$13840$1i4eWV)
              (bitwise-if . g$bitwise-if$13834$1i4eWV)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$13837$1i4eWV)
              (bitwise-copy-bit . g$bitwise-copy-bit$13835$1i4eWV)
              (bitwise-bit-field . g$bitwise-bit-field$13836$1i4eWV)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$13839$1i4eWV)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$13838$1i4eWV)
              (zero? . g$zero?$12715$1i4eWV)
              (vector? . g$vector?$12666$1i4eWV)
              (vector-set! . g$vector-set!$12681$1i4eWV)
              (vector-ref . g$vector-ref$12680$1i4eWV)
              (vector-map . g$vector-map$12737$1i4eWV)
              (vector-for-each . g$vector-for-each$12738$1i4eWV)
              (vector-fill! . g$vector-fill!$12682$1i4eWV)
              (symbol? . g$symbol?$12668$1i4eWV)
              (symbol=? . g$symbol=?$12727$1i4eWV)
              (string>? . g$string>?$12724$1i4eWV)
              (string>=? . g$string>=?$12726$1i4eWV)
              (string=? . g$string=?$12722$1i4eWV)
              (string<? . g$string<?$12723$1i4eWV)
              (string<=? . g$string<=?$12725$1i4eWV)
              (string-for-each . g$string-for-each$12739$1i4eWV)
              (reverse . g$reverse$12684$1i4eWV)
              (rationalize . g$rationalize$12734$1i4eWV)
              (procedure? . g$procedure?$12670$1i4eWV)
              (positive? . g$positive?$12713$1i4eWV)
              (odd? . g$odd?$12717$1i4eWV)
              (negative? . g$negative?$12714$1i4eWV)
              (min . g$min$12719$1i4eWV)
              (max . g$max$12718$1i4eWV)
              (map . g$map$11835$1i4eWV)
              (list-tail . g$list-tail$11815$1i4eWV)
              (list-ref . g$list-ref$11816$1i4eWV)
              (list->vector . g$list->vector$12678$1i4eWV)
              (list->string . g$list->string$12679$1i4eWV)
              (lcm . g$lcm$12721$1i4eWV)
              (gcd . g$gcd$12720$1i4eWV)
              (for-each . g$for-each$11836$1i4eWV)
              (even? . g$even?$12716$1i4eWV)
              (div0-and-mod0 . g$div0-and-mod0$12677$1i4eWV)
              (mod0 . g$mod0$12675$1i4eWV)
              (div-and-mod . g$div-and-mod$12676$1i4eWV)
              (mod . g$mod$12674$1i4eWV)
              (char? . g$char?$12665$1i4eWV)
              (char>? . g$char>?$12731$1i4eWV)
              (char>=? . g$char>=?$12733$1i4eWV)
              (char=? . g$char=?$12729$1i4eWV)
              (char<? . g$char<?$12730$1i4eWV)
              (char<=? . g$char<=?$12732$1i4eWV)
              (cddddr . g$cddddr$12712$1i4eWV)
              (cdddar . g$cdddar$12711$1i4eWV)
              (cddadr . g$cddadr$12710$1i4eWV)
              (cddaar . g$cddaar$12709$1i4eWV)
              (cdaddr . g$cdaddr$12708$1i4eWV)
              (cdadar . g$cdadar$12707$1i4eWV)
              (cdaadr . g$cdaadr$12706$1i4eWV)
              (cdaaar . g$cdaaar$12705$1i4eWV)
              (cadddr . g$cadddr$12704$1i4eWV)
              (caddar . g$caddar$12703$1i4eWV)
              (cadadr . g$cadadr$12702$1i4eWV)
              (cadaar . g$cadaar$12701$1i4eWV)
              (caaddr . g$caaddr$12700$1i4eWV)
              (caadar . g$caadar$12699$1i4eWV)
              (caaadr . g$caaadr$12698$1i4eWV)
              (caaaar . g$caaaar$12697$1i4eWV)
              (cdddr . g$cdddr$12696$1i4eWV)
              (cddar . g$cddar$12695$1i4eWV)
              (cdadr . g$cdadr$12694$1i4eWV)
              (cdaar . g$cdaar$12693$1i4eWV)
              (caddr . g$caddr$12692$1i4eWV)
              (cadar . g$cadar$12691$1i4eWV)
              (caadr . g$caadr$12690$1i4eWV)
              (caaar . g$caaar$12689$1i4eWV)
              (cddr . g$cddr$12688$1i4eWV)
              (cdar . g$cdar$12687$1i4eWV)
              (cadr . g$cadr$12686$1i4eWV)
              (caar . g$caar$12685$1i4eWV)
              (boolean? . g$boolean?$12669$1i4eWV)
              (boolean=? . g$boolean=?$12728$1i4eWV)
              (enum-set? . g$enum?$17875$1i4eWV)
              (make-promise . g$make-promise$13614$1i4eWV)
              (load/unload . g$load/unload$23565$1i4eWV)
              (load/args . g$load/args$23564$1i4eWV)
              (printf . g$printf$17930$1i4eWV)
              (fprintf . g$fprintf$17931$1i4eWV)
              (format . g$format$17932$1i4eWV)
              (trace-printer . g$trace-printer$23561$1i4eWV)
              (make-traced-macro . g$make-traced-macro$17936$1i4eWV)
              (assertion-error . g$assertion-error$23483$1i4eWV)
              (make-parameter . g$make-parameter$18141$1i4eWV)
              (environment-bindings
                .
                g$environment-bindings$23461$1i4eWV)
              (environment-symbols . g$environment-symbols$23464$1i4eWV)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$23460$1i4eWV)
              (library-path . g$library-path$18968$1i4eWV)
              (make-compile-time-value
                .
                g$make-compile-time-value$23310$1i4eWV)
              (expand->core . g$expand->core$23470$1i4eWV)
              (expand . g$expand$23468$1i4eWV)
              (syntax-transpose . g$syntax-transpose$23417$1i4eWV)
              (convert->cps . g$convert->cps$18669$1i4eWV)
              (installed-libraries . g$installed-libraries$18989$1i4eWV)
              (uninstall-library . g$uninstall-library$18980$1i4eWV)
              (pretty-gensyms . g$pretty-gensyms$18349$1i4eWV)
              (pretty-width . g$pretty-width$18346$1i4eWV)
              (pretty-print . g$pretty-print$18351$1i4eWV)))))))
    (g$install-library$18984$1i4eWV
      'g$13199$1i4eWV
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$13192$1i4eWV)
        (cosh . g$13191$1i4eWV)
        (sinh . g$13190$1i4eWV)
        (make-guid . g$13189$1i4eWV)
        (unspecified? . g$13188$1i4eWV)
        (make-list . g$5147$1i4eWV)
        (last-pair . g$5146$1i4eWV)
        (load-r5rs . g$13187$1i4eWV)
        (license . g$13186$1i4eWV)
        (stacktrace . g$13185$1i4eWV)
        (ironscheme-build . g$12673$1i4eWV)
        (remove-location . g$13169$1i4eWV)
        (set-symbol-value! . g$13168$1i4eWV)
        (symbol-value . g$13167$1i4eWV)
        (symbol-bound? . g$13166$1i4eWV)
        (ungensym . g$13165$1i4eWV)
        (gensym . g$13164$1i4eWV)
        (void . g$13163$1i4eWV)
        (compile-system-libraries . g$12677$1i4eWV)
        (compile->closure . g$12679$1i4eWV)
        (compile . g$12678$1i4eWV)
        (load . g$12672$1i4eWV)
        (interaction-environment . g$9656$1i4eWV)
        (string-upcase . g$13158$1i4eWV)
        (string-titlecase . g$13157$1i4eWV)
        (string-normalize-nfkd . g$6417$1i4eWV)
        (string-normalize-nfkc . g$6416$1i4eWV)
        (string-normalize-nfd . g$6415$1i4eWV)
        (string-normalize-nfc . g$6414$1i4eWV)
        (string-foldcase . g$13156$1i4eWV)
        (string-downcase . g$13155$1i4eWV)
        (string-ci>? . g$6401$1i4eWV)
        (string-ci>=? . g$6403$1i4eWV)
        (string-ci=? . g$6399$1i4eWV)
        (string-ci<? . g$6400$1i4eWV)
        (string-ci<=? . g$6402$1i4eWV)
        (char-whitespace? . g$13154$1i4eWV)
        (char-upper-case? . g$13153$1i4eWV)
        (char-title-case? . g$13152$1i4eWV)
        (char-numeric? . g$13151$1i4eWV)
        (char-lower-case? . g$13150$1i4eWV)
        (char-general-category . g$13149$1i4eWV)
        (char-upcase . g$13148$1i4eWV)
        (char-titlecase . g$13147$1i4eWV)
        (char-foldcase . g$13146$1i4eWV)
        (char-downcase . g$13145$1i4eWV)
        (char-ci>? . g$6411$1i4eWV)
        (char-ci>=? . g$6413$1i4eWV)
        (char-ci=? . g$6409$1i4eWV)
        (char-ci<? . g$6410$1i4eWV)
        (char-ci<=? . g$6412$1i4eWV)
        (char-alphabetic? . g$13144$1i4eWV)
        (make-variable-transformer . g$9330$1i4eWV)
        (identifier? . g$9650$1i4eWV)
        (generate-temporaries . g$9639$1i4eWV)
        (free-identifier=? . g$9640$1i4eWV)
        (syntax->datum . g$9652$1i4eWV)
        (datum->syntax . g$9651$1i4eWV)
        (bound-identifier=? . g$9641$1i4eWV)
        (record-type-descriptor? . g$13143$1i4eWV)
        (record-predicate . g$13142$1i4eWV)
        (record-mutator . g$13141$1i4eWV)
        (record-constructor . g$13140$1i4eWV)
        (record-accessor . g$13139$1i4eWV)
        (make-record-type-descriptor . g$13138$1i4eWV)
        (make-record-constructor-descriptor . g$13137$1i4eWV)
        (record? . g$13136$1i4eWV)
        (record-type-uid . g$13135$1i4eWV)
        (record-type-sealed? . g$13134$1i4eWV)
        (record-type-parent . g$13133$1i4eWV)
        (record-type-opaque? . g$13132$1i4eWV)
        (record-type-name . g$13131$1i4eWV)
        (record-type-generative? . g$13130$1i4eWV)
        (record-type-field-names . g$13129$1i4eWV)
        (record-rtd . g$13128$1i4eWV)
        (record-field-mutable? . g$13127$1i4eWV)
        (delete-file . g$5808$1i4eWV)
        (file-exists? . g$5807$1i4eWV)
        (vector-sort! . g$13126$1i4eWV)
        (vector-sort . g$13125$1i4eWV)
        (list-sort . g$6370$1i4eWV)
        (symbol-hash . g$13124$1i4eWV)
        (string-ci-hash . g$13123$1i4eWV)
        (string-hash . g$13122$1i4eWV)
        (equal-hash . g$13121$1i4eWV)
        (hashtable-equivalence-function . g$13120$1i4eWV)
        (make-hashtable . g$13119$1i4eWV)
        (hashtable-hash-function . g$13118$1i4eWV)
        (make-eqv-hashtable . g$5775$1i4eWV)
        (make-eq-hashtable . g$5774$1i4eWV)
        (hashtable? . g$13117$1i4eWV)
        (hashtable-update! . g$5781$1i4eWV)
        (hashtable-size . g$5776$1i4eWV)
        (hashtable-set! . g$5778$1i4eWV)
        (hashtable-ref . g$5777$1i4eWV)
        (hashtable-mutable? . g$13116$1i4eWV)
        (hashtable-keys . g$13115$1i4eWV)
        (hashtable-entries . g$13114$1i4eWV)
        (hashtable-delete! . g$5779$1i4eWV)
        (hashtable-copy . g$13113$1i4eWV)
        (hashtable-contains? . g$5780$1i4eWV)
        (hashtable-clear! . g$5782$1i4eWV)
        (call-with-output-file . g$8154$1i4eWV)
        (call-with-input-file . g$8153$1i4eWV)
        (write-char . g$8145$1i4eWV)
        (write . g$13112$1i4eWV)
        (with-output-to-file . g$8152$1i4eWV)
        (with-input-from-file . g$8151$1i4eWV)
        (read-char . g$8144$1i4eWV)
        (read . g$13111$1i4eWV)
        (peek-char . g$8143$1i4eWV)
        (open-output-file . g$13110$1i4eWV)
        (open-input-file . g$13109$1i4eWV)
        (newline . g$8155$1i4eWV)
        (display . g$13108$1i4eWV)
        (close-output-port . g$13107$1i4eWV)
        (close-input-port . g$13106$1i4eWV)
        (eof-object? . g$13105$1i4eWV)
        (eof-object . g$13104$1i4eWV)
        (current-error-port . g$13103$1i4eWV)
        (current-output-port . g$13102$1i4eWV)
        (current-input-port . g$13101$1i4eWV)
        (output-port? . g$13100$1i4eWV)
        (input-port? . g$13099$1i4eWV)
        (utf-8-codec . g$13098$1i4eWV)
        (utf-16-codec . g$13097$1i4eWV)
        (transcoder-error-handling-mode . g$13096$1i4eWV)
        (transcoder-eol-style . g$13095$1i4eWV)
        (transcoder-codec . g$13094$1i4eWV)
        (transcoded-port . g$13093$1i4eWV)
        (textual-port? . g$13092$1i4eWV)
        (string->bytevector . g$13091$1i4eWV)
        (standard-output-port . g$13090$1i4eWV)
        (standard-input-port . g$13089$1i4eWV)
        (standard-error-port . g$13088$1i4eWV)
        (set-port-position! . g$13087$1i4eWV)
        (put-u8 . g$13086$1i4eWV)
        (put-string . g$13085$1i4eWV)
        (put-datum . g$8123$1i4eWV)
        (put-char . g$13084$1i4eWV)
        (put-bytevector . g$13083$1i4eWV)
        (port? . g$8128$1i4eWV)
        (port-transcoder . g$13082$1i4eWV)
        (port-position . g$13081$1i4eWV)
        (port-has-set-port-position!? . g$13080$1i4eWV)
        (port-has-port-position? . g$13079$1i4eWV)
        (port-eof? . g$13078$1i4eWV)
        (output-port-buffer-mode . g$13077$1i4eWV)
        (open-string-output-port . g$8127$1i4eWV)
        (open-string-input-port . g$13076$1i4eWV)
        (open-file-output-port . g$13075$1i4eWV)
        (open-file-input/output-port . g$13074$1i4eWV)
        (open-file-input-port . g$13073$1i4eWV)
        (open-bytevector-output-port . g$13072$1i4eWV)
        (open-bytevector-input-port . g$13071$1i4eWV)
        (native-transcoder . g$13070$1i4eWV)
        (native-eol-style . g$13069$1i4eWV)
        (make-transcoder . g$13068$1i4eWV)
        (latin-1-codec . g$13067$1i4eWV)
        (make-i/o-write-error . g$6180$1i4eWV)
        (make-i/o-read-error . g$6167$1i4eWV)
        (make-i/o-port-error . g$6275$1i4eWV)
        (make-i/o-invalid-position-error . g$6193$1i4eWV)
        (make-i/o-filename-error . g$6208$1i4eWV)
        (make-i/o-file-protection-error . g$6223$1i4eWV)
        (make-i/o-file-is-read-only-error . g$6236$1i4eWV)
        (make-i/o-file-does-not-exist-error . g$6262$1i4eWV)
        (make-i/o-file-already-exists-error . g$6249$1i4eWV)
        (make-i/o-error . g$6154$1i4eWV)
        (make-i/o-encoding-error . g$6303$1i4eWV)
        (make-i/o-decoding-error . g$6290$1i4eWV)
        (make-custom-textual-output-port . g$13066$1i4eWV)
        (make-custom-textual-input/output-port . g$13065$1i4eWV)
        (make-custom-textual-input-port . g$13064$1i4eWV)
        (make-custom-binary-output-port . g$13063$1i4eWV)
        (make-custom-binary-input/output-port . g$13062$1i4eWV)
        (make-custom-binary-input-port . g$13061$1i4eWV)
        (make-bytevector . g$13060$1i4eWV)
        (lookahead-u8 . g$13059$1i4eWV)
        (lookahead-char . g$13058$1i4eWV)
        (i/o-write-error? . g$6181$1i4eWV)
        (i/o-read-error? . g$6168$1i4eWV)
        (i/o-port-error? . g$6277$1i4eWV)
        (i/o-invalid-position-error? . g$6195$1i4eWV)
        (i/o-error-position . g$6196$1i4eWV)
        (i/o-filename-error? . g$6210$1i4eWV)
        (i/o-file-protection-error? . g$6224$1i4eWV)
        (i/o-file-is-read-only-error? . g$6237$1i4eWV)
        (i/o-file-does-not-exist-error? . g$6263$1i4eWV)
        (i/o-file-already-exists-error? . g$6250$1i4eWV)
        (i/o-error? . g$6155$1i4eWV)
        (i/o-error-port . g$6278$1i4eWV)
        (i/o-error-filename . g$6211$1i4eWV)
        (i/o-encoding-error? . g$6305$1i4eWV)
        (i/o-encoding-error-char . g$6306$1i4eWV)
        (i/o-decoding-error? . g$6291$1i4eWV)
        (get-u8 . g$13057$1i4eWV)
        (get-string-n! . g$13056$1i4eWV)
        (get-string-n . g$13055$1i4eWV)
        (get-string-all . g$13054$1i4eWV)
        (get-line . g$13053$1i4eWV)
        (get-datum . g$8124$1i4eWV)
        (get-char . g$13052$1i4eWV)
        (get-bytevector-some . g$13051$1i4eWV)
        (get-bytevector-n! . g$13050$1i4eWV)
        (get-bytevector-n . g$13049$1i4eWV)
        (get-bytevector-all . g$13048$1i4eWV)
        (flush-output-port . g$13047$1i4eWV)
        (close-port . g$13046$1i4eWV)
        (call-with-string-output-port . g$8129$1i4eWV)
        (call-with-port . g$8130$1i4eWV)
        (call-with-bytevector-output-port . g$13045$1i4eWV)
        (bytevector->string . g$13044$1i4eWV)
        (buffer-mode? . g$13043$1i4eWV)
        (binary-port? . g$13042$1i4eWV)
        (scheme-report-environment . g$9629$1i4eWV)
        (quotient . g$6349$1i4eWV)
        (null-environment . g$9628$1i4eWV)
        (remainder . g$6350$1i4eWV)
        (modulo . g$6351$1i4eWV)
        (inexact->exact . g$6346$1i4eWV)
        (force . g$6353$1i4eWV)
        (exact->inexact . g$6347$1i4eWV)
        (exit . g$13041$1i4eWV)
        (command-line . g$12668$1i4eWV)
        (string-fill! . g$13040$1i4eWV)
        (string-set! . g$13039$1i4eWV)
        (set-cdr! . g$13038$1i4eWV)
        (set-car! . g$13037$1i4eWV)
        (remove . g$5169$1i4eWV)
        (remv . g$5170$1i4eWV)
        (remp . g$5150$1i4eWV)
        (remq . g$5171$1i4eWV)
        (partition . g$5149$1i4eWV)
        (memv . g$5157$1i4eWV)
        (memq . g$5156$1i4eWV)
        (memp . g$5159$1i4eWV)
        (member . g$5158$1i4eWV)
        (exists . g$5163$1i4eWV)
        (for-all . g$5162$1i4eWV)
        (fold-right . g$5168$1i4eWV)
        (fold-left . g$5167$1i4eWV)
        (find . g$5148$1i4eWV)
        (filter . g$5151$1i4eWV)
        (cons* . g$5166$1i4eWV)
        (assv . g$5153$1i4eWV)
        (assq . g$5152$1i4eWV)
        (assp . g$5155$1i4eWV)
        (assoc . g$5154$1i4eWV)
        (with-exception-handler . g$13036$1i4eWV)
        (raise-continuable . g$13035$1i4eWV)
        (raise . g$13034$1i4eWV)
        (eval . g$9631$1i4eWV)
        (environment . g$9627$1i4eWV)
        (make-enumeration . g$8215$1i4eWV)
        (enum-set=? . g$8222$1i4eWV)
        (enum-set-universe . g$8216$1i4eWV)
        (enum-set-union . g$8223$1i4eWV)
        (enum-set-subset? . g$8221$1i4eWV)
        (enum-set-projection . g$8227$1i4eWV)
        (enum-set-member? . g$8220$1i4eWV)
        (enum-set-intersection . g$8224$1i4eWV)
        (enum-set-indexer . g$8217$1i4eWV)
        (enum-set-difference . g$8225$1i4eWV)
        (enum-set-constructor . g$8218$1i4eWV)
        (enum-set-complement . g$8226$1i4eWV)
        (enum-set->list . g$8219$1i4eWV)
        (who-condition? . g$6072$1i4eWV)
        (warning? . g$5991$1i4eWV)
        (violation? . g$6030$1i4eWV)
        (undefined-violation? . g$6142$1i4eWV)
        (syntax-violation? . g$6127$1i4eWV)
        (syntax-violation-subform . g$6129$1i4eWV)
        (syntax-violation-form . g$6128$1i4eWV)
        (syntax-violation . g$9649$1i4eWV)
        (simple-conditions . g$13033$1i4eWV)
        (serious-condition? . g$6004$1i4eWV)
        (non-continuable-violation? . g$6086$1i4eWV)
        (message-condition? . g$5977$1i4eWV)
        (make-who-condition . g$6070$1i4eWV)
        (make-warning . g$5990$1i4eWV)
        (make-violation . g$6029$1i4eWV)
        (make-undefined-violation . g$6141$1i4eWV)
        (make-syntax-violation . g$6124$1i4eWV)
        (make-serious-condition . g$6003$1i4eWV)
        (make-non-continuable-violation . g$6085$1i4eWV)
        (make-message-condition . g$5975$1i4eWV)
        (make-lexical-violation . g$6111$1i4eWV)
        (make-irritants-condition . g$6055$1i4eWV)
        (make-implementation-restriction-violation . g$6098$1i4eWV)
        (make-error . g$6016$1i4eWV)
        (make-assertion-violation . g$6042$1i4eWV)
        (lexical-violation? . g$6112$1i4eWV)
        (irritants-condition? . g$6057$1i4eWV)
        (implementation-restriction-violation? . g$6099$1i4eWV)
        (error? . g$6017$1i4eWV)
        (condition-who . g$6073$1i4eWV)
        (condition-predicate . g$13032$1i4eWV)
        (condition-message . g$5978$1i4eWV)
        (condition-irritants . g$6058$1i4eWV)
        (condition-accessor . g$13031$1i4eWV)
        (condition . g$13030$1i4eWV)
        (assertion-violation? . g$6043$1i4eWV)
        (condition? . g$13029$1i4eWV)
        (utf32->string . g$13028$1i4eWV)
        (utf16->string . g$13027$1i4eWV)
        (utf8->string . g$13026$1i4eWV)
        (uint-list->bytevector . g$13025$1i4eWV)
        (u8-list->bytevector . g$13024$1i4eWV)
        (string->utf8 . g$13023$1i4eWV)
        (string->utf32 . g$13022$1i4eWV)
        (string->utf16 . g$13021$1i4eWV)
        (sint-list->bytevector . g$13020$1i4eWV)
        (native-endianness . g$5814$1i4eWV)
        (bytevector? . g$5503$1i4eWV)
        (bytevector=? . g$13019$1i4eWV)
        (bytevector-uint-set! . g$13018$1i4eWV)
        (bytevector-uint-ref . g$13017$1i4eWV)
        (bytevector-u8-set! . g$13016$1i4eWV)
        (bytevector-u8-ref . g$13015$1i4eWV)
        (bytevector-u64-set! . g$5835$1i4eWV)
        (bytevector-u64-ref . g$5831$1i4eWV)
        (bytevector-u64-native-set! . g$5837$1i4eWV)
        (bytevector-u64-native-ref . g$5833$1i4eWV)
        (bytevector-u32-set! . g$5827$1i4eWV)
        (bytevector-u32-ref . g$5823$1i4eWV)
        (bytevector-u32-native-set! . g$5829$1i4eWV)
        (bytevector-u32-native-ref . g$5825$1i4eWV)
        (bytevector-u16-set! . g$5819$1i4eWV)
        (bytevector-u16-ref . g$5815$1i4eWV)
        (bytevector-u16-native-set! . g$5821$1i4eWV)
        (bytevector-u16-native-ref . g$5817$1i4eWV)
        (bytevector-sint-set! . g$13014$1i4eWV)
        (bytevector-sint-ref . g$13013$1i4eWV)
        (bytevector-s8-set! . g$13012$1i4eWV)
        (bytevector-s8-ref . g$13011$1i4eWV)
        (bytevector-s64-set! . g$5836$1i4eWV)
        (bytevector-s64-ref . g$5832$1i4eWV)
        (bytevector-s64-native-set! . g$5838$1i4eWV)
        (bytevector-s64-native-ref . g$5834$1i4eWV)
        (bytevector-s32-set! . g$5828$1i4eWV)
        (bytevector-s32-ref . g$5824$1i4eWV)
        (bytevector-s32-native-set! . g$5830$1i4eWV)
        (bytevector-s32-native-ref . g$5826$1i4eWV)
        (bytevector-s16-set! . g$5820$1i4eWV)
        (bytevector-s16-ref . g$5816$1i4eWV)
        (bytevector-s16-native-set! . g$5822$1i4eWV)
        (bytevector-s16-native-ref . g$5818$1i4eWV)
        (bytevector-length . g$13010$1i4eWV)
        (bytevector-ieee-single-set! . g$13009$1i4eWV)
        (bytevector-ieee-single-ref . g$13008$1i4eWV)
        (bytevector-ieee-single-native-set! . g$5841$1i4eWV)
        (bytevector-ieee-single-native-ref . g$5839$1i4eWV)
        (bytevector-ieee-double-set! . g$13007$1i4eWV)
        (bytevector-ieee-double-ref . g$13006$1i4eWV)
        (bytevector-ieee-double-native-set! . g$5842$1i4eWV)
        (bytevector-ieee-double-native-ref . g$5840$1i4eWV)
        (bytevector-fill! . g$13005$1i4eWV)
        (bytevector-copy! . g$13004$1i4eWV)
        (bytevector-copy . g$13003$1i4eWV)
        (bytevector->uint-list . g$13002$1i4eWV)
        (bytevector->u8-list . g$13001$1i4eWV)
        (bytevector->sint-list . g$13000$1i4eWV)
        (no-nans-violation? . g$6332$1i4eWV)
        (no-infinities-violation? . g$6319$1i4eWV)
        (make-no-nans-violation . g$6331$1i4eWV)
        (make-no-infinities-violation . g$6318$1i4eWV)
        (real->flonum . g$12999$1i4eWV)
        (flzero? . g$7569$1i4eWV)
        (fltruncate . g$7564$1i4eWV)
        (fltan . g$7550$1i4eWV)
        (flsqrt . g$7555$1i4eWV)
        (flsin . g$7548$1i4eWV)
        (flround . g$7565$1i4eWV)
        (flpositive? . g$7567$1i4eWV)
        (flonum? . g$5508$1i4eWV)
        (flodd? . g$7571$1i4eWV)
        (flnumerator . g$12998$1i4eWV)
        (flnegative? . g$7568$1i4eWV)
        (flnan? . g$7547$1i4eWV)
        (flmod0 . g$7532$1i4eWV)
        (flmod . g$7531$1i4eWV)
        (flmin . g$7573$1i4eWV)
        (flmax . g$7572$1i4eWV)
        (fllog . g$7554$1i4eWV)
        (flinteger? . g$7540$1i4eWV)
        (flinfinite? . g$7546$1i4eWV)
        (flfloor . g$7563$1i4eWV)
        (flfinite? . g$7541$1i4eWV)
        (flexpt . g$7557$1i4eWV)
        (flexp . g$7556$1i4eWV)
        (fleven? . g$7570$1i4eWV)
        (fldiv0-and-mod0 . g$7539$1i4eWV)
        (fldiv0 . g$7526$1i4eWV)
        (fldiv-and-mod . g$7533$1i4eWV)
        (fldiv . g$7538$1i4eWV)
        (fldenominator . g$12997$1i4eWV)
        (flcos . g$7549$1i4eWV)
        (flceiling . g$7558$1i4eWV)
        (flatan . g$7553$1i4eWV)
        (flasin . g$7551$1i4eWV)
        (flacos . g$7552$1i4eWV)
        (flabs . g$7566$1i4eWV)
        (fl>? . g$7520$1i4eWV)
        (fl>=? . g$7521$1i4eWV)
        (fl=? . g$7517$1i4eWV)
        (fl<? . g$7518$1i4eWV)
        (fl<=? . g$7519$1i4eWV)
        (fl/ . g$7516$1i4eWV)
        (fl- . g$7515$1i4eWV)
        (fl+ . g$7513$1i4eWV)
        (fl* . g$7514$1i4eWV)
        (fixnum->flonum . g$12996$1i4eWV)
        (fxzero? . g$6613$1i4eWV)
        (fxxor . g$6576$1i4eWV)
        (fxrotate-bit-field . g$6651$1i4eWV)
        (fxreverse-bit-field . g$6652$1i4eWV)
        (fxpositive? . g$6603$1i4eWV)
        (fxodd? . g$6623$1i4eWV)
        (fxnot . g$6557$1i4eWV)
        (fxnegative? . g$6608$1i4eWV)
        (fxmod0 . g$6587$1i4eWV)
        (fxmod . g$6586$1i4eWV)
        (fxmin . g$6625$1i4eWV)
        (fxmax . g$6624$1i4eWV)
        (fxlength . g$6554$1i4eWV)
        (fxior . g$6575$1i4eWV)
        (fxif . g$6633$1i4eWV)
        (fxfirst-bit-set . g$6555$1i4eWV)
        (fxeven? . g$6618$1i4eWV)
        (fxdiv0-and-mod0 . g$6598$1i4eWV)
        (fxdiv0 . g$6593$1i4eWV)
        (fxdiv-and-mod . g$6588$1i4eWV)
        (fxdiv . g$6581$1i4eWV)
        (fxcopy-bit-field . g$6648$1i4eWV)
        (fxcopy-bit . g$6638$1i4eWV)
        (fxbit-set? . g$6556$1i4eWV)
        (fxbit-field . g$6643$1i4eWV)
        (fxbit-count . g$6549$1i4eWV)
        (fxarithmetic-shift-right . g$6650$1i4eWV)
        (fxarithmetic-shift-left . g$6649$1i4eWV)
        (fxarithmetic-shift . g$6544$1i4eWV)
        (fxand . g$6574$1i4eWV)
        (fx>? . g$6566$1i4eWV)
        (fx>=? . g$6567$1i4eWV)
        (fx=? . g$6563$1i4eWV)
        (fx<? . g$6564$1i4eWV)
        (fx<=? . g$6565$1i4eWV)
        (fx-/carry . g$6627$1i4eWV)
        (fx- . g$6538$1i4eWV)
        (fx+/carry . g$6628$1i4eWV)
        (fx+ . g$6536$1i4eWV)
        (fx*/carry . g$6626$1i4eWV)
        (fx* . g$6537$1i4eWV)
        (greatest-fixnum . g$6507$1i4eWV)
        (least-fixnum . g$6508$1i4eWV)
        (fixnum-width . g$5509$1i4eWV)
        (fixnum? . g$5507$1i4eWV)
        (bitwise-rotate-bit-field . g$6481$1i4eWV)
        (bitwise-reverse-bit-field . g$12995$1i4eWV)
        (bitwise-length . g$12994$1i4eWV)
        (bitwise-if . g$6475$1i4eWV)
        (bitwise-first-bit-set . g$12993$1i4eWV)
        (bitwise-copy-bit-field . g$6478$1i4eWV)
        (bitwise-copy-bit . g$6476$1i4eWV)
        (bitwise-bit-set? . g$12992$1i4eWV)
        (bitwise-bit-field . g$6477$1i4eWV)
        (bitwise-bit-count . g$12991$1i4eWV)
        (bitwise-xor . g$12990$1i4eWV)
        (bitwise-ior . g$12989$1i4eWV)
        (bitwise-and . g$12988$1i4eWV)
        (bitwise-not . g$12987$1i4eWV)
        (bitwise-arithmetic-shift-right . g$6480$1i4eWV)
        (bitwise-arithmetic-shift-left . g$6479$1i4eWV)
        (bitwise-arithmetic-shift . g$12986$1i4eWV)
        (zero? . g$5551$1i4eWV)
        (vector? . g$5502$1i4eWV)
        (vector-set! . g$5517$1i4eWV)
        (vector-ref . g$5516$1i4eWV)
        (vector-map . g$5583$1i4eWV)
        (vector-length . g$12985$1i4eWV)
        (vector-for-each . g$5584$1i4eWV)
        (vector-fill! . g$5518$1i4eWV)
        (vector->list . g$12984$1i4eWV)
        (vector . g$12983$1i4eWV)
        (values . g$12982$1i4eWV)
        (truncate . g$12981$1i4eWV)
        (tan . g$12980$1i4eWV)
        (symbol? . g$5504$1i4eWV)
        (symbol=? . g$5568$1i4eWV)
        (symbol->string . g$12979$1i4eWV)
        (substring . g$12978$1i4eWV)
        (string? . g$12977$1i4eWV)
        (string>? . g$5565$1i4eWV)
        (string>=? . g$5567$1i4eWV)
        (string=? . g$5563$1i4eWV)
        (string<? . g$5564$1i4eWV)
        (string<=? . g$5566$1i4eWV)
        (string-ref . g$12976$1i4eWV)
        (string-length . g$12975$1i4eWV)
        (string-for-each . g$5585$1i4eWV)
        (string-copy . g$12974$1i4eWV)
        (string-append . g$12973$1i4eWV)
        (string->symbol . g$12972$1i4eWV)
        (string->number . g$12971$1i4eWV)
        (string->list . g$12970$1i4eWV)
        (string . g$12969$1i4eWV)
        (sqrt . g$12968$1i4eWV)
        (sin . g$12967$1i4eWV)
        (round . g$12966$1i4eWV)
        (reverse . g$5520$1i4eWV)
        (real? . g$12965$1i4eWV)
        (real-valued? . g$12964$1i4eWV)
        (real-part . g$12963$1i4eWV)
        (rationalize . g$5580$1i4eWV)
        (rational? . g$12962$1i4eWV)
        (rational-valued? . g$12961$1i4eWV)
        (procedure? . g$5506$1i4eWV)
        (positive? . g$5549$1i4eWV)
        (pair? . g$12960$1i4eWV)
        (odd? . g$5553$1i4eWV)
        (numerator . g$12959$1i4eWV)
        (number? . g$12958$1i4eWV)
        (number->string . g$12957$1i4eWV)
        (null? . g$12956$1i4eWV)
        (not . g$12955$1i4eWV)
        (negative? . g$5550$1i4eWV)
        (nan? . g$12954$1i4eWV)
        (min . g$5555$1i4eWV)
        (max . g$5554$1i4eWV)
        (map . g$5164$1i4eWV)
        (make-vector . g$12953$1i4eWV)
        (make-string . g$12952$1i4eWV)
        (make-rectangular . g$12951$1i4eWV)
        (make-polar . g$12950$1i4eWV)
        (magnitude . g$12949$1i4eWV)
        (log . g$12948$1i4eWV)
        (list? . g$12947$1i4eWV)
        (list-tail . g$5144$1i4eWV)
        (list-ref . g$5145$1i4eWV)
        (list->vector . g$5514$1i4eWV)
        (list->string . g$5515$1i4eWV)
        (list . g$12946$1i4eWV)
        (length . g$12945$1i4eWV)
        (lcm . g$5557$1i4eWV)
        (integer? . g$12944$1i4eWV)
        (integer-valued? . g$12943$1i4eWV)
        (integer->char . g$12942$1i4eWV)
        (infinite? . g$12941$1i4eWV)
        (inexact? . g$12940$1i4eWV)
        (inexact . g$12939$1i4eWV)
        (imag-part . g$12938$1i4eWV)
        (gcd . g$5556$1i4eWV)
        (for-each . g$5165$1i4eWV)
        (floor . g$12937$1i4eWV)
        (finite? . g$12936$1i4eWV)
        (expt . g$12935$1i4eWV)
        (exp . g$12934$1i4eWV)
        (exact? . g$12933$1i4eWV)
        (exact-integer-sqrt . g$12932$1i4eWV)
        (exact . g$12931$1i4eWV)
        (even? . g$5552$1i4eWV)
        (error . g$12930$1i4eWV)
        (eqv? . g$12929$1i4eWV)
        (equal? . g$12928$1i4eWV)
        (eq? . g$12927$1i4eWV)
        (dynamic-wind . g$12926$1i4eWV)
        (div0-and-mod0 . g$5513$1i4eWV)
        (mod0 . g$5511$1i4eWV)
        (div0 . g$12925$1i4eWV)
        (div-and-mod . g$5512$1i4eWV)
        (mod . g$5510$1i4eWV)
        (div . g$12924$1i4eWV)
        (denominator . g$12923$1i4eWV)
        (cos . g$12922$1i4eWV)
        (cons . g$12921$1i4eWV)
        (complex? . g$12920$1i4eWV)
        (char? . g$5501$1i4eWV)
        (char>? . g$5577$1i4eWV)
        (char>=? . g$5579$1i4eWV)
        (char=? . g$5575$1i4eWV)
        (char<? . g$5576$1i4eWV)
        (char<=? . g$5578$1i4eWV)
        (char->integer . g$12919$1i4eWV)
        (ceiling . g$12918$1i4eWV)
        (call-with-values . g$12917$1i4eWV)
        (call/cc . g$12916$1i4eWV)
        (call-with-current-continuation . g$12915$1i4eWV)
        (cddddr . g$5548$1i4eWV)
        (cdddar . g$5547$1i4eWV)
        (cddadr . g$5546$1i4eWV)
        (cddaar . g$5545$1i4eWV)
        (cdaddr . g$5544$1i4eWV)
        (cdadar . g$5543$1i4eWV)
        (cdaadr . g$5542$1i4eWV)
        (cdaaar . g$5541$1i4eWV)
        (cadddr . g$5540$1i4eWV)
        (caddar . g$5539$1i4eWV)
        (cadadr . g$5538$1i4eWV)
        (cadaar . g$5537$1i4eWV)
        (caaddr . g$5536$1i4eWV)
        (caadar . g$5535$1i4eWV)
        (caaadr . g$5534$1i4eWV)
        (caaaar . g$5533$1i4eWV)
        (cdddr . g$5532$1i4eWV)
        (cddar . g$5531$1i4eWV)
        (cdadr . g$5530$1i4eWV)
        (cdaar . g$5529$1i4eWV)
        (caddr . g$5528$1i4eWV)
        (cadar . g$5527$1i4eWV)
        (caadr . g$5526$1i4eWV)
        (caaar . g$5525$1i4eWV)
        (cddr . g$5524$1i4eWV)
        (cdar . g$5523$1i4eWV)
        (cadr . g$5522$1i4eWV)
        (caar . g$5521$1i4eWV)
        (cdr . g$12914$1i4eWV)
        (car . g$12913$1i4eWV)
        (boolean? . g$5505$1i4eWV)
        (boolean=? . g$5569$1i4eWV)
        (atan . g$12912$1i4eWV)
        (assertion-violation . g$12911$1i4eWV)
        (asin . g$12910$1i4eWV)
        (apply . g$12909$1i4eWV)
        (append . g$12908$1i4eWV)
        (angle . g$12907$1i4eWV)
        (acos . g$12906$1i4eWV)
        (abs . g$12905$1i4eWV)
        (/ . g$12904$1i4eWV)
        (* . g$12903$1i4eWV)
        (- . g$12902$1i4eWV)
        (+ . g$12901$1i4eWV)
        (>= . g$12900$1i4eWV)
        (> . g$12899$1i4eWV)
        (= . g$12898$1i4eWV)
        (<= . g$12897$1i4eWV)
        (< . g$12896$1i4eWV)
        (deserialize-port . g$12859$1i4eWV)
        (serialize-port . g$12858$1i4eWV)
        (enum-set? . g$8192$1i4eWV)
        (load/unload . g$12671$1i4eWV)
        (load/args . g$12670$1i4eWV)
        (printf . g$8301$1i4eWV)
        (fprintf . g$8302$1i4eWV)
        (format . g$8303$1i4eWV)
        (procedure-form . g$12857$1i4eWV)
        (procedure-environment . g$12856$1i4eWV)
        (procedure-name . g$12855$1i4eWV)
        (procedure-arity . g$12854$1i4eWV)
        (gc-collect . g$12853$1i4eWV)
        (typeof . g$12852$1i4eWV)
        (clr-type? . g$12851$1i4eWV)
        (get-clr-type . g$12850$1i4eWV)
        (vector-append . g$12848$1i4eWV)
        (vector-filter . g$12847$1i4eWV)
        (vector-reverse! . g$12846$1i4eWV)
        (vector-contains? . g$12845$1i4eWV)
        (vector-index-of . g$12844$1i4eWV)
        (vector-copy . g$12843$1i4eWV)
        (vector-binary-search . g$12842$1i4eWV)
        (string-ci-compare . g$12841$1i4eWV)
        (string-compare . g$12840$1i4eWV)
        (string-format . g$12839$1i4eWV)
        (trace-printer . g$12667$1i4eWV)
        (time-it . g$12837$1i4eWV)
        (make-parameter . g$8330$1i4eWV)
        (open-tcp-input/output-port . g$12834$1i4eWV)
        (hashtable-for-each . g$12833$1i4eWV)
        (hashtable-map . g$12832$1i4eWV)
        (environment-bindings . g$9623$1i4eWV)
        (environment-symbols . g$9626$1i4eWV)
        (interaction-environment-symbols . g$9622$1i4eWV)
        (optimization-level . g$12831$1i4eWV)
        (library-path . g$8952$1i4eWV)
        (make-compile-time-value . g$9331$1i4eWV)
        (expand->core . g$9632$1i4eWV)
        (expand . g$9630$1i4eWV)
        (syntax-transpose . g$9569$1i4eWV)
        (convert->cps . g$8649$1i4eWV)
        (installed-libraries . g$8973$1i4eWV)
        (uninstall-library . g$8964$1i4eWV)
        (pretty-gensyms . g$8413$1i4eWV)
        (pretty-width . g$8410$1i4eWV)
        (pretty-print . g$8415$1i4eWV)
        (pointer+ . g$12830$1i4eWV)
        (&no-nans . g$12829$1i4eWV)
        (&no-infinities . g$12828$1i4eWV)
        (&i/o-encoding . g$12827$1i4eWV)
        (&i/o-decoding . g$12826$1i4eWV)
        (&i/o-port . g$12825$1i4eWV)
        (&i/o-file-does-not-exist . g$12824$1i4eWV)
        (&i/o-file-already-exists . g$12823$1i4eWV)
        (&i/o-file-is-read-only . g$12822$1i4eWV)
        (&i/o-file-protection . g$12821$1i4eWV)
        (&i/o-filename . g$12820$1i4eWV)
        (&i/o-invalid-position . g$12819$1i4eWV)
        (&i/o-write . g$12818$1i4eWV)
        (&i/o-read . g$12817$1i4eWV)
        (&i/o . g$12816$1i4eWV)
        (&non-continuable . g$12815$1i4eWV)
        (&undefined . g$12814$1i4eWV)
        (&syntax . g$12813$1i4eWV)
        (&lexical . g$12812$1i4eWV)
        (&implementation-restriction . g$12811$1i4eWV)
        (&who . g$12810$1i4eWV)
        (&irritants . g$12809$1i4eWV)
        (&assertion . g$12808$1i4eWV)
        (&violation . g$12807$1i4eWV)
        (&error . g$12806$1i4eWV)
        (&serious . g$12805$1i4eWV)
        (&warning . g$12804$1i4eWV)
        (&message . g$12803$1i4eWV)
        (&condition . g$12802$1i4eWV)
        (define-condition-type . g$12801$1i4eWV)
        (define-enumeration . g$12800$1i4eWV)
        (define-record-type . g$12799$1i4eWV)
        (parent-rtd . g$12798$1i4eWV)
        (nongenerative . g$12797$1i4eWV)
        (opaque . g$12796$1i4eWV)
        (sealed . g$12795$1i4eWV)
        (protocol . g$12794$1i4eWV)
        (parent . g$12793$1i4eWV)
        (immutable . g$12792$1i4eWV)
        (mutable . g$12791$1i4eWV)
        (fields . g$12790$1i4eWV)
        (error-handling-mode . g$12789$1i4eWV)
        (file-options . g$12788$1i4eWV)
        (buffer-mode . g$12787$1i4eWV)
        (eol-style . g$12786$1i4eWV)
        (guard . g$12785$1i4eWV)
        (trace-letrec-syntax . g$12784$1i4eWV)
        (trace-let-syntax . g$12783$1i4eWV)
        (trace-define-syntax . g$12782$1i4eWV)
        (trace-define . g$12781$1i4eWV)
        (trace-lambda . g$12780$1i4eWV)
        (unsyntax-splicing . g$12779$1i4eWV)
        (unsyntax . g$12778$1i4eWV)
        (unquote-splicing . g$12777$1i4eWV)
        (unquote . g$12776$1i4eWV)
        (_ . g$12775$1i4eWV)
        (else . g$12774$1i4eWV)
        (=> . g$12773$1i4eWV)
        (... . g$12772$1i4eWV)
        (assert . g$12771$1i4eWV)
        (endianness . g$12770$1i4eWV)
        (delay . g$12769$1i4eWV)
        (time . g$12768$1i4eWV)
        (or . g$12767$1i4eWV)
        (and . g$12766$1i4eWV)
        (do . g$12765$1i4eWV)
        (cond . g$12764$1i4eWV)
        (let* . g$12763$1i4eWV)
        (let . g$12762$1i4eWV)
        (identifier-syntax . g$12761$1i4eWV)
        (with-syntax . g$12760$1i4eWV)
        (quasisyntax . g$12759$1i4eWV)
        (quasiquote . g$12758$1i4eWV)
        (syntax-rules . g$12757$1i4eWV)
        (include-into . g$12756$1i4eWV)
        (include . g$12755$1i4eWV)
        (let-values . g$12753$1i4eWV)
        (let*-values . g$12752$1i4eWV)
        (record-constructor-descriptor . g$12751$1i4eWV)
        (record-type-descriptor . g$12750$1i4eWV)
        (fluid-let-syntax . g$12749$1i4eWV)
        (case . g$12748$1i4eWV)
        (parameterize . g$12747$1i4eWV)
        (unless . g$12746$1i4eWV)
        (when . g$12745$1i4eWV)
        (if . g$12744$1i4eWV)
        (letrec* . g$12743$1i4eWV)
        (letrec . g$12742$1i4eWV)
        (case-lambda . g$12740$1i4eWV)
        (lambda . g$12739$1i4eWV)
        (syntax . g$12738$1i4eWV)
        (syntax-case . g$12737$1i4eWV)
        (quote . g$12736$1i4eWV)
        (letrec-syntax . g$12734$1i4eWV)
        (let-syntax . g$12733$1i4eWV)
        (set! . g$12732$1i4eWV)
        (export . g$12731$1i4eWV)
        (import . g$12730$1i4eWV)
        (library . g$12729$1i4eWV)
        (begin . g$12728$1i4eWV)
        (module . g$12727$1i4eWV)
        (define-syntax . g$12726$1i4eWV)
        (define . g$12725$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13200$1i4eWV
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12835$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13201$1i4eWV
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13197$1i4eWV)
        (annotation-source . g$13196$1i4eWV)
        (annotation-expression . g$13195$1i4eWV)
        (annotation? . g$13194$1i4eWV)
        (read-annotated . g$13193$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13202$1i4eWV
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13162$1i4eWV)
        (serialize-library . g$13161$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13203$1i4eWV
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$13160$1i4eWV)
        (variable-transformer-procedure . g$9333$1i4eWV)
        (variable-transformer? . g$9332$1i4eWV)
        (eqv-hash . g$12861$1i4eWV)
        (reverse! . g$12860$1i4eWV)
        (make-promise . g$6352$1i4eWV)
        (format . g$8303$1i4eWV)
        (get-command-line . g$12849$1i4eWV)
        (make-traced-procedure . g$12838$1i4eWV)
        (make-traced-macro . g$8323$1i4eWV)
        (assertion-error . g$9645$1i4eWV)
        (library-locator . g$12836$1i4eWV)
        (get-library-paths . g$12835$1i4eWV)
        (library-path . g$8952$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13204$1i4eWV
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($fl>=? . g$12895$1i4eWV)
        ($fl>? . g$12894$1i4eWV)
        ($fl<=? . g$12893$1i4eWV)
        ($fl<? . g$12892$1i4eWV)
        ($fl- . g$12891$1i4eWV)
        ($fl/ . g$12890$1i4eWV)
        ($fl* . g$12889$1i4eWV)
        ($fl+ . g$12888$1i4eWV)
        ($fl=? . g$12887$1i4eWV)
        ($try . g$12886$1i4eWV)
        ($fxarithmetic-shift-right . g$12885$1i4eWV)
        ($fxarithmetic-shift-left . g$12884$1i4eWV)
        ($$fx- . g$12883$1i4eWV)
        ($$fx* . g$12882$1i4eWV)
        ($$fx+ . g$12881$1i4eWV)
        ($fxnot . g$12880$1i4eWV)
        ($fxxor . g$12879$1i4eWV)
        ($fxior . g$12878$1i4eWV)
        ($fxand . g$12877$1i4eWV)
        ($fx>=? . g$12876$1i4eWV)
        ($fx>? . g$12875$1i4eWV)
        ($fx<=? . g$12874$1i4eWV)
        ($fx<? . g$12873$1i4eWV)
        ($fx- . g$12872$1i4eWV)
        ($fxmod0 . g$12871$1i4eWV)
        ($fxdiv0 . g$12870$1i4eWV)
        ($fx* . g$12869$1i4eWV)
        ($fx+ . g$12868$1i4eWV)
        ($fx=? . g$12867$1i4eWV)
        ($vector-set! . g$12866$1i4eWV)
        ($vector-ref . g$12865$1i4eWV)
        ($cdr . g$12864$1i4eWV)
        ($car . g$12863$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13205$1i4eWV
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12862$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13206$1i4eWV
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$13184$1i4eWV)
        (ffi-callback-internal . g$13183$1i4eWV)
        (ffi-callout-internal . g$13182$1i4eWV)
        (define-clr-class-internal . g$13181$1i4eWV)
        (clr-field-set!-internal . g$13180$1i4eWV)
        (clr-field-get-internal . g$13179$1i4eWV)
        (clr-cast-internal . g$13178$1i4eWV)
        (clr-call-internal . g$13177$1i4eWV)
        (clr-new-internal . g$13176$1i4eWV)
        (clr-new-array-internal . g$13175$1i4eWV)
        (clr-is-internal . g$13174$1i4eWV)
        (clr-reference-internal . g$13173$1i4eWV)
        (clr-using-internal . g$13172$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13207$1i4eWV
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12777$1i4eWV)
        (unquote . g$12776$1i4eWV)
        (else . g$12774$1i4eWV)
        (=> . g$12773$1i4eWV)
        (delay . g$12769$1i4eWV)
        (or . g$12767$1i4eWV)
        (and . g$12766$1i4eWV)
        (do . g$12765$1i4eWV)
        (cond . g$12764$1i4eWV)
        (let* . g$12763$1i4eWV)
        (let . g$12762$1i4eWV)
        (quasiquote . g$12758$1i4eWV)
        (syntax-rules . g$12757$1i4eWV)
        (case . g$12748$1i4eWV)
        (if . g$12744$1i4eWV)
        (letrec . g$12742$1i4eWV)
        (lambda . g$12739$1i4eWV)
        (quote . g$12736$1i4eWV)
        (letrec-syntax . g$12734$1i4eWV)
        (let-syntax . g$12733$1i4eWV)
        (set! . g$12732$1i4eWV)
        (begin . g$12728$1i4eWV)
        (define-syntax . g$12726$1i4eWV)
        (define . g$12725$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13208$1i4eWV
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$13159$1i4eWV)
        (string-ci>? . g$6401$1i4eWV)
        (string-ci>=? . g$6403$1i4eWV)
        (string-ci=? . g$6399$1i4eWV)
        (string-ci<? . g$6400$1i4eWV)
        (string-ci<=? . g$6402$1i4eWV)
        (char-whitespace? . g$13154$1i4eWV)
        (char-upper-case? . g$13153$1i4eWV)
        (char-numeric? . g$13151$1i4eWV)
        (char-lower-case? . g$13150$1i4eWV)
        (char-upcase . g$13148$1i4eWV)
        (char-downcase . g$13145$1i4eWV)
        (char-ci>? . g$6411$1i4eWV)
        (char-ci>=? . g$6413$1i4eWV)
        (char-ci=? . g$6409$1i4eWV)
        (char-ci<? . g$6410$1i4eWV)
        (char-ci<=? . g$6412$1i4eWV)
        (char-alphabetic? . g$13144$1i4eWV)
        (call-with-output-file . g$8154$1i4eWV)
        (call-with-input-file . g$8153$1i4eWV)
        (write-char . g$8145$1i4eWV)
        (write . g$13112$1i4eWV)
        (with-output-to-file . g$8152$1i4eWV)
        (with-input-from-file . g$8151$1i4eWV)
        (read-char . g$8144$1i4eWV)
        (read . g$13111$1i4eWV)
        (peek-char . g$8143$1i4eWV)
        (open-output-file . g$13110$1i4eWV)
        (open-input-file . g$13109$1i4eWV)
        (newline . g$8155$1i4eWV)
        (display . g$13108$1i4eWV)
        (close-output-port . g$13107$1i4eWV)
        (close-input-port . g$13106$1i4eWV)
        (eof-object? . g$13105$1i4eWV)
        (current-error-port . g$13103$1i4eWV)
        (current-output-port . g$13102$1i4eWV)
        (current-input-port . g$13101$1i4eWV)
        (output-port? . g$13100$1i4eWV)
        (input-port? . g$13099$1i4eWV)
        (scheme-report-environment . g$9629$1i4eWV)
        (quotient . g$6349$1i4eWV)
        (null-environment . g$9628$1i4eWV)
        (remainder . g$6350$1i4eWV)
        (modulo . g$6351$1i4eWV)
        (inexact->exact . g$6346$1i4eWV)
        (force . g$6353$1i4eWV)
        (exact->inexact . g$6347$1i4eWV)
        (string-fill! . g$13040$1i4eWV)
        (string-set! . g$13039$1i4eWV)
        (set-cdr! . g$13038$1i4eWV)
        (set-car! . g$13037$1i4eWV)
        (memv . g$5157$1i4eWV)
        (memq . g$5156$1i4eWV)
        (member . g$5158$1i4eWV)
        (assv . g$5153$1i4eWV)
        (assq . g$5152$1i4eWV)
        (assoc . g$5154$1i4eWV)
        (eval . g$9631$1i4eWV)
        (zero? . g$5551$1i4eWV)
        (vector? . g$5502$1i4eWV)
        (vector-set! . g$5517$1i4eWV)
        (vector-ref . g$5516$1i4eWV)
        (vector-length . g$12985$1i4eWV)
        (vector-fill! . g$5518$1i4eWV)
        (vector->list . g$12984$1i4eWV)
        (vector . g$12983$1i4eWV)
        (values . g$12982$1i4eWV)
        (truncate . g$12981$1i4eWV)
        (tan . g$12980$1i4eWV)
        (symbol? . g$5504$1i4eWV)
        (symbol->string . g$12979$1i4eWV)
        (substring . g$12978$1i4eWV)
        (string? . g$12977$1i4eWV)
        (string>? . g$5565$1i4eWV)
        (string>=? . g$5567$1i4eWV)
        (string=? . g$5563$1i4eWV)
        (string<? . g$5564$1i4eWV)
        (string<=? . g$5566$1i4eWV)
        (string-ref . g$12976$1i4eWV)
        (string-length . g$12975$1i4eWV)
        (string-copy . g$12974$1i4eWV)
        (string-append . g$12973$1i4eWV)
        (string->symbol . g$12972$1i4eWV)
        (string->number . g$12971$1i4eWV)
        (string->list . g$12970$1i4eWV)
        (string . g$12969$1i4eWV)
        (sqrt . g$12968$1i4eWV)
        (sin . g$12967$1i4eWV)
        (round . g$12966$1i4eWV)
        (reverse . g$5520$1i4eWV)
        (real? . g$12965$1i4eWV)
        (real-part . g$12963$1i4eWV)
        (rationalize . g$5580$1i4eWV)
        (rational? . g$12962$1i4eWV)
        (procedure? . g$5506$1i4eWV)
        (positive? . g$5549$1i4eWV)
        (pair? . g$12960$1i4eWV)
        (odd? . g$5553$1i4eWV)
        (numerator . g$12959$1i4eWV)
        (number? . g$12958$1i4eWV)
        (number->string . g$12957$1i4eWV)
        (null? . g$12956$1i4eWV)
        (not . g$12955$1i4eWV)
        (negative? . g$5550$1i4eWV)
        (min . g$5555$1i4eWV)
        (max . g$5554$1i4eWV)
        (map . g$5164$1i4eWV)
        (make-vector . g$12953$1i4eWV)
        (make-string . g$12952$1i4eWV)
        (make-rectangular . g$12951$1i4eWV)
        (make-polar . g$12950$1i4eWV)
        (magnitude . g$12949$1i4eWV)
        (log . g$12948$1i4eWV)
        (list? . g$12947$1i4eWV)
        (list-tail . g$5144$1i4eWV)
        (list-ref . g$5145$1i4eWV)
        (list->vector . g$5514$1i4eWV)
        (list->string . g$5515$1i4eWV)
        (list . g$12946$1i4eWV)
        (length . g$12945$1i4eWV)
        (lcm . g$5557$1i4eWV)
        (integer? . g$12944$1i4eWV)
        (integer->char . g$12942$1i4eWV)
        (inexact? . g$12940$1i4eWV)
        (imag-part . g$12938$1i4eWV)
        (gcd . g$5556$1i4eWV)
        (for-each . g$5165$1i4eWV)
        (floor . g$12937$1i4eWV)
        (expt . g$12935$1i4eWV)
        (exp . g$12934$1i4eWV)
        (exact? . g$12933$1i4eWV)
        (even? . g$5552$1i4eWV)
        (eqv? . g$12929$1i4eWV)
        (equal? . g$12928$1i4eWV)
        (eq? . g$12927$1i4eWV)
        (dynamic-wind . g$12926$1i4eWV)
        (denominator . g$12923$1i4eWV)
        (cos . g$12922$1i4eWV)
        (cons . g$12921$1i4eWV)
        (complex? . g$12920$1i4eWV)
        (char? . g$5501$1i4eWV)
        (char>? . g$5577$1i4eWV)
        (char>=? . g$5579$1i4eWV)
        (char=? . g$5575$1i4eWV)
        (char<? . g$5576$1i4eWV)
        (char<=? . g$5578$1i4eWV)
        (char->integer . g$12919$1i4eWV)
        (ceiling . g$12918$1i4eWV)
        (call-with-values . g$12917$1i4eWV)
        (call-with-current-continuation . g$12915$1i4eWV)
        (cddddr . g$5548$1i4eWV)
        (cdddar . g$5547$1i4eWV)
        (cddadr . g$5546$1i4eWV)
        (cddaar . g$5545$1i4eWV)
        (cdaddr . g$5544$1i4eWV)
        (cdadar . g$5543$1i4eWV)
        (cdaadr . g$5542$1i4eWV)
        (cdaaar . g$5541$1i4eWV)
        (cadddr . g$5540$1i4eWV)
        (caddar . g$5539$1i4eWV)
        (cadadr . g$5538$1i4eWV)
        (cadaar . g$5537$1i4eWV)
        (caaddr . g$5536$1i4eWV)
        (caadar . g$5535$1i4eWV)
        (caaadr . g$5534$1i4eWV)
        (caaaar . g$5533$1i4eWV)
        (cdddr . g$5532$1i4eWV)
        (cddar . g$5531$1i4eWV)
        (cdadr . g$5530$1i4eWV)
        (cdaar . g$5529$1i4eWV)
        (caddr . g$5528$1i4eWV)
        (cadar . g$5527$1i4eWV)
        (caadr . g$5526$1i4eWV)
        (caaar . g$5525$1i4eWV)
        (cddr . g$5524$1i4eWV)
        (cdar . g$5523$1i4eWV)
        (cadr . g$5522$1i4eWV)
        (caar . g$5521$1i4eWV)
        (cdr . g$12914$1i4eWV)
        (car . g$12913$1i4eWV)
        (boolean? . g$5505$1i4eWV)
        (atan . g$12912$1i4eWV)
        (asin . g$12910$1i4eWV)
        (apply . g$12909$1i4eWV)
        (append . g$12908$1i4eWV)
        (angle . g$12907$1i4eWV)
        (acos . g$12906$1i4eWV)
        (abs . g$12905$1i4eWV)
        (/ . g$12904$1i4eWV)
        (* . g$12903$1i4eWV)
        (- . g$12902$1i4eWV)
        (+ . g$12901$1i4eWV)
        (>= . g$12900$1i4eWV)
        (> . g$12899$1i4eWV)
        (= . g$12898$1i4eWV)
        (<= . g$12897$1i4eWV)
        (< . g$12896$1i4eWV)
        (unquote-splicing . g$12777$1i4eWV)
        (unquote . g$12776$1i4eWV)
        (else . g$12774$1i4eWV)
        (=> . g$12773$1i4eWV)
        (... . g$12772$1i4eWV)
        (delay . g$12769$1i4eWV)
        (or . g$12767$1i4eWV)
        (and . g$12766$1i4eWV)
        (do . g$12765$1i4eWV)
        (cond . g$12764$1i4eWV)
        (let* . g$12763$1i4eWV)
        (let . g$12762$1i4eWV)
        (quasiquote . g$12758$1i4eWV)
        (syntax-rules . g$12757$1i4eWV)
        (case . g$12748$1i4eWV)
        (if . g$12744$1i4eWV)
        (letrec . g$12742$1i4eWV)
        (lambda . g$12739$1i4eWV)
        (quote . g$12736$1i4eWV)
        (letrec-syntax . g$12734$1i4eWV)
        (let-syntax . g$12733$1i4eWV)
        (set! . g$12732$1i4eWV)
        (begin . g$12728$1i4eWV)
        (define-syntax . g$12726$1i4eWV)
        (define . g$12725$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13209$1i4eWV
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13158$1i4eWV)
        (string-titlecase . g$13157$1i4eWV)
        (string-normalize-nfkd . g$6417$1i4eWV)
        (string-normalize-nfkc . g$6416$1i4eWV)
        (string-normalize-nfd . g$6415$1i4eWV)
        (string-normalize-nfc . g$6414$1i4eWV)
        (string-foldcase . g$13156$1i4eWV)
        (string-downcase . g$13155$1i4eWV)
        (string-ci>? . g$6401$1i4eWV)
        (string-ci>=? . g$6403$1i4eWV)
        (string-ci=? . g$6399$1i4eWV)
        (string-ci<? . g$6400$1i4eWV)
        (string-ci<=? . g$6402$1i4eWV)
        (char-whitespace? . g$13154$1i4eWV)
        (char-upper-case? . g$13153$1i4eWV)
        (char-title-case? . g$13152$1i4eWV)
        (char-numeric? . g$13151$1i4eWV)
        (char-lower-case? . g$13150$1i4eWV)
        (char-general-category . g$13149$1i4eWV)
        (char-upcase . g$13148$1i4eWV)
        (char-titlecase . g$13147$1i4eWV)
        (char-foldcase . g$13146$1i4eWV)
        (char-downcase . g$13145$1i4eWV)
        (char-ci>? . g$6411$1i4eWV)
        (char-ci>=? . g$6413$1i4eWV)
        (char-ci=? . g$6409$1i4eWV)
        (char-ci<? . g$6410$1i4eWV)
        (char-ci<=? . g$6412$1i4eWV)
        (char-alphabetic? . g$13144$1i4eWV)
        (make-variable-transformer . g$9330$1i4eWV)
        (identifier? . g$9650$1i4eWV)
        (generate-temporaries . g$9639$1i4eWV)
        (free-identifier=? . g$9640$1i4eWV)
        (syntax->datum . g$9652$1i4eWV)
        (datum->syntax . g$9651$1i4eWV)
        (bound-identifier=? . g$9641$1i4eWV)
        (record-type-descriptor? . g$13143$1i4eWV)
        (record-predicate . g$13142$1i4eWV)
        (record-mutator . g$13141$1i4eWV)
        (record-constructor . g$13140$1i4eWV)
        (record-accessor . g$13139$1i4eWV)
        (make-record-type-descriptor . g$13138$1i4eWV)
        (make-record-constructor-descriptor . g$13137$1i4eWV)
        (record? . g$13136$1i4eWV)
        (record-type-uid . g$13135$1i4eWV)
        (record-type-sealed? . g$13134$1i4eWV)
        (record-type-parent . g$13133$1i4eWV)
        (record-type-opaque? . g$13132$1i4eWV)
        (record-type-name . g$13131$1i4eWV)
        (record-type-generative? . g$13130$1i4eWV)
        (record-type-field-names . g$13129$1i4eWV)
        (record-rtd . g$13128$1i4eWV)
        (record-field-mutable? . g$13127$1i4eWV)
        (delete-file . g$5808$1i4eWV)
        (file-exists? . g$5807$1i4eWV)
        (vector-sort! . g$13126$1i4eWV)
        (vector-sort . g$13125$1i4eWV)
        (list-sort . g$6370$1i4eWV)
        (symbol-hash . g$13124$1i4eWV)
        (string-ci-hash . g$13123$1i4eWV)
        (string-hash . g$13122$1i4eWV)
        (equal-hash . g$13121$1i4eWV)
        (hashtable-equivalence-function . g$13120$1i4eWV)
        (make-hashtable . g$13119$1i4eWV)
        (hashtable-hash-function . g$13118$1i4eWV)
        (make-eqv-hashtable . g$5775$1i4eWV)
        (make-eq-hashtable . g$5774$1i4eWV)
        (hashtable? . g$13117$1i4eWV)
        (hashtable-update! . g$5781$1i4eWV)
        (hashtable-size . g$5776$1i4eWV)
        (hashtable-set! . g$5778$1i4eWV)
        (hashtable-ref . g$5777$1i4eWV)
        (hashtable-mutable? . g$13116$1i4eWV)
        (hashtable-keys . g$13115$1i4eWV)
        (hashtable-entries . g$13114$1i4eWV)
        (hashtable-delete! . g$5779$1i4eWV)
        (hashtable-copy . g$13113$1i4eWV)
        (hashtable-contains? . g$5780$1i4eWV)
        (hashtable-clear! . g$5782$1i4eWV)
        (call-with-output-file . g$8154$1i4eWV)
        (call-with-input-file . g$8153$1i4eWV)
        (write-char . g$8145$1i4eWV)
        (write . g$13112$1i4eWV)
        (with-output-to-file . g$8152$1i4eWV)
        (with-input-from-file . g$8151$1i4eWV)
        (read-char . g$8144$1i4eWV)
        (read . g$13111$1i4eWV)
        (peek-char . g$8143$1i4eWV)
        (open-output-file . g$13110$1i4eWV)
        (open-input-file . g$13109$1i4eWV)
        (newline . g$8155$1i4eWV)
        (display . g$13108$1i4eWV)
        (close-output-port . g$13107$1i4eWV)
        (close-input-port . g$13106$1i4eWV)
        (eof-object? . g$13105$1i4eWV)
        (eof-object . g$13104$1i4eWV)
        (current-error-port . g$13103$1i4eWV)
        (current-output-port . g$13102$1i4eWV)
        (current-input-port . g$13101$1i4eWV)
        (output-port? . g$13100$1i4eWV)
        (input-port? . g$13099$1i4eWV)
        (utf-8-codec . g$13098$1i4eWV)
        (utf-16-codec . g$13097$1i4eWV)
        (transcoder-error-handling-mode . g$13096$1i4eWV)
        (transcoder-eol-style . g$13095$1i4eWV)
        (transcoder-codec . g$13094$1i4eWV)
        (transcoded-port . g$13093$1i4eWV)
        (textual-port? . g$13092$1i4eWV)
        (string->bytevector . g$13091$1i4eWV)
        (standard-output-port . g$13090$1i4eWV)
        (standard-input-port . g$13089$1i4eWV)
        (standard-error-port . g$13088$1i4eWV)
        (set-port-position! . g$13087$1i4eWV)
        (put-u8 . g$13086$1i4eWV)
        (put-string . g$13085$1i4eWV)
        (put-datum . g$8123$1i4eWV)
        (put-char . g$13084$1i4eWV)
        (put-bytevector . g$13083$1i4eWV)
        (port? . g$8128$1i4eWV)
        (port-transcoder . g$13082$1i4eWV)
        (port-position . g$13081$1i4eWV)
        (port-has-set-port-position!? . g$13080$1i4eWV)
        (port-has-port-position? . g$13079$1i4eWV)
        (port-eof? . g$13078$1i4eWV)
        (output-port-buffer-mode . g$13077$1i4eWV)
        (open-string-output-port . g$8127$1i4eWV)
        (open-string-input-port . g$13076$1i4eWV)
        (open-file-output-port . g$13075$1i4eWV)
        (open-file-input/output-port . g$13074$1i4eWV)
        (open-file-input-port . g$13073$1i4eWV)
        (open-bytevector-output-port . g$13072$1i4eWV)
        (open-bytevector-input-port . g$13071$1i4eWV)
        (native-transcoder . g$13070$1i4eWV)
        (native-eol-style . g$13069$1i4eWV)
        (make-transcoder . g$13068$1i4eWV)
        (latin-1-codec . g$13067$1i4eWV)
        (make-i/o-write-error . g$6180$1i4eWV)
        (make-i/o-read-error . g$6167$1i4eWV)
        (make-i/o-port-error . g$6275$1i4eWV)
        (make-i/o-invalid-position-error . g$6193$1i4eWV)
        (make-i/o-filename-error . g$6208$1i4eWV)
        (make-i/o-file-protection-error . g$6223$1i4eWV)
        (make-i/o-file-is-read-only-error . g$6236$1i4eWV)
        (make-i/o-file-does-not-exist-error . g$6262$1i4eWV)
        (make-i/o-file-already-exists-error . g$6249$1i4eWV)
        (make-i/o-error . g$6154$1i4eWV)
        (make-i/o-encoding-error . g$6303$1i4eWV)
        (make-i/o-decoding-error . g$6290$1i4eWV)
        (make-custom-textual-output-port . g$13066$1i4eWV)
        (make-custom-textual-input/output-port . g$13065$1i4eWV)
        (make-custom-textual-input-port . g$13064$1i4eWV)
        (make-custom-binary-output-port . g$13063$1i4eWV)
        (make-custom-binary-input/output-port . g$13062$1i4eWV)
        (make-custom-binary-input-port . g$13061$1i4eWV)
        (make-bytevector . g$13060$1i4eWV)
        (lookahead-u8 . g$13059$1i4eWV)
        (lookahead-char . g$13058$1i4eWV)
        (i/o-write-error? . g$6181$1i4eWV)
        (i/o-read-error? . g$6168$1i4eWV)
        (i/o-port-error? . g$6277$1i4eWV)
        (i/o-invalid-position-error? . g$6195$1i4eWV)
        (i/o-error-position . g$6196$1i4eWV)
        (i/o-filename-error? . g$6210$1i4eWV)
        (i/o-file-protection-error? . g$6224$1i4eWV)
        (i/o-file-is-read-only-error? . g$6237$1i4eWV)
        (i/o-file-does-not-exist-error? . g$6263$1i4eWV)
        (i/o-file-already-exists-error? . g$6250$1i4eWV)
        (i/o-error? . g$6155$1i4eWV)
        (i/o-error-port . g$6278$1i4eWV)
        (i/o-error-filename . g$6211$1i4eWV)
        (i/o-encoding-error? . g$6305$1i4eWV)
        (i/o-encoding-error-char . g$6306$1i4eWV)
        (i/o-decoding-error? . g$6291$1i4eWV)
        (get-u8 . g$13057$1i4eWV)
        (get-string-n! . g$13056$1i4eWV)
        (get-string-n . g$13055$1i4eWV)
        (get-string-all . g$13054$1i4eWV)
        (get-line . g$13053$1i4eWV)
        (get-datum . g$8124$1i4eWV)
        (get-char . g$13052$1i4eWV)
        (get-bytevector-some . g$13051$1i4eWV)
        (get-bytevector-n! . g$13050$1i4eWV)
        (get-bytevector-n . g$13049$1i4eWV)
        (get-bytevector-all . g$13048$1i4eWV)
        (flush-output-port . g$13047$1i4eWV)
        (close-port . g$13046$1i4eWV)
        (call-with-string-output-port . g$8129$1i4eWV)
        (call-with-port . g$8130$1i4eWV)
        (call-with-bytevector-output-port . g$13045$1i4eWV)
        (bytevector->string . g$13044$1i4eWV)
        (buffer-mode? . g$13043$1i4eWV)
        (binary-port? . g$13042$1i4eWV)
        (exit . g$13041$1i4eWV)
        (command-line . g$12668$1i4eWV)
        (remove . g$5169$1i4eWV)
        (remv . g$5170$1i4eWV)
        (remp . g$5150$1i4eWV)
        (remq . g$5171$1i4eWV)
        (partition . g$5149$1i4eWV)
        (memv . g$5157$1i4eWV)
        (memq . g$5156$1i4eWV)
        (memp . g$5159$1i4eWV)
        (member . g$5158$1i4eWV)
        (exists . g$5163$1i4eWV)
        (for-all . g$5162$1i4eWV)
        (fold-right . g$5168$1i4eWV)
        (fold-left . g$5167$1i4eWV)
        (find . g$5148$1i4eWV)
        (filter . g$5151$1i4eWV)
        (cons* . g$5166$1i4eWV)
        (assv . g$5153$1i4eWV)
        (assq . g$5152$1i4eWV)
        (assp . g$5155$1i4eWV)
        (assoc . g$5154$1i4eWV)
        (with-exception-handler . g$13036$1i4eWV)
        (raise-continuable . g$13035$1i4eWV)
        (raise . g$13034$1i4eWV)
        (make-enumeration . g$8215$1i4eWV)
        (enum-set=? . g$8222$1i4eWV)
        (enum-set-universe . g$8216$1i4eWV)
        (enum-set-union . g$8223$1i4eWV)
        (enum-set-subset? . g$8221$1i4eWV)
        (enum-set-projection . g$8227$1i4eWV)
        (enum-set-member? . g$8220$1i4eWV)
        (enum-set-intersection . g$8224$1i4eWV)
        (enum-set-indexer . g$8217$1i4eWV)
        (enum-set-difference . g$8225$1i4eWV)
        (enum-set-constructor . g$8218$1i4eWV)
        (enum-set-complement . g$8226$1i4eWV)
        (enum-set->list . g$8219$1i4eWV)
        (who-condition? . g$6072$1i4eWV)
        (warning? . g$5991$1i4eWV)
        (violation? . g$6030$1i4eWV)
        (undefined-violation? . g$6142$1i4eWV)
        (syntax-violation? . g$6127$1i4eWV)
        (syntax-violation-subform . g$6129$1i4eWV)
        (syntax-violation-form . g$6128$1i4eWV)
        (syntax-violation . g$9649$1i4eWV)
        (simple-conditions . g$13033$1i4eWV)
        (serious-condition? . g$6004$1i4eWV)
        (non-continuable-violation? . g$6086$1i4eWV)
        (message-condition? . g$5977$1i4eWV)
        (make-who-condition . g$6070$1i4eWV)
        (make-warning . g$5990$1i4eWV)
        (make-violation . g$6029$1i4eWV)
        (make-undefined-violation . g$6141$1i4eWV)
        (make-syntax-violation . g$6124$1i4eWV)
        (make-serious-condition . g$6003$1i4eWV)
        (make-non-continuable-violation . g$6085$1i4eWV)
        (make-message-condition . g$5975$1i4eWV)
        (make-lexical-violation . g$6111$1i4eWV)
        (make-irritants-condition . g$6055$1i4eWV)
        (make-implementation-restriction-violation . g$6098$1i4eWV)
        (make-error . g$6016$1i4eWV)
        (make-assertion-violation . g$6042$1i4eWV)
        (lexical-violation? . g$6112$1i4eWV)
        (irritants-condition? . g$6057$1i4eWV)
        (implementation-restriction-violation? . g$6099$1i4eWV)
        (error? . g$6017$1i4eWV)
        (condition-who . g$6073$1i4eWV)
        (condition-predicate . g$13032$1i4eWV)
        (condition-message . g$5978$1i4eWV)
        (condition-irritants . g$6058$1i4eWV)
        (condition-accessor . g$13031$1i4eWV)
        (condition . g$13030$1i4eWV)
        (assertion-violation? . g$6043$1i4eWV)
        (condition? . g$13029$1i4eWV)
        (utf32->string . g$13028$1i4eWV)
        (utf16->string . g$13027$1i4eWV)
        (utf8->string . g$13026$1i4eWV)
        (uint-list->bytevector . g$13025$1i4eWV)
        (u8-list->bytevector . g$13024$1i4eWV)
        (string->utf8 . g$13023$1i4eWV)
        (string->utf32 . g$13022$1i4eWV)
        (string->utf16 . g$13021$1i4eWV)
        (sint-list->bytevector . g$13020$1i4eWV)
        (native-endianness . g$5814$1i4eWV)
        (bytevector? . g$5503$1i4eWV)
        (bytevector=? . g$13019$1i4eWV)
        (bytevector-uint-set! . g$13018$1i4eWV)
        (bytevector-uint-ref . g$13017$1i4eWV)
        (bytevector-u8-set! . g$13016$1i4eWV)
        (bytevector-u8-ref . g$13015$1i4eWV)
        (bytevector-u64-set! . g$5835$1i4eWV)
        (bytevector-u64-ref . g$5831$1i4eWV)
        (bytevector-u64-native-set! . g$5837$1i4eWV)
        (bytevector-u64-native-ref . g$5833$1i4eWV)
        (bytevector-u32-set! . g$5827$1i4eWV)
        (bytevector-u32-ref . g$5823$1i4eWV)
        (bytevector-u32-native-set! . g$5829$1i4eWV)
        (bytevector-u32-native-ref . g$5825$1i4eWV)
        (bytevector-u16-set! . g$5819$1i4eWV)
        (bytevector-u16-ref . g$5815$1i4eWV)
        (bytevector-u16-native-set! . g$5821$1i4eWV)
        (bytevector-u16-native-ref . g$5817$1i4eWV)
        (bytevector-sint-set! . g$13014$1i4eWV)
        (bytevector-sint-ref . g$13013$1i4eWV)
        (bytevector-s8-set! . g$13012$1i4eWV)
        (bytevector-s8-ref . g$13011$1i4eWV)
        (bytevector-s64-set! . g$5836$1i4eWV)
        (bytevector-s64-ref . g$5832$1i4eWV)
        (bytevector-s64-native-set! . g$5838$1i4eWV)
        (bytevector-s64-native-ref . g$5834$1i4eWV)
        (bytevector-s32-set! . g$5828$1i4eWV)
        (bytevector-s32-ref . g$5824$1i4eWV)
        (bytevector-s32-native-set! . g$5830$1i4eWV)
        (bytevector-s32-native-ref . g$5826$1i4eWV)
        (bytevector-s16-set! . g$5820$1i4eWV)
        (bytevector-s16-ref . g$5816$1i4eWV)
        (bytevector-s16-native-set! . g$5822$1i4eWV)
        (bytevector-s16-native-ref . g$5818$1i4eWV)
        (bytevector-length . g$13010$1i4eWV)
        (bytevector-ieee-single-set! . g$13009$1i4eWV)
        (bytevector-ieee-single-ref . g$13008$1i4eWV)
        (bytevector-ieee-single-native-set! . g$5841$1i4eWV)
        (bytevector-ieee-single-native-ref . g$5839$1i4eWV)
        (bytevector-ieee-double-set! . g$13007$1i4eWV)
        (bytevector-ieee-double-ref . g$13006$1i4eWV)
        (bytevector-ieee-double-native-set! . g$5842$1i4eWV)
        (bytevector-ieee-double-native-ref . g$5840$1i4eWV)
        (bytevector-fill! . g$13005$1i4eWV)
        (bytevector-copy! . g$13004$1i4eWV)
        (bytevector-copy . g$13003$1i4eWV)
        (bytevector->uint-list . g$13002$1i4eWV)
        (bytevector->u8-list . g$13001$1i4eWV)
        (bytevector->sint-list . g$13000$1i4eWV)
        (no-nans-violation? . g$6332$1i4eWV)
        (no-infinities-violation? . g$6319$1i4eWV)
        (make-no-nans-violation . g$6331$1i4eWV)
        (make-no-infinities-violation . g$6318$1i4eWV)
        (real->flonum . g$12999$1i4eWV)
        (flzero? . g$7569$1i4eWV)
        (fltruncate . g$7564$1i4eWV)
        (fltan . g$7550$1i4eWV)
        (flsqrt . g$7555$1i4eWV)
        (flsin . g$7548$1i4eWV)
        (flround . g$7565$1i4eWV)
        (flpositive? . g$7567$1i4eWV)
        (flonum? . g$5508$1i4eWV)
        (flodd? . g$7571$1i4eWV)
        (flnumerator . g$12998$1i4eWV)
        (flnegative? . g$7568$1i4eWV)
        (flnan? . g$7547$1i4eWV)
        (flmod0 . g$7532$1i4eWV)
        (flmod . g$7531$1i4eWV)
        (flmin . g$7573$1i4eWV)
        (flmax . g$7572$1i4eWV)
        (fllog . g$7554$1i4eWV)
        (flinteger? . g$7540$1i4eWV)
        (flinfinite? . g$7546$1i4eWV)
        (flfloor . g$7563$1i4eWV)
        (flfinite? . g$7541$1i4eWV)
        (flexpt . g$7557$1i4eWV)
        (flexp . g$7556$1i4eWV)
        (fleven? . g$7570$1i4eWV)
        (fldiv0-and-mod0 . g$7539$1i4eWV)
        (fldiv0 . g$7526$1i4eWV)
        (fldiv-and-mod . g$7533$1i4eWV)
        (fldiv . g$7538$1i4eWV)
        (fldenominator . g$12997$1i4eWV)
        (flcos . g$7549$1i4eWV)
        (flceiling . g$7558$1i4eWV)
        (flatan . g$7553$1i4eWV)
        (flasin . g$7551$1i4eWV)
        (flacos . g$7552$1i4eWV)
        (flabs . g$7566$1i4eWV)
        (fl>? . g$7520$1i4eWV)
        (fl>=? . g$7521$1i4eWV)
        (fl=? . g$7517$1i4eWV)
        (fl<? . g$7518$1i4eWV)
        (fl<=? . g$7519$1i4eWV)
        (fl/ . g$7516$1i4eWV)
        (fl- . g$7515$1i4eWV)
        (fl+ . g$7513$1i4eWV)
        (fl* . g$7514$1i4eWV)
        (fixnum->flonum . g$12996$1i4eWV)
        (fxzero? . g$6613$1i4eWV)
        (fxxor . g$6576$1i4eWV)
        (fxrotate-bit-field . g$6651$1i4eWV)
        (fxreverse-bit-field . g$6652$1i4eWV)
        (fxpositive? . g$6603$1i4eWV)
        (fxodd? . g$6623$1i4eWV)
        (fxnot . g$6557$1i4eWV)
        (fxnegative? . g$6608$1i4eWV)
        (fxmod0 . g$6587$1i4eWV)
        (fxmod . g$6586$1i4eWV)
        (fxmin . g$6625$1i4eWV)
        (fxmax . g$6624$1i4eWV)
        (fxlength . g$6554$1i4eWV)
        (fxior . g$6575$1i4eWV)
        (fxif . g$6633$1i4eWV)
        (fxfirst-bit-set . g$6555$1i4eWV)
        (fxeven? . g$6618$1i4eWV)
        (fxdiv0-and-mod0 . g$6598$1i4eWV)
        (fxdiv0 . g$6593$1i4eWV)
        (fxdiv-and-mod . g$6588$1i4eWV)
        (fxdiv . g$6581$1i4eWV)
        (fxcopy-bit-field . g$6648$1i4eWV)
        (fxcopy-bit . g$6638$1i4eWV)
        (fxbit-set? . g$6556$1i4eWV)
        (fxbit-field . g$6643$1i4eWV)
        (fxbit-count . g$6549$1i4eWV)
        (fxarithmetic-shift-right . g$6650$1i4eWV)
        (fxarithmetic-shift-left . g$6649$1i4eWV)
        (fxarithmetic-shift . g$6544$1i4eWV)
        (fxand . g$6574$1i4eWV)
        (fx>? . g$6566$1i4eWV)
        (fx>=? . g$6567$1i4eWV)
        (fx=? . g$6563$1i4eWV)
        (fx<? . g$6564$1i4eWV)
        (fx<=? . g$6565$1i4eWV)
        (fx-/carry . g$6627$1i4eWV)
        (fx- . g$6538$1i4eWV)
        (fx+/carry . g$6628$1i4eWV)
        (fx+ . g$6536$1i4eWV)
        (fx*/carry . g$6626$1i4eWV)
        (fx* . g$6537$1i4eWV)
        (greatest-fixnum . g$6507$1i4eWV)
        (least-fixnum . g$6508$1i4eWV)
        (fixnum-width . g$5509$1i4eWV)
        (fixnum? . g$5507$1i4eWV)
        (bitwise-rotate-bit-field . g$6481$1i4eWV)
        (bitwise-reverse-bit-field . g$12995$1i4eWV)
        (bitwise-length . g$12994$1i4eWV)
        (bitwise-if . g$6475$1i4eWV)
        (bitwise-first-bit-set . g$12993$1i4eWV)
        (bitwise-copy-bit-field . g$6478$1i4eWV)
        (bitwise-copy-bit . g$6476$1i4eWV)
        (bitwise-bit-set? . g$12992$1i4eWV)
        (bitwise-bit-field . g$6477$1i4eWV)
        (bitwise-bit-count . g$12991$1i4eWV)
        (bitwise-xor . g$12990$1i4eWV)
        (bitwise-ior . g$12989$1i4eWV)
        (bitwise-and . g$12988$1i4eWV)
        (bitwise-not . g$12987$1i4eWV)
        (bitwise-arithmetic-shift-right . g$6480$1i4eWV)
        (bitwise-arithmetic-shift-left . g$6479$1i4eWV)
        (bitwise-arithmetic-shift . g$12986$1i4eWV)
        (zero? . g$5551$1i4eWV)
        (vector? . g$5502$1i4eWV)
        (vector-set! . g$5517$1i4eWV)
        (vector-ref . g$5516$1i4eWV)
        (vector-map . g$5583$1i4eWV)
        (vector-length . g$12985$1i4eWV)
        (vector-for-each . g$5584$1i4eWV)
        (vector-fill! . g$5518$1i4eWV)
        (vector->list . g$12984$1i4eWV)
        (vector . g$12983$1i4eWV)
        (values . g$12982$1i4eWV)
        (truncate . g$12981$1i4eWV)
        (tan . g$12980$1i4eWV)
        (symbol? . g$5504$1i4eWV)
        (symbol=? . g$5568$1i4eWV)
        (symbol->string . g$12979$1i4eWV)
        (substring . g$12978$1i4eWV)
        (string? . g$12977$1i4eWV)
        (string>? . g$5565$1i4eWV)
        (string>=? . g$5567$1i4eWV)
        (string=? . g$5563$1i4eWV)
        (string<? . g$5564$1i4eWV)
        (string<=? . g$5566$1i4eWV)
        (string-ref . g$12976$1i4eWV)
        (string-length . g$12975$1i4eWV)
        (string-for-each . g$5585$1i4eWV)
        (string-copy . g$12974$1i4eWV)
        (string-append . g$12973$1i4eWV)
        (string->symbol . g$12972$1i4eWV)
        (string->number . g$12971$1i4eWV)
        (string->list . g$12970$1i4eWV)
        (string . g$12969$1i4eWV)
        (sqrt . g$12968$1i4eWV)
        (sin . g$12967$1i4eWV)
        (round . g$12966$1i4eWV)
        (reverse . g$5520$1i4eWV)
        (real? . g$12965$1i4eWV)
        (real-valued? . g$12964$1i4eWV)
        (real-part . g$12963$1i4eWV)
        (rationalize . g$5580$1i4eWV)
        (rational? . g$12962$1i4eWV)
        (rational-valued? . g$12961$1i4eWV)
        (procedure? . g$5506$1i4eWV)
        (positive? . g$5549$1i4eWV)
        (pair? . g$12960$1i4eWV)
        (odd? . g$5553$1i4eWV)
        (numerator . g$12959$1i4eWV)
        (number? . g$12958$1i4eWV)
        (number->string . g$12957$1i4eWV)
        (null? . g$12956$1i4eWV)
        (not . g$12955$1i4eWV)
        (negative? . g$5550$1i4eWV)
        (nan? . g$12954$1i4eWV)
        (min . g$5555$1i4eWV)
        (max . g$5554$1i4eWV)
        (map . g$5164$1i4eWV)
        (make-vector . g$12953$1i4eWV)
        (make-string . g$12952$1i4eWV)
        (make-rectangular . g$12951$1i4eWV)
        (make-polar . g$12950$1i4eWV)
        (magnitude . g$12949$1i4eWV)
        (log . g$12948$1i4eWV)
        (list? . g$12947$1i4eWV)
        (list-tail . g$5144$1i4eWV)
        (list-ref . g$5145$1i4eWV)
        (list->vector . g$5514$1i4eWV)
        (list->string . g$5515$1i4eWV)
        (list . g$12946$1i4eWV)
        (length . g$12945$1i4eWV)
        (lcm . g$5557$1i4eWV)
        (integer? . g$12944$1i4eWV)
        (integer-valued? . g$12943$1i4eWV)
        (integer->char . g$12942$1i4eWV)
        (infinite? . g$12941$1i4eWV)
        (inexact? . g$12940$1i4eWV)
        (inexact . g$12939$1i4eWV)
        (imag-part . g$12938$1i4eWV)
        (gcd . g$5556$1i4eWV)
        (for-each . g$5165$1i4eWV)
        (floor . g$12937$1i4eWV)
        (finite? . g$12936$1i4eWV)
        (expt . g$12935$1i4eWV)
        (exp . g$12934$1i4eWV)
        (exact? . g$12933$1i4eWV)
        (exact-integer-sqrt . g$12932$1i4eWV)
        (exact . g$12931$1i4eWV)
        (even? . g$5552$1i4eWV)
        (error . g$12930$1i4eWV)
        (eqv? . g$12929$1i4eWV)
        (equal? . g$12928$1i4eWV)
        (eq? . g$12927$1i4eWV)
        (dynamic-wind . g$12926$1i4eWV)
        (div0-and-mod0 . g$5513$1i4eWV)
        (mod0 . g$5511$1i4eWV)
        (div0 . g$12925$1i4eWV)
        (div-and-mod . g$5512$1i4eWV)
        (mod . g$5510$1i4eWV)
        (div . g$12924$1i4eWV)
        (denominator . g$12923$1i4eWV)
        (cos . g$12922$1i4eWV)
        (cons . g$12921$1i4eWV)
        (complex? . g$12920$1i4eWV)
        (char? . g$5501$1i4eWV)
        (char>? . g$5577$1i4eWV)
        (char>=? . g$5579$1i4eWV)
        (char=? . g$5575$1i4eWV)
        (char<? . g$5576$1i4eWV)
        (char<=? . g$5578$1i4eWV)
        (char->integer . g$12919$1i4eWV)
        (ceiling . g$12918$1i4eWV)
        (call-with-values . g$12917$1i4eWV)
        (call/cc . g$12916$1i4eWV)
        (call-with-current-continuation . g$12915$1i4eWV)
        (cddddr . g$5548$1i4eWV)
        (cdddar . g$5547$1i4eWV)
        (cddadr . g$5546$1i4eWV)
        (cddaar . g$5545$1i4eWV)
        (cdaddr . g$5544$1i4eWV)
        (cdadar . g$5543$1i4eWV)
        (cdaadr . g$5542$1i4eWV)
        (cdaaar . g$5541$1i4eWV)
        (cadddr . g$5540$1i4eWV)
        (caddar . g$5539$1i4eWV)
        (cadadr . g$5538$1i4eWV)
        (cadaar . g$5537$1i4eWV)
        (caaddr . g$5536$1i4eWV)
        (caadar . g$5535$1i4eWV)
        (caaadr . g$5534$1i4eWV)
        (caaaar . g$5533$1i4eWV)
        (cdddr . g$5532$1i4eWV)
        (cddar . g$5531$1i4eWV)
        (cdadr . g$5530$1i4eWV)
        (cdaar . g$5529$1i4eWV)
        (caddr . g$5528$1i4eWV)
        (cadar . g$5527$1i4eWV)
        (caadr . g$5526$1i4eWV)
        (caaar . g$5525$1i4eWV)
        (cddr . g$5524$1i4eWV)
        (cdar . g$5523$1i4eWV)
        (cadr . g$5522$1i4eWV)
        (caar . g$5521$1i4eWV)
        (cdr . g$12914$1i4eWV)
        (car . g$12913$1i4eWV)
        (boolean? . g$5505$1i4eWV)
        (boolean=? . g$5569$1i4eWV)
        (atan . g$12912$1i4eWV)
        (assertion-violation . g$12911$1i4eWV)
        (asin . g$12910$1i4eWV)
        (apply . g$12909$1i4eWV)
        (append . g$12908$1i4eWV)
        (angle . g$12907$1i4eWV)
        (acos . g$12906$1i4eWV)
        (abs . g$12905$1i4eWV)
        (/ . g$12904$1i4eWV)
        (* . g$12903$1i4eWV)
        (- . g$12902$1i4eWV)
        (+ . g$12901$1i4eWV)
        (>= . g$12900$1i4eWV)
        (> . g$12899$1i4eWV)
        (= . g$12898$1i4eWV)
        (<= . g$12897$1i4eWV)
        (< . g$12896$1i4eWV)
        (&no-nans . g$12829$1i4eWV)
        (&no-infinities . g$12828$1i4eWV)
        (&i/o-encoding . g$12827$1i4eWV)
        (&i/o-decoding . g$12826$1i4eWV)
        (&i/o-port . g$12825$1i4eWV)
        (&i/o-file-does-not-exist . g$12824$1i4eWV)
        (&i/o-file-already-exists . g$12823$1i4eWV)
        (&i/o-file-is-read-only . g$12822$1i4eWV)
        (&i/o-file-protection . g$12821$1i4eWV)
        (&i/o-filename . g$12820$1i4eWV)
        (&i/o-invalid-position . g$12819$1i4eWV)
        (&i/o-write . g$12818$1i4eWV)
        (&i/o-read . g$12817$1i4eWV)
        (&i/o . g$12816$1i4eWV)
        (&non-continuable . g$12815$1i4eWV)
        (&undefined . g$12814$1i4eWV)
        (&syntax . g$12813$1i4eWV)
        (&lexical . g$12812$1i4eWV)
        (&implementation-restriction . g$12811$1i4eWV)
        (&who . g$12810$1i4eWV)
        (&irritants . g$12809$1i4eWV)
        (&assertion . g$12808$1i4eWV)
        (&violation . g$12807$1i4eWV)
        (&error . g$12806$1i4eWV)
        (&serious . g$12805$1i4eWV)
        (&warning . g$12804$1i4eWV)
        (&message . g$12803$1i4eWV)
        (&condition . g$12802$1i4eWV)
        (define-condition-type . g$12801$1i4eWV)
        (define-enumeration . g$12800$1i4eWV)
        (define-record-type . g$12799$1i4eWV)
        (parent-rtd . g$12798$1i4eWV)
        (nongenerative . g$12797$1i4eWV)
        (opaque . g$12796$1i4eWV)
        (sealed . g$12795$1i4eWV)
        (protocol . g$12794$1i4eWV)
        (parent . g$12793$1i4eWV)
        (immutable . g$12792$1i4eWV)
        (mutable . g$12791$1i4eWV)
        (fields . g$12790$1i4eWV)
        (error-handling-mode . g$12789$1i4eWV)
        (file-options . g$12788$1i4eWV)
        (buffer-mode . g$12787$1i4eWV)
        (eol-style . g$12786$1i4eWV)
        (guard . g$12785$1i4eWV)
        (unsyntax-splicing . g$12779$1i4eWV)
        (unsyntax . g$12778$1i4eWV)
        (unquote-splicing . g$12777$1i4eWV)
        (unquote . g$12776$1i4eWV)
        (_ . g$12775$1i4eWV)
        (else . g$12774$1i4eWV)
        (=> . g$12773$1i4eWV)
        (... . g$12772$1i4eWV)
        (assert . g$12771$1i4eWV)
        (endianness . g$12770$1i4eWV)
        (or . g$12767$1i4eWV)
        (and . g$12766$1i4eWV)
        (do . g$12765$1i4eWV)
        (cond . g$12764$1i4eWV)
        (let* . g$12763$1i4eWV)
        (let . g$12762$1i4eWV)
        (identifier-syntax . g$12761$1i4eWV)
        (with-syntax . g$12760$1i4eWV)
        (quasisyntax . g$12759$1i4eWV)
        (quasiquote . g$12758$1i4eWV)
        (syntax-rules . g$12757$1i4eWV)
        (let-values . g$12753$1i4eWV)
        (let*-values . g$12752$1i4eWV)
        (record-constructor-descriptor . g$12751$1i4eWV)
        (record-type-descriptor . g$12750$1i4eWV)
        (case . g$12748$1i4eWV)
        (unless . g$12746$1i4eWV)
        (when . g$12745$1i4eWV)
        (if . g$12744$1i4eWV)
        (letrec* . g$12743$1i4eWV)
        (letrec . g$12742$1i4eWV)
        (case-lambda . g$12740$1i4eWV)
        (lambda . g$12739$1i4eWV)
        (syntax . g$12738$1i4eWV)
        (syntax-case . g$12737$1i4eWV)
        (quote . g$12736$1i4eWV)
        (letrec-syntax . g$12734$1i4eWV)
        (let-syntax . g$12733$1i4eWV)
        (set! . g$12732$1i4eWV)
        (begin . g$12728$1i4eWV)
        (define-syntax . g$12726$1i4eWV)
        (define . g$12725$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13210$1i4eWV
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$9629$1i4eWV)
        (quotient . g$6349$1i4eWV)
        (null-environment . g$9628$1i4eWV)
        (remainder . g$6350$1i4eWV)
        (modulo . g$6351$1i4eWV)
        (inexact->exact . g$6346$1i4eWV)
        (force . g$6353$1i4eWV)
        (exact->inexact . g$6347$1i4eWV)
        (delay . g$12769$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13211$1i4eWV
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12765$1i4eWV)
        (unless . g$12746$1i4eWV)
        (when . g$12745$1i4eWV)
        (case-lambda . g$12740$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13212$1i4eWV
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9631$1i4eWV) (environment . g$9627$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13213$1i4eWV
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$13038$1i4eWV) (set-car! . g$13037$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13214$1i4eWV
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$13040$1i4eWV) (string-set! . g$13039$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13215$1i4eWV
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13041$1i4eWV) (command-line . g$12668$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13216$1i4eWV
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9330$1i4eWV)
        (identifier? . g$9650$1i4eWV)
        (generate-temporaries . g$9639$1i4eWV)
        (free-identifier=? . g$9640$1i4eWV)
        (syntax->datum . g$9652$1i4eWV)
        (datum->syntax . g$9651$1i4eWV)
        (bound-identifier=? . g$9641$1i4eWV)
        (syntax-violation . g$9649$1i4eWV)
        (unsyntax-splicing . g$12779$1i4eWV)
        (unsyntax . g$12778$1i4eWV)
        (_ . g$12775$1i4eWV)
        (... . g$12772$1i4eWV)
        (with-syntax . g$12760$1i4eWV)
        (quasisyntax . g$12759$1i4eWV)
        (syntax . g$12738$1i4eWV)
        (syntax-case . g$12737$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13217$1i4eWV
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5808$1i4eWV)
        (file-exists? . g$5807$1i4eWV)
        (make-i/o-write-error . g$6180$1i4eWV)
        (make-i/o-read-error . g$6167$1i4eWV)
        (make-i/o-port-error . g$6275$1i4eWV)
        (make-i/o-invalid-position-error . g$6193$1i4eWV)
        (make-i/o-filename-error . g$6208$1i4eWV)
        (make-i/o-file-protection-error . g$6223$1i4eWV)
        (make-i/o-file-is-read-only-error . g$6236$1i4eWV)
        (make-i/o-file-does-not-exist-error . g$6262$1i4eWV)
        (make-i/o-file-already-exists-error . g$6249$1i4eWV)
        (make-i/o-error . g$6154$1i4eWV)
        (i/o-write-error? . g$6181$1i4eWV)
        (i/o-read-error? . g$6168$1i4eWV)
        (i/o-port-error? . g$6277$1i4eWV)
        (i/o-invalid-position-error? . g$6195$1i4eWV)
        (i/o-error-position . g$6196$1i4eWV)
        (i/o-filename-error? . g$6210$1i4eWV)
        (i/o-file-protection-error? . g$6224$1i4eWV)
        (i/o-file-is-read-only-error? . g$6237$1i4eWV)
        (i/o-file-does-not-exist-error? . g$6263$1i4eWV)
        (i/o-file-already-exists-error? . g$6250$1i4eWV)
        (i/o-error? . g$6155$1i4eWV)
        (i/o-error-port . g$6278$1i4eWV)
        (i/o-error-filename . g$6211$1i4eWV)
        (&i/o-port . g$12825$1i4eWV)
        (&i/o-file-does-not-exist . g$12824$1i4eWV)
        (&i/o-file-already-exists . g$12823$1i4eWV)
        (&i/o-file-is-read-only . g$12822$1i4eWV)
        (&i/o-file-protection . g$12821$1i4eWV)
        (&i/o-filename . g$12820$1i4eWV)
        (&i/o-invalid-position . g$12819$1i4eWV)
        (&i/o-write . g$12818$1i4eWV)
        (&i/o-read . g$12817$1i4eWV)
        (&i/o . g$12816$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13218$1i4eWV
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13126$1i4eWV)
        (vector-sort . g$13125$1i4eWV)
        (list-sort . g$6370$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13219$1i4eWV
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$5551$1i4eWV)
        (vector? . g$5502$1i4eWV)
        (vector-set! . g$5517$1i4eWV)
        (vector-ref . g$5516$1i4eWV)
        (vector-map . g$5583$1i4eWV)
        (vector-length . g$12985$1i4eWV)
        (vector-for-each . g$5584$1i4eWV)
        (vector-fill! . g$5518$1i4eWV)
        (vector->list . g$12984$1i4eWV)
        (vector . g$12983$1i4eWV)
        (values . g$12982$1i4eWV)
        (truncate . g$12981$1i4eWV)
        (tan . g$12980$1i4eWV)
        (symbol? . g$5504$1i4eWV)
        (symbol=? . g$5568$1i4eWV)
        (symbol->string . g$12979$1i4eWV)
        (substring . g$12978$1i4eWV)
        (string? . g$12977$1i4eWV)
        (string>? . g$5565$1i4eWV)
        (string>=? . g$5567$1i4eWV)
        (string=? . g$5563$1i4eWV)
        (string<? . g$5564$1i4eWV)
        (string<=? . g$5566$1i4eWV)
        (string-ref . g$12976$1i4eWV)
        (string-length . g$12975$1i4eWV)
        (string-for-each . g$5585$1i4eWV)
        (string-copy . g$12974$1i4eWV)
        (string-append . g$12973$1i4eWV)
        (string->symbol . g$12972$1i4eWV)
        (string->number . g$12971$1i4eWV)
        (string->list . g$12970$1i4eWV)
        (string . g$12969$1i4eWV)
        (sqrt . g$12968$1i4eWV)
        (sin . g$12967$1i4eWV)
        (round . g$12966$1i4eWV)
        (reverse . g$5520$1i4eWV)
        (real? . g$12965$1i4eWV)
        (real-valued? . g$12964$1i4eWV)
        (real-part . g$12963$1i4eWV)
        (rationalize . g$5580$1i4eWV)
        (rational? . g$12962$1i4eWV)
        (rational-valued? . g$12961$1i4eWV)
        (procedure? . g$5506$1i4eWV)
        (positive? . g$5549$1i4eWV)
        (pair? . g$12960$1i4eWV)
        (odd? . g$5553$1i4eWV)
        (numerator . g$12959$1i4eWV)
        (number? . g$12958$1i4eWV)
        (number->string . g$12957$1i4eWV)
        (null? . g$12956$1i4eWV)
        (not . g$12955$1i4eWV)
        (negative? . g$5550$1i4eWV)
        (nan? . g$12954$1i4eWV)
        (min . g$5555$1i4eWV)
        (max . g$5554$1i4eWV)
        (map . g$5164$1i4eWV)
        (make-vector . g$12953$1i4eWV)
        (make-string . g$12952$1i4eWV)
        (make-rectangular . g$12951$1i4eWV)
        (make-polar . g$12950$1i4eWV)
        (magnitude . g$12949$1i4eWV)
        (log . g$12948$1i4eWV)
        (list? . g$12947$1i4eWV)
        (list-tail . g$5144$1i4eWV)
        (list-ref . g$5145$1i4eWV)
        (list->vector . g$5514$1i4eWV)
        (list->string . g$5515$1i4eWV)
        (list . g$12946$1i4eWV)
        (length . g$12945$1i4eWV)
        (lcm . g$5557$1i4eWV)
        (integer? . g$12944$1i4eWV)
        (integer-valued? . g$12943$1i4eWV)
        (integer->char . g$12942$1i4eWV)
        (infinite? . g$12941$1i4eWV)
        (inexact? . g$12940$1i4eWV)
        (inexact . g$12939$1i4eWV)
        (imag-part . g$12938$1i4eWV)
        (gcd . g$5556$1i4eWV)
        (for-each . g$5165$1i4eWV)
        (floor . g$12937$1i4eWV)
        (finite? . g$12936$1i4eWV)
        (expt . g$12935$1i4eWV)
        (exp . g$12934$1i4eWV)
        (exact? . g$12933$1i4eWV)
        (exact-integer-sqrt . g$12932$1i4eWV)
        (exact . g$12931$1i4eWV)
        (even? . g$5552$1i4eWV)
        (error . g$12930$1i4eWV)
        (eqv? . g$12929$1i4eWV)
        (equal? . g$12928$1i4eWV)
        (eq? . g$12927$1i4eWV)
        (dynamic-wind . g$12926$1i4eWV)
        (div0-and-mod0 . g$5513$1i4eWV)
        (mod0 . g$5511$1i4eWV)
        (div0 . g$12925$1i4eWV)
        (div-and-mod . g$5512$1i4eWV)
        (mod . g$5510$1i4eWV)
        (div . g$12924$1i4eWV)
        (denominator . g$12923$1i4eWV)
        (cos . g$12922$1i4eWV)
        (cons . g$12921$1i4eWV)
        (complex? . g$12920$1i4eWV)
        (char? . g$5501$1i4eWV)
        (char>? . g$5577$1i4eWV)
        (char>=? . g$5579$1i4eWV)
        (char=? . g$5575$1i4eWV)
        (char<? . g$5576$1i4eWV)
        (char<=? . g$5578$1i4eWV)
        (char->integer . g$12919$1i4eWV)
        (ceiling . g$12918$1i4eWV)
        (call-with-values . g$12917$1i4eWV)
        (call/cc . g$12916$1i4eWV)
        (call-with-current-continuation . g$12915$1i4eWV)
        (cddddr . g$5548$1i4eWV)
        (cdddar . g$5547$1i4eWV)
        (cddadr . g$5546$1i4eWV)
        (cddaar . g$5545$1i4eWV)
        (cdaddr . g$5544$1i4eWV)
        (cdadar . g$5543$1i4eWV)
        (cdaadr . g$5542$1i4eWV)
        (cdaaar . g$5541$1i4eWV)
        (cadddr . g$5540$1i4eWV)
        (caddar . g$5539$1i4eWV)
        (cadadr . g$5538$1i4eWV)
        (cadaar . g$5537$1i4eWV)
        (caaddr . g$5536$1i4eWV)
        (caadar . g$5535$1i4eWV)
        (caaadr . g$5534$1i4eWV)
        (caaaar . g$5533$1i4eWV)
        (cdddr . g$5532$1i4eWV)
        (cddar . g$5531$1i4eWV)
        (cdadr . g$5530$1i4eWV)
        (cdaar . g$5529$1i4eWV)
        (caddr . g$5528$1i4eWV)
        (cadar . g$5527$1i4eWV)
        (caadr . g$5526$1i4eWV)
        (caaar . g$5525$1i4eWV)
        (cddr . g$5524$1i4eWV)
        (cdar . g$5523$1i4eWV)
        (cadr . g$5522$1i4eWV)
        (caar . g$5521$1i4eWV)
        (cdr . g$12914$1i4eWV)
        (car . g$12913$1i4eWV)
        (boolean? . g$5505$1i4eWV)
        (boolean=? . g$5569$1i4eWV)
        (atan . g$12912$1i4eWV)
        (assertion-violation . g$12911$1i4eWV)
        (asin . g$12910$1i4eWV)
        (apply . g$12909$1i4eWV)
        (append . g$12908$1i4eWV)
        (angle . g$12907$1i4eWV)
        (acos . g$12906$1i4eWV)
        (abs . g$12905$1i4eWV)
        (/ . g$12904$1i4eWV)
        (* . g$12903$1i4eWV)
        (- . g$12902$1i4eWV)
        (+ . g$12901$1i4eWV)
        (>= . g$12900$1i4eWV)
        (> . g$12899$1i4eWV)
        (= . g$12898$1i4eWV)
        (<= . g$12897$1i4eWV)
        (< . g$12896$1i4eWV)
        (unquote-splicing . g$12777$1i4eWV)
        (unquote . g$12776$1i4eWV)
        (_ . g$12775$1i4eWV)
        (else . g$12774$1i4eWV)
        (=> . g$12773$1i4eWV)
        (... . g$12772$1i4eWV)
        (assert . g$12771$1i4eWV)
        (or . g$12767$1i4eWV)
        (and . g$12766$1i4eWV)
        (cond . g$12764$1i4eWV)
        (let* . g$12763$1i4eWV)
        (let . g$12762$1i4eWV)
        (identifier-syntax . g$12761$1i4eWV)
        (quasiquote . g$12758$1i4eWV)
        (syntax-rules . g$12757$1i4eWV)
        (let-values . g$12753$1i4eWV)
        (let*-values . g$12752$1i4eWV)
        (case . g$12748$1i4eWV)
        (if . g$12744$1i4eWV)
        (letrec* . g$12743$1i4eWV)
        (letrec . g$12742$1i4eWV)
        (lambda . g$12739$1i4eWV)
        (quote . g$12736$1i4eWV)
        (letrec-syntax . g$12734$1i4eWV)
        (let-syntax . g$12733$1i4eWV)
        (set! . g$12732$1i4eWV)
        (begin . g$12728$1i4eWV)
        (define-syntax . g$12726$1i4eWV)
        (define . g$12725$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13220$1i4eWV
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5169$1i4eWV)
        (remv . g$5170$1i4eWV)
        (remp . g$5150$1i4eWV)
        (remq . g$5171$1i4eWV)
        (partition . g$5149$1i4eWV)
        (memv . g$5157$1i4eWV)
        (memq . g$5156$1i4eWV)
        (memp . g$5159$1i4eWV)
        (member . g$5158$1i4eWV)
        (exists . g$5163$1i4eWV)
        (for-all . g$5162$1i4eWV)
        (fold-right . g$5168$1i4eWV)
        (fold-left . g$5167$1i4eWV)
        (find . g$5148$1i4eWV)
        (filter . g$5151$1i4eWV)
        (cons* . g$5166$1i4eWV)
        (assv . g$5153$1i4eWV)
        (assq . g$5152$1i4eWV)
        (assp . g$5155$1i4eWV)
        (assoc . g$5154$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13221$1i4eWV
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8154$1i4eWV)
        (call-with-input-file . g$8153$1i4eWV)
        (write-char . g$8145$1i4eWV)
        (write . g$13112$1i4eWV)
        (with-output-to-file . g$8152$1i4eWV)
        (with-input-from-file . g$8151$1i4eWV)
        (read-char . g$8144$1i4eWV)
        (read . g$13111$1i4eWV)
        (peek-char . g$8143$1i4eWV)
        (open-output-file . g$13110$1i4eWV)
        (open-input-file . g$13109$1i4eWV)
        (newline . g$8155$1i4eWV)
        (display . g$13108$1i4eWV)
        (close-output-port . g$13107$1i4eWV)
        (close-input-port . g$13106$1i4eWV)
        (eof-object? . g$13105$1i4eWV)
        (eof-object . g$13104$1i4eWV)
        (current-error-port . g$13103$1i4eWV)
        (current-output-port . g$13102$1i4eWV)
        (current-input-port . g$13101$1i4eWV)
        (output-port? . g$13100$1i4eWV)
        (input-port? . g$13099$1i4eWV)
        (make-i/o-write-error . g$6180$1i4eWV)
        (make-i/o-read-error . g$6167$1i4eWV)
        (make-i/o-port-error . g$6275$1i4eWV)
        (make-i/o-invalid-position-error . g$6193$1i4eWV)
        (make-i/o-filename-error . g$6208$1i4eWV)
        (make-i/o-file-protection-error . g$6223$1i4eWV)
        (make-i/o-file-is-read-only-error . g$6236$1i4eWV)
        (make-i/o-file-does-not-exist-error . g$6262$1i4eWV)
        (make-i/o-file-already-exists-error . g$6249$1i4eWV)
        (make-i/o-error . g$6154$1i4eWV)
        (i/o-write-error? . g$6181$1i4eWV)
        (i/o-read-error? . g$6168$1i4eWV)
        (i/o-port-error? . g$6277$1i4eWV)
        (i/o-invalid-position-error? . g$6195$1i4eWV)
        (i/o-error-position . g$6196$1i4eWV)
        (i/o-filename-error? . g$6210$1i4eWV)
        (i/o-file-protection-error? . g$6224$1i4eWV)
        (i/o-file-is-read-only-error? . g$6237$1i4eWV)
        (i/o-file-does-not-exist-error? . g$6263$1i4eWV)
        (i/o-file-already-exists-error? . g$6250$1i4eWV)
        (i/o-error? . g$6155$1i4eWV)
        (i/o-error-port . g$6278$1i4eWV)
        (i/o-error-filename . g$6211$1i4eWV)
        (&i/o-port . g$12825$1i4eWV)
        (&i/o-file-does-not-exist . g$12824$1i4eWV)
        (&i/o-file-already-exists . g$12823$1i4eWV)
        (&i/o-file-is-read-only . g$12822$1i4eWV)
        (&i/o-file-protection . g$12821$1i4eWV)
        (&i/o-filename . g$12820$1i4eWV)
        (&i/o-invalid-position . g$12819$1i4eWV)
        (&i/o-write . g$12818$1i4eWV)
        (&i/o-read . g$12817$1i4eWV)
        (&i/o . g$12816$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13222$1i4eWV
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$13060$1i4eWV)
        (utf32->string . g$13028$1i4eWV)
        (utf16->string . g$13027$1i4eWV)
        (utf8->string . g$13026$1i4eWV)
        (uint-list->bytevector . g$13025$1i4eWV)
        (u8-list->bytevector . g$13024$1i4eWV)
        (string->utf8 . g$13023$1i4eWV)
        (string->utf32 . g$13022$1i4eWV)
        (string->utf16 . g$13021$1i4eWV)
        (sint-list->bytevector . g$13020$1i4eWV)
        (native-endianness . g$5814$1i4eWV)
        (bytevector? . g$5503$1i4eWV)
        (bytevector=? . g$13019$1i4eWV)
        (bytevector-uint-set! . g$13018$1i4eWV)
        (bytevector-uint-ref . g$13017$1i4eWV)
        (bytevector-u8-set! . g$13016$1i4eWV)
        (bytevector-u8-ref . g$13015$1i4eWV)
        (bytevector-u64-set! . g$5835$1i4eWV)
        (bytevector-u64-ref . g$5831$1i4eWV)
        (bytevector-u64-native-set! . g$5837$1i4eWV)
        (bytevector-u64-native-ref . g$5833$1i4eWV)
        (bytevector-u32-set! . g$5827$1i4eWV)
        (bytevector-u32-ref . g$5823$1i4eWV)
        (bytevector-u32-native-set! . g$5829$1i4eWV)
        (bytevector-u32-native-ref . g$5825$1i4eWV)
        (bytevector-u16-set! . g$5819$1i4eWV)
        (bytevector-u16-ref . g$5815$1i4eWV)
        (bytevector-u16-native-set! . g$5821$1i4eWV)
        (bytevector-u16-native-ref . g$5817$1i4eWV)
        (bytevector-sint-set! . g$13014$1i4eWV)
        (bytevector-sint-ref . g$13013$1i4eWV)
        (bytevector-s8-set! . g$13012$1i4eWV)
        (bytevector-s8-ref . g$13011$1i4eWV)
        (bytevector-s64-set! . g$5836$1i4eWV)
        (bytevector-s64-ref . g$5832$1i4eWV)
        (bytevector-s64-native-set! . g$5838$1i4eWV)
        (bytevector-s64-native-ref . g$5834$1i4eWV)
        (bytevector-s32-set! . g$5828$1i4eWV)
        (bytevector-s32-ref . g$5824$1i4eWV)
        (bytevector-s32-native-set! . g$5830$1i4eWV)
        (bytevector-s32-native-ref . g$5826$1i4eWV)
        (bytevector-s16-set! . g$5820$1i4eWV)
        (bytevector-s16-ref . g$5816$1i4eWV)
        (bytevector-s16-native-set! . g$5822$1i4eWV)
        (bytevector-s16-native-ref . g$5818$1i4eWV)
        (bytevector-length . g$13010$1i4eWV)
        (bytevector-ieee-single-set! . g$13009$1i4eWV)
        (bytevector-ieee-single-ref . g$13008$1i4eWV)
        (bytevector-ieee-single-native-set! . g$5841$1i4eWV)
        (bytevector-ieee-single-native-ref . g$5839$1i4eWV)
        (bytevector-ieee-double-set! . g$13007$1i4eWV)
        (bytevector-ieee-double-ref . g$13006$1i4eWV)
        (bytevector-ieee-double-native-set! . g$5842$1i4eWV)
        (bytevector-ieee-double-native-ref . g$5840$1i4eWV)
        (bytevector-fill! . g$13005$1i4eWV)
        (bytevector-copy! . g$13004$1i4eWV)
        (bytevector-copy . g$13003$1i4eWV)
        (bytevector->uint-list . g$13002$1i4eWV)
        (bytevector->u8-list . g$13001$1i4eWV)
        (bytevector->sint-list . g$13000$1i4eWV)
        (endianness . g$12770$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13223$1i4eWV
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13158$1i4eWV)
        (string-titlecase . g$13157$1i4eWV)
        (string-normalize-nfkd . g$6417$1i4eWV)
        (string-normalize-nfkc . g$6416$1i4eWV)
        (string-normalize-nfd . g$6415$1i4eWV)
        (string-normalize-nfc . g$6414$1i4eWV)
        (string-foldcase . g$13156$1i4eWV)
        (string-downcase . g$13155$1i4eWV)
        (string-ci>? . g$6401$1i4eWV)
        (string-ci>=? . g$6403$1i4eWV)
        (string-ci=? . g$6399$1i4eWV)
        (string-ci<? . g$6400$1i4eWV)
        (string-ci<=? . g$6402$1i4eWV)
        (char-whitespace? . g$13154$1i4eWV)
        (char-upper-case? . g$13153$1i4eWV)
        (char-title-case? . g$13152$1i4eWV)
        (char-numeric? . g$13151$1i4eWV)
        (char-lower-case? . g$13150$1i4eWV)
        (char-general-category . g$13149$1i4eWV)
        (char-upcase . g$13148$1i4eWV)
        (char-titlecase . g$13147$1i4eWV)
        (char-foldcase . g$13146$1i4eWV)
        (char-downcase . g$13145$1i4eWV)
        (char-ci>? . g$6411$1i4eWV)
        (char-ci>=? . g$6413$1i4eWV)
        (char-ci=? . g$6409$1i4eWV)
        (char-ci<? . g$6410$1i4eWV)
        (char-ci<=? . g$6412$1i4eWV)
        (char-alphabetic? . g$13144$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13224$1i4eWV
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13036$1i4eWV)
        (raise-continuable . g$13035$1i4eWV)
        (raise . g$13034$1i4eWV)
        (guard . g$12785$1i4eWV)
        (else . g$12774$1i4eWV)
        (=> . g$12773$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13225$1i4eWV
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6481$1i4eWV)
        (bitwise-reverse-bit-field . g$12995$1i4eWV)
        (bitwise-length . g$12994$1i4eWV)
        (bitwise-if . g$6475$1i4eWV)
        (bitwise-first-bit-set . g$12993$1i4eWV)
        (bitwise-copy-bit-field . g$6478$1i4eWV)
        (bitwise-copy-bit . g$6476$1i4eWV)
        (bitwise-bit-set? . g$12992$1i4eWV)
        (bitwise-bit-field . g$6477$1i4eWV)
        (bitwise-bit-count . g$12991$1i4eWV)
        (bitwise-xor . g$12990$1i4eWV)
        (bitwise-ior . g$12989$1i4eWV)
        (bitwise-and . g$12988$1i4eWV)
        (bitwise-not . g$12987$1i4eWV)
        (bitwise-arithmetic-shift-right . g$6480$1i4eWV)
        (bitwise-arithmetic-shift-left . g$6479$1i4eWV)
        (bitwise-arithmetic-shift . g$12986$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13226$1i4eWV
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$6613$1i4eWV)
        (fxxor . g$6576$1i4eWV)
        (fxrotate-bit-field . g$6651$1i4eWV)
        (fxreverse-bit-field . g$6652$1i4eWV)
        (fxpositive? . g$6603$1i4eWV)
        (fxodd? . g$6623$1i4eWV)
        (fxnot . g$6557$1i4eWV)
        (fxnegative? . g$6608$1i4eWV)
        (fxmod0 . g$6587$1i4eWV)
        (fxmod . g$6586$1i4eWV)
        (fxmin . g$6625$1i4eWV)
        (fxmax . g$6624$1i4eWV)
        (fxlength . g$6554$1i4eWV)
        (fxior . g$6575$1i4eWV)
        (fxif . g$6633$1i4eWV)
        (fxfirst-bit-set . g$6555$1i4eWV)
        (fxeven? . g$6618$1i4eWV)
        (fxdiv0-and-mod0 . g$6598$1i4eWV)
        (fxdiv0 . g$6593$1i4eWV)
        (fxdiv-and-mod . g$6588$1i4eWV)
        (fxdiv . g$6581$1i4eWV)
        (fxcopy-bit-field . g$6648$1i4eWV)
        (fxcopy-bit . g$6638$1i4eWV)
        (fxbit-set? . g$6556$1i4eWV)
        (fxbit-field . g$6643$1i4eWV)
        (fxbit-count . g$6549$1i4eWV)
        (fxarithmetic-shift-right . g$6650$1i4eWV)
        (fxarithmetic-shift-left . g$6649$1i4eWV)
        (fxarithmetic-shift . g$6544$1i4eWV)
        (fxand . g$6574$1i4eWV)
        (fx>? . g$6566$1i4eWV)
        (fx>=? . g$6567$1i4eWV)
        (fx=? . g$6563$1i4eWV)
        (fx<? . g$6564$1i4eWV)
        (fx<=? . g$6565$1i4eWV)
        (fx-/carry . g$6627$1i4eWV)
        (fx- . g$6538$1i4eWV)
        (fx+/carry . g$6628$1i4eWV)
        (fx+ . g$6536$1i4eWV)
        (fx*/carry . g$6626$1i4eWV)
        (fx* . g$6537$1i4eWV)
        (greatest-fixnum . g$6507$1i4eWV)
        (least-fixnum . g$6508$1i4eWV)
        (fixnum-width . g$5509$1i4eWV)
        (fixnum? . g$5507$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13227$1i4eWV
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6332$1i4eWV)
        (no-infinities-violation? . g$6319$1i4eWV)
        (make-no-nans-violation . g$6331$1i4eWV)
        (make-no-infinities-violation . g$6318$1i4eWV)
        (real->flonum . g$12999$1i4eWV)
        (flzero? . g$7569$1i4eWV)
        (fltruncate . g$7564$1i4eWV)
        (fltan . g$7550$1i4eWV)
        (flsqrt . g$7555$1i4eWV)
        (flsin . g$7548$1i4eWV)
        (flround . g$7565$1i4eWV)
        (flpositive? . g$7567$1i4eWV)
        (flonum? . g$5508$1i4eWV)
        (flodd? . g$7571$1i4eWV)
        (flnumerator . g$12998$1i4eWV)
        (flnegative? . g$7568$1i4eWV)
        (flnan? . g$7547$1i4eWV)
        (flmod0 . g$7532$1i4eWV)
        (flmod . g$7531$1i4eWV)
        (flmin . g$7573$1i4eWV)
        (flmax . g$7572$1i4eWV)
        (fllog . g$7554$1i4eWV)
        (flinteger? . g$7540$1i4eWV)
        (flinfinite? . g$7546$1i4eWV)
        (flfloor . g$7563$1i4eWV)
        (flfinite? . g$7541$1i4eWV)
        (flexpt . g$7557$1i4eWV)
        (flexp . g$7556$1i4eWV)
        (fleven? . g$7570$1i4eWV)
        (fldiv0-and-mod0 . g$7539$1i4eWV)
        (fldiv0 . g$7526$1i4eWV)
        (fldiv-and-mod . g$7533$1i4eWV)
        (fldiv . g$7538$1i4eWV)
        (fldenominator . g$12997$1i4eWV)
        (flcos . g$7549$1i4eWV)
        (flceiling . g$7558$1i4eWV)
        (flatan . g$7553$1i4eWV)
        (flasin . g$7551$1i4eWV)
        (flacos . g$7552$1i4eWV)
        (flabs . g$7566$1i4eWV)
        (fl>? . g$7520$1i4eWV)
        (fl>=? . g$7521$1i4eWV)
        (fl=? . g$7517$1i4eWV)
        (fl<? . g$7518$1i4eWV)
        (fl<=? . g$7519$1i4eWV)
        (fl/ . g$7516$1i4eWV)
        (fl- . g$7515$1i4eWV)
        (fl+ . g$7513$1i4eWV)
        (fl* . g$7514$1i4eWV)
        (fixnum->flonum . g$12996$1i4eWV)
        (&no-nans . g$12829$1i4eWV)
        (&no-infinities . g$12828$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13228$1i4eWV
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13124$1i4eWV)
        (string-ci-hash . g$13123$1i4eWV)
        (string-hash . g$13122$1i4eWV)
        (equal-hash . g$13121$1i4eWV)
        (hashtable-equivalence-function . g$13120$1i4eWV)
        (make-hashtable . g$13119$1i4eWV)
        (hashtable-hash-function . g$13118$1i4eWV)
        (make-eqv-hashtable . g$5775$1i4eWV)
        (make-eq-hashtable . g$5774$1i4eWV)
        (hashtable? . g$13117$1i4eWV)
        (hashtable-update! . g$5781$1i4eWV)
        (hashtable-size . g$5776$1i4eWV)
        (hashtable-set! . g$5778$1i4eWV)
        (hashtable-ref . g$5777$1i4eWV)
        (hashtable-mutable? . g$13116$1i4eWV)
        (hashtable-keys . g$13115$1i4eWV)
        (hashtable-entries . g$13114$1i4eWV)
        (hashtable-delete! . g$5779$1i4eWV)
        (hashtable-copy . g$13113$1i4eWV)
        (hashtable-contains? . g$5780$1i4eWV)
        (hashtable-clear! . g$5782$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13229$1i4eWV
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13105$1i4eWV)
        (eof-object . g$13104$1i4eWV)
        (current-error-port . g$13103$1i4eWV)
        (current-output-port . g$13102$1i4eWV)
        (current-input-port . g$13101$1i4eWV)
        (output-port? . g$13100$1i4eWV)
        (input-port? . g$13099$1i4eWV)
        (utf-8-codec . g$13098$1i4eWV)
        (utf-16-codec . g$13097$1i4eWV)
        (transcoder-error-handling-mode . g$13096$1i4eWV)
        (transcoder-eol-style . g$13095$1i4eWV)
        (transcoder-codec . g$13094$1i4eWV)
        (transcoded-port . g$13093$1i4eWV)
        (textual-port? . g$13092$1i4eWV)
        (string->bytevector . g$13091$1i4eWV)
        (standard-output-port . g$13090$1i4eWV)
        (standard-input-port . g$13089$1i4eWV)
        (standard-error-port . g$13088$1i4eWV)
        (set-port-position! . g$13087$1i4eWV)
        (put-u8 . g$13086$1i4eWV)
        (put-string . g$13085$1i4eWV)
        (put-datum . g$8123$1i4eWV)
        (put-char . g$13084$1i4eWV)
        (put-bytevector . g$13083$1i4eWV)
        (port? . g$8128$1i4eWV)
        (port-transcoder . g$13082$1i4eWV)
        (port-position . g$13081$1i4eWV)
        (port-has-set-port-position!? . g$13080$1i4eWV)
        (port-has-port-position? . g$13079$1i4eWV)
        (port-eof? . g$13078$1i4eWV)
        (output-port-buffer-mode . g$13077$1i4eWV)
        (open-string-output-port . g$8127$1i4eWV)
        (open-string-input-port . g$13076$1i4eWV)
        (open-file-output-port . g$13075$1i4eWV)
        (open-file-input/output-port . g$13074$1i4eWV)
        (open-file-input-port . g$13073$1i4eWV)
        (open-bytevector-output-port . g$13072$1i4eWV)
        (open-bytevector-input-port . g$13071$1i4eWV)
        (native-transcoder . g$13070$1i4eWV)
        (native-eol-style . g$13069$1i4eWV)
        (make-transcoder . g$13068$1i4eWV)
        (latin-1-codec . g$13067$1i4eWV)
        (make-i/o-write-error . g$6180$1i4eWV)
        (make-i/o-read-error . g$6167$1i4eWV)
        (make-i/o-port-error . g$6275$1i4eWV)
        (make-i/o-invalid-position-error . g$6193$1i4eWV)
        (make-i/o-filename-error . g$6208$1i4eWV)
        (make-i/o-file-protection-error . g$6223$1i4eWV)
        (make-i/o-file-is-read-only-error . g$6236$1i4eWV)
        (make-i/o-file-does-not-exist-error . g$6262$1i4eWV)
        (make-i/o-file-already-exists-error . g$6249$1i4eWV)
        (make-i/o-error . g$6154$1i4eWV)
        (make-i/o-encoding-error . g$6303$1i4eWV)
        (make-i/o-decoding-error . g$6290$1i4eWV)
        (make-custom-textual-output-port . g$13066$1i4eWV)
        (make-custom-textual-input/output-port . g$13065$1i4eWV)
        (make-custom-textual-input-port . g$13064$1i4eWV)
        (make-custom-binary-output-port . g$13063$1i4eWV)
        (make-custom-binary-input/output-port . g$13062$1i4eWV)
        (make-custom-binary-input-port . g$13061$1i4eWV)
        (lookahead-u8 . g$13059$1i4eWV)
        (lookahead-char . g$13058$1i4eWV)
        (i/o-write-error? . g$6181$1i4eWV)
        (i/o-read-error? . g$6168$1i4eWV)
        (i/o-port-error? . g$6277$1i4eWV)
        (i/o-invalid-position-error? . g$6195$1i4eWV)
        (i/o-error-position . g$6196$1i4eWV)
        (i/o-filename-error? . g$6210$1i4eWV)
        (i/o-file-protection-error? . g$6224$1i4eWV)
        (i/o-file-is-read-only-error? . g$6237$1i4eWV)
        (i/o-file-does-not-exist-error? . g$6263$1i4eWV)
        (i/o-file-already-exists-error? . g$6250$1i4eWV)
        (i/o-error? . g$6155$1i4eWV)
        (i/o-error-port . g$6278$1i4eWV)
        (i/o-error-filename . g$6211$1i4eWV)
        (i/o-encoding-error? . g$6305$1i4eWV)
        (i/o-encoding-error-char . g$6306$1i4eWV)
        (i/o-decoding-error? . g$6291$1i4eWV)
        (get-u8 . g$13057$1i4eWV)
        (get-string-n! . g$13056$1i4eWV)
        (get-string-n . g$13055$1i4eWV)
        (get-string-all . g$13054$1i4eWV)
        (get-line . g$13053$1i4eWV)
        (get-datum . g$8124$1i4eWV)
        (get-char . g$13052$1i4eWV)
        (get-bytevector-some . g$13051$1i4eWV)
        (get-bytevector-n! . g$13050$1i4eWV)
        (get-bytevector-n . g$13049$1i4eWV)
        (get-bytevector-all . g$13048$1i4eWV)
        (flush-output-port . g$13047$1i4eWV)
        (close-port . g$13046$1i4eWV)
        (call-with-string-output-port . g$8129$1i4eWV)
        (call-with-port . g$8130$1i4eWV)
        (call-with-bytevector-output-port . g$13045$1i4eWV)
        (bytevector->string . g$13044$1i4eWV)
        (buffer-mode? . g$13043$1i4eWV)
        (binary-port? . g$13042$1i4eWV)
        (&i/o-encoding . g$12827$1i4eWV)
        (&i/o-decoding . g$12826$1i4eWV)
        (&i/o-port . g$12825$1i4eWV)
        (&i/o-file-does-not-exist . g$12824$1i4eWV)
        (&i/o-file-already-exists . g$12823$1i4eWV)
        (&i/o-file-is-read-only . g$12822$1i4eWV)
        (&i/o-file-protection . g$12821$1i4eWV)
        (&i/o-filename . g$12820$1i4eWV)
        (&i/o-invalid-position . g$12819$1i4eWV)
        (&i/o-write . g$12818$1i4eWV)
        (&i/o-read . g$12817$1i4eWV)
        (&i/o . g$12816$1i4eWV)
        (error-handling-mode . g$12789$1i4eWV)
        (file-options . g$12788$1i4eWV)
        (buffer-mode . g$12787$1i4eWV)
        (eol-style . g$12786$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13230$1i4eWV
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8215$1i4eWV)
        (enum-set=? . g$8222$1i4eWV)
        (enum-set-universe . g$8216$1i4eWV)
        (enum-set-union . g$8223$1i4eWV)
        (enum-set-subset? . g$8221$1i4eWV)
        (enum-set-projection . g$8227$1i4eWV)
        (enum-set-member? . g$8220$1i4eWV)
        (enum-set-intersection . g$8224$1i4eWV)
        (enum-set-indexer . g$8217$1i4eWV)
        (enum-set-difference . g$8225$1i4eWV)
        (enum-set-constructor . g$8218$1i4eWV)
        (enum-set-complement . g$8226$1i4eWV)
        (enum-set->list . g$8219$1i4eWV)
        (define-enumeration . g$12800$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13231$1i4eWV
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6072$1i4eWV)
        (warning? . g$5991$1i4eWV)
        (violation? . g$6030$1i4eWV)
        (undefined-violation? . g$6142$1i4eWV)
        (syntax-violation? . g$6127$1i4eWV)
        (syntax-violation-subform . g$6129$1i4eWV)
        (syntax-violation-form . g$6128$1i4eWV)
        (simple-conditions . g$13033$1i4eWV)
        (serious-condition? . g$6004$1i4eWV)
        (non-continuable-violation? . g$6086$1i4eWV)
        (message-condition? . g$5977$1i4eWV)
        (make-who-condition . g$6070$1i4eWV)
        (make-warning . g$5990$1i4eWV)
        (make-violation . g$6029$1i4eWV)
        (make-undefined-violation . g$6141$1i4eWV)
        (make-syntax-violation . g$6124$1i4eWV)
        (make-serious-condition . g$6003$1i4eWV)
        (make-non-continuable-violation . g$6085$1i4eWV)
        (make-message-condition . g$5975$1i4eWV)
        (make-lexical-violation . g$6111$1i4eWV)
        (make-irritants-condition . g$6055$1i4eWV)
        (make-implementation-restriction-violation . g$6098$1i4eWV)
        (make-error . g$6016$1i4eWV)
        (make-assertion-violation . g$6042$1i4eWV)
        (lexical-violation? . g$6112$1i4eWV)
        (irritants-condition? . g$6057$1i4eWV)
        (implementation-restriction-violation? . g$6099$1i4eWV)
        (error? . g$6017$1i4eWV)
        (condition-who . g$6073$1i4eWV)
        (condition-predicate . g$13032$1i4eWV)
        (condition-message . g$5978$1i4eWV)
        (condition-irritants . g$6058$1i4eWV)
        (condition-accessor . g$13031$1i4eWV)
        (condition . g$13030$1i4eWV)
        (assertion-violation? . g$6043$1i4eWV)
        (condition? . g$13029$1i4eWV)
        (&non-continuable . g$12815$1i4eWV)
        (&undefined . g$12814$1i4eWV)
        (&syntax . g$12813$1i4eWV)
        (&lexical . g$12812$1i4eWV)
        (&implementation-restriction . g$12811$1i4eWV)
        (&who . g$12810$1i4eWV)
        (&irritants . g$12809$1i4eWV)
        (&assertion . g$12808$1i4eWV)
        (&violation . g$12807$1i4eWV)
        (&error . g$12806$1i4eWV)
        (&serious . g$12805$1i4eWV)
        (&warning . g$12804$1i4eWV)
        (&message . g$12803$1i4eWV)
        (&condition . g$12802$1i4eWV)
        (define-condition-type . g$12801$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13232$1i4eWV
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13136$1i4eWV)
        (record-type-uid . g$13135$1i4eWV)
        (record-type-sealed? . g$13134$1i4eWV)
        (record-type-parent . g$13133$1i4eWV)
        (record-type-opaque? . g$13132$1i4eWV)
        (record-type-name . g$13131$1i4eWV)
        (record-type-generative? . g$13130$1i4eWV)
        (record-type-field-names . g$13129$1i4eWV)
        (record-rtd . g$13128$1i4eWV)
        (record-field-mutable? . g$13127$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13233$1i4eWV
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13143$1i4eWV)
        (record-predicate . g$13142$1i4eWV)
        (record-mutator . g$13141$1i4eWV)
        (record-constructor . g$13140$1i4eWV)
        (record-accessor . g$13139$1i4eWV)
        (make-record-type-descriptor . g$13138$1i4eWV)
        (make-record-constructor-descriptor . g$13137$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13234$1i4eWV
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12799$1i4eWV)
        (parent-rtd . g$12798$1i4eWV)
        (nongenerative . g$12797$1i4eWV)
        (opaque . g$12796$1i4eWV)
        (sealed . g$12795$1i4eWV)
        (protocol . g$12794$1i4eWV)
        (parent . g$12793$1i4eWV)
        (immutable . g$12792$1i4eWV)
        (mutable . g$12791$1i4eWV)
        (fields . g$12790$1i4eWV)
        (record-constructor-descriptor . g$12751$1i4eWV)
        (record-type-descriptor . g$12750$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13235$1i4eWV
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9526$1i4eWV)
        (&no-nans-rcd . g$6334$1i4eWV)
        (&no-nans-rtd . g$6333$1i4eWV)
        (&no-infinities-rcd . g$6321$1i4eWV)
        (&no-infinities-rtd . g$6320$1i4eWV)
        (&i/o-encoding-rcd . g$6308$1i4eWV)
        (&i/o-encoding-rtd . g$6307$1i4eWV)
        (&i/o-decoding-rcd . g$6293$1i4eWV)
        (&i/o-decoding-rtd . g$6292$1i4eWV)
        (&i/o-port-rcd . g$6280$1i4eWV)
        (&i/o-port-rtd . g$6279$1i4eWV)
        (&i/o-file-does-not-exist-rcd . g$6265$1i4eWV)
        (&i/o-file-does-not-exist-rtd . g$6264$1i4eWV)
        (&i/o-file-already-exists-rcd . g$6252$1i4eWV)
        (&i/o-file-already-exists-rtd . g$6251$1i4eWV)
        (&i/o-file-is-read-only-rcd . g$6239$1i4eWV)
        (&i/o-file-is-read-only-rtd . g$6238$1i4eWV)
        (&i/o-file-protection-rcd . g$6226$1i4eWV)
        (&i/o-file-protection-rtd . g$6225$1i4eWV)
        (&i/o-filename-rcd . g$6213$1i4eWV)
        (&i/o-filename-rtd . g$6212$1i4eWV)
        (&i/o-invalid-position-rcd . g$6198$1i4eWV)
        (&i/o-invalid-position-rtd . g$6197$1i4eWV)
        (&i/o-write-rcd . g$6183$1i4eWV)
        (&i/o-write-rtd . g$6182$1i4eWV)
        (&i/o-read-rcd . g$6170$1i4eWV)
        (&i/o-read-rtd . g$6169$1i4eWV)
        (&i/o-rcd . g$6157$1i4eWV)
        (&i/o-rtd . g$6156$1i4eWV)
        (&undefined-rcd . g$6144$1i4eWV)
        (&undefined-rtd . g$6143$1i4eWV)
        (&syntax-rcd . g$6131$1i4eWV)
        (&syntax-rtd . g$6130$1i4eWV)
        (&lexical-rcd . g$6114$1i4eWV)
        (&lexical-rtd . g$6113$1i4eWV)
        (&implementation-restriction-rcd . g$6101$1i4eWV)
        (&implementation-restriction-rtd . g$6100$1i4eWV)
        (&non-continuable-rcd . g$6088$1i4eWV)
        (&non-continuable-rtd . g$6087$1i4eWV)
        (&who-rcd . g$6075$1i4eWV)
        (&who-rtd . g$6074$1i4eWV)
        (&irritants-rcd . g$6060$1i4eWV)
        (&irritants-rtd . g$6059$1i4eWV)
        (&assertion-rcd . g$6045$1i4eWV)
        (&assertion-rtd . g$6044$1i4eWV)
        (&violation-rcd . g$6032$1i4eWV)
        (&violation-rtd . g$6031$1i4eWV)
        (&error-rcd . g$6019$1i4eWV)
        (&error-rtd . g$6018$1i4eWV)
        (&serious-rcd . g$6006$1i4eWV)
        (&serious-rtd . g$6005$1i4eWV)
        (&warning-rcd . g$5993$1i4eWV)
        (&warning-rtd . g$5992$1i4eWV)
        (&message-rcd . g$5980$1i4eWV)
        (&message-rtd . g$5979$1i4eWV)
        (&condition-rcd . g$5940$1i4eWV)
        (&condition-rtd . g$5939$1i4eWV)
        (library-letrec* . g$13198$1i4eWV)
        (annotation-stripped . g$13197$1i4eWV)
        (annotation-source . g$13196$1i4eWV)
        (annotation-expression . g$13195$1i4eWV)
        (annotation? . g$13194$1i4eWV)
        (read-annotated . g$13193$1i4eWV)
        (tanh . g$13192$1i4eWV)
        (cosh . g$13191$1i4eWV)
        (sinh . g$13190$1i4eWV)
        (make-guid . g$13189$1i4eWV)
        (unspecified? . g$13188$1i4eWV)
        (make-list . g$5147$1i4eWV)
        (last-pair . g$5146$1i4eWV)
        (load-r5rs . g$13187$1i4eWV)
        (license . g$13186$1i4eWV)
        (stacktrace . g$13185$1i4eWV)
        (ironscheme-build . g$12673$1i4eWV)
        (pinvoke-call-internal . g$13184$1i4eWV)
        (ffi-callback-internal . g$13183$1i4eWV)
        (ffi-callout-internal . g$13182$1i4eWV)
        (define-clr-class-internal . g$13181$1i4eWV)
        (clr-field-set!-internal . g$13180$1i4eWV)
        (clr-field-get-internal . g$13179$1i4eWV)
        (clr-cast-internal . g$13178$1i4eWV)
        (clr-call-internal . g$13177$1i4eWV)
        (clr-new-internal . g$13176$1i4eWV)
        (clr-new-array-internal . g$13175$1i4eWV)
        (clr-is-internal . g$13174$1i4eWV)
        (clr-reference-internal . g$13173$1i4eWV)
        (clr-using-internal . g$13172$1i4eWV)
        (syntax-error . g$9646$1i4eWV)
        (syntax-dispatch . g$9521$1i4eWV)
        (compile-core . g$13171$1i4eWV)
        (eval-core . g$13170$1i4eWV)
        (remove-location . g$13169$1i4eWV)
        (set-symbol-value! . g$13168$1i4eWV)
        (symbol-value . g$13167$1i4eWV)
        (symbol-bound? . g$13166$1i4eWV)
        (ungensym . g$13165$1i4eWV)
        (gensym . g$13164$1i4eWV)
        (void . g$13163$1i4eWV)
        (load-serialized-library . g$13162$1i4eWV)
        (serialize-library . g$13161$1i4eWV)
        (compile-system-libraries . g$12677$1i4eWV)
        (compile->closure . g$12679$1i4eWV)
        (compile . g$12678$1i4eWV)
        (load . g$12672$1i4eWV)
        (string-normalize . g$13160$1i4eWV)
        (interaction-environment . g$9656$1i4eWV)
        (char-ready? . g$13159$1i4eWV)
        (string-upcase . g$13158$1i4eWV)
        (string-titlecase . g$13157$1i4eWV)
        (string-normalize-nfkd . g$6417$1i4eWV)
        (string-normalize-nfkc . g$6416$1i4eWV)
        (string-normalize-nfd . g$6415$1i4eWV)
        (string-normalize-nfc . g$6414$1i4eWV)
        (string-foldcase . g$13156$1i4eWV)
        (string-downcase . g$13155$1i4eWV)
        (string-ci>? . g$6401$1i4eWV)
        (string-ci>=? . g$6403$1i4eWV)
        (string-ci=? . g$6399$1i4eWV)
        (string-ci<? . g$6400$1i4eWV)
        (string-ci<=? . g$6402$1i4eWV)
        (char-whitespace? . g$13154$1i4eWV)
        (char-upper-case? . g$13153$1i4eWV)
        (char-title-case? . g$13152$1i4eWV)
        (char-numeric? . g$13151$1i4eWV)
        (char-lower-case? . g$13150$1i4eWV)
        (char-general-category . g$13149$1i4eWV)
        (char-upcase . g$13148$1i4eWV)
        (char-titlecase . g$13147$1i4eWV)
        (char-foldcase . g$13146$1i4eWV)
        (char-downcase . g$13145$1i4eWV)
        (char-ci>? . g$6411$1i4eWV)
        (char-ci>=? . g$6413$1i4eWV)
        (char-ci=? . g$6409$1i4eWV)
        (char-ci<? . g$6410$1i4eWV)
        (char-ci<=? . g$6412$1i4eWV)
        (char-alphabetic? . g$13144$1i4eWV)
        (variable-transformer-procedure . g$9333$1i4eWV)
        (variable-transformer? . g$9332$1i4eWV)
        (make-variable-transformer . g$9330$1i4eWV)
        (identifier? . g$9650$1i4eWV)
        (generate-temporaries . g$9639$1i4eWV)
        (free-identifier=? . g$9640$1i4eWV)
        (syntax->datum . g$9652$1i4eWV)
        (datum->syntax . g$9651$1i4eWV)
        (bound-identifier=? . g$9641$1i4eWV)
        (record-type-descriptor? . g$13143$1i4eWV)
        (record-predicate . g$13142$1i4eWV)
        (record-mutator . g$13141$1i4eWV)
        (record-constructor . g$13140$1i4eWV)
        (record-accessor . g$13139$1i4eWV)
        (make-record-type-descriptor . g$13138$1i4eWV)
        (make-record-constructor-descriptor . g$13137$1i4eWV)
        (record? . g$13136$1i4eWV)
        (record-type-uid . g$13135$1i4eWV)
        (record-type-sealed? . g$13134$1i4eWV)
        (record-type-parent . g$13133$1i4eWV)
        (record-type-opaque? . g$13132$1i4eWV)
        (record-type-name . g$13131$1i4eWV)
        (record-type-generative? . g$13130$1i4eWV)
        (record-type-field-names . g$13129$1i4eWV)
        (record-rtd . g$13128$1i4eWV)
        (record-field-mutable? . g$13127$1i4eWV)
        (delete-file . g$5808$1i4eWV)
        (file-exists? . g$5807$1i4eWV)
        (vector-sort! . g$13126$1i4eWV)
        (vector-sort . g$13125$1i4eWV)
        (list-sort . g$6370$1i4eWV)
        (symbol-hash . g$13124$1i4eWV)
        (string-ci-hash . g$13123$1i4eWV)
        (string-hash . g$13122$1i4eWV)
        (equal-hash . g$13121$1i4eWV)
        (hashtable-equivalence-function . g$13120$1i4eWV)
        (make-hashtable . g$13119$1i4eWV)
        (hashtable-hash-function . g$13118$1i4eWV)
        (make-eqv-hashtable . g$5775$1i4eWV)
        (make-eq-hashtable . g$5774$1i4eWV)
        (hashtable? . g$13117$1i4eWV)
        (hashtable-update! . g$5781$1i4eWV)
        (hashtable-size . g$5776$1i4eWV)
        (hashtable-set! . g$5778$1i4eWV)
        (hashtable-ref . g$5777$1i4eWV)
        (hashtable-mutable? . g$13116$1i4eWV)
        (hashtable-keys . g$13115$1i4eWV)
        (hashtable-entries . g$13114$1i4eWV)
        (hashtable-delete! . g$5779$1i4eWV)
        (hashtable-copy . g$13113$1i4eWV)
        (hashtable-contains? . g$5780$1i4eWV)
        (hashtable-clear! . g$5782$1i4eWV)
        (call-with-output-file . g$8154$1i4eWV)
        (call-with-input-file . g$8153$1i4eWV)
        (write-char . g$8145$1i4eWV)
        (write . g$13112$1i4eWV)
        (with-output-to-file . g$8152$1i4eWV)
        (with-input-from-file . g$8151$1i4eWV)
        (read-char . g$8144$1i4eWV)
        (read . g$13111$1i4eWV)
        (peek-char . g$8143$1i4eWV)
        (open-output-file . g$13110$1i4eWV)
        (open-input-file . g$13109$1i4eWV)
        (newline . g$8155$1i4eWV)
        (display . g$13108$1i4eWV)
        (close-output-port . g$13107$1i4eWV)
        (close-input-port . g$13106$1i4eWV)
        (eof-object? . g$13105$1i4eWV)
        (eof-object . g$13104$1i4eWV)
        (current-error-port . g$13103$1i4eWV)
        (current-output-port . g$13102$1i4eWV)
        (current-input-port . g$13101$1i4eWV)
        (output-port? . g$13100$1i4eWV)
        (input-port? . g$13099$1i4eWV)
        (utf-8-codec . g$13098$1i4eWV)
        (utf-16-codec . g$13097$1i4eWV)
        (transcoder-error-handling-mode . g$13096$1i4eWV)
        (transcoder-eol-style . g$13095$1i4eWV)
        (transcoder-codec . g$13094$1i4eWV)
        (transcoded-port . g$13093$1i4eWV)
        (textual-port? . g$13092$1i4eWV)
        (string->bytevector . g$13091$1i4eWV)
        (standard-output-port . g$13090$1i4eWV)
        (standard-input-port . g$13089$1i4eWV)
        (standard-error-port . g$13088$1i4eWV)
        (set-port-position! . g$13087$1i4eWV)
        (put-u8 . g$13086$1i4eWV)
        (put-string . g$13085$1i4eWV)
        (put-datum . g$8123$1i4eWV)
        (put-char . g$13084$1i4eWV)
        (put-bytevector . g$13083$1i4eWV)
        (port? . g$8128$1i4eWV)
        (port-transcoder . g$13082$1i4eWV)
        (port-position . g$13081$1i4eWV)
        (port-has-set-port-position!? . g$13080$1i4eWV)
        (port-has-port-position? . g$13079$1i4eWV)
        (port-eof? . g$13078$1i4eWV)
        (output-port-buffer-mode . g$13077$1i4eWV)
        (open-string-output-port . g$8127$1i4eWV)
        (open-string-input-port . g$13076$1i4eWV)
        (open-file-output-port . g$13075$1i4eWV)
        (open-file-input/output-port . g$13074$1i4eWV)
        (open-file-input-port . g$13073$1i4eWV)
        (open-bytevector-output-port . g$13072$1i4eWV)
        (open-bytevector-input-port . g$13071$1i4eWV)
        (native-transcoder . g$13070$1i4eWV)
        (native-eol-style . g$13069$1i4eWV)
        (make-transcoder . g$13068$1i4eWV)
        (latin-1-codec . g$13067$1i4eWV)
        (make-i/o-write-error . g$6180$1i4eWV)
        (make-i/o-read-error . g$6167$1i4eWV)
        (make-i/o-port-error . g$6275$1i4eWV)
        (make-i/o-invalid-position-error . g$6193$1i4eWV)
        (make-i/o-filename-error . g$6208$1i4eWV)
        (make-i/o-file-protection-error . g$6223$1i4eWV)
        (make-i/o-file-is-read-only-error . g$6236$1i4eWV)
        (make-i/o-file-does-not-exist-error . g$6262$1i4eWV)
        (make-i/o-file-already-exists-error . g$6249$1i4eWV)
        (make-i/o-error . g$6154$1i4eWV)
        (make-i/o-encoding-error . g$6303$1i4eWV)
        (make-i/o-decoding-error . g$6290$1i4eWV)
        (make-custom-textual-output-port . g$13066$1i4eWV)
        (make-custom-textual-input/output-port . g$13065$1i4eWV)
        (make-custom-textual-input-port . g$13064$1i4eWV)
        (make-custom-binary-output-port . g$13063$1i4eWV)
        (make-custom-binary-input/output-port . g$13062$1i4eWV)
        (make-custom-binary-input-port . g$13061$1i4eWV)
        (make-bytevector . g$13060$1i4eWV)
        (lookahead-u8 . g$13059$1i4eWV)
        (lookahead-char . g$13058$1i4eWV)
        (i/o-write-error? . g$6181$1i4eWV)
        (i/o-read-error? . g$6168$1i4eWV)
        (i/o-port-error? . g$6277$1i4eWV)
        (i/o-invalid-position-error? . g$6195$1i4eWV)
        (i/o-error-position . g$6196$1i4eWV)
        (i/o-filename-error? . g$6210$1i4eWV)
        (i/o-file-protection-error? . g$6224$1i4eWV)
        (i/o-file-is-read-only-error? . g$6237$1i4eWV)
        (i/o-file-does-not-exist-error? . g$6263$1i4eWV)
        (i/o-file-already-exists-error? . g$6250$1i4eWV)
        (i/o-error? . g$6155$1i4eWV)
        (i/o-error-port . g$6278$1i4eWV)
        (i/o-error-filename . g$6211$1i4eWV)
        (i/o-encoding-error? . g$6305$1i4eWV)
        (i/o-encoding-error-char . g$6306$1i4eWV)
        (i/o-decoding-error? . g$6291$1i4eWV)
        (get-u8 . g$13057$1i4eWV)
        (get-string-n! . g$13056$1i4eWV)
        (get-string-n . g$13055$1i4eWV)
        (get-string-all . g$13054$1i4eWV)
        (get-line . g$13053$1i4eWV)
        (get-datum . g$8124$1i4eWV)
        (get-char . g$13052$1i4eWV)
        (get-bytevector-some . g$13051$1i4eWV)
        (get-bytevector-n! . g$13050$1i4eWV)
        (get-bytevector-n . g$13049$1i4eWV)
        (get-bytevector-all . g$13048$1i4eWV)
        (flush-output-port . g$13047$1i4eWV)
        (close-port . g$13046$1i4eWV)
        (call-with-string-output-port . g$8129$1i4eWV)
        (call-with-port . g$8130$1i4eWV)
        (call-with-bytevector-output-port . g$13045$1i4eWV)
        (bytevector->string . g$13044$1i4eWV)
        (buffer-mode? . g$13043$1i4eWV)
        (binary-port? . g$13042$1i4eWV)
        (scheme-report-environment . g$9629$1i4eWV)
        (quotient . g$6349$1i4eWV)
        (null-environment . g$9628$1i4eWV)
        (remainder . g$6350$1i4eWV)
        (modulo . g$6351$1i4eWV)
        (inexact->exact . g$6346$1i4eWV)
        (force . g$6353$1i4eWV)
        (exact->inexact . g$6347$1i4eWV)
        (exit . g$13041$1i4eWV)
        (command-line . g$12668$1i4eWV)
        (string-fill! . g$13040$1i4eWV)
        (string-set! . g$13039$1i4eWV)
        (set-cdr! . g$13038$1i4eWV)
        (set-car! . g$13037$1i4eWV)
        (remove . g$5169$1i4eWV)
        (remv . g$5170$1i4eWV)
        (remp . g$5150$1i4eWV)
        (remq . g$5171$1i4eWV)
        (partition . g$5149$1i4eWV)
        (memv . g$5157$1i4eWV)
        (memq . g$5156$1i4eWV)
        (memp . g$5159$1i4eWV)
        (member . g$5158$1i4eWV)
        (exists . g$5163$1i4eWV)
        (for-all . g$5162$1i4eWV)
        (fold-right . g$5168$1i4eWV)
        (fold-left . g$5167$1i4eWV)
        (find . g$5148$1i4eWV)
        (filter . g$5151$1i4eWV)
        (cons* . g$5166$1i4eWV)
        (assv . g$5153$1i4eWV)
        (assq . g$5152$1i4eWV)
        (assp . g$5155$1i4eWV)
        (assoc . g$5154$1i4eWV)
        (with-exception-handler . g$13036$1i4eWV)
        (raise-continuable . g$13035$1i4eWV)
        (raise . g$13034$1i4eWV)
        (eval . g$9631$1i4eWV)
        (environment . g$9627$1i4eWV)
        (make-enumeration . g$8215$1i4eWV)
        (enum-set=? . g$8222$1i4eWV)
        (enum-set-universe . g$8216$1i4eWV)
        (enum-set-union . g$8223$1i4eWV)
        (enum-set-subset? . g$8221$1i4eWV)
        (enum-set-projection . g$8227$1i4eWV)
        (enum-set-member? . g$8220$1i4eWV)
        (enum-set-intersection . g$8224$1i4eWV)
        (enum-set-indexer . g$8217$1i4eWV)
        (enum-set-difference . g$8225$1i4eWV)
        (enum-set-constructor . g$8218$1i4eWV)
        (enum-set-complement . g$8226$1i4eWV)
        (enum-set->list . g$8219$1i4eWV)
        (who-condition? . g$6072$1i4eWV)
        (warning? . g$5991$1i4eWV)
        (violation? . g$6030$1i4eWV)
        (undefined-violation? . g$6142$1i4eWV)
        (syntax-violation? . g$6127$1i4eWV)
        (syntax-violation-subform . g$6129$1i4eWV)
        (syntax-violation-form . g$6128$1i4eWV)
        (syntax-violation . g$9649$1i4eWV)
        (simple-conditions . g$13033$1i4eWV)
        (serious-condition? . g$6004$1i4eWV)
        (non-continuable-violation? . g$6086$1i4eWV)
        (message-condition? . g$5977$1i4eWV)
        (make-who-condition . g$6070$1i4eWV)
        (make-warning . g$5990$1i4eWV)
        (make-violation . g$6029$1i4eWV)
        (make-undefined-violation . g$6141$1i4eWV)
        (make-syntax-violation . g$6124$1i4eWV)
        (make-serious-condition . g$6003$1i4eWV)
        (make-non-continuable-violation . g$6085$1i4eWV)
        (make-message-condition . g$5975$1i4eWV)
        (make-lexical-violation . g$6111$1i4eWV)
        (make-irritants-condition . g$6055$1i4eWV)
        (make-implementation-restriction-violation . g$6098$1i4eWV)
        (make-error . g$6016$1i4eWV)
        (make-assertion-violation . g$6042$1i4eWV)
        (lexical-violation? . g$6112$1i4eWV)
        (irritants-condition? . g$6057$1i4eWV)
        (implementation-restriction-violation? . g$6099$1i4eWV)
        (error? . g$6017$1i4eWV)
        (condition-who . g$6073$1i4eWV)
        (condition-predicate . g$13032$1i4eWV)
        (condition-message . g$5978$1i4eWV)
        (condition-irritants . g$6058$1i4eWV)
        (condition-accessor . g$13031$1i4eWV)
        (condition . g$13030$1i4eWV)
        (assertion-violation? . g$6043$1i4eWV)
        (condition? . g$13029$1i4eWV)
        (utf32->string . g$13028$1i4eWV)
        (utf16->string . g$13027$1i4eWV)
        (utf8->string . g$13026$1i4eWV)
        (uint-list->bytevector . g$13025$1i4eWV)
        (u8-list->bytevector . g$13024$1i4eWV)
        (string->utf8 . g$13023$1i4eWV)
        (string->utf32 . g$13022$1i4eWV)
        (string->utf16 . g$13021$1i4eWV)
        (sint-list->bytevector . g$13020$1i4eWV)
        (native-endianness . g$5814$1i4eWV)
        (bytevector? . g$5503$1i4eWV)
        (bytevector=? . g$13019$1i4eWV)
        (bytevector-uint-set! . g$13018$1i4eWV)
        (bytevector-uint-ref . g$13017$1i4eWV)
        (bytevector-u8-set! . g$13016$1i4eWV)
        (bytevector-u8-ref . g$13015$1i4eWV)
        (bytevector-u64-set! . g$5835$1i4eWV)
        (bytevector-u64-ref . g$5831$1i4eWV)
        (bytevector-u64-native-set! . g$5837$1i4eWV)
        (bytevector-u64-native-ref . g$5833$1i4eWV)
        (bytevector-u32-set! . g$5827$1i4eWV)
        (bytevector-u32-ref . g$5823$1i4eWV)
        (bytevector-u32-native-set! . g$5829$1i4eWV)
        (bytevector-u32-native-ref . g$5825$1i4eWV)
        (bytevector-u16-set! . g$5819$1i4eWV)
        (bytevector-u16-ref . g$5815$1i4eWV)
        (bytevector-u16-native-set! . g$5821$1i4eWV)
        (bytevector-u16-native-ref . g$5817$1i4eWV)
        (bytevector-sint-set! . g$13014$1i4eWV)
        (bytevector-sint-ref . g$13013$1i4eWV)
        (bytevector-s8-set! . g$13012$1i4eWV)
        (bytevector-s8-ref . g$13011$1i4eWV)
        (bytevector-s64-set! . g$5836$1i4eWV)
        (bytevector-s64-ref . g$5832$1i4eWV)
        (bytevector-s64-native-set! . g$5838$1i4eWV)
        (bytevector-s64-native-ref . g$5834$1i4eWV)
        (bytevector-s32-set! . g$5828$1i4eWV)
        (bytevector-s32-ref . g$5824$1i4eWV)
        (bytevector-s32-native-set! . g$5830$1i4eWV)
        (bytevector-s32-native-ref . g$5826$1i4eWV)
        (bytevector-s16-set! . g$5820$1i4eWV)
        (bytevector-s16-ref . g$5816$1i4eWV)
        (bytevector-s16-native-set! . g$5822$1i4eWV)
        (bytevector-s16-native-ref . g$5818$1i4eWV)
        (bytevector-length . g$13010$1i4eWV)
        (bytevector-ieee-single-set! . g$13009$1i4eWV)
        (bytevector-ieee-single-ref . g$13008$1i4eWV)
        (bytevector-ieee-single-native-set! . g$5841$1i4eWV)
        (bytevector-ieee-single-native-ref . g$5839$1i4eWV)
        (bytevector-ieee-double-set! . g$13007$1i4eWV)
        (bytevector-ieee-double-ref . g$13006$1i4eWV)
        (bytevector-ieee-double-native-set! . g$5842$1i4eWV)
        (bytevector-ieee-double-native-ref . g$5840$1i4eWV)
        (bytevector-fill! . g$13005$1i4eWV)
        (bytevector-copy! . g$13004$1i4eWV)
        (bytevector-copy . g$13003$1i4eWV)
        (bytevector->uint-list . g$13002$1i4eWV)
        (bytevector->u8-list . g$13001$1i4eWV)
        (bytevector->sint-list . g$13000$1i4eWV)
        (no-nans-violation? . g$6332$1i4eWV)
        (no-infinities-violation? . g$6319$1i4eWV)
        (make-no-nans-violation . g$6331$1i4eWV)
        (make-no-infinities-violation . g$6318$1i4eWV)
        (real->flonum . g$12999$1i4eWV)
        (flzero? . g$7569$1i4eWV)
        (fltruncate . g$7564$1i4eWV)
        (fltan . g$7550$1i4eWV)
        (flsqrt . g$7555$1i4eWV)
        (flsin . g$7548$1i4eWV)
        (flround . g$7565$1i4eWV)
        (flpositive? . g$7567$1i4eWV)
        (flonum? . g$5508$1i4eWV)
        (flodd? . g$7571$1i4eWV)
        (flnumerator . g$12998$1i4eWV)
        (flnegative? . g$7568$1i4eWV)
        (flnan? . g$7547$1i4eWV)
        (flmod0 . g$7532$1i4eWV)
        (flmod . g$7531$1i4eWV)
        (flmin . g$7573$1i4eWV)
        (flmax . g$7572$1i4eWV)
        (fllog . g$7554$1i4eWV)
        (flinteger? . g$7540$1i4eWV)
        (flinfinite? . g$7546$1i4eWV)
        (flfloor . g$7563$1i4eWV)
        (flfinite? . g$7541$1i4eWV)
        (flexpt . g$7557$1i4eWV)
        (flexp . g$7556$1i4eWV)
        (fleven? . g$7570$1i4eWV)
        (fldiv0-and-mod0 . g$7539$1i4eWV)
        (fldiv0 . g$7526$1i4eWV)
        (fldiv-and-mod . g$7533$1i4eWV)
        (fldiv . g$7538$1i4eWV)
        (fldenominator . g$12997$1i4eWV)
        (flcos . g$7549$1i4eWV)
        (flceiling . g$7558$1i4eWV)
        (flatan . g$7553$1i4eWV)
        (flasin . g$7551$1i4eWV)
        (flacos . g$7552$1i4eWV)
        (flabs . g$7566$1i4eWV)
        (fl>? . g$7520$1i4eWV)
        (fl>=? . g$7521$1i4eWV)
        (fl=? . g$7517$1i4eWV)
        (fl<? . g$7518$1i4eWV)
        (fl<=? . g$7519$1i4eWV)
        (fl/ . g$7516$1i4eWV)
        (fl- . g$7515$1i4eWV)
        (fl+ . g$7513$1i4eWV)
        (fl* . g$7514$1i4eWV)
        (fixnum->flonum . g$12996$1i4eWV)
        (fxzero? . g$6613$1i4eWV)
        (fxxor . g$6576$1i4eWV)
        (fxrotate-bit-field . g$6651$1i4eWV)
        (fxreverse-bit-field . g$6652$1i4eWV)
        (fxpositive? . g$6603$1i4eWV)
        (fxodd? . g$6623$1i4eWV)
        (fxnot . g$6557$1i4eWV)
        (fxnegative? . g$6608$1i4eWV)
        (fxmod0 . g$6587$1i4eWV)
        (fxmod . g$6586$1i4eWV)
        (fxmin . g$6625$1i4eWV)
        (fxmax . g$6624$1i4eWV)
        (fxlength . g$6554$1i4eWV)
        (fxior . g$6575$1i4eWV)
        (fxif . g$6633$1i4eWV)
        (fxfirst-bit-set . g$6555$1i4eWV)
        (fxeven? . g$6618$1i4eWV)
        (fxdiv0-and-mod0 . g$6598$1i4eWV)
        (fxdiv0 . g$6593$1i4eWV)
        (fxdiv-and-mod . g$6588$1i4eWV)
        (fxdiv . g$6581$1i4eWV)
        (fxcopy-bit-field . g$6648$1i4eWV)
        (fxcopy-bit . g$6638$1i4eWV)
        (fxbit-set? . g$6556$1i4eWV)
        (fxbit-field . g$6643$1i4eWV)
        (fxbit-count . g$6549$1i4eWV)
        (fxarithmetic-shift-right . g$6650$1i4eWV)
        (fxarithmetic-shift-left . g$6649$1i4eWV)
        (fxarithmetic-shift . g$6544$1i4eWV)
        (fxand . g$6574$1i4eWV)
        (fx>? . g$6566$1i4eWV)
        (fx>=? . g$6567$1i4eWV)
        (fx=? . g$6563$1i4eWV)
        (fx<? . g$6564$1i4eWV)
        (fx<=? . g$6565$1i4eWV)
        (fx-/carry . g$6627$1i4eWV)
        (fx- . g$6538$1i4eWV)
        (fx+/carry . g$6628$1i4eWV)
        (fx+ . g$6536$1i4eWV)
        (fx*/carry . g$6626$1i4eWV)
        (fx* . g$6537$1i4eWV)
        (greatest-fixnum . g$6507$1i4eWV)
        (least-fixnum . g$6508$1i4eWV)
        (fixnum-width . g$5509$1i4eWV)
        (fixnum? . g$5507$1i4eWV)
        (bitwise-rotate-bit-field . g$6481$1i4eWV)
        (bitwise-reverse-bit-field . g$12995$1i4eWV)
        (bitwise-length . g$12994$1i4eWV)
        (bitwise-if . g$6475$1i4eWV)
        (bitwise-first-bit-set . g$12993$1i4eWV)
        (bitwise-copy-bit-field . g$6478$1i4eWV)
        (bitwise-copy-bit . g$6476$1i4eWV)
        (bitwise-bit-set? . g$12992$1i4eWV)
        (bitwise-bit-field . g$6477$1i4eWV)
        (bitwise-bit-count . g$12991$1i4eWV)
        (bitwise-xor . g$12990$1i4eWV)
        (bitwise-ior . g$12989$1i4eWV)
        (bitwise-and . g$12988$1i4eWV)
        (bitwise-not . g$12987$1i4eWV)
        (bitwise-arithmetic-shift-right . g$6480$1i4eWV)
        (bitwise-arithmetic-shift-left . g$6479$1i4eWV)
        (bitwise-arithmetic-shift . g$12986$1i4eWV)
        (zero? . g$5551$1i4eWV)
        (vector? . g$5502$1i4eWV)
        (vector-set! . g$5517$1i4eWV)
        (vector-ref . g$5516$1i4eWV)
        (vector-map . g$5583$1i4eWV)
        (vector-length . g$12985$1i4eWV)
        (vector-for-each . g$5584$1i4eWV)
        (vector-fill! . g$5518$1i4eWV)
        (vector->list . g$12984$1i4eWV)
        (vector . g$12983$1i4eWV)
        (values . g$12982$1i4eWV)
        (truncate . g$12981$1i4eWV)
        (tan . g$12980$1i4eWV)
        (symbol? . g$5504$1i4eWV)
        (symbol=? . g$5568$1i4eWV)
        (symbol->string . g$12979$1i4eWV)
        (substring . g$12978$1i4eWV)
        (string? . g$12977$1i4eWV)
        (string>? . g$5565$1i4eWV)
        (string>=? . g$5567$1i4eWV)
        (string=? . g$5563$1i4eWV)
        (string<? . g$5564$1i4eWV)
        (string<=? . g$5566$1i4eWV)
        (string-ref . g$12976$1i4eWV)
        (string-length . g$12975$1i4eWV)
        (string-for-each . g$5585$1i4eWV)
        (string-copy . g$12974$1i4eWV)
        (string-append . g$12973$1i4eWV)
        (string->symbol . g$12972$1i4eWV)
        (string->number . g$12971$1i4eWV)
        (string->list . g$12970$1i4eWV)
        (string . g$12969$1i4eWV)
        (sqrt . g$12968$1i4eWV)
        (sin . g$12967$1i4eWV)
        (round . g$12966$1i4eWV)
        (reverse . g$5520$1i4eWV)
        (real? . g$12965$1i4eWV)
        (real-valued? . g$12964$1i4eWV)
        (real-part . g$12963$1i4eWV)
        (rationalize . g$5580$1i4eWV)
        (rational? . g$12962$1i4eWV)
        (rational-valued? . g$12961$1i4eWV)
        (procedure? . g$5506$1i4eWV)
        (positive? . g$5549$1i4eWV)
        (pair? . g$12960$1i4eWV)
        (odd? . g$5553$1i4eWV)
        (numerator . g$12959$1i4eWV)
        (number? . g$12958$1i4eWV)
        (number->string . g$12957$1i4eWV)
        (null? . g$12956$1i4eWV)
        (not . g$12955$1i4eWV)
        (negative? . g$5550$1i4eWV)
        (nan? . g$12954$1i4eWV)
        (min . g$5555$1i4eWV)
        (max . g$5554$1i4eWV)
        (map . g$5164$1i4eWV)
        (make-vector . g$12953$1i4eWV)
        (make-string . g$12952$1i4eWV)
        (make-rectangular . g$12951$1i4eWV)
        (make-polar . g$12950$1i4eWV)
        (magnitude . g$12949$1i4eWV)
        (log . g$12948$1i4eWV)
        (list? . g$12947$1i4eWV)
        (list-tail . g$5144$1i4eWV)
        (list-ref . g$5145$1i4eWV)
        (list->vector . g$5514$1i4eWV)
        (list->string . g$5515$1i4eWV)
        (list . g$12946$1i4eWV)
        (length . g$12945$1i4eWV)
        (lcm . g$5557$1i4eWV)
        (integer? . g$12944$1i4eWV)
        (integer-valued? . g$12943$1i4eWV)
        (integer->char . g$12942$1i4eWV)
        (infinite? . g$12941$1i4eWV)
        (inexact? . g$12940$1i4eWV)
        (inexact . g$12939$1i4eWV)
        (imag-part . g$12938$1i4eWV)
        (gcd . g$5556$1i4eWV)
        (for-each . g$5165$1i4eWV)
        (floor . g$12937$1i4eWV)
        (finite? . g$12936$1i4eWV)
        (expt . g$12935$1i4eWV)
        (exp . g$12934$1i4eWV)
        (exact? . g$12933$1i4eWV)
        (exact-integer-sqrt . g$12932$1i4eWV)
        (exact . g$12931$1i4eWV)
        (even? . g$5552$1i4eWV)
        (error . g$12930$1i4eWV)
        (eqv? . g$12929$1i4eWV)
        (equal? . g$12928$1i4eWV)
        (eq? . g$12927$1i4eWV)
        (dynamic-wind . g$12926$1i4eWV)
        (div0-and-mod0 . g$5513$1i4eWV)
        (mod0 . g$5511$1i4eWV)
        (div0 . g$12925$1i4eWV)
        (div-and-mod . g$5512$1i4eWV)
        (mod . g$5510$1i4eWV)
        (div . g$12924$1i4eWV)
        (denominator . g$12923$1i4eWV)
        (cos . g$12922$1i4eWV)
        (cons . g$12921$1i4eWV)
        (complex? . g$12920$1i4eWV)
        (char? . g$5501$1i4eWV)
        (char>? . g$5577$1i4eWV)
        (char>=? . g$5579$1i4eWV)
        (char=? . g$5575$1i4eWV)
        (char<? . g$5576$1i4eWV)
        (char<=? . g$5578$1i4eWV)
        (char->integer . g$12919$1i4eWV)
        (ceiling . g$12918$1i4eWV)
        (call-with-values . g$12917$1i4eWV)
        (call/cc . g$12916$1i4eWV)
        (call-with-current-continuation . g$12915$1i4eWV)
        (cddddr . g$5548$1i4eWV)
        (cdddar . g$5547$1i4eWV)
        (cddadr . g$5546$1i4eWV)
        (cddaar . g$5545$1i4eWV)
        (cdaddr . g$5544$1i4eWV)
        (cdadar . g$5543$1i4eWV)
        (cdaadr . g$5542$1i4eWV)
        (cdaaar . g$5541$1i4eWV)
        (cadddr . g$5540$1i4eWV)
        (caddar . g$5539$1i4eWV)
        (cadadr . g$5538$1i4eWV)
        (cadaar . g$5537$1i4eWV)
        (caaddr . g$5536$1i4eWV)
        (caadar . g$5535$1i4eWV)
        (caaadr . g$5534$1i4eWV)
        (caaaar . g$5533$1i4eWV)
        (cdddr . g$5532$1i4eWV)
        (cddar . g$5531$1i4eWV)
        (cdadr . g$5530$1i4eWV)
        (cdaar . g$5529$1i4eWV)
        (caddr . g$5528$1i4eWV)
        (cadar . g$5527$1i4eWV)
        (caadr . g$5526$1i4eWV)
        (caaar . g$5525$1i4eWV)
        (cddr . g$5524$1i4eWV)
        (cdar . g$5523$1i4eWV)
        (cadr . g$5522$1i4eWV)
        (caar . g$5521$1i4eWV)
        (cdr . g$12914$1i4eWV)
        (car . g$12913$1i4eWV)
        (boolean? . g$5505$1i4eWV)
        (boolean=? . g$5569$1i4eWV)
        (atan . g$12912$1i4eWV)
        (assertion-violation . g$12911$1i4eWV)
        (asin . g$12910$1i4eWV)
        (apply . g$12909$1i4eWV)
        (append . g$12908$1i4eWV)
        (angle . g$12907$1i4eWV)
        (acos . g$12906$1i4eWV)
        (abs . g$12905$1i4eWV)
        (/ . g$12904$1i4eWV)
        (* . g$12903$1i4eWV)
        (- . g$12902$1i4eWV)
        (+ . g$12901$1i4eWV)
        (>= . g$12900$1i4eWV)
        (> . g$12899$1i4eWV)
        (= . g$12898$1i4eWV)
        (<= . g$12897$1i4eWV)
        (< . g$12896$1i4eWV)
        ($fl>=? . g$12895$1i4eWV)
        ($fl>? . g$12894$1i4eWV)
        ($fl<=? . g$12893$1i4eWV)
        ($fl<? . g$12892$1i4eWV)
        ($fl- . g$12891$1i4eWV)
        ($fl/ . g$12890$1i4eWV)
        ($fl* . g$12889$1i4eWV)
        ($fl+ . g$12888$1i4eWV)
        ($fl=? . g$12887$1i4eWV)
        ($try . g$12886$1i4eWV)
        ($fxarithmetic-shift-right . g$12885$1i4eWV)
        ($fxarithmetic-shift-left . g$12884$1i4eWV)
        ($$fx- . g$12883$1i4eWV)
        ($$fx* . g$12882$1i4eWV)
        ($$fx+ . g$12881$1i4eWV)
        ($fxnot . g$12880$1i4eWV)
        ($fxxor . g$12879$1i4eWV)
        ($fxior . g$12878$1i4eWV)
        ($fxand . g$12877$1i4eWV)
        ($fx>=? . g$12876$1i4eWV)
        ($fx>? . g$12875$1i4eWV)
        ($fx<=? . g$12874$1i4eWV)
        ($fx<? . g$12873$1i4eWV)
        ($fx- . g$12872$1i4eWV)
        ($fxmod0 . g$12871$1i4eWV)
        ($fxdiv0 . g$12870$1i4eWV)
        ($fx* . g$12869$1i4eWV)
        ($fx+ . g$12868$1i4eWV)
        ($fx=? . g$12867$1i4eWV)
        ($vector-set! . g$12866$1i4eWV)
        ($vector-ref . g$12865$1i4eWV)
        ($cdr . g$12864$1i4eWV)
        ($car . g$12863$1i4eWV)
        (make-record-printer . g$12862$1i4eWV)
        (eqv-hash . g$12861$1i4eWV)
        (reverse! . g$12860$1i4eWV)
        (deserialize-port . g$12859$1i4eWV)
        (serialize-port . g$12858$1i4eWV)
        (enum-set? . g$8192$1i4eWV)
        (make-promise . g$6352$1i4eWV)
        (load/unload . g$12671$1i4eWV)
        (load/args . g$12670$1i4eWV)
        (printf . g$8301$1i4eWV)
        (fprintf . g$8302$1i4eWV)
        (format . g$8303$1i4eWV)
        (procedure-form . g$12857$1i4eWV)
        (procedure-environment . g$12856$1i4eWV)
        (procedure-name . g$12855$1i4eWV)
        (procedure-arity . g$12854$1i4eWV)
        (gc-collect . g$12853$1i4eWV)
        (typeof . g$12852$1i4eWV)
        (clr-type? . g$12851$1i4eWV)
        (get-clr-type . g$12850$1i4eWV)
        (get-command-line . g$12849$1i4eWV)
        (vector-append . g$12848$1i4eWV)
        (vector-filter . g$12847$1i4eWV)
        (vector-reverse! . g$12846$1i4eWV)
        (vector-contains? . g$12845$1i4eWV)
        (vector-index-of . g$12844$1i4eWV)
        (vector-copy . g$12843$1i4eWV)
        (vector-binary-search . g$12842$1i4eWV)
        (string-ci-compare . g$12841$1i4eWV)
        (string-compare . g$12840$1i4eWV)
        (string-format . g$12839$1i4eWV)
        (trace-printer . g$12667$1i4eWV)
        (make-traced-procedure . g$12838$1i4eWV)
        (make-traced-macro . g$8323$1i4eWV)
        (assertion-error . g$9645$1i4eWV)
        (time-it . g$12837$1i4eWV)
        (make-parameter . g$8330$1i4eWV)
        (library-locator . g$12836$1i4eWV)
        (get-library-paths . g$12835$1i4eWV)
        (open-tcp-input/output-port . g$12834$1i4eWV)
        (hashtable-for-each . g$12833$1i4eWV)
        (hashtable-map . g$12832$1i4eWV)
        (environment-bindings . g$9623$1i4eWV)
        (environment-symbols . g$9626$1i4eWV)
        (interaction-environment-symbols . g$9622$1i4eWV)
        (optimization-level . g$12831$1i4eWV)
        (library-path . g$8952$1i4eWV)
        (make-compile-time-value . g$9331$1i4eWV)
        (expand->core . g$9632$1i4eWV)
        (expand . g$9630$1i4eWV)
        (syntax-transpose . g$9569$1i4eWV)
        (convert->cps . g$8649$1i4eWV)
        (installed-libraries . g$8973$1i4eWV)
        (uninstall-library . g$8964$1i4eWV)
        (pretty-gensyms . g$8413$1i4eWV)
        (pretty-width . g$8410$1i4eWV)
        (pretty-print . g$8415$1i4eWV)
        (pointer+ . g$12830$1i4eWV)
        (&no-nans . g$12829$1i4eWV)
        (&no-infinities . g$12828$1i4eWV)
        (&i/o-encoding . g$12827$1i4eWV)
        (&i/o-decoding . g$12826$1i4eWV)
        (&i/o-port . g$12825$1i4eWV)
        (&i/o-file-does-not-exist . g$12824$1i4eWV)
        (&i/o-file-already-exists . g$12823$1i4eWV)
        (&i/o-file-is-read-only . g$12822$1i4eWV)
        (&i/o-file-protection . g$12821$1i4eWV)
        (&i/o-filename . g$12820$1i4eWV)
        (&i/o-invalid-position . g$12819$1i4eWV)
        (&i/o-write . g$12818$1i4eWV)
        (&i/o-read . g$12817$1i4eWV)
        (&i/o . g$12816$1i4eWV)
        (&non-continuable . g$12815$1i4eWV)
        (&undefined . g$12814$1i4eWV)
        (&syntax . g$12813$1i4eWV)
        (&lexical . g$12812$1i4eWV)
        (&implementation-restriction . g$12811$1i4eWV)
        (&who . g$12810$1i4eWV)
        (&irritants . g$12809$1i4eWV)
        (&assertion . g$12808$1i4eWV)
        (&violation . g$12807$1i4eWV)
        (&error . g$12806$1i4eWV)
        (&serious . g$12805$1i4eWV)
        (&warning . g$12804$1i4eWV)
        (&message . g$12803$1i4eWV)
        (&condition . g$12802$1i4eWV)
        (define-condition-type . g$12801$1i4eWV)
        (define-enumeration . g$12800$1i4eWV)
        (define-record-type . g$12799$1i4eWV)
        (parent-rtd . g$12798$1i4eWV)
        (nongenerative . g$12797$1i4eWV)
        (opaque . g$12796$1i4eWV)
        (sealed . g$12795$1i4eWV)
        (protocol . g$12794$1i4eWV)
        (parent . g$12793$1i4eWV)
        (immutable . g$12792$1i4eWV)
        (mutable . g$12791$1i4eWV)
        (fields . g$12790$1i4eWV)
        (error-handling-mode . g$12789$1i4eWV)
        (file-options . g$12788$1i4eWV)
        (buffer-mode . g$12787$1i4eWV)
        (eol-style . g$12786$1i4eWV)
        (guard . g$12785$1i4eWV)
        (trace-letrec-syntax . g$12784$1i4eWV)
        (trace-let-syntax . g$12783$1i4eWV)
        (trace-define-syntax . g$12782$1i4eWV)
        (trace-define . g$12781$1i4eWV)
        (trace-lambda . g$12780$1i4eWV)
        (unsyntax-splicing . g$12779$1i4eWV)
        (unsyntax . g$12778$1i4eWV)
        (unquote-splicing . g$12777$1i4eWV)
        (unquote . g$12776$1i4eWV)
        (_ . g$12775$1i4eWV)
        (else . g$12774$1i4eWV)
        (=> . g$12773$1i4eWV)
        (... . g$12772$1i4eWV)
        (assert . g$12771$1i4eWV)
        (endianness . g$12770$1i4eWV)
        (delay . g$12769$1i4eWV)
        (time . g$12768$1i4eWV)
        (or . g$12767$1i4eWV)
        (and . g$12766$1i4eWV)
        (do . g$12765$1i4eWV)
        (cond . g$12764$1i4eWV)
        (let* . g$12763$1i4eWV)
        (let . g$12762$1i4eWV)
        (identifier-syntax . g$12761$1i4eWV)
        (with-syntax . g$12760$1i4eWV)
        (quasisyntax . g$12759$1i4eWV)
        (quasiquote . g$12758$1i4eWV)
        (syntax-rules . g$12757$1i4eWV)
        (include-into . g$12756$1i4eWV)
        (include . g$12755$1i4eWV)
        (define-struct . g$12754$1i4eWV)
        (let-values . g$12753$1i4eWV)
        (let*-values . g$12752$1i4eWV)
        (record-constructor-descriptor . g$12751$1i4eWV)
        (record-type-descriptor . g$12750$1i4eWV)
        (fluid-let-syntax . g$12749$1i4eWV)
        (case . g$12748$1i4eWV)
        (parameterize . g$12747$1i4eWV)
        (unless . g$12746$1i4eWV)
        (when . g$12745$1i4eWV)
        (if . g$12744$1i4eWV)
        (letrec* . g$12743$1i4eWV)
        (letrec . g$12742$1i4eWV)
        (type-descriptor . g$12741$1i4eWV)
        (case-lambda . g$12740$1i4eWV)
        (lambda . g$12739$1i4eWV)
        (syntax . g$12738$1i4eWV)
        (syntax-case . g$12737$1i4eWV)
        (quote . g$12736$1i4eWV)
        (foreign-call . g$12735$1i4eWV)
        (letrec-syntax . g$12734$1i4eWV)
        (let-syntax . g$12733$1i4eWV)
        (set! . g$12732$1i4eWV)
        (export . g$12731$1i4eWV)
        (import . g$12730$1i4eWV)
        (library . g$12729$1i4eWV)
        (begin . g$12728$1i4eWV)
        (module . g$12727$1i4eWV)
        (define-syntax . g$12726$1i4eWV)
        (define . g$12725$1i4eWV))
      '((g$9526$1i4eWV core-prim . ellipsis-map)
        (g$6334$1i4eWV core-prim . &no-nans-rcd)
        (g$6333$1i4eWV core-prim . &no-nans-rtd)
        (g$6321$1i4eWV core-prim . &no-infinities-rcd)
        (g$6320$1i4eWV core-prim . &no-infinities-rtd)
        (g$6308$1i4eWV core-prim . &i/o-encoding-rcd)
        (g$6307$1i4eWV core-prim . &i/o-encoding-rtd)
        (g$6293$1i4eWV core-prim . &i/o-decoding-rcd)
        (g$6292$1i4eWV core-prim . &i/o-decoding-rtd)
        (g$6280$1i4eWV core-prim . &i/o-port-rcd)
        (g$6279$1i4eWV core-prim . &i/o-port-rtd)
        (g$6265$1i4eWV core-prim . &i/o-file-does-not-exist-rcd)
        (g$6264$1i4eWV core-prim . &i/o-file-does-not-exist-rtd)
        (g$6252$1i4eWV core-prim . &i/o-file-already-exists-rcd)
        (g$6251$1i4eWV core-prim . &i/o-file-already-exists-rtd)
        (g$6239$1i4eWV core-prim . &i/o-file-is-read-only-rcd)
        (g$6238$1i4eWV core-prim . &i/o-file-is-read-only-rtd)
        (g$6226$1i4eWV core-prim . &i/o-file-protection-rcd)
        (g$6225$1i4eWV core-prim . &i/o-file-protection-rtd)
        (g$6213$1i4eWV core-prim . &i/o-filename-rcd)
        (g$6212$1i4eWV core-prim . &i/o-filename-rtd)
        (g$6198$1i4eWV core-prim . &i/o-invalid-position-rcd)
        (g$6197$1i4eWV core-prim . &i/o-invalid-position-rtd)
        (g$6183$1i4eWV core-prim . &i/o-write-rcd)
        (g$6182$1i4eWV core-prim . &i/o-write-rtd)
        (g$6170$1i4eWV core-prim . &i/o-read-rcd)
        (g$6169$1i4eWV core-prim . &i/o-read-rtd)
        (g$6157$1i4eWV core-prim . &i/o-rcd)
        (g$6156$1i4eWV core-prim . &i/o-rtd)
        (g$6144$1i4eWV core-prim . &undefined-rcd)
        (g$6143$1i4eWV core-prim . &undefined-rtd)
        (g$6131$1i4eWV core-prim . &syntax-rcd)
        (g$6130$1i4eWV core-prim . &syntax-rtd)
        (g$6114$1i4eWV core-prim . &lexical-rcd)
        (g$6113$1i4eWV core-prim . &lexical-rtd)
        (g$6101$1i4eWV core-prim . &implementation-restriction-rcd)
        (g$6100$1i4eWV core-prim . &implementation-restriction-rtd)
        (g$6088$1i4eWV core-prim . &non-continuable-rcd)
        (g$6087$1i4eWV core-prim . &non-continuable-rtd)
        (g$6075$1i4eWV core-prim . &who-rcd)
        (g$6074$1i4eWV core-prim . &who-rtd)
        (g$6060$1i4eWV core-prim . &irritants-rcd)
        (g$6059$1i4eWV core-prim . &irritants-rtd)
        (g$6045$1i4eWV core-prim . &assertion-rcd)
        (g$6044$1i4eWV core-prim . &assertion-rtd)
        (g$6032$1i4eWV core-prim . &violation-rcd)
        (g$6031$1i4eWV core-prim . &violation-rtd)
        (g$6019$1i4eWV core-prim . &error-rcd)
        (g$6018$1i4eWV core-prim . &error-rtd)
        (g$6006$1i4eWV core-prim . &serious-rcd)
        (g$6005$1i4eWV core-prim . &serious-rtd)
        (g$5993$1i4eWV core-prim . &warning-rcd)
        (g$5992$1i4eWV core-prim . &warning-rtd)
        (g$5980$1i4eWV core-prim . &message-rcd)
        (g$5979$1i4eWV core-prim . &message-rtd)
        (g$5940$1i4eWV core-prim . &condition-rcd)
        (g$5939$1i4eWV core-prim . &condition-rtd)
        (g$13198$1i4eWV core-prim . library-letrec*)
        (g$13197$1i4eWV core-prim . annotation-stripped)
        (g$13196$1i4eWV core-prim . annotation-source)
        (g$13195$1i4eWV core-prim . annotation-expression)
        (g$13194$1i4eWV core-prim . annotation?)
        (g$13193$1i4eWV core-prim . read-annotated)
        (g$13192$1i4eWV core-prim . tanh)
        (g$13191$1i4eWV core-prim . cosh)
        (g$13190$1i4eWV core-prim . sinh)
        (g$13189$1i4eWV core-prim . make-guid)
        (g$13188$1i4eWV core-prim . unspecified?)
        (g$5147$1i4eWV core-prim . make-list)
        (g$5146$1i4eWV core-prim . last-pair)
        (g$13187$1i4eWV core-prim . load-r5rs)
        (g$13186$1i4eWV core-prim . license)
        (g$13185$1i4eWV core-prim . stacktrace)
        (g$12673$1i4eWV core-prim . ironscheme-build)
        (g$13184$1i4eWV core-prim . pinvoke-call-internal)
        (g$13183$1i4eWV core-prim . ffi-callback-internal)
        (g$13182$1i4eWV core-prim . ffi-callout-internal)
        (g$13181$1i4eWV core-prim . define-clr-class-internal)
        (g$13180$1i4eWV core-prim . clr-field-set!-internal)
        (g$13179$1i4eWV core-prim . clr-field-get-internal)
        (g$13178$1i4eWV core-prim . clr-cast-internal)
        (g$13177$1i4eWV core-prim . clr-call-internal)
        (g$13176$1i4eWV core-prim . clr-new-internal)
        (g$13175$1i4eWV core-prim . clr-new-array-internal)
        (g$13174$1i4eWV core-prim . clr-is-internal)
        (g$13173$1i4eWV core-prim . clr-reference-internal)
        (g$13172$1i4eWV core-prim . clr-using-internal)
        (g$9646$1i4eWV core-prim . syntax-error)
        (g$9521$1i4eWV core-prim . syntax-dispatch)
        (g$13171$1i4eWV core-prim . compile-core)
        (g$13170$1i4eWV core-prim . eval-core)
        (g$13169$1i4eWV core-prim . remove-location)
        (g$13168$1i4eWV core-prim . set-symbol-value!)
        (g$13167$1i4eWV core-prim . symbol-value)
        (g$13166$1i4eWV core-prim . symbol-bound?)
        (g$13165$1i4eWV core-prim . ungensym)
        (g$13164$1i4eWV core-prim . gensym)
        (g$13163$1i4eWV core-prim . void)
        (g$13162$1i4eWV core-prim . load-serialized-library)
        (g$13161$1i4eWV core-prim . serialize-library)
        (g$12677$1i4eWV core-prim . compile-system-libraries)
        (g$12679$1i4eWV core-prim . compile->closure)
        (g$12678$1i4eWV core-prim . compile)
        (g$12672$1i4eWV core-prim . load)
        (g$13160$1i4eWV core-prim . string-normalize)
        (g$9656$1i4eWV core-prim . interaction-environment)
        (g$13159$1i4eWV core-prim . char-ready?)
        (g$13158$1i4eWV core-prim . string-upcase)
        (g$13157$1i4eWV core-prim . string-titlecase)
        (g$6417$1i4eWV core-prim . string-normalize-nfkd)
        (g$6416$1i4eWV core-prim . string-normalize-nfkc)
        (g$6415$1i4eWV core-prim . string-normalize-nfd)
        (g$6414$1i4eWV core-prim . string-normalize-nfc)
        (g$13156$1i4eWV core-prim . string-foldcase)
        (g$13155$1i4eWV core-prim . string-downcase)
        (g$6401$1i4eWV core-prim . string-ci>?)
        (g$6403$1i4eWV core-prim . string-ci>=?)
        (g$6399$1i4eWV core-prim . string-ci=?)
        (g$6400$1i4eWV core-prim . string-ci<?)
        (g$6402$1i4eWV core-prim . string-ci<=?)
        (g$13154$1i4eWV core-prim . char-whitespace?)
        (g$13153$1i4eWV core-prim . char-upper-case?)
        (g$13152$1i4eWV core-prim . char-title-case?)
        (g$13151$1i4eWV core-prim . char-numeric?)
        (g$13150$1i4eWV core-prim . char-lower-case?)
        (g$13149$1i4eWV core-prim . char-general-category)
        (g$13148$1i4eWV core-prim . char-upcase)
        (g$13147$1i4eWV core-prim . char-titlecase)
        (g$13146$1i4eWV core-prim . char-foldcase)
        (g$13145$1i4eWV core-prim . char-downcase)
        (g$6411$1i4eWV core-prim . char-ci>?)
        (g$6413$1i4eWV core-prim . char-ci>=?)
        (g$6409$1i4eWV core-prim . char-ci=?)
        (g$6410$1i4eWV core-prim . char-ci<?)
        (g$6412$1i4eWV core-prim . char-ci<=?)
        (g$13144$1i4eWV core-prim . char-alphabetic?)
        (g$9333$1i4eWV core-prim . variable-transformer-procedure)
        (g$9332$1i4eWV core-prim . variable-transformer?)
        (g$9330$1i4eWV core-prim . make-variable-transformer)
        (g$9650$1i4eWV core-prim . identifier?)
        (g$9639$1i4eWV core-prim . generate-temporaries)
        (g$9640$1i4eWV core-prim . free-identifier=?)
        (g$9652$1i4eWV core-prim . syntax->datum)
        (g$9651$1i4eWV core-prim . datum->syntax)
        (g$9641$1i4eWV core-prim . bound-identifier=?)
        (g$13143$1i4eWV core-prim . record-type-descriptor?)
        (g$13142$1i4eWV core-prim . record-predicate)
        (g$13141$1i4eWV core-prim . record-mutator)
        (g$13140$1i4eWV core-prim . record-constructor)
        (g$13139$1i4eWV core-prim . record-accessor)
        (g$13138$1i4eWV core-prim . make-record-type-descriptor)
        (g$13137$1i4eWV core-prim . make-record-constructor-descriptor)
        (g$13136$1i4eWV core-prim . record?)
        (g$13135$1i4eWV core-prim . record-type-uid)
        (g$13134$1i4eWV core-prim . record-type-sealed?)
        (g$13133$1i4eWV core-prim . record-type-parent)
        (g$13132$1i4eWV core-prim . record-type-opaque?)
        (g$13131$1i4eWV core-prim . record-type-name)
        (g$13130$1i4eWV core-prim . record-type-generative?)
        (g$13129$1i4eWV core-prim . record-type-field-names)
        (g$13128$1i4eWV core-prim . record-rtd)
        (g$13127$1i4eWV core-prim . record-field-mutable?)
        (g$5808$1i4eWV core-prim . delete-file)
        (g$5807$1i4eWV core-prim . file-exists?)
        (g$13126$1i4eWV core-prim . vector-sort!)
        (g$13125$1i4eWV core-prim . vector-sort)
        (g$6370$1i4eWV core-prim . list-sort)
        (g$13124$1i4eWV core-prim . symbol-hash)
        (g$13123$1i4eWV core-prim . string-ci-hash)
        (g$13122$1i4eWV core-prim . string-hash)
        (g$13121$1i4eWV core-prim . equal-hash)
        (g$13120$1i4eWV core-prim . hashtable-equivalence-function)
        (g$13119$1i4eWV core-prim . make-hashtable)
        (g$13118$1i4eWV core-prim . hashtable-hash-function)
        (g$5775$1i4eWV core-prim . make-eqv-hashtable)
        (g$5774$1i4eWV core-prim . make-eq-hashtable)
        (g$13117$1i4eWV core-prim . hashtable?)
        (g$5781$1i4eWV core-prim . hashtable-update!)
        (g$5776$1i4eWV core-prim . hashtable-size)
        (g$5778$1i4eWV core-prim . hashtable-set!)
        (g$5777$1i4eWV core-prim . hashtable-ref)
        (g$13116$1i4eWV core-prim . hashtable-mutable?)
        (g$13115$1i4eWV core-prim . hashtable-keys)
        (g$13114$1i4eWV core-prim . hashtable-entries)
        (g$5779$1i4eWV core-prim . hashtable-delete!)
        (g$13113$1i4eWV core-prim . hashtable-copy)
        (g$5780$1i4eWV core-prim . hashtable-contains?)
        (g$5782$1i4eWV core-prim . hashtable-clear!)
        (g$8154$1i4eWV core-prim . call-with-output-file)
        (g$8153$1i4eWV core-prim . call-with-input-file)
        (g$8145$1i4eWV core-prim . write-char)
        (g$13112$1i4eWV core-prim . write)
        (g$8152$1i4eWV core-prim . with-output-to-file)
        (g$8151$1i4eWV core-prim . with-input-from-file)
        (g$8144$1i4eWV core-prim . read-char)
        (g$13111$1i4eWV core-prim . read)
        (g$8143$1i4eWV core-prim . peek-char)
        (g$13110$1i4eWV core-prim . open-output-file)
        (g$13109$1i4eWV core-prim . open-input-file)
        (g$8155$1i4eWV core-prim . newline)
        (g$13108$1i4eWV core-prim . display)
        (g$13107$1i4eWV core-prim . close-output-port)
        (g$13106$1i4eWV core-prim . close-input-port)
        (g$13105$1i4eWV core-prim . eof-object?)
        (g$13104$1i4eWV core-prim . eof-object)
        (g$13103$1i4eWV core-prim . current-error-port)
        (g$13102$1i4eWV core-prim . current-output-port)
        (g$13101$1i4eWV core-prim . current-input-port)
        (g$13100$1i4eWV core-prim . output-port?)
        (g$13099$1i4eWV core-prim . input-port?)
        (g$13098$1i4eWV core-prim . utf-8-codec)
        (g$13097$1i4eWV core-prim . utf-16-codec)
        (g$13096$1i4eWV core-prim . transcoder-error-handling-mode)
        (g$13095$1i4eWV core-prim . transcoder-eol-style)
        (g$13094$1i4eWV core-prim . transcoder-codec)
        (g$13093$1i4eWV core-prim . transcoded-port)
        (g$13092$1i4eWV core-prim . textual-port?)
        (g$13091$1i4eWV core-prim . string->bytevector)
        (g$13090$1i4eWV core-prim . standard-output-port)
        (g$13089$1i4eWV core-prim . standard-input-port)
        (g$13088$1i4eWV core-prim . standard-error-port)
        (g$13087$1i4eWV core-prim . set-port-position!)
        (g$13086$1i4eWV core-prim . put-u8)
        (g$13085$1i4eWV core-prim . put-string)
        (g$8123$1i4eWV core-prim . put-datum)
        (g$13084$1i4eWV core-prim . put-char)
        (g$13083$1i4eWV core-prim . put-bytevector)
        (g$8128$1i4eWV core-prim . port?)
        (g$13082$1i4eWV core-prim . port-transcoder)
        (g$13081$1i4eWV core-prim . port-position)
        (g$13080$1i4eWV core-prim . port-has-set-port-position!?)
        (g$13079$1i4eWV core-prim . port-has-port-position?)
        (g$13078$1i4eWV core-prim . port-eof?)
        (g$13077$1i4eWV core-prim . output-port-buffer-mode)
        (g$8127$1i4eWV core-prim . open-string-output-port)
        (g$13076$1i4eWV core-prim . open-string-input-port)
        (g$13075$1i4eWV core-prim . open-file-output-port)
        (g$13074$1i4eWV core-prim . open-file-input/output-port)
        (g$13073$1i4eWV core-prim . open-file-input-port)
        (g$13072$1i4eWV core-prim . open-bytevector-output-port)
        (g$13071$1i4eWV core-prim . open-bytevector-input-port)
        (g$13070$1i4eWV core-prim . native-transcoder)
        (g$13069$1i4eWV core-prim . native-eol-style)
        (g$13068$1i4eWV core-prim . make-transcoder)
        (g$13067$1i4eWV core-prim . latin-1-codec)
        (g$6180$1i4eWV core-prim . make-i/o-write-error)
        (g$6167$1i4eWV core-prim . make-i/o-read-error)
        (g$6275$1i4eWV core-prim . make-i/o-port-error)
        (g$6193$1i4eWV core-prim . make-i/o-invalid-position-error)
        (g$6208$1i4eWV core-prim . make-i/o-filename-error)
        (g$6223$1i4eWV core-prim . make-i/o-file-protection-error)
        (g$6236$1i4eWV core-prim . make-i/o-file-is-read-only-error)
        (g$6262$1i4eWV core-prim . make-i/o-file-does-not-exist-error)
        (g$6249$1i4eWV core-prim . make-i/o-file-already-exists-error)
        (g$6154$1i4eWV core-prim . make-i/o-error)
        (g$6303$1i4eWV core-prim . make-i/o-encoding-error)
        (g$6290$1i4eWV core-prim . make-i/o-decoding-error)
        (g$13066$1i4eWV core-prim . make-custom-textual-output-port)
        (g$13065$1i4eWV
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13064$1i4eWV core-prim . make-custom-textual-input-port)
        (g$13063$1i4eWV core-prim . make-custom-binary-output-port)
        (g$13062$1i4eWV
          core-prim
          .
          make-custom-binary-input/output-port)
        (g$13061$1i4eWV core-prim . make-custom-binary-input-port)
        (g$13060$1i4eWV core-prim . make-bytevector)
        (g$13059$1i4eWV core-prim . lookahead-u8)
        (g$13058$1i4eWV core-prim . lookahead-char)
        (g$6181$1i4eWV core-prim . i/o-write-error?)
        (g$6168$1i4eWV core-prim . i/o-read-error?)
        (g$6277$1i4eWV core-prim . i/o-port-error?)
        (g$6195$1i4eWV core-prim . i/o-invalid-position-error?)
        (g$6196$1i4eWV core-prim . i/o-error-position)
        (g$6210$1i4eWV core-prim . i/o-filename-error?)
        (g$6224$1i4eWV core-prim . i/o-file-protection-error?)
        (g$6237$1i4eWV core-prim . i/o-file-is-read-only-error?)
        (g$6263$1i4eWV core-prim . i/o-file-does-not-exist-error?)
        (g$6250$1i4eWV core-prim . i/o-file-already-exists-error?)
        (g$6155$1i4eWV core-prim . i/o-error?)
        (g$6278$1i4eWV core-prim . i/o-error-port)
        (g$6211$1i4eWV core-prim . i/o-error-filename)
        (g$6305$1i4eWV core-prim . i/o-encoding-error?)
        (g$6306$1i4eWV core-prim . i/o-encoding-error-char)
        (g$6291$1i4eWV core-prim . i/o-decoding-error?)
        (g$13057$1i4eWV core-prim . get-u8)
        (g$13056$1i4eWV core-prim . get-string-n!)
        (g$13055$1i4eWV core-prim . get-string-n)
        (g$13054$1i4eWV core-prim . get-string-all)
        (g$13053$1i4eWV core-prim . get-line)
        (g$8124$1i4eWV core-prim . get-datum)
        (g$13052$1i4eWV core-prim . get-char)
        (g$13051$1i4eWV core-prim . get-bytevector-some)
        (g$13050$1i4eWV core-prim . get-bytevector-n!)
        (g$13049$1i4eWV core-prim . get-bytevector-n)
        (g$13048$1i4eWV core-prim . get-bytevector-all)
        (g$13047$1i4eWV core-prim . flush-output-port)
        (g$13046$1i4eWV core-prim . close-port)
        (g$8129$1i4eWV core-prim . call-with-string-output-port)
        (g$8130$1i4eWV core-prim . call-with-port)
        (g$13045$1i4eWV core-prim . call-with-bytevector-output-port)
        (g$13044$1i4eWV core-prim . bytevector->string)
        (g$13043$1i4eWV core-prim . buffer-mode?)
        (g$13042$1i4eWV core-prim . binary-port?)
        (g$9629$1i4eWV core-prim . scheme-report-environment)
        (g$6349$1i4eWV core-prim . quotient)
        (g$9628$1i4eWV core-prim . null-environment)
        (g$6350$1i4eWV core-prim . remainder)
        (g$6351$1i4eWV core-prim . modulo)
        (g$6346$1i4eWV core-prim . inexact->exact)
        (g$6353$1i4eWV core-prim . force)
        (g$6347$1i4eWV core-prim . exact->inexact)
        (g$13041$1i4eWV core-prim . exit)
        (g$12668$1i4eWV core-prim . command-line)
        (g$13040$1i4eWV core-prim . string-fill!)
        (g$13039$1i4eWV core-prim . string-set!)
        (g$13038$1i4eWV core-prim . set-cdr!)
        (g$13037$1i4eWV core-prim . set-car!)
        (g$5169$1i4eWV core-prim . remove)
        (g$5170$1i4eWV core-prim . remv)
        (g$5150$1i4eWV core-prim . remp)
        (g$5171$1i4eWV core-prim . remq)
        (g$5149$1i4eWV core-prim . partition)
        (g$5157$1i4eWV core-prim . memv)
        (g$5156$1i4eWV core-prim . memq)
        (g$5159$1i4eWV core-prim . memp)
        (g$5158$1i4eWV core-prim . member)
        (g$5163$1i4eWV core-prim . exists)
        (g$5162$1i4eWV core-prim . for-all)
        (g$5168$1i4eWV core-prim . fold-right)
        (g$5167$1i4eWV core-prim . fold-left)
        (g$5148$1i4eWV core-prim . find)
        (g$5151$1i4eWV core-prim . filter)
        (g$5166$1i4eWV core-prim . cons*)
        (g$5153$1i4eWV core-prim . assv)
        (g$5152$1i4eWV core-prim . assq)
        (g$5155$1i4eWV core-prim . assp)
        (g$5154$1i4eWV core-prim . assoc)
        (g$13036$1i4eWV core-prim . with-exception-handler)
        (g$13035$1i4eWV core-prim . raise-continuable)
        (g$13034$1i4eWV core-prim . raise)
        (g$9631$1i4eWV core-prim . eval)
        (g$9627$1i4eWV core-prim . environment)
        (g$8215$1i4eWV core-prim . make-enumeration)
        (g$8222$1i4eWV core-prim . enum-set=?)
        (g$8216$1i4eWV core-prim . enum-set-universe)
        (g$8223$1i4eWV core-prim . enum-set-union)
        (g$8221$1i4eWV core-prim . enum-set-subset?)
        (g$8227$1i4eWV core-prim . enum-set-projection)
        (g$8220$1i4eWV core-prim . enum-set-member?)
        (g$8224$1i4eWV core-prim . enum-set-intersection)
        (g$8217$1i4eWV core-prim . enum-set-indexer)
        (g$8225$1i4eWV core-prim . enum-set-difference)
        (g$8218$1i4eWV core-prim . enum-set-constructor)
        (g$8226$1i4eWV core-prim . enum-set-complement)
        (g$8219$1i4eWV core-prim . enum-set->list)
        (g$6072$1i4eWV core-prim . who-condition?)
        (g$5991$1i4eWV core-prim . warning?)
        (g$6030$1i4eWV core-prim . violation?)
        (g$6142$1i4eWV core-prim . undefined-violation?)
        (g$6127$1i4eWV core-prim . syntax-violation?)
        (g$6129$1i4eWV core-prim . syntax-violation-subform)
        (g$6128$1i4eWV core-prim . syntax-violation-form)
        (g$9649$1i4eWV core-prim . syntax-violation)
        (g$13033$1i4eWV core-prim . simple-conditions)
        (g$6004$1i4eWV core-prim . serious-condition?)
        (g$6086$1i4eWV core-prim . non-continuable-violation?)
        (g$5977$1i4eWV core-prim . message-condition?)
        (g$6070$1i4eWV core-prim . make-who-condition)
        (g$5990$1i4eWV core-prim . make-warning)
        (g$6029$1i4eWV core-prim . make-violation)
        (g$6141$1i4eWV core-prim . make-undefined-violation)
        (g$6124$1i4eWV core-prim . make-syntax-violation)
        (g$6003$1i4eWV core-prim . make-serious-condition)
        (g$6085$1i4eWV core-prim . make-non-continuable-violation)
        (g$5975$1i4eWV core-prim . make-message-condition)
        (g$6111$1i4eWV core-prim . make-lexical-violation)
        (g$6055$1i4eWV core-prim . make-irritants-condition)
        (g$6098$1i4eWV
          core-prim
          .
          make-implementation-restriction-violation)
        (g$6016$1i4eWV core-prim . make-error)
        (g$6042$1i4eWV core-prim . make-assertion-violation)
        (g$6112$1i4eWV core-prim . lexical-violation?)
        (g$6057$1i4eWV core-prim . irritants-condition?)
        (g$6099$1i4eWV
          core-prim
          .
          implementation-restriction-violation?)
        (g$6017$1i4eWV core-prim . error?)
        (g$6073$1i4eWV core-prim . condition-who)
        (g$13032$1i4eWV core-prim . condition-predicate)
        (g$5978$1i4eWV core-prim . condition-message)
        (g$6058$1i4eWV core-prim . condition-irritants)
        (g$13031$1i4eWV core-prim . condition-accessor)
        (g$13030$1i4eWV core-prim . condition)
        (g$6043$1i4eWV core-prim . assertion-violation?)
        (g$13029$1i4eWV core-prim . condition?)
        (g$13028$1i4eWV core-prim . utf32->string)
        (g$13027$1i4eWV core-prim . utf16->string)
        (g$13026$1i4eWV core-prim . utf8->string)
        (g$13025$1i4eWV core-prim . uint-list->bytevector)
        (g$13024$1i4eWV core-prim . u8-list->bytevector)
        (g$13023$1i4eWV core-prim . string->utf8)
        (g$13022$1i4eWV core-prim . string->utf32)
        (g$13021$1i4eWV core-prim . string->utf16)
        (g$13020$1i4eWV core-prim . sint-list->bytevector)
        (g$5814$1i4eWV core-prim . native-endianness)
        (g$5503$1i4eWV core-prim . bytevector?)
        (g$13019$1i4eWV core-prim . bytevector=?)
        (g$13018$1i4eWV core-prim . bytevector-uint-set!)
        (g$13017$1i4eWV core-prim . bytevector-uint-ref)
        (g$13016$1i4eWV core-prim . bytevector-u8-set!)
        (g$13015$1i4eWV core-prim . bytevector-u8-ref)
        (g$5835$1i4eWV core-prim . bytevector-u64-set!)
        (g$5831$1i4eWV core-prim . bytevector-u64-ref)
        (g$5837$1i4eWV core-prim . bytevector-u64-native-set!)
        (g$5833$1i4eWV core-prim . bytevector-u64-native-ref)
        (g$5827$1i4eWV core-prim . bytevector-u32-set!)
        (g$5823$1i4eWV core-prim . bytevector-u32-ref)
        (g$5829$1i4eWV core-prim . bytevector-u32-native-set!)
        (g$5825$1i4eWV core-prim . bytevector-u32-native-ref)
        (g$5819$1i4eWV core-prim . bytevector-u16-set!)
        (g$5815$1i4eWV core-prim . bytevector-u16-ref)
        (g$5821$1i4eWV core-prim . bytevector-u16-native-set!)
        (g$5817$1i4eWV core-prim . bytevector-u16-native-ref)
        (g$13014$1i4eWV core-prim . bytevector-sint-set!)
        (g$13013$1i4eWV core-prim . bytevector-sint-ref)
        (g$13012$1i4eWV core-prim . bytevector-s8-set!)
        (g$13011$1i4eWV core-prim . bytevector-s8-ref)
        (g$5836$1i4eWV core-prim . bytevector-s64-set!)
        (g$5832$1i4eWV core-prim . bytevector-s64-ref)
        (g$5838$1i4eWV core-prim . bytevector-s64-native-set!)
        (g$5834$1i4eWV core-prim . bytevector-s64-native-ref)
        (g$5828$1i4eWV core-prim . bytevector-s32-set!)
        (g$5824$1i4eWV core-prim . bytevector-s32-ref)
        (g$5830$1i4eWV core-prim . bytevector-s32-native-set!)
        (g$5826$1i4eWV core-prim . bytevector-s32-native-ref)
        (g$5820$1i4eWV core-prim . bytevector-s16-set!)
        (g$5816$1i4eWV core-prim . bytevector-s16-ref)
        (g$5822$1i4eWV core-prim . bytevector-s16-native-set!)
        (g$5818$1i4eWV core-prim . bytevector-s16-native-ref)
        (g$13010$1i4eWV core-prim . bytevector-length)
        (g$13009$1i4eWV core-prim . bytevector-ieee-single-set!)
        (g$13008$1i4eWV core-prim . bytevector-ieee-single-ref)
        (g$5841$1i4eWV core-prim . bytevector-ieee-single-native-set!)
        (g$5839$1i4eWV core-prim . bytevector-ieee-single-native-ref)
        (g$13007$1i4eWV core-prim . bytevector-ieee-double-set!)
        (g$13006$1i4eWV core-prim . bytevector-ieee-double-ref)
        (g$5842$1i4eWV core-prim . bytevector-ieee-double-native-set!)
        (g$5840$1i4eWV core-prim . bytevector-ieee-double-native-ref)
        (g$13005$1i4eWV core-prim . bytevector-fill!)
        (g$13004$1i4eWV core-prim . bytevector-copy!)
        (g$13003$1i4eWV core-prim . bytevector-copy)
        (g$13002$1i4eWV core-prim . bytevector->uint-list)
        (g$13001$1i4eWV core-prim . bytevector->u8-list)
        (g$13000$1i4eWV core-prim . bytevector->sint-list)
        (g$6332$1i4eWV core-prim . no-nans-violation?)
        (g$6319$1i4eWV core-prim . no-infinities-violation?)
        (g$6331$1i4eWV core-prim . make-no-nans-violation)
        (g$6318$1i4eWV core-prim . make-no-infinities-violation)
        (g$12999$1i4eWV core-prim . real->flonum)
        (g$7569$1i4eWV core-prim . flzero?)
        (g$7564$1i4eWV core-prim . fltruncate)
        (g$7550$1i4eWV core-prim . fltan)
        (g$7555$1i4eWV core-prim . flsqrt)
        (g$7548$1i4eWV core-prim . flsin)
        (g$7565$1i4eWV core-prim . flround)
        (g$7567$1i4eWV core-prim . flpositive?)
        (g$5508$1i4eWV core-prim . flonum?)
        (g$7571$1i4eWV core-prim . flodd?)
        (g$12998$1i4eWV core-prim . flnumerator)
        (g$7568$1i4eWV core-prim . flnegative?)
        (g$7547$1i4eWV core-prim . flnan?)
        (g$7532$1i4eWV core-prim . flmod0)
        (g$7531$1i4eWV core-prim . flmod)
        (g$7573$1i4eWV core-prim . flmin)
        (g$7572$1i4eWV core-prim . flmax)
        (g$7554$1i4eWV core-prim . fllog)
        (g$7540$1i4eWV core-prim . flinteger?)
        (g$7546$1i4eWV core-prim . flinfinite?)
        (g$7563$1i4eWV core-prim . flfloor)
        (g$7541$1i4eWV core-prim . flfinite?)
        (g$7557$1i4eWV core-prim . flexpt)
        (g$7556$1i4eWV core-prim . flexp)
        (g$7570$1i4eWV core-prim . fleven?)
        (g$7539$1i4eWV core-prim . fldiv0-and-mod0)
        (g$7526$1i4eWV core-prim . fldiv0)
        (g$7533$1i4eWV core-prim . fldiv-and-mod)
        (g$7538$1i4eWV core-prim . fldiv)
        (g$12997$1i4eWV core-prim . fldenominator)
        (g$7549$1i4eWV core-prim . flcos)
        (g$7558$1i4eWV core-prim . flceiling)
        (g$7553$1i4eWV core-prim . flatan)
        (g$7551$1i4eWV core-prim . flasin)
        (g$7552$1i4eWV core-prim . flacos)
        (g$7566$1i4eWV core-prim . flabs)
        (g$7520$1i4eWV core-prim . fl>?)
        (g$7521$1i4eWV core-prim . fl>=?)
        (g$7517$1i4eWV core-prim . fl=?)
        (g$7518$1i4eWV core-prim . fl<?)
        (g$7519$1i4eWV core-prim . fl<=?)
        (g$7516$1i4eWV core-prim . fl/)
        (g$7515$1i4eWV core-prim . fl-)
        (g$7513$1i4eWV core-prim . fl+)
        (g$7514$1i4eWV core-prim . fl*)
        (g$12996$1i4eWV core-prim . fixnum->flonum)
        (g$6613$1i4eWV core-prim . fxzero?)
        (g$6576$1i4eWV core-prim . fxxor)
        (g$6651$1i4eWV core-prim . fxrotate-bit-field)
        (g$6652$1i4eWV core-prim . fxreverse-bit-field)
        (g$6603$1i4eWV core-prim . fxpositive?)
        (g$6623$1i4eWV core-prim . fxodd?)
        (g$6557$1i4eWV core-prim . fxnot)
        (g$6608$1i4eWV core-prim . fxnegative?)
        (g$6587$1i4eWV core-prim . fxmod0)
        (g$6586$1i4eWV core-prim . fxmod)
        (g$6625$1i4eWV core-prim . fxmin)
        (g$6624$1i4eWV core-prim . fxmax)
        (g$6554$1i4eWV core-prim . fxlength)
        (g$6575$1i4eWV core-prim . fxior)
        (g$6633$1i4eWV core-prim . fxif)
        (g$6555$1i4eWV core-prim . fxfirst-bit-set)
        (g$6618$1i4eWV core-prim . fxeven?)
        (g$6598$1i4eWV core-prim . fxdiv0-and-mod0)
        (g$6593$1i4eWV core-prim . fxdiv0)
        (g$6588$1i4eWV core-prim . fxdiv-and-mod)
        (g$6581$1i4eWV core-prim . fxdiv)
        (g$6648$1i4eWV core-prim . fxcopy-bit-field)
        (g$6638$1i4eWV core-prim . fxcopy-bit)
        (g$6556$1i4eWV core-prim . fxbit-set?)
        (g$6643$1i4eWV core-prim . fxbit-field)
        (g$6549$1i4eWV core-prim . fxbit-count)
        (g$6650$1i4eWV core-prim . fxarithmetic-shift-right)
        (g$6649$1i4eWV core-prim . fxarithmetic-shift-left)
        (g$6544$1i4eWV core-prim . fxarithmetic-shift)
        (g$6574$1i4eWV core-prim . fxand)
        (g$6566$1i4eWV core-prim . fx>?)
        (g$6567$1i4eWV core-prim . fx>=?)
        (g$6563$1i4eWV core-prim . fx=?)
        (g$6564$1i4eWV core-prim . fx<?)
        (g$6565$1i4eWV core-prim . fx<=?)
        (g$6627$1i4eWV core-prim . fx-/carry)
        (g$6538$1i4eWV core-prim . fx-)
        (g$6628$1i4eWV core-prim . fx+/carry)
        (g$6536$1i4eWV core-prim . fx+)
        (g$6626$1i4eWV core-prim . fx*/carry)
        (g$6537$1i4eWV core-prim . fx*)
        (g$6507$1i4eWV core-prim . greatest-fixnum)
        (g$6508$1i4eWV core-prim . least-fixnum)
        (g$5509$1i4eWV core-prim . fixnum-width)
        (g$5507$1i4eWV core-prim . fixnum?)
        (g$6481$1i4eWV core-prim . bitwise-rotate-bit-field)
        (g$12995$1i4eWV core-prim . bitwise-reverse-bit-field)
        (g$12994$1i4eWV core-prim . bitwise-length)
        (g$6475$1i4eWV core-prim . bitwise-if)
        (g$12993$1i4eWV core-prim . bitwise-first-bit-set)
        (g$6478$1i4eWV core-prim . bitwise-copy-bit-field)
        (g$6476$1i4eWV core-prim . bitwise-copy-bit)
        (g$12992$1i4eWV core-prim . bitwise-bit-set?)
        (g$6477$1i4eWV core-prim . bitwise-bit-field)
        (g$12991$1i4eWV core-prim . bitwise-bit-count)
        (g$12990$1i4eWV core-prim . bitwise-xor)
        (g$12989$1i4eWV core-prim . bitwise-ior)
        (g$12988$1i4eWV core-prim . bitwise-and)
        (g$12987$1i4eWV core-prim . bitwise-not)
        (g$6480$1i4eWV core-prim . bitwise-arithmetic-shift-right)
        (g$6479$1i4eWV core-prim . bitwise-arithmetic-shift-left)
        (g$12986$1i4eWV core-prim . bitwise-arithmetic-shift)
        (g$5551$1i4eWV core-prim . zero?)
        (g$5502$1i4eWV core-prim . vector?)
        (g$5517$1i4eWV core-prim . vector-set!)
        (g$5516$1i4eWV core-prim . vector-ref)
        (g$5583$1i4eWV core-prim . vector-map)
        (g$12985$1i4eWV core-prim . vector-length)
        (g$5584$1i4eWV core-prim . vector-for-each)
        (g$5518$1i4eWV core-prim . vector-fill!)
        (g$12984$1i4eWV core-prim . vector->list)
        (g$12983$1i4eWV core-prim . vector)
        (g$12982$1i4eWV core-prim . values)
        (g$12981$1i4eWV core-prim . truncate)
        (g$12980$1i4eWV core-prim . tan)
        (g$5504$1i4eWV core-prim . symbol?)
        (g$5568$1i4eWV core-prim . symbol=?)
        (g$12979$1i4eWV core-prim . symbol->string)
        (g$12978$1i4eWV core-prim . substring)
        (g$12977$1i4eWV core-prim . string?)
        (g$5565$1i4eWV core-prim . string>?)
        (g$5567$1i4eWV core-prim . string>=?)
        (g$5563$1i4eWV core-prim . string=?)
        (g$5564$1i4eWV core-prim . string<?)
        (g$5566$1i4eWV core-prim . string<=?)
        (g$12976$1i4eWV core-prim . string-ref)
        (g$12975$1i4eWV core-prim . string-length)
        (g$5585$1i4eWV core-prim . string-for-each)
        (g$12974$1i4eWV core-prim . string-copy)
        (g$12973$1i4eWV core-prim . string-append)
        (g$12972$1i4eWV core-prim . string->symbol)
        (g$12971$1i4eWV core-prim . string->number)
        (g$12970$1i4eWV core-prim . string->list)
        (g$12969$1i4eWV core-prim . string)
        (g$12968$1i4eWV core-prim . sqrt)
        (g$12967$1i4eWV core-prim . sin)
        (g$12966$1i4eWV core-prim . round)
        (g$5520$1i4eWV core-prim . reverse)
        (g$12965$1i4eWV core-prim . real?)
        (g$12964$1i4eWV core-prim . real-valued?)
        (g$12963$1i4eWV core-prim . real-part)
        (g$5580$1i4eWV core-prim . rationalize)
        (g$12962$1i4eWV core-prim . rational?)
        (g$12961$1i4eWV core-prim . rational-valued?)
        (g$5506$1i4eWV core-prim . procedure?)
        (g$5549$1i4eWV core-prim . positive?)
        (g$12960$1i4eWV core-prim . pair?)
        (g$5553$1i4eWV core-prim . odd?)
        (g$12959$1i4eWV core-prim . numerator)
        (g$12958$1i4eWV core-prim . number?)
        (g$12957$1i4eWV core-prim . number->string)
        (g$12956$1i4eWV core-prim . null?)
        (g$12955$1i4eWV core-prim . not)
        (g$5550$1i4eWV core-prim . negative?)
        (g$12954$1i4eWV core-prim . nan?)
        (g$5555$1i4eWV core-prim . min)
        (g$5554$1i4eWV core-prim . max)
        (g$5164$1i4eWV core-prim . map)
        (g$12953$1i4eWV core-prim . make-vector)
        (g$12952$1i4eWV core-prim . make-string)
        (g$12951$1i4eWV core-prim . make-rectangular)
        (g$12950$1i4eWV core-prim . make-polar)
        (g$12949$1i4eWV core-prim . magnitude)
        (g$12948$1i4eWV core-prim . log)
        (g$12947$1i4eWV core-prim . list?)
        (g$5144$1i4eWV core-prim . list-tail)
        (g$5145$1i4eWV core-prim . list-ref)
        (g$5514$1i4eWV core-prim . list->vector)
        (g$5515$1i4eWV core-prim . list->string)
        (g$12946$1i4eWV core-prim . list)
        (g$12945$1i4eWV core-prim . length)
        (g$5557$1i4eWV core-prim . lcm)
        (g$12944$1i4eWV core-prim . integer?)
        (g$12943$1i4eWV core-prim . integer-valued?)
        (g$12942$1i4eWV core-prim . integer->char)
        (g$12941$1i4eWV core-prim . infinite?)
        (g$12940$1i4eWV core-prim . inexact?)
        (g$12939$1i4eWV core-prim . inexact)
        (g$12938$1i4eWV core-prim . imag-part)
        (g$5556$1i4eWV core-prim . gcd)
        (g$5165$1i4eWV core-prim . for-each)
        (g$12937$1i4eWV core-prim . floor)
        (g$12936$1i4eWV core-prim . finite?)
        (g$12935$1i4eWV core-prim . expt)
        (g$12934$1i4eWV core-prim . exp)
        (g$12933$1i4eWV core-prim . exact?)
        (g$12932$1i4eWV core-prim . exact-integer-sqrt)
        (g$12931$1i4eWV core-prim . exact)
        (g$5552$1i4eWV core-prim . even?)
        (g$12930$1i4eWV core-prim . error)
        (g$12929$1i4eWV core-prim . eqv?)
        (g$12928$1i4eWV core-prim . equal?)
        (g$12927$1i4eWV core-prim . eq?)
        (g$12926$1i4eWV core-prim . dynamic-wind)
        (g$5513$1i4eWV core-prim . div0-and-mod0)
        (g$5511$1i4eWV core-prim . mod0)
        (g$12925$1i4eWV core-prim . div0)
        (g$5512$1i4eWV core-prim . div-and-mod)
        (g$5510$1i4eWV core-prim . mod)
        (g$12924$1i4eWV core-prim . div)
        (g$12923$1i4eWV core-prim . denominator)
        (g$12922$1i4eWV core-prim . cos)
        (g$12921$1i4eWV core-prim . cons)
        (g$12920$1i4eWV core-prim . complex?)
        (g$5501$1i4eWV core-prim . char?)
        (g$5577$1i4eWV core-prim . char>?)
        (g$5579$1i4eWV core-prim . char>=?)
        (g$5575$1i4eWV core-prim . char=?)
        (g$5576$1i4eWV core-prim . char<?)
        (g$5578$1i4eWV core-prim . char<=?)
        (g$12919$1i4eWV core-prim . char->integer)
        (g$12918$1i4eWV core-prim . ceiling)
        (g$12917$1i4eWV core-prim . call-with-values)
        (g$12916$1i4eWV core-prim . call/cc)
        (g$12915$1i4eWV core-prim . call-with-current-continuation)
        (g$5548$1i4eWV core-prim . cddddr)
        (g$5547$1i4eWV core-prim . cdddar)
        (g$5546$1i4eWV core-prim . cddadr)
        (g$5545$1i4eWV core-prim . cddaar)
        (g$5544$1i4eWV core-prim . cdaddr)
        (g$5543$1i4eWV core-prim . cdadar)
        (g$5542$1i4eWV core-prim . cdaadr)
        (g$5541$1i4eWV core-prim . cdaaar)
        (g$5540$1i4eWV core-prim . cadddr)
        (g$5539$1i4eWV core-prim . caddar)
        (g$5538$1i4eWV core-prim . cadadr)
        (g$5537$1i4eWV core-prim . cadaar)
        (g$5536$1i4eWV core-prim . caaddr)
        (g$5535$1i4eWV core-prim . caadar)
        (g$5534$1i4eWV core-prim . caaadr)
        (g$5533$1i4eWV core-prim . caaaar)
        (g$5532$1i4eWV core-prim . cdddr)
        (g$5531$1i4eWV core-prim . cddar)
        (g$5530$1i4eWV core-prim . cdadr)
        (g$5529$1i4eWV core-prim . cdaar)
        (g$5528$1i4eWV core-prim . caddr)
        (g$5527$1i4eWV core-prim . cadar)
        (g$5526$1i4eWV core-prim . caadr)
        (g$5525$1i4eWV core-prim . caaar)
        (g$5524$1i4eWV core-prim . cddr)
        (g$5523$1i4eWV core-prim . cdar)
        (g$5522$1i4eWV core-prim . cadr)
        (g$5521$1i4eWV core-prim . caar)
        (g$12914$1i4eWV core-prim . cdr)
        (g$12913$1i4eWV core-prim . car)
        (g$5505$1i4eWV core-prim . boolean?)
        (g$5569$1i4eWV core-prim . boolean=?)
        (g$12912$1i4eWV core-prim . atan)
        (g$12911$1i4eWV core-prim . assertion-violation)
        (g$12910$1i4eWV core-prim . asin)
        (g$12909$1i4eWV core-prim . apply)
        (g$12908$1i4eWV core-prim . append)
        (g$12907$1i4eWV core-prim . angle)
        (g$12906$1i4eWV core-prim . acos)
        (g$12905$1i4eWV core-prim . abs)
        (g$12904$1i4eWV core-prim . /)
        (g$12903$1i4eWV core-prim . *)
        (g$12902$1i4eWV core-prim . -)
        (g$12901$1i4eWV core-prim . +)
        (g$12900$1i4eWV core-prim . >=)
        (g$12899$1i4eWV core-prim . >)
        (g$12898$1i4eWV core-prim . =)
        (g$12897$1i4eWV core-prim . <=)
        (g$12896$1i4eWV core-prim . <)
        (g$12895$1i4eWV core-prim . $fl>=?)
        (g$12894$1i4eWV core-prim . $fl>?)
        (g$12893$1i4eWV core-prim . $fl<=?)
        (g$12892$1i4eWV core-prim . $fl<?)
        (g$12891$1i4eWV core-prim . $fl-)
        (g$12890$1i4eWV core-prim . $fl/)
        (g$12889$1i4eWV core-prim . $fl*)
        (g$12888$1i4eWV core-prim . $fl+)
        (g$12887$1i4eWV core-prim . $fl=?)
        (g$12886$1i4eWV core-prim . $try)
        (g$12885$1i4eWV core-prim . $fxarithmetic-shift-right)
        (g$12884$1i4eWV core-prim . $fxarithmetic-shift-left)
        (g$12883$1i4eWV core-prim . $$fx-)
        (g$12882$1i4eWV core-prim . $$fx*)
        (g$12881$1i4eWV core-prim . $$fx+)
        (g$12880$1i4eWV core-prim . $fxnot)
        (g$12879$1i4eWV core-prim . $fxxor)
        (g$12878$1i4eWV core-prim . $fxior)
        (g$12877$1i4eWV core-prim . $fxand)
        (g$12876$1i4eWV core-prim . $fx>=?)
        (g$12875$1i4eWV core-prim . $fx>?)
        (g$12874$1i4eWV core-prim . $fx<=?)
        (g$12873$1i4eWV core-prim . $fx<?)
        (g$12872$1i4eWV core-prim . $fx-)
        (g$12871$1i4eWV core-prim . $fxmod0)
        (g$12870$1i4eWV core-prim . $fxdiv0)
        (g$12869$1i4eWV core-prim . $fx*)
        (g$12868$1i4eWV core-prim . $fx+)
        (g$12867$1i4eWV core-prim . $fx=?)
        (g$12866$1i4eWV core-prim . $vector-set!)
        (g$12865$1i4eWV core-prim . $vector-ref)
        (g$12864$1i4eWV core-prim . $cdr)
        (g$12863$1i4eWV core-prim . $car)
        (g$12862$1i4eWV core-prim . make-record-printer)
        (g$12861$1i4eWV core-prim . eqv-hash)
        (g$12860$1i4eWV core-prim . reverse!)
        (g$12859$1i4eWV core-prim . deserialize-port)
        (g$12858$1i4eWV core-prim . serialize-port)
        (g$8192$1i4eWV core-prim . enum-set?)
        (g$6352$1i4eWV core-prim . make-promise)
        (g$12671$1i4eWV core-prim . load/unload)
        (g$12670$1i4eWV core-prim . load/args)
        (g$8301$1i4eWV core-prim . printf)
        (g$8302$1i4eWV core-prim . fprintf)
        (g$8303$1i4eWV core-prim . format)
        (g$12857$1i4eWV core-prim . procedure-form)
        (g$12856$1i4eWV core-prim . procedure-environment)
        (g$12855$1i4eWV core-prim . procedure-name)
        (g$12854$1i4eWV core-prim . procedure-arity)
        (g$12853$1i4eWV core-prim . gc-collect)
        (g$12852$1i4eWV core-prim . typeof)
        (g$12851$1i4eWV core-prim . clr-type?)
        (g$12850$1i4eWV core-prim . get-clr-type)
        (g$12849$1i4eWV core-prim . get-command-line)
        (g$12848$1i4eWV core-prim . vector-append)
        (g$12847$1i4eWV core-prim . vector-filter)
        (g$12846$1i4eWV core-prim . vector-reverse!)
        (g$12845$1i4eWV core-prim . vector-contains?)
        (g$12844$1i4eWV core-prim . vector-index-of)
        (g$12843$1i4eWV core-prim . vector-copy)
        (g$12842$1i4eWV core-prim . vector-binary-search)
        (g$12841$1i4eWV core-prim . string-ci-compare)
        (g$12840$1i4eWV core-prim . string-compare)
        (g$12839$1i4eWV core-prim . string-format)
        (g$12667$1i4eWV core-prim . trace-printer)
        (g$12838$1i4eWV core-prim . make-traced-procedure)
        (g$8323$1i4eWV core-prim . make-traced-macro)
        (g$9645$1i4eWV core-prim . assertion-error)
        (g$12837$1i4eWV core-prim . time-it)
        (g$8330$1i4eWV core-prim . make-parameter)
        (g$12836$1i4eWV core-prim . library-locator)
        (g$12835$1i4eWV core-prim . get-library-paths)
        (g$12834$1i4eWV core-prim . open-tcp-input/output-port)
        (g$12833$1i4eWV core-prim . hashtable-for-each)
        (g$12832$1i4eWV core-prim . hashtable-map)
        (g$9623$1i4eWV core-prim . environment-bindings)
        (g$9626$1i4eWV core-prim . environment-symbols)
        (g$9622$1i4eWV core-prim . interaction-environment-symbols)
        (g$12831$1i4eWV core-prim . optimization-level)
        (g$8952$1i4eWV core-prim . library-path)
        (g$9331$1i4eWV core-prim . make-compile-time-value)
        (g$9632$1i4eWV core-prim . expand->core)
        (g$9630$1i4eWV core-prim . expand)
        (g$9569$1i4eWV core-prim . syntax-transpose)
        (g$8649$1i4eWV core-prim . convert->cps)
        (g$8973$1i4eWV core-prim . installed-libraries)
        (g$8964$1i4eWV core-prim . uninstall-library)
        (g$8413$1i4eWV core-prim . pretty-gensyms)
        (g$8410$1i4eWV core-prim . pretty-width)
        (g$8415$1i4eWV core-prim . pretty-print)
        (g$12830$1i4eWV core-prim . pointer+)
        (g$12829$1i4eWV $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12828$1i4eWV $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12827$1i4eWV $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12826$1i4eWV $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12825$1i4eWV $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12824$1i4eWV
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12823$1i4eWV
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12822$1i4eWV
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12821$1i4eWV
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12820$1i4eWV $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12819$1i4eWV
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12818$1i4eWV $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12817$1i4eWV $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12816$1i4eWV $core-rtd &i/o-rtd &i/o-rcd)
        (g$12815$1i4eWV
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$12814$1i4eWV $core-rtd &undefined-rtd &undefined-rcd)
        (g$12813$1i4eWV $core-rtd &syntax-rtd &syntax-rcd)
        (g$12812$1i4eWV $core-rtd &lexical-rtd &lexical-rcd)
        (g$12811$1i4eWV
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12810$1i4eWV $core-rtd &who-rtd &who-rcd)
        (g$12809$1i4eWV $core-rtd &irritants-rtd &irritants-rcd)
        (g$12808$1i4eWV $core-rtd &assertion-rtd &assertion-rcd)
        (g$12807$1i4eWV $core-rtd &violation-rtd &violation-rcd)
        (g$12806$1i4eWV $core-rtd &error-rtd &error-rcd)
        (g$12805$1i4eWV $core-rtd &serious-rtd &serious-rcd)
        (g$12804$1i4eWV $core-rtd &warning-rtd &warning-rcd)
        (g$12803$1i4eWV $core-rtd &message-rtd &message-rcd)
        (g$12802$1i4eWV $core-rtd &condition-rtd &condition-rcd)
        (g$12801$1i4eWV macro . define-condition-type)
        (g$12800$1i4eWV macro . define-enumeration)
        (g$12799$1i4eWV macro . define-record-type)
        (g$12798$1i4eWV macro . parent-rtd)
        (g$12797$1i4eWV macro . nongenerative)
        (g$12796$1i4eWV macro . opaque)
        (g$12795$1i4eWV macro . sealed)
        (g$12794$1i4eWV macro . protocol)
        (g$12793$1i4eWV macro . parent)
        (g$12792$1i4eWV macro . immutable)
        (g$12791$1i4eWV macro . mutable)
        (g$12790$1i4eWV macro . fields)
        (g$12789$1i4eWV macro . error-handling-mode)
        (g$12788$1i4eWV macro . file-options)
        (g$12787$1i4eWV macro . buffer-mode)
        (g$12786$1i4eWV macro . eol-style)
        (g$12785$1i4eWV macro . guard)
        (g$12784$1i4eWV macro . trace-letrec-syntax)
        (g$12783$1i4eWV macro . trace-let-syntax)
        (g$12782$1i4eWV macro . trace-define-syntax)
        (g$12781$1i4eWV macro . trace-define)
        (g$12780$1i4eWV macro . trace-lambda)
        (g$12779$1i4eWV macro . unsyntax-splicing)
        (g$12778$1i4eWV macro . unsyntax)
        (g$12777$1i4eWV macro . unquote-splicing)
        (g$12776$1i4eWV macro . unquote)
        (g$12775$1i4eWV macro . _)
        (g$12774$1i4eWV macro . else)
        (g$12773$1i4eWV macro . =>)
        (g$12772$1i4eWV macro . ...)
        (g$12771$1i4eWV macro . assert)
        (g$12770$1i4eWV macro . endianness)
        (g$12769$1i4eWV macro . delay)
        (g$12768$1i4eWV macro . time)
        (g$12767$1i4eWV macro . or)
        (g$12766$1i4eWV macro . and)
        (g$12765$1i4eWV macro . do)
        (g$12764$1i4eWV macro . cond)
        (g$12763$1i4eWV macro . let*)
        (g$12762$1i4eWV macro . let)
        (g$12761$1i4eWV macro . identifier-syntax)
        (g$12760$1i4eWV macro . with-syntax)
        (g$12759$1i4eWV macro . quasisyntax)
        (g$12758$1i4eWV macro . quasiquote)
        (g$12757$1i4eWV macro . syntax-rules)
        (g$12756$1i4eWV macro . include-into)
        (g$12755$1i4eWV macro . include)
        (g$12754$1i4eWV macro . define-struct)
        (g$12753$1i4eWV macro . let-values)
        (g$12752$1i4eWV macro . let*-values)
        (g$12751$1i4eWV core-macro . record-constructor-descriptor)
        (g$12750$1i4eWV core-macro . record-type-descriptor)
        (g$12749$1i4eWV core-macro . fluid-let-syntax)
        (g$12748$1i4eWV macro . case)
        (g$12747$1i4eWV macro . parameterize)
        (g$12746$1i4eWV macro . unless)
        (g$12745$1i4eWV macro . when)
        (g$12744$1i4eWV core-macro . if)
        (g$12743$1i4eWV core-macro . letrec*)
        (g$12742$1i4eWV core-macro . letrec)
        (g$12741$1i4eWV core-macro . type-descriptor)
        (g$12740$1i4eWV core-macro . case-lambda)
        (g$12739$1i4eWV core-macro . lambda)
        (g$12738$1i4eWV core-macro . syntax)
        (g$12737$1i4eWV core-macro . syntax-case)
        (g$12736$1i4eWV core-macro . quote)
        (g$12735$1i4eWV core-macro . foreign-call)
        (g$12734$1i4eWV letrec-syntax)
        (g$12733$1i4eWV let-syntax)
        (g$12732$1i4eWV set!)
        (g$12731$1i4eWV export)
        (g$12730$1i4eWV import)
        (g$12729$1i4eWV library)
        (g$12728$1i4eWV begin)
        (g$12727$1i4eWV module)
        (g$12726$1i4eWV define-syntax)
        (g$12725$1i4eWV define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$18984$1i4eWV
      'g$13236$1i4eWV
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13171$1i4eWV)
        (eval-core . g$13170$1i4eWV)
        (set-symbol-value! . g$13168$1i4eWV)
        (symbol-value . g$13167$1i4eWV)
        (gensym . g$13164$1i4eWV)
        (void . g$13163$1i4eWV))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$23496$1i4eWV
     g$trace-printer$23561$1i4eWV
     (g$make-parameter$18141$1i4eWV g$pretty-print$18351$1i4eWV))
   (g$command-line$23497$1i4eWV
     g$command-line$23562$1i4eWV
     (g$make-parameter$18141$1i4eWV (get-command-line)))
   (g$local-library-path$23498$1i4eWV
     g$local-library-path$23563$1i4eWV
     (case-lambda
       ((g$filename$23512$1i4eWV)
        (cons
          (g$get-directory-name$12797$1i4eWV g$filename$23512$1i4eWV)
          (g$library-path$18968$1i4eWV)))))
   (g$load/args$23499$1i4eWV
     g$load/args$23564$1i4eWV
     (case-lambda
       ((g$filename$23513$1i4eWV . g$args$23514$1i4eWV)
        (begin
          (apply
            g$load-r6rs-top-level$23509$1i4eWV
            g$filename$23513$1i4eWV
            'load
            g$args$23514$1i4eWV)
          (void)))))
   (g$load/unload$23500$1i4eWV
     g$load/unload$23565$1i4eWV
     (case-lambda
       ((g$filename$23515$1i4eWV)
        ((case-lambda
           ((g$libs$23516$1i4eWV)
            (begin
              (g$load$23501$1i4eWV g$filename$23515$1i4eWV)
              (g$for-each$11836$1i4eWV
                (case-lambda
                  ((g$lib$23517$1i4eWV)
                   (if (not (g$memq$11827$1i4eWV
                              g$lib$23517$1i4eWV
                              g$libs$23516$1i4eWV))
                     (g$uninstall-library$18980$1i4eWV
                       g$lib$23517$1i4eWV)
                     (void))))
                (g$installed-libraries$18989$1i4eWV)))))
         (g$installed-libraries$18989$1i4eWV)))))
   (g$load$23501$1i4eWV
     g$load$23566$1i4eWV
     (case-lambda
       ((g$filename$23518$1i4eWV)
        (begin
          (apply
            g$load-r6rs-top-level$23509$1i4eWV
            g$filename$23518$1i4eWV
            'load
            (cdr (g$command-line$23497$1i4eWV)))
          (void)))))
   (g$ironscheme-build$23502$1i4eWV
     g$ironscheme-build$23567$1i4eWV
     (case-lambda
       (() (g$ironscheme-build$23502$1i4eWV '#f))
       ((g$cps?$23519$1i4eWV)
        (begin
          (g$call-with-output-file$17757$1i4eWV
            '"build-options.ss"
            (case-lambda
              ((g$p$23520$1i4eWV)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$23519$1i4eWV)
                   g$p$23520$1i4eWV)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$23519$1i4eWV))
                   g$p$23520$1i4eWV)
                 (g$newline$17758$1i4eWV g$p$23520$1i4eWV)))))
          (g$load$23501$1i4eWV '"ironscheme-buildscript.ss")))))
   (g$foreground-color$23503$1i4eWV
     g$foreground-color$23568$1i4eWV
     (case-lambda
       (() (clr-call-internal 'console 'get_foregroundcolor '()))
       ((g$color$23521$1i4eWV)
        (clr-call-internal
          'console
          'set_foregroundcolor
          '()
          g$color$23521$1i4eWV))))
   (g$system-exception?$23504$1i4eWV
     g$system-exception?$23569$1i4eWV
     (case-lambda
       ((g$e$23522$1i4eWV)
        (clr-is-internal 'SystemException g$e$23522$1i4eWV))))
   (g$eval-top-level$23505$1i4eWV
     g$eval-top-level$23570$1i4eWV
     (case-lambda
       ((g$x$23523$1i4eWV)
        (call/cc
          (case-lambda
            ((g$k$23524$1i4eWV)
             (with-exception-handler
               (case-lambda
                 ((g$e$23525$1i4eWV)
                  ((case-lambda
                     ((g$serious?$23526$1i4eWV)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$23531$1i4eWV
                              g$current-output-port$23532$1i4eWV
                              g$foreground-color$23533$1i4eWV
                              g$current-output-port$23534$1i4eWV)
                            ((case-lambda
                               ((g$swap$23535$1i4eWV)
                                (dynamic-wind
                                  g$swap$23535$1i4eWV
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$23526$1i4eWV
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$23525$1i4eWV)
                                       (g$newline$17758$1i4eWV))))
                                  g$swap$23535$1i4eWV)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$23536$1i4eWV)
                                      (begin
                                        (g$foreground-color$23531$1i4eWV
                                          g$foreground-color$23533$1i4eWV)
                                        (set! g$foreground-color$23533$1i4eWV
                                          g$t$23536$1i4eWV))))
                                   (g$foreground-color$23531$1i4eWV))
                                  ((case-lambda
                                     ((g$t$23537$1i4eWV)
                                      (begin
                                        (g$current-output-port$23532$1i4eWV
                                          g$current-output-port$23534$1i4eWV)
                                        (set! g$current-output-port$23534$1i4eWV
                                          g$t$23537$1i4eWV))))
                                   (g$current-output-port$23532$1i4eWV))))))))
                         g$foreground-color$23503$1i4eWV
                         current-output-port
                         (if g$serious?$23526$1i4eWV 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$23526$1i4eWV
                          (g$k$23524$1i4eWV)
                          (void)))))
                   ((case-lambda
                      ((g$t$23538$1i4eWV)
                       (if g$t$23538$1i4eWV
                         g$t$23538$1i4eWV
                         (begin
                           '#f
                           (g$system-exception?$23504$1i4eWV
                             g$e$23525$1i4eWV)))))
                    (g$serious-condition?$13370$1i4eWV
                      g$e$23525$1i4eWV)))))
               (case-lambda
                 (()
                  (g$eval$23469$1i4eWV
                    g$x$23523$1i4eWV
                    (g$interaction-environment$23494$1i4eWV)))))))))))
   (g$compile-system-libraries$23506$1i4eWV
     g$compile-system-libraries$23571$1i4eWV
     (case-lambda
       (()
        (g$eval-top-level$23505$1i4eWV
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$23507$1i4eWV
     g$compile$23572$1i4eWV
     (case-lambda
       ((g$filename$23539$1i4eWV)
        (g$load-r6rs-top-level$23509$1i4eWV
          g$filename$23539$1i4eWV
          'compile))))
   (g$compile->closure$23508$1i4eWV
     g$compile->closure$23573$1i4eWV
     (case-lambda
       ((g$filename$23540$1i4eWV)
        (g$load-r6rs-top-level$23509$1i4eWV
          g$filename$23540$1i4eWV
          'closure))))
   (g$load-r6rs-top-level$23509$1i4eWV
     g$load-r6rs-top-level$23574$1i4eWV
     (case-lambda
       ((g$filename$23541$1i4eWV
          g$how$23542$1i4eWV
          .
          g$args$23543$1i4eWV)
        ((case-lambda
           ((g$library-path$23546$1i4eWV g$library-path$23547$1i4eWV)
            ((case-lambda
               ((g$swap$23548$1i4eWV)
                (dynamic-wind
                  g$swap$23548$1i4eWV
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$23549$1i4eWV)
                         ((case-lambda
                            ((g$t$23550$1i4eWV)
                             (if (eqv? g$t$23550$1i4eWV 'closure)
                               (g$pre-compile-r6rs-top-level$23492$1i4eWV
                                 g$x*$23549$1i4eWV)
                               (if (eqv? g$t$23550$1i4eWV 'load)
                                 ((case-lambda
                                    ((g$command-line$23553$1i4eWV
                                       g$command-line$23554$1i4eWV)
                                     ((case-lambda
                                        ((g$swap$23555$1i4eWV)
                                         (dynamic-wind
                                           g$swap$23555$1i4eWV
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$23491$1i4eWV
                                                 g$x*$23549$1i4eWV))))
                                           g$swap$23555$1i4eWV)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$23556$1i4eWV)
                                             (begin
                                               (g$command-line$23553$1i4eWV
                                                 g$command-line$23554$1i4eWV)
                                               (set! g$command-line$23554$1i4eWV
                                                 g$t$23556$1i4eWV))))
                                          (g$command-line$23553$1i4eWV)))))))
                                  g$command-line$23497$1i4eWV
                                  (cons
                                    g$filename$23541$1i4eWV
                                    (g$map$11835$1i4eWV
                                      (case-lambda
                                        ((g$x$23557$1i4eWV)
                                         (g$format$17932$1i4eWV
                                           '"~a"
                                           g$x$23557$1i4eWV)))
                                      g$args$23543$1i4eWV)))
                                 (if (eqv? g$t$23550$1i4eWV 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$23491$1i4eWV
                                       g$x*$23549$1i4eWV)
                                     (g$serialize-all$18972$1i4eWV
                                       serialize-library
                                       g$compile-core-expr$18719$1i4eWV))
                                   (if '#f '#f (void)))))))
                          g$how$23542$1i4eWV)))
                      (g$with-input-from-file$17754$1i4eWV
                        g$filename$23541$1i4eWV
                        (case-lambda
                          (()
                           ((letrec ((g$f$23558$1i4eWV
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$23559$1i4eWV)
                                              (if (eof-object?
                                                    g$x$23559$1i4eWV)
                                                '()
                                                (cons
                                                  g$x$23559$1i4eWV
                                                  (g$f$23558$1i4eWV)))))
                                           (read-annotated))))))
                              g$f$23558$1i4eWV))))))))
                  g$swap$23548$1i4eWV)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$23560$1i4eWV)
                    (begin
                      (g$library-path$23546$1i4eWV
                        g$library-path$23547$1i4eWV)
                      (set! g$library-path$23547$1i4eWV
                        g$t$23560$1i4eWV))))
                 (g$library-path$23546$1i4eWV)))))))
         g$library-path$18968$1i4eWV
         (g$local-library-path$23498$1i4eWV g$filename$23541$1i4eWV)))))
   (g$fo$23510$1i4eWV
     g$fo$23575$1i4eWV
     (g$make-enumeration$17894$1i4eWV
       '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$18973$1i4eWV
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$23511$1i4eWV)
         (if (g$serious-condition?$13370$1i4eWV g$ex$23511$1i4eWV)
           (raise g$ex$23511$1i4eWV)
           (begin
             (display g$ex$23511$1i4eWV)
             (g$newline$17758$1i4eWV))))))
    (set-symbol-value! 'load g$load$23501$1i4eWV)
    (set-symbol-value! 'compile g$compile$23507$1i4eWV)
    (set-symbol-value!
      'compile->closure
      g$compile->closure$23508$1i4eWV)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$23505$1i4eWV)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$23460$1i4eWV)
    (set-symbol-value! 'expanded2core g$expanded->core$18718$1i4eWV)
    (set-symbol-value! 'trace-printer g$trace-printer$23496$1i4eWV)
    (set-symbol-value! 'convert->cps g$convert->cps$18669$1i4eWV)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$18142$1i4eWV
      (g$enum-set-constructor$17897$1i4eWV g$fo$23510$1i4eWV))
    (g$library-path$18968$1i4eWV (get-library-paths))
    (g$library-extensions$18969$1i4eWV
      (cons '".ironscheme.sls" (g$library-extensions$18969$1i4eWV)))))

