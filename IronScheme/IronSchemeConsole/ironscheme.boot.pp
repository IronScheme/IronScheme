;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$list-tail$5445$mjVUK
     g$list-tail$5582$mjVUK
     (case-lambda
       ((g$lst$5473$mjVUK g$index$5474$mjVUK)
        (if ((case-lambda
               ((g$t$5475$mjVUK)
                (if g$t$5475$mjVUK
                  g$t$5475$mjVUK
                  (begin '#f (g$negative?$5856$mjVUK g$index$5474$mjVUK)))))
             (null? g$lst$5473$mjVUK))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$5473$mjVUK
            g$index$5474$mjVUK)
          (if (g$zero?$5857$mjVUK g$index$5474$mjVUK)
            g$lst$5473$mjVUK
            (g$list-tail$5445$mjVUK
              (cdr g$lst$5473$mjVUK)
              (- g$index$5474$mjVUK '1)))))))
   (g$list-ref$5446$mjVUK
     g$list-ref$5583$mjVUK
     (case-lambda
       ((g$lst$5476$mjVUK g$index$5477$mjVUK)
        (car (g$list-tail$5445$mjVUK g$lst$5476$mjVUK g$index$5477$mjVUK)))))
   (g$last-pair$5447$mjVUK
     g$last-pair$5584$mjVUK
     (case-lambda
       ((g$lst$5478$mjVUK)
        (if (null? g$lst$5478$mjVUK)
          g$lst$5478$mjVUK
          (if (null? (cdr g$lst$5478$mjVUK))
            g$lst$5478$mjVUK
            (g$last-pair$5447$mjVUK (cdr g$lst$5478$mjVUK)))))))
   (g$make-list$5448$mjVUK
     g$make-list$5585$mjVUK
     (case-lambda
       ((g$n$5479$mjVUK) (vector->list (make-vector g$n$5479$mjVUK)))
       ((g$n$5480$mjVUK g$fill$5481$mjVUK)
        (vector->list (make-vector g$n$5480$mjVUK g$fill$5481$mjVUK)))))
   (g$find$5449$mjVUK
     g$find$5586$mjVUK
     (case-lambda
       ((g$proc$5482$mjVUK g$l$5483$mjVUK)
        (if (null? g$l$5483$mjVUK)
          '#f
          ((case-lambda
             ((g$e$5484$mjVUK g$r$5485$mjVUK g$proc$5486$mjVUK)
              (if (g$proc$5486$mjVUK g$e$5484$mjVUK)
                g$e$5484$mjVUK
                (g$find$5449$mjVUK g$proc$5486$mjVUK g$r$5485$mjVUK))))
           (car g$l$5483$mjVUK)
           (cdr g$l$5483$mjVUK)
           g$proc$5482$mjVUK)))))
   (g$partition$5450$mjVUK
     g$partition$5587$mjVUK
     (case-lambda
       ((g$proc$5487$mjVUK g$l$5488$mjVUK)
        ((letrec ((g$f$5489$mjVUK
                    (case-lambda
                      ((g$l$5490$mjVUK g$a$5491$mjVUK g$b$5492$mjVUK)
                       (if (null? g$l$5490$mjVUK)
                         (values
                           (reverse! g$a$5491$mjVUK)
                           (reverse! g$b$5492$mjVUK))
                         ((case-lambda
                            ((g$e$5493$mjVUK)
                             (if (g$proc$5487$mjVUK g$e$5493$mjVUK)
                               (g$f$5489$mjVUK
                                 (cdr g$l$5490$mjVUK)
                                 (cons g$e$5493$mjVUK g$a$5491$mjVUK)
                                 g$b$5492$mjVUK)
                               (g$f$5489$mjVUK
                                 (cdr g$l$5490$mjVUK)
                                 g$a$5491$mjVUK
                                 (cons g$e$5493$mjVUK g$b$5492$mjVUK)))))
                          (car g$l$5490$mjVUK)))))))
           g$f$5489$mjVUK)
         g$l$5488$mjVUK
         '()
         '()))))
   (g$remp$5451$mjVUK
     g$remp$5588$mjVUK
     (case-lambda
       ((g$proc$5494$mjVUK g$l$5495$mjVUK)
        ((letrec ((g$f$5496$mjVUK
                    (case-lambda
                      ((g$l$5497$mjVUK g$a$5498$mjVUK)
                       (if (null? g$l$5497$mjVUK)
                         (reverse! g$a$5498$mjVUK)
                         ((case-lambda
                            ((g$e$5499$mjVUK)
                             (if (g$proc$5494$mjVUK g$e$5499$mjVUK)
                               (g$f$5496$mjVUK
                                 (cdr g$l$5497$mjVUK)
                                 g$a$5498$mjVUK)
                               (g$f$5496$mjVUK
                                 (cdr g$l$5497$mjVUK)
                                 (cons g$e$5499$mjVUK g$a$5498$mjVUK)))))
                          (car g$l$5497$mjVUK)))))))
           g$f$5496$mjVUK)
         g$l$5495$mjVUK
         '()))))
   (g$filter$5452$mjVUK
     g$filter$5589$mjVUK
     (case-lambda
       ((g$proc$5500$mjVUK g$l$5501$mjVUK)
        ((letrec ((g$f$5502$mjVUK
                    (case-lambda
                      ((g$l$5503$mjVUK g$a$5504$mjVUK)
                       (if (null? g$l$5503$mjVUK)
                         (reverse! g$a$5504$mjVUK)
                         ((case-lambda
                            ((g$e$5505$mjVUK)
                             (if (g$proc$5500$mjVUK g$e$5505$mjVUK)
                               (g$f$5502$mjVUK
                                 (cdr g$l$5503$mjVUK)
                                 (cons g$e$5505$mjVUK g$a$5504$mjVUK))
                               (g$f$5502$mjVUK
                                 (cdr g$l$5503$mjVUK)
                                 g$a$5504$mjVUK))))
                          (car g$l$5503$mjVUK)))))))
           g$f$5502$mjVUK)
         g$l$5501$mjVUK
         '()))))
   (g$assq$5453$mjVUK
     g$assq$5590$mjVUK
     (case-lambda
       ((g$obj$5506$mjVUK g$lst$5507$mjVUK)
        (if (null? g$lst$5507$mjVUK)
          '#f
          ((case-lambda
             ((g$obj$5508$mjVUK g$t$5509$mjVUK g$r$5510$mjVUK)
              (if (eq? g$obj$5508$mjVUK (car g$t$5509$mjVUK))
                g$t$5509$mjVUK
                (g$assq$5453$mjVUK g$obj$5508$mjVUK g$r$5510$mjVUK))))
           g$obj$5506$mjVUK
           (car g$lst$5507$mjVUK)
           (cdr g$lst$5507$mjVUK))))))
   (g$assv$5454$mjVUK
     g$assv$5591$mjVUK
     (case-lambda
       ((g$obj$5511$mjVUK g$lst$5512$mjVUK)
        (if (null? g$lst$5512$mjVUK)
          '#f
          ((case-lambda
             ((g$obj$5513$mjVUK g$t$5514$mjVUK g$r$5515$mjVUK)
              (if (eqv? g$obj$5513$mjVUK (car g$t$5514$mjVUK))
                g$t$5514$mjVUK
                (g$assv$5454$mjVUK g$obj$5513$mjVUK g$r$5515$mjVUK))))
           g$obj$5511$mjVUK
           (car g$lst$5512$mjVUK)
           (cdr g$lst$5512$mjVUK))))))
   (g$assoc$5455$mjVUK
     g$assoc$5592$mjVUK
     (case-lambda
       ((g$obj$5516$mjVUK g$lst$5517$mjVUK)
        (if (null? g$lst$5517$mjVUK)
          '#f
          ((case-lambda
             ((g$obj$5518$mjVUK g$t$5519$mjVUK g$r$5520$mjVUK)
              (if (equal? g$obj$5518$mjVUK (car g$t$5519$mjVUK))
                g$t$5519$mjVUK
                (g$assoc$5455$mjVUK g$obj$5518$mjVUK g$r$5520$mjVUK))))
           g$obj$5516$mjVUK
           (car g$lst$5517$mjVUK)
           (cdr g$lst$5517$mjVUK))))))
   (g$assp$5456$mjVUK
     g$assp$5593$mjVUK
     (case-lambda
       ((g$p?$5521$mjVUK g$lst$5522$mjVUK)
        (if (null? g$lst$5522$mjVUK)
          '#f
          ((case-lambda
             ((g$p?$5523$mjVUK g$t$5524$mjVUK g$r$5525$mjVUK)
              (if (g$p?$5523$mjVUK (car g$t$5524$mjVUK))
                g$t$5524$mjVUK
                (g$assp$5456$mjVUK g$p?$5523$mjVUK g$r$5525$mjVUK))))
           g$p?$5521$mjVUK
           (car g$lst$5522$mjVUK)
           (cdr g$lst$5522$mjVUK))))))
   (g$memq$5457$mjVUK
     g$memq$5594$mjVUK
     (case-lambda
       ((g$obj$5526$mjVUK g$lst$5527$mjVUK)
        (if (null? g$lst$5527$mjVUK)
          '#f
          (if (eq? g$obj$5526$mjVUK (car g$lst$5527$mjVUK))
            g$lst$5527$mjVUK
            (g$memq$5457$mjVUK g$obj$5526$mjVUK (cdr g$lst$5527$mjVUK)))))))
   (g$memv$5458$mjVUK
     g$memv$5595$mjVUK
     (case-lambda
       ((g$obj$5528$mjVUK g$lst$5529$mjVUK)
        (if (null? g$lst$5529$mjVUK)
          '#f
          (if (eqv? g$obj$5528$mjVUK (car g$lst$5529$mjVUK))
            g$lst$5529$mjVUK
            (g$memv$5458$mjVUK g$obj$5528$mjVUK (cdr g$lst$5529$mjVUK)))))))
   (g$member$5459$mjVUK
     g$member$5596$mjVUK
     (case-lambda
       ((g$obj$5530$mjVUK g$lst$5531$mjVUK)
        (if (null? g$lst$5531$mjVUK)
          '#f
          (if (equal? g$obj$5530$mjVUK (car g$lst$5531$mjVUK))
            g$lst$5531$mjVUK
            (g$member$5459$mjVUK g$obj$5530$mjVUK (cdr g$lst$5531$mjVUK)))))))
   (g$memp$5460$mjVUK
     g$memp$5597$mjVUK
     (case-lambda
       ((g$p?$5532$mjVUK g$lst$5533$mjVUK)
        (if (null? g$lst$5533$mjVUK)
          '#f
          (if (g$p?$5532$mjVUK (car g$lst$5533$mjVUK))
            g$lst$5533$mjVUK
            (g$memp$5460$mjVUK g$p?$5532$mjVUK (cdr g$lst$5533$mjVUK)))))))
   (g$all-empty?$5461$mjVUK
     g$all-empty?$5598$mjVUK
     (case-lambda
       ((g$ls$5534$mjVUK)
        ((case-lambda
           ((g$t$5535$mjVUK)
            (if g$t$5535$mjVUK
              g$t$5535$mjVUK
              (begin
                '#f
                (if (null? (car g$ls$5534$mjVUK))
                  (begin '#f (g$all-empty?$5461$mjVUK (cdr g$ls$5534$mjVUK)))
                  '#f)))))
         (null? g$ls$5534$mjVUK)))))
   (g$split$5462$mjVUK
     g$split$5599$mjVUK
     (case-lambda
       ((g$ls$5536$mjVUK)
        (if (null? g$ls$5536$mjVUK)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5462$mjVUK (cdr g$ls$5536$mjVUK))))
            (case-lambda
              ((g$cars$5537$mjVUK g$cdrs$5538$mjVUK)
               ((case-lambda
                  ((g$a$5539$mjVUK)
                   (values
                     (cons (car g$a$5539$mjVUK) g$cars$5537$mjVUK)
                     (cons (cdr g$a$5539$mjVUK) g$cdrs$5538$mjVUK))))
                (car g$ls$5536$mjVUK)))))))))
   (g$for-all$5463$mjVUK
     g$for-all$5600$mjVUK
     (case-lambda
       ((g$f$5540$mjVUK . g$args$5541$mjVUK)
        (if (g$all-empty?$5461$mjVUK g$args$5541$mjVUK)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5462$mjVUK g$args$5541$mjVUK)))
            (case-lambda
              ((g$cars$5542$mjVUK g$cdrs$5543$mjVUK)
               (if (g$all-empty?$5461$mjVUK g$cdrs$5543$mjVUK)
                 (apply g$f$5540$mjVUK g$cars$5542$mjVUK)
                 (if (apply g$f$5540$mjVUK g$cars$5542$mjVUK)
                   (begin
                     '#f
                     (apply
                       g$for-all$5463$mjVUK
                       g$f$5540$mjVUK
                       g$cdrs$5543$mjVUK))
                   '#f)))))))))
   (g$exists$5464$mjVUK
     g$exists$5601$mjVUK
     (case-lambda
       ((g$f$5544$mjVUK . g$args$5545$mjVUK)
        (if (g$all-empty?$5461$mjVUK g$args$5545$mjVUK)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5462$mjVUK g$args$5545$mjVUK)))
            (case-lambda
              ((g$cars$5546$mjVUK g$cdrs$5547$mjVUK)
               ((case-lambda
                  ((g$t$5548$mjVUK)
                   (if g$t$5548$mjVUK
                     g$t$5548$mjVUK
                     (begin
                       '#f
                       (apply
                         g$exists$5464$mjVUK
                         g$f$5544$mjVUK
                         g$cdrs$5547$mjVUK)))))
                (apply g$f$5544$mjVUK g$cars$5546$mjVUK)))))))))
   (g$map$5465$mjVUK
     g$map$5602$mjVUK
     (case-lambda
       ((g$proc$5549$mjVUK . g$lists$5550$mjVUK)
        ((letrec ((g$f$5551$mjVUK
                    (case-lambda
                      ((g$lists$5552$mjVUK g$a$5553$mjVUK)
                       (if (g$all-empty?$5461$mjVUK g$lists$5552$mjVUK)
                         (reverse! g$a$5553$mjVUK)
                         (call-with-values
                           (case-lambda
                             (() (g$split$5462$mjVUK g$lists$5552$mjVUK)))
                           (case-lambda
                             ((g$cars$5554$mjVUK g$cdrs$5555$mjVUK)
                              (g$f$5551$mjVUK
                                g$cdrs$5555$mjVUK
                                (cons
                                  (apply g$proc$5549$mjVUK g$cars$5554$mjVUK)
                                  g$a$5553$mjVUK))))))))))
           g$f$5551$mjVUK)
         g$lists$5550$mjVUK
         '()))))
   (g$for-each$5466$mjVUK
     g$for-each$5603$mjVUK
     (case-lambda
       ((g$f$5556$mjVUK . g$args$5557$mjVUK)
        (if (not (g$all-empty?$5461$mjVUK g$args$5557$mjVUK))
          (call-with-values
            (case-lambda (() (g$split$5462$mjVUK g$args$5557$mjVUK)))
            (case-lambda
              ((g$cars$5558$mjVUK g$cdrs$5559$mjVUK)
               (begin
                 (apply g$f$5556$mjVUK g$cars$5558$mjVUK)
                 (apply
                   g$for-each$5466$mjVUK
                   g$f$5556$mjVUK
                   g$cdrs$5559$mjVUK)))))
          (void)))))
   (g$cons*$5467$mjVUK
     g$cons*$5604$mjVUK
     (case-lambda
       ((g$a$5560$mjVUK . g$rest$5561$mjVUK)
        ((letrec ((g$f$5562$mjVUK
                    (case-lambda
                      ((g$a$5563$mjVUK g$rest$5564$mjVUK)
                       (if (null? g$rest$5564$mjVUK)
                         g$a$5563$mjVUK
                         (cons
                           g$a$5563$mjVUK
                           (g$f$5562$mjVUK
                             (car g$rest$5564$mjVUK)
                             (cdr g$rest$5564$mjVUK))))))))
           g$f$5562$mjVUK)
         g$a$5560$mjVUK
         g$rest$5561$mjVUK))))
   (g$fold-left$5468$mjVUK
     g$fold-left$5605$mjVUK
     (case-lambda
       ((g$combine$5565$mjVUK
          g$nil$5566$mjVUK
          g$list1$5567$mjVUK
          .
          g$lists$5568$mjVUK)
        (if (null? g$list1$5567$mjVUK)
          g$nil$5566$mjVUK
          (apply
            g$fold-left$5468$mjVUK
            (g$cons*$5467$mjVUK
              g$combine$5565$mjVUK
              (apply
                g$combine$5565$mjVUK
                (g$cons*$5467$mjVUK
                  g$nil$5566$mjVUK
                  (car g$list1$5567$mjVUK)
                  (g$map$5465$mjVUK car g$lists$5568$mjVUK)))
              (cdr g$list1$5567$mjVUK)
              (g$map$5465$mjVUK cdr g$lists$5568$mjVUK)))))))
   (g$fold-right$5469$mjVUK
     g$fold-right$5606$mjVUK
     (case-lambda
       ((g$combine$5569$mjVUK
          g$nil$5570$mjVUK
          g$list1$5571$mjVUK
          .
          g$lists$5572$mjVUK)
        (if (null? g$list1$5571$mjVUK)
          g$nil$5570$mjVUK
          (apply
            g$combine$5569$mjVUK
            (append
              (list (car g$list1$5571$mjVUK))
              (g$map$5465$mjVUK car g$lists$5572$mjVUK)
              (list
                (apply
                  g$fold-right$5469$mjVUK
                  (g$cons*$5467$mjVUK
                    g$combine$5569$mjVUK
                    g$nil$5570$mjVUK
                    (cdr g$list1$5571$mjVUK)
                    (g$map$5465$mjVUK cdr g$lists$5572$mjVUK))))))))))
   (g$remove$5470$mjVUK
     g$remove$5607$mjVUK
     (case-lambda
       ((g$obj$5573$mjVUK g$list$5574$mjVUK)
        (g$remp$5451$mjVUK
          (case-lambda
            ((g$x$5575$mjVUK) (equal? g$obj$5573$mjVUK g$x$5575$mjVUK)))
          g$list$5574$mjVUK))))
   (g$remv$5471$mjVUK
     g$remv$5608$mjVUK
     (case-lambda
       ((g$obj$5576$mjVUK g$list$5577$mjVUK)
        (g$remp$5451$mjVUK
          (case-lambda
            ((g$x$5578$mjVUK) (eqv? g$obj$5576$mjVUK g$x$5578$mjVUK)))
          g$list$5577$mjVUK))))
   (g$remq$5472$mjVUK
     g$remq$5609$mjVUK
     (case-lambda
       ((g$obj$5579$mjVUK g$list$5580$mjVUK)
        (g$remp$5451$mjVUK
          (case-lambda ((g$x$5581$mjVUK) (eq? g$obj$5579$mjVUK g$x$5581$mjVUK)))
          g$list$5580$mjVUK)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5610$mjVUK
     g$caar$5827$mjVUK
     (case-lambda ((g$x$5677$mjVUK) (car (car g$x$5677$mjVUK)))))
   (g$cadr$5611$mjVUK
     g$cadr$5828$mjVUK
     (case-lambda ((g$x$5678$mjVUK) (car (cdr g$x$5678$mjVUK)))))
   (g$cdar$5612$mjVUK
     g$cdar$5829$mjVUK
     (case-lambda ((g$x$5679$mjVUK) (cdr (car g$x$5679$mjVUK)))))
   (g$cddr$5613$mjVUK
     g$cddr$5830$mjVUK
     (case-lambda ((g$x$5680$mjVUK) (cdr (cdr g$x$5680$mjVUK)))))
   (g$caaar$5614$mjVUK
     g$caaar$5831$mjVUK
     (case-lambda
       ((g$x$5681$mjVUK) (g$caar$5610$mjVUK (car g$x$5681$mjVUK)))))
   (g$caadr$5615$mjVUK
     g$caadr$5832$mjVUK
     (case-lambda
       ((g$x$5682$mjVUK) (g$caar$5610$mjVUK (cdr g$x$5682$mjVUK)))))
   (g$cadar$5616$mjVUK
     g$cadar$5833$mjVUK
     (case-lambda
       ((g$x$5683$mjVUK) (g$cadr$5611$mjVUK (car g$x$5683$mjVUK)))))
   (g$caddr$5617$mjVUK
     g$caddr$5834$mjVUK
     (case-lambda
       ((g$x$5684$mjVUK) (g$cadr$5611$mjVUK (cdr g$x$5684$mjVUK)))))
   (g$cdaar$5618$mjVUK
     g$cdaar$5835$mjVUK
     (case-lambda
       ((g$x$5685$mjVUK) (g$cdar$5612$mjVUK (car g$x$5685$mjVUK)))))
   (g$cdadr$5619$mjVUK
     g$cdadr$5836$mjVUK
     (case-lambda
       ((g$x$5686$mjVUK) (g$cdar$5612$mjVUK (cdr g$x$5686$mjVUK)))))
   (g$cddar$5620$mjVUK
     g$cddar$5837$mjVUK
     (case-lambda
       ((g$x$5687$mjVUK) (g$cddr$5613$mjVUK (car g$x$5687$mjVUK)))))
   (g$cdddr$5621$mjVUK
     g$cdddr$5838$mjVUK
     (case-lambda
       ((g$x$5688$mjVUK) (g$cddr$5613$mjVUK (cdr g$x$5688$mjVUK)))))
   (g$caaaar$5622$mjVUK
     g$caaaar$5839$mjVUK
     (case-lambda
       ((g$x$5689$mjVUK) (g$caaar$5614$mjVUK (car g$x$5689$mjVUK)))))
   (g$caaadr$5623$mjVUK
     g$caaadr$5840$mjVUK
     (case-lambda
       ((g$x$5690$mjVUK) (g$caaar$5614$mjVUK (cdr g$x$5690$mjVUK)))))
   (g$caadar$5624$mjVUK
     g$caadar$5841$mjVUK
     (case-lambda
       ((g$x$5691$mjVUK) (g$caadr$5615$mjVUK (car g$x$5691$mjVUK)))))
   (g$caaddr$5625$mjVUK
     g$caaddr$5842$mjVUK
     (case-lambda
       ((g$x$5692$mjVUK) (g$caadr$5615$mjVUK (cdr g$x$5692$mjVUK)))))
   (g$cadaar$5626$mjVUK
     g$cadaar$5843$mjVUK
     (case-lambda
       ((g$x$5693$mjVUK) (g$cadar$5616$mjVUK (car g$x$5693$mjVUK)))))
   (g$cadadr$5627$mjVUK
     g$cadadr$5844$mjVUK
     (case-lambda
       ((g$x$5694$mjVUK) (g$cadar$5616$mjVUK (cdr g$x$5694$mjVUK)))))
   (g$caddar$5628$mjVUK
     g$caddar$5845$mjVUK
     (case-lambda
       ((g$x$5695$mjVUK) (g$caddr$5617$mjVUK (car g$x$5695$mjVUK)))))
   (g$cadddr$5629$mjVUK
     g$cadddr$5846$mjVUK
     (case-lambda
       ((g$x$5696$mjVUK) (g$caddr$5617$mjVUK (cdr g$x$5696$mjVUK)))))
   (g$cdaaar$5630$mjVUK
     g$cdaaar$5847$mjVUK
     (case-lambda
       ((g$x$5697$mjVUK) (g$cdaar$5618$mjVUK (car g$x$5697$mjVUK)))))
   (g$cdaadr$5631$mjVUK
     g$cdaadr$5848$mjVUK
     (case-lambda
       ((g$x$5698$mjVUK) (g$cdaar$5618$mjVUK (cdr g$x$5698$mjVUK)))))
   (g$cdadar$5632$mjVUK
     g$cdadar$5849$mjVUK
     (case-lambda
       ((g$x$5699$mjVUK) (g$cdadr$5619$mjVUK (car g$x$5699$mjVUK)))))
   (g$cdaddr$5633$mjVUK
     g$cdaddr$5850$mjVUK
     (case-lambda
       ((g$x$5700$mjVUK) (g$cdadr$5619$mjVUK (cdr g$x$5700$mjVUK)))))
   (g$cddaar$5634$mjVUK
     g$cddaar$5851$mjVUK
     (case-lambda
       ((g$x$5701$mjVUK) (g$cddar$5620$mjVUK (car g$x$5701$mjVUK)))))
   (g$cddadr$5635$mjVUK
     g$cddadr$5852$mjVUK
     (case-lambda
       ((g$x$5702$mjVUK) (g$cddar$5620$mjVUK (cdr g$x$5702$mjVUK)))))
   (g$cdddar$5636$mjVUK
     g$cdddar$5853$mjVUK
     (case-lambda
       ((g$x$5703$mjVUK) (g$cdddr$5621$mjVUK (car g$x$5703$mjVUK)))))
   (g$cddddr$5637$mjVUK
     g$cddddr$5854$mjVUK
     (case-lambda
       ((g$x$5704$mjVUK) (g$cdddr$5621$mjVUK (cdr g$x$5704$mjVUK)))))
   (g$positive?$5638$mjVUK
     g$positive?$5855$mjVUK
     (case-lambda
       ((g$r$5705$mjVUK)
        (begin
          (if (not (real-valued? g$r$5705$mjVUK))
            (assertion-violation 'positive? '"not a real" g$r$5705$mjVUK)
            (void))
          (< '0 g$r$5705$mjVUK)))))
   (g$negative?$5639$mjVUK
     g$negative?$5856$mjVUK
     (case-lambda
       ((g$r$5706$mjVUK)
        (begin
          (if (not (real-valued? g$r$5706$mjVUK))
            (assertion-violation 'negative? '"not a real" g$r$5706$mjVUK)
            (void))
          (> '0 g$r$5706$mjVUK)))))
   (g$zero?$5640$mjVUK
     g$zero?$5857$mjVUK
     (case-lambda
       ((g$r$5707$mjVUK)
        (begin
          (if (not (real-valued? g$r$5707$mjVUK))
            (assertion-violation 'zero? '"not a real" g$r$5707$mjVUK)
            (void))
          (= '0 g$r$5707$mjVUK)))))
   (g$even?$5641$mjVUK
     g$even?$5858$mjVUK
     (case-lambda
       ((g$n$5708$mjVUK)
        (begin
          (if (not (integer-valued? g$n$5708$mjVUK))
            (assertion-violation 'even? '"not a integer" g$n$5708$mjVUK)
            (void))
          (= '0 (mod g$n$5708$mjVUK '2))))))
   (g$odd?$5642$mjVUK
     g$odd?$5859$mjVUK
     (case-lambda
       ((g$n$5709$mjVUK)
        (begin
          (if (not (integer-valued? g$n$5709$mjVUK))
            (assertion-violation 'odd? '"not a integer" g$n$5709$mjVUK)
            (void))
          (= '1 (mod g$n$5709$mjVUK '2))))))
   (g$max$5643$mjVUK
     g$max$5860$mjVUK
     (case-lambda
       ((g$a$5710$mjVUK . g$rest$5711$mjVUK)
        (g$fold-left$5605$mjVUK
          (case-lambda
            ((g$a$5712$mjVUK g$b$5713$mjVUK)
             ((case-lambda
                ((g$r$5714$mjVUK)
                 (if ((case-lambda
                        ((g$t$5715$mjVUK)
                         (if g$t$5715$mjVUK
                           g$t$5715$mjVUK
                           (begin '#f (inexact? g$b$5713$mjVUK)))))
                      (inexact? g$a$5712$mjVUK))
                   (inexact g$r$5714$mjVUK)
                   g$r$5714$mjVUK)))
              (if (< g$a$5712$mjVUK g$b$5713$mjVUK)
                g$b$5713$mjVUK
                g$a$5712$mjVUK))))
          g$a$5710$mjVUK
          g$rest$5711$mjVUK))))
   (g$min$5644$mjVUK
     g$min$5861$mjVUK
     (case-lambda
       ((g$a$5716$mjVUK . g$rest$5717$mjVUK)
        (g$fold-left$5605$mjVUK
          (case-lambda
            ((g$a$5718$mjVUK g$b$5719$mjVUK)
             ((case-lambda
                ((g$r$5720$mjVUK)
                 (if ((case-lambda
                        ((g$t$5721$mjVUK)
                         (if g$t$5721$mjVUK
                           g$t$5721$mjVUK
                           (begin '#f (inexact? g$b$5719$mjVUK)))))
                      (inexact? g$a$5718$mjVUK))
                   (inexact g$r$5720$mjVUK)
                   g$r$5720$mjVUK)))
              (if (> g$a$5718$mjVUK g$b$5719$mjVUK)
                g$b$5719$mjVUK
                g$a$5718$mjVUK))))
          g$a$5716$mjVUK
          g$rest$5717$mjVUK))))
   (g$gcd$5645$mjVUK
     g$gcd$5862$mjVUK
     (case-lambda
       (g$nums$5722$mjVUK
        ((case-lambda
           ((g$t$5723$mjVUK)
            (if (g$memv$5595$mjVUK g$t$5723$mjVUK '(0))
              '0
              (if (g$memv$5595$mjVUK g$t$5723$mjVUK '(1))
                ((case-lambda
                   ((g$n$5724$mjVUK)
                    (begin
                      (if (not (integer-valued? g$n$5724$mjVUK))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$5724$mjVUK)
                        (void))
                      (abs g$n$5724$mjVUK))))
                 (car g$nums$5722$mjVUK))
                (if (g$memv$5595$mjVUK g$t$5723$mjVUK '(2))
                  ((case-lambda
                     ((g$a$5725$mjVUK g$b$5726$mjVUK)
                      (begin
                        (if (not (integer-valued? g$a$5725$mjVUK))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$5725$mjVUK)
                          (void))
                        (if (not (integer-valued? g$b$5726$mjVUK))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$5726$mjVUK)
                          (void))
                        (if (g$zero?$5640$mjVUK g$b$5726$mjVUK)
                          (abs g$a$5725$mjVUK)
                          (abs (g$gcd$5645$mjVUK
                                 g$b$5726$mjVUK
                                 (mod g$a$5725$mjVUK g$b$5726$mjVUK)))))))
                   (car g$nums$5722$mjVUK)
                   (g$cadr$5611$mjVUK g$nums$5722$mjVUK))
                  (g$fold-left$5605$mjVUK
                    g$gcd$5645$mjVUK
                    (abs (car g$nums$5722$mjVUK))
                    (cdr g$nums$5722$mjVUK)))))))
         (length g$nums$5722$mjVUK)))))
   (g$lcm$5646$mjVUK
     g$lcm$5863$mjVUK
     (case-lambda
       (g$nums$5727$mjVUK
        ((case-lambda
           ((g$t$5728$mjVUK)
            (if (g$memv$5595$mjVUK g$t$5728$mjVUK '(0))
              '1
              (if (g$memv$5595$mjVUK g$t$5728$mjVUK '(1))
                ((case-lambda
                   ((g$n$5729$mjVUK)
                    (begin
                      (if (not (integer-valued? g$n$5729$mjVUK))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$5729$mjVUK)
                        (void))
                      (abs g$n$5729$mjVUK))))
                 (car g$nums$5727$mjVUK))
                (if (g$memv$5595$mjVUK g$t$5728$mjVUK '(2))
                  ((case-lambda
                     ((g$a$5730$mjVUK g$b$5731$mjVUK)
                      (begin
                        (if (not (integer-valued? g$a$5730$mjVUK))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$5730$mjVUK)
                          (void))
                        (if (not (integer-valued? g$b$5731$mjVUK))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$5731$mjVUK)
                          (void))
                        (if ((case-lambda
                               ((g$t$5732$mjVUK)
                                (if g$t$5732$mjVUK
                                  g$t$5732$mjVUK
                                  (begin
                                    '#f
                                    (g$zero?$5640$mjVUK g$b$5731$mjVUK)))))
                             (g$zero?$5640$mjVUK g$a$5730$mjVUK))
                          '0
                          (abs (* (/ g$a$5730$mjVUK
                                     (g$gcd$5645$mjVUK
                                       g$a$5730$mjVUK
                                       g$b$5731$mjVUK))
                                  g$b$5731$mjVUK))))))
                   (car g$nums$5727$mjVUK)
                   (g$cadr$5611$mjVUK g$nums$5727$mjVUK))
                  (g$fold-left$5605$mjVUK
                    g$lcm$5646$mjVUK
                    (abs (car g$nums$5727$mjVUK))
                    (cdr g$nums$5727$mjVUK)))))))
         (length g$nums$5727$mjVUK)))))
   (g$string=?$5653$mjVUK
     g$string=?$5864$mjVUK
     (case-lambda
       ((g$a$5733$mjVUK g$b$5734$mjVUK . g$rest$5735$mjVUK)
        (begin
          (if (not (string? g$a$5733$mjVUK))
            (assertion-violation 'string=? '"not a string" g$a$5733$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5736$mjVUK)
               (begin
                 (if (not (string? g$x$5736$mjVUK))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5736$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5737$mjVUK)
                     (begin
                       (set! g$a$5733$mjVUK g$x$5736$mjVUK)
                       g$r$5737$mjVUK)))
                  (fx=? (string-compare g$a$5733$mjVUK g$x$5736$mjVUK) '0)))))
            (cons g$b$5734$mjVUK g$rest$5735$mjVUK))))))
   (g$string<?$5654$mjVUK
     g$string<?$5865$mjVUK
     (case-lambda
       ((g$a$5738$mjVUK g$b$5739$mjVUK . g$rest$5740$mjVUK)
        (begin
          (if (not (string? g$a$5738$mjVUK))
            (assertion-violation 'string<? '"not a string" g$a$5738$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5741$mjVUK)
               (begin
                 (if (not (string? g$x$5741$mjVUK))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5741$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5742$mjVUK)
                     (begin
                       (set! g$a$5738$mjVUK g$x$5741$mjVUK)
                       g$r$5742$mjVUK)))
                  (fx<? (string-compare g$a$5738$mjVUK g$x$5741$mjVUK) '0)))))
            (cons g$b$5739$mjVUK g$rest$5740$mjVUK))))))
   (g$string>?$5655$mjVUK
     g$string>?$5866$mjVUK
     (case-lambda
       ((g$a$5743$mjVUK g$b$5744$mjVUK . g$rest$5745$mjVUK)
        (begin
          (if (not (string? g$a$5743$mjVUK))
            (assertion-violation 'string>? '"not a string" g$a$5743$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5746$mjVUK)
               (begin
                 (if (not (string? g$x$5746$mjVUK))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5746$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5747$mjVUK)
                     (begin
                       (set! g$a$5743$mjVUK g$x$5746$mjVUK)
                       g$r$5747$mjVUK)))
                  (fx>? (string-compare g$a$5743$mjVUK g$x$5746$mjVUK) '0)))))
            (cons g$b$5744$mjVUK g$rest$5745$mjVUK))))))
   (g$string<=?$5656$mjVUK
     g$string<=?$5867$mjVUK
     (case-lambda
       ((g$a$5748$mjVUK g$b$5749$mjVUK . g$rest$5750$mjVUK)
        (begin
          (if (not (string? g$a$5748$mjVUK))
            (assertion-violation 'string<=? '"not a string" g$a$5748$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5751$mjVUK)
               (begin
                 (if (not (string? g$x$5751$mjVUK))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5751$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5752$mjVUK)
                     (begin
                       (set! g$a$5748$mjVUK g$x$5751$mjVUK)
                       g$r$5752$mjVUK)))
                  (fx<=? (string-compare g$a$5748$mjVUK g$x$5751$mjVUK) '0)))))
            (cons g$b$5749$mjVUK g$rest$5750$mjVUK))))))
   (g$string>=?$5657$mjVUK
     g$string>=?$5868$mjVUK
     (case-lambda
       ((g$a$5753$mjVUK g$b$5754$mjVUK . g$rest$5755$mjVUK)
        (begin
          (if (not (string? g$a$5753$mjVUK))
            (assertion-violation 'string>=? '"not a string" g$a$5753$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5756$mjVUK)
               (begin
                 (if (not (string? g$x$5756$mjVUK))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5756$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5757$mjVUK)
                     (begin
                       (set! g$a$5753$mjVUK g$x$5756$mjVUK)
                       g$r$5757$mjVUK)))
                  (fx>=? (string-compare g$a$5753$mjVUK g$x$5756$mjVUK) '0)))))
            (cons g$b$5754$mjVUK g$rest$5755$mjVUK))))))
   (g$symbol=?$5658$mjVUK
     g$symbol=?$5869$mjVUK
     (case-lambda
       ((g$a$5758$mjVUK g$b$5759$mjVUK . g$rest$5760$mjVUK)
        (begin
          (if (not (symbol? g$a$5758$mjVUK))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5758$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5761$mjVUK)
               (begin
                 (if (not (symbol? g$x$5761$mjVUK))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5761$mjVUK)
                   (void))
                 (eq? g$a$5758$mjVUK g$x$5761$mjVUK))))
            (cons g$b$5759$mjVUK g$rest$5760$mjVUK))))))
   (g$boolean=?$5659$mjVUK
     g$boolean=?$5870$mjVUK
     (case-lambda
       ((g$a$5762$mjVUK g$b$5763$mjVUK . g$rest$5764$mjVUK)
        (begin
          (if (not (boolean? g$a$5762$mjVUK))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5762$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5765$mjVUK)
               (begin
                 (if (not (boolean? g$x$5765$mjVUK))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5765$mjVUK)
                   (void))
                 (eq? g$a$5762$mjVUK g$x$5765$mjVUK))))
            (cons g$b$5763$mjVUK g$rest$5764$mjVUK))))))
   (g$char=?$5666$mjVUK
     g$char=?$5871$mjVUK
     (case-lambda
       ((g$a$5766$mjVUK g$b$5767$mjVUK . g$rest$5768$mjVUK)
        (begin
          (if (not (char? g$a$5766$mjVUK))
            (assertion-violation 'char=? '"not a char" g$a$5766$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5769$mjVUK)
               (begin
                 (if (not (char? g$x$5769$mjVUK))
                   (assertion-violation 'char=? '"not a char" g$x$5769$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5770$mjVUK)
                     (begin
                       (set! g$a$5766$mjVUK g$x$5769$mjVUK)
                       g$r$5770$mjVUK)))
                  (fx=?
                    (char->integer g$a$5766$mjVUK)
                    (char->integer g$x$5769$mjVUK))))))
            (cons g$b$5767$mjVUK g$rest$5768$mjVUK))))))
   (g$char<?$5667$mjVUK
     g$char<?$5872$mjVUK
     (case-lambda
       ((g$a$5771$mjVUK g$b$5772$mjVUK . g$rest$5773$mjVUK)
        (begin
          (if (not (char? g$a$5771$mjVUK))
            (assertion-violation 'char<? '"not a char" g$a$5771$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5774$mjVUK)
               (begin
                 (if (not (char? g$x$5774$mjVUK))
                   (assertion-violation 'char<? '"not a char" g$x$5774$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5775$mjVUK)
                     (begin
                       (set! g$a$5771$mjVUK g$x$5774$mjVUK)
                       g$r$5775$mjVUK)))
                  (fx<?
                    (char->integer g$a$5771$mjVUK)
                    (char->integer g$x$5774$mjVUK))))))
            (cons g$b$5772$mjVUK g$rest$5773$mjVUK))))))
   (g$char>?$5668$mjVUK
     g$char>?$5873$mjVUK
     (case-lambda
       ((g$a$5776$mjVUK g$b$5777$mjVUK . g$rest$5778$mjVUK)
        (begin
          (if (not (char? g$a$5776$mjVUK))
            (assertion-violation 'char>? '"not a char" g$a$5776$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5779$mjVUK)
               (begin
                 (if (not (char? g$x$5779$mjVUK))
                   (assertion-violation 'char>? '"not a char" g$x$5779$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5780$mjVUK)
                     (begin
                       (set! g$a$5776$mjVUK g$x$5779$mjVUK)
                       g$r$5780$mjVUK)))
                  (fx>?
                    (char->integer g$a$5776$mjVUK)
                    (char->integer g$x$5779$mjVUK))))))
            (cons g$b$5777$mjVUK g$rest$5778$mjVUK))))))
   (g$char<=?$5669$mjVUK
     g$char<=?$5874$mjVUK
     (case-lambda
       ((g$a$5781$mjVUK g$b$5782$mjVUK . g$rest$5783$mjVUK)
        (begin
          (if (not (char? g$a$5781$mjVUK))
            (assertion-violation 'char<=? '"not a char" g$a$5781$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5784$mjVUK)
               (begin
                 (if (not (char? g$x$5784$mjVUK))
                   (assertion-violation 'char<=? '"not a char" g$x$5784$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5785$mjVUK)
                     (begin
                       (set! g$a$5781$mjVUK g$x$5784$mjVUK)
                       g$r$5785$mjVUK)))
                  (fx<=?
                    (char->integer g$a$5781$mjVUK)
                    (char->integer g$x$5784$mjVUK))))))
            (cons g$b$5782$mjVUK g$rest$5783$mjVUK))))))
   (g$char>=?$5670$mjVUK
     g$char>=?$5875$mjVUK
     (case-lambda
       ((g$a$5786$mjVUK g$b$5787$mjVUK . g$rest$5788$mjVUK)
        (begin
          (if (not (char? g$a$5786$mjVUK))
            (assertion-violation 'char>=? '"not a char" g$a$5786$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$5789$mjVUK)
               (begin
                 (if (not (char? g$x$5789$mjVUK))
                   (assertion-violation 'char>=? '"not a char" g$x$5789$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$5790$mjVUK)
                     (begin
                       (set! g$a$5786$mjVUK g$x$5789$mjVUK)
                       g$r$5790$mjVUK)))
                  (fx>=?
                    (char->integer g$a$5786$mjVUK)
                    (char->integer g$x$5789$mjVUK))))))
            (cons g$b$5787$mjVUK g$rest$5788$mjVUK))))))
   (g$rationalize$5671$mjVUK
     g$rationalize$5876$mjVUK
     (case-lambda
       ((g$x$5791$mjVUK g$e$5792$mjVUK)
        (if (if (infinite? g$x$5791$mjVUK)
              (begin '#f (infinite? g$e$5792$mjVUK))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5793$mjVUK)
              (if (if (exact? g$x$5791$mjVUK)
                    (begin '#f (exact? g$e$5792$mjVUK))
                    '#f)
                g$r$5793$mjVUK
                (inexact g$r$5793$mjVUK))))
           (apply
             /
             (g$find-ratio$5672$mjVUK g$x$5791$mjVUK g$e$5792$mjVUK)))))))
   (g$find-ratio$5672$mjVUK
     g$find-ratio$5877$mjVUK
     (case-lambda
       ((g$x$5794$mjVUK g$e$5795$mjVUK)
        (g$find-ratio-between$5673$mjVUK
          (- g$x$5794$mjVUK g$e$5795$mjVUK)
          (+ g$x$5794$mjVUK g$e$5795$mjVUK)))))
   (g$find-ratio-between$5673$mjVUK
     g$find-ratio-between$5878$mjVUK
     (case-lambda
       ((g$x$5796$mjVUK g$y$5797$mjVUK)
        (letrec* ((g$sr$5798$mjVUK
                    (case-lambda
                      ((g$x$5800$mjVUK g$y$5801$mjVUK)
                       ((case-lambda
                          ((g$fx$5802$mjVUK g$fy$5803$mjVUK)
                           (if (>= g$fx$5802$mjVUK g$x$5800$mjVUK)
                             (list g$fx$5802$mjVUK '1)
                             (if (= g$fx$5802$mjVUK g$fy$5803$mjVUK)
                               ((case-lambda
                                  ((g$rat$5804$mjVUK)
                                   (list
                                     (+ (g$cadr$5611$mjVUK g$rat$5804$mjVUK)
                                        (* g$fx$5802$mjVUK
                                           (car g$rat$5804$mjVUK)))
                                     (car g$rat$5804$mjVUK))))
                                (g$sr$5798$mjVUK
                                  (/ (- g$y$5801$mjVUK g$fy$5803$mjVUK))
                                  (/ (- g$x$5800$mjVUK g$fx$5802$mjVUK))))
                               (list (+ '1 g$fx$5802$mjVUK) '1)))))
                        (exact (floor g$x$5800$mjVUK))
                        (exact (floor g$y$5801$mjVUK)))))))
          (if (< g$y$5797$mjVUK g$x$5796$mjVUK)
            (g$find-ratio-between$5673$mjVUK g$y$5797$mjVUK g$x$5796$mjVUK)
            (if (>= g$x$5796$mjVUK g$y$5797$mjVUK)
              (list g$x$5796$mjVUK '1)
              (if (g$positive?$5638$mjVUK g$x$5796$mjVUK)
                (g$sr$5798$mjVUK g$x$5796$mjVUK g$y$5797$mjVUK)
                (if (g$negative?$5639$mjVUK g$y$5797$mjVUK)
                  ((case-lambda
                     ((g$rat$5799$mjVUK)
                      (list
                        (- (car g$rat$5799$mjVUK))
                        (g$cadr$5611$mjVUK g$rat$5799$mjVUK))))
                   (g$sr$5798$mjVUK (- g$y$5797$mjVUK) (- g$x$5796$mjVUK)))
                  '(0 1)))))))))
   (g$vector-map$5674$mjVUK
     g$vector-map$5879$mjVUK
     (case-lambda
       ((g$p$5805$mjVUK g$vec1$5806$mjVUK . g$vecs$5807$mjVUK)
        ((case-lambda
           ((g$len$5808$mjVUK)
            ((case-lambda
               ((g$res$5809$mjVUK)
                (letrec ((g$loop$5810$mjVUK
                           (case-lambda
                             ((g$i$5811$mjVUK)
                              (if (fx=? g$i$5811$mjVUK g$len$5808$mjVUK)
                                (begin (if '#f '#f (void)) g$res$5809$mjVUK)
                                (begin
                                  (vector-set!
                                    g$res$5809$mjVUK
                                    g$i$5811$mjVUK
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (apply
                                           values
                                           (g$map$5602$mjVUK
                                             (case-lambda
                                               ((g$x$5812$mjVUK)
                                                (vector-ref
                                                  g$x$5812$mjVUK
                                                  g$i$5811$mjVUK)))
                                             (cons
                                               g$vec1$5806$mjVUK
                                               g$vecs$5807$mjVUK)))))
                                      g$p$5805$mjVUK))
                                  (g$loop$5810$mjVUK
                                    (fx+ g$i$5811$mjVUK '1))))))))
                  (g$loop$5810$mjVUK '0))))
             (make-vector g$len$5808$mjVUK))))
         (vector-length g$vec1$5806$mjVUK)))))
   (g$vector-for-each$5675$mjVUK
     g$vector-for-each$5880$mjVUK
     (case-lambda
       ((g$p$5813$mjVUK g$vec1$5814$mjVUK . g$vecs$5815$mjVUK)
        ((case-lambda
           ((g$len$5816$mjVUK)
            (letrec ((g$loop$5817$mjVUK
                       (case-lambda
                         ((g$i$5818$mjVUK)
                          (if (fx=? g$i$5818$mjVUK g$len$5816$mjVUK)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$5602$mjVUK
                                       (case-lambda
                                         ((g$x$5819$mjVUK)
                                          (vector-ref
                                            g$x$5819$mjVUK
                                            g$i$5818$mjVUK)))
                                       (cons
                                         g$vec1$5814$mjVUK
                                         g$vecs$5815$mjVUK)))))
                                g$p$5813$mjVUK)
                              (g$loop$5817$mjVUK (fx+ g$i$5818$mjVUK '1))))))))
              (g$loop$5817$mjVUK '0))))
         (vector-length g$vec1$5814$mjVUK)))))
   (g$string-for-each$5676$mjVUK
     g$string-for-each$5881$mjVUK
     (case-lambda
       ((g$p$5820$mjVUK g$str1$5821$mjVUK . g$strs$5822$mjVUK)
        ((case-lambda
           ((g$len$5823$mjVUK)
            (letrec ((g$loop$5824$mjVUK
                       (case-lambda
                         ((g$i$5825$mjVUK)
                          (if (fx=? g$i$5825$mjVUK g$len$5823$mjVUK)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$5602$mjVUK
                                       (case-lambda
                                         ((g$x$5826$mjVUK)
                                          (string-ref
                                            g$x$5826$mjVUK
                                            g$i$5825$mjVUK)))
                                       (cons
                                         g$str1$5821$mjVUK
                                         g$strs$5822$mjVUK)))))
                                g$p$5820$mjVUK)
                              (g$loop$5824$mjVUK (fx+ g$i$5825$mjVUK '1))))))))
              (g$loop$5824$mjVUK '0))))
         (string-length g$str1$5821$mjVUK))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$6070$mjVUK g$using$6103$mjVUK (clr-using-internal 'system))
   (g$using$6072$mjVUK
     g$using$6104$mjVUK
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$6073$mjVUK
     g$make-eq-hashtable$6105$mjVUK
     (case-lambda
       (() (g$make-eq-hashtable$6073$mjVUK '32))
       ((g$k$6082$mjVUK)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$6082$mjVUK)))))
   (g$make-eqv-hashtable$6074$mjVUK
     g$make-eqv-hashtable$6106$mjVUK
     (case-lambda
       (() (g$make-eqv-hashtable$6074$mjVUK '32))
       ((g$k$6083$mjVUK) (make-hashtable eqv-hash eqv? g$k$6083$mjVUK))))
   (g$hashtable-size$6075$mjVUK
     g$hashtable-size$6107$mjVUK
     (case-lambda
       ((g$ht$6084$mjVUK)
        (clr-call-internal 'hashtable 'get_count g$ht$6084$mjVUK))))
   (g$hashtable-ref$6076$mjVUK
     g$hashtable-ref$6108$mjVUK
     (case-lambda
       ((g$ht$6085$mjVUK g$key$6086$mjVUK g$default$6087$mjVUK)
        (letrec* ((g$r$6088$mjVUK
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$6085$mjVUK
                      g$key$6086$mjVUK)))
          (if (not (null? g$r$6088$mjVUK))
            g$r$6088$mjVUK
            g$default$6087$mjVUK)))))
   (g$hashtable-set!$6077$mjVUK
     g$hashtable-set!$6109$mjVUK
     (case-lambda
       ((g$ht$6089$mjVUK g$key$6090$mjVUK g$obj$6091$mjVUK)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$6089$mjVUK
          g$key$6090$mjVUK
          g$obj$6091$mjVUK))))
   (g$hashtable-delete!$6078$mjVUK
     g$hashtable-delete!$6110$mjVUK
     (case-lambda
       ((g$ht$6092$mjVUK g$key$6093$mjVUK)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$6092$mjVUK
          g$key$6093$mjVUK))))
   (g$hashtable-contains?$6079$mjVUK
     g$hashtable-contains?$6111$mjVUK
     (case-lambda
       ((g$ht$6094$mjVUK g$key$6095$mjVUK)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$6094$mjVUK
          g$key$6095$mjVUK))))
   (g$hashtable-update!$6080$mjVUK
     g$hashtable-update!$6112$mjVUK
     (case-lambda
       ((g$ht$6096$mjVUK
          g$key$6097$mjVUK
          g$proc$6098$mjVUK
          g$default$6099$mjVUK)
        (g$hashtable-set!$6077$mjVUK
          g$ht$6096$mjVUK
          g$key$6097$mjVUK
          (g$proc$6098$mjVUK
            (g$hashtable-ref$6076$mjVUK
              g$ht$6096$mjVUK
              g$key$6097$mjVUK
              g$default$6099$mjVUK))))))
   (g$hashtable-clear!$6081$mjVUK
     g$hashtable-clear!$6113$mjVUK
     (case-lambda
       ((g$ht$6100$mjVUK) (g$hashtable-clear!$6081$mjVUK g$ht$6100$mjVUK '32))
       ((g$ht$6101$mjVUK g$k$6102$mjVUK)
        (clr-call-internal 'hashtable 'clear g$ht$6101$mjVUK)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$6115$mjVUK g$using$6122$mjVUK (clr-using-internal 'system.io))
   (g$file-exists?$6116$mjVUK
     g$file-exists?$6123$mjVUK
     (case-lambda
       ((g$fn$6119$mjVUK)
        (clr-call-internal 'file 'exists '() g$fn$6119$mjVUK))))
   (g$delete-file$6117$mjVUK
     g$delete-file$6124$mjVUK
     (case-lambda
       ((g$fn$6120$mjVUK)
        (clr-call-internal 'file 'delete '() g$fn$6120$mjVUK))))
   (g$get-directory-name$6118$mjVUK
     g$get-directory-name$6125$mjVUK
     (case-lambda
       ((g$path$6121$mjVUK)
        (clr-call-internal 'path 'getdirectoryname '() g$path$6121$mjVUK)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6126$mjVUK
     g$native-endianness$6237$mjVUK
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6127$mjVUK
     g$bytevector-u16-ref$6238$mjVUK
     (case-lambda
       ((g$bytevector$6155$mjVUK g$k$6156$mjVUK g$endianness$6157$mjVUK)
        (bytevector-uint-ref
          g$bytevector$6155$mjVUK
          g$k$6156$mjVUK
          g$endianness$6157$mjVUK
          '2))))
   (g$bytevector-s16-ref$6128$mjVUK
     g$bytevector-s16-ref$6239$mjVUK
     (case-lambda
       ((g$bytevector$6158$mjVUK g$k$6159$mjVUK g$endianness$6160$mjVUK)
        (bytevector-sint-ref
          g$bytevector$6158$mjVUK
          g$k$6159$mjVUK
          g$endianness$6160$mjVUK
          '2))))
   (g$bytevector-u16-native-ref$6129$mjVUK
     g$bytevector-u16-native-ref$6240$mjVUK
     (case-lambda
       ((g$bytevector$6161$mjVUK g$k$6162$mjVUK)
        (bytevector-uint-ref
          g$bytevector$6161$mjVUK
          g$k$6162$mjVUK
          (g$native-endianness$6126$mjVUK)
          '2))))
   (g$bytevector-s16-native-ref$6130$mjVUK
     g$bytevector-s16-native-ref$6241$mjVUK
     (case-lambda
       ((g$bytevector$6163$mjVUK g$k$6164$mjVUK)
        (bytevector-sint-ref
          g$bytevector$6163$mjVUK
          g$k$6164$mjVUK
          (g$native-endianness$6126$mjVUK)
          '2))))
   (g$bytevector-u16-set!$6131$mjVUK
     g$bytevector-u16-set!$6242$mjVUK
     (case-lambda
       ((g$bytevector$6165$mjVUK
          g$k$6166$mjVUK
          g$n$6167$mjVUK
          g$endianness$6168$mjVUK)
        (bytevector-uint-set!
          g$bytevector$6165$mjVUK
          g$k$6166$mjVUK
          g$n$6167$mjVUK
          g$endianness$6168$mjVUK
          '2))))
   (g$bytevector-s16-set!$6132$mjVUK
     g$bytevector-s16-set!$6243$mjVUK
     (case-lambda
       ((g$bytevector$6169$mjVUK
          g$k$6170$mjVUK
          g$n$6171$mjVUK
          g$endianness$6172$mjVUK)
        (bytevector-sint-set!
          g$bytevector$6169$mjVUK
          g$k$6170$mjVUK
          g$n$6171$mjVUK
          g$endianness$6172$mjVUK
          '2))))
   (g$bytevector-u16-native-set!$6133$mjVUK
     g$bytevector-u16-native-set!$6244$mjVUK
     (case-lambda
       ((g$bytevector$6173$mjVUK g$k$6174$mjVUK g$n$6175$mjVUK)
        (bytevector-uint-set!
          g$bytevector$6173$mjVUK
          g$k$6174$mjVUK
          g$n$6175$mjVUK
          (g$native-endianness$6126$mjVUK)
          '2))))
   (g$bytevector-s16-native-set!$6134$mjVUK
     g$bytevector-s16-native-set!$6245$mjVUK
     (case-lambda
       ((g$bytevector$6176$mjVUK g$k$6177$mjVUK g$n$6178$mjVUK)
        (bytevector-sint-set!
          g$bytevector$6176$mjVUK
          g$k$6177$mjVUK
          g$n$6178$mjVUK
          (g$native-endianness$6126$mjVUK)
          '2))))
   (g$bytevector-u32-ref$6135$mjVUK
     g$bytevector-u32-ref$6246$mjVUK
     (case-lambda
       ((g$bytevector$6179$mjVUK g$k$6180$mjVUK g$endianness$6181$mjVUK)
        (bytevector-uint-ref
          g$bytevector$6179$mjVUK
          g$k$6180$mjVUK
          g$endianness$6181$mjVUK
          '4))))
   (g$bytevector-s32-ref$6136$mjVUK
     g$bytevector-s32-ref$6247$mjVUK
     (case-lambda
       ((g$bytevector$6182$mjVUK g$k$6183$mjVUK g$endianness$6184$mjVUK)
        (bytevector-sint-ref
          g$bytevector$6182$mjVUK
          g$k$6183$mjVUK
          g$endianness$6184$mjVUK
          '4))))
   (g$bytevector-u32-native-ref$6137$mjVUK
     g$bytevector-u32-native-ref$6248$mjVUK
     (case-lambda
       ((g$bytevector$6185$mjVUK g$k$6186$mjVUK)
        (bytevector-uint-ref
          g$bytevector$6185$mjVUK
          g$k$6186$mjVUK
          (g$native-endianness$6126$mjVUK)
          '4))))
   (g$bytevector-s32-native-ref$6138$mjVUK
     g$bytevector-s32-native-ref$6249$mjVUK
     (case-lambda
       ((g$bytevector$6187$mjVUK g$k$6188$mjVUK)
        (bytevector-sint-ref
          g$bytevector$6187$mjVUK
          g$k$6188$mjVUK
          (g$native-endianness$6126$mjVUK)
          '4))))
   (g$bytevector-u32-set!$6139$mjVUK
     g$bytevector-u32-set!$6250$mjVUK
     (case-lambda
       ((g$bytevector$6189$mjVUK
          g$k$6190$mjVUK
          g$n$6191$mjVUK
          g$endianness$6192$mjVUK)
        (bytevector-uint-set!
          g$bytevector$6189$mjVUK
          g$k$6190$mjVUK
          g$n$6191$mjVUK
          g$endianness$6192$mjVUK
          '4))))
   (g$bytevector-s32-set!$6140$mjVUK
     g$bytevector-s32-set!$6251$mjVUK
     (case-lambda
       ((g$bytevector$6193$mjVUK
          g$k$6194$mjVUK
          g$n$6195$mjVUK
          g$endianness$6196$mjVUK)
        (bytevector-sint-set!
          g$bytevector$6193$mjVUK
          g$k$6194$mjVUK
          g$n$6195$mjVUK
          g$endianness$6196$mjVUK
          '4))))
   (g$bytevector-u32-native-set!$6141$mjVUK
     g$bytevector-u32-native-set!$6252$mjVUK
     (case-lambda
       ((g$bytevector$6197$mjVUK g$k$6198$mjVUK g$n$6199$mjVUK)
        (bytevector-uint-set!
          g$bytevector$6197$mjVUK
          g$k$6198$mjVUK
          g$n$6199$mjVUK
          (g$native-endianness$6126$mjVUK)
          '4))))
   (g$bytevector-s32-native-set!$6142$mjVUK
     g$bytevector-s32-native-set!$6253$mjVUK
     (case-lambda
       ((g$bytevector$6200$mjVUK g$k$6201$mjVUK g$n$6202$mjVUK)
        (bytevector-sint-set!
          g$bytevector$6200$mjVUK
          g$k$6201$mjVUK
          g$n$6202$mjVUK
          (g$native-endianness$6126$mjVUK)
          '4))))
   (g$bytevector-u64-ref$6143$mjVUK
     g$bytevector-u64-ref$6254$mjVUK
     (case-lambda
       ((g$bytevector$6203$mjVUK g$k$6204$mjVUK g$endianness$6205$mjVUK)
        (bytevector-uint-ref
          g$bytevector$6203$mjVUK
          g$k$6204$mjVUK
          g$endianness$6205$mjVUK
          '8))))
   (g$bytevector-s64-ref$6144$mjVUK
     g$bytevector-s64-ref$6255$mjVUK
     (case-lambda
       ((g$bytevector$6206$mjVUK g$k$6207$mjVUK g$endianness$6208$mjVUK)
        (bytevector-sint-ref
          g$bytevector$6206$mjVUK
          g$k$6207$mjVUK
          g$endianness$6208$mjVUK
          '8))))
   (g$bytevector-u64-native-ref$6145$mjVUK
     g$bytevector-u64-native-ref$6256$mjVUK
     (case-lambda
       ((g$bytevector$6209$mjVUK g$k$6210$mjVUK)
        (bytevector-uint-ref
          g$bytevector$6209$mjVUK
          g$k$6210$mjVUK
          (g$native-endianness$6126$mjVUK)
          '8))))
   (g$bytevector-s64-native-ref$6146$mjVUK
     g$bytevector-s64-native-ref$6257$mjVUK
     (case-lambda
       ((g$bytevector$6211$mjVUK g$k$6212$mjVUK)
        (bytevector-sint-ref
          g$bytevector$6211$mjVUK
          g$k$6212$mjVUK
          (g$native-endianness$6126$mjVUK)
          '8))))
   (g$bytevector-u64-set!$6147$mjVUK
     g$bytevector-u64-set!$6258$mjVUK
     (case-lambda
       ((g$bytevector$6213$mjVUK
          g$k$6214$mjVUK
          g$n$6215$mjVUK
          g$endianness$6216$mjVUK)
        (bytevector-uint-set!
          g$bytevector$6213$mjVUK
          g$k$6214$mjVUK
          g$n$6215$mjVUK
          g$endianness$6216$mjVUK
          '8))))
   (g$bytevector-s64-set!$6148$mjVUK
     g$bytevector-s64-set!$6259$mjVUK
     (case-lambda
       ((g$bytevector$6217$mjVUK
          g$k$6218$mjVUK
          g$n$6219$mjVUK
          g$endianness$6220$mjVUK)
        (bytevector-sint-set!
          g$bytevector$6217$mjVUK
          g$k$6218$mjVUK
          g$n$6219$mjVUK
          g$endianness$6220$mjVUK
          '8))))
   (g$bytevector-u64-native-set!$6149$mjVUK
     g$bytevector-u64-native-set!$6260$mjVUK
     (case-lambda
       ((g$bytevector$6221$mjVUK g$k$6222$mjVUK g$n$6223$mjVUK)
        (bytevector-uint-set!
          g$bytevector$6221$mjVUK
          g$k$6222$mjVUK
          g$n$6223$mjVUK
          (g$native-endianness$6126$mjVUK)
          '8))))
   (g$bytevector-s64-native-set!$6150$mjVUK
     g$bytevector-s64-native-set!$6261$mjVUK
     (case-lambda
       ((g$bytevector$6224$mjVUK g$k$6225$mjVUK g$n$6226$mjVUK)
        (bytevector-sint-set!
          g$bytevector$6224$mjVUK
          g$k$6225$mjVUK
          g$n$6226$mjVUK
          (g$native-endianness$6126$mjVUK)
          '8))))
   (g$bytevector-ieee-single-native-ref$6151$mjVUK
     g$bytevector-ieee-single-native-ref$6262$mjVUK
     (case-lambda
       ((g$bytevector$6227$mjVUK g$k$6228$mjVUK)
        (if (not (g$zero?$5857$mjVUK (mod g$k$6228$mjVUK '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$6228$mjVUK)
          (bytevector-ieee-single-ref
            g$bytevector$6227$mjVUK
            g$k$6228$mjVUK
            (g$native-endianness$6126$mjVUK))))))
   (g$bytevector-ieee-double-native-ref$6152$mjVUK
     g$bytevector-ieee-double-native-ref$6263$mjVUK
     (case-lambda
       ((g$bytevector$6229$mjVUK g$k$6230$mjVUK)
        (if (not (g$zero?$5857$mjVUK (mod g$k$6230$mjVUK '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$6230$mjVUK)
          (bytevector-ieee-double-ref
            g$bytevector$6229$mjVUK
            g$k$6230$mjVUK
            (g$native-endianness$6126$mjVUK))))))
   (g$bytevector-ieee-single-native-set!$6153$mjVUK
     g$bytevector-ieee-single-native-set!$6264$mjVUK
     (case-lambda
       ((g$bytevector$6231$mjVUK g$k$6232$mjVUK g$x$6233$mjVUK)
        (if (not (g$zero?$5857$mjVUK (mod g$k$6232$mjVUK '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$6232$mjVUK)
          (bytevector-ieee-single-set!
            g$bytevector$6231$mjVUK
            g$k$6232$mjVUK
            g$x$6233$mjVUK
            (g$native-endianness$6126$mjVUK))))))
   (g$bytevector-ieee-double-native-set!$6154$mjVUK
     g$bytevector-ieee-double-native-set!$6265$mjVUK
     (case-lambda
       ((g$bytevector$6234$mjVUK g$k$6235$mjVUK g$x$6236$mjVUK)
        (if (not (g$zero?$5857$mjVUK (mod g$k$6235$mjVUK '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$6235$mjVUK)
          (bytevector-ieee-double-set!
            g$bytevector$6234$mjVUK
            g$k$6235$mjVUK
            g$x$6236$mjVUK
            (g$native-endianness$6126$mjVUK)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$7441$6266$mjVUK
     g$7441$6361$mjVUK
     (make-record-type-descriptor
       '&condition
       '#f
       'g$7444$mjVUK
       '#f
       '#f
       '#()))
   (g$7443$6267$mjVUK g$7443$6362$mjVUK '#f)
   (g$7442$6268$mjVUK
     g$7442$6363$mjVUK
     (make-record-constructor-descriptor
       g$7441$6266$mjVUK
       '#f
       g$7443$6267$mjVUK))
   (g$&condition?$6269$mjVUK
     g$&condition?$6364$mjVUK
     (record-predicate g$7441$6266$mjVUK))
   (g$make-&condition$6270$mjVUK
     g$make-&condition$6365$mjVUK
     (record-constructor g$7442$6268$mjVUK))
   (g$&condition-rtd$6271$mjVUK
     g$&condition-rtd$6366$mjVUK
     g$7441$6266$mjVUK)
   (g$&condition-rcd$6272$mjVUK
     g$&condition-rcd$6367$mjVUK
     g$7442$6268$mjVUK)
   (g$7457$6273$mjVUK
     g$7457$6368$mjVUK
     (make-record-type-descriptor
       '&message
       g$7441$6266$mjVUK
       'g$7460$mjVUK
       '#f
       '#f
       '#((immutable message))))
   (g$7459$6274$mjVUK g$7459$6369$mjVUK '#f)
   (g$7458$6275$mjVUK
     g$7458$6370$mjVUK
     (make-record-constructor-descriptor
       g$7457$6273$mjVUK
       g$7442$6268$mjVUK
       g$7459$6274$mjVUK))
   (g$7456$6276$mjVUK
     g$7456$6371$mjVUK
     (record-predicate g$7457$6273$mjVUK))
   (g$make-message-condition$6277$mjVUK
     g$make-message-condition$6372$mjVUK
     (record-constructor g$7458$6275$mjVUK))
   (g$7455$6278$mjVUK
     g$7455$6373$mjVUK
     (record-accessor g$7457$6273$mjVUK '0))
   (g$message-condition?$6279$mjVUK
     g$message-condition?$6374$mjVUK
     (condition-predicate g$7457$6273$mjVUK))
   (g$condition-message$6280$mjVUK
     g$condition-message$6375$mjVUK
     (condition-accessor g$7457$6273$mjVUK g$7455$6278$mjVUK))
   (g$7473$6281$mjVUK
     g$7473$6376$mjVUK
     (make-record-type-descriptor
       '&warning
       g$7441$6266$mjVUK
       'g$7476$mjVUK
       '#f
       '#f
       '#()))
   (g$7475$6282$mjVUK g$7475$6377$mjVUK '#f)
   (g$7474$6283$mjVUK
     g$7474$6378$mjVUK
     (make-record-constructor-descriptor
       g$7473$6281$mjVUK
       g$7442$6268$mjVUK
       g$7475$6282$mjVUK))
   (g$7472$6284$mjVUK
     g$7472$6379$mjVUK
     (record-predicate g$7473$6281$mjVUK))
   (g$make-warning$6285$mjVUK
     g$make-warning$6380$mjVUK
     (record-constructor g$7474$6283$mjVUK))
   (g$warning?$6286$mjVUK
     g$warning?$6381$mjVUK
     (condition-predicate g$7473$6281$mjVUK))
   (g$7487$6287$mjVUK
     g$7487$6382$mjVUK
     (make-record-type-descriptor
       '&serious
       g$7441$6266$mjVUK
       'g$7490$mjVUK
       '#f
       '#f
       '#()))
   (g$7489$6288$mjVUK g$7489$6383$mjVUK '#f)
   (g$7488$6289$mjVUK
     g$7488$6384$mjVUK
     (make-record-constructor-descriptor
       g$7487$6287$mjVUK
       g$7442$6268$mjVUK
       g$7489$6288$mjVUK))
   (g$7486$6290$mjVUK
     g$7486$6385$mjVUK
     (record-predicate g$7487$6287$mjVUK))
   (g$make-serious-condition$6291$mjVUK
     g$make-serious-condition$6386$mjVUK
     (record-constructor g$7488$6289$mjVUK))
   (g$serious-condition?$6292$mjVUK
     g$serious-condition?$6387$mjVUK
     (condition-predicate g$7487$6287$mjVUK))
   (g$7501$6293$mjVUK
     g$7501$6388$mjVUK
     (make-record-type-descriptor
       '&error
       g$7487$6287$mjVUK
       'g$7504$mjVUK
       '#f
       '#f
       '#()))
   (g$7503$6294$mjVUK g$7503$6389$mjVUK '#f)
   (g$7502$6295$mjVUK
     g$7502$6390$mjVUK
     (make-record-constructor-descriptor
       g$7501$6293$mjVUK
       g$7488$6289$mjVUK
       g$7503$6294$mjVUK))
   (g$7500$6296$mjVUK
     g$7500$6391$mjVUK
     (record-predicate g$7501$6293$mjVUK))
   (g$make-error$6297$mjVUK
     g$make-error$6392$mjVUK
     (record-constructor g$7502$6295$mjVUK))
   (g$error?$6298$mjVUK
     g$error?$6393$mjVUK
     (condition-predicate g$7501$6293$mjVUK))
   (g$7515$6299$mjVUK
     g$7515$6394$mjVUK
     (make-record-type-descriptor
       '&violation
       g$7487$6287$mjVUK
       'g$7518$mjVUK
       '#f
       '#f
       '#()))
   (g$7517$6300$mjVUK g$7517$6395$mjVUK '#f)
   (g$7516$6301$mjVUK
     g$7516$6396$mjVUK
     (make-record-constructor-descriptor
       g$7515$6299$mjVUK
       g$7488$6289$mjVUK
       g$7517$6300$mjVUK))
   (g$7514$6302$mjVUK
     g$7514$6397$mjVUK
     (record-predicate g$7515$6299$mjVUK))
   (g$make-violation$6303$mjVUK
     g$make-violation$6398$mjVUK
     (record-constructor g$7516$6301$mjVUK))
   (g$violation?$6304$mjVUK
     g$violation?$6399$mjVUK
     (condition-predicate g$7515$6299$mjVUK))
   (g$7529$6305$mjVUK
     g$7529$6400$mjVUK
     (make-record-type-descriptor
       '&assertion
       g$7515$6299$mjVUK
       'g$7532$mjVUK
       '#f
       '#f
       '#()))
   (g$7531$6306$mjVUK g$7531$6401$mjVUK '#f)
   (g$7530$6307$mjVUK
     g$7530$6402$mjVUK
     (make-record-constructor-descriptor
       g$7529$6305$mjVUK
       g$7516$6301$mjVUK
       g$7531$6306$mjVUK))
   (g$7528$6308$mjVUK
     g$7528$6403$mjVUK
     (record-predicate g$7529$6305$mjVUK))
   (g$make-assertion-violation$6309$mjVUK
     g$make-assertion-violation$6404$mjVUK
     (record-constructor g$7530$6307$mjVUK))
   (g$assertion-violation?$6310$mjVUK
     g$assertion-violation?$6405$mjVUK
     (condition-predicate g$7529$6305$mjVUK))
   (g$7544$6311$mjVUK
     g$7544$6406$mjVUK
     (make-record-type-descriptor
       '&irritants
       g$7441$6266$mjVUK
       'g$7547$mjVUK
       '#f
       '#f
       '#((immutable irritants))))
   (g$7546$6312$mjVUK g$7546$6407$mjVUK '#f)
   (g$7545$6313$mjVUK
     g$7545$6408$mjVUK
     (make-record-constructor-descriptor
       g$7544$6311$mjVUK
       g$7442$6268$mjVUK
       g$7546$6312$mjVUK))
   (g$7543$6314$mjVUK
     g$7543$6409$mjVUK
     (record-predicate g$7544$6311$mjVUK))
   (g$make-irritants-condition$6315$mjVUK
     g$make-irritants-condition$6410$mjVUK
     (record-constructor g$7545$6313$mjVUK))
   (g$7542$6316$mjVUK
     g$7542$6411$mjVUK
     (record-accessor g$7544$6311$mjVUK '0))
   (g$irritants-condition?$6317$mjVUK
     g$irritants-condition?$6412$mjVUK
     (condition-predicate g$7544$6311$mjVUK))
   (g$condition-irritants$6318$mjVUK
     g$condition-irritants$6413$mjVUK
     (condition-accessor g$7544$6311$mjVUK g$7542$6316$mjVUK))
   (g$7561$6319$mjVUK
     g$7561$6414$mjVUK
     (make-record-type-descriptor
       '&who
       g$7441$6266$mjVUK
       'g$7564$mjVUK
       '#f
       '#f
       '#((immutable who))))
   (g$7563$6320$mjVUK g$7563$6415$mjVUK '#f)
   (g$7562$6321$mjVUK
     g$7562$6416$mjVUK
     (make-record-constructor-descriptor
       g$7561$6319$mjVUK
       g$7442$6268$mjVUK
       g$7563$6320$mjVUK))
   (g$7560$6322$mjVUK
     g$7560$6417$mjVUK
     (record-predicate g$7561$6319$mjVUK))
   (g$make-who-condition$6323$mjVUK
     g$make-who-condition$6418$mjVUK
     (record-constructor g$7562$6321$mjVUK))
   (g$7559$6324$mjVUK
     g$7559$6419$mjVUK
     (record-accessor g$7561$6319$mjVUK '0))
   (g$who-condition?$6325$mjVUK
     g$who-condition?$6420$mjVUK
     (condition-predicate g$7561$6319$mjVUK))
   (g$condition-who$6326$mjVUK
     g$condition-who$6421$mjVUK
     (condition-accessor g$7561$6319$mjVUK g$7559$6324$mjVUK))
   (g$7577$6327$mjVUK
     g$7577$6422$mjVUK
     (make-record-type-descriptor
       '&non-continuable
       g$7515$6299$mjVUK
       'g$7580$mjVUK
       '#f
       '#f
       '#()))
   (g$7579$6328$mjVUK g$7579$6423$mjVUK '#f)
   (g$7578$6329$mjVUK
     g$7578$6424$mjVUK
     (make-record-constructor-descriptor
       g$7577$6327$mjVUK
       g$7516$6301$mjVUK
       g$7579$6328$mjVUK))
   (g$7576$6330$mjVUK
     g$7576$6425$mjVUK
     (record-predicate g$7577$6327$mjVUK))
   (g$make-non-continuable-violation$6331$mjVUK
     g$make-non-continuable-violation$6426$mjVUK
     (record-constructor g$7578$6329$mjVUK))
   (g$non-continuable-violation?$6332$mjVUK
     g$non-continuable-violation?$6427$mjVUK
     (condition-predicate g$7577$6327$mjVUK))
   (g$7591$6333$mjVUK
     g$7591$6428$mjVUK
     (make-record-type-descriptor
       '&implementation-restriction
       g$7515$6299$mjVUK
       'g$7594$mjVUK
       '#f
       '#f
       '#()))
   (g$7593$6334$mjVUK g$7593$6429$mjVUK '#f)
   (g$7592$6335$mjVUK
     g$7592$6430$mjVUK
     (make-record-constructor-descriptor
       g$7591$6333$mjVUK
       g$7516$6301$mjVUK
       g$7593$6334$mjVUK))
   (g$7590$6336$mjVUK
     g$7590$6431$mjVUK
     (record-predicate g$7591$6333$mjVUK))
   (g$make-implementation-restriction-violation$6337$mjVUK
     g$make-implementation-restriction-violation$6432$mjVUK
     (record-constructor g$7592$6335$mjVUK))
   (g$implementation-restriction-violation?$6338$mjVUK
     g$implementation-restriction-violation?$6433$mjVUK
     (condition-predicate g$7591$6333$mjVUK))
   (g$7605$6339$mjVUK
     g$7605$6434$mjVUK
     (make-record-type-descriptor
       '&lexical
       g$7515$6299$mjVUK
       'g$7608$mjVUK
       '#f
       '#f
       '#()))
   (g$7607$6340$mjVUK g$7607$6435$mjVUK '#f)
   (g$7606$6341$mjVUK
     g$7606$6436$mjVUK
     (make-record-constructor-descriptor
       g$7605$6339$mjVUK
       g$7516$6301$mjVUK
       g$7607$6340$mjVUK))
   (g$7604$6342$mjVUK
     g$7604$6437$mjVUK
     (record-predicate g$7605$6339$mjVUK))
   (g$make-lexical-violation$6343$mjVUK
     g$make-lexical-violation$6438$mjVUK
     (record-constructor g$7606$6341$mjVUK))
   (g$lexical-violation?$6344$mjVUK
     g$lexical-violation?$6439$mjVUK
     (condition-predicate g$7605$6339$mjVUK))
   (g$7621$6345$mjVUK
     g$7621$6440$mjVUK
     (make-record-type-descriptor
       '&syntax
       g$7515$6299$mjVUK
       'g$7624$mjVUK
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7623$6346$mjVUK g$7623$6441$mjVUK '#f)
   (g$7622$6347$mjVUK
     g$7622$6442$mjVUK
     (make-record-constructor-descriptor
       g$7621$6345$mjVUK
       g$7516$6301$mjVUK
       g$7623$6346$mjVUK))
   (g$7620$6348$mjVUK
     g$7620$6443$mjVUK
     (record-predicate g$7621$6345$mjVUK))
   (g$make-syntax-violation$6349$mjVUK
     g$make-syntax-violation$6444$mjVUK
     (record-constructor g$7622$6347$mjVUK))
   (g$7618$6350$mjVUK
     g$7618$6445$mjVUK
     (record-accessor g$7621$6345$mjVUK '0))
   (g$7619$6351$mjVUK
     g$7619$6446$mjVUK
     (record-accessor g$7621$6345$mjVUK '1))
   (g$syntax-violation?$6352$mjVUK
     g$syntax-violation?$6447$mjVUK
     (condition-predicate g$7621$6345$mjVUK))
   (g$syntax-violation-form$6353$mjVUK
     g$syntax-violation-form$6448$mjVUK
     (condition-accessor g$7621$6345$mjVUK g$7618$6350$mjVUK))
   (g$syntax-violation-subform$6354$mjVUK
     g$syntax-violation-subform$6449$mjVUK
     (condition-accessor g$7621$6345$mjVUK g$7619$6351$mjVUK))
   (g$7639$6355$mjVUK
     g$7639$6450$mjVUK
     (make-record-type-descriptor
       '&undefined
       g$7515$6299$mjVUK
       'g$7642$mjVUK
       '#f
       '#f
       '#()))
   (g$7641$6356$mjVUK g$7641$6451$mjVUK '#f)
   (g$7640$6357$mjVUK
     g$7640$6452$mjVUK
     (make-record-constructor-descriptor
       g$7639$6355$mjVUK
       g$7516$6301$mjVUK
       g$7641$6356$mjVUK))
   (g$7638$6358$mjVUK
     g$7638$6453$mjVUK
     (record-predicate g$7639$6355$mjVUK))
   (g$make-undefined-violation$6359$mjVUK
     g$make-undefined-violation$6454$mjVUK
     (record-constructor g$7640$6357$mjVUK))
   (g$undefined-violation?$6360$mjVUK
     g$undefined-violation?$6455$mjVUK
     (condition-predicate g$7639$6355$mjVUK)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6456$mjVUK
     g$append!$6462$mjVUK
     (case-lambda
       ((g$a$6457$mjVUK . g$b$6458$mjVUK)
        (if (null? g$a$6457$mjVUK)
          g$b$6458$mjVUK
          (if (null? g$b$6458$mjVUK)
            g$a$6457$mjVUK
            (begin
              ((letrec ((g$f$6459$mjVUK
                          (case-lambda
                            ((g$a$6460$mjVUK)
                             ((case-lambda
                                ((g$n$6461$mjVUK)
                                 (if (null? g$n$6461$mjVUK)
                                   (set-cdr! g$a$6460$mjVUK g$b$6458$mjVUK)
                                   (g$f$6459$mjVUK g$n$6461$mjVUK))))
                              (cdr g$a$6460$mjVUK))))))
                 g$f$6459$mjVUK)
               g$a$6457$mjVUK)
              g$a$6457$mjVUK)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$6463$mjVUK g$inexact->exact$6483$mjVUK exact)
   (g$exact->inexact$6464$mjVUK g$exact->inexact$6484$mjVUK inexact)
   (g$sign$6465$mjVUK
     g$sign$6485$mjVUK
     (case-lambda
       ((g$n$6471$mjVUK)
        (if (> g$n$6471$mjVUK '0) '1 (if (< g$n$6471$mjVUK '0) '-1 '0)))))
   (g$quotient$6466$mjVUK
     g$quotient$6486$mjVUK
     (case-lambda
       ((g$n1$6472$mjVUK g$n2$6473$mjVUK)
        (begin
          (if (not (integer-valued? g$n1$6472$mjVUK))
            (assertion-violation 'quotient '"not an integer" g$n1$6472$mjVUK)
            (void))
          (if (not (integer-valued? g$n2$6473$mjVUK))
            (assertion-violation 'quotient '"not an integer" g$n2$6473$mjVUK)
            (void))
          (* (g$sign$6465$mjVUK g$n1$6472$mjVUK)
             (g$sign$6465$mjVUK g$n2$6473$mjVUK)
             (div (abs g$n1$6472$mjVUK) (abs g$n2$6473$mjVUK)))))))
   (g$remainder$6467$mjVUK
     g$remainder$6487$mjVUK
     (case-lambda
       ((g$n1$6474$mjVUK g$n2$6475$mjVUK)
        (begin
          (if (not (integer-valued? g$n1$6474$mjVUK))
            (assertion-violation 'remainder '"not an integer" g$n1$6474$mjVUK)
            (void))
          (if (not (integer-valued? g$n2$6475$mjVUK))
            (assertion-violation 'remainder '"not an integer" g$n2$6475$mjVUK)
            (void))
          (* (g$sign$6465$mjVUK g$n1$6474$mjVUK)
             (mod (abs g$n1$6474$mjVUK) (abs g$n2$6475$mjVUK)))))))
   (g$modulo$6468$mjVUK
     g$modulo$6488$mjVUK
     (case-lambda
       ((g$n1$6476$mjVUK g$n2$6477$mjVUK)
        (begin
          (if (not (integer-valued? g$n1$6476$mjVUK))
            (assertion-violation 'modulo '"not an integer" g$n1$6476$mjVUK)
            (void))
          (if (not (integer-valued? g$n2$6477$mjVUK))
            (assertion-violation 'modulo '"not an integer" g$n2$6477$mjVUK)
            (void))
          (* (g$sign$6465$mjVUK g$n2$6477$mjVUK)
             (mod (* (g$sign$6465$mjVUK g$n2$6477$mjVUK) g$n1$6476$mjVUK)
                  (abs g$n2$6477$mjVUK)))))))
   (g$make-promise$6469$mjVUK
     g$make-promise$6489$mjVUK
     (case-lambda
       ((g$proc$6478$mjVUK)
        ((case-lambda
           ((g$result-ready?$6479$mjVUK g$result$6480$mjVUK)
            (case-lambda
              (()
               (if g$result-ready?$6479$mjVUK
                 g$result$6480$mjVUK
                 ((case-lambda
                    ((g$x$6481$mjVUK)
                     (if g$result-ready?$6479$mjVUK
                       g$result$6480$mjVUK
                       (begin
                         (set! g$result-ready?$6479$mjVUK '#t)
                         (set! g$result$6480$mjVUK g$x$6481$mjVUK)
                         g$result$6480$mjVUK))))
                  (g$proc$6478$mjVUK)))))))
         '#f
         '#f))))
   (g$force$6470$mjVUK
     g$force$6490$mjVUK
     (case-lambda ((g$object$6482$mjVUK) (g$object$6482$mjVUK)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6491$mjVUK
     g$split$6516$mjVUK
     (case-lambda
       ((g$ls$6495$mjVUK)
        ((letrec ((g$loop$6496$mjVUK
                    (case-lambda
                      ((g$rest$6497$mjVUK g$left$6498$mjVUK g$right$6499$mjVUK)
                       (if (null? g$rest$6497$mjVUK)
                         (cons g$left$6498$mjVUK g$right$6499$mjVUK)
                         (if (null? (cdr g$rest$6497$mjVUK))
                           (cons
                             (cons (car g$rest$6497$mjVUK) g$left$6498$mjVUK)
                             g$right$6499$mjVUK)
                           (g$loop$6496$mjVUK
                             (g$cddr$5830$mjVUK g$rest$6497$mjVUK)
                             (cons (car g$rest$6497$mjVUK) g$left$6498$mjVUK)
                             (cons
                               (g$cadr$5828$mjVUK g$rest$6497$mjVUK)
                               g$right$6499$mjVUK))))))))
           g$loop$6496$mjVUK)
         g$ls$6495$mjVUK
         '()
         '()))))
   (g$reverse-it$6492$mjVUK
     g$reverse-it$6517$mjVUK
     (case-lambda
       ((g$head$6500$mjVUK g$tail$6501$mjVUK)
        (if (null? g$head$6500$mjVUK)
          g$tail$6501$mjVUK
          (g$reverse-it$6492$mjVUK
            (cdr g$head$6500$mjVUK)
            (cons (car g$head$6500$mjVUK) g$tail$6501$mjVUK))))))
   (g$merge$6493$mjVUK
     g$merge$6518$mjVUK
     (case-lambda
       ((g$list-1$6502$mjVUK g$list-2$6503$mjVUK g$precedes?$6504$mjVUK)
        ((letrec ((g$loop$6505$mjVUK
                    (case-lambda
                      ((g$source-1$6506$mjVUK
                         g$source-2$6507$mjVUK
                         g$so-far$6508$mjVUK)
                       (if (null? g$source-1$6506$mjVUK)
                         (g$reverse-it$6492$mjVUK
                           g$so-far$6508$mjVUK
                           g$source-2$6507$mjVUK)
                         (if (null? g$source-2$6507$mjVUK)
                           (g$reverse-it$6492$mjVUK
                             g$so-far$6508$mjVUK
                             g$source-1$6506$mjVUK)
                           ((case-lambda
                              ((g$car-1$6509$mjVUK g$car-2$6510$mjVUK)
                               (if (g$precedes?$6504$mjVUK
                                     g$car-2$6510$mjVUK
                                     g$car-1$6509$mjVUK)
                                 (g$loop$6505$mjVUK
                                   g$source-1$6506$mjVUK
                                   (cdr g$source-2$6507$mjVUK)
                                   (cons
                                     g$car-2$6510$mjVUK
                                     g$so-far$6508$mjVUK))
                                 (g$loop$6505$mjVUK
                                   g$source-2$6507$mjVUK
                                   (cdr g$source-1$6506$mjVUK)
                                   (cons
                                     g$car-1$6509$mjVUK
                                     g$so-far$6508$mjVUK)))))
                            (car g$source-1$6506$mjVUK)
                            (car g$source-2$6507$mjVUK))))))))
           g$loop$6505$mjVUK)
         g$list-1$6502$mjVUK
         g$list-2$6503$mjVUK
         '()))))
   (g$list-sort$6494$mjVUK
     g$list-sort$6519$mjVUK
     (case-lambda
       ((g$precedes?$6511$mjVUK g$ls$6512$mjVUK)
        (if (null? g$ls$6512$mjVUK)
          '()
          ((letrec ((g$helper$6513$mjVUK
                      (case-lambda
                        ((g$piece$6514$mjVUK)
                         (if (null? (cdr g$piece$6514$mjVUK))
                           g$piece$6514$mjVUK
                           ((case-lambda
                              ((g$parts$6515$mjVUK)
                               (g$merge$6493$mjVUK
                                 (g$helper$6513$mjVUK (car g$parts$6515$mjVUK))
                                 (g$helper$6513$mjVUK (cdr g$parts$6515$mjVUK))
                                 g$precedes?$6511$mjVUK)))
                            (g$split$6491$mjVUK g$piece$6514$mjVUK)))))))
             g$helper$6513$mjVUK)
           g$ls$6512$mjVUK))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$6526$mjVUK
     g$string-ci=?$6592$mjVUK
     (case-lambda
       ((g$a$6542$mjVUK g$b$6543$mjVUK . g$rest$6544$mjVUK)
        (begin
          (if (not (string? g$a$6542$mjVUK))
            (assertion-violation 'string-ci=? '"not a string" g$a$6542$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6545$mjVUK)
               (begin
                 (if (not (string? g$x$6545$mjVUK))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$6545$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6546$mjVUK)
                     (begin
                       (set! g$a$6542$mjVUK g$x$6545$mjVUK)
                       g$r$6546$mjVUK)))
                  (= (string-ci-compare g$a$6542$mjVUK g$x$6545$mjVUK) '0)))))
            (cons g$b$6543$mjVUK g$rest$6544$mjVUK))))))
   (g$string-ci<?$6527$mjVUK
     g$string-ci<?$6593$mjVUK
     (case-lambda
       ((g$a$6547$mjVUK g$b$6548$mjVUK . g$rest$6549$mjVUK)
        (begin
          (if (not (string? g$a$6547$mjVUK))
            (assertion-violation 'string-ci<? '"not a string" g$a$6547$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6550$mjVUK)
               (begin
                 (if (not (string? g$x$6550$mjVUK))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$6550$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6551$mjVUK)
                     (begin
                       (set! g$a$6547$mjVUK g$x$6550$mjVUK)
                       g$r$6551$mjVUK)))
                  (< (string-ci-compare g$a$6547$mjVUK g$x$6550$mjVUK) '0)))))
            (cons g$b$6548$mjVUK g$rest$6549$mjVUK))))))
   (g$string-ci>?$6528$mjVUK
     g$string-ci>?$6594$mjVUK
     (case-lambda
       ((g$a$6552$mjVUK g$b$6553$mjVUK . g$rest$6554$mjVUK)
        (begin
          (if (not (string? g$a$6552$mjVUK))
            (assertion-violation 'string-ci>? '"not a string" g$a$6552$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6555$mjVUK)
               (begin
                 (if (not (string? g$x$6555$mjVUK))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$6555$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6556$mjVUK)
                     (begin
                       (set! g$a$6552$mjVUK g$x$6555$mjVUK)
                       g$r$6556$mjVUK)))
                  (> (string-ci-compare g$a$6552$mjVUK g$x$6555$mjVUK) '0)))))
            (cons g$b$6553$mjVUK g$rest$6554$mjVUK))))))
   (g$string-ci<=?$6529$mjVUK
     g$string-ci<=?$6595$mjVUK
     (case-lambda
       ((g$a$6557$mjVUK g$b$6558$mjVUK . g$rest$6559$mjVUK)
        (begin
          (if (not (string? g$a$6557$mjVUK))
            (assertion-violation 'string-ci<=? '"not a string" g$a$6557$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6560$mjVUK)
               (begin
                 (if (not (string? g$x$6560$mjVUK))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$6560$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6561$mjVUK)
                     (begin
                       (set! g$a$6557$mjVUK g$x$6560$mjVUK)
                       g$r$6561$mjVUK)))
                  (<= (string-ci-compare g$a$6557$mjVUK g$x$6560$mjVUK) '0)))))
            (cons g$b$6558$mjVUK g$rest$6559$mjVUK))))))
   (g$string-ci>=?$6530$mjVUK
     g$string-ci>=?$6596$mjVUK
     (case-lambda
       ((g$a$6562$mjVUK g$b$6563$mjVUK . g$rest$6564$mjVUK)
        (begin
          (if (not (string? g$a$6562$mjVUK))
            (assertion-violation 'string-ci>=? '"not a string" g$a$6562$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6565$mjVUK)
               (begin
                 (if (not (string? g$x$6565$mjVUK))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$6565$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6566$mjVUK)
                     (begin
                       (set! g$a$6562$mjVUK g$x$6565$mjVUK)
                       g$r$6566$mjVUK)))
                  (>= (string-ci-compare g$a$6562$mjVUK g$x$6565$mjVUK) '0)))))
            (cons g$b$6563$mjVUK g$rest$6564$mjVUK))))))
   (g$char-ci=?$6537$mjVUK
     g$char-ci=?$6597$mjVUK
     (case-lambda
       ((g$a$6567$mjVUK g$b$6568$mjVUK . g$rest$6569$mjVUK)
        (begin
          (if (not (char? g$a$6567$mjVUK))
            (assertion-violation 'char-ci=? '"not a char" g$a$6567$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6570$mjVUK)
               (begin
                 (if (not (char? g$x$6570$mjVUK))
                   (assertion-violation 'char-ci=? '"not a char" g$x$6570$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6571$mjVUK)
                     (begin
                       (set! g$a$6567$mjVUK g$x$6570$mjVUK)
                       g$r$6571$mjVUK)))
                  (= (char->integer (char-upcase g$a$6567$mjVUK))
                     (char->integer (char-upcase g$x$6570$mjVUK)))))))
            (cons g$b$6568$mjVUK g$rest$6569$mjVUK))))))
   (g$char-ci<?$6538$mjVUK
     g$char-ci<?$6598$mjVUK
     (case-lambda
       ((g$a$6572$mjVUK g$b$6573$mjVUK . g$rest$6574$mjVUK)
        (begin
          (if (not (char? g$a$6572$mjVUK))
            (assertion-violation 'char-ci<? '"not a char" g$a$6572$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6575$mjVUK)
               (begin
                 (if (not (char? g$x$6575$mjVUK))
                   (assertion-violation 'char-ci<? '"not a char" g$x$6575$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6576$mjVUK)
                     (begin
                       (set! g$a$6572$mjVUK g$x$6575$mjVUK)
                       g$r$6576$mjVUK)))
                  (< (char->integer (char-upcase g$a$6572$mjVUK))
                     (char->integer (char-upcase g$x$6575$mjVUK)))))))
            (cons g$b$6573$mjVUK g$rest$6574$mjVUK))))))
   (g$char-ci>?$6539$mjVUK
     g$char-ci>?$6599$mjVUK
     (case-lambda
       ((g$a$6577$mjVUK g$b$6578$mjVUK . g$rest$6579$mjVUK)
        (begin
          (if (not (char? g$a$6577$mjVUK))
            (assertion-violation 'char-ci>? '"not a char" g$a$6577$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6580$mjVUK)
               (begin
                 (if (not (char? g$x$6580$mjVUK))
                   (assertion-violation 'char-ci>? '"not a char" g$x$6580$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6581$mjVUK)
                     (begin
                       (set! g$a$6577$mjVUK g$x$6580$mjVUK)
                       g$r$6581$mjVUK)))
                  (> (char->integer (char-upcase g$a$6577$mjVUK))
                     (char->integer (char-upcase g$x$6580$mjVUK)))))))
            (cons g$b$6578$mjVUK g$rest$6579$mjVUK))))))
   (g$char-ci<=?$6540$mjVUK
     g$char-ci<=?$6600$mjVUK
     (case-lambda
       ((g$a$6582$mjVUK g$b$6583$mjVUK . g$rest$6584$mjVUK)
        (begin
          (if (not (char? g$a$6582$mjVUK))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6582$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6585$mjVUK)
               (begin
                 (if (not (char? g$x$6585$mjVUK))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$6585$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6586$mjVUK)
                     (begin
                       (set! g$a$6582$mjVUK g$x$6585$mjVUK)
                       g$r$6586$mjVUK)))
                  (<= (char->integer (char-upcase g$a$6582$mjVUK))
                      (char->integer (char-upcase g$x$6585$mjVUK)))))))
            (cons g$b$6583$mjVUK g$rest$6584$mjVUK))))))
   (g$char-ci>=?$6541$mjVUK
     g$char-ci>=?$6601$mjVUK
     (case-lambda
       ((g$a$6587$mjVUK g$b$6588$mjVUK . g$rest$6589$mjVUK)
        (begin
          (if (not (char? g$a$6587$mjVUK))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6587$mjVUK)
            (void))
          (g$for-all$5600$mjVUK
            (case-lambda
              ((g$x$6590$mjVUK)
               (begin
                 (if (not (char? g$x$6590$mjVUK))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$6590$mjVUK)
                   (void))
                 ((case-lambda
                    ((g$r$6591$mjVUK)
                     (begin
                       (set! g$a$6587$mjVUK g$x$6590$mjVUK)
                       g$r$6591$mjVUK)))
                  (>= (char->integer (char-upcase g$a$6587$mjVUK))
                      (char->integer (char-upcase g$x$6590$mjVUK)))))))
            (cons g$b$6588$mjVUK g$rest$6589$mjVUK)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6602$mjVUK
     g$bitwise-if$6633$mjVUK
     (case-lambda
       ((g$ei1$6609$mjVUK g$ei2$6610$mjVUK g$ei3$6611$mjVUK)
        (bitwise-ior
          (bitwise-and g$ei1$6609$mjVUK g$ei2$6610$mjVUK)
          (bitwise-and (bitwise-not g$ei1$6609$mjVUK) g$ei3$6611$mjVUK)))))
   (g$bitwise-copy-bit$6603$mjVUK
     g$bitwise-copy-bit$6634$mjVUK
     (case-lambda
       ((g$ei1$6612$mjVUK g$ei2$6613$mjVUK g$ei3$6614$mjVUK)
        (g$bitwise-if$6602$mjVUK
          (g$bitwise-arithmetic-shift-left$6606$mjVUK '1 g$ei2$6613$mjVUK)
          (g$bitwise-arithmetic-shift-left$6606$mjVUK
            g$ei3$6614$mjVUK
            g$ei2$6613$mjVUK)
          g$ei1$6612$mjVUK))))
   (g$bitwise-bit-field$6604$mjVUK
     g$bitwise-bit-field$6635$mjVUK
     (case-lambda
       ((g$ei1$6615$mjVUK g$ei2$6616$mjVUK g$ei3$6617$mjVUK)
        (g$bitwise-arithmetic-shift-right$6607$mjVUK
          (bitwise-and
            g$ei1$6615$mjVUK
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6606$mjVUK
                '-1
                g$ei3$6617$mjVUK)))
          g$ei2$6616$mjVUK))))
   (g$bitwise-copy-bit-field$6605$mjVUK
     g$bitwise-copy-bit-field$6636$mjVUK
     (case-lambda
       ((g$to$6618$mjVUK g$start$6619$mjVUK g$end$6620$mjVUK g$from$6621$mjVUK)
        (g$bitwise-if$6602$mjVUK
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$6606$mjVUK '-1 g$start$6619$mjVUK)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6606$mjVUK
                '-1
                g$end$6620$mjVUK)))
          (g$bitwise-arithmetic-shift-left$6606$mjVUK
            g$from$6621$mjVUK
            g$start$6619$mjVUK)
          g$to$6618$mjVUK))))
   (g$bitwise-arithmetic-shift-left$6606$mjVUK
     g$bitwise-arithmetic-shift-left$6637$mjVUK
     (case-lambda
       ((g$ei1$6622$mjVUK g$ei2$6623$mjVUK)
        (bitwise-arithmetic-shift g$ei1$6622$mjVUK g$ei2$6623$mjVUK))))
   (g$bitwise-arithmetic-shift-right$6607$mjVUK
     g$bitwise-arithmetic-shift-right$6638$mjVUK
     (case-lambda
       ((g$ei1$6624$mjVUK g$ei2$6625$mjVUK)
        (bitwise-arithmetic-shift g$ei1$6624$mjVUK (- g$ei2$6625$mjVUK)))))
   (g$bitwise-rotate-bit-field$6608$mjVUK
     g$bitwise-rotate-bit-field$6639$mjVUK
     (case-lambda
       ((g$n$6626$mjVUK g$start$6627$mjVUK g$end$6628$mjVUK g$count$6629$mjVUK)
        ((case-lambda
           ((g$width$6630$mjVUK)
            (if (g$positive?$5855$mjVUK g$width$6630$mjVUK)
              ((case-lambda
                 ((g$count$6631$mjVUK g$field$6632$mjVUK)
                  (g$bitwise-copy-bit-field$6605$mjVUK
                    g$n$6626$mjVUK
                    g$start$6627$mjVUK
                    g$end$6628$mjVUK
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$6606$mjVUK
                        g$field$6632$mjVUK
                        g$count$6631$mjVUK)
                      (g$bitwise-arithmetic-shift-right$6607$mjVUK
                        g$field$6632$mjVUK
                        (- g$width$6630$mjVUK g$count$6631$mjVUK))))))
               (mod g$count$6629$mjVUK g$width$6630$mjVUK)
               (g$bitwise-bit-field$6604$mjVUK
                 g$n$6626$mjVUK
                 g$start$6627$mjVUK
                 g$end$6628$mjVUK))
              g$n$6626$mjVUK)))
         (- g$end$6628$mjVUK g$start$6627$mjVUK))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fx*/carry$6640$mjVUK
     g$fx*/carry$6689$mjVUK
     (case-lambda
       ((g$fx1$6650$mjVUK g$fx2$6651$mjVUK g$fx3$6652$mjVUK)
        ((case-lambda
           ((g$s$6653$mjVUK g$e$6654$mjVUK)
            (values
              (mod0 g$s$6653$mjVUK g$e$6654$mjVUK)
              (div0 g$s$6653$mjVUK g$e$6654$mjVUK))))
         (+ (* g$fx1$6650$mjVUK g$fx2$6651$mjVUK) g$fx3$6652$mjVUK)
         (expt '2 (fixnum-width))))))
   (g$fx-/carry$6641$mjVUK
     g$fx-/carry$6690$mjVUK
     (case-lambda
       ((g$fx1$6655$mjVUK g$fx2$6656$mjVUK g$fx3$6657$mjVUK)
        ((case-lambda
           ((g$s$6658$mjVUK g$e$6659$mjVUK)
            (values
              (mod0 g$s$6658$mjVUK g$e$6659$mjVUK)
              (div0 g$s$6658$mjVUK g$e$6659$mjVUK))))
         (- g$fx1$6655$mjVUK g$fx2$6656$mjVUK g$fx3$6657$mjVUK)
         (expt '2 (fixnum-width))))))
   (g$fx+/carry$6642$mjVUK
     g$fx+/carry$6691$mjVUK
     (case-lambda
       ((g$fx1$6660$mjVUK g$fx2$6661$mjVUK g$fx3$6662$mjVUK)
        ((case-lambda
           ((g$s$6663$mjVUK g$e$6664$mjVUK)
            (values
              (mod0 g$s$6663$mjVUK g$e$6664$mjVUK)
              (div0 g$s$6663$mjVUK g$e$6664$mjVUK))))
         (+ g$fx1$6660$mjVUK g$fx2$6661$mjVUK g$fx3$6662$mjVUK)
         (expt '2 (fixnum-width))))))
   (g$fxif$6643$mjVUK
     g$fxif$6692$mjVUK
     (case-lambda
       ((g$fx1$6665$mjVUK g$fx2$6666$mjVUK g$fx3$6667$mjVUK)
        (fxior
          (fxand g$fx1$6665$mjVUK g$fx2$6666$mjVUK)
          (fxand (fxnot g$fx1$6665$mjVUK) g$fx3$6667$mjVUK)))))
   (g$fxcopy-bit$6644$mjVUK
     g$fxcopy-bit$6693$mjVUK
     (case-lambda
       ((g$fx1$6668$mjVUK g$fx2$6669$mjVUK g$fx3$6670$mjVUK)
        (g$fxif$6643$mjVUK
          (g$fxarithmetic-shift-left$6647$mjVUK '1 g$fx2$6669$mjVUK)
          (g$fxarithmetic-shift-left$6647$mjVUK
            g$fx3$6670$mjVUK
            g$fx2$6669$mjVUK)
          g$fx1$6668$mjVUK))))
   (g$fxbit-field$6645$mjVUK
     g$fxbit-field$6694$mjVUK
     (case-lambda
       ((g$fx1$6671$mjVUK g$fx2$6672$mjVUK g$fx3$6673$mjVUK)
        (g$fxarithmetic-shift-right$6648$mjVUK
          (fxand
            g$fx1$6671$mjVUK
            (fxnot (g$fxarithmetic-shift-left$6647$mjVUK '-1 g$fx3$6673$mjVUK)))
          g$fx2$6672$mjVUK))))
   (g$fxcopy-bit-field$6646$mjVUK
     g$fxcopy-bit-field$6695$mjVUK
     (case-lambda
       ((g$to$6674$mjVUK g$start$6675$mjVUK g$end$6676$mjVUK g$from$6677$mjVUK)
        (g$fxif$6643$mjVUK
          (fxand
            (g$fxarithmetic-shift-left$6647$mjVUK '-1 g$start$6675$mjVUK)
            (fxnot (g$fxarithmetic-shift-left$6647$mjVUK '-1 g$end$6676$mjVUK)))
          (g$fxarithmetic-shift-left$6647$mjVUK
            g$from$6677$mjVUK
            g$start$6675$mjVUK)
          g$to$6674$mjVUK))))
   (g$fxarithmetic-shift-left$6647$mjVUK
     g$fxarithmetic-shift-left$6696$mjVUK
     (case-lambda
       ((g$fx1$6678$mjVUK g$fx2$6679$mjVUK)
        (fxarithmetic-shift g$fx1$6678$mjVUK g$fx2$6679$mjVUK))))
   (g$fxarithmetic-shift-right$6648$mjVUK
     g$fxarithmetic-shift-right$6697$mjVUK
     (case-lambda
       ((g$fx1$6680$mjVUK g$fx2$6681$mjVUK)
        (fxarithmetic-shift g$fx1$6680$mjVUK (fx- g$fx2$6681$mjVUK)))))
   (g$fxrotate-bit-field$6649$mjVUK
     g$fxrotate-bit-field$6698$mjVUK
     (case-lambda
       ((g$n$6682$mjVUK g$start$6683$mjVUK g$end$6684$mjVUK g$count$6685$mjVUK)
        ((case-lambda
           ((g$width$6686$mjVUK)
            (if (fxpositive? g$width$6686$mjVUK)
              ((case-lambda
                 ((g$count$6687$mjVUK g$field$6688$mjVUK)
                  (g$fxcopy-bit-field$6646$mjVUK
                    g$n$6682$mjVUK
                    g$start$6683$mjVUK
                    g$end$6684$mjVUK
                    (fxior
                      (g$fxarithmetic-shift-left$6647$mjVUK
                        g$field$6688$mjVUK
                        g$count$6687$mjVUK)
                      (g$fxarithmetic-shift-right$6648$mjVUK
                        g$field$6688$mjVUK
                        (fx- g$width$6686$mjVUK g$count$6687$mjVUK))))))
               (fxmod g$count$6685$mjVUK g$width$6686$mjVUK)
               (g$fxbit-field$6645$mjVUK
                 g$n$6682$mjVUK
                 g$start$6683$mjVUK
                 g$end$6684$mjVUK))
              g$n$6682$mjVUK)))
         (fx- g$end$6684$mjVUK g$start$6683$mjVUK))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7924$6699$mjVUK
     g$7924$6711$mjVUK
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7927$mjVUK
       '#f
       '#f
       '#()))
   (g$7926$6700$mjVUK g$7926$6712$mjVUK '#f)
   (g$7925$6701$mjVUK
     g$7925$6713$mjVUK
     (make-record-constructor-descriptor
       g$7924$6699$mjVUK
       &implementation-restriction-rcd
       g$7926$6700$mjVUK))
   (g$7923$6702$mjVUK
     g$7923$6714$mjVUK
     (record-predicate g$7924$6699$mjVUK))
   (g$make-no-infinities-violation$6703$mjVUK
     g$make-no-infinities-violation$6715$mjVUK
     (record-constructor g$7925$6701$mjVUK))
   (g$no-infinities-violation?$6704$mjVUK
     g$no-infinities-violation?$6716$mjVUK
     (condition-predicate g$7924$6699$mjVUK))
   (g$7938$6705$mjVUK
     g$7938$6717$mjVUK
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7941$mjVUK
       '#f
       '#f
       '#()))
   (g$7940$6706$mjVUK g$7940$6718$mjVUK '#f)
   (g$7939$6707$mjVUK
     g$7939$6719$mjVUK
     (make-record-constructor-descriptor
       g$7938$6705$mjVUK
       &implementation-restriction-rcd
       g$7940$6706$mjVUK))
   (g$7937$6708$mjVUK
     g$7937$6720$mjVUK
     (record-predicate g$7938$6705$mjVUK))
   (g$make-no-nans-violation$6709$mjVUK
     g$make-no-nans-violation$6721$mjVUK
     (record-constructor g$7939$6707$mjVUK))
   (g$no-nans-violation?$6710$mjVUK
     g$no-nans-violation?$6722$mjVUK
     (condition-predicate g$7938$6705$mjVUK)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7953$6723$mjVUK
     g$7953$6803$mjVUK
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7956$mjVUK
       '#f
       '#f
       '#()))
   (g$7955$6724$mjVUK g$7955$6804$mjVUK '#f)
   (g$7954$6725$mjVUK
     g$7954$6805$mjVUK
     (make-record-constructor-descriptor
       g$7953$6723$mjVUK
       &error-rcd
       g$7955$6724$mjVUK))
   (g$7952$6726$mjVUK
     g$7952$6806$mjVUK
     (record-predicate g$7953$6723$mjVUK))
   (g$make-i/o-error$6727$mjVUK
     g$make-i/o-error$6807$mjVUK
     (record-constructor g$7954$6725$mjVUK))
   (g$i/o-error?$6728$mjVUK
     g$i/o-error?$6808$mjVUK
     (condition-predicate g$7953$6723$mjVUK))
   (g$7967$6729$mjVUK
     g$7967$6809$mjVUK
     (make-record-type-descriptor
       '&i/o-read
       g$7953$6723$mjVUK
       'g$7970$mjVUK
       '#f
       '#f
       '#()))
   (g$7969$6730$mjVUK g$7969$6810$mjVUK '#f)
   (g$7968$6731$mjVUK
     g$7968$6811$mjVUK
     (make-record-constructor-descriptor
       g$7967$6729$mjVUK
       g$7954$6725$mjVUK
       g$7969$6730$mjVUK))
   (g$7966$6732$mjVUK
     g$7966$6812$mjVUK
     (record-predicate g$7967$6729$mjVUK))
   (g$make-i/o-read-error$6733$mjVUK
     g$make-i/o-read-error$6813$mjVUK
     (record-constructor g$7968$6731$mjVUK))
   (g$i/o-read-error?$6734$mjVUK
     g$i/o-read-error?$6814$mjVUK
     (condition-predicate g$7967$6729$mjVUK))
   (g$7981$6735$mjVUK
     g$7981$6815$mjVUK
     (make-record-type-descriptor
       '&i/o-write
       g$7953$6723$mjVUK
       'g$7984$mjVUK
       '#f
       '#f
       '#()))
   (g$7983$6736$mjVUK g$7983$6816$mjVUK '#f)
   (g$7982$6737$mjVUK
     g$7982$6817$mjVUK
     (make-record-constructor-descriptor
       g$7981$6735$mjVUK
       g$7954$6725$mjVUK
       g$7983$6736$mjVUK))
   (g$7980$6738$mjVUK
     g$7980$6818$mjVUK
     (record-predicate g$7981$6735$mjVUK))
   (g$make-i/o-write-error$6739$mjVUK
     g$make-i/o-write-error$6819$mjVUK
     (record-constructor g$7982$6737$mjVUK))
   (g$i/o-write-error?$6740$mjVUK
     g$i/o-write-error?$6820$mjVUK
     (condition-predicate g$7981$6735$mjVUK))
   (g$7996$6741$mjVUK
     g$7996$6821$mjVUK
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7953$6723$mjVUK
       'g$7999$mjVUK
       '#f
       '#f
       '#((immutable position))))
   (g$7998$6742$mjVUK g$7998$6822$mjVUK '#f)
   (g$7997$6743$mjVUK
     g$7997$6823$mjVUK
     (make-record-constructor-descriptor
       g$7996$6741$mjVUK
       g$7954$6725$mjVUK
       g$7998$6742$mjVUK))
   (g$7995$6744$mjVUK
     g$7995$6824$mjVUK
     (record-predicate g$7996$6741$mjVUK))
   (g$make-i/o-invalid-position-error$6745$mjVUK
     g$make-i/o-invalid-position-error$6825$mjVUK
     (record-constructor g$7997$6743$mjVUK))
   (g$7994$6746$mjVUK
     g$7994$6826$mjVUK
     (record-accessor g$7996$6741$mjVUK '0))
   (g$i/o-invalid-position-error?$6747$mjVUK
     g$i/o-invalid-position-error?$6827$mjVUK
     (condition-predicate g$7996$6741$mjVUK))
   (g$i/o-error-position$6748$mjVUK
     g$i/o-error-position$6828$mjVUK
     (condition-accessor g$7996$6741$mjVUK g$7994$6746$mjVUK))
   (g$8013$6749$mjVUK
     g$8013$6829$mjVUK
     (make-record-type-descriptor
       '&i/o-filename
       g$7953$6723$mjVUK
       'g$8016$mjVUK
       '#f
       '#f
       '#((immutable filename))))
   (g$8015$6750$mjVUK g$8015$6830$mjVUK '#f)
   (g$8014$6751$mjVUK
     g$8014$6831$mjVUK
     (make-record-constructor-descriptor
       g$8013$6749$mjVUK
       g$7954$6725$mjVUK
       g$8015$6750$mjVUK))
   (g$8012$6752$mjVUK
     g$8012$6832$mjVUK
     (record-predicate g$8013$6749$mjVUK))
   (g$make-i/o-filename-error$6753$mjVUK
     g$make-i/o-filename-error$6833$mjVUK
     (record-constructor g$8014$6751$mjVUK))
   (g$8011$6754$mjVUK
     g$8011$6834$mjVUK
     (record-accessor g$8013$6749$mjVUK '0))
   (g$i/o-filename-error?$6755$mjVUK
     g$i/o-filename-error?$6835$mjVUK
     (condition-predicate g$8013$6749$mjVUK))
   (g$i/o-error-filename$6756$mjVUK
     g$i/o-error-filename$6836$mjVUK
     (condition-accessor g$8013$6749$mjVUK g$8011$6754$mjVUK))
   (g$8029$6757$mjVUK
     g$8029$6837$mjVUK
     (make-record-type-descriptor
       '&i/o-file-protection
       g$8013$6749$mjVUK
       'g$8032$mjVUK
       '#f
       '#f
       '#()))
   (g$8031$6758$mjVUK g$8031$6838$mjVUK '#f)
   (g$8030$6759$mjVUK
     g$8030$6839$mjVUK
     (make-record-constructor-descriptor
       g$8029$6757$mjVUK
       g$8014$6751$mjVUK
       g$8031$6758$mjVUK))
   (g$8028$6760$mjVUK
     g$8028$6840$mjVUK
     (record-predicate g$8029$6757$mjVUK))
   (g$make-i/o-file-protection-error$6761$mjVUK
     g$make-i/o-file-protection-error$6841$mjVUK
     (record-constructor g$8030$6759$mjVUK))
   (g$i/o-file-protection-error?$6762$mjVUK
     g$i/o-file-protection-error?$6842$mjVUK
     (condition-predicate g$8029$6757$mjVUK))
   (g$8043$6763$mjVUK
     g$8043$6843$mjVUK
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$8029$6757$mjVUK
       'g$8046$mjVUK
       '#f
       '#f
       '#()))
   (g$8045$6764$mjVUK g$8045$6844$mjVUK '#f)
   (g$8044$6765$mjVUK
     g$8044$6845$mjVUK
     (make-record-constructor-descriptor
       g$8043$6763$mjVUK
       g$8030$6759$mjVUK
       g$8045$6764$mjVUK))
   (g$8042$6766$mjVUK
     g$8042$6846$mjVUK
     (record-predicate g$8043$6763$mjVUK))
   (g$make-i/o-file-is-read-only-error$6767$mjVUK
     g$make-i/o-file-is-read-only-error$6847$mjVUK
     (record-constructor g$8044$6765$mjVUK))
   (g$i/o-file-is-read-only-error?$6768$mjVUK
     g$i/o-file-is-read-only-error?$6848$mjVUK
     (condition-predicate g$8043$6763$mjVUK))
   (g$8057$6769$mjVUK
     g$8057$6849$mjVUK
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$8013$6749$mjVUK
       'g$8060$mjVUK
       '#f
       '#f
       '#()))
   (g$8059$6770$mjVUK g$8059$6850$mjVUK '#f)
   (g$8058$6771$mjVUK
     g$8058$6851$mjVUK
     (make-record-constructor-descriptor
       g$8057$6769$mjVUK
       g$8014$6751$mjVUK
       g$8059$6770$mjVUK))
   (g$8056$6772$mjVUK
     g$8056$6852$mjVUK
     (record-predicate g$8057$6769$mjVUK))
   (g$make-i/o-file-already-exists-error$6773$mjVUK
     g$make-i/o-file-already-exists-error$6853$mjVUK
     (record-constructor g$8058$6771$mjVUK))
   (g$i/o-file-already-exists-error?$6774$mjVUK
     g$i/o-file-already-exists-error?$6854$mjVUK
     (condition-predicate g$8057$6769$mjVUK))
   (g$8071$6775$mjVUK
     g$8071$6855$mjVUK
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$8013$6749$mjVUK
       'g$8074$mjVUK
       '#f
       '#f
       '#()))
   (g$8073$6776$mjVUK g$8073$6856$mjVUK '#f)
   (g$8072$6777$mjVUK
     g$8072$6857$mjVUK
     (make-record-constructor-descriptor
       g$8071$6775$mjVUK
       g$8014$6751$mjVUK
       g$8073$6776$mjVUK))
   (g$8070$6778$mjVUK
     g$8070$6858$mjVUK
     (record-predicate g$8071$6775$mjVUK))
   (g$make-i/o-file-does-not-exist-error$6779$mjVUK
     g$make-i/o-file-does-not-exist-error$6859$mjVUK
     (record-constructor g$8072$6777$mjVUK))
   (g$i/o-file-does-not-exist-error?$6780$mjVUK
     g$i/o-file-does-not-exist-error?$6860$mjVUK
     (condition-predicate g$8071$6775$mjVUK))
   (g$8086$6781$mjVUK
     g$8086$6861$mjVUK
     (make-record-type-descriptor
       '&i/o-port
       g$7953$6723$mjVUK
       'g$8089$mjVUK
       '#f
       '#f
       '#((immutable port))))
   (g$8088$6782$mjVUK g$8088$6862$mjVUK '#f)
   (g$8087$6783$mjVUK
     g$8087$6863$mjVUK
     (make-record-constructor-descriptor
       g$8086$6781$mjVUK
       g$7954$6725$mjVUK
       g$8088$6782$mjVUK))
   (g$8085$6784$mjVUK
     g$8085$6864$mjVUK
     (record-predicate g$8086$6781$mjVUK))
   (g$make-i/o-port-error$6785$mjVUK
     g$make-i/o-port-error$6865$mjVUK
     (record-constructor g$8087$6783$mjVUK))
   (g$8084$6786$mjVUK
     g$8084$6866$mjVUK
     (record-accessor g$8086$6781$mjVUK '0))
   (g$i/o-port-error?$6787$mjVUK
     g$i/o-port-error?$6867$mjVUK
     (condition-predicate g$8086$6781$mjVUK))
   (g$i/o-error-port$6788$mjVUK
     g$i/o-error-port$6868$mjVUK
     (condition-accessor g$8086$6781$mjVUK g$8084$6786$mjVUK))
   (g$8102$6789$mjVUK
     g$8102$6869$mjVUK
     (make-record-type-descriptor
       '&i/o-decoding
       g$8086$6781$mjVUK
       'g$8105$mjVUK
       '#f
       '#f
       '#()))
   (g$8104$6790$mjVUK g$8104$6870$mjVUK '#f)
   (g$8103$6791$mjVUK
     g$8103$6871$mjVUK
     (make-record-constructor-descriptor
       g$8102$6789$mjVUK
       g$8087$6783$mjVUK
       g$8104$6790$mjVUK))
   (g$8101$6792$mjVUK
     g$8101$6872$mjVUK
     (record-predicate g$8102$6789$mjVUK))
   (g$make-i/o-decoding-error$6793$mjVUK
     g$make-i/o-decoding-error$6873$mjVUK
     (record-constructor g$8103$6791$mjVUK))
   (g$i/o-decoding-error?$6794$mjVUK
     g$i/o-decoding-error?$6874$mjVUK
     (condition-predicate g$8102$6789$mjVUK))
   (g$8117$6795$mjVUK
     g$8117$6875$mjVUK
     (make-record-type-descriptor
       '&i/o-encoding
       g$8086$6781$mjVUK
       'g$8120$mjVUK
       '#f
       '#f
       '#((immutable char))))
   (g$8119$6796$mjVUK g$8119$6876$mjVUK '#f)
   (g$8118$6797$mjVUK
     g$8118$6877$mjVUK
     (make-record-constructor-descriptor
       g$8117$6795$mjVUK
       g$8087$6783$mjVUK
       g$8119$6796$mjVUK))
   (g$8116$6798$mjVUK
     g$8116$6878$mjVUK
     (record-predicate g$8117$6795$mjVUK))
   (g$make-i/o-encoding-error$6799$mjVUK
     g$make-i/o-encoding-error$6879$mjVUK
     (record-constructor g$8118$6797$mjVUK))
   (g$8115$6800$mjVUK
     g$8115$6880$mjVUK
     (record-accessor g$8117$6795$mjVUK '0))
   (g$i/o-encoding-error?$6801$mjVUK
     g$i/o-encoding-error?$6881$mjVUK
     (condition-predicate g$8117$6795$mjVUK))
   (g$i/o-encoding-error-char$6802$mjVUK
     g$i/o-encoding-error-char$6882$mjVUK
     (condition-accessor g$8117$6795$mjVUK g$8115$6800$mjVUK)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$6884$mjVUK
     g$using$6900$mjVUK
     (clr-using-internal 'ironscheme.runtime))
   (g$get-output-string$6885$mjVUK
     g$get-output-string$6901$mjVUK
     (case-lambda
       ((g$port$6891$mjVUK)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6891$mjVUK))))
   (g$open-output-string$6886$mjVUK
     g$open-output-string$6902$mjVUK
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6887$mjVUK
     g$open-string-output-port$6903$mjVUK
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6892$mjVUK)
            (values
              g$p$6892$mjVUK
              (case-lambda
                (() (g$get-output-string$6885$mjVUK g$p$6892$mjVUK))))))
         (g$open-output-string$6886$mjVUK)))))
   (g$port?$6888$mjVUK
     g$port?$6904$mjVUK
     (case-lambda
       ((g$obj$6893$mjVUK)
        ((case-lambda
           ((g$t$6894$mjVUK)
            (if g$t$6894$mjVUK
              g$t$6894$mjVUK
              (begin '#f (binary-port? g$obj$6893$mjVUK)))))
         (textual-port? g$obj$6893$mjVUK)))))
   (g$call-with-string-output-port$6889$mjVUK
     g$call-with-string-output-port$6905$mjVUK
     (case-lambda
       ((g$proc$6895$mjVUK)
        ((case-lambda
           ((g$p$6896$mjVUK)
            (begin
              (g$call-with-port$6890$mjVUK g$p$6896$mjVUK g$proc$6895$mjVUK)
              (g$get-output-string$6885$mjVUK g$p$6896$mjVUK))))
         (g$open-output-string$6886$mjVUK)))))
   (g$call-with-port$6890$mjVUK
     g$call-with-port$6906$mjVUK
     (case-lambda
       ((g$port$6897$mjVUK g$proc$6898$mjVUK)
        ((case-lambda
           ((g$r$6899$mjVUK)
            (begin (close-port g$port$6897$mjVUK) g$r$6899$mjVUK)))
         (g$proc$6898$mjVUK g$port$6897$mjVUK))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$6907$mjVUK
     g$peek-char$6949$mjVUK
     (case-lambda
       (() (g$peek-char$6907$mjVUK (current-input-port)))
       ((g$port$6921$mjVUK) (lookahead-char g$port$6921$mjVUK))))
   (g$read-char$6908$mjVUK
     g$read-char$6950$mjVUK
     (case-lambda
       (() (g$read-char$6908$mjVUK (current-input-port)))
       ((g$port$6922$mjVUK) (get-char g$port$6922$mjVUK))))
   (g$write-char$6909$mjVUK
     g$write-char$6951$mjVUK
     (case-lambda
       ((g$chr$6923$mjVUK)
        (g$write-char$6909$mjVUK g$chr$6923$mjVUK (current-output-port)))
       ((g$chr$6924$mjVUK g$port$6925$mjVUK)
        (put-char g$port$6925$mjVUK g$chr$6924$mjVUK))))
   (g$with-input-from-file$6916$mjVUK
     g$with-input-from-file$6952$mjVUK
     (case-lambda
       ((g$filename$6926$mjVUK g$thunk$6927$mjVUK)
        ((case-lambda
           ((g$current-input-port$6930$mjVUK g$t$6931$mjVUK)
            ((case-lambda
               ((g$swap$6932$mjVUK)
                (dynamic-wind
                  g$swap$6932$mjVUK
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6927$mjVUK)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6932$mjVUK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6933$mjVUK)
                    (begin
                      (g$current-input-port$6930$mjVUK g$t$6931$mjVUK)
                      (set! g$t$6931$mjVUK g$t$6933$mjVUK))))
                 (g$current-input-port$6930$mjVUK)))))))
         current-input-port
         (open-input-file g$filename$6926$mjVUK)))))
   (g$with-output-to-file$6917$mjVUK
     g$with-output-to-file$6953$mjVUK
     (case-lambda
       ((g$filename$6934$mjVUK g$thunk$6935$mjVUK)
        ((case-lambda
           ((g$current-output-port$6938$mjVUK g$t$6939$mjVUK)
            ((case-lambda
               ((g$swap$6940$mjVUK)
                (dynamic-wind
                  g$swap$6940$mjVUK
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6935$mjVUK)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6940$mjVUK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6941$mjVUK)
                    (begin
                      (g$current-output-port$6938$mjVUK g$t$6939$mjVUK)
                      (set! g$t$6939$mjVUK g$t$6941$mjVUK))))
                 (g$current-output-port$6938$mjVUK)))))))
         current-output-port
         (open-output-file g$filename$6934$mjVUK)))))
   (g$call-with-input-file$6918$mjVUK
     g$call-with-input-file$6954$mjVUK
     (case-lambda
       ((g$filename$6942$mjVUK g$proc$6943$mjVUK)
        ((case-lambda
           ((g$p$6944$mjVUK)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6943$mjVUK g$p$6944$mjVUK)))
              (case-lambda (() (close-input-port g$p$6944$mjVUK))))))
         (open-input-file g$filename$6942$mjVUK)))))
   (g$call-with-output-file$6919$mjVUK
     g$call-with-output-file$6955$mjVUK
     (case-lambda
       ((g$filename$6945$mjVUK g$proc$6946$mjVUK)
        ((case-lambda
           ((g$p$6947$mjVUK)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6946$mjVUK g$p$6947$mjVUK)))
              (case-lambda (() (close-output-port g$p$6947$mjVUK))))))
         (open-output-file g$filename$6945$mjVUK)))))
   (g$newline$6920$mjVUK
     g$newline$6956$mjVUK
     (case-lambda
       (() (g$newline$6920$mjVUK (current-output-port)))
       ((g$port$6948$mjVUK) (display '"
" g$port$6948$mjVUK)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8202$6957$mjVUK
     g$8202$7066$mjVUK
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8204$6958$mjVUK g$8204$7067$mjVUK '#f)
   (g$8203$6959$mjVUK
     g$8203$7068$mjVUK
     (make-record-constructor-descriptor
       g$8202$6957$mjVUK
       '#f
       g$8204$6958$mjVUK))
   (g$enum?$6960$mjVUK
     g$enum?$7069$mjVUK
     (record-predicate g$8202$6957$mjVUK))
   (g$make-enum$6961$mjVUK
     g$make-enum$7070$mjVUK
     (record-constructor g$8203$6959$mjVUK))
   (g$enum-value$6962$mjVUK
     g$enum-value$7071$mjVUK
     (record-accessor g$8202$6957$mjVUK '0))
   (g$enum-info$6963$mjVUK
     g$enum-info$7072$mjVUK
     (record-accessor g$8202$6957$mjVUK '1))
   (g$8215$6964$mjVUK
     g$8215$7073$mjVUK
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8217$6965$mjVUK g$8217$7074$mjVUK '#f)
   (g$8216$6966$mjVUK
     g$8216$7075$mjVUK
     (make-record-constructor-descriptor
       g$8215$6964$mjVUK
       '#f
       g$8217$6965$mjVUK))
   (g$enum-universe?$6967$mjVUK
     g$enum-universe?$7076$mjVUK
     (record-predicate g$8215$6964$mjVUK))
   (g$make-enum-universe$6968$mjVUK
     g$make-enum-universe$7077$mjVUK
     (record-constructor g$8216$6966$mjVUK))
   (g$enum-universe-id$6969$mjVUK
     g$enum-universe-id$7078$mjVUK
     (record-accessor g$8215$6964$mjVUK '0))
   (g$enum-universe-symbols$6970$mjVUK
     g$enum-universe-symbols$7079$mjVUK
     (record-accessor g$8215$6964$mjVUK '1))
   (g$enum-universe-mapping$6971$mjVUK
     g$enum-universe-mapping$7080$mjVUK
     (record-accessor g$8215$6964$mjVUK '2))
   (g$enum-universe-value$6972$mjVUK
     g$enum-universe-value$7081$mjVUK
     (record-accessor g$8215$6964$mjVUK '3))
   (g$enum-type=?$6973$mjVUK
     g$enum-type=?$7082$mjVUK
     (case-lambda
       ((g$enumset1$6995$mjVUK g$enumset2$6996$mjVUK)
        (eq? (g$enum-universe-id$6969$mjVUK
               (g$enum-info$6963$mjVUK g$enumset1$6995$mjVUK))
             (g$enum-universe-id$6969$mjVUK
               (g$enum-info$6963$mjVUK g$enumset2$6996$mjVUK))))))
   (g$get-symbols$6974$mjVUK
     g$get-symbols$7083$mjVUK
     (case-lambda
       ((g$enumset$6997$mjVUK)
        (g$enum-universe-symbols$6970$mjVUK
          (g$enum-info$6963$mjVUK g$enumset$6997$mjVUK)))))
   (g$get-value$6975$mjVUK
     g$get-value$7084$mjVUK
     (case-lambda
       ((g$enumset$6998$mjVUK g$s$6999$mjVUK)
        (g$hashtable-ref$6108$mjVUK
          (g$enum-universe-mapping$6971$mjVUK
            (g$enum-info$6963$mjVUK g$enumset$6998$mjVUK))
          g$s$6999$mjVUK
          '#f))))
   (g$assert-enum$6976$mjVUK
     g$assert-enum$7085$mjVUK
     (case-lambda
       ((g$who$7000$mjVUK g$enumset$7001$mjVUK)
        (if (not (g$enum?$6960$mjVUK g$enumset$7001$mjVUK))
          (assertion-violation
            g$who$7000$mjVUK
            '"not an enumeration"
            g$enumset$7001$mjVUK)
          (void)))))
   (g$make-info$6977$mjVUK
     g$make-info$7086$mjVUK
     (case-lambda
       ((g$symbols$7002$mjVUK)
        ((case-lambda
           ((g$ht$7003$mjVUK)
            ((letrec ((g$f$7004$mjVUK
                        (case-lambda
                          ((g$s$7005$mjVUK g$a$7006$mjVUK g$mask$7007$mjVUK)
                           (if (null? g$s$7005$mjVUK)
                             (values
                               (reverse! g$a$7006$mjVUK)
                               g$ht$7003$mjVUK
                               (- g$mask$7007$mjVUK '1))
                             ((case-lambda
                                ((g$n$7008$mjVUK)
                                 (if (symbol? g$n$7008$mjVUK)
                                   (if (g$hashtable-contains?$6111$mjVUK
                                         g$ht$7003$mjVUK
                                         g$n$7008$mjVUK)
                                     (g$f$7004$mjVUK
                                       (cdr g$s$7005$mjVUK)
                                       g$a$7006$mjVUK
                                       g$mask$7007$mjVUK)
                                     (begin
                                       (g$hashtable-set!$6109$mjVUK
                                         g$ht$7003$mjVUK
                                         g$n$7008$mjVUK
                                         g$mask$7007$mjVUK)
                                       (g$f$7004$mjVUK
                                         (cdr g$s$7005$mjVUK)
                                         (cons g$n$7008$mjVUK g$a$7006$mjVUK)
                                         (g$bitwise-arithmetic-shift-left$6637$mjVUK
                                           g$mask$7007$mjVUK
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$7008$mjVUK))))
                              (car g$s$7005$mjVUK)))))))
               g$f$7004$mjVUK)
             g$symbols$7002$mjVUK
             '()
             '1)))
         (g$make-eq-hashtable$6105$mjVUK)))))
   (g$make-name$6978$mjVUK
     g$make-name$7087$mjVUK
     (case-lambda
       ((g$symbols$7009$mjVUK)
        (string->symbol (g$format$7126$mjVUK '"~a" g$symbols$7009$mjVUK)))))
   (g$make-enumeration$6979$mjVUK
     g$make-enumeration$7088$mjVUK
     (case-lambda
       ((g$symbols$7010$mjVUK)
        (call-with-values
          (case-lambda (() (g$make-info$6977$mjVUK g$symbols$7010$mjVUK)))
          (case-lambda
            ((g$s$7014$mjVUK g$mapping$7015$mjVUK g$mask$7016$mjVUK)
             ((case-lambda
                ((g$mask$7017$mjVUK g$mapping$7018$mjVUK g$s$7019$mjVUK)
                 (g$make-enum$6961$mjVUK
                   g$mask$7017$mjVUK
                   (g$make-enum-universe$6968$mjVUK
                     (g$make-name$6978$mjVUK g$s$7019$mjVUK)
                     g$s$7019$mjVUK
                     g$mapping$7018$mjVUK
                     g$mask$7017$mjVUK))))
              g$mask$7016$mjVUK
              g$mapping$7015$mjVUK
              g$s$7014$mjVUK)))))))
   (g$enum-set-universe$6980$mjVUK
     g$enum-set-universe$7089$mjVUK
     (case-lambda
       ((g$enumset$7020$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set-universe g$enumset$7020$mjVUK)
          ((case-lambda
             ((g$ei$7021$mjVUK)
              (g$make-enum$6961$mjVUK
                (g$enum-universe-value$6972$mjVUK g$ei$7021$mjVUK)
                g$ei$7021$mjVUK)))
           (g$enum-info$6963$mjVUK g$enumset$7020$mjVUK))))))
   (g$enum-set-indexer$6981$mjVUK
     g$enum-set-indexer$7090$mjVUK
     (case-lambda
       ((g$enumset$7022$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set-indexer g$enumset$7022$mjVUK)
          (case-lambda
            ((g$symbol$7023$mjVUK)
             (begin
               (if (not (symbol? g$symbol$7023$mjVUK))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$7023$mjVUK)
                 (void))
               ((case-lambda
                  ((g$v$7024$mjVUK)
                   (if g$v$7024$mjVUK
                     (- (bitwise-length g$v$7024$mjVUK) '1)
                     '#f)))
                (g$get-value$6975$mjVUK
                  g$enumset$7022$mjVUK
                  g$symbol$7023$mjVUK)))))))))
   (g$enum-set-constructor$6982$mjVUK
     g$enum-set-constructor$7091$mjVUK
     (case-lambda
       ((g$enumset$7025$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set-constructor g$enumset$7025$mjVUK)
          (case-lambda
            ((g$symbols$7026$mjVUK)
             ((letrec ((g$f$7027$mjVUK
                         (case-lambda
                           ((g$v$7028$mjVUK g$s$7029$mjVUK)
                            (if (null? g$s$7029$mjVUK)
                              (g$make-enum$6961$mjVUK
                                g$v$7028$mjVUK
                                (g$enum-info$6963$mjVUK g$enumset$7025$mjVUK))
                              ((case-lambda
                                 ((g$n$7030$mjVUK)
                                  (if (symbol? g$n$7030$mjVUK)
                                    ((case-lambda
                                       ((g$v*$7031$mjVUK)
                                        (if g$v*$7031$mjVUK
                                          (g$f$7027$mjVUK
                                            (bitwise-ior
                                              g$v$7028$mjVUK
                                              g$v*$7031$mjVUK)
                                            (cdr g$s$7029$mjVUK))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$7030$mjVUK))))
                                     (g$get-value$6975$mjVUK
                                       g$enumset$7025$mjVUK
                                       g$n$7030$mjVUK))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$7030$mjVUK))))
                               (car g$s$7029$mjVUK)))))))
                g$f$7027$mjVUK)
              '0
              g$symbols$7026$mjVUK)))))))
   (g$enum-set->list$6983$mjVUK
     g$enum-set->list$7092$mjVUK
     (case-lambda
       ((g$enumset$7032$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set->list g$enumset$7032$mjVUK)
          ((case-lambda
             ((g$value$7033$mjVUK)
              ((letrec ((g$f$7034$mjVUK
                          (case-lambda
                            ((g$s$7035$mjVUK g$l$7036$mjVUK)
                             (if (null? g$s$7035$mjVUK)
                               (reverse! g$l$7036$mjVUK)
                               (if (g$zero?$5857$mjVUK
                                     (bitwise-and
                                       (g$get-value$6975$mjVUK
                                         g$enumset$7032$mjVUK
                                         (car g$s$7035$mjVUK))
                                       g$value$7033$mjVUK))
                                 (g$f$7034$mjVUK
                                   (cdr g$s$7035$mjVUK)
                                   g$l$7036$mjVUK)
                                 (g$f$7034$mjVUK
                                   (cdr g$s$7035$mjVUK)
                                   (cons
                                     (car g$s$7035$mjVUK)
                                     g$l$7036$mjVUK))))))))
                 g$f$7034$mjVUK)
               (g$get-symbols$6974$mjVUK g$enumset$7032$mjVUK)
               '())))
           (g$enum-value$6962$mjVUK g$enumset$7032$mjVUK))))))
   (g$enum-set-member?$6984$mjVUK
     g$enum-set-member?$7093$mjVUK
     (case-lambda
       ((g$symbol$7037$mjVUK g$enumset$7038$mjVUK)
        (begin
          (if (not (symbol? g$symbol$7037$mjVUK))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$7037$mjVUK)
            (void))
          (g$assert-enum$6976$mjVUK 'enum-set-member? g$enumset$7038$mjVUK)
          ((case-lambda
             ((g$v$7039$mjVUK)
              (if g$v$7039$mjVUK
                (not (g$zero?$5857$mjVUK
                       (bitwise-and
                         g$v$7039$mjVUK
                         (g$enum-value$6962$mjVUK g$enumset$7038$mjVUK))))
                '#f)))
           (g$get-value$6975$mjVUK
             g$enumset$7038$mjVUK
             g$symbol$7037$mjVUK))))))
   (g$enum-set-subset?$6985$mjVUK
     g$enum-set-subset?$7094$mjVUK
     (case-lambda
       ((g$enumset1$7040$mjVUK g$enumset2$7041$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set-subset? g$enumset1$7040$mjVUK)
          (g$assert-enum$6976$mjVUK 'enum-set-subset? g$enumset2$7041$mjVUK)
          ((case-lambda
             ((g$v1$7042$mjVUK g$v2$7043$mjVUK)
              (if (g$enum-type=?$6973$mjVUK
                    g$enumset1$7040$mjVUK
                    g$enumset2$7041$mjVUK)
                (= (bitwise-and g$v1$7042$mjVUK g$v2$7043$mjVUK)
                   g$v1$7042$mjVUK)
                ((letrec ((g$f$7044$mjVUK
                            (case-lambda
                              ((g$s$7045$mjVUK)
                               (if (null? g$s$7045$mjVUK)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$7046$mjVUK g$v2*$7047$mjVUK)
                                     (if g$v2*$7047$mjVUK
                                       ((case-lambda
                                          ((g$has1$7048$mjVUK g$has2$7049$mjVUK)
                                           (if (if g$has1$7048$mjVUK
                                                 (begin
                                                   '#f
                                                   (not g$has2$7049$mjVUK))
                                                 '#f)
                                             '#f
                                             (g$f$7044$mjVUK
                                               (cdr g$s$7045$mjVUK)))))
                                        (not (g$zero?$5857$mjVUK
                                               (bitwise-and
                                                 g$v1$7042$mjVUK
                                                 g$v1*$7046$mjVUK)))
                                        (not (g$zero?$5857$mjVUK
                                               (bitwise-and
                                                 g$v2$7043$mjVUK
                                                 g$v2*$7047$mjVUK))))
                                       '#f)))
                                  (g$get-value$6975$mjVUK
                                    g$enumset1$7040$mjVUK
                                    (car g$s$7045$mjVUK))
                                  (g$get-value$6975$mjVUK
                                    g$enumset2$7041$mjVUK
                                    (car g$s$7045$mjVUK))))))))
                   g$f$7044$mjVUK)
                 (g$get-symbols$6974$mjVUK g$enumset1$7040$mjVUK)))))
           (g$enum-value$6962$mjVUK g$enumset1$7040$mjVUK)
           (g$enum-value$6962$mjVUK g$enumset2$7041$mjVUK))))))
   (g$enum-set=?$6986$mjVUK
     g$enum-set=?$7095$mjVUK
     (case-lambda
       ((g$enumset1$7050$mjVUK g$enumset2$7051$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set=? g$enumset1$7050$mjVUK)
          (g$assert-enum$6976$mjVUK 'enum-set=? g$enumset2$7051$mjVUK)
          (if (g$enum-set-subset?$6985$mjVUK
                g$enumset1$7050$mjVUK
                g$enumset2$7051$mjVUK)
            (begin
              '#f
              (g$enum-set-subset?$6985$mjVUK
                g$enumset2$7051$mjVUK
                g$enumset1$7050$mjVUK))
            '#f)))))
   (g$enum-set-union$6987$mjVUK
     g$enum-set-union$7096$mjVUK
     (case-lambda
       ((g$enumset1$7052$mjVUK g$enumset2$7053$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set-union g$enumset1$7052$mjVUK)
          (g$assert-enum$6976$mjVUK 'enum-set-union g$enumset2$7053$mjVUK)
          (if (g$enum-type=?$6973$mjVUK
                g$enumset1$7052$mjVUK
                g$enumset2$7053$mjVUK)
            (g$make-enum$6961$mjVUK
              (bitwise-ior
                (g$enum-value$6962$mjVUK g$enumset1$7052$mjVUK)
                (g$enum-value$6962$mjVUK g$enumset2$7053$mjVUK))
              (g$enum-info$6963$mjVUK g$enumset1$7052$mjVUK))
            '#f)))))
   (g$enum-set-intersection$6988$mjVUK
     g$enum-set-intersection$7097$mjVUK
     (case-lambda
       ((g$enumset1$7054$mjVUK g$enumset2$7055$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK
            'enum-set-intersection
            g$enumset1$7054$mjVUK)
          (g$assert-enum$6976$mjVUK
            'enum-set-intersection
            g$enumset2$7055$mjVUK)
          (if (g$enum-type=?$6973$mjVUK
                g$enumset1$7054$mjVUK
                g$enumset2$7055$mjVUK)
            (g$make-enum$6961$mjVUK
              (bitwise-and
                (g$enum-value$6962$mjVUK g$enumset1$7054$mjVUK)
                (g$enum-value$6962$mjVUK g$enumset2$7055$mjVUK))
              (g$enum-info$6963$mjVUK g$enumset1$7054$mjVUK))
            '#f)))))
   (g$enum-set-difference$6989$mjVUK
     g$enum-set-difference$7098$mjVUK
     (case-lambda
       ((g$enumset1$7056$mjVUK g$enumset2$7057$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set-difference g$enumset1$7056$mjVUK)
          (g$assert-enum$6976$mjVUK 'enum-set-difference g$enumset2$7057$mjVUK)
          (if (g$enum-type=?$6973$mjVUK
                g$enumset1$7056$mjVUK
                g$enumset2$7057$mjVUK)
            (g$make-enum$6961$mjVUK
              (bitwise-and
                (g$enum-value$6962$mjVUK g$enumset1$7056$mjVUK)
                (bitwise-not (g$enum-value$6962$mjVUK g$enumset2$7057$mjVUK)))
              (g$enum-info$6963$mjVUK g$enumset1$7056$mjVUK))
            '#f)))))
   (g$enum-set-complement$6990$mjVUK
     g$enum-set-complement$7099$mjVUK
     (case-lambda
       ((g$enumset$7058$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set-complement g$enumset$7058$mjVUK)
          (g$make-enum$6961$mjVUK
            (bitwise-not (g$enum-value$6962$mjVUK g$enumset$7058$mjVUK))
            (g$enum-info$6963$mjVUK g$enumset$7058$mjVUK))))))
   (g$enum-set-projection$6991$mjVUK
     g$enum-set-projection$7100$mjVUK
     (case-lambda
       ((g$enumset1$7059$mjVUK g$enumset2$7060$mjVUK)
        (begin
          (g$assert-enum$6976$mjVUK 'enum-set-projection g$enumset1$7059$mjVUK)
          (g$assert-enum$6976$mjVUK 'enum-set-projection g$enumset2$7060$mjVUK)
          ((case-lambda
             ((g$v1$7061$mjVUK)
              ((letrec ((g$f$7062$mjVUK
                          (case-lambda
                            ((g$s$7063$mjVUK g$v$7064$mjVUK)
                             (if (null? g$s$7063$mjVUK)
                               (g$make-enum$6961$mjVUK
                                 g$v$7064$mjVUK
                                 (g$enum-info$6963$mjVUK g$enumset2$7060$mjVUK))
                               (if (g$zero?$5857$mjVUK
                                     (bitwise-and
                                       g$v1$7061$mjVUK
                                       (g$get-value$6975$mjVUK
                                         g$enumset1$7059$mjVUK
                                         (car g$s$7063$mjVUK))))
                                 (g$f$7062$mjVUK
                                   (cdr g$s$7063$mjVUK)
                                   g$v$7064$mjVUK)
                                 ((case-lambda
                                    ((g$v2$7065$mjVUK)
                                     (if g$v2$7065$mjVUK
                                       (g$f$7062$mjVUK
                                         (cdr g$s$7063$mjVUK)
                                         (bitwise-ior
                                           g$v$7064$mjVUK
                                           g$v2$7065$mjVUK))
                                       (g$f$7062$mjVUK
                                         (cdr g$s$7063$mjVUK)
                                         g$v$7064$mjVUK))))
                                  (g$get-value$6975$mjVUK
                                    g$enumset2$7060$mjVUK
                                    (car g$s$7063$mjVUK)))))))))
                 g$f$7062$mjVUK)
               (g$get-symbols$6974$mjVUK g$enumset1$7059$mjVUK)
               '0)))
           (g$enum-value$6962$mjVUK g$enumset1$7059$mjVUK)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6992$mjVUK g$p$6993$mjVUK g$wr$6994$mjVUK)
       (g$fprintf$7125$mjVUK
         g$p$6993$mjVUK
         '"#[enum-set ~a]"
         (g$enum-set->list$6983$mjVUK g$x$6992$mjVUK))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$7101$mjVUK
     g$dofmt$7123$mjVUK
     (case-lambda
       ((g$p$7105$mjVUK g$cntl$7106$mjVUK g$args$7107$mjVUK)
        ((case-lambda
           ((g$nmax$7108$mjVUK)
            ((letrec ((g$loop$7109$mjVUK
                        (case-lambda
                          ((g$n$7110$mjVUK g$a$7111$mjVUK)
                           (if (fx<=? g$n$7110$mjVUK g$nmax$7108$mjVUK)
                             ((case-lambda
                                ((g$c$7112$mjVUK)
                                 (if (if (g$char=?$5871$mjVUK
                                           g$c$7112$mjVUK
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$7110$mjVUK
                                           g$nmax$7108$mjVUK))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$7113$mjVUK)
                                       (if (g$memv$5595$mjVUK
                                             g$t$7113$mjVUK
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$7111$mjVUK)
                                             g$p$7105$mjVUK)
                                           (g$loop$7109$mjVUK
                                             (fx+ g$n$7110$mjVUK '2)
                                             (cdr g$a$7111$mjVUK)))
                                         (if (g$memv$5595$mjVUK
                                               g$t$7113$mjVUK
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$7111$mjVUK)
                                               g$p$7105$mjVUK)
                                             (g$loop$7109$mjVUK
                                               (fx+ g$n$7110$mjVUK '2)
                                               (cdr g$a$7111$mjVUK)))
                                           (if (g$memv$5595$mjVUK
                                                 g$t$7113$mjVUK
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$7111$mjVUK)
                                                   '2)
                                                 g$p$7105$mjVUK)
                                               (g$loop$7109$mjVUK
                                                 (fx+ g$n$7110$mjVUK '2)
                                                 (cdr g$a$7111$mjVUK)))
                                             (if (g$memv$5595$mjVUK
                                                   g$t$7113$mjVUK
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$7111$mjVUK)
                                                     '8)
                                                   g$p$7105$mjVUK)
                                                 (g$loop$7109$mjVUK
                                                   (fx+ g$n$7110$mjVUK '2)
                                                   (cdr g$a$7111$mjVUK)))
                                               (if (g$memv$5595$mjVUK
                                                     g$t$7113$mjVUK
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$7111$mjVUK)
                                                       '16)
                                                     g$p$7105$mjVUK)
                                                   (g$loop$7109$mjVUK
                                                     (fx+ g$n$7110$mjVUK '2)
                                                     (cdr g$a$7111$mjVUK)))
                                                 (if (g$memv$5595$mjVUK
                                                       g$t$7113$mjVUK
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$7111$mjVUK)
                                                         '10)
                                                       g$p$7105$mjVUK)
                                                     (g$loop$7109$mjVUK
                                                       (fx+ g$n$7110$mjVUK '2)
                                                       (cdr g$a$7111$mjVUK)))
                                                   (if (g$memv$5595$mjVUK
                                                         g$t$7113$mjVUK
                                                         '(#\~))
                                                     (begin
                                                       (g$write-char$6951$mjVUK
                                                         '#\~
                                                         g$p$7105$mjVUK)
                                                       (g$loop$7109$mjVUK
                                                         (fx+ g$n$7110$mjVUK '2)
                                                         g$a$7111$mjVUK))
                                                     (begin
                                                       (g$write-char$6951$mjVUK
                                                         g$c$7112$mjVUK
                                                         g$p$7105$mjVUK)
                                                       (g$loop$7109$mjVUK
                                                         (fx+ g$n$7110$mjVUK '1)
                                                         g$a$7111$mjVUK)))))))))))
                                    (string-ref
                                      g$cntl$7106$mjVUK
                                      (fx+ g$n$7110$mjVUK '1)))
                                   (begin
                                     (g$write-char$6951$mjVUK
                                       g$c$7112$mjVUK
                                       g$p$7105$mjVUK)
                                     (g$loop$7109$mjVUK
                                       (fx+ g$n$7110$mjVUK '1)
                                       g$a$7111$mjVUK)))))
                              (string-ref g$cntl$7106$mjVUK g$n$7110$mjVUK))
                             (void))))))
               g$loop$7109$mjVUK)
             '0
             g$args$7107$mjVUK)))
         (fx- (string-length g$cntl$7106$mjVUK) '1)))))
   (g$printf$7102$mjVUK
     g$printf$7124$mjVUK
     (case-lambda
       ((g$control$7114$mjVUK . g$args$7115$mjVUK)
        (g$dofmt$7101$mjVUK
          (current-output-port)
          g$control$7114$mjVUK
          g$args$7115$mjVUK))))
   (g$fprintf$7103$mjVUK
     g$fprintf$7125$mjVUK
     (case-lambda
       ((g$p$7116$mjVUK g$control$7117$mjVUK . g$args$7118$mjVUK)
        (g$dofmt$7101$mjVUK
          g$p$7116$mjVUK
          g$control$7117$mjVUK
          g$args$7118$mjVUK))))
   (g$format$7104$mjVUK
     g$format$7126$mjVUK
     (case-lambda
       ((g$control$7119$mjVUK . g$args$7120$mjVUK)
        (call-with-values
          g$open-string-output-port$6903$mjVUK
          (case-lambda
            ((g$p$7121$mjVUK g$c$7122$mjVUK)
             (begin
               (g$dofmt$7101$mjVUK
                 g$p$7121$mjVUK
                 g$control$7119$mjVUK
                 g$args$7120$mjVUK)
               (g$c$7122$mjVUK)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$7127$mjVUK
     g$make-traced-macro$7130$mjVUK
     (case-lambda
       ((g$name$7128$mjVUK g$x$7129$mjVUK)
        (if (procedure? g$x$7129$mjVUK)
          (make-traced-procedure
            g$name$7128$mjVUK
            g$x$7129$mjVUK
            g$syntax->datum$12186$mjVUK)
          (if (g$variable-transformer?$12008$mjVUK g$x$7129$mjVUK)
            (g$make-variable-transformer$12006$mjVUK
              (make-traced-procedure
                g$name$7128$mjVUK
                (g$variable-transformer-procedure$12009$mjVUK g$x$7129$mjVUK)
                g$syntax->datum$12186$mjVUK))
            g$x$7129$mjVUK))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$7131$mjVUK
     g$cps/generate-reference$7381$mjVUK
     (case-lambda
       ((g$variable$7182$mjVUK)
        (g$cps/generate-operand$7135$mjVUK
          (g$make-reference$7160$mjVUK g$variable$7182$mjVUK)))))
   (g$cps/generate-literal$7132$mjVUK
     g$cps/generate-literal$7382$mjVUK
     (case-lambda
       ((g$datum$7183$mjVUK)
        (g$cps/generate-operand$7135$mjVUK
          (g$make-literal$7159$mjVUK g$datum$7183$mjVUK)))))
   (g$cps/generate-abstraction$7133$mjVUK
     g$cps/generate-abstraction$7383$mjVUK
     (case-lambda
       ((g$bvl$7184$mjVUK g$body-generator$7185$mjVUK)
        (g$cps/generate-operand$7135$mjVUK
          (g$make-user-abstraction$7161$mjVUK
            g$bvl$7184$mjVUK
            (case-lambda
              ((g$continuation-variable$7186$mjVUK)
               (g$body-generator$7185$mjVUK
                 (g$variable-continuator$7147$mjVUK
                   g$continuation-variable$7186$mjVUK)))))))))
   (g$cps/generate-abstractions$7134$mjVUK
     g$cps/generate-abstractions$7384$mjVUK
     (case-lambda
       ((g$bvls$7187$mjVUK g$body-generators$7188$mjVUK)
        (g$cps/generate-operand$7135$mjVUK
          (g$make-user-abstractions$7162$mjVUK
            g$bvls$7187$mjVUK
            (g$map$5602$mjVUK
              (case-lambda
                ((g$body-generator$7189$mjVUK)
                 (case-lambda
                   ((g$continuation-variable$7190$mjVUK)
                    (g$body-generator$7189$mjVUK
                      (g$variable-continuator$7147$mjVUK
                        g$continuation-variable$7190$mjVUK))))))
              g$body-generators$7188$mjVUK))))))
   (g$cps/generate-operand$7135$mjVUK
     g$cps/generate-operand$7385$mjVUK
     (case-lambda
       ((g$operand$7191$mjVUK)
        (case-lambda
          ((g$continuator$7192$mjVUK)
           (g$continue-with-operand$7150$mjVUK
             g$continuator$7192$mjVUK
             g$operand$7191$mjVUK))))))
   (g$cps/generate-conditional$7136$mjVUK
     g$cps/generate-conditional$7386$mjVUK
     (case-lambda
       ((g$condition-generator$7193$mjVUK
          g$consequent-generator$7194$mjVUK
          g$alternative-generator$7195$mjVUK)
        (case-lambda
          ((g$continuator$7196$mjVUK)
           (letrec* ((g$if-variable$7197$mjVUK
                       (case-lambda
                         ((g$continuation-variable$7199$mjVUK)
                          ((case-lambda
                             ((g$continuator*$7200$mjVUK)
                              (g$condition-generator$7193$mjVUK
                                (g$conditional-continuator$7146$mjVUK
                                  (case-lambda
                                    ((g$condition$7201$mjVUK)
                                     (g$make-conditional$7169$mjVUK
                                       g$condition$7201$mjVUK
                                       (g$consequent-generator$7194$mjVUK
                                         g$continuator*$7200$mjVUK)
                                       (g$alternative-generator$7195$mjVUK
                                         g$continuator*$7200$mjVUK))))))))
                           (g$variable-continuator$7147$mjVUK
                             g$continuation-variable$7199$mjVUK))))))
             (g$reify-continuation*$7152$mjVUK
               g$continuator$7196$mjVUK
               g$if-variable$7197$mjVUK
               (case-lambda
                 ((g$continuation-abstraction$7198$mjVUK)
                  (g$make-conditional-join$7170$mjVUK
                    g$continuation-abstraction$7198$mjVUK
                    g$if-variable$7197$mjVUK))))))))))
   (g$cps/generate-recursive-bind$7137$mjVUK
     g$cps/generate-recursive-bind$7387$mjVUK
     (case-lambda
       ((g$variables$7202$mjVUK
          g$generators$7203$mjVUK
          g$body-generator$7204$mjVUK)
        (case-lambda
          ((g$continuator$7205$mjVUK)
           (g$make-recursive-bind$7164$mjVUK
             g$variables$7202$mjVUK
             (g$map$5602$mjVUK
               (case-lambda
                 ((g$generator$7206$mjVUK)
                  (case-lambda
                    ((g$continuation-variable$7207$mjVUK)
                     (g$generator$7206$mjVUK
                       (g$variable-continuator$7147$mjVUK
                         g$continuation-variable$7207$mjVUK))))))
               g$generators$7203$mjVUK)
             (g$body-generator$7204$mjVUK
               (g$reified-continuator$7149$mjVUK
                 g$continuator$7205$mjVUK))))))))
   (g$cps/generate-recursive*-bind$7138$mjVUK
     g$cps/generate-recursive*-bind$7388$mjVUK
     (case-lambda
       ((g$variables$7208$mjVUK
          g$generators$7209$mjVUK
          g$body-generator$7210$mjVUK)
        (case-lambda
          ((g$continuator$7211$mjVUK)
           (g$make-recursive*-bind$7165$mjVUK
             g$variables$7208$mjVUK
             (g$map$5602$mjVUK
               (case-lambda
                 ((g$generator$7212$mjVUK)
                  (case-lambda
                    ((g$continuation-variable$7213$mjVUK)
                     (g$generator$7212$mjVUK
                       (g$variable-continuator$7147$mjVUK
                         g$continuation-variable$7213$mjVUK))))))
               g$generators$7209$mjVUK)
             (g$body-generator$7210$mjVUK
               (g$reified-continuator$7149$mjVUK
                 g$continuator$7211$mjVUK))))))))
   (g$cps/generate-recursive*-library-bind$7139$mjVUK
     g$cps/generate-recursive*-library-bind$7389$mjVUK
     (case-lambda
       ((g$name$7214$mjVUK
          g$variables$7215$mjVUK
          g$variables*$7216$mjVUK
          g$generators$7217$mjVUK
          g$body-generator$7218$mjVUK)
        (case-lambda
          ((g$continuator$7219$mjVUK)
           (g$make-recursive*-library-bind$7166$mjVUK
             g$name$7214$mjVUK
             g$variables$7215$mjVUK
             g$variables*$7216$mjVUK
             (g$map$5602$mjVUK
               (case-lambda
                 ((g$generator$7220$mjVUK)
                  (case-lambda
                    ((g$continuation-variable$7221$mjVUK)
                     (g$generator$7220$mjVUK
                       (g$variable-continuator$7147$mjVUK
                         g$continuation-variable$7221$mjVUK))))))
               g$generators$7217$mjVUK)
             (g$body-generator$7218$mjVUK
               (g$reified-continuator$7149$mjVUK
                 g$continuator$7219$mjVUK))))))))
   (g$cps/generate-sequence$7140$mjVUK
     g$cps/generate-sequence$7390$mjVUK
     (case-lambda
       ((g$generators$7222$mjVUK)
        (case-lambda
          ((g$continuator$7223$mjVUK)
           ((letrec ((g$recur$7224$mjVUK
                       (case-lambda
                         ((g$generators$7225$mjVUK)
                          ((car g$generators$7225$mjVUK)
                           ((case-lambda
                              ((g$generators$7226$mjVUK)
                               (if (pair? g$generators$7226$mjVUK)
                                 (g$effect-continuator$7145$mjVUK
                                   (case-lambda
                                     (()
                                      (g$recur$7224$mjVUK
                                        g$generators$7226$mjVUK))))
                                 g$continuator$7223$mjVUK)))
                            (cdr g$generators$7225$mjVUK)))))))
              g$recur$7224$mjVUK)
            g$generators$7222$mjVUK))))))
   (g$cps/generate-assignment$7141$mjVUK
     g$cps/generate-assignment$7391$mjVUK
     (case-lambda
       ((g$location$7227$mjVUK g$expression-generator$7228$mjVUK)
        (case-lambda
          ((g$continuator$7229$mjVUK)
           (g$expression-generator$7228$mjVUK
             (g$operand-continuator$7144$mjVUK
               (case-lambda
                 ((g$operand$7230$mjVUK)
                  (g$make-assignment$7172$mjVUK
                    g$location$7227$mjVUK
                    g$operand$7230$mjVUK
                    (g$continue-with-operand$7150$mjVUK
                      g$continuator$7229$mjVUK
                      '(cps-void))))))))))))
   (g$cps/generate-combination$7142$mjVUK
     g$cps/generate-combination$7392$mjVUK
     (case-lambda
       ((g$operator-generator$7231$mjVUK g$operand-generators$7232$mjVUK)
        (g$cps/generate-subproblems$7143$mjVUK
          (reverse
            (cons
              g$operator-generator$7231$mjVUK
              g$operand-generators$7232$mjVUK))
          (case-lambda
            ((g$operands$7233$mjVUK g$continuator$7234$mjVUK)
             (g$make-combination$7167$mjVUK
               (car g$operands$7233$mjVUK)
               (g$reify-continuation$7151$mjVUK g$continuator$7234$mjVUK)
               (cdr g$operands$7233$mjVUK))))))))
   (g$cps/generate-subproblems$7143$mjVUK
     g$cps/generate-subproblems$7393$mjVUK
     (case-lambda
       ((g$generators$7235$mjVUK g$combiner$7236$mjVUK)
        (case-lambda
          ((g$continuator$7237$mjVUK)
           ((letrec ((g$recur$7238$mjVUK
                       (case-lambda
                         ((g$generators$7239$mjVUK g$operands$7240$mjVUK)
                          (if (pair? g$generators$7239$mjVUK)
                            ((car g$generators$7239$mjVUK)
                             ((case-lambda
                                ((g$generators$7241$mjVUK)
                                 (g$operand-continuator$7144$mjVUK
                                   (case-lambda
                                     ((g$operand$7242$mjVUK)
                                      (g$recur$7238$mjVUK
                                        g$generators$7241$mjVUK
                                        (cons
                                          g$operand$7242$mjVUK
                                          g$operands$7240$mjVUK)))))))
                              (cdr g$generators$7239$mjVUK)))
                            (g$combiner$7236$mjVUK
                              g$operands$7240$mjVUK
                              g$continuator$7237$mjVUK))))))
              g$recur$7238$mjVUK)
            g$generators$7235$mjVUK
            '()))))))
   (g$operand-continuator$7144$mjVUK
     g$operand-continuator$7394$mjVUK
     (case-lambda
       ((g$generator$7243$mjVUK)
        (case-lambda
          ((g$if-operand$7244$mjVUK
             g$if-effect$7245$mjVUK
             g$if-conditional$7246$mjVUK
             g$if-variable$7247$mjVUK
             g$if-inline$7248$mjVUK)
           (begin
             g$if-effect$7245$mjVUK
             g$if-conditional$7246$mjVUK
             g$if-variable$7247$mjVUK
             g$if-inline$7248$mjVUK
             (g$if-operand$7244$mjVUK g$generator$7243$mjVUK)))))))
   (g$effect-continuator$7145$mjVUK
     g$effect-continuator$7395$mjVUK
     (case-lambda
       ((g$generator$7249$mjVUK)
        (case-lambda
          ((g$if-operand$7250$mjVUK
             g$if-effect$7251$mjVUK
             g$if-conditional$7252$mjVUK
             g$if-variable$7253$mjVUK
             g$if-inline$7254$mjVUK)
           (begin
             g$if-operand$7250$mjVUK
             g$if-conditional$7252$mjVUK
             g$if-variable$7253$mjVUK
             g$if-inline$7254$mjVUK
             (g$if-effect$7251$mjVUK g$generator$7249$mjVUK)))))))
   (g$conditional-continuator$7146$mjVUK
     g$conditional-continuator$7396$mjVUK
     (case-lambda
       ((g$generator$7255$mjVUK)
        (case-lambda
          ((g$if-operand$7256$mjVUK
             g$if-effect$7257$mjVUK
             g$if-conditional$7258$mjVUK
             g$if-variable$7259$mjVUK
             g$if-inline$7260$mjVUK)
           (begin
             g$if-operand$7256$mjVUK
             g$if-effect$7257$mjVUK
             g$if-variable$7259$mjVUK
             g$if-inline$7260$mjVUK
             (g$if-conditional$7258$mjVUK g$generator$7255$mjVUK)))))))
   (g$variable-continuator$7147$mjVUK
     g$variable-continuator$7397$mjVUK
     (case-lambda
       ((g$variable$7261$mjVUK)
        (case-lambda
          ((g$if-operand$7262$mjVUK
             g$if-effect$7263$mjVUK
             g$if-conditional$7264$mjVUK
             g$if-variable$7265$mjVUK
             g$if-inline$7266$mjVUK)
           (begin
             g$if-operand$7262$mjVUK
             g$if-effect$7263$mjVUK
             g$if-variable$7265$mjVUK
             g$if-inline$7266$mjVUK
             (g$if-variable$7265$mjVUK g$variable$7261$mjVUK)))))))
   (g$inline-continuator$7148$mjVUK
     g$inline-continuator$7398$mjVUK
     (case-lambda
       ((g$continuation$7267$mjVUK)
        (case-lambda
          ((g$if-operand$7268$mjVUK
             g$if-effect$7269$mjVUK
             g$if-conditional$7270$mjVUK
             g$if-variable$7271$mjVUK
             g$if-inline$7272$mjVUK)
           (begin
             g$if-operand$7268$mjVUK
             g$if-effect$7269$mjVUK
             g$if-conditional$7270$mjVUK
             g$if-variable$7271$mjVUK
             (g$if-inline$7272$mjVUK g$continuation$7267$mjVUK)))))))
   (g$reified-continuator$7149$mjVUK
     g$reified-continuator$7399$mjVUK
     (case-lambda
       ((g$continuator$7273$mjVUK)
        (case-lambda
          ((g$if-operand$7274$mjVUK
             g$if-effect$7275$mjVUK
             g$if-conditional$7276$mjVUK
             g$if-variable$7277$mjVUK
             g$if-inline$7278$mjVUK)
           (begin
             g$if-operand$7274$mjVUK
             g$if-effect$7275$mjVUK
             g$if-conditional$7276$mjVUK
             (g$reify-continuation*$7152$mjVUK
               g$continuator$7273$mjVUK
               g$if-variable$7277$mjVUK
               g$if-inline$7278$mjVUK)))))))
   (g$continue-with-operand$7150$mjVUK
     g$continue-with-operand$7400$mjVUK
     (case-lambda
       ((g$continuator$7279$mjVUK g$operand$7280$mjVUK)
        (g$continuator$7279$mjVUK
          (case-lambda
            ((g$generator$7281$mjVUK)
             (g$generator$7281$mjVUK g$operand$7280$mjVUK)))
          (case-lambda ((g$generator$7282$mjVUK) (g$generator$7282$mjVUK)))
          (case-lambda
            ((g$generator$7283$mjVUK)
             (g$generator$7283$mjVUK
               (g$make-truth-test$7173$mjVUK g$operand$7280$mjVUK))))
          (case-lambda
            ((g$continuation-variable$7284$mjVUK)
             (g$make-return$7168$mjVUK
               (g$make-reference$7160$mjVUK g$continuation-variable$7284$mjVUK)
               (list g$operand$7280$mjVUK))))
          (case-lambda
            ((g$continuation-abstraction$7285$mjVUK)
             (g$make-return$7168$mjVUK
               g$continuation-abstraction$7285$mjVUK
               (list g$operand$7280$mjVUK))))))))
   (g$reify-continuation$7151$mjVUK
     g$reify-continuation$7401$mjVUK
     (case-lambda
       ((g$continuator$7286$mjVUK)
        (g$continuator$7286$mjVUK
          g$operand-continuation-reifier$7154$mjVUK
          g$effect-continuation-reifier$7156$mjVUK
          g$conditional-continuation-reifier$7158$mjVUK
          (case-lambda
            ((g$variable$7287$mjVUK)
             (g$make-reference$7160$mjVUK g$variable$7287$mjVUK)))
          (case-lambda
            ((g$continuation$7288$mjVUK) g$continuation$7288$mjVUK))))))
   (g$reify-continuation*$7152$mjVUK
     g$reify-continuation*$7402$mjVUK
     (case-lambda
       ((g$continuator$7289$mjVUK
          g$if-variable$7290$mjVUK
          g$if-inline$7291$mjVUK)
        (g$continuator$7289$mjVUK
          (g$operand-continuation-reifier*$7153$mjVUK g$if-inline$7291$mjVUK)
          (g$effect-continuation-reifier*$7155$mjVUK g$if-inline$7291$mjVUK)
          (g$conditional-continuation-reifier*$7157$mjVUK
            g$if-inline$7291$mjVUK)
          g$if-variable$7290$mjVUK
          g$if-inline$7291$mjVUK))))
   (g$operand-continuation-reifier*$7153$mjVUK
     g$operand-continuation-reifier*$7403$mjVUK
     (case-lambda
       ((g$receiver$7292$mjVUK)
        (case-lambda
          ((g$generator$7293$mjVUK)
           (g$receiver$7292$mjVUK
             ((case-lambda
                ((g$variable$7294$mjVUK)
                 (g$make-continuation-abstraction$7163$mjVUK
                   (list g$variable$7294$mjVUK)
                   (g$generator$7293$mjVUK
                     (g$make-reference$7160$mjVUK g$variable$7294$mjVUK)))))
              (g$generate-variable$7174$mjVUK 'V))))))))
   (g$operand-continuation-reifier$7154$mjVUK
     g$operand-continuation-reifier$7404$mjVUK
     (g$operand-continuation-reifier*$7153$mjVUK values))
   (g$effect-continuation-reifier*$7155$mjVUK
     g$effect-continuation-reifier*$7405$mjVUK
     (case-lambda
       ((g$receiver$7295$mjVUK)
        (case-lambda
          ((g$generator$7296$mjVUK)
           (g$receiver$7295$mjVUK
             ((case-lambda
                ((g$variable$7297$mjVUK)
                 (g$make-continuation-abstraction$7163$mjVUK
                   g$variable$7297$mjVUK
                   (g$generator$7296$mjVUK))))
              (g$generate-variable$7174$mjVUK 'IGNORE))))))))
   (g$effect-continuation-reifier$7156$mjVUK
     g$effect-continuation-reifier$7406$mjVUK
     (g$effect-continuation-reifier*$7155$mjVUK values))
   (g$conditional-continuation-reifier*$7157$mjVUK
     g$conditional-continuation-reifier*$7407$mjVUK
     (case-lambda
       ((g$receiver$7298$mjVUK)
        (case-lambda
          ((g$generator$7299$mjVUK)
           (g$receiver$7298$mjVUK
             ((case-lambda
                ((g$variable$7300$mjVUK)
                 (g$make-continuation-abstraction$7163$mjVUK
                   (list g$variable$7300$mjVUK)
                   (g$generator$7299$mjVUK
                     (g$make-truth-test$7173$mjVUK
                       (g$make-reference$7160$mjVUK g$variable$7300$mjVUK))))))
              (g$generate-variable$7174$mjVUK 'T))))))))
   (g$conditional-continuation-reifier$7158$mjVUK
     g$conditional-continuation-reifier$7408$mjVUK
     (g$conditional-continuation-reifier*$7157$mjVUK values))
   (g$make-literal$7159$mjVUK
     g$make-literal$7409$mjVUK
     (case-lambda ((g$datum$7301$mjVUK) (list 'quote g$datum$7301$mjVUK))))
   (g$make-reference$7160$mjVUK
     g$make-reference$7410$mjVUK
     (case-lambda ((g$variable$7302$mjVUK) g$variable$7302$mjVUK)))
   (g$make-user-abstraction$7161$mjVUK
     g$make-user-abstraction$7411$mjVUK
     (case-lambda
       ((g$bvl$7303$mjVUK g$body-constructor$7304$mjVUK)
        ((case-lambda
           ((g$continuation$7305$mjVUK)
            (list
              'case-lambda
              (list
                (cons g$continuation$7305$mjVUK g$bvl$7303$mjVUK)
                (g$body-constructor$7304$mjVUK g$continuation$7305$mjVUK)))))
         (g$generate-variable$7174$mjVUK 'C)))))
   (g$make-user-abstractions$7162$mjVUK
     g$make-user-abstractions$7412$mjVUK
     (case-lambda
       ((g$bvls$7306$mjVUK g$body-constructors$7307$mjVUK)
        ((case-lambda
           ((g$continuation$7308$mjVUK)
            (cons
              'case-lambda
              (g$map$5602$mjVUK
                (case-lambda
                  ((g$bvl$7309$mjVUK g$body-constructor$7310$mjVUK)
                   (list
                     (cons g$continuation$7308$mjVUK g$bvl$7309$mjVUK)
                     (g$body-constructor$7310$mjVUK
                       g$continuation$7308$mjVUK))))
                g$bvls$7306$mjVUK
                g$body-constructors$7307$mjVUK))))
         (g$generate-variable$7174$mjVUK 'C)))))
   (g$make-continuation-abstraction$7163$mjVUK
     g$make-continuation-abstraction$7413$mjVUK
     (case-lambda
       ((g$bvl$7311$mjVUK g$body$7312$mjVUK)
        (list 'case-lambda (list g$bvl$7311$mjVUK g$body$7312$mjVUK)))))
   (g$make-recursive-bind$7164$mjVUK
     g$make-recursive-bind$7414$mjVUK
     (case-lambda
       ((g$variables$7313$mjVUK g$constructors$7314$mjVUK g$body$7315$mjVUK)
        (list
          'letrec
          (g$map$5602$mjVUK
            (case-lambda
              ((g$variable$7316$mjVUK g$constructor$7317$mjVUK)
               (list
                 g$variable$7316$mjVUK
                 (list
                   (g$make-user-abstraction$7161$mjVUK
                     '()
                     g$constructor$7317$mjVUK)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$7316$mjVUK))))))
            g$variables$7313$mjVUK
            g$constructors$7314$mjVUK)
          g$body$7315$mjVUK))))
   (g$make-recursive*-bind$7165$mjVUK
     g$make-recursive*-bind$7415$mjVUK
     (case-lambda
       ((g$variables$7318$mjVUK g$constructors$7319$mjVUK g$body$7320$mjVUK)
        (list
          'letrec*
          (g$map$5602$mjVUK
            (case-lambda
              ((g$variable$7321$mjVUK g$constructor$7322$mjVUK)
               (list
                 g$variable$7321$mjVUK
                 (list
                   (g$make-user-abstraction$7161$mjVUK
                     '()
                     g$constructor$7322$mjVUK)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$7321$mjVUK))))))
            g$variables$7318$mjVUK
            g$constructors$7319$mjVUK)
          g$body$7320$mjVUK))))
   (g$make-recursive*-library-bind$7166$mjVUK
     g$make-recursive*-library-bind$7416$mjVUK
     (case-lambda
       ((g$name$7323$mjVUK
          g$variables$7324$mjVUK
          g$variables*$7325$mjVUK
          g$constructors$7326$mjVUK
          g$body$7327$mjVUK)
        (list
          'library-letrec*
          g$name$7323$mjVUK
          (g$map$5602$mjVUK
            (case-lambda
              ((g$variable$7328$mjVUK
                 g$variable*$7329$mjVUK
                 g$constructor$7330$mjVUK)
               (list
                 g$variable$7328$mjVUK
                 g$variable*$7329$mjVUK
                 (list
                   (g$make-user-abstraction$7161$mjVUK
                     '()
                     g$constructor$7330$mjVUK)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$7328$mjVUK))))))
            g$variables$7324$mjVUK
            g$variables*$7325$mjVUK
            g$constructors$7326$mjVUK)
          g$body$7327$mjVUK))))
   (g$make-combination$7167$mjVUK
     g$make-combination$7417$mjVUK
     (case-lambda
       ((g$operator$7331$mjVUK g$continuation$7332$mjVUK g$operands$7333$mjVUK)
        (cons
          g$operator$7331$mjVUK
          (cons g$continuation$7332$mjVUK g$operands$7333$mjVUK)))))
   (g$make-return$7168$mjVUK
     g$make-return$7418$mjVUK
     (case-lambda
       ((g$continuation$7334$mjVUK g$operands$7335$mjVUK)
        (cons g$continuation$7334$mjVUK g$operands$7335$mjVUK))))
   (g$make-conditional$7169$mjVUK
     g$make-conditional$7419$mjVUK
     (case-lambda
       ((g$condition$7336$mjVUK
          g$consequent$7337$mjVUK
          g$alternative$7338$mjVUK)
        (list
          'if
          g$condition$7336$mjVUK
          g$consequent$7337$mjVUK
          g$alternative$7338$mjVUK))))
   (g$make-conditional-join$7170$mjVUK
     g$make-conditional-join$7420$mjVUK
     (case-lambda
       ((g$continuation$7339$mjVUK g$constructor$7340$mjVUK)
        ((case-lambda
           ((g$variable$7341$mjVUK)
            (g$make-let$7171$mjVUK
              (list g$variable$7341$mjVUK)
              (list g$continuation$7339$mjVUK)
              (g$constructor$7340$mjVUK g$variable$7341$mjVUK))))
         (g$generate-variable$7174$mjVUK 'J)))))
   (g$make-let$7171$mjVUK
     g$make-let$7421$mjVUK
     (case-lambda
       ((g$variables$7342$mjVUK g$expressions$7343$mjVUK g$body$7344$mjVUK)
        (cons
          (list 'case-lambda (list g$variables$7342$mjVUK g$body$7344$mjVUK))
          g$expressions$7343$mjVUK))))
   (g$make-assignment$7172$mjVUK
     g$make-assignment$7422$mjVUK
     (case-lambda
       ((g$location$7345$mjVUK g$operand$7346$mjVUK g$expression$7347$mjVUK)
        (list
          'begin
          (list 'set! g$location$7345$mjVUK g$operand$7346$mjVUK)
          g$expression$7347$mjVUK))))
   (g$make-truth-test$7173$mjVUK
     g$make-truth-test$7423$mjVUK
     (case-lambda ((g$operand$7348$mjVUK) g$operand$7348$mjVUK)))
   (g$generate-variable$7174$mjVUK
     g$generate-variable$7424$mjVUK
     (case-lambda ((g$name$7349$mjVUK) (gensym g$name$7349$mjVUK))))
   (g$parse$7175$mjVUK
     g$parse$7425$mjVUK
     (case-lambda
       ((g$x$7350$mjVUK)
        (if (pair? g$x$7350$mjVUK)
          ((case-lambda
             ((g$t$7351$mjVUK)
              (if (g$memv$5595$mjVUK g$t$7351$mjVUK '(quote))
                (g$cps/generate-literal$7132$mjVUK
                  (g$cadr$5828$mjVUK g$x$7350$mjVUK))
                (if (g$memv$5595$mjVUK g$t$7351$mjVUK '(if))
                  (g$cps/generate-conditional$7136$mjVUK
                    (g$parse$7175$mjVUK (g$cadr$5828$mjVUK g$x$7350$mjVUK))
                    (g$parse$7175$mjVUK (g$caddr$5834$mjVUK g$x$7350$mjVUK))
                    (g$parse$7175$mjVUK (g$cadddr$5846$mjVUK g$x$7350$mjVUK)))
                  (if (g$memv$5595$mjVUK g$t$7351$mjVUK '(case-lambda))
                    ((case-lambda
                       ((g$d$7352$mjVUK)
                        (g$cps/generate-abstractions$7134$mjVUK
                          (g$map$5602$mjVUK car g$d$7352$mjVUK)
                          (g$map$5602$mjVUK
                            (case-lambda
                              ((g$e$7353$mjVUK)
                               (g$cps/generate-sequence$7140$mjVUK
                                 (g$map$5602$mjVUK
                                   g$parse$7175$mjVUK
                                   (cdr g$e$7353$mjVUK)))))
                            g$d$7352$mjVUK))))
                     (cdr g$x$7350$mjVUK))
                    (if (g$memv$5595$mjVUK g$t$7351$mjVUK '(letrec))
                      ((case-lambda
                         ((g$bindings$7354$mjVUK g$body*$7355$mjVUK)
                          ((case-lambda
                             ((g$lhs*$7356$mjVUK g$rhs*$7357$mjVUK)
                              (g$cps/generate-recursive-bind$7137$mjVUK
                                g$lhs*$7356$mjVUK
                                (g$map$5602$mjVUK
                                  g$parse$7175$mjVUK
                                  g$rhs*$7357$mjVUK)
                                (g$parse$7175$mjVUK
                                  (cons 'begin g$body*$7355$mjVUK)))))
                           (g$map$5602$mjVUK car g$bindings$7354$mjVUK)
                           (g$map$5602$mjVUK
                             g$cadr$5828$mjVUK
                             g$bindings$7354$mjVUK))))
                       (g$cadr$5828$mjVUK g$x$7350$mjVUK)
                       (g$cddr$5830$mjVUK g$x$7350$mjVUK))
                      (if (g$memv$5595$mjVUK g$t$7351$mjVUK '(letrec*))
                        ((case-lambda
                           ((g$bindings$7358$mjVUK g$body*$7359$mjVUK)
                            ((case-lambda
                               ((g$lhs*$7360$mjVUK g$rhs*$7361$mjVUK)
                                (g$cps/generate-recursive*-bind$7138$mjVUK
                                  g$lhs*$7360$mjVUK
                                  (g$map$5602$mjVUK
                                    g$parse$7175$mjVUK
                                    g$rhs*$7361$mjVUK)
                                  (g$parse$7175$mjVUK
                                    (cons 'begin g$body*$7359$mjVUK)))))
                             (g$map$5602$mjVUK car g$bindings$7358$mjVUK)
                             (g$map$5602$mjVUK
                               g$cadr$5828$mjVUK
                               g$bindings$7358$mjVUK))))
                         (g$cadr$5828$mjVUK g$x$7350$mjVUK)
                         (g$cddr$5830$mjVUK g$x$7350$mjVUK))
                        (if (g$memv$5595$mjVUK
                              g$t$7351$mjVUK
                              '(library-letrec*))
                          ((case-lambda
                             ((g$name$7362$mjVUK g$x$7363$mjVUK)
                              ((case-lambda
                                 ((g$bindings$7364$mjVUK g$body*$7365$mjVUK)
                                  ((case-lambda
                                     ((g$lhs*$7366$mjVUK
                                        g$lhs**$7367$mjVUK
                                        g$rhs*$7368$mjVUK)
                                      (g$cps/generate-recursive*-library-bind$7139$mjVUK
                                        g$name$7362$mjVUK
                                        g$lhs*$7366$mjVUK
                                        g$lhs**$7367$mjVUK
                                        (g$map$5602$mjVUK
                                          g$parse$7175$mjVUK
                                          g$rhs*$7368$mjVUK)
                                        (g$parse$7175$mjVUK
                                          (cons 'begin g$body*$7365$mjVUK)))))
                                   (g$map$5602$mjVUK car g$bindings$7364$mjVUK)
                                   (g$map$5602$mjVUK
                                     g$cadr$5828$mjVUK
                                     g$bindings$7364$mjVUK)
                                   (g$map$5602$mjVUK
                                     g$caddr$5834$mjVUK
                                     g$bindings$7364$mjVUK))))
                               (g$cadr$5828$mjVUK g$x$7363$mjVUK)
                               (g$cddr$5830$mjVUK g$x$7363$mjVUK))))
                           (g$cadr$5828$mjVUK g$x$7350$mjVUK)
                           (cdr g$x$7350$mjVUK))
                          (if (g$memv$5595$mjVUK g$t$7351$mjVUK '(begin))
                            (g$cps/generate-sequence$7140$mjVUK
                              (g$map$5602$mjVUK
                                g$parse$7175$mjVUK
                                (cdr g$x$7350$mjVUK)))
                            (if (g$memv$5595$mjVUK g$t$7351$mjVUK '(set!))
                              (g$cps/generate-assignment$7141$mjVUK
                                (g$cadr$5828$mjVUK g$x$7350$mjVUK)
                                (g$parse$7175$mjVUK
                                  (g$caddr$5834$mjVUK g$x$7350$mjVUK)))
                              (if (list? g$x$7350$mjVUK)
                                (g$cps/generate-combination$7142$mjVUK
                                  (g$parse$7175$mjVUK (car g$x$7350$mjVUK))
                                  (g$map$5602$mjVUK
                                    g$parse$7175$mjVUK
                                    (cdr g$x$7350$mjVUK)))
                                (error
                                  'rewrite
                                  '"invalid form ~s ~s"
                                  g$x$7350$mjVUK
                                  (list? g$x$7350$mjVUK)))))))))))))
           (car g$x$7350$mjVUK))
          (if (symbol? g$x$7350$mjVUK)
            (g$cps/generate-reference$7131$mjVUK g$x$7350$mjVUK)
            (g$cps/generate-literal$7132$mjVUK g$x$7350$mjVUK))))))
   (g$starts-with?$7176$mjVUK
     g$starts-with?$7426$mjVUK
     (case-lambda
       ((g$str$7369$mjVUK g$sub$7370$mjVUK)
        (clr-call-internal
          'system.string
          'startswith
          g$str$7369$mjVUK
          g$sub$7370$mjVUK))))
   (g$ends-with?$7177$mjVUK
     g$ends-with?$7427$mjVUK
     (case-lambda
       ((g$str$7371$mjVUK g$sub$7372$mjVUK)
        (clr-call-internal
          'system.string
          'endswith
          g$str$7371$mjVUK
          g$sub$7372$mjVUK))))
   (g$clr-generator?$7178$mjVUK
     g$clr-generator?$7428$mjVUK
     (case-lambda
       ((g$o$7373$mjVUK)
        (if (symbol? g$o$7373$mjVUK)
          (begin
            '#f
            ((case-lambda
               ((g$o$7374$mjVUK)
                (if (g$starts-with?$7176$mjVUK g$o$7374$mjVUK '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$7177$mjVUK g$o$7374$mjVUK '"-internal"))
                  '#f)))
             (symbol->string g$o$7373$mjVUK)))
          '#f))))
   (g$fix-primitives$7179$mjVUK
     g$fix-primitives$7429$mjVUK
     (case-lambda
       ((g$e$7375$mjVUK)
        (if (if (pair? g$e$7375$mjVUK) (begin '#f (list? g$e$7375$mjVUK)) '#f)
          ((case-lambda
             ((g$o$7376$mjVUK)
              (if (eq? g$o$7376$mjVUK 'quote)
                g$e$7375$mjVUK
                (if (begin '#f (g$clr-generator?$7178$mjVUK g$o$7376$mjVUK))
                  (if (pair? (cdr g$e$7375$mjVUK))
                    (list
                      (g$fix-primitives$7179$mjVUK
                        (g$cadr$5828$mjVUK g$e$7375$mjVUK))
                      (cons
                        g$o$7376$mjVUK
                        (g$map$5602$mjVUK
                          g$fix-primitives$7179$mjVUK
                          (g$cddr$5830$mjVUK g$e$7375$mjVUK))))
                    g$e$7375$mjVUK)
                  (cons
                    (g$fix-primitives$7179$mjVUK g$o$7376$mjVUK)
                    (g$map$5602$mjVUK
                      g$fix-primitives$7179$mjVUK
                      (cdr g$e$7375$mjVUK)))))))
           (car g$e$7375$mjVUK))
          g$e$7375$mjVUK))))
   (g$parse->cps$7180$mjVUK
     g$parse->cps$7430$mjVUK
     (case-lambda
       ((g$e$7377$mjVUK g$var$7378$mjVUK)
        ((g$parse$7175$mjVUK g$e$7377$mjVUK)
         (g$variable-continuator$7147$mjVUK g$var$7378$mjVUK)))))
   (g$convert->cps$7181$mjVUK
     g$convert->cps$7431$mjVUK
     (case-lambda
       ((g$e$7379$mjVUK g$var$7380$mjVUK)
        (g$fix-primitives$7179$mjVUK
          (g$parse->cps$7180$mjVUK g$e$7379$mjVUK g$var$7380$mjVUK))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$7432$mjVUK
     g$library-version-mismatch-warning$7533$mjVUK
     (case-lambda
       ((g$name$7507$mjVUK g$depname$7508$mjVUK g$filename$7509$mjVUK)
        (g$fprintf$7125$mjVUK
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$7507$mjVUK
          g$depname$7508$mjVUK
          g$filename$7509$mjVUK))))
   (g$file-locator-resolution-error$7433$mjVUK
     g$file-locator-resolution-error$7534$mjVUK
     (case-lambda
       ((g$libname$7510$mjVUK g$failed-list$7511$mjVUK)
        (letrec* ((g$8700$7512$mjVUK
                    (make-record-type-descriptor
                      '&library-resolution
                      &condition-rtd
                      'g$8703$mjVUK
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8702$7513$mjVUK '#f)
                  (g$8701$7514$mjVUK
                    (make-record-constructor-descriptor
                      g$8700$7512$mjVUK
                      &condition-rcd
                      g$8702$7513$mjVUK))
                  (g$8699$7515$mjVUK (record-predicate g$8700$7512$mjVUK))
                  (g$make-library-resolution-condition$7516$mjVUK
                    (record-constructor g$8701$7514$mjVUK))
                  (g$8697$7517$mjVUK (record-accessor g$8700$7512$mjVUK '0))
                  (g$8698$7518$mjVUK (record-accessor g$8700$7512$mjVUK '1))
                  (g$library-resolution-condition?$7519$mjVUK
                    (condition-predicate g$8700$7512$mjVUK))
                  (g$condition-library$7520$mjVUK
                    (condition-accessor g$8700$7512$mjVUK g$8697$7517$mjVUK))
                  (g$condition-files$7521$mjVUK
                    (condition-accessor g$8700$7512$mjVUK g$8698$7518$mjVUK)))
          (raise
            (condition
              (g$make-error$6392$mjVUK)
              (g$make-who-condition$6418$mjVUK 'expander)
              (g$make-message-condition$6372$mjVUK
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$7516$mjVUK
                g$libname$7510$mjVUK
                g$failed-list$7511$mjVUK)))))))
   (g$read-library-source-file$7434$mjVUK
     g$read-library-source-file$7535$mjVUK
     (case-lambda
       ((g$file-name$7522$mjVUK)
        (g$with-input-from-file$6952$mjVUK
          g$file-name$7522$mjVUK
          read-annotated))))
   (g$make-parameter$7435$mjVUK
     g$make-parameter$7536$mjVUK
     (case-lambda
       ((g$x$7523$mjVUK)
        (g$make-parameter$7435$mjVUK
          g$x$7523$mjVUK
          (case-lambda ((g$x$7524$mjVUK) g$x$7524$mjVUK))))
       ((g$x$7525$mjVUK g$fender$7526$mjVUK)
        (begin
          (if (not (procedure? g$fender$7526$mjVUK))
            (g$assertion-error$12179$mjVUK
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$7527$mjVUK)
              (case-lambda
                (() g$x$7527$mjVUK)
                ((g$v$7528$mjVUK)
                 (set! g$x$7527$mjVUK (g$fender$7526$mjVUK g$v$7528$mjVUK))))))
           (g$fender$7526$mjVUK g$x$7525$mjVUK))))))
   (g$file-options-constructor$7503$mjVUK
     g$file-options-constructor$7537$mjVUK
     (g$make-parameter$7435$mjVUK '#f))
   (g$file-options-spec$7504$mjVUK
     g$file-options-spec$7538$mjVUK
     (case-lambda
       ((g$x$7529$mjVUK)
        ((g$file-options-constructor$7503$mjVUK) g$x$7529$mjVUK))))
   (g$set-label-binding!$7505$mjVUK
     g$set-label-binding!$7539$mjVUK
     (case-lambda
       ((g$label$7530$mjVUK g$binding$7531$mjVUK)
        (set-symbol-value! g$label$7530$mjVUK g$binding$7531$mjVUK))))
   (g$label-binding$7506$mjVUK
     g$label-binding$7540$mjVUK
     (case-lambda
       ((g$label$7532$mjVUK)
        (if (symbol-bound? g$label$7532$mjVUK)
          (begin '#f (symbol-value g$label$7532$mjVUK))
          '#f)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7736$mjVUK
     g$current-primitive-locations$7781$mjVUK
     (g$make-parameter$7536$mjVUK
       (case-lambda ((g$x$7742$mjVUK) '#f))
       (case-lambda
         ((g$p$7743$mjVUK)
          (begin
            (if (not (procedure? g$p$7743$mjVUK))
              (g$assertion-error$12179$mjVUK
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7743$mjVUK)))))
   (g$mutable?$7737$mjVUK
     g$mutable?$7782$mjVUK
     (case-lambda
       ((g$x$7744$mjVUK)
        (letrec* ((g$simple?$7745$mjVUK
                    (case-lambda
                      ((g$x$7746$mjVUK)
                       ((case-lambda
                          ((g$t$7747$mjVUK)
                           (if g$t$7747$mjVUK
                             g$t$7747$mjVUK
                             ((case-lambda
                                ((g$t$7748$mjVUK)
                                 (if g$t$7748$mjVUK
                                   g$t$7748$mjVUK
                                   ((case-lambda
                                      ((g$t$7749$mjVUK)
                                       (if g$t$7749$mjVUK
                                         g$t$7749$mjVUK
                                         ((case-lambda
                                            ((g$t$7750$mjVUK)
                                             (if g$t$7750$mjVUK
                                               g$t$7750$mjVUK
                                               ((case-lambda
                                                  ((g$t$7751$mjVUK)
                                                   (if g$t$7751$mjVUK
                                                     g$t$7751$mjVUK
                                                     ((case-lambda
                                                        ((g$t$7752$mjVUK)
                                                         (if g$t$7752$mjVUK
                                                           g$t$7752$mjVUK
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7746$mjVUK)))))
                                                      (bytevector?
                                                        g$x$7746$mjVUK)))))
                                                (string? g$x$7746$mjVUK)))))
                                          (boolean? g$x$7746$mjVUK)))))
                                    (symbol? g$x$7746$mjVUK)))))
                              (char? g$x$7746$mjVUK)))))
                        (null? g$x$7746$mjVUK))))))
          (not (g$simple?$7745$mjVUK g$x$7744$mjVUK))))))
   (g$rewriter$7738$mjVUK
     g$rewriter$7783$mjVUK
     (case-lambda
       ((g$quote-hack?$7753$mjVUK)
        (letrec* ((g$f$7754$mjVUK
                    (case-lambda
                      ((g$x$7755$mjVUK)
                       (if (pair? g$x$7755$mjVUK)
                         ((case-lambda
                            ((g$t$7756$mjVUK)
                             (if (g$memv$5595$mjVUK g$t$7756$mjVUK '(quote))
                               (if (if g$quote-hack?$7753$mjVUK
                                     (begin
                                       '#f
                                       (g$mutable?$7737$mjVUK
                                         (g$cadr$5828$mjVUK g$x$7755$mjVUK)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7757$mjVUK)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7757$mjVUK
                                         (g$cadr$5828$mjVUK g$x$7755$mjVUK))
                                       g$g$7757$mjVUK)))
                                  (gensym))
                                 g$x$7755$mjVUK)
                               (if (g$memv$5595$mjVUK
                                     g$t$7756$mjVUK
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (g$map$5602$mjVUK
                                     (case-lambda
                                       ((g$x$7758$mjVUK)
                                        (cons
                                          (car g$x$7758$mjVUK)
                                          (g$map$5602$mjVUK
                                            g$f$7754$mjVUK
                                            (cdr g$x$7758$mjVUK)))))
                                     (cdr g$x$7755$mjVUK)))
                                 (if (g$memv$5595$mjVUK
                                       g$t$7756$mjVUK
                                       '(lambda))
                                   (g$cons*$5604$mjVUK
                                     'lambda
                                     (g$cadr$5828$mjVUK g$x$7755$mjVUK)
                                     (g$map$5602$mjVUK
                                       g$f$7754$mjVUK
                                       (g$cddr$5830$mjVUK g$x$7755$mjVUK)))
                                   (if (g$memv$5595$mjVUK
                                         g$t$7756$mjVUK
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$7759$mjVUK
                                           g$body*$7760$mjVUK)
                                         ((case-lambda
                                            ((g$lhs*$7761$mjVUK
                                               g$rhs*$7762$mjVUK)
                                             (g$cons*$5604$mjVUK
                                               'letrec
                                               (g$map$5602$mjVUK
                                                 list
                                                 g$lhs*$7761$mjVUK
                                                 (g$map$5602$mjVUK
                                                   g$f$7754$mjVUK
                                                   g$rhs*$7762$mjVUK))
                                               (g$map$5602$mjVUK
                                                 g$f$7754$mjVUK
                                                 g$body*$7760$mjVUK))))
                                          (g$map$5602$mjVUK
                                            car
                                            g$bindings$7759$mjVUK)
                                          (g$map$5602$mjVUK
                                            g$cadr$5828$mjVUK
                                            g$bindings$7759$mjVUK))))
                                      (g$cadr$5828$mjVUK g$x$7755$mjVUK)
                                      (g$cddr$5830$mjVUK g$x$7755$mjVUK))
                                     (if (g$memv$5595$mjVUK
                                           g$t$7756$mjVUK
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$7763$mjVUK
                                             g$body*$7764$mjVUK)
                                           ((case-lambda
                                              ((g$lhs*$7765$mjVUK
                                                 g$rhs*$7766$mjVUK)
                                               (g$cons*$5604$mjVUK
                                                 'letrec*
                                                 (g$map$5602$mjVUK
                                                   list
                                                   g$lhs*$7765$mjVUK
                                                   (g$map$5602$mjVUK
                                                     g$f$7754$mjVUK
                                                     g$rhs*$7766$mjVUK))
                                                 (g$map$5602$mjVUK
                                                   g$f$7754$mjVUK
                                                   g$body*$7764$mjVUK))))
                                            (g$map$5602$mjVUK
                                              car
                                              g$bindings$7763$mjVUK)
                                            (g$map$5602$mjVUK
                                              g$cadr$5828$mjVUK
                                              g$bindings$7763$mjVUK))))
                                        (g$cadr$5828$mjVUK g$x$7755$mjVUK)
                                        (g$cddr$5830$mjVUK g$x$7755$mjVUK))
                                       (if (g$memv$5595$mjVUK
                                             g$t$7756$mjVUK
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$7767$mjVUK g$x$7768$mjVUK)
                                             ((case-lambda
                                                ((g$bindings$7769$mjVUK
                                                   g$body*$7770$mjVUK)
                                                 ((case-lambda
                                                    ((g$lhs*$7771$mjVUK
                                                       g$lhs**$7772$mjVUK
                                                       g$rhs*$7773$mjVUK)
                                                     (g$cons*$5604$mjVUK
                                                       'library-letrec*
                                                       g$name$7767$mjVUK
                                                       (g$map$5602$mjVUK
                                                         list
                                                         g$lhs*$7771$mjVUK
                                                         g$lhs**$7772$mjVUK
                                                         (g$map$5602$mjVUK
                                                           g$f$7754$mjVUK
                                                           g$rhs*$7773$mjVUK))
                                                       (g$map$5602$mjVUK
                                                         g$f$7754$mjVUK
                                                         g$body*$7770$mjVUK))))
                                                  (g$map$5602$mjVUK
                                                    car
                                                    g$bindings$7769$mjVUK)
                                                  (g$map$5602$mjVUK
                                                    g$cadr$5828$mjVUK
                                                    g$bindings$7769$mjVUK)
                                                  (g$map$5602$mjVUK
                                                    g$caddr$5834$mjVUK
                                                    g$bindings$7769$mjVUK))))
                                              (g$cadr$5828$mjVUK g$x$7768$mjVUK)
                                              (g$cddr$5830$mjVUK
                                                g$x$7768$mjVUK))))
                                          (g$cadr$5828$mjVUK g$x$7755$mjVUK)
                                          (cdr g$x$7755$mjVUK))
                                         (if (g$memv$5595$mjVUK
                                               g$t$7756$mjVUK
                                               '(begin))
                                           (cons
                                             'begin
                                             (g$map$5602$mjVUK
                                               g$f$7754$mjVUK
                                               (cdr g$x$7755$mjVUK)))
                                           (if (g$memv$5595$mjVUK
                                                 g$t$7756$mjVUK
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5828$mjVUK
                                                 g$x$7755$mjVUK)
                                               (g$f$7754$mjVUK
                                                 (g$caddr$5834$mjVUK
                                                   g$x$7755$mjVUK)))
                                             (if (g$memv$5595$mjVUK
                                                   g$t$7756$mjVUK
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$7774$mjVUK)
                                                   ((case-lambda
                                                      ((g$t$7775$mjVUK)
                                                       (if g$t$7775$mjVUK
                                                         ((case-lambda
                                                            ((g$loc$7776$mjVUK)
                                                             g$loc$7776$mjVUK))
                                                          g$t$7775$mjVUK)
                                                         g$op$7774$mjVUK)))
                                                    ((g$current-primitive-locations$7736$mjVUK)
                                                     g$op$7774$mjVUK))))
                                                (g$cadr$5828$mjVUK
                                                  g$x$7755$mjVUK))
                                               (if (g$memv$5595$mjVUK
                                                     g$t$7756$mjVUK
                                                     '(define))
                                                 g$x$7755$mjVUK
                                                 (if (list? g$x$7755$mjVUK)
                                                   (g$map$5602$mjVUK
                                                     g$f$7754$mjVUK
                                                     g$x$7755$mjVUK)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7755$mjVUK
                                                     (list?
                                                       g$x$7755$mjVUK)))))))))))))))
                          (car g$x$7755$mjVUK))
                         g$x$7755$mjVUK)))))
          g$f$7754$mjVUK))))
   (g$expanded->core$7739$mjVUK
     g$expanded->core$7784$mjVUK
     (case-lambda
       ((g$x$7777$mjVUK) ((g$rewriter$7738$mjVUK '#t) g$x$7777$mjVUK))))
   (g$compile-core-expr$7740$mjVUK
     g$compile-core-expr$7785$mjVUK
     (case-lambda
       ((g$x$7778$mjVUK) ((g$rewriter$7738$mjVUK '#f) g$x$7778$mjVUK))))
   (g$compile-core-expr-to-port$7741$mjVUK
     g$compile-core-expr-to-port$7786$mjVUK
     (case-lambda
       ((g$x$7779$mjVUK g$p$7780$mjVUK)
        (g$pretty-print$7735$mjVUK
          ((g$rewriter$7738$mjVUK '#f) g$x$7779$mjVUK)
          g$p$7780$mjVUK)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7825$mjVUK
     g$make-collection$8028$mjVUK
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7886$mjVUK)
            (letrec* ((g$set-cons$7887$mjVUK
                        (case-lambda
                          ((g$x$7891$mjVUK g$ls$7892$mjVUK)
                           (if (g$memq$5594$mjVUK
                                 g$x$7891$mjVUK
                                 g$ls$7892$mjVUK)
                             g$ls$7892$mjVUK
                             (cons g$x$7891$mjVUK g$ls$7892$mjVUK))))))
              (case-lambda
                (() g$set$7886$mjVUK)
                ((g$x$7888$mjVUK)
                 (set! g$set$7886$mjVUK
                   (g$set-cons$7887$mjVUK g$x$7888$mjVUK g$set$7886$mjVUK)))
                ((g$x$7889$mjVUK g$del?$7890$mjVUK)
                 (if g$del?$7890$mjVUK
                   (set! g$set$7886$mjVUK
                     (g$remq$5609$mjVUK g$x$7889$mjVUK g$set$7886$mjVUK))
                   (set! g$set$7886$mjVUK
                     (g$set-cons$7887$mjVUK
                       g$x$7889$mjVUK
                       g$set$7886$mjVUK))))))))
         '()))))
   (g$current-library-collection$7826$mjVUK
     g$current-library-collection$8029$mjVUK
     (g$make-parameter$7536$mjVUK
       (g$make-collection$7825$mjVUK)
       (case-lambda
         ((g$x$7893$mjVUK)
          (begin
            (if (not (procedure? g$x$7893$mjVUK))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7893$mjVUK)
              (void))
            g$x$7893$mjVUK)))))
   (g$9019$7827$mjVUK
     g$9019$8030$mjVUK
     (make-record-type-descriptor
       'library
       '#f
       'g$9022$mjVUK
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9021$7828$mjVUK g$9021$8031$mjVUK '#f)
   (g$9020$7829$mjVUK
     g$9020$8032$mjVUK
     (make-record-constructor-descriptor
       g$9019$7827$mjVUK
       '#f
       g$9021$7828$mjVUK))
   (g$library?$7830$mjVUK
     g$library?$8033$mjVUK
     (record-predicate g$9019$7827$mjVUK))
   (g$make-library$7831$mjVUK
     g$make-library$8034$mjVUK
     (record-constructor g$9020$7829$mjVUK))
   (g$library-id$7832$mjVUK
     g$library-id$8035$mjVUK
     (record-accessor g$9019$7827$mjVUK '0))
   (g$library-name$7833$mjVUK
     g$library-name$8036$mjVUK
     (record-accessor g$9019$7827$mjVUK '1))
   (g$library-version$7834$mjVUK
     g$library-version$8037$mjVUK
     (record-accessor g$9019$7827$mjVUK '2))
   (g$library-imp*$7835$mjVUK
     g$library-imp*$8038$mjVUK
     (record-accessor g$9019$7827$mjVUK '3))
   (g$library-vis*$7836$mjVUK
     g$library-vis*$8039$mjVUK
     (record-accessor g$9019$7827$mjVUK '4))
   (g$library-inv*$7837$mjVUK
     g$library-inv*$8040$mjVUK
     (record-accessor g$9019$7827$mjVUK '5))
   (g$library-subst$7838$mjVUK
     g$library-subst$8041$mjVUK
     (record-accessor g$9019$7827$mjVUK '6))
   (g$library-env$7839$mjVUK
     g$library-env$8042$mjVUK
     (record-accessor g$9019$7827$mjVUK '7))
   (g$library-visit-state$7840$mjVUK
     g$library-visit-state$8043$mjVUK
     (record-accessor g$9019$7827$mjVUK '8))
   (g$library-invoke-state$7841$mjVUK
     g$library-invoke-state$8044$mjVUK
     (record-accessor g$9019$7827$mjVUK '9))
   (g$library-visit-code$7842$mjVUK
     g$library-visit-code$8045$mjVUK
     (record-accessor g$9019$7827$mjVUK '10))
   (g$library-invoke-code$7843$mjVUK
     g$library-invoke-code$8046$mjVUK
     (record-accessor g$9019$7827$mjVUK '11))
   (g$library-visible?$7844$mjVUK
     g$library-visible?$8047$mjVUK
     (record-accessor g$9019$7827$mjVUK '12))
   (g$library-source-file-name$7845$mjVUK
     g$library-source-file-name$8048$mjVUK
     (record-accessor g$9019$7827$mjVUK '13))
   (g$set-library-id!$7846$mjVUK
     g$set-library-id!$8049$mjVUK
     (record-mutator g$9019$7827$mjVUK '0))
   (g$set-library-name!$7847$mjVUK
     g$set-library-name!$8050$mjVUK
     (record-mutator g$9019$7827$mjVUK '1))
   (g$set-library-version!$7848$mjVUK
     g$set-library-version!$8051$mjVUK
     (record-mutator g$9019$7827$mjVUK '2))
   (g$set-library-imp*!$7849$mjVUK
     g$set-library-imp*!$8052$mjVUK
     (record-mutator g$9019$7827$mjVUK '3))
   (g$set-library-vis*!$7850$mjVUK
     g$set-library-vis*!$8053$mjVUK
     (record-mutator g$9019$7827$mjVUK '4))
   (g$set-library-inv*!$7851$mjVUK
     g$set-library-inv*!$8054$mjVUK
     (record-mutator g$9019$7827$mjVUK '5))
   (g$set-library-subst!$7852$mjVUK
     g$set-library-subst!$8055$mjVUK
     (record-mutator g$9019$7827$mjVUK '6))
   (g$set-library-env!$7853$mjVUK
     g$set-library-env!$8056$mjVUK
     (record-mutator g$9019$7827$mjVUK '7))
   (g$set-library-visit-state!$7854$mjVUK
     g$set-library-visit-state!$8057$mjVUK
     (record-mutator g$9019$7827$mjVUK '8))
   (g$set-library-invoke-state!$7855$mjVUK
     g$set-library-invoke-state!$8058$mjVUK
     (record-mutator g$9019$7827$mjVUK '9))
   (g$set-library-visit-code!$7856$mjVUK
     g$set-library-visit-code!$8059$mjVUK
     (record-mutator g$9019$7827$mjVUK '10))
   (g$set-library-invoke-code!$7857$mjVUK
     g$set-library-invoke-code!$8060$mjVUK
     (record-mutator g$9019$7827$mjVUK '11))
   (g$set-library-visible?!$7858$mjVUK
     g$set-library-visible?!$8061$mjVUK
     (record-mutator g$9019$7827$mjVUK '12))
   (g$set-library-source-file-name!$7859$mjVUK
     g$set-library-source-file-name!$8062$mjVUK
     (record-mutator g$9019$7827$mjVUK '13))
   (g$rp$7860$mjVUK
     g$rp$8063$mjVUK
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7894$mjVUK g$p$7895$mjVUK g$wr$7896$mjVUK)
          (begin
            (if (not (g$library?$7830$mjVUK g$x$7894$mjVUK))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$7126$mjVUK
                '"#<library ~s>"
                (if (null? (g$library-version$7834$mjVUK g$x$7894$mjVUK))
                  (g$library-name$7833$mjVUK g$x$7894$mjVUK)
                  (append
                    (g$library-name$7833$mjVUK g$x$7894$mjVUK)
                    (list (g$library-version$7834$mjVUK g$x$7894$mjVUK)))))
              g$p$7895$mjVUK))))))
   (g$find-dependencies$7861$mjVUK
     g$find-dependencies$8064$mjVUK
     (case-lambda
       ((g$ls$7897$mjVUK)
        (if (null? g$ls$7897$mjVUK)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7862$mjVUK
     g$find-library-by$8065$mjVUK
     (case-lambda
       ((g$pred$7898$mjVUK)
        ((letrec ((g$f$7899$mjVUK
                    (case-lambda
                      ((g$ls$7900$mjVUK)
                       (if (null? g$ls$7900$mjVUK)
                         '#f
                         (if (g$pred$7898$mjVUK (car g$ls$7900$mjVUK))
                           (car g$ls$7900$mjVUK)
                           (g$f$7899$mjVUK (cdr g$ls$7900$mjVUK))))))))
           g$f$7899$mjVUK)
         ((g$current-library-collection$7826$mjVUK))))))
   (g$library-path$7863$mjVUK
     g$library-path$8066$mjVUK
     (g$make-parameter$7536$mjVUK
       '(".")
       (case-lambda
         ((g$x$7901$mjVUK)
          (if (if (list? g$x$7901$mjVUK)
                (begin '#f (g$for-all$5600$mjVUK string? g$x$7901$mjVUK))
                '#f)
            (g$map$5602$mjVUK
              (case-lambda ((g$x$7902$mjVUK) g$x$7902$mjVUK))
              g$x$7901$mjVUK)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7901$mjVUK))))))
   (g$library-extensions$7864$mjVUK
     g$library-extensions$8067$mjVUK
     (g$make-parameter$7536$mjVUK
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7903$mjVUK)
          (if (if (list? g$x$7903$mjVUK)
                (begin '#f (g$for-all$5600$mjVUK string? g$x$7903$mjVUK))
                '#f)
            (g$map$5602$mjVUK
              (case-lambda ((g$x$7904$mjVUK) g$x$7904$mjVUK))
              g$x$7903$mjVUK)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7903$mjVUK))))))
   (g$library-name->file-name$7865$mjVUK
     g$library-name->file-name$8068$mjVUK
     (case-lambda
       ((g$x$7905$mjVUK)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6903$mjVUK)))
          (case-lambda
            ((g$p$7908$mjVUK g$extract$7909$mjVUK)
             ((case-lambda
                ((g$extract$7910$mjVUK g$p$7911$mjVUK)
                 (letrec* ((g$display-hex$7912$mjVUK
                             (case-lambda
                               ((g$n$7920$mjVUK)
                                (if (<= '0 g$n$7920$mjVUK '9)
                                  (display g$n$7920$mjVUK g$p$7911$mjVUK)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7920$mjVUK '10)))
                                    g$p$7911$mjVUK))))))
                   (begin
                     ((letrec ((g$f$7913$mjVUK
                                 (case-lambda
                                   ((g$ls$7914$mjVUK)
                                    (if (not (null? g$ls$7914$mjVUK))
                                      (begin
                                        (display '"/" g$p$7911$mjVUK)
                                        (g$for-each$5603$mjVUK
                                          (case-lambda
                                            ((g$c$7915$mjVUK)
                                             (if ((case-lambda
                                                    ((g$t$7916$mjVUK)
                                                     (if g$t$7916$mjVUK
                                                       g$t$7916$mjVUK
                                                       ((case-lambda
                                                          ((g$t$7917$mjVUK)
                                                           (if g$t$7917$mjVUK
                                                             g$t$7917$mjVUK
                                                             ((case-lambda
                                                                ((g$t$7918$mjVUK)
                                                                 (if g$t$7918$mjVUK
                                                                   g$t$7918$mjVUK
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5595$mjVUK
                                                                       g$c$7915$mjVUK
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5874$mjVUK
                                                                '#\0
                                                                g$c$7915$mjVUK
                                                                '#\9)))))
                                                        (g$char<=?$5874$mjVUK
                                                          '#\A
                                                          g$c$7915$mjVUK
                                                          '#\Z)))))
                                                  (g$char<=?$5874$mjVUK
                                                    '#\a
                                                    g$c$7915$mjVUK
                                                    '#\z))
                                               (display
                                                 g$c$7915$mjVUK
                                                 g$p$7911$mjVUK)
                                               (begin
                                                 (display '"%" g$p$7911$mjVUK)
                                                 ((case-lambda
                                                    ((g$n$7919$mjVUK)
                                                     (begin
                                                       (g$display-hex$7912$mjVUK
                                                         (g$quotient$6486$mjVUK
                                                           g$n$7919$mjVUK
                                                           '16))
                                                       (g$display-hex$7912$mjVUK
                                                         (g$remainder$6487$mjVUK
                                                           g$n$7919$mjVUK
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7915$mjVUK))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7914$mjVUK))))
                                        (g$f$7913$mjVUK (cdr g$ls$7914$mjVUK)))
                                      (void))))))
                        g$f$7913$mjVUK)
                      g$x$7905$mjVUK)
                     (g$extract$7910$mjVUK)))))
              g$extract$7909$mjVUK
              g$p$7908$mjVUK)))))))
   (g$file-locator$7866$mjVUK
     g$file-locator$8069$mjVUK
     (g$make-parameter$7536$mjVUK
       (case-lambda
         ((g$x$7921$mjVUK)
          ((case-lambda
             ((g$str$7922$mjVUK)
              ((letrec ((g$f$7923$mjVUK
                          (case-lambda
                            ((g$ls$7924$mjVUK
                               g$exts$7925$mjVUK
                               g$failed-list$7926$mjVUK)
                             (if (null? g$ls$7924$mjVUK)
                               (g$file-locator-resolution-error$7534$mjVUK
                                 g$x$7921$mjVUK
                                 (reverse g$failed-list$7926$mjVUK))
                               (if (null? g$exts$7925$mjVUK)
                                 (g$f$7923$mjVUK
                                   (cdr g$ls$7924$mjVUK)
                                   (g$library-extensions$7864$mjVUK)
                                   g$failed-list$7926$mjVUK)
                                 ((case-lambda
                                    ((g$name$7927$mjVUK)
                                     (if (g$file-exists?$6123$mjVUK
                                           g$name$7927$mjVUK)
                                       g$name$7927$mjVUK
                                       (g$f$7923$mjVUK
                                         g$ls$7924$mjVUK
                                         (cdr g$exts$7925$mjVUK)
                                         (cons
                                           g$name$7927$mjVUK
                                           g$failed-list$7926$mjVUK)))))
                                  (string-append
                                    (car g$ls$7924$mjVUK)
                                    g$str$7922$mjVUK
                                    (car g$exts$7925$mjVUK)))))))))
                 g$f$7923$mjVUK)
               (g$library-path$7863$mjVUK)
               (g$library-extensions$7864$mjVUK)
               '())))
           (g$library-name->file-name$7865$mjVUK g$x$7921$mjVUK))))
       (case-lambda
         ((g$f$7928$mjVUK)
          (if (procedure? g$f$7928$mjVUK)
            g$f$7928$mjVUK
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7928$mjVUK))))))
   (g$serialize-all$7867$mjVUK
     g$serialize-all$8070$mjVUK
     (case-lambda
       ((g$serialize$7929$mjVUK g$compile$7930$mjVUK)
        (letrec* ((g$library-desc$7931$mjVUK
                    (case-lambda
                      ((g$x$7933$mjVUK)
                       (list
                         (g$library-id$7832$mjVUK g$x$7933$mjVUK)
                         (g$library-name$7833$mjVUK g$x$7933$mjVUK))))))
          (g$for-each$5603$mjVUK
            (case-lambda
              ((g$x$7932$mjVUK)
               (if (g$library-source-file-name$7845$mjVUK g$x$7932$mjVUK)
                 (g$serialize$7929$mjVUK
                   (g$library-source-file-name$7845$mjVUK g$x$7932$mjVUK)
                   (list
                     (g$library-id$7832$mjVUK g$x$7932$mjVUK)
                     (g$library-name$7833$mjVUK g$x$7932$mjVUK)
                     (g$library-version$7834$mjVUK g$x$7932$mjVUK)
                     (g$map$5602$mjVUK
                       g$library-desc$7931$mjVUK
                       (g$library-imp*$7835$mjVUK g$x$7932$mjVUK))
                     (g$map$5602$mjVUK
                       g$library-desc$7931$mjVUK
                       (g$library-vis*$7836$mjVUK g$x$7932$mjVUK))
                     (g$map$5602$mjVUK
                       g$library-desc$7931$mjVUK
                       (g$library-inv*$7837$mjVUK g$x$7932$mjVUK))
                     (g$library-subst$7838$mjVUK g$x$7932$mjVUK)
                     (g$library-env$7839$mjVUK g$x$7932$mjVUK)
                     (g$compile$7930$mjVUK
                       (g$library-visit-code$7842$mjVUK g$x$7932$mjVUK))
                     (g$compile$7930$mjVUK
                       (g$library-invoke-code$7843$mjVUK g$x$7932$mjVUK))
                     (g$library-visible?$7844$mjVUK g$x$7932$mjVUK)))
                 (void))))
            ((g$current-library-collection$7826$mjVUK)))))))
   (g$current-precompiled-library-loader$7868$mjVUK
     g$current-precompiled-library-loader$8071$mjVUK
     (g$make-parameter$7536$mjVUK
       (case-lambda ((g$filename$7934$mjVUK g$sk$7935$mjVUK) '#f))))
   (g$try-load-from-file$7869$mjVUK
     g$try-load-from-file$8072$mjVUK
     (case-lambda
       ((g$filename$7936$mjVUK)
        ((g$current-precompiled-library-loader$7868$mjVUK)
         g$filename$7936$mjVUK
         (case-lambda
           ((g$id$7937$mjVUK
              g$name$7938$mjVUK
              g$ver$7939$mjVUK
              g$imp*$7940$mjVUK
              g$vis*$7941$mjVUK
              g$inv*$7942$mjVUK
              g$exp-subst$7943$mjVUK
              g$exp-env$7944$mjVUK
              g$visit-proc$7945$mjVUK
              g$invoke-proc$7946$mjVUK
              g$visible?$7947$mjVUK)
            ((letrec ((g$f$7948$mjVUK
                        (case-lambda
                          ((g$deps$7949$mjVUK)
                           (if (null? g$deps$7949$mjVUK)
                             (begin
                               (g$install-library$7879$mjVUK
                                 g$id$7937$mjVUK
                                 g$name$7938$mjVUK
                                 g$ver$7939$mjVUK
                                 g$imp*$7940$mjVUK
                                 g$vis*$7941$mjVUK
                                 g$inv*$7942$mjVUK
                                 g$exp-subst$7943$mjVUK
                                 g$exp-env$7944$mjVUK
                                 g$visit-proc$7945$mjVUK
                                 g$invoke-proc$7946$mjVUK
                                 '#f
                                 '#f
                                 g$visible?$7947$mjVUK
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7950$mjVUK)
                                 ((case-lambda
                                    ((g$label$7951$mjVUK g$dname$7952$mjVUK)
                                     ((case-lambda
                                        ((g$l$7953$mjVUK)
                                         (if (if (g$library?$7830$mjVUK
                                                   g$l$7953$mjVUK)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7951$mjVUK
                                                      (g$library-id$7832$mjVUK
                                                        g$l$7953$mjVUK)))
                                               '#f)
                                           (g$f$7948$mjVUK
                                             (cdr g$deps$7949$mjVUK))
                                           (begin
                                             (g$library-version-mismatch-warning$7533$mjVUK
                                               g$name$7938$mjVUK
                                               g$dname$7952$mjVUK
                                               g$filename$7936$mjVUK)
                                             '#f))))
                                      (g$find-library-by-name$7874$mjVUK
                                        g$dname$7952$mjVUK))))
                                  (car g$d$7950$mjVUK)
                                  (g$cadr$5828$mjVUK g$d$7950$mjVUK))))
                              (car g$deps$7949$mjVUK)))))))
               g$f$7948$mjVUK)
             (append g$imp*$7940$mjVUK g$vis*$7941$mjVUK g$inv*$7942$mjVUK)))
           (g$others$7954$mjVUK '#f))))))
   (g$library-loader$7870$mjVUK
     g$library-loader$8073$mjVUK
     (g$make-parameter$7536$mjVUK
       (case-lambda
         ((g$x$7955$mjVUK)
          ((case-lambda
             ((g$file-name$7956$mjVUK)
              (if (not g$file-name$7956$mjVUK)
                (assertion-violation '#f '"cannot file library" g$x$7955$mjVUK)
                ((case-lambda
                   ((g$t$7957$mjVUK)
                    (if g$t$7957$mjVUK
                      g$t$7957$mjVUK
                      (begin
                        '#f
                        ((g$current-library-expander$7871$mjVUK)
                         (g$read-library-source-file$7535$mjVUK
                           g$file-name$7956$mjVUK)
                         g$file-name$7956$mjVUK
                         (case-lambda
                           ((g$name$7958$mjVUK)
                            (if (not (equal? g$name$7958$mjVUK g$x$7955$mjVUK))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6903$mjVUK)))
                                  (case-lambda
                                    ((g$p$7961$mjVUK g$e$7962$mjVUK)
                                     ((case-lambda
                                        ((g$e$7963$mjVUK g$p$7964$mjVUK)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7964$mjVUK)
                                           (write g$x$7955$mjVUK g$p$7964$mjVUK)
                                           (display '" in file " g$p$7964$mjVUK)
                                           (display
                                             g$file-name$7956$mjVUK
                                             g$p$7964$mjVUK)
                                           (display '", found " g$p$7964$mjVUK)
                                           (write
                                             g$name$7958$mjVUK
                                             g$p$7964$mjVUK)
                                           (display '" instead" g$p$7964$mjVUK)
                                           (g$e$7963$mjVUK))))
                                      g$e$7962$mjVUK
                                      g$p$7961$mjVUK)))))
                              (void)))))))))
                 (g$try-load-from-file$7869$mjVUK g$file-name$7956$mjVUK)))))
           ((g$file-locator$7866$mjVUK) g$x$7955$mjVUK))))
       (case-lambda
         ((g$f$7965$mjVUK)
          (if (procedure? g$f$7965$mjVUK)
            g$f$7965$mjVUK
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7965$mjVUK))))))
   (g$current-library-expander$7871$mjVUK
     g$current-library-expander$8074$mjVUK
     (g$make-parameter$7536$mjVUK
       (case-lambda
         ((g$x$7966$mjVUK)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7967$mjVUK)
          (if (procedure? g$f$7967$mjVUK)
            g$f$7967$mjVUK
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7967$mjVUK))))))
   (g$external-pending-libraries$7872$mjVUK
     g$external-pending-libraries$8075$mjVUK
     (g$make-parameter$7536$mjVUK '()))
   (g$find-external-library$7873$mjVUK
     g$find-external-library$8076$mjVUK
     (case-lambda
       ((g$name$7968$mjVUK)
        (begin
          (if (g$member$5596$mjVUK
                g$name$7968$mjVUK
                (g$external-pending-libraries$7872$mjVUK))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7968$mjVUK)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7971$mjVUK
                g$external-pending-libraries$7972$mjVUK)
              ((case-lambda
                 ((g$swap$7973$mjVUK)
                  (dynamic-wind
                    g$swap$7973$mjVUK
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7870$mjVUK) g$name$7968$mjVUK)
                         ((case-lambda
                            ((g$t$7974$mjVUK)
                             (if g$t$7974$mjVUK
                               g$t$7974$mjVUK
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7968$mjVUK)))))
                          (g$find-library-by$7862$mjVUK
                            (case-lambda
                              ((g$x$7975$mjVUK)
                               (equal?
                                 (g$library-name$7833$mjVUK g$x$7975$mjVUK)
                                 g$name$7968$mjVUK))))))))
                    g$swap$7973$mjVUK)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7976$mjVUK)
                      (begin
                        (g$external-pending-libraries$7971$mjVUK
                          g$external-pending-libraries$7972$mjVUK)
                        (set! g$external-pending-libraries$7972$mjVUK
                          g$t$7976$mjVUK))))
                   (g$external-pending-libraries$7971$mjVUK)))))))
           g$external-pending-libraries$7872$mjVUK
           (cons
             g$name$7968$mjVUK
             (g$external-pending-libraries$7872$mjVUK)))))))
   (g$find-library-by-name$7874$mjVUK
     g$find-library-by-name$8077$mjVUK
     (case-lambda
       ((g$name$7977$mjVUK)
        ((case-lambda
           ((g$t$7978$mjVUK)
            (if g$t$7978$mjVUK
              g$t$7978$mjVUK
              (begin
                '#f
                (g$find-external-library$7873$mjVUK g$name$7977$mjVUK)))))
         (g$find-library-by$7862$mjVUK
           (case-lambda
             ((g$x$7979$mjVUK)
              (equal?
                (g$library-name$7833$mjVUK g$x$7979$mjVUK)
                g$name$7977$mjVUK))))))))
   (g$uninstall-library$7875$mjVUK
     g$uninstall-library$8078$mjVUK
     (case-lambda
       ((g$name$7980$mjVUK g$err?$7981$mjVUK)
        (letrec* ((g$who$7982$mjVUK 'uninstall-library))
          ((case-lambda
             ((g$lib$7983$mjVUK)
              (begin
                (if (if g$err?$7981$mjVUK
                      (begin '#f (not g$lib$7983$mjVUK))
                      '#f)
                  (assertion-violation
                    g$who$7982$mjVUK
                    '"library not installed"
                    g$name$7980$mjVUK)
                  (void))
                ((g$current-library-collection$7826$mjVUK)
                 g$lib$7983$mjVUK
                 '#t))))
           (g$find-library-by$7862$mjVUK
             (case-lambda
               ((g$x$7984$mjVUK)
                (equal?
                  (g$library-name$7833$mjVUK g$x$7984$mjVUK)
                  g$name$7980$mjVUK)))))))
       ((g$name$7985$mjVUK)
        (g$uninstall-library$7875$mjVUK g$name$7985$mjVUK '#t))))
   (g$library-exists?$7876$mjVUK
     g$library-exists?$8079$mjVUK
     (case-lambda
       ((g$name$7986$mjVUK)
        (if (g$find-library-by$7862$mjVUK
              (case-lambda
                ((g$x$7987$mjVUK)
                 (equal?
                   (g$library-name$7833$mjVUK g$x$7987$mjVUK)
                   g$name$7986$mjVUK))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7877$mjVUK
     g$find-library-by-spec/die$8080$mjVUK
     (case-lambda
       ((g$spec$7988$mjVUK)
        ((case-lambda
           ((g$id$7989$mjVUK)
            ((case-lambda
               ((g$t$7990$mjVUK)
                (if g$t$7990$mjVUK
                  g$t$7990$mjVUK
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7988$mjVUK)))))
             (g$find-library-by$7862$mjVUK
               (case-lambda
                 ((g$x$7991$mjVUK)
                  (eq? g$id$7989$mjVUK
                       (g$library-id$7832$mjVUK g$x$7991$mjVUK))))))))
         (car g$spec$7988$mjVUK)))))
   (g$install-library-record$7878$mjVUK
     g$install-library-record$8081$mjVUK
     (case-lambda
       ((g$lib$7992$mjVUK)
        (begin
          ((case-lambda
             ((g$exp-env$7993$mjVUK)
              (g$for-each$5603$mjVUK
                (case-lambda
                  ((g$x$7994$mjVUK)
                   ((case-lambda
                      ((g$label$7995$mjVUK g$binding$7996$mjVUK)
                       ((case-lambda
                          ((g$binding$7997$mjVUK)
                           (g$set-label-binding!$7539$mjVUK
                             g$label$7995$mjVUK
                             g$binding$7997$mjVUK)))
                        ((case-lambda
                           ((g$t$7998$mjVUK)
                            (if (g$memv$5595$mjVUK g$t$7998$mjVUK '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7992$mjVUK
                                  (cdr g$binding$7996$mjVUK)))
                              (if (g$memv$5595$mjVUK
                                    g$t$7998$mjVUK
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7992$mjVUK
                                    (cdr g$binding$7996$mjVUK)))
                                (if (g$memv$5595$mjVUK
                                      g$t$7998$mjVUK
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7992$mjVUK
                                      (cdr g$binding$7996$mjVUK)))
                                  (if (g$memv$5595$mjVUK
                                        g$t$7998$mjVUK
                                        '(global-ctv))
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$7992$mjVUK
                                        (cdr g$binding$7996$mjVUK)))
                                    g$binding$7996$mjVUK))))))
                         (car g$binding$7996$mjVUK)))))
                    (car g$x$7994$mjVUK)
                    (cdr g$x$7994$mjVUK))))
                g$exp-env$7993$mjVUK)))
           (g$library-env$7839$mjVUK g$lib$7992$mjVUK))
          ((g$current-library-collection$7826$mjVUK) g$lib$7992$mjVUK)))))
   (g$install-library$7879$mjVUK
     g$install-library$8082$mjVUK
     (case-lambda
       ((g$id$7999$mjVUK
          g$name$8000$mjVUK
          g$ver$8001$mjVUK
          g$imp*$8002$mjVUK
          g$vis*$8003$mjVUK
          g$inv*$8004$mjVUK
          g$exp-subst$8005$mjVUK
          g$exp-env$8006$mjVUK
          g$visit-proc$8007$mjVUK
          g$invoke-proc$8008$mjVUK
          g$visit-code$8009$mjVUK
          g$invoke-code$8010$mjVUK
          g$visible?$8011$mjVUK
          g$source-file-name$8012$mjVUK)
        ((case-lambda
           ((g$imp-lib*$8013$mjVUK g$vis-lib*$8014$mjVUK g$inv-lib*$8015$mjVUK)
            (begin
              (if (not (if (symbol? g$id$7999$mjVUK)
                         (if (list? g$name$8000$mjVUK)
                           (begin '#f (list? g$ver$8001$mjVUK))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7999$mjVUK
                  g$name$8000$mjVUK
                  g$ver$8001$mjVUK)
                (void))
              (if (g$library-exists?$7876$mjVUK g$name$8000$mjVUK)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$8000$mjVUK)
                (void))
              ((case-lambda
                 ((g$lib$8016$mjVUK)
                  (g$install-library-record$7878$mjVUK g$lib$8016$mjVUK)))
               (g$make-library$7831$mjVUK
                 g$id$7999$mjVUK
                 g$name$8000$mjVUK
                 g$ver$8001$mjVUK
                 g$imp-lib*$8013$mjVUK
                 g$vis-lib*$8014$mjVUK
                 g$inv-lib*$8015$mjVUK
                 g$exp-subst$8005$mjVUK
                 g$exp-env$8006$mjVUK
                 g$visit-proc$8007$mjVUK
                 g$invoke-proc$8008$mjVUK
                 g$visit-code$8009$mjVUK
                 g$invoke-code$8010$mjVUK
                 g$visible?$8011$mjVUK
                 g$source-file-name$8012$mjVUK)))))
         (g$map$5602$mjVUK
           g$find-library-by-spec/die$7877$mjVUK
           g$imp*$8002$mjVUK)
         (g$map$5602$mjVUK
           g$find-library-by-spec/die$7877$mjVUK
           g$vis*$8003$mjVUK)
         (g$map$5602$mjVUK
           g$find-library-by-spec/die$7877$mjVUK
           g$inv*$8004$mjVUK)))))
   (g$imported-label->binding$7880$mjVUK
     g$imported-label->binding$8083$mjVUK
     (case-lambda
       ((g$lab$8017$mjVUK) (g$label-binding$7540$mjVUK g$lab$8017$mjVUK))))
   (g$invoke-library$7881$mjVUK
     g$invoke-library$8084$mjVUK
     (case-lambda
       ((g$lib$8018$mjVUK)
        ((case-lambda
           ((g$invoke$8019$mjVUK)
            (if (procedure? g$invoke$8019$mjVUK)
              (begin
                (g$set-library-invoke-state!$7855$mjVUK
                  g$lib$8018$mjVUK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$8018$mjVUK))))
                (g$for-each$5603$mjVUK
                  g$invoke-library$7881$mjVUK
                  (g$library-inv*$7837$mjVUK g$lib$8018$mjVUK))
                (g$set-library-invoke-state!$7855$mjVUK
                  g$lib$8018$mjVUK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$8018$mjVUK))))
                (g$invoke$8019$mjVUK)
                (g$set-library-invoke-state!$7855$mjVUK g$lib$8018$mjVUK '#t))
              (void))))
         (g$library-invoke-state$7841$mjVUK g$lib$8018$mjVUK)))))
   (g$visit-library$7882$mjVUK
     g$visit-library$8085$mjVUK
     (case-lambda
       ((g$lib$8020$mjVUK)
        ((case-lambda
           ((g$visit$8021$mjVUK)
            (if (procedure? g$visit$8021$mjVUK)
              (begin
                (g$set-library-visit-state!$7854$mjVUK
                  g$lib$8020$mjVUK
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$8020$mjVUK))))
                (g$for-each$5603$mjVUK
                  g$invoke-library$7881$mjVUK
                  (g$library-vis*$7836$mjVUK g$lib$8020$mjVUK))
                (g$set-library-visit-state!$7854$mjVUK
                  g$lib$8020$mjVUK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$8020$mjVUK))))
                (g$visit$8021$mjVUK)
                (g$set-library-visit-state!$7854$mjVUK g$lib$8020$mjVUK '#t))
              (void))))
         (g$library-visit-state$7840$mjVUK g$lib$8020$mjVUK)))))
   (g$invoke-library-by-spec$7883$mjVUK
     g$invoke-library-by-spec$8086$mjVUK
     (case-lambda
       ((g$spec$8022$mjVUK)
        (g$invoke-library$7881$mjVUK
          (g$find-library-by-spec/die$7877$mjVUK g$spec$8022$mjVUK)))))
   (g$installed-libraries$7884$mjVUK
     g$installed-libraries$8087$mjVUK
     (case-lambda
       ((g$all?$8023$mjVUK)
        ((letrec ((g$f$8024$mjVUK
                    (case-lambda
                      ((g$ls$8025$mjVUK)
                       (if (null? g$ls$8025$mjVUK)
                         '()
                         (if ((case-lambda
                                ((g$t$8026$mjVUK)
                                 (if g$t$8026$mjVUK
                                   g$t$8026$mjVUK
                                   (begin
                                     '#f
                                     (g$library-visible?$7844$mjVUK
                                       (car g$ls$8025$mjVUK))))))
                              g$all?$8023$mjVUK)
                           (cons
                             (g$library-name$7833$mjVUK (car g$ls$8025$mjVUK))
                             (g$f$8024$mjVUK (cdr g$ls$8025$mjVUK)))
                           (g$f$8024$mjVUK (cdr g$ls$8025$mjVUK))))))))
           g$f$8024$mjVUK)
         ((g$current-library-collection$7826$mjVUK))))
       (() (g$installed-libraries$7884$mjVUK '#f))))
   (g$library-spec$7885$mjVUK
     g$library-spec$8088$mjVUK
     (case-lambda
       ((g$x$8027$mjVUK)
        (begin
          (if (not (g$library?$7830$mjVUK g$x$8027$mjVUK))
            (assertion-violation 'library-spec '"not a library" g$x$8027$mjVUK)
            (void))
          (list
            (g$library-id$7832$mjVUK g$x$8027$mjVUK)
            (g$library-name$7833$mjVUK g$x$8027$mjVUK)
            (g$library-version$7834$mjVUK g$x$8027$mjVUK)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$8089$mjVUK
     g$build-global-define$8199$mjVUK
     (case-lambda ((g$x$8170$mjVUK) (g$build-void$8166$mjVUK))))
   (g$build-lambda$8138$mjVUK
     g$build-lambda$8200$mjVUK
     (case-lambda
       ((g$ae$8171$mjVUK g$vars$8172$mjVUK g$exp$8173$mjVUK)
        (list 'case-lambda (list g$vars$8172$mjVUK g$exp$8173$mjVUK)))))
   (g$build-case-lambda$8139$mjVUK
     g$build-case-lambda$8201$mjVUK
     (case-lambda
       ((g$ae$8174$mjVUK g$vars*$8175$mjVUK g$exp*$8176$mjVUK)
        (cons
          'case-lambda
          (g$map$5602$mjVUK list g$vars*$8175$mjVUK g$exp*$8176$mjVUK)))))
   (g$build-let$8140$mjVUK
     g$build-let$8202$mjVUK
     (case-lambda
       ((g$ae$8177$mjVUK g$lhs*$8178$mjVUK g$rhs*$8179$mjVUK g$body$8180$mjVUK)
        (cons
          (g$build-lambda$8138$mjVUK
            g$ae$8177$mjVUK
            g$lhs*$8178$mjVUK
            g$body$8180$mjVUK)
          g$rhs*$8179$mjVUK))))
   (g$build-sequence$8165$mjVUK
     g$build-sequence$8203$mjVUK
     (case-lambda
       ((g$ae$8181$mjVUK g$exps$8182$mjVUK)
        ((letrec ((g$loop$8183$mjVUK
                    (case-lambda
                      ((g$exps$8184$mjVUK)
                       (if (null? (cdr g$exps$8184$mjVUK))
                         (car g$exps$8184$mjVUK)
                         (if (equal?
                               (car g$exps$8184$mjVUK)
                               (g$build-void$8166$mjVUK))
                           (g$loop$8183$mjVUK (cdr g$exps$8184$mjVUK))
                           (cons 'begin g$exps$8184$mjVUK)))))))
           g$loop$8183$mjVUK)
         g$exps$8182$mjVUK))))
   (g$build-void$8166$mjVUK
     g$build-void$8204$mjVUK
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$8167$mjVUK
     g$build-letrec$8205$mjVUK
     (case-lambda
       ((g$ae$8185$mjVUK
          g$vars$8186$mjVUK
          g$val-exps$8187$mjVUK
          g$body-exp$8188$mjVUK)
        (if (null? g$vars$8186$mjVUK)
          g$body-exp$8188$mjVUK
          (list
            'letrec
            (g$map$5602$mjVUK list g$vars$8186$mjVUK g$val-exps$8187$mjVUK)
            g$body-exp$8188$mjVUK)))))
   (g$build-letrec*$8168$mjVUK
     g$build-letrec*$8206$mjVUK
     (case-lambda
       ((g$ae$8189$mjVUK
          g$vars$8190$mjVUK
          g$val-exps$8191$mjVUK
          g$body-exp$8192$mjVUK)
        (if (null? g$vars$8190$mjVUK)
          g$body-exp$8192$mjVUK
          (list
            'letrec*
            (g$map$5602$mjVUK list g$vars$8190$mjVUK g$val-exps$8191$mjVUK)
            g$body-exp$8192$mjVUK)))))
   (g$build-library-letrec*$8169$mjVUK
     g$build-library-letrec*$8207$mjVUK
     (case-lambda
       ((g$ae$8193$mjVUK
          g$name$8194$mjVUK
          g$vars$8195$mjVUK
          g$locs$8196$mjVUK
          g$val-exps$8197$mjVUK
          g$body-exp$8198$mjVUK)
        (list
          'library-letrec*
          g$name$8194$mjVUK
          (g$map$5602$mjVUK
            list
            g$vars$8195$mjVUK
            g$locs$8196$mjVUK
            g$val-exps$8197$mjVUK)
          g$body-exp$8198$mjVUK)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$8208$mjVUK
     g$set-cons$11919$mjVUK
     (case-lambda
       ((g$x$8674$mjVUK g$ls$8675$mjVUK)
        (if (g$memq$5594$mjVUK g$x$8674$mjVUK g$ls$8675$mjVUK)
          g$ls$8675$mjVUK
          (cons g$x$8674$mjVUK g$ls$8675$mjVUK)))))
   (g$set-union$8209$mjVUK
     g$set-union$11920$mjVUK
     (case-lambda
       ((g$ls1$8676$mjVUK g$ls2$8677$mjVUK)
        (if (null? g$ls1$8676$mjVUK)
          g$ls2$8677$mjVUK
          (if (g$memq$5594$mjVUK (car g$ls1$8676$mjVUK) g$ls2$8677$mjVUK)
            (g$set-union$8209$mjVUK (cdr g$ls1$8676$mjVUK) g$ls2$8677$mjVUK)
            (cons
              (car g$ls1$8676$mjVUK)
              (g$set-union$8209$mjVUK
                (cdr g$ls1$8676$mjVUK)
                g$ls2$8677$mjVUK)))))))
   (g$top-mark*$8211$mjVUK g$top-mark*$11921$mjVUK '(top))
   (g$top-marked?$8212$mjVUK
     g$top-marked?$11922$mjVUK
     (case-lambda
       ((g$m*$8678$mjVUK) (g$memq$5594$mjVUK 'top g$m*$8678$mjVUK))))
   (g$gen-lexical$8213$mjVUK
     g$gen-lexical$11923$mjVUK
     (case-lambda
       ((g$sym$8679$mjVUK)
        (if (symbol? g$sym$8679$mjVUK)
          (gensym g$sym$8679$mjVUK)
          (if (g$stx?$8246$mjVUK g$sym$8679$mjVUK)
            (g$gen-lexical$8213$mjVUK (g$id->sym$8275$mjVUK g$sym$8679$mjVUK))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8679$mjVUK))))))
   (g$gen-global$8214$mjVUK
     g$gen-global$11924$mjVUK
     (case-lambda
       ((g$x$8680$mjVUK) (g$gen-lexical$8213$mjVUK g$x$8680$mjVUK))))
   (g$gen-label$8215$mjVUK
     g$gen-label$11925$mjVUK
     (case-lambda ((g$_$8681$mjVUK) (gensym))))
   (g$gen-top-level-label$8216$mjVUK
     g$gen-top-level-label$11926$mjVUK
     (case-lambda
       ((g$id$8682$mjVUK g$rib$8683$mjVUK)
        (letrec* ((g$find$8684$mjVUK
                    (case-lambda
                      ((g$sym$8690$mjVUK
                         g$mark*$8691$mjVUK
                         g$sym*$8692$mjVUK
                         g$mark**$8693$mjVUK
                         g$label*$8694$mjVUK)
                       (if (pair? g$sym*$8692$mjVUK)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8690$mjVUK
                                        (car g$sym*$8692$mjVUK))
                                 (begin
                                   '#f
                                   (g$same-marks?$8276$mjVUK
                                     g$mark*$8691$mjVUK
                                     (car g$mark**$8693$mjVUK)))
                                 '#f)
                             (car g$label*$8694$mjVUK)
                             (g$find$8684$mjVUK
                               g$sym$8690$mjVUK
                               g$mark*$8691$mjVUK
                               (cdr g$sym*$8692$mjVUK)
                               (cdr g$mark**$8693$mjVUK)
                               (cdr g$label*$8694$mjVUK))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8685$mjVUK g$mark*$8686$mjVUK)
              ((case-lambda
                 ((g$sym*$8687$mjVUK)
                  ((case-lambda
                     ((g$t$8688$mjVUK)
                      (if g$t$8688$mjVUK
                        ((case-lambda
                           ((g$label$8689$mjVUK)
                            (if (g$imported-label->binding$8083$mjVUK
                                  g$label$8689$mjVUK)
                              (gensym)
                              g$label$8689$mjVUK)))
                         g$t$8688$mjVUK)
                        (gensym))))
                   (if (g$memq$5594$mjVUK
                         g$sym$8685$mjVUK
                         (g$rib-sym*$8224$mjVUK g$rib$8683$mjVUK))
                     (begin
                       '#f
                       (g$find$8684$mjVUK
                         g$sym$8685$mjVUK
                         g$mark*$8686$mjVUK
                         g$sym*$8687$mjVUK
                         (g$rib-mark**$8225$mjVUK g$rib$8683$mjVUK)
                         (g$rib-label*$8226$mjVUK g$rib$8683$mjVUK)))
                     '#f))))
               (g$rib-sym*$8224$mjVUK g$rib$8683$mjVUK))))
           (g$id->sym$8275$mjVUK g$id$8682$mjVUK)
           (g$stx-mark*$8249$mjVUK g$id$8682$mjVUK))))))
   (g$gen-define-label+loc$8217$mjVUK
     g$gen-define-label+loc$11927$mjVUK
     (case-lambda
       ((g$id$8695$mjVUK g$rib$8696$mjVUK g$sd?$8697$mjVUK)
        (if g$sd?$8697$mjVUK
          (values (gensym) (g$gen-lexical$8213$mjVUK g$id$8695$mjVUK))
          ((case-lambda
             ((g$env$8698$mjVUK)
              ((case-lambda
                 ((g$label$8699$mjVUK g$locs$8700$mjVUK)
                  (values
                    g$label$8699$mjVUK
                    ((case-lambda
                       ((g$t$8701$mjVUK)
                        (if g$t$8701$mjVUK
                          (cdr g$t$8701$mjVUK)
                          ((case-lambda
                             ((g$loc$8702$mjVUK)
                              (begin
                                (g$set-interaction-env-locs!$8636$mjVUK
                                  g$env$8698$mjVUK
                                  (cons
                                    (cons g$label$8699$mjVUK g$loc$8702$mjVUK)
                                    g$locs$8700$mjVUK))
                                g$loc$8702$mjVUK)))
                           (g$gen-lexical$8213$mjVUK g$id$8695$mjVUK)))))
                     (g$assq$5590$mjVUK
                       g$label$8699$mjVUK
                       g$locs$8700$mjVUK)))))
               (g$gen-top-level-label$8216$mjVUK
                 g$id$8695$mjVUK
                 g$rib$8696$mjVUK)
               (g$interaction-env-locs$8633$mjVUK g$env$8698$mjVUK))))
           (g$top-level-context$8673$mjVUK))))))
   (g$gen-define-label$8218$mjVUK
     g$gen-define-label$11928$mjVUK
     (case-lambda
       ((g$id$8703$mjVUK g$rib$8704$mjVUK g$sd?$8705$mjVUK)
        (if g$sd?$8705$mjVUK
          (gensym)
          (g$gen-top-level-label$8216$mjVUK
            g$id$8703$mjVUK
            g$rib$8704$mjVUK)))))
   (g$9411$8219$mjVUK
     g$9411$11929$mjVUK
     (make-record-type-descriptor
       'rib
       '#f
       'g$9414$mjVUK
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9413$8220$mjVUK g$9413$11930$mjVUK '#f)
   (g$9412$8221$mjVUK
     g$9412$11931$mjVUK
     (make-record-constructor-descriptor
       g$9411$8219$mjVUK
       '#f
       g$9413$8220$mjVUK))
   (g$rib?$8222$mjVUK
     g$rib?$11932$mjVUK
     (record-predicate g$9411$8219$mjVUK))
   (g$make-rib$8223$mjVUK
     g$make-rib$11933$mjVUK
     (record-constructor g$9412$8221$mjVUK))
   (g$rib-sym*$8224$mjVUK
     g$rib-sym*$11934$mjVUK
     (record-accessor g$9411$8219$mjVUK '0))
   (g$rib-mark**$8225$mjVUK
     g$rib-mark**$11935$mjVUK
     (record-accessor g$9411$8219$mjVUK '1))
   (g$rib-label*$8226$mjVUK
     g$rib-label*$11936$mjVUK
     (record-accessor g$9411$8219$mjVUK '2))
   (g$rib-sealed/freq$8227$mjVUK
     g$rib-sealed/freq$11937$mjVUK
     (record-accessor g$9411$8219$mjVUK '3))
   (g$rib-cache$8228$mjVUK
     g$rib-cache$11938$mjVUK
     (record-accessor g$9411$8219$mjVUK '4))
   (g$set-rib-sym*!$8229$mjVUK
     g$set-rib-sym*!$11939$mjVUK
     (record-mutator g$9411$8219$mjVUK '0))
   (g$set-rib-mark**!$8230$mjVUK
     g$set-rib-mark**!$11940$mjVUK
     (record-mutator g$9411$8219$mjVUK '1))
   (g$set-rib-label*!$8231$mjVUK
     g$set-rib-label*!$11941$mjVUK
     (record-mutator g$9411$8219$mjVUK '2))
   (g$set-rib-sealed/freq!$8232$mjVUK
     g$set-rib-sealed/freq!$11942$mjVUK
     (record-mutator g$9411$8219$mjVUK '3))
   (g$set-rib-cache!$8233$mjVUK
     g$set-rib-cache!$11943$mjVUK
     (record-mutator g$9411$8219$mjVUK '4))
   (g$make-empty-rib$8234$mjVUK
     g$make-empty-rib$11944$mjVUK
     (case-lambda (() (g$make-rib$8223$mjVUK '() '() '() '#f '#f))))
   (g$make-cache-rib$8235$mjVUK
     g$make-cache-rib$11945$mjVUK
     (case-lambda
       (()
        (g$make-rib$8223$mjVUK
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$6105$mjVUK)))))
   (g$find-label$8236$mjVUK
     g$find-label$11946$mjVUK
     (case-lambda
       ((g$rib$8706$mjVUK g$sym$8707$mjVUK g$mark*$8708$mjVUK)
        ((case-lambda
           ((g$ht$8709$mjVUK)
            (if g$ht$8709$mjVUK
              (begin
                '#f
                ((case-lambda
                   ((g$cv$8710$mjVUK)
                    ((case-lambda
                       ((g$t$8711$mjVUK)
                        (if g$t$8711$mjVUK (cdr g$t$8711$mjVUK) '#f)))
                     (if g$cv$8710$mjVUK
                       (begin
                         '#f
                         (g$assp$5593$mjVUK
                           (case-lambda
                             ((g$m$8712$mjVUK)
                              (g$same-marks?$8276$mjVUK
                                g$mark*$8708$mjVUK
                                g$m$8712$mjVUK)))
                           g$cv$8710$mjVUK))
                       '#f))))
                 (g$hashtable-ref$6108$mjVUK
                   g$ht$8709$mjVUK
                   g$sym$8707$mjVUK
                   '#f)))
              '#f)))
         (g$rib-cache$8228$mjVUK g$rib$8706$mjVUK)))))
   (g$extend-rib!$8237$mjVUK
     g$extend-rib!$11947$mjVUK
     (case-lambda
       ((g$rib$8713$mjVUK g$id$8714$mjVUK g$label$8715$mjVUK g$sd?$8716$mjVUK)
        (letrec* ((g$find$8717$mjVUK
                    (case-lambda
                      ((g$sym$8726$mjVUK
                         g$mark*$8727$mjVUK
                         g$sym*$8728$mjVUK
                         g$mark**$8729$mjVUK
                         g$label*$8730$mjVUK)
                       (if (pair? g$sym*$8728$mjVUK)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8726$mjVUK
                                        (car g$sym*$8728$mjVUK))
                                 (begin
                                   '#f
                                   (g$same-marks?$8276$mjVUK
                                     g$mark*$8727$mjVUK
                                     (car g$mark**$8729$mjVUK)))
                                 '#f)
                             g$label*$8730$mjVUK
                             (g$find$8717$mjVUK
                               g$sym$8726$mjVUK
                               g$mark*$8727$mjVUK
                               (cdr g$sym*$8728$mjVUK)
                               (cdr g$mark**$8729$mjVUK)
                               (cdr g$label*$8730$mjVUK))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$8227$mjVUK g$rib$8713$mjVUK)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8713$mjVUK)
              (void))
            ((case-lambda
               ((g$sym$8718$mjVUK g$mark*$8719$mjVUK)
                ((case-lambda
                   ((g$sym*$8720$mjVUK)
                    ((case-lambda
                       ((g$t$8721$mjVUK)
                        (if g$t$8721$mjVUK
                          ((case-lambda
                             ((g$p$8722$mjVUK)
                              (if (not (eq? g$label$8715$mjVUK g$p$8722$mjVUK))
                                (g$syntax-violation$8665$mjVUK
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$8714$mjVUK)
                                (void))))
                           g$t$8721$mjVUK)
                          ((case-lambda
                             ((g$t$8723$mjVUK)
                              (if g$t$8723$mjVUK
                                ((case-lambda
                                   ((g$p$8724$mjVUK)
                                    (if (not (eq? g$label$8715$mjVUK
                                                  (car g$p$8724$mjVUK)))
                                      (if (not g$sd?$8716$mjVUK)
                                        (set-car!
                                          g$p$8724$mjVUK
                                          g$label$8715$mjVUK)
                                        (g$syntax-violation$8665$mjVUK
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$8714$mjVUK))
                                      (void))))
                                 g$t$8723$mjVUK)
                                (begin
                                  (if (g$rib-cache$8228$mjVUK g$rib$8713$mjVUK)
                                    (g$hashtable-update!$6112$mjVUK
                                      (g$rib-cache$8228$mjVUK g$rib$8713$mjVUK)
                                      g$sym$8718$mjVUK
                                      (case-lambda
                                        ((g$e$8725$mjVUK)
                                         (cons
                                           (cons
                                             g$mark*$8719$mjVUK
                                             g$label$8715$mjVUK)
                                           g$e$8725$mjVUK)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$8229$mjVUK
                                    g$rib$8713$mjVUK
                                    (cons g$sym$8718$mjVUK g$sym*$8720$mjVUK))
                                  (g$set-rib-mark**!$8230$mjVUK
                                    g$rib$8713$mjVUK
                                    (cons
                                      g$mark*$8719$mjVUK
                                      (g$rib-mark**$8225$mjVUK
                                        g$rib$8713$mjVUK)))
                                  (g$set-rib-label*!$8231$mjVUK
                                    g$rib$8713$mjVUK
                                    (cons
                                      g$label$8715$mjVUK
                                      (g$rib-label*$8226$mjVUK
                                        g$rib$8713$mjVUK)))))))
                           (if (g$memq$5594$mjVUK
                                 g$sym$8718$mjVUK
                                 (g$rib-sym*$8224$mjVUK g$rib$8713$mjVUK))
                             (begin
                               '#f
                               (g$find$8717$mjVUK
                                 g$sym$8718$mjVUK
                                 g$mark*$8719$mjVUK
                                 g$sym*$8720$mjVUK
                                 (g$rib-mark**$8225$mjVUK g$rib$8713$mjVUK)
                                 (g$rib-label*$8226$mjVUK g$rib$8713$mjVUK)))
                             '#f)))))
                     (g$find-label$8236$mjVUK
                       g$rib$8713$mjVUK
                       g$sym$8718$mjVUK
                       g$mark*$8719$mjVUK))))
                 (g$rib-sym*$8224$mjVUK g$rib$8713$mjVUK))))
             (g$id->sym$8275$mjVUK g$id$8714$mjVUK)
             (g$stx-mark*$8249$mjVUK g$id$8714$mjVUK)))))))
   (g$extend-rib/nc!$8238$mjVUK
     g$extend-rib/nc!$11948$mjVUK
     (case-lambda
       ((g$rib$8731$mjVUK g$id$8732$mjVUK g$label$8733$mjVUK)
        ((case-lambda
           ((g$sym$8734$mjVUK g$mark*$8735$mjVUK)
            ((case-lambda
               ((g$sym*$8736$mjVUK)
                (begin
                  (if (g$rib-cache$8228$mjVUK g$rib$8731$mjVUK)
                    (g$hashtable-update!$6112$mjVUK
                      (g$rib-cache$8228$mjVUK g$rib$8731$mjVUK)
                      g$sym$8734$mjVUK
                      (case-lambda
                        ((g$e$8737$mjVUK)
                         (cons
                           (cons g$mark*$8735$mjVUK g$label$8733$mjVUK)
                           g$e$8737$mjVUK)))
                      '())
                    (void))
                  (g$set-rib-sym*!$8229$mjVUK
                    g$rib$8731$mjVUK
                    (cons g$sym$8734$mjVUK g$sym*$8736$mjVUK))
                  (g$set-rib-mark**!$8230$mjVUK
                    g$rib$8731$mjVUK
                    (cons
                      g$mark*$8735$mjVUK
                      (g$rib-mark**$8225$mjVUK g$rib$8731$mjVUK)))
                  (g$set-rib-label*!$8231$mjVUK
                    g$rib$8731$mjVUK
                    (cons
                      g$label$8733$mjVUK
                      (g$rib-label*$8226$mjVUK g$rib$8731$mjVUK))))))
             (g$rib-sym*$8224$mjVUK g$rib$8731$mjVUK))))
         (g$id->sym$8275$mjVUK g$id$8732$mjVUK)
         (g$stx-mark*$8249$mjVUK g$id$8732$mjVUK)))))
   (g$make-rib-map$8239$mjVUK
     g$make-rib-map$11949$mjVUK
     (case-lambda
       ((g$sym*$8738$mjVUK)
        ((case-lambda
           ((g$ht$8739$mjVUK)
            ((letrec ((g$f$8740$mjVUK
                        (case-lambda
                          ((g$i$8741$mjVUK g$sym*$8742$mjVUK)
                           (if (null? g$sym*$8742$mjVUK)
                             g$ht$8739$mjVUK
                             (begin
                               (g$hashtable-update!$6112$mjVUK
                                 g$ht$8739$mjVUK
                                 (car g$sym*$8742$mjVUK)
                                 (case-lambda
                                   ((g$x$8743$mjVUK)
                                    (cons g$i$8741$mjVUK g$x$8743$mjVUK)))
                                 '())
                               (g$f$8740$mjVUK
                                 (+ g$i$8741$mjVUK '1)
                                 (cdr g$sym*$8742$mjVUK))))))))
               g$f$8740$mjVUK)
             '0
             g$sym*$8738$mjVUK)))
         (g$make-eq-hashtable$6105$mjVUK)))))
   (g$seal-rib!$8240$mjVUK
     g$seal-rib!$11950$mjVUK
     (case-lambda
       ((g$rib$8744$mjVUK)
        ((case-lambda
           ((g$sym*$8745$mjVUK)
            (if (not (null? g$sym*$8745$mjVUK))
              (begin
                (g$set-rib-sym*!$8229$mjVUK
                  g$rib$8744$mjVUK
                  (list->vector g$sym*$8745$mjVUK))
                (g$set-rib-mark**!$8230$mjVUK
                  g$rib$8744$mjVUK
                  (list->vector (g$rib-mark**$8225$mjVUK g$rib$8744$mjVUK)))
                (g$set-rib-label*!$8231$mjVUK
                  g$rib$8744$mjVUK
                  (list->vector (g$rib-label*$8226$mjVUK g$rib$8744$mjVUK)))
                (g$set-rib-sealed/freq!$8232$mjVUK
                  g$rib$8744$mjVUK
                  (g$make-rib-map$8239$mjVUK g$sym*$8745$mjVUK)))
              (void))))
         (g$rib-sym*$8224$mjVUK g$rib$8744$mjVUK)))))
   (g$unseal-rib!$8241$mjVUK
     g$unseal-rib!$11951$mjVUK
     (case-lambda
       ((g$rib$8746$mjVUK)
        (if (g$rib-sealed/freq$8227$mjVUK g$rib$8746$mjVUK)
          (begin
            (g$set-rib-sealed/freq!$8232$mjVUK g$rib$8746$mjVUK '#f)
            (g$set-rib-sym*!$8229$mjVUK
              g$rib$8746$mjVUK
              (vector->list (g$rib-sym*$8224$mjVUK g$rib$8746$mjVUK)))
            (g$set-rib-mark**!$8230$mjVUK
              g$rib$8746$mjVUK
              (vector->list (g$rib-mark**$8225$mjVUK g$rib$8746$mjVUK)))
            (g$set-rib-label*!$8231$mjVUK
              g$rib$8746$mjVUK
              (vector->list (g$rib-label*$8226$mjVUK g$rib$8746$mjVUK))))
          (void)))))
   (g$make-full-rib$8242$mjVUK
     g$make-full-rib$11952$mjVUK
     (case-lambda
       ((g$id*$8747$mjVUK g$label*$8748$mjVUK)
        ((case-lambda
           ((g$r$8749$mjVUK)
            (begin (g$seal-rib!$8240$mjVUK g$r$8749$mjVUK) g$r$8749$mjVUK)))
         (g$make-rib$8223$mjVUK
           (g$map$5602$mjVUK g$id->sym$8275$mjVUK g$id*$8747$mjVUK)
           (g$map$5602$mjVUK g$stx-mark*$8249$mjVUK g$id*$8747$mjVUK)
           g$label*$8748$mjVUK
           '#f
           '#f)))))
   (g$9442$8243$mjVUK
     g$9442$11953$mjVUK
     (make-record-type-descriptor
       'stx
       '#f
       'g$9445$mjVUK
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$9444$8244$mjVUK g$9444$11954$mjVUK '#f)
   (g$9443$8245$mjVUK
     g$9443$11955$mjVUK
     (make-record-constructor-descriptor
       g$9442$8243$mjVUK
       '#f
       g$9444$8244$mjVUK))
   (g$stx?$8246$mjVUK
     g$stx?$11956$mjVUK
     (record-predicate g$9442$8243$mjVUK))
   (g$make-stx$8247$mjVUK
     g$make-stx$11957$mjVUK
     (record-constructor g$9443$8245$mjVUK))
   (g$stx-expr$8248$mjVUK
     g$stx-expr$11958$mjVUK
     (record-accessor g$9442$8243$mjVUK '0))
   (g$stx-mark*$8249$mjVUK
     g$stx-mark*$11959$mjVUK
     (record-accessor g$9442$8243$mjVUK '1))
   (g$stx-subst*$8250$mjVUK
     g$stx-subst*$11960$mjVUK
     (record-accessor g$9442$8243$mjVUK '2))
   (g$stx-ae*$8251$mjVUK
     g$stx-ae*$11961$mjVUK
     (record-accessor g$9442$8243$mjVUK '3))
   (g$set-stx-expr!$8252$mjVUK
     g$set-stx-expr!$11962$mjVUK
     (record-mutator g$9442$8243$mjVUK '0))
   (g$set-stx-mark*!$8253$mjVUK
     g$set-stx-mark*!$11963$mjVUK
     (record-mutator g$9442$8243$mjVUK '1))
   (g$set-stx-subst*!$8254$mjVUK
     g$set-stx-subst*!$11964$mjVUK
     (record-mutator g$9442$8243$mjVUK '2))
   (g$set-stx-ae*!$8255$mjVUK
     g$set-stx-ae*!$11965$mjVUK
     (record-mutator g$9442$8243$mjVUK '3))
   (g$rp$8256$mjVUK
     g$rp$11966$mjVUK
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8750$mjVUK g$p$8751$mjVUK g$wr$8752$mjVUK)
          (begin
            (display '"#<syntax " g$p$8751$mjVUK)
            (write (g$stx->datum$8285$mjVUK g$x$8750$mjVUK) g$p$8751$mjVUK)
            ((case-lambda
               ((g$expr$8753$mjVUK)
                (if (annotation? g$expr$8753$mjVUK)
                  ((case-lambda
                     ((g$src$8754$mjVUK)
                      (if (pair? g$src$8754$mjVUK)
                        (begin
                          (display '" (" g$p$8751$mjVUK)
                          (display (cdr g$src$8754$mjVUK) g$p$8751$mjVUK)
                          (display '" of " g$p$8751$mjVUK)
                          (display (car g$src$8754$mjVUK) g$p$8751$mjVUK)
                          (display '")" g$p$8751$mjVUK))
                        (void))))
                   (annotation-source g$expr$8753$mjVUK))
                  (void))))
             (g$stx-expr$8248$mjVUK g$x$8750$mjVUK))
            (display '">" g$p$8751$mjVUK))))))
   (g$datum->stx$8257$mjVUK
     g$datum->stx$11967$mjVUK
     (case-lambda
       ((g$id$8755$mjVUK g$datum$8756$mjVUK)
        (g$make-stx$8247$mjVUK
          g$datum$8756$mjVUK
          (g$stx-mark*$8249$mjVUK g$id$8755$mjVUK)
          (g$stx-subst*$8250$mjVUK g$id$8755$mjVUK)
          (g$stx-ae*$8251$mjVUK g$id$8755$mjVUK)))))
   (g$gen-mark$8258$mjVUK
     g$gen-mark$11968$mjVUK
     (case-lambda (() (string '#\m))))
   (g$anti-mark$8259$mjVUK g$anti-mark$11969$mjVUK '#f)
   (g$anti-mark?$8260$mjVUK g$anti-mark?$11970$mjVUK not)
   (g$join-wraps$8261$mjVUK
     g$join-wraps$11971$mjVUK
     (case-lambda
       ((g$m1*$8757$mjVUK g$s1*$8758$mjVUK g$ae1*$8759$mjVUK g$e$8760$mjVUK)
        (letrec* ((g$cancel$8761$mjVUK
                    (case-lambda
                      ((g$ls1$8765$mjVUK g$ls2$8766$mjVUK)
                       ((letrec ((g$f$8767$mjVUK
                                   (case-lambda
                                     ((g$x$8768$mjVUK g$ls1$8769$mjVUK)
                                      (if (null? g$ls1$8769$mjVUK)
                                        (cdr g$ls2$8766$mjVUK)
                                        (cons
                                          g$x$8768$mjVUK
                                          (g$f$8767$mjVUK
                                            (car g$ls1$8769$mjVUK)
                                            (cdr g$ls1$8769$mjVUK))))))))
                          g$f$8767$mjVUK)
                        (car g$ls1$8765$mjVUK)
                        (cdr g$ls1$8765$mjVUK))))))
          ((case-lambda
             ((g$m2*$8762$mjVUK g$s2*$8763$mjVUK g$ae2*$8764$mjVUK)
              (if (if (not (null? g$m1*$8757$mjVUK))
                    (if (not (null? g$m2*$8762$mjVUK))
                      (begin
                        '#f
                        (g$anti-mark?$8260$mjVUK (car g$m2*$8762$mjVUK)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8761$mjVUK g$m1*$8757$mjVUK g$m2*$8762$mjVUK)
                  (g$cancel$8761$mjVUK g$s1*$8758$mjVUK g$s2*$8763$mjVUK)
                  (g$cancel$8761$mjVUK g$ae1*$8759$mjVUK g$ae2*$8764$mjVUK))
                (values
                  (append g$m1*$8757$mjVUK g$m2*$8762$mjVUK)
                  (append g$s1*$8758$mjVUK g$s2*$8763$mjVUK)
                  (append g$ae1*$8759$mjVUK g$ae2*$8764$mjVUK)))))
           (g$stx-mark*$8249$mjVUK g$e$8760$mjVUK)
           (g$stx-subst*$8250$mjVUK g$e$8760$mjVUK)
           (g$stx-ae*$8251$mjVUK g$e$8760$mjVUK))))))
   (g$mkstx$8262$mjVUK
     g$mkstx$11972$mjVUK
     (case-lambda
       ((g$e$8770$mjVUK g$m*$8771$mjVUK g$s*$8772$mjVUK g$ae*$8773$mjVUK)
        (if (if (g$stx?$8246$mjVUK g$e$8770$mjVUK)
              (begin '#f (not (g$top-marked?$8212$mjVUK g$m*$8771$mjVUK)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$8261$mjVUK
                 g$m*$8771$mjVUK
                 g$s*$8772$mjVUK
                 g$ae*$8773$mjVUK
                 g$e$8770$mjVUK)))
            (case-lambda
              ((g$m*$8777$mjVUK g$s*$8778$mjVUK g$ae*$8779$mjVUK)
               ((case-lambda
                  ((g$ae*$8780$mjVUK g$s*$8781$mjVUK g$m*$8782$mjVUK)
                   (g$make-stx$8247$mjVUK
                     (g$stx-expr$8248$mjVUK g$e$8770$mjVUK)
                     g$m*$8782$mjVUK
                     g$s*$8781$mjVUK
                     g$ae*$8780$mjVUK)))
                g$ae*$8779$mjVUK
                g$s*$8778$mjVUK
                g$m*$8777$mjVUK))))
          (g$make-stx$8247$mjVUK
            g$e$8770$mjVUK
            g$m*$8771$mjVUK
            g$s*$8772$mjVUK
            g$ae*$8773$mjVUK)))))
   (g$add-mark$8263$mjVUK
     g$add-mark$11973$mjVUK
     (case-lambda
       ((g$m$8783$mjVUK g$e$8784$mjVUK g$ae$8785$mjVUK)
        (g$mkstx$8262$mjVUK
          g$e$8784$mjVUK
          (list g$m$8783$mjVUK)
          '(shift)
          (list g$ae$8785$mjVUK)))))
   (g$add-subst$8264$mjVUK
     g$add-subst$11974$mjVUK
     (case-lambda
       ((g$subst$8786$mjVUK g$e$8787$mjVUK)
        (g$mkstx$8262$mjVUK g$e$8787$mjVUK '() (list g$subst$8786$mjVUK) '()))))
   (g$syntax-kind?$8265$mjVUK
     g$syntax-kind?$11975$mjVUK
     (case-lambda
       ((g$x$8788$mjVUK g$p?$8789$mjVUK)
        (if (g$stx?$8246$mjVUK g$x$8788$mjVUK)
          (g$syntax-kind?$8265$mjVUK
            (g$stx-expr$8248$mjVUK g$x$8788$mjVUK)
            g$p?$8789$mjVUK)
          (if (annotation? g$x$8788$mjVUK)
            (g$syntax-kind?$8265$mjVUK
              (annotation-expression g$x$8788$mjVUK)
              g$p?$8789$mjVUK)
            (g$p?$8789$mjVUK g$x$8788$mjVUK))))))
   (g$syntax-vector->list$8266$mjVUK
     g$syntax-vector->list$11976$mjVUK
     (case-lambda
       ((g$x$8790$mjVUK)
        (if (g$stx?$8246$mjVUK g$x$8790$mjVUK)
          ((case-lambda
             ((g$ls$8791$mjVUK g$m*$8792$mjVUK g$s*$8793$mjVUK g$ae*$8794$mjVUK)
              (g$map$5602$mjVUK
                (case-lambda
                  ((g$x$8795$mjVUK)
                   (g$mkstx$8262$mjVUK
                     g$x$8795$mjVUK
                     g$m*$8792$mjVUK
                     g$s*$8793$mjVUK
                     g$ae*$8794$mjVUK)))
                g$ls$8791$mjVUK)))
           (g$syntax-vector->list$8266$mjVUK
             (g$stx-expr$8248$mjVUK g$x$8790$mjVUK))
           (g$stx-mark*$8249$mjVUK g$x$8790$mjVUK)
           (g$stx-subst*$8250$mjVUK g$x$8790$mjVUK)
           (g$stx-ae*$8251$mjVUK g$x$8790$mjVUK))
          (if (annotation? g$x$8790$mjVUK)
            (g$syntax-vector->list$8266$mjVUK
              (annotation-expression g$x$8790$mjVUK))
            (if (vector? g$x$8790$mjVUK)
              (vector->list g$x$8790$mjVUK)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8790$mjVUK)))))))
   (g$syntax-pair?$8267$mjVUK
     g$syntax-pair?$11977$mjVUK
     (case-lambda
       ((g$x$8796$mjVUK) (g$syntax-kind?$8265$mjVUK g$x$8796$mjVUK pair?))))
   (g$syntax-vector?$8268$mjVUK
     g$syntax-vector?$11978$mjVUK
     (case-lambda
       ((g$x$8797$mjVUK) (g$syntax-kind?$8265$mjVUK g$x$8797$mjVUK vector?))))
   (g$syntax-null?$8269$mjVUK
     g$syntax-null?$11979$mjVUK
     (case-lambda
       ((g$x$8798$mjVUK) (g$syntax-kind?$8265$mjVUK g$x$8798$mjVUK null?))))
   (g$syntax-list?$8270$mjVUK
     g$syntax-list?$11980$mjVUK
     (case-lambda
       ((g$x$8799$mjVUK)
        ((case-lambda
           ((g$t$8800$mjVUK)
            (if g$t$8800$mjVUK
              g$t$8800$mjVUK
              (begin
                '#f
                (if (g$syntax-pair?$8267$mjVUK g$x$8799$mjVUK)
                  (begin
                    '#f
                    (g$syntax-list?$8270$mjVUK
                      (g$syntax-cdr$8272$mjVUK g$x$8799$mjVUK)))
                  '#f)))))
         (g$syntax-null?$8269$mjVUK g$x$8799$mjVUK)))))
   (g$syntax-car$8271$mjVUK
     g$syntax-car$11981$mjVUK
     (case-lambda
       ((g$x$8801$mjVUK)
        (if (g$stx?$8246$mjVUK g$x$8801$mjVUK)
          (g$mkstx$8262$mjVUK
            (g$syntax-car$8271$mjVUK (g$stx-expr$8248$mjVUK g$x$8801$mjVUK))
            (g$stx-mark*$8249$mjVUK g$x$8801$mjVUK)
            (g$stx-subst*$8250$mjVUK g$x$8801$mjVUK)
            (g$stx-ae*$8251$mjVUK g$x$8801$mjVUK))
          (if (annotation? g$x$8801$mjVUK)
            (g$syntax-car$8271$mjVUK (annotation-expression g$x$8801$mjVUK))
            (if (pair? g$x$8801$mjVUK)
              (car g$x$8801$mjVUK)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8801$mjVUK)))))))
   (g$syntax-cdr$8272$mjVUK
     g$syntax-cdr$11982$mjVUK
     (case-lambda
       ((g$x$8802$mjVUK)
        (if (g$stx?$8246$mjVUK g$x$8802$mjVUK)
          (g$mkstx$8262$mjVUK
            (g$syntax-cdr$8272$mjVUK (g$stx-expr$8248$mjVUK g$x$8802$mjVUK))
            (g$stx-mark*$8249$mjVUK g$x$8802$mjVUK)
            (g$stx-subst*$8250$mjVUK g$x$8802$mjVUK)
            (g$stx-ae*$8251$mjVUK g$x$8802$mjVUK))
          (if (annotation? g$x$8802$mjVUK)
            (g$syntax-cdr$8272$mjVUK (annotation-expression g$x$8802$mjVUK))
            (if (pair? g$x$8802$mjVUK)
              (cdr g$x$8802$mjVUK)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8802$mjVUK)))))))
   (g$syntax->list$8273$mjVUK
     g$syntax->list$11983$mjVUK
     (case-lambda
       ((g$x$8803$mjVUK)
        (if (g$syntax-pair?$8267$mjVUK g$x$8803$mjVUK)
          (cons
            (g$syntax-car$8271$mjVUK g$x$8803$mjVUK)
            (g$syntax->list$8273$mjVUK
              (g$syntax-cdr$8272$mjVUK g$x$8803$mjVUK)))
          (if (g$syntax-null?$8269$mjVUK g$x$8803$mjVUK)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8803$mjVUK))))))
   (g$id?$8274$mjVUK
     g$id?$11984$mjVUK
     (case-lambda
       ((g$x$8804$mjVUK)
        (if (g$stx?$8246$mjVUK g$x$8804$mjVUK)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8805$mjVUK)
                (symbol?
                  (if (annotation? g$expr$8805$mjVUK)
                    (annotation-stripped g$expr$8805$mjVUK)
                    g$expr$8805$mjVUK))))
             (g$stx-expr$8248$mjVUK g$x$8804$mjVUK)))
          '#f))))
   (g$id->sym$8275$mjVUK
     g$id->sym$11985$mjVUK
     (case-lambda
       ((g$x$8806$mjVUK)
        (begin
          (if (not (g$stx?$8246$mjVUK g$x$8806$mjVUK))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8806$mjVUK)
            (void))
          ((case-lambda
             ((g$expr$8807$mjVUK)
              ((case-lambda
                 ((g$sym$8808$mjVUK)
                  (if (symbol? g$sym$8808$mjVUK)
                    g$sym$8808$mjVUK
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8806$mjVUK))))
               (if (annotation? g$expr$8807$mjVUK)
                 (annotation-stripped g$expr$8807$mjVUK)
                 g$expr$8807$mjVUK))))
           (g$stx-expr$8248$mjVUK g$x$8806$mjVUK))))))
   (g$same-marks?$8276$mjVUK
     g$same-marks?$11986$mjVUK
     (case-lambda
       ((g$x$8809$mjVUK g$y$8810$mjVUK)
        ((case-lambda
           ((g$t$8811$mjVUK)
            (if g$t$8811$mjVUK
              g$t$8811$mjVUK
              (begin
                '#f
                (if (pair? g$x$8809$mjVUK)
                  (if (pair? g$y$8810$mjVUK)
                    (if (eq? (car g$x$8809$mjVUK) (car g$y$8810$mjVUK))
                      (begin
                        '#f
                        (g$same-marks?$8276$mjVUK
                          (cdr g$x$8809$mjVUK)
                          (cdr g$y$8810$mjVUK)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8809$mjVUK) (begin '#f (null? g$y$8810$mjVUK)) '#f)))))
   (g$bound-id=?$8277$mjVUK
     g$bound-id=?$11987$mjVUK
     (case-lambda
       ((g$x$8812$mjVUK g$y$8813$mjVUK)
        (if (eq? (g$id->sym$8275$mjVUK g$x$8812$mjVUK)
                 (g$id->sym$8275$mjVUK g$y$8813$mjVUK))
          (begin
            '#f
            (g$same-marks?$8276$mjVUK
              (g$stx-mark*$8249$mjVUK g$x$8812$mjVUK)
              (g$stx-mark*$8249$mjVUK g$y$8813$mjVUK)))
          '#f))))
   (g$free-id=?$8278$mjVUK
     g$free-id=?$11988$mjVUK
     (case-lambda
       ((g$i$8814$mjVUK g$j$8815$mjVUK)
        ((case-lambda
           ((g$t0$8816$mjVUK g$t1$8817$mjVUK)
            (if ((case-lambda
                   ((g$t$8818$mjVUK)
                    (if g$t$8818$mjVUK
                      g$t$8818$mjVUK
                      (begin '#f g$t1$8817$mjVUK))))
                 g$t0$8816$mjVUK)
              (eq? g$t0$8816$mjVUK g$t1$8817$mjVUK)
              (eq? (g$id->sym$8275$mjVUK g$i$8814$mjVUK)
                   (g$id->sym$8275$mjVUK g$j$8815$mjVUK)))))
         (g$id->real-label$8288$mjVUK g$i$8814$mjVUK)
         (g$id->real-label$8288$mjVUK g$j$8815$mjVUK)))))
   (g$valid-bound-ids?$8279$mjVUK
     g$valid-bound-ids?$11989$mjVUK
     (case-lambda
       ((g$id*$8819$mjVUK)
        (if (g$for-all$5600$mjVUK g$id?$8274$mjVUK g$id*$8819$mjVUK)
          (begin '#f (g$distinct-bound-ids?$8280$mjVUK g$id*$8819$mjVUK))
          '#f))))
   (g$distinct-bound-ids?$8280$mjVUK
     g$distinct-bound-ids?$11990$mjVUK
     (case-lambda
       ((g$id*$8820$mjVUK)
        ((case-lambda
           ((g$t$8821$mjVUK)
            (if g$t$8821$mjVUK
              g$t$8821$mjVUK
              (begin
                '#f
                (if (not (g$bound-id-member?$8281$mjVUK
                           (car g$id*$8820$mjVUK)
                           (cdr g$id*$8820$mjVUK)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$8280$mjVUK (cdr g$id*$8820$mjVUK)))
                  '#f)))))
         (null? g$id*$8820$mjVUK)))))
   (g$bound-id-member?$8281$mjVUK
     g$bound-id-member?$11991$mjVUK
     (case-lambda
       ((g$id$8822$mjVUK g$id*$8823$mjVUK)
        (if (pair? g$id*$8823$mjVUK)
          (begin
            '#f
            ((case-lambda
               ((g$t$8824$mjVUK)
                (if g$t$8824$mjVUK
                  g$t$8824$mjVUK
                  (begin
                    '#f
                    (g$bound-id-member?$8281$mjVUK
                      g$id$8822$mjVUK
                      (cdr g$id*$8823$mjVUK))))))
             (g$bound-id=?$8277$mjVUK g$id$8822$mjVUK (car g$id*$8823$mjVUK))))
          '#f))))
   (g$self-evaluating?$8282$mjVUK
     g$self-evaluating?$11992$mjVUK
     (case-lambda
       ((g$x$8825$mjVUK)
        ((case-lambda
           ((g$t$8826$mjVUK)
            (if g$t$8826$mjVUK
              g$t$8826$mjVUK
              ((case-lambda
                 ((g$t$8827$mjVUK)
                  (if g$t$8827$mjVUK
                    g$t$8827$mjVUK
                    ((case-lambda
                       ((g$t$8828$mjVUK)
                        (if g$t$8828$mjVUK
                          g$t$8828$mjVUK
                          ((case-lambda
                             ((g$t$8829$mjVUK)
                              (if g$t$8829$mjVUK
                                g$t$8829$mjVUK
                                (begin '#f (bytevector? g$x$8825$mjVUK)))))
                           (boolean? g$x$8825$mjVUK)))))
                     (char? g$x$8825$mjVUK)))))
               (string? g$x$8825$mjVUK)))))
         (number? g$x$8825$mjVUK)))))
   (g$strip-annotations$8283$mjVUK
     g$strip-annotations$11993$mjVUK
     (case-lambda
       ((g$x$8830$mjVUK)
        (if (pair? g$x$8830$mjVUK)
          (cons
            (g$strip-annotations$8283$mjVUK (car g$x$8830$mjVUK))
            (g$strip-annotations$8283$mjVUK (cdr g$x$8830$mjVUK)))
          (if (vector? g$x$8830$mjVUK)
            (g$vector-map$5879$mjVUK
              g$strip-annotations$8283$mjVUK
              g$x$8830$mjVUK)
            (if (annotation? g$x$8830$mjVUK)
              (annotation-stripped g$x$8830$mjVUK)
              g$x$8830$mjVUK))))))
   (g$strip$8284$mjVUK
     g$strip$11994$mjVUK
     (case-lambda
       ((g$x$8831$mjVUK g$m*$8832$mjVUK)
        (if (g$top-marked?$8212$mjVUK g$m*$8832$mjVUK)
          (if ((case-lambda
                 ((g$t$8833$mjVUK)
                  (if g$t$8833$mjVUK
                    g$t$8833$mjVUK
                    ((case-lambda
                       ((g$t$8834$mjVUK)
                        (if g$t$8834$mjVUK
                          g$t$8834$mjVUK
                          (begin
                            '#f
                            (if (vector? g$x$8831$mjVUK)
                              (if (> (vector-length g$x$8831$mjVUK) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8831$mjVUK '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8831$mjVUK)
                       (begin '#f (annotation? (car g$x$8831$mjVUK)))
                       '#f)))))
               (annotation? g$x$8831$mjVUK))
            (g$strip-annotations$8283$mjVUK g$x$8831$mjVUK)
            g$x$8831$mjVUK)
          ((letrec ((g$f$8835$mjVUK
                      (case-lambda
                        ((g$x$8836$mjVUK)
                         (if (g$stx?$8246$mjVUK g$x$8836$mjVUK)
                           (g$strip$8284$mjVUK
                             (g$stx-expr$8248$mjVUK g$x$8836$mjVUK)
                             (g$stx-mark*$8249$mjVUK g$x$8836$mjVUK))
                           (if (annotation? g$x$8836$mjVUK)
                             (annotation-stripped g$x$8836$mjVUK)
                             (if (pair? g$x$8836$mjVUK)
                               ((case-lambda
                                  ((g$a$8837$mjVUK g$d$8838$mjVUK)
                                   (if (if (eq? g$a$8837$mjVUK
                                                (car g$x$8836$mjVUK))
                                         (begin
                                           '#f
                                           (eq? g$d$8838$mjVUK
                                                (cdr g$x$8836$mjVUK)))
                                         '#f)
                                     g$x$8836$mjVUK
                                     (cons g$a$8837$mjVUK g$d$8838$mjVUK))))
                                (g$f$8835$mjVUK (car g$x$8836$mjVUK))
                                (g$f$8835$mjVUK (cdr g$x$8836$mjVUK)))
                               (if (vector? g$x$8836$mjVUK)
                                 ((case-lambda
                                    ((g$old$8839$mjVUK)
                                     ((case-lambda
                                        ((g$new$8840$mjVUK)
                                         (if (g$for-all$5600$mjVUK
                                               eq?
                                               g$old$8839$mjVUK
                                               g$new$8840$mjVUK)
                                           g$x$8836$mjVUK
                                           (list->vector g$new$8840$mjVUK))))
                                      (g$map$5602$mjVUK
                                        g$f$8835$mjVUK
                                        g$old$8839$mjVUK))))
                                  (vector->list g$x$8836$mjVUK))
                                 g$x$8836$mjVUK))))))))
             g$f$8835$mjVUK)
           g$x$8831$mjVUK)))))
   (g$stx->datum$8285$mjVUK
     g$stx->datum$11995$mjVUK
     (case-lambda
       ((g$x$8841$mjVUK) (g$strip$8284$mjVUK g$x$8841$mjVUK '()))))
   (g$same-marks*?$8286$mjVUK
     g$same-marks*?$11996$mjVUK
     (case-lambda
       ((g$mark*$8842$mjVUK g$mark**$8843$mjVUK g$si$8844$mjVUK)
        (if (null? g$si$8844$mjVUK)
          '#f
          (if (g$same-marks?$8276$mjVUK
                g$mark*$8842$mjVUK
                (vector-ref g$mark**$8843$mjVUK (car g$si$8844$mjVUK)))
            (car g$si$8844$mjVUK)
            (g$same-marks*?$8286$mjVUK
              g$mark*$8842$mjVUK
              g$mark**$8843$mjVUK
              (cdr g$si$8844$mjVUK)))))))
   (g$id->label$8287$mjVUK
     g$id->label$11997$mjVUK
     (case-lambda
       ((g$id$8845$mjVUK)
        ((case-lambda
           ((g$t$8846$mjVUK)
            (if g$t$8846$mjVUK
              g$t$8846$mjVUK
              (begin
                '#f
                ((case-lambda
                   ((g$t$8847$mjVUK)
                    (if g$t$8847$mjVUK
                      ((case-lambda
                         ((g$env$8848$mjVUK)
                          ((case-lambda
                             ((g$rib$8849$mjVUK)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$8217$mjVUK
                                     g$id$8845$mjVUK
                                     g$rib$8849$mjVUK
                                     '#f)))
                                (case-lambda
                                  ((g$lab$8852$mjVUK g$_loc$8853$mjVUK)
                                   ((case-lambda
                                      ((g$_loc$8854$mjVUK g$lab$8855$mjVUK)
                                       (begin
                                         (g$extend-rib!$8237$mjVUK
                                           g$rib$8849$mjVUK
                                           g$id$8845$mjVUK
                                           g$lab$8855$mjVUK
                                           '#t)
                                         g$lab$8855$mjVUK)))
                                    g$_loc$8853$mjVUK
                                    g$lab$8852$mjVUK))))))
                           (g$interaction-env-rib$8631$mjVUK
                             g$env$8848$mjVUK))))
                       g$t$8847$mjVUK)
                      '#f)))
                 (g$top-level-context$8673$mjVUK))))))
         (g$id->real-label$8288$mjVUK g$id$8845$mjVUK)))))
   (g$id->real-label$8288$mjVUK
     g$id->real-label$11998$mjVUK
     (case-lambda
       ((g$id$8856$mjVUK)
        ((case-lambda
           ((g$sym$8857$mjVUK)
            ((letrec ((g$search$8858$mjVUK
                        (case-lambda
                          ((g$subst*$8859$mjVUK g$mark*$8860$mjVUK)
                           (if (null? g$subst*$8859$mjVUK)
                             '#f
                             (if (eq? (car g$subst*$8859$mjVUK) 'shift)
                               (g$search$8858$mjVUK
                                 (cdr g$subst*$8859$mjVUK)
                                 (cdr g$mark*$8860$mjVUK))
                               ((case-lambda
                                  ((g$rib$8861$mjVUK)
                                   ((case-lambda
                                      ((g$t$8862$mjVUK)
                                       (if g$t$8862$mjVUK
                                         ((case-lambda
                                            ((g$ht$8863$mjVUK)
                                             ((case-lambda
                                                ((g$si$8864$mjVUK)
                                                 ((case-lambda
                                                    ((g$i$8865$mjVUK)
                                                     (if g$i$8865$mjVUK
                                                       (vector-ref
                                                         (g$rib-label*$8226$mjVUK
                                                           g$rib$8861$mjVUK)
                                                         g$i$8865$mjVUK)
                                                       (g$search$8858$mjVUK
                                                         (cdr g$subst*$8859$mjVUK)
                                                         g$mark*$8860$mjVUK))))
                                                  (if g$si$8864$mjVUK
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$8286$mjVUK
                                                        g$mark*$8860$mjVUK
                                                        (g$rib-mark**$8225$mjVUK
                                                          g$rib$8861$mjVUK)
                                                        (reverse
                                                          g$si$8864$mjVUK)))
                                                    '#f))))
                                              (g$hashtable-ref$6108$mjVUK
                                                g$ht$8863$mjVUK
                                                g$sym$8857$mjVUK
                                                '#f))))
                                          g$t$8862$mjVUK)
                                         ((case-lambda
                                            ((g$t$8866$mjVUK)
                                             (if g$t$8866$mjVUK
                                               g$t$8866$mjVUK
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$8867$mjVUK
                                                             (case-lambda
                                                               ((g$sym*$8868$mjVUK
                                                                  g$mark**$8869$mjVUK
                                                                  g$label*$8870$mjVUK)
                                                                (if (null?
                                                                      g$sym*$8868$mjVUK)
                                                                  (g$search$8858$mjVUK
                                                                    (cdr g$subst*$8859$mjVUK)
                                                                    g$mark*$8860$mjVUK)
                                                                  (if (if (eq? (car g$sym*$8868$mjVUK)
                                                                               g$sym$8857$mjVUK)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$8276$mjVUK
                                                                            (car g$mark**$8869$mjVUK)
                                                                            g$mark*$8860$mjVUK))
                                                                        '#f)
                                                                    (car g$label*$8870$mjVUK)
                                                                    (g$f$8867$mjVUK
                                                                      (cdr g$sym*$8868$mjVUK)
                                                                      (cdr g$mark**$8869$mjVUK)
                                                                      (cdr g$label*$8870$mjVUK))))))))
                                                    g$f$8867$mjVUK)
                                                  (g$rib-sym*$8224$mjVUK
                                                    g$rib$8861$mjVUK)
                                                  (g$rib-mark**$8225$mjVUK
                                                    g$rib$8861$mjVUK)
                                                  (g$rib-label*$8226$mjVUK
                                                    g$rib$8861$mjVUK))))))
                                          (g$find-label$8236$mjVUK
                                            g$rib$8861$mjVUK
                                            g$sym$8857$mjVUK
                                            g$mark*$8860$mjVUK)))))
                                    (g$rib-sealed/freq$8227$mjVUK
                                      g$rib$8861$mjVUK))))
                                (car g$subst*$8859$mjVUK))))))))
               g$search$8858$mjVUK)
             (g$stx-subst*$8250$mjVUK g$id$8856$mjVUK)
             (g$stx-mark*$8249$mjVUK g$id$8856$mjVUK))))
         (g$id->sym$8275$mjVUK g$id$8856$mjVUK)))))
   (g$label->binding$8289$mjVUK
     g$label->binding$11999$mjVUK
     (case-lambda
       ((g$x$8871$mjVUK g$r$8872$mjVUK)
        (if (not g$x$8871$mjVUK)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$8873$mjVUK)
              (if g$t$8873$mjVUK
                ((case-lambda
                   ((g$b$8874$mjVUK)
                    (if (if (pair? g$b$8874$mjVUK)
                          (begin '#f (eq? (car g$b$8874$mjVUK) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$5602$mjVUK
                          g$bless$8516$mjVUK
                          (cdr g$b$8874$mjVUK)))
                      (if (if (pair? g$b$8874$mjVUK)
                            (begin '#f (eq? (car g$b$8874$mjVUK) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$8875$mjVUK g$loc$8876$mjVUK)
                            (cons '$rtd (symbol-value g$loc$8876$mjVUK))))
                         (g$cadr$5828$mjVUK g$b$8874$mjVUK)
                         (g$cddr$5830$mjVUK g$b$8874$mjVUK))
                        g$b$8874$mjVUK))))
                 g$t$8873$mjVUK)
                ((case-lambda
                   ((g$t$8877$mjVUK)
                    (if g$t$8877$mjVUK
                      (cdr g$t$8877$mjVUK)
                      ((case-lambda
                         ((g$t$8878$mjVUK)
                          (if g$t$8878$mjVUK
                            ((case-lambda
                               ((g$env$8879$mjVUK)
                                ((case-lambda
                                   ((g$t$8880$mjVUK)
                                    (if g$t$8880$mjVUK
                                      ((case-lambda
                                         ((g$p$8881$mjVUK)
                                          (g$cons*$5604$mjVUK
                                            'lexical
                                            (cdr g$p$8881$mjVUK)
                                            '#f)))
                                       g$t$8880$mjVUK)
                                      '(displaced-lexical . #f))))
                                 (g$assq$5590$mjVUK
                                   g$x$8871$mjVUK
                                   (g$interaction-env-locs$8633$mjVUK
                                     g$env$8879$mjVUK)))))
                             g$t$8878$mjVUK)
                            '(displaced-lexical . #f))))
                       (g$top-level-context$8673$mjVUK)))))
                 (g$assq$5590$mjVUK g$x$8871$mjVUK g$r$8872$mjVUK)))))
           (g$imported-label->binding$8083$mjVUK g$x$8871$mjVUK))))))
   (g$make-binding$8290$mjVUK g$make-binding$12000$mjVUK cons)
   (g$binding-type$8291$mjVUK g$binding-type$12001$mjVUK car)
   (g$binding-value$8292$mjVUK g$binding-value$12002$mjVUK cdr)
   (g$raise-unbound-error$8293$mjVUK
     g$raise-unbound-error$12003$mjVUK
     (case-lambda
       ((g$id$8882$mjVUK)
        (g$syntax-violation*$8664$mjVUK
          '#f
          '"unbound identifier"
          g$id$8882$mjVUK
          (g$make-undefined-violation$6454$mjVUK)))))
   (g$syntax-type$8294$mjVUK
     g$syntax-type$12004$mjVUK
     (case-lambda
       ((g$e$8883$mjVUK g$r$8884$mjVUK)
        (if (g$id?$8274$mjVUK g$e$8883$mjVUK)
          ((case-lambda
             ((g$id$8885$mjVUK)
              ((case-lambda
                 ((g$label$8886$mjVUK)
                  ((case-lambda
                     ((g$b$8887$mjVUK)
                      ((case-lambda
                         ((g$type$8888$mjVUK)
                          (begin
                            (if (not g$label$8886$mjVUK)
                              (g$raise-unbound-error$8293$mjVUK g$id$8885$mjVUK)
                              (void))
                            ((case-lambda
                               ((g$t$8889$mjVUK)
                                (if (g$memv$5595$mjVUK
                                      g$t$8889$mjVUK
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$8888$mjVUK
                                    (g$binding-value$8292$mjVUK g$b$8887$mjVUK)
                                    g$id$8885$mjVUK)
                                  (values 'other '#f '#f))))
                             g$type$8888$mjVUK))))
                       (g$binding-type$8291$mjVUK g$b$8887$mjVUK))))
                   (g$label->binding$8289$mjVUK
                     g$label$8886$mjVUK
                     g$r$8884$mjVUK))))
               (g$id->label$8287$mjVUK g$id$8885$mjVUK))))
           g$e$8883$mjVUK)
          (if (g$syntax-pair?$8267$mjVUK g$e$8883$mjVUK)
            ((case-lambda
               ((g$id$8890$mjVUK)
                (if (g$id?$8274$mjVUK g$id$8890$mjVUK)
                  ((case-lambda
                     ((g$label$8891$mjVUK)
                      ((case-lambda
                         ((g$b$8892$mjVUK)
                          ((case-lambda
                             ((g$type$8893$mjVUK)
                              (begin
                                (if (not g$label$8891$mjVUK)
                                  (g$raise-unbound-error$8293$mjVUK
                                    g$id$8890$mjVUK)
                                  (void))
                                ((case-lambda
                                   ((g$t$8894$mjVUK)
                                    (if (g$memv$5595$mjVUK
                                          g$t$8894$mjVUK
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$8893$mjVUK
                                        (g$binding-value$8292$mjVUK
                                          g$b$8892$mjVUK)
                                        g$id$8890$mjVUK)
                                      (values 'call '#f '#f))))
                                 g$type$8893$mjVUK))))
                           (g$binding-type$8291$mjVUK g$b$8892$mjVUK))))
                       (g$label->binding$8289$mjVUK
                         g$label$8891$mjVUK
                         g$r$8884$mjVUK))))
                   (g$id->label$8287$mjVUK g$id$8890$mjVUK))
                  (values 'call '#f '#f))))
             (g$syntax-car$8271$mjVUK g$e$8883$mjVUK))
            ((case-lambda
               ((g$d$8895$mjVUK)
                (if (g$self-evaluating?$8282$mjVUK g$d$8895$mjVUK)
                  (values 'constant g$d$8895$mjVUK '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$8285$mjVUK g$e$8883$mjVUK)))))))
   (g$sanitize-binding$8302$mjVUK
     g$sanitize-binding$12005$mjVUK
     (case-lambda
       ((g$x$8896$mjVUK g$src$8897$mjVUK)
        (if (procedure? g$x$8896$mjVUK)
          (g$cons*$5604$mjVUK 'local-macro g$x$8896$mjVUK g$src$8897$mjVUK)
          (if (if (pair? g$x$8896$mjVUK)
                (if (eq? (car g$x$8896$mjVUK) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8896$mjVUK)))
                  '#f)
                '#f)
            (g$cons*$5604$mjVUK
              'local-macro!
              (cdr g$x$8896$mjVUK)
              g$src$8897$mjVUK)
            (if (if (pair? g$x$8896$mjVUK)
                  (begin '#f (eq? (car g$x$8896$mjVUK) '$rtd))
                  '#f)
              g$x$8896$mjVUK
              (if (if (pair? g$x$8896$mjVUK)
                    (begin '#f (eq? (car g$x$8896$mjVUK) 'ctv))
                    '#f)
                (g$cons*$5604$mjVUK
                  'local-ctv
                  (cdr g$x$8896$mjVUK)
                  g$src$8897$mjVUK)
                (assertion-violation
                  'expand
                  '"invalid transformer"
                  g$x$8896$mjVUK))))))))
   (g$make-variable-transformer$8303$mjVUK
     g$make-variable-transformer$12006$mjVUK
     (case-lambda
       ((g$x$8898$mjVUK)
        (if (procedure? g$x$8898$mjVUK)
          (cons 'macro! g$x$8898$mjVUK)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8898$mjVUK)))))
   (g$make-compile-time-value$8304$mjVUK
     g$make-compile-time-value$12007$mjVUK
     (case-lambda ((g$x$8899$mjVUK) (cons 'ctv g$x$8899$mjVUK))))
   (g$variable-transformer?$8305$mjVUK
     g$variable-transformer?$12008$mjVUK
     (case-lambda
       ((g$x$8900$mjVUK)
        (if (pair? g$x$8900$mjVUK)
          (if (eq? (car g$x$8900$mjVUK) 'macro!)
            (begin '#f (procedure? (cdr g$x$8900$mjVUK)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$8306$mjVUK
     g$variable-transformer-procedure$12009$mjVUK
     (case-lambda
       ((g$x$8901$mjVUK)
        (if (g$variable-transformer?$8305$mjVUK g$x$8901$mjVUK)
          (cdr g$x$8901$mjVUK)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8901$mjVUK)))))
   (g$make-eval-transformer$8307$mjVUK
     g$make-eval-transformer$12010$mjVUK
     (case-lambda
       ((g$x$8902$mjVUK)
        (g$sanitize-binding$8302$mjVUK
          (eval-core (g$expanded->core$7784$mjVUK g$x$8902$mjVUK))
          g$x$8902$mjVUK))))
   (g$parse-define$8493$mjVUK
     g$parse-define$12011$mjVUK
     (case-lambda
       ((g$x$8903$mjVUK)
        ((case-lambda
           ((g$t$8904$mjVUK)
            ((case-lambda
               ((g$ls/false$8905$mjVUK)
                (if (if g$ls/false$8905$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8906$mjVUK
                               g$fmls$8907$mjVUK
                               g$b$8908$mjVUK
                               g$b*$8909$mjVUK)
                             (g$id?$8274$mjVUK g$id$8906$mjVUK)))
                          g$ls/false$8905$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8910$mjVUK
                         g$fmls$8911$mjVUK
                         g$b$8912$mjVUK
                         g$b*$8913$mjVUK)
                       (begin
                         (g$verify-formals$8573$mjVUK
                           g$fmls$8911$mjVUK
                           g$x$8903$mjVUK)
                         (values
                           g$id$8910$mjVUK
                           (cons
                             'defun
                             (cons
                               g$fmls$8911$mjVUK
                               (cons g$b$8912$mjVUK g$b*$8913$mjVUK)))))))
                    g$ls/false$8905$mjVUK)
                  ((case-lambda
                     ((g$t$8914$mjVUK)
                      ((case-lambda
                         ((g$ls/false$8915$mjVUK)
                          (if (if g$ls/false$8915$mjVUK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8916$mjVUK g$val$8917$mjVUK)
                                       (g$id?$8274$mjVUK g$id$8916$mjVUK)))
                                    g$ls/false$8915$mjVUK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8918$mjVUK g$val$8919$mjVUK)
                                 (values
                                   g$id$8918$mjVUK
                                   (cons 'expr g$val$8919$mjVUK))))
                              g$ls/false$8915$mjVUK)
                            ((case-lambda
                               ((g$t$8920$mjVUK)
                                ((case-lambda
                                   ((g$ls/false$8921$mjVUK)
                                    (if (if g$ls/false$8921$mjVUK
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8922$mjVUK)
                                                 (g$id?$8274$mjVUK
                                                   g$id$8922$mjVUK)))
                                              g$ls/false$8921$mjVUK))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8923$mjVUK)
                                           (values
                                             g$id$8923$mjVUK
                                             (cons
                                               'expr
                                               (g$bless$8516$mjVUK '(void))))))
                                        g$ls/false$8921$mjVUK)
                                      (g$syntax-violation$8665$mjVUK
                                        '#f
                                        '"invalid syntax"
                                        g$t$8920$mjVUK))))
                                 (g$syntax-dispatch$8553$mjVUK
                                   g$t$8920$mjVUK
                                   '(_ any)))))
                             g$t$8914$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$8914$mjVUK
                         '(_ any any)))))
                   g$t$8904$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$8904$mjVUK
               '(_ (any . any) any . each-any)))))
         g$x$8903$mjVUK))))
   (g$parse-define-syntax$8494$mjVUK
     g$parse-define-syntax$12012$mjVUK
     (case-lambda
       ((g$x$8924$mjVUK)
        ((case-lambda
           ((g$t$8925$mjVUK)
            ((case-lambda
               ((g$ls/false$8926$mjVUK)
                (if (if g$ls/false$8926$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8927$mjVUK g$val$8928$mjVUK)
                             (g$id?$8274$mjVUK g$id$8927$mjVUK)))
                          g$ls/false$8926$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8929$mjVUK g$val$8930$mjVUK)
                       (values g$id$8929$mjVUK g$val$8930$mjVUK)))
                    g$ls/false$8926$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$8925$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$8925$mjVUK '(_ any any)))))
         g$x$8924$mjVUK))))
   (g$scheme-stx-hashtable$8495$mjVUK
     g$scheme-stx-hashtable$12013$mjVUK
     (g$make-eq-hashtable$6105$mjVUK))
   (g$scheme-stx$8496$mjVUK
     g$scheme-stx$12014$mjVUK
     (case-lambda
       ((g$sym$8931$mjVUK)
        ((case-lambda
           ((g$t$8932$mjVUK)
            (if g$t$8932$mjVUK
              g$t$8932$mjVUK
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8933$mjVUK)
                    ((case-lambda
                       ((g$stx$8934$mjVUK)
                        ((case-lambda
                           ((g$stx$8935$mjVUK)
                            (begin
                              (g$hashtable-set!$6109$mjVUK
                                g$scheme-stx-hashtable$8495$mjVUK
                                g$sym$8931$mjVUK
                                g$stx$8935$mjVUK)
                              g$stx$8935$mjVUK)))
                         ((case-lambda
                            ((g$t$8936$mjVUK)
                             (if g$t$8936$mjVUK
                               ((case-lambda
                                  ((g$x$8937$mjVUK)
                                   ((case-lambda
                                      ((g$name$8938$mjVUK g$label$8939$mjVUK)
                                       (g$add-subst$8264$mjVUK
                                         (g$make-rib$8223$mjVUK
                                           (list g$name$8938$mjVUK)
                                           (list g$top-mark*$8211$mjVUK)
                                           (list g$label$8939$mjVUK)
                                           '#f
                                           '#f)
                                         g$stx$8934$mjVUK)))
                                    (car g$x$8937$mjVUK)
                                    (cdr g$x$8937$mjVUK))))
                                g$t$8936$mjVUK)
                               g$stx$8934$mjVUK)))
                          (g$assq$5590$mjVUK
                            g$sym$8931$mjVUK
                            g$subst$8933$mjVUK)))))
                     (g$make-stx$8247$mjVUK
                       g$sym$8931$mjVUK
                       g$top-mark*$8211$mjVUK
                       '()
                       '()))))
                 (g$library-subst$8041$mjVUK
                   (g$find-library-by-name$8077$mjVUK
                     '(psyntax system $all))))))))
         (g$hashtable-ref$6108$mjVUK
           g$scheme-stx-hashtable$8495$mjVUK
           g$sym$8931$mjVUK
           '#f)))))
   (g$lexical-var$8497$mjVUK g$lexical-var$12015$mjVUK car)
   (g$lexical-mutable?$8498$mjVUK g$lexical-mutable?$12016$mjVUK cdr)
   (g$set-lexical-mutable!$8499$mjVUK
     g$set-lexical-mutable!$12017$mjVUK
     set-cdr!)
   (g$add-lexical$8500$mjVUK
     g$add-lexical$12018$mjVUK
     (case-lambda
       ((g$lab$8940$mjVUK g$lex$8941$mjVUK g$r$8942$mjVUK)
        (cons
          (g$cons*$5604$mjVUK g$lab$8940$mjVUK 'lexical g$lex$8941$mjVUK '#f)
          g$r$8942$mjVUK))))
   (g$add-lexicals$8501$mjVUK
     g$add-lexicals$12019$mjVUK
     (case-lambda
       ((g$lab*$8943$mjVUK g$lex*$8944$mjVUK g$r$8945$mjVUK)
        (if (null? g$lab*$8943$mjVUK)
          g$r$8945$mjVUK
          (g$add-lexicals$8501$mjVUK
            (cdr g$lab*$8943$mjVUK)
            (cdr g$lex*$8944$mjVUK)
            (g$add-lexical$8500$mjVUK
              (car g$lab*$8943$mjVUK)
              (car g$lex*$8944$mjVUK)
              g$r$8945$mjVUK))))))
   (g$letrec-helper$8502$mjVUK
     g$letrec-helper$12020$mjVUK
     (case-lambda
       ((g$e$8946$mjVUK g$r$8947$mjVUK g$mr$8948$mjVUK g$build$8949$mjVUK)
        ((case-lambda
           ((g$t$8950$mjVUK)
            ((case-lambda
               ((g$ls/false$8951$mjVUK)
                (if g$ls/false$8951$mjVUK
                  (apply
                    (case-lambda
                      ((g$lhs*$8952$mjVUK
                         g$rhs*$8953$mjVUK
                         g$b$8954$mjVUK
                         g$b*$8955$mjVUK)
                       (if (not (g$valid-bound-ids?$8279$mjVUK
                                  g$lhs*$8952$mjVUK))
                         (g$invalid-fmls-error$8518$mjVUK
                           g$e$8946$mjVUK
                           g$lhs*$8952$mjVUK)
                         ((case-lambda
                            ((g$lex*$8956$mjVUK g$lab*$8957$mjVUK)
                             ((case-lambda
                                ((g$rib$8958$mjVUK g$r$8959$mjVUK)
                                 ((case-lambda
                                    ((g$body$8960$mjVUK g$rhs*$8961$mjVUK)
                                     (g$build$8949$mjVUK
                                       '#f
                                       g$lex*$8956$mjVUK
                                       g$rhs*$8961$mjVUK
                                       g$body$8960$mjVUK)))
                                  (g$chi-internal$8582$mjVUK
                                    (g$add-subst$8264$mjVUK
                                      g$rib$8958$mjVUK
                                      (cons g$b$8954$mjVUK g$b*$8955$mjVUK))
                                    g$r$8959$mjVUK
                                    g$mr$8948$mjVUK)
                                  (g$chi-expr*$8569$mjVUK
                                    (g$map$5602$mjVUK
                                      (case-lambda
                                        ((g$x$8962$mjVUK)
                                         (g$add-subst$8264$mjVUK
                                           g$rib$8958$mjVUK
                                           g$x$8962$mjVUK)))
                                      g$rhs*$8953$mjVUK)
                                    g$r$8959$mjVUK
                                    g$mr$8948$mjVUK))))
                              (g$make-full-rib$8242$mjVUK
                                g$lhs*$8952$mjVUK
                                g$lab*$8957$mjVUK)
                              (g$add-lexicals$8501$mjVUK
                                g$lab*$8957$mjVUK
                                g$lex*$8956$mjVUK
                                g$r$8947$mjVUK))))
                          (g$map$5602$mjVUK
                            g$gen-lexical$8213$mjVUK
                            g$lhs*$8952$mjVUK)
                          (g$map$5602$mjVUK
                            g$gen-label$8215$mjVUK
                            g$lhs*$8952$mjVUK)))))
                    g$ls/false$8951$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$8950$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$8950$mjVUK
               '(_ #(each (any any)) any . each-any)))))
         g$e$8946$mjVUK))))
   (g$letrec-transformer$8503$mjVUK
     g$letrec-transformer$12021$mjVUK
     (case-lambda
       ((g$e$8963$mjVUK g$r$8964$mjVUK g$mr$8965$mjVUK)
        (g$letrec-helper$8502$mjVUK
          g$e$8963$mjVUK
          g$r$8964$mjVUK
          g$mr$8965$mjVUK
          g$build-letrec$8205$mjVUK))))
   (g$letrec*-transformer$8504$mjVUK
     g$letrec*-transformer$12022$mjVUK
     (case-lambda
       ((g$e$8966$mjVUK g$r$8967$mjVUK g$mr$8968$mjVUK)
        (g$letrec-helper$8502$mjVUK
          g$e$8966$mjVUK
          g$r$8967$mjVUK
          g$mr$8968$mjVUK
          g$build-letrec*$8206$mjVUK))))
   (g$fluid-let-syntax-transformer$8505$mjVUK
     g$fluid-let-syntax-transformer$12023$mjVUK
     (case-lambda
       ((g$e$8969$mjVUK g$r$8970$mjVUK g$mr$8971$mjVUK)
        (letrec* ((g$lookup$8972$mjVUK
                    (case-lambda
                      ((g$x$8982$mjVUK)
                       ((case-lambda
                          ((g$t$8983$mjVUK)
                           (if g$t$8983$mjVUK
                             g$t$8983$mjVUK
                             (begin
                               '#f
                               (g$syntax-violation$8665$mjVUK
                                 '#f
                                 '"unbound identifier"
                                 g$e$8969$mjVUK
                                 g$x$8982$mjVUK)))))
                        (g$id->label$8287$mjVUK g$x$8982$mjVUK))))))
          ((case-lambda
             ((g$t$8973$mjVUK)
              ((case-lambda
                 ((g$ls/false$8974$mjVUK)
                  (if g$ls/false$8974$mjVUK
                    (apply
                      (case-lambda
                        ((g$lhs*$8975$mjVUK
                           g$rhs*$8976$mjVUK
                           g$b$8977$mjVUK
                           g$b*$8978$mjVUK)
                         (if (not (g$valid-bound-ids?$8279$mjVUK
                                    g$lhs*$8975$mjVUK))
                           (g$invalid-fmls-error$8518$mjVUK
                             g$e$8969$mjVUK
                             g$lhs*$8975$mjVUK)
                           ((case-lambda
                              ((g$lab*$8979$mjVUK g$rhs*$8980$mjVUK)
                               (g$chi-internal$8582$mjVUK
                                 (cons g$b$8977$mjVUK g$b*$8978$mjVUK)
                                 (append
                                   (g$map$5602$mjVUK
                                     cons
                                     g$lab*$8979$mjVUK
                                     g$rhs*$8980$mjVUK)
                                   g$r$8970$mjVUK)
                                 (append
                                   (g$map$5602$mjVUK
                                     cons
                                     g$lab*$8979$mjVUK
                                     g$rhs*$8980$mjVUK)
                                   g$mr$8971$mjVUK))))
                            (g$map$5602$mjVUK
                              g$lookup$8972$mjVUK
                              g$lhs*$8975$mjVUK)
                            (g$map$5602$mjVUK
                              (case-lambda
                                ((g$x$8981$mjVUK)
                                 (g$make-eval-transformer$8307$mjVUK
                                   (g$expand-transformer$8598$mjVUK
                                     g$x$8981$mjVUK
                                     g$mr$8971$mjVUK))))
                              g$rhs*$8976$mjVUK)))))
                      g$ls/false$8974$mjVUK)
                    (g$syntax-violation$8665$mjVUK
                      '#f
                      '"invalid syntax"
                      g$t$8973$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK
                 g$t$8973$mjVUK
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8969$mjVUK)))))
   (g$type-descriptor-transformer$8506$mjVUK
     g$type-descriptor-transformer$12024$mjVUK
     (case-lambda
       ((g$e$8984$mjVUK g$r$8985$mjVUK g$mr$8986$mjVUK)
        ((case-lambda
           ((g$t$8987$mjVUK)
            ((case-lambda
               ((g$ls/false$8988$mjVUK)
                (if (if g$ls/false$8988$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8989$mjVUK)
                             (g$id?$8274$mjVUK g$id$8989$mjVUK)))
                          g$ls/false$8988$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8990$mjVUK)
                       ((case-lambda
                          ((g$lab$8991$mjVUK)
                           ((case-lambda
                              ((g$b$8992$mjVUK)
                               ((case-lambda
                                  ((g$type$8993$mjVUK)
                                   (begin
                                     (if (not g$lab$8991$mjVUK)
                                       (g$raise-unbound-error$8293$mjVUK
                                         g$id$8990$mjVUK)
                                       (void))
                                     (if (not (if (eq? g$type$8993$mjVUK '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$8292$mjVUK
                                                           g$b$8992$mjVUK))))
                                                '#f))
                                       (g$syntax-violation$8665$mjVUK
                                         '#f
                                         '"not a record type"
                                         g$e$8984$mjVUK)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$8292$mjVUK
                                         g$b$8992$mjVUK)))))
                                (g$binding-type$8291$mjVUK g$b$8992$mjVUK))))
                            (g$label->binding$8289$mjVUK
                              g$lab$8991$mjVUK
                              g$r$8985$mjVUK))))
                        (g$id->label$8287$mjVUK g$id$8990$mjVUK))))
                    g$ls/false$8988$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$8987$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$8987$mjVUK '(_ any)))))
         g$e$8984$mjVUK))))
   (g$record-type-descriptor-transformer$8507$mjVUK
     g$record-type-descriptor-transformer$12025$mjVUK
     (case-lambda
       ((g$e$8994$mjVUK g$r$8995$mjVUK g$mr$8996$mjVUK)
        ((case-lambda
           ((g$t$8997$mjVUK)
            ((case-lambda
               ((g$ls/false$8998$mjVUK)
                (if (if g$ls/false$8998$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8999$mjVUK)
                             (g$id?$8274$mjVUK g$id$8999$mjVUK)))
                          g$ls/false$8998$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$9000$mjVUK)
                       ((case-lambda
                          ((g$lab$9001$mjVUK)
                           ((case-lambda
                              ((g$b$9002$mjVUK)
                               ((case-lambda
                                  ((g$type$9003$mjVUK)
                                   (begin
                                     (if (not g$lab$9001$mjVUK)
                                       (g$raise-unbound-error$8293$mjVUK
                                         g$id$9000$mjVUK)
                                       (void))
                                     (if (not (if (eq? g$type$9003$mjVUK '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$8292$mjVUK
                                                      g$b$9002$mjVUK)))
                                                '#f))
                                       (g$syntax-violation$8665$mjVUK
                                         '#f
                                         '"not a record type"
                                         g$e$8994$mjVUK)
                                       (void))
                                     (g$chi-expr$8571$mjVUK
                                       (car (g$binding-value$8292$mjVUK
                                              g$b$9002$mjVUK))
                                       g$r$8995$mjVUK
                                       g$mr$8996$mjVUK))))
                                (g$binding-type$8291$mjVUK g$b$9002$mjVUK))))
                            (g$label->binding$8289$mjVUK
                              g$lab$9001$mjVUK
                              g$r$8995$mjVUK))))
                        (g$id->label$8287$mjVUK g$id$9000$mjVUK))))
                    g$ls/false$8998$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$8997$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$8997$mjVUK '(_ any)))))
         g$e$8994$mjVUK))))
   (g$record-constructor-descriptor-transformer$8508$mjVUK
     g$record-constructor-descriptor-transformer$12026$mjVUK
     (case-lambda
       ((g$e$9004$mjVUK g$r$9005$mjVUK g$mr$9006$mjVUK)
        ((case-lambda
           ((g$t$9007$mjVUK)
            ((case-lambda
               ((g$ls/false$9008$mjVUK)
                (if (if g$ls/false$9008$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$9009$mjVUK)
                             (g$id?$8274$mjVUK g$id$9009$mjVUK)))
                          g$ls/false$9008$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$9010$mjVUK)
                       ((case-lambda
                          ((g$lab$9011$mjVUK)
                           ((case-lambda
                              ((g$b$9012$mjVUK)
                               ((case-lambda
                                  ((g$type$9013$mjVUK)
                                   (begin
                                     (if (not g$lab$9011$mjVUK)
                                       (g$raise-unbound-error$8293$mjVUK
                                         g$id$9010$mjVUK)
                                       (void))
                                     (if (not (if (eq? g$type$9013$mjVUK '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$8292$mjVUK
                                                      g$b$9012$mjVUK)))
                                                '#f))
                                       (g$syntax-violation$8665$mjVUK
                                         '#f
                                         '"invalid type"
                                         g$e$9004$mjVUK)
                                       (void))
                                     (g$chi-expr$8571$mjVUK
                                       (g$cadr$5828$mjVUK
                                         (g$binding-value$8292$mjVUK
                                           g$b$9012$mjVUK))
                                       g$r$9005$mjVUK
                                       g$mr$9006$mjVUK))))
                                (g$binding-type$8291$mjVUK g$b$9012$mjVUK))))
                            (g$label->binding$8289$mjVUK
                              g$lab$9011$mjVUK
                              g$r$9005$mjVUK))))
                        (g$id->label$8287$mjVUK g$id$9010$mjVUK))))
                    g$ls/false$9008$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9007$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9007$mjVUK '(_ any)))))
         g$e$9004$mjVUK))))
   (g$when-macro$8509$mjVUK
     g$when-macro$12027$mjVUK
     (case-lambda
       ((g$e$9014$mjVUK)
        ((case-lambda
           ((g$t$9015$mjVUK)
            ((case-lambda
               ((g$ls/false$9016$mjVUK)
                (if g$ls/false$9016$mjVUK
                  (apply
                    (case-lambda
                      ((g$test$9017$mjVUK g$e$9018$mjVUK g$e*$9019$mjVUK)
                       (g$bless$8516$mjVUK
                         (list
                           'if
                           g$test$9017$mjVUK
                           (cons
                             'begin
                             (cons g$e$9018$mjVUK g$e*$9019$mjVUK))))))
                    g$ls/false$9016$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9015$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9015$mjVUK
               '(_ any any . each-any)))))
         g$e$9014$mjVUK))))
   (g$unless-macro$8510$mjVUK
     g$unless-macro$12028$mjVUK
     (case-lambda
       ((g$e$9020$mjVUK)
        ((case-lambda
           ((g$t$9021$mjVUK)
            ((case-lambda
               ((g$ls/false$9022$mjVUK)
                (if g$ls/false$9022$mjVUK
                  (apply
                    (case-lambda
                      ((g$test$9023$mjVUK g$e$9024$mjVUK g$e*$9025$mjVUK)
                       (g$bless$8516$mjVUK
                         (list
                           'if
                           (list 'not g$test$9023$mjVUK)
                           (cons
                             'begin
                             (cons g$e$9024$mjVUK g$e*$9025$mjVUK))))))
                    g$ls/false$9022$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9021$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9021$mjVUK
               '(_ any any . each-any)))))
         g$e$9020$mjVUK))))
   (g$if-transformer$8511$mjVUK
     g$if-transformer$12029$mjVUK
     (case-lambda
       ((g$e$9026$mjVUK g$r$9027$mjVUK g$mr$9028$mjVUK)
        ((case-lambda
           ((g$t$9029$mjVUK)
            ((case-lambda
               ((g$ls/false$9030$mjVUK)
                (if g$ls/false$9030$mjVUK
                  (apply
                    (case-lambda
                      ((g$e0$9031$mjVUK g$e1$9032$mjVUK g$e2$9033$mjVUK)
                       (list
                         'if
                         (g$chi-expr$8571$mjVUK
                           g$e0$9031$mjVUK
                           g$r$9027$mjVUK
                           g$mr$9028$mjVUK)
                         (g$chi-expr$8571$mjVUK
                           g$e1$9032$mjVUK
                           g$r$9027$mjVUK
                           g$mr$9028$mjVUK)
                         (g$chi-expr$8571$mjVUK
                           g$e2$9033$mjVUK
                           g$r$9027$mjVUK
                           g$mr$9028$mjVUK))))
                    g$ls/false$9030$mjVUK)
                  ((case-lambda
                     ((g$t$9034$mjVUK)
                      ((case-lambda
                         ((g$ls/false$9035$mjVUK)
                          (if g$ls/false$9035$mjVUK
                            (apply
                              (case-lambda
                                ((g$e0$9036$mjVUK g$e1$9037$mjVUK)
                                 (list
                                   'if
                                   (g$chi-expr$8571$mjVUK
                                     g$e0$9036$mjVUK
                                     g$r$9027$mjVUK
                                     g$mr$9028$mjVUK)
                                   (g$chi-expr$8571$mjVUK
                                     g$e1$9037$mjVUK
                                     g$r$9027$mjVUK
                                     g$mr$9028$mjVUK)
                                   (g$build-void$8204$mjVUK))))
                              g$ls/false$9035$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$9034$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$9034$mjVUK
                         '(_ any any)))))
                   g$t$9029$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9029$mjVUK '(_ any any any)))))
         g$e$9026$mjVUK))))
   (g$case-macro$8512$mjVUK
     g$case-macro$12030$mjVUK
     (case-lambda
       ((g$e$9038$mjVUK)
        (letrec* ((g$build-last$9039$mjVUK
                    (case-lambda
                      ((g$cls$9059$mjVUK)
                       ((case-lambda
                          ((g$t$9060$mjVUK)
                           ((case-lambda
                              ((g$ls/false$9061$mjVUK)
                               (if g$ls/false$9061$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$e$9062$mjVUK g$e*$9063$mjVUK)
                                      (cons
                                        'begin
                                        (cons g$e$9062$mjVUK g$e*$9063$mjVUK))))
                                   g$ls/false$9061$mjVUK)
                                 ((case-lambda
                                    ((g$t$9064$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$9065$mjVUK)
                                         (if g$ls/false$9065$mjVUK
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$9040$mjVUK
                                                  g$cls$9059$mjVUK
                                                  '(if #f #f))))
                                             g$ls/false$9065$mjVUK)
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9064$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$9064$mjVUK
                                        '_))))
                                  g$t$9060$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$9060$mjVUK
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$9059$mjVUK))))
                  (g$build-one$9040$mjVUK
                    (case-lambda
                      ((g$cls$9052$mjVUK g$k$9053$mjVUK)
                       ((case-lambda
                          ((g$t$9054$mjVUK)
                           ((case-lambda
                              ((g$ls/false$9055$mjVUK)
                               (if g$ls/false$9055$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$d*$9056$mjVUK
                                        g$e$9057$mjVUK
                                        g$e*$9058$mjVUK)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$9056$mjVUK))
                                        (cons
                                          'begin
                                          (cons g$e$9057$mjVUK g$e*$9058$mjVUK))
                                        g$k$9053$mjVUK)))
                                   g$ls/false$9055$mjVUK)
                                 (g$syntax-violation$8665$mjVUK
                                   '#f
                                   '"invalid syntax"
                                   g$t$9054$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$9054$mjVUK
                              '(each-any any . each-any)))))
                        g$cls$9052$mjVUK)))))
          ((case-lambda
             ((g$t$9041$mjVUK)
              ((case-lambda
                 ((g$ls/false$9042$mjVUK)
                  (if g$ls/false$9042$mjVUK
                    (apply
                      (case-lambda
                        ((g$expr$9043$mjVUK)
                         (g$bless$8516$mjVUK
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$9043$mjVUK))
                               '((if #f #f)))))))
                      g$ls/false$9042$mjVUK)
                    ((case-lambda
                       ((g$t$9044$mjVUK)
                        ((case-lambda
                           ((g$ls/false$9045$mjVUK)
                            (if g$ls/false$9045$mjVUK
                              (apply
                                (case-lambda
                                  ((g$expr$9046$mjVUK
                                     g$cls$9047$mjVUK
                                     g$cls*$9048$mjVUK)
                                   (g$bless$8516$mjVUK
                                     (list
                                       'let
                                       (list (list 't g$expr$9046$mjVUK))
                                       ((letrec ((g$f$9049$mjVUK
                                                   (case-lambda
                                                     ((g$cls$9050$mjVUK
                                                        g$cls*$9051$mjVUK)
                                                      (if (null?
                                                            g$cls*$9051$mjVUK)
                                                        (g$build-last$9039$mjVUK
                                                          g$cls$9050$mjVUK)
                                                        (g$build-one$9040$mjVUK
                                                          g$cls$9050$mjVUK
                                                          (g$f$9049$mjVUK
                                                            (car g$cls*$9051$mjVUK)
                                                            (cdr g$cls*$9051$mjVUK))))))))
                                          g$f$9049$mjVUK)
                                        g$cls$9047$mjVUK
                                        g$cls*$9048$mjVUK)))))
                                g$ls/false$9045$mjVUK)
                              (g$syntax-violation$8665$mjVUK
                                '#f
                                '"invalid syntax"
                                g$t$9044$mjVUK))))
                         (g$syntax-dispatch$8553$mjVUK
                           g$t$9044$mjVUK
                           '(_ any any . each-any)))))
                     g$t$9041$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK g$t$9041$mjVUK '(_ any)))))
           g$e$9038$mjVUK)))))
   (g$quote-transformer$8513$mjVUK
     g$quote-transformer$12031$mjVUK
     (case-lambda
       ((g$e$9066$mjVUK g$r$9067$mjVUK g$mr$9068$mjVUK)
        ((case-lambda
           ((g$t$9069$mjVUK)
            ((case-lambda
               ((g$ls/false$9070$mjVUK)
                (if g$ls/false$9070$mjVUK
                  (apply
                    (case-lambda
                      ((g$datum$9071$mjVUK)
                       (list
                         'quote
                         (g$stx->datum$8285$mjVUK g$datum$9071$mjVUK))))
                    g$ls/false$9070$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9069$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9069$mjVUK '(_ any)))))
         g$e$9066$mjVUK))))
   (g$case-lambda-transformer$8514$mjVUK
     g$case-lambda-transformer$12032$mjVUK
     (case-lambda
       ((g$e$9072$mjVUK g$r$9073$mjVUK g$mr$9074$mjVUK)
        ((case-lambda
           ((g$t$9075$mjVUK)
            ((case-lambda
               ((g$ls/false$9076$mjVUK)
                (if g$ls/false$9076$mjVUK
                  (apply
                    (case-lambda
                      ((g$fmls*$9077$mjVUK g$b*$9078$mjVUK g$b**$9079$mjVUK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8575$mjVUK
                              g$e$9072$mjVUK
                              g$fmls*$9077$mjVUK
                              (g$map$5602$mjVUK
                                cons
                                g$b*$9078$mjVUK
                                g$b**$9079$mjVUK)
                              g$r$9073$mjVUK
                              g$mr$9074$mjVUK)))
                         (case-lambda
                           ((g$fmls*$9082$mjVUK g$body*$9083$mjVUK)
                            ((case-lambda
                               ((g$body*$9084$mjVUK g$fmls*$9085$mjVUK)
                                (g$build-case-lambda$8201$mjVUK
                                  '#f
                                  g$fmls*$9085$mjVUK
                                  g$body*$9084$mjVUK)))
                             g$body*$9083$mjVUK
                             g$fmls*$9082$mjVUK))))))
                    g$ls/false$9076$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9075$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9075$mjVUK
               '(_ . #(each (any any . each-any)))))))
         g$e$9072$mjVUK))))
   (g$lambda-transformer$8515$mjVUK
     g$lambda-transformer$12033$mjVUK
     (case-lambda
       ((g$e$9086$mjVUK g$r$9087$mjVUK g$mr$9088$mjVUK)
        ((case-lambda
           ((g$t$9089$mjVUK)
            ((case-lambda
               ((g$ls/false$9090$mjVUK)
                (if g$ls/false$9090$mjVUK
                  (apply
                    (case-lambda
                      ((g$fmls$9091$mjVUK g$b$9092$mjVUK g$b*$9093$mjVUK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8574$mjVUK
                              g$e$9086$mjVUK
                              g$fmls$9091$mjVUK
                              (cons g$b$9092$mjVUK g$b*$9093$mjVUK)
                              g$r$9087$mjVUK
                              g$mr$9088$mjVUK)))
                         (case-lambda
                           ((g$fmls$9096$mjVUK g$body$9097$mjVUK)
                            ((case-lambda
                               ((g$body$9098$mjVUK g$fmls$9099$mjVUK)
                                (g$build-lambda$8200$mjVUK
                                  '#f
                                  g$fmls$9099$mjVUK
                                  g$body$9098$mjVUK)))
                             g$body$9097$mjVUK
                             g$fmls$9096$mjVUK))))))
                    g$ls/false$9090$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9089$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9089$mjVUK
               '(_ any any . each-any)))))
         g$e$9086$mjVUK))))
   (g$bless$8516$mjVUK
     g$bless$12034$mjVUK
     (case-lambda
       ((g$x$9100$mjVUK)
        (g$mkstx$8262$mjVUK
          ((letrec ((g$f$9101$mjVUK
                      (case-lambda
                        ((g$x$9102$mjVUK)
                         (if (g$stx?$8246$mjVUK g$x$9102$mjVUK)
                           g$x$9102$mjVUK
                           (if (pair? g$x$9102$mjVUK)
                             (cons
                               (g$f$9101$mjVUK (car g$x$9102$mjVUK))
                               (g$f$9101$mjVUK (cdr g$x$9102$mjVUK)))
                             (if (symbol? g$x$9102$mjVUK)
                               (g$scheme-stx$8496$mjVUK g$x$9102$mjVUK)
                               (if (vector? g$x$9102$mjVUK)
                                 (g$vector-map$5879$mjVUK
                                   g$f$9101$mjVUK
                                   g$x$9102$mjVUK)
                                 g$x$9102$mjVUK))))))))
             g$f$9101$mjVUK)
           g$x$9100$mjVUK)
          '()
          '()
          '()))))
   (g$with-syntax-macro$8517$mjVUK
     g$with-syntax-macro$12035$mjVUK
     (case-lambda
       ((g$e$9103$mjVUK)
        ((case-lambda
           ((g$t$9104$mjVUK)
            ((case-lambda
               ((g$ls/false$9105$mjVUK)
                (if g$ls/false$9105$mjVUK
                  (apply
                    (case-lambda
                      ((g$pat*$9106$mjVUK
                         g$expr*$9107$mjVUK
                         g$b$9108$mjVUK
                         g$b*$9109$mjVUK)
                       ((case-lambda
                          ((g$idn*$9110$mjVUK)
                           (begin
                             (g$verify-formals$8573$mjVUK
                               (g$map$5602$mjVUK car g$idn*$9110$mjVUK)
                               g$e$9103$mjVUK)
                             ((case-lambda
                                ((g$t*$9111$mjVUK)
                                 (g$bless$8516$mjVUK
                                   (list
                                     'let
                                     (g$map$5602$mjVUK
                                       list
                                       g$t*$9111$mjVUK
                                       g$expr*$9107$mjVUK)
                                     ((letrec ((g$f$9112$mjVUK
                                                 (case-lambda
                                                   ((g$pat*$9113$mjVUK
                                                      g$t*$9114$mjVUK)
                                                    (if (null?
                                                          g$pat*$9113$mjVUK)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$9108$mjVUK
                                                            g$b*$9109$mjVUK)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$9114$mjVUK)
                                                        '()
                                                        (list
                                                          (car g$pat*$9113$mjVUK)
                                                          (g$f$9112$mjVUK
                                                            (cdr g$pat*$9113$mjVUK)
                                                            (cdr g$t*$9114$mjVUK)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$9113$mjVUK))
                                                            (car g$t*$9114$mjVUK)))))))))
                                        g$f$9112$mjVUK)
                                      g$pat*$9106$mjVUK
                                      g$t*$9111$mjVUK)))))
                              (g$generate-temporaries$8655$mjVUK
                                g$expr*$9107$mjVUK)))))
                        ((letrec ((g$f$9115$mjVUK
                                    (case-lambda
                                      ((g$pat*$9116$mjVUK)
                                       (if (null? g$pat*$9116$mjVUK)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$8552$mjVUK
                                                (car g$pat*$9116$mjVUK)
                                                '())))
                                           (case-lambda
                                             ((g$pat$9119$mjVUK
                                                g$idn*$9120$mjVUK)
                                              ((case-lambda
                                                 ((g$idn*$9121$mjVUK
                                                    g$pat$9122$mjVUK)
                                                  (append
                                                    g$idn*$9121$mjVUK
                                                    (g$f$9115$mjVUK
                                                      (cdr g$pat*$9116$mjVUK)))))
                                               g$idn*$9120$mjVUK
                                               g$pat$9119$mjVUK)))))))))
                           g$f$9115$mjVUK)
                         g$pat*$9106$mjVUK))))
                    g$ls/false$9105$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9104$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9104$mjVUK
               '(_ #(each (any any)) any . each-any)))))
         g$e$9103$mjVUK))))
   (g$invalid-fmls-error$8518$mjVUK
     g$invalid-fmls-error$12036$mjVUK
     (case-lambda
       ((g$stx$9123$mjVUK g$fmls$9124$mjVUK)
        ((case-lambda
           ((g$t$9125$mjVUK)
            ((case-lambda
               ((g$ls/false$9126$mjVUK)
                (if g$ls/false$9126$mjVUK
                  (apply
                    (case-lambda
                      ((g$id*$9127$mjVUK g$last$9128$mjVUK)
                       ((letrec ((g$f$9129$mjVUK
                                   (case-lambda
                                     ((g$id*$9130$mjVUK)
                                      (if (null? g$id*$9130$mjVUK)
                                        (values)
                                        (if (not (g$id?$8274$mjVUK
                                                   (car g$id*$9130$mjVUK)))
                                          (g$syntax-violation$8665$mjVUK
                                            '#f
                                            '"not an identifier"
                                            g$stx$9123$mjVUK
                                            (car g$id*$9130$mjVUK))
                                          (begin
                                            (g$f$9129$mjVUK
                                              (cdr g$id*$9130$mjVUK))
                                            (if (g$bound-id-member?$8281$mjVUK
                                                  (car g$id*$9130$mjVUK)
                                                  (cdr g$id*$9130$mjVUK))
                                              (g$syntax-violation$8665$mjVUK
                                                '#f
                                                '"duplicate binding"
                                                g$stx$9123$mjVUK
                                                (car g$id*$9130$mjVUK))
                                              (void)))))))))
                          g$f$9129$mjVUK)
                        (if (g$id?$8274$mjVUK g$last$9128$mjVUK)
                          (cons g$last$9128$mjVUK g$id*$9127$mjVUK)
                          (if (g$syntax-null?$8269$mjVUK g$last$9128$mjVUK)
                            g$id*$9127$mjVUK
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"not an identifier"
                              g$stx$9123$mjVUK
                              g$last$9128$mjVUK))))))
                    g$ls/false$9126$mjVUK)
                  ((case-lambda
                     ((g$t$9131$mjVUK)
                      ((case-lambda
                         ((g$ls/false$9132$mjVUK)
                          (if g$ls/false$9132$mjVUK
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8665$mjVUK
                                   '#f
                                   '"malformed binding form"
                                   g$stx$9123$mjVUK
                                   g$fmls$9124$mjVUK)))
                              g$ls/false$9132$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$9131$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK g$t$9131$mjVUK '_))))
                   g$t$9125$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9125$mjVUK
               '#(each+ any () any)))))
         g$fmls$9124$mjVUK))))
   (g$let-macro$8519$mjVUK
     g$let-macro$12037$mjVUK
     (case-lambda
       ((g$stx$9133$mjVUK)
        ((case-lambda
           ((g$t$9134$mjVUK)
            ((case-lambda
               ((g$ls/false$9135$mjVUK)
                (if g$ls/false$9135$mjVUK
                  (apply
                    (case-lambda
                      ((g$lhs*$9136$mjVUK
                         g$rhs*$9137$mjVUK
                         g$b$9138$mjVUK
                         g$b*$9139$mjVUK)
                       (if (g$valid-bound-ids?$8279$mjVUK g$lhs*$9136$mjVUK)
                         (g$bless$8516$mjVUK
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$9136$mjVUK
                                 (cons g$b$9138$mjVUK g$b*$9139$mjVUK)))
                             g$rhs*$9137$mjVUK))
                         (g$invalid-fmls-error$8518$mjVUK
                           g$stx$9133$mjVUK
                           g$lhs*$9136$mjVUK))))
                    g$ls/false$9135$mjVUK)
                  ((case-lambda
                     ((g$t$9140$mjVUK)
                      ((case-lambda
                         ((g$ls/false$9141$mjVUK)
                          (if (if g$ls/false$9141$mjVUK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$9142$mjVUK
                                         g$lhs*$9143$mjVUK
                                         g$rhs*$9144$mjVUK
                                         g$b$9145$mjVUK
                                         g$b*$9146$mjVUK)
                                       (g$id?$8274$mjVUK g$f$9142$mjVUK)))
                                    g$ls/false$9141$mjVUK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$9147$mjVUK
                                   g$lhs*$9148$mjVUK
                                   g$rhs*$9149$mjVUK
                                   g$b$9150$mjVUK
                                   g$b*$9151$mjVUK)
                                 (if (g$valid-bound-ids?$8279$mjVUK
                                       g$lhs*$9148$mjVUK)
                                   (g$bless$8516$mjVUK
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$9147$mjVUK
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$9148$mjVUK
                                                 (cons
                                                   g$b$9150$mjVUK
                                                   g$b*$9151$mjVUK)))))
                                         g$f$9147$mjVUK)
                                       g$rhs*$9149$mjVUK))
                                   (g$invalid-fmls-error$8518$mjVUK
                                     g$stx$9133$mjVUK
                                     g$lhs*$9148$mjVUK))))
                              g$ls/false$9141$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$9140$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$9140$mjVUK
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$9134$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9134$mjVUK
               '(_ #(each (any any)) any . each-any)))))
         g$stx$9133$mjVUK))))
   (g$let-values-macro$8520$mjVUK
     g$let-values-macro$12038$mjVUK
     (case-lambda
       ((g$stx$9152$mjVUK)
        (letrec* ((g$rename$9153$mjVUK
                    (case-lambda
                      ((g$x$9204$mjVUK g$old*$9205$mjVUK g$new*$9206$mjVUK)
                       (begin
                         (if (not (g$id?$8274$mjVUK g$x$9204$mjVUK))
                           (g$syntax-violation$8665$mjVUK
                             '#f
                             '"not an indentifier"
                             g$stx$9152$mjVUK
                             g$x$9204$mjVUK)
                           (void))
                         (if (g$bound-id-member?$8281$mjVUK
                               g$x$9204$mjVUK
                               g$old*$9205$mjVUK)
                           (g$syntax-violation$8665$mjVUK
                             '#f
                             '"duplicate binding"
                             g$stx$9152$mjVUK
                             g$x$9204$mjVUK)
                           (void))
                         ((case-lambda
                            ((g$y$9207$mjVUK)
                             (values
                               g$y$9207$mjVUK
                               (cons g$x$9204$mjVUK g$old*$9205$mjVUK)
                               (cons g$y$9207$mjVUK g$new*$9206$mjVUK))))
                          (gensym
                            (g$syntax->datum$8668$mjVUK g$x$9204$mjVUK)))))))
                  (g$rename*$9154$mjVUK
                    (case-lambda
                      ((g$x*$9195$mjVUK g$old*$9196$mjVUK g$new*$9197$mjVUK)
                       (if (null? g$x*$9195$mjVUK)
                         (values '() g$old*$9196$mjVUK g$new*$9197$mjVUK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$9153$mjVUK
                                (car g$x*$9195$mjVUK)
                                g$old*$9196$mjVUK
                                g$new*$9197$mjVUK)))
                           (case-lambda
                             ((g$x$9198$mjVUK
                                g$old*$9199$mjVUK
                                g$new*$9200$mjVUK)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$9154$mjVUK
                                     (cdr g$x*$9195$mjVUK)
                                     g$old*$9199$mjVUK
                                     g$new*$9200$mjVUK)))
                                (case-lambda
                                  ((g$x*$9201$mjVUK
                                     g$old*$9202$mjVUK
                                     g$new*$9203$mjVUK)
                                   (values
                                     (cons g$x$9198$mjVUK g$x*$9201$mjVUK)
                                     g$old*$9202$mjVUK
                                     g$new*$9203$mjVUK))))))))))))
          ((case-lambda
             ((g$t$9155$mjVUK)
              ((case-lambda
                 ((g$ls/false$9156$mjVUK)
                  (if g$ls/false$9156$mjVUK
                    (apply
                      (case-lambda
                        ((g$b$9157$mjVUK g$b*$9158$mjVUK)
                         (g$cons*$5604$mjVUK
                           (g$bless$8516$mjVUK 'let)
                           '()
                           g$b$9157$mjVUK
                           g$b*$9158$mjVUK)))
                      g$ls/false$9156$mjVUK)
                    ((case-lambda
                       ((g$t$9159$mjVUK)
                        ((case-lambda
                           ((g$ls/false$9160$mjVUK)
                            (if g$ls/false$9160$mjVUK
                              (apply
                                (case-lambda
                                  ((g$lhs*$9161$mjVUK
                                     g$rhs*$9162$mjVUK
                                     g$b$9163$mjVUK
                                     g$b*$9164$mjVUK)
                                   (g$bless$8516$mjVUK
                                     ((letrec ((g$f$9165$mjVUK
                                                 (case-lambda
                                                   ((g$lhs*$9166$mjVUK
                                                      g$rhs*$9167$mjVUK
                                                      g$old*$9168$mjVUK
                                                      g$new*$9169$mjVUK)
                                                    (if (null?
                                                          g$lhs*$9166$mjVUK)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$5602$mjVUK
                                                            list
                                                            g$old*$9168$mjVUK
                                                            g$new*$9169$mjVUK)
                                                          (cons
                                                            g$b$9163$mjVUK
                                                            g$b*$9164$mjVUK)))
                                                      ((case-lambda
                                                         ((g$t$9170$mjVUK)
                                                          ((case-lambda
                                                             ((g$ls/false$9171$mjVUK)
                                                              (if g$ls/false$9171$mjVUK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$9172$mjVUK)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$9154$mjVUK
                                                                            g$x*$9172$mjVUK
                                                                            g$old*$9168$mjVUK
                                                                            g$new*$9169$mjVUK)))
                                                                       (case-lambda
                                                                         ((g$y*$9176$mjVUK
                                                                            g$old*$9177$mjVUK
                                                                            g$new*$9178$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$new*$9179$mjVUK
                                                                                g$old*$9180$mjVUK
                                                                                g$y*$9181$mjVUK)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$9167$mjVUK))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$9181$mjVUK
                                                                                  (g$f$9165$mjVUK
                                                                                    (cdr g$lhs*$9166$mjVUK)
                                                                                    (cdr g$rhs*$9167$mjVUK)
                                                                                    g$old*$9180$mjVUK
                                                                                    g$new*$9179$mjVUK)))))
                                                                           g$new*$9178$mjVUK
                                                                           g$old*$9177$mjVUK
                                                                           g$y*$9176$mjVUK))))))
                                                                  g$ls/false$9171$mjVUK)
                                                                ((case-lambda
                                                                   ((g$t$9182$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9183$mjVUK)
                                                                        (if g$ls/false$9183$mjVUK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$9184$mjVUK
                                                                                 g$x$9185$mjVUK)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$9153$mjVUK
                                                                                      g$x$9185$mjVUK
                                                                                      g$old*$9168$mjVUK
                                                                                      g$new*$9169$mjVUK)))
                                                                                 (case-lambda
                                                                                   ((g$y$9186$mjVUK
                                                                                      g$old*$9187$mjVUK
                                                                                      g$new*$9188$mjVUK)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$9154$mjVUK
                                                                                           g$x*$9184$mjVUK
                                                                                           g$old*$9187$mjVUK
                                                                                           g$new*$9188$mjVUK)))
                                                                                      (case-lambda
                                                                                        ((g$y*$9189$mjVUK
                                                                                           g$old*$9190$mjVUK
                                                                                           g$new*$9191$mjVUK)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$9167$mjVUK))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$9189$mjVUK
                                                                                               g$y$9186$mjVUK)
                                                                                             (g$f$9165$mjVUK
                                                                                               (cdr g$lhs*$9166$mjVUK)
                                                                                               (cdr g$rhs*$9167$mjVUK)
                                                                                               g$old*$9190$mjVUK
                                                                                               g$new*$9191$mjVUK)))))))))))
                                                                            g$ls/false$9183$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$t$9192$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9193$mjVUK)
                                                                                  (if g$ls/false$9193$mjVUK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$9194$mjVUK)
                                                                                         (g$syntax-violation$8665$mjVUK
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$9152$mjVUK
                                                                                           g$others$9194$mjVUK)))
                                                                                      g$ls/false$9193$mjVUK)
                                                                                    (g$syntax-violation$8665$mjVUK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9192$mjVUK))))
                                                                               (g$syntax-dispatch$8553$mjVUK
                                                                                 g$t$9192$mjVUK
                                                                                 'any))))
                                                                           g$t$9182$mjVUK))))
                                                                     (g$syntax-dispatch$8553$mjVUK
                                                                       g$t$9182$mjVUK
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$9170$mjVUK))))
                                                           (g$syntax-dispatch$8553$mjVUK
                                                             g$t$9170$mjVUK
                                                             'each-any))))
                                                       (car g$lhs*$9166$mjVUK)))))))
                                        g$f$9165$mjVUK)
                                      g$lhs*$9161$mjVUK
                                      g$rhs*$9162$mjVUK
                                      '()
                                      '()))))
                                g$ls/false$9160$mjVUK)
                              (g$syntax-violation$8665$mjVUK
                                '#f
                                '"invalid syntax"
                                g$t$9159$mjVUK))))
                         (g$syntax-dispatch$8553$mjVUK
                           g$t$9159$mjVUK
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$9155$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK
                 g$t$9155$mjVUK
                 '(_ () any . each-any)))))
           g$stx$9152$mjVUK)))))
   (g$let*-values-macro$8521$mjVUK
     g$let*-values-macro$12039$mjVUK
     (case-lambda
       ((g$stx$9208$mjVUK)
        (letrec* ((g$check$9209$mjVUK
                    (case-lambda
                      ((g$x*$9233$mjVUK)
                       (if (not (null? g$x*$9233$mjVUK))
                         ((case-lambda
                            ((g$x$9234$mjVUK)
                             (begin
                               (if (not (g$id?$8274$mjVUK g$x$9234$mjVUK))
                                 (g$syntax-violation$8665$mjVUK
                                   '#f
                                   '"not an identifier"
                                   g$stx$9208$mjVUK
                                   g$x$9234$mjVUK)
                                 (void))
                               (g$check$9209$mjVUK (cdr g$x*$9233$mjVUK))
                               (if (g$bound-id-member?$8281$mjVUK
                                     g$x$9234$mjVUK
                                     (cdr g$x*$9233$mjVUK))
                                 (g$syntax-violation$8665$mjVUK
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$9208$mjVUK
                                   g$x$9234$mjVUK)
                                 (void)))))
                          (car g$x*$9233$mjVUK))
                         (void))))))
          ((case-lambda
             ((g$t$9210$mjVUK)
              ((case-lambda
                 ((g$ls/false$9211$mjVUK)
                  (if g$ls/false$9211$mjVUK
                    (apply
                      (case-lambda
                        ((g$b$9212$mjVUK g$b*$9213$mjVUK)
                         (g$cons*$5604$mjVUK
                           (g$bless$8516$mjVUK 'let)
                           '()
                           g$b$9212$mjVUK
                           g$b*$9213$mjVUK)))
                      g$ls/false$9211$mjVUK)
                    ((case-lambda
                       ((g$t$9214$mjVUK)
                        ((case-lambda
                           ((g$ls/false$9215$mjVUK)
                            (if g$ls/false$9215$mjVUK
                              (apply
                                (case-lambda
                                  ((g$lhs*$9216$mjVUK
                                     g$rhs*$9217$mjVUK
                                     g$b$9218$mjVUK
                                     g$b*$9219$mjVUK)
                                   (g$bless$8516$mjVUK
                                     ((letrec ((g$f$9220$mjVUK
                                                 (case-lambda
                                                   ((g$lhs*$9221$mjVUK
                                                      g$rhs*$9222$mjVUK)
                                                    (if (null?
                                                          g$lhs*$9221$mjVUK)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$9218$mjVUK
                                                          g$b*$9219$mjVUK))
                                                      ((case-lambda
                                                         ((g$t$9223$mjVUK)
                                                          ((case-lambda
                                                             ((g$ls/false$9224$mjVUK)
                                                              (if g$ls/false$9224$mjVUK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$9225$mjVUK)
                                                                     (begin
                                                                       (g$check$9209$mjVUK
                                                                         g$x*$9225$mjVUK)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$9222$mjVUK))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$9225$mjVUK
                                                                           (g$f$9220$mjVUK
                                                                             (cdr g$lhs*$9221$mjVUK)
                                                                             (cdr g$rhs*$9222$mjVUK)))))))
                                                                  g$ls/false$9224$mjVUK)
                                                                ((case-lambda
                                                                   ((g$t$9226$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9227$mjVUK)
                                                                        (if g$ls/false$9227$mjVUK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$9228$mjVUK
                                                                                 g$x$9229$mjVUK)
                                                                               (begin
                                                                                 (g$check$9209$mjVUK
                                                                                   (cons
                                                                                     g$x$9229$mjVUK
                                                                                     g$x*$9228$mjVUK))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$9222$mjVUK))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$9228$mjVUK
                                                                                       g$x$9229$mjVUK)
                                                                                     (g$f$9220$mjVUK
                                                                                       (cdr g$lhs*$9221$mjVUK)
                                                                                       (cdr g$rhs*$9222$mjVUK)))))))
                                                                            g$ls/false$9227$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$t$9230$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9231$mjVUK)
                                                                                  (if g$ls/false$9231$mjVUK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$9232$mjVUK)
                                                                                         (g$syntax-violation$8665$mjVUK
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$9208$mjVUK
                                                                                           g$others$9232$mjVUK)))
                                                                                      g$ls/false$9231$mjVUK)
                                                                                    (g$syntax-violation$8665$mjVUK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9230$mjVUK))))
                                                                               (g$syntax-dispatch$8553$mjVUK
                                                                                 g$t$9230$mjVUK
                                                                                 'any))))
                                                                           g$t$9226$mjVUK))))
                                                                     (g$syntax-dispatch$8553$mjVUK
                                                                       g$t$9226$mjVUK
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$9223$mjVUK))))
                                                           (g$syntax-dispatch$8553$mjVUK
                                                             g$t$9223$mjVUK
                                                             'each-any))))
                                                       (car g$lhs*$9221$mjVUK)))))))
                                        g$f$9220$mjVUK)
                                      g$lhs*$9216$mjVUK
                                      g$rhs*$9217$mjVUK))))
                                g$ls/false$9215$mjVUK)
                              (g$syntax-violation$8665$mjVUK
                                '#f
                                '"invalid syntax"
                                g$t$9214$mjVUK))))
                         (g$syntax-dispatch$8553$mjVUK
                           g$t$9214$mjVUK
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$9210$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK
                 g$t$9210$mjVUK
                 '(_ () any . each-any)))))
           g$stx$9208$mjVUK)))))
   (g$trace-lambda-macro$8522$mjVUK
     g$trace-lambda-macro$12040$mjVUK
     (case-lambda
       ((g$stx$9235$mjVUK)
        ((case-lambda
           ((g$t$9236$mjVUK)
            ((case-lambda
               ((g$ls/false$9237$mjVUK)
                (if g$ls/false$9237$mjVUK
                  (apply
                    (case-lambda
                      ((g$who$9238$mjVUK
                         g$fmls$9239$mjVUK
                         g$b$9240$mjVUK
                         g$b*$9241$mjVUK)
                       (if (g$valid-bound-ids?$8279$mjVUK g$fmls$9239$mjVUK)
                         (g$bless$8516$mjVUK
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$9238$mjVUK)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$9239$mjVUK
                                 (cons g$b$9240$mjVUK g$b*$9241$mjVUK)))))
                         (g$invalid-fmls-error$8518$mjVUK
                           g$stx$9235$mjVUK
                           g$fmls$9239$mjVUK))))
                    g$ls/false$9237$mjVUK)
                  ((case-lambda
                     ((g$t$9242$mjVUK)
                      ((case-lambda
                         ((g$ls/false$9243$mjVUK)
                          (if g$ls/false$9243$mjVUK
                            (apply
                              (case-lambda
                                ((g$who$9244$mjVUK
                                   g$fmls$9245$mjVUK
                                   g$last$9246$mjVUK
                                   g$b$9247$mjVUK
                                   g$b*$9248$mjVUK)
                                 (if (g$valid-bound-ids?$8279$mjVUK
                                       (cons
                                         g$last$9246$mjVUK
                                         g$fmls$9245$mjVUK))
                                   (g$bless$8516$mjVUK
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$9244$mjVUK)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$9245$mjVUK
                                             g$last$9246$mjVUK)
                                           (cons
                                             g$b$9247$mjVUK
                                             g$b*$9248$mjVUK)))))
                                   (g$invalid-fmls-error$8518$mjVUK
                                     g$stx$9235$mjVUK
                                     (append
                                       g$fmls$9245$mjVUK
                                       g$last$9246$mjVUK)))))
                              g$ls/false$9243$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$9242$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$9242$mjVUK
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$9236$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9236$mjVUK
               '(_ any each-any any . each-any)))))
         g$stx$9235$mjVUK))))
   (g$trace-define-macro$8523$mjVUK
     g$trace-define-macro$12041$mjVUK
     (case-lambda
       ((g$stx$9249$mjVUK)
        ((case-lambda
           ((g$t$9250$mjVUK)
            ((case-lambda
               ((g$ls/false$9251$mjVUK)
                (if g$ls/false$9251$mjVUK
                  (apply
                    (case-lambda
                      ((g$who$9252$mjVUK
                         g$fmls$9253$mjVUK
                         g$b$9254$mjVUK
                         g$b*$9255$mjVUK)
                       (if (g$valid-bound-ids?$8279$mjVUK g$fmls$9253$mjVUK)
                         (g$bless$8516$mjVUK
                           (list
                             'define
                             g$who$9252$mjVUK
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$9252$mjVUK)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$9253$mjVUK
                                   (cons g$b$9254$mjVUK g$b*$9255$mjVUK))))))
                         (g$invalid-fmls-error$8518$mjVUK
                           g$stx$9249$mjVUK
                           g$fmls$9253$mjVUK))))
                    g$ls/false$9251$mjVUK)
                  ((case-lambda
                     ((g$t$9256$mjVUK)
                      ((case-lambda
                         ((g$ls/false$9257$mjVUK)
                          (if g$ls/false$9257$mjVUK
                            (apply
                              (case-lambda
                                ((g$who$9258$mjVUK
                                   g$fmls$9259$mjVUK
                                   g$last$9260$mjVUK
                                   g$b$9261$mjVUK
                                   g$b*$9262$mjVUK)
                                 (if (g$valid-bound-ids?$8279$mjVUK
                                       (cons
                                         g$last$9260$mjVUK
                                         g$fmls$9259$mjVUK))
                                   (g$bless$8516$mjVUK
                                     (list
                                       'define
                                       g$who$9258$mjVUK
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$9258$mjVUK)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$9259$mjVUK
                                               g$last$9260$mjVUK)
                                             (cons
                                               g$b$9261$mjVUK
                                               g$b*$9262$mjVUK))))))
                                   (g$invalid-fmls-error$8518$mjVUK
                                     g$stx$9249$mjVUK
                                     (append
                                       g$fmls$9259$mjVUK
                                       g$last$9260$mjVUK)))))
                              g$ls/false$9257$mjVUK)
                            ((case-lambda
                               ((g$t$9263$mjVUK)
                                ((case-lambda
                                   ((g$ls/false$9264$mjVUK)
                                    (if g$ls/false$9264$mjVUK
                                      (apply
                                        (case-lambda
                                          ((g$who$9265$mjVUK g$expr$9266$mjVUK)
                                           (if (g$id?$8274$mjVUK
                                                 g$who$9265$mjVUK)
                                             (g$bless$8516$mjVUK
                                               (list
                                                 'define
                                                 g$who$9265$mjVUK
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$9266$mjVUK))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$9265$mjVUK)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8665$mjVUK
                                               '#f
                                               '"invalid name"
                                               g$stx$9249$mjVUK))))
                                        g$ls/false$9264$mjVUK)
                                      (g$syntax-violation$8665$mjVUK
                                        '#f
                                        '"invalid syntax"
                                        g$t$9263$mjVUK))))
                                 (g$syntax-dispatch$8553$mjVUK
                                   g$t$9263$mjVUK
                                   '(_ any any)))))
                             g$t$9256$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$9256$mjVUK
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$9250$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9250$mjVUK
               '(_ (any . each-any) any . each-any)))))
         g$stx$9249$mjVUK))))
   (g$trace-define-syntax-macro$8524$mjVUK
     g$trace-define-syntax-macro$12042$mjVUK
     (case-lambda
       ((g$stx$9267$mjVUK)
        ((case-lambda
           ((g$t$9268$mjVUK)
            ((case-lambda
               ((g$ls/false$9269$mjVUK)
                (if g$ls/false$9269$mjVUK
                  (apply
                    (case-lambda
                      ((g$who$9270$mjVUK g$expr$9271$mjVUK)
                       (if (g$id?$8274$mjVUK g$who$9270$mjVUK)
                         (g$bless$8516$mjVUK
                           (list
                             'define-syntax
                             g$who$9270$mjVUK
                             (list
                               'make-traced-macro
                               (list 'quote g$who$9270$mjVUK)
                               g$expr$9271$mjVUK)))
                         (g$syntax-violation$8665$mjVUK
                           '#f
                           '"invalid name"
                           g$stx$9267$mjVUK))))
                    g$ls/false$9269$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9268$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9268$mjVUK '(_ any any)))))
         g$stx$9267$mjVUK))))
   (g$trace-let/rec-syntax$8525$mjVUK
     g$trace-let/rec-syntax$12043$mjVUK
     (case-lambda
       ((g$who$9272$mjVUK)
        (case-lambda
          ((g$stx$9273$mjVUK)
           ((case-lambda
              ((g$t$9274$mjVUK)
               ((case-lambda
                  ((g$ls/false$9275$mjVUK)
                   (if g$ls/false$9275$mjVUK
                     (apply
                       (case-lambda
                         ((g$lhs*$9276$mjVUK
                            g$rhs*$9277$mjVUK
                            g$b$9278$mjVUK
                            g$b*$9279$mjVUK)
                          (if (g$valid-bound-ids?$8279$mjVUK g$lhs*$9276$mjVUK)
                            ((case-lambda
                               ((g$rhs*$9280$mjVUK)
                                (g$bless$8516$mjVUK
                                  (cons
                                    g$who$9272$mjVUK
                                    (cons
                                      (g$map$5602$mjVUK
                                        list
                                        g$lhs*$9276$mjVUK
                                        g$rhs*$9280$mjVUK)
                                      (cons g$b$9278$mjVUK g$b*$9279$mjVUK))))))
                             (g$map$5602$mjVUK
                               (case-lambda
                                 ((g$lhs$9281$mjVUK g$rhs$9282$mjVUK)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$9281$mjVUK)
                                    g$rhs$9282$mjVUK)))
                               g$lhs*$9276$mjVUK
                               g$rhs*$9277$mjVUK))
                            (g$invalid-fmls-error$8518$mjVUK
                              g$stx$9273$mjVUK
                              g$lhs*$9276$mjVUK))))
                       g$ls/false$9275$mjVUK)
                     (g$syntax-violation$8665$mjVUK
                       '#f
                       '"invalid syntax"
                       g$t$9274$mjVUK))))
                (g$syntax-dispatch$8553$mjVUK
                  g$t$9274$mjVUK
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$9273$mjVUK))))))
   (g$trace-let-syntax-macro$8526$mjVUK
     g$trace-let-syntax-macro$12044$mjVUK
     (g$trace-let/rec-syntax$8525$mjVUK 'let-syntax))
   (g$trace-letrec-syntax-macro$8527$mjVUK
     g$trace-letrec-syntax-macro$12045$mjVUK
     (g$trace-let/rec-syntax$8525$mjVUK 'letrec-syntax))
   (g$guard-macro$8528$mjVUK
     g$guard-macro$12046$mjVUK
     (case-lambda
       ((g$x$9283$mjVUK)
        (letrec* ((g$gen-clauses$9284$mjVUK
                    (case-lambda
                      ((g$con$9296$mjVUK
                         g$outerk$9297$mjVUK
                         g$clause*$9298$mjVUK)
                       (letrec* ((g$f$9299$mjVUK
                                   (case-lambda
                                     ((g$x$9327$mjVUK g$k$9328$mjVUK)
                                      ((case-lambda
                                         ((g$t$9329$mjVUK)
                                          ((case-lambda
                                             ((g$ls/false$9330$mjVUK)
                                              (if g$ls/false$9330$mjVUK
                                                (apply
                                                  (case-lambda
                                                    ((g$e$9331$mjVUK
                                                       g$p$9332$mjVUK)
                                                     ((case-lambda
                                                        ((g$t$9333$mjVUK)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$9333$mjVUK
                                                               g$e$9331$mjVUK))
                                                           (list
                                                             'if
                                                             g$t$9333$mjVUK
                                                             (list
                                                               g$p$9332$mjVUK
                                                               g$t$9333$mjVUK)
                                                             g$k$9328$mjVUK))))
                                                      (gensym))))
                                                  g$ls/false$9330$mjVUK)
                                                ((case-lambda
                                                   ((g$t$9334$mjVUK)
                                                    ((case-lambda
                                                       ((g$ls/false$9335$mjVUK)
                                                        (if g$ls/false$9335$mjVUK
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9336$mjVUK)
                                                               ((case-lambda
                                                                  ((g$t$9337$mjVUK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$9337$mjVUK
                                                                         g$e$9336$mjVUK))
                                                                     (list
                                                                       'if
                                                                       g$t$9337$mjVUK
                                                                       g$t$9337$mjVUK
                                                                       g$k$9328$mjVUK))))
                                                                (gensym))))
                                                            g$ls/false$9335$mjVUK)
                                                          ((case-lambda
                                                             ((g$t$9338$mjVUK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9339$mjVUK)
                                                                  (if g$ls/false$9339$mjVUK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$9340$mjVUK
                                                                           g$v$9341$mjVUK
                                                                           g$v*$9342$mjVUK)
                                                                         (list
                                                                           'if
                                                                           g$e$9340$mjVUK
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$9341$mjVUK
                                                                               g$v*$9342$mjVUK))
                                                                           g$k$9328$mjVUK)))
                                                                      g$ls/false$9339$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$t$9343$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9344$mjVUK)
                                                                            (if g$ls/false$9344$mjVUK
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8665$mjVUK
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$9327$mjVUK)))
                                                                                g$ls/false$9344$mjVUK)
                                                                              (g$syntax-violation$8665$mjVUK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9343$mjVUK))))
                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                           g$t$9343$mjVUK
                                                                           '_))))
                                                                     g$t$9338$mjVUK))))
                                                               (g$syntax-dispatch$8553$mjVUK
                                                                 g$t$9338$mjVUK
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$9334$mjVUK))))
                                                     (g$syntax-dispatch$8553$mjVUK
                                                       g$t$9334$mjVUK
                                                       '(any)))))
                                                 g$t$9329$mjVUK))))
                                           (g$syntax-dispatch$8553$mjVUK
                                             g$t$9329$mjVUK
                                             '(any #(scheme-id =>) any)))))
                                       g$x$9327$mjVUK))))
                                 (g$f*$9300$mjVUK
                                   (case-lambda
                                     ((g$x*$9307$mjVUK)
                                      ((case-lambda
                                         ((g$t$9308$mjVUK)
                                          ((case-lambda
                                             ((g$ls/false$9309$mjVUK)
                                              (if g$ls/false$9309$mjVUK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$9296$mjVUK)
                                                       '#t)))
                                                  g$ls/false$9309$mjVUK)
                                                ((case-lambda
                                                   ((g$t$9310$mjVUK)
                                                    ((case-lambda
                                                       ((g$ls/false$9311$mjVUK)
                                                        (if g$ls/false$9311$mjVUK
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9312$mjVUK
                                                                 g$e*$9313$mjVUK)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$9312$mjVUK
                                                                     g$e*$9313$mjVUK))
                                                                 '#f)))
                                                            g$ls/false$9311$mjVUK)
                                                          ((case-lambda
                                                             ((g$t$9314$mjVUK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9315$mjVUK)
                                                                  (if g$ls/false$9315$mjVUK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$9316$mjVUK
                                                                           g$cls*$9317$mjVUK)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$9300$mjVUK
                                                                                g$cls*$9317$mjVUK)))
                                                                           (case-lambda
                                                                             ((g$e$9320$mjVUK
                                                                                g$g$9321$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$g$9322$mjVUK
                                                                                    g$e$9323$mjVUK)
                                                                                  (values
                                                                                    (g$f$9299$mjVUK
                                                                                      g$cls$9316$mjVUK
                                                                                      g$e$9323$mjVUK)
                                                                                    g$g$9322$mjVUK)))
                                                                               g$g$9321$mjVUK
                                                                               g$e$9320$mjVUK))))))
                                                                      g$ls/false$9315$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$t$9324$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9325$mjVUK)
                                                                            (if g$ls/false$9325$mjVUK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$9326$mjVUK)
                                                                                   (g$syntax-violation$8665$mjVUK
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$9326$mjVUK)))
                                                                                g$ls/false$9325$mjVUK)
                                                                              (g$syntax-violation$8665$mjVUK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9324$mjVUK))))
                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                           g$t$9324$mjVUK
                                                                           'any))))
                                                                     g$t$9314$mjVUK))))
                                                               (g$syntax-dispatch$8553$mjVUK
                                                                 g$t$9314$mjVUK
                                                                 '(any .
                                                                       any)))))
                                                           g$t$9310$mjVUK))))
                                                     (g$syntax-dispatch$8553$mjVUK
                                                       g$t$9310$mjVUK
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$9308$mjVUK))))
                                           (g$syntax-dispatch$8553$mjVUK
                                             g$t$9308$mjVUK
                                             '()))))
                                       g$x*$9307$mjVUK)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$9300$mjVUK g$clause*$9298$mjVUK)))
                           (case-lambda
                             ((g$code$9303$mjVUK g$raisek$9304$mjVUK)
                              ((case-lambda
                                 ((g$raisek$9305$mjVUK g$code$9306$mjVUK)
                                  (if g$raisek$9305$mjVUK
                                    (list g$outerk$9297$mjVUK g$code$9306$mjVUK)
                                    g$code$9306$mjVUK)))
                               g$raisek$9304$mjVUK
                               g$code$9303$mjVUK)))))))))
          ((case-lambda
             ((g$t$9285$mjVUK)
              ((case-lambda
                 ((g$ls/false$9286$mjVUK)
                  (if (if g$ls/false$9286$mjVUK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$9287$mjVUK
                                 g$clause*$9288$mjVUK
                                 g$b$9289$mjVUK
                                 g$b*$9290$mjVUK)
                               (g$id?$8274$mjVUK g$con$9287$mjVUK)))
                            g$ls/false$9286$mjVUK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$9291$mjVUK
                           g$clause*$9292$mjVUK
                           g$b$9293$mjVUK
                           g$b*$9294$mjVUK)
                         ((case-lambda
                            ((g$outerk$9295$mjVUK)
                             (g$bless$8516$mjVUK
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$9295$mjVUK)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$9291$mjVUK)
                                           (g$gen-clauses$9284$mjVUK
                                             g$con$9291$mjVUK
                                             g$outerk$9295$mjVUK
                                             g$clause*$9292$mjVUK))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$9293$mjVUK
                                                 g$b*$9294$mjVUK))))))))))))
                          (gensym))))
                      g$ls/false$9286$mjVUK)
                    (g$syntax-violation$8665$mjVUK
                      '#f
                      '"invalid syntax"
                      g$t$9285$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK
                 g$t$9285$mjVUK
                 '(_ (any . each-any) any . each-any)))))
           g$x$9283$mjVUK)))))
   (g$define-enumeration-macro$8529$mjVUK
     g$define-enumeration-macro$12047$mjVUK
     (case-lambda
       ((g$stx$9345$mjVUK)
        (letrec* ((g$set?$9346$mjVUK
                    (case-lambda
                      ((g$x$9359$mjVUK)
                       ((case-lambda
                          ((g$t$9360$mjVUK)
                           (if g$t$9360$mjVUK
                             g$t$9360$mjVUK
                             (begin
                               '#f
                               (if (not (g$memq$5594$mjVUK
                                          (car g$x$9359$mjVUK)
                                          (cdr g$x$9359$mjVUK)))
                                 (begin
                                   '#f
                                   (g$set?$9346$mjVUK (cdr g$x$9359$mjVUK)))
                                 '#f)))))
                        (null? g$x$9359$mjVUK)))))
                  (g$remove-dups$9347$mjVUK
                    (case-lambda
                      ((g$ls$9358$mjVUK)
                       (if (null? g$ls$9358$mjVUK)
                         '()
                         (cons
                           (car g$ls$9358$mjVUK)
                           (g$remove-dups$9347$mjVUK
                             (g$remq$5609$mjVUK
                               (car g$ls$9358$mjVUK)
                               (cdr g$ls$9358$mjVUK)))))))))
          ((case-lambda
             ((g$t$9348$mjVUK)
              ((case-lambda
                 ((g$ls/false$9349$mjVUK)
                  (if (if g$ls/false$9349$mjVUK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$9350$mjVUK
                                 g$id*$9351$mjVUK
                                 g$maker$9352$mjVUK)
                               (if (g$id?$8274$mjVUK g$name$9350$mjVUK)
                                 (if (g$id?$8274$mjVUK g$maker$9352$mjVUK)
                                   (begin
                                     '#f
                                     (g$for-all$5600$mjVUK
                                       g$id?$8274$mjVUK
                                       g$id*$9351$mjVUK))
                                   '#f)
                                 '#f)))
                            g$ls/false$9349$mjVUK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$9353$mjVUK g$id*$9354$mjVUK g$maker$9355$mjVUK)
                         ((case-lambda
                            ((g$name*$9356$mjVUK g$mk$9357$mjVUK)
                             (g$bless$8516$mjVUK
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$9357$mjVUK
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$9356$mjVUK))))
                                 (list
                                   'define-syntax
                                   g$name$9353$mjVUK
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$9356$mjVUK))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$9353$mjVUK)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$9355$mjVUK
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9355$mjVUK)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$9356$mjVUK))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9355$mjVUK)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$9357$mjVUK
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$9347$mjVUK
                            (g$syntax->datum$8668$mjVUK g$id*$9354$mjVUK))
                          (gensym))))
                      g$ls/false$9349$mjVUK)
                    (g$syntax-violation$8665$mjVUK
                      '#f
                      '"invalid syntax"
                      g$t$9348$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK
                 g$t$9348$mjVUK
                 '(_ any each-any any)))))
           g$stx$9345$mjVUK)))))
   (g$time-macro$8530$mjVUK
     g$time-macro$12048$mjVUK
     (case-lambda
       ((g$stx$9361$mjVUK)
        ((case-lambda
           ((g$t$9362$mjVUK)
            ((case-lambda
               ((g$ls/false$9363$mjVUK)
                (if g$ls/false$9363$mjVUK
                  (apply
                    (case-lambda
                      ((g$expr$9364$mjVUK)
                       ((case-lambda
                          ((g$str$9365$mjVUK)
                           (g$bless$8516$mjVUK
                             (list
                               'time-it
                               g$str$9365$mjVUK
                               (list 'lambda '() g$expr$9364$mjVUK)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6903$mjVUK)))
                          (case-lambda
                            ((g$p$9368$mjVUK g$e$9369$mjVUK)
                             ((case-lambda
                                ((g$e$9370$mjVUK g$p$9371$mjVUK)
                                 (begin
                                   (write
                                     (g$syntax->datum$8668$mjVUK
                                       g$expr$9364$mjVUK)
                                     g$p$9371$mjVUK)
                                   (g$e$9370$mjVUK))))
                              g$e$9369$mjVUK
                              g$p$9368$mjVUK)))))))
                    g$ls/false$9363$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9362$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9362$mjVUK '(_ any)))))
         g$stx$9361$mjVUK))))
   (g$delay-macro$8531$mjVUK
     g$delay-macro$12049$mjVUK
     (case-lambda
       ((g$stx$9372$mjVUK)
        ((case-lambda
           ((g$t$9373$mjVUK)
            ((case-lambda
               ((g$ls/false$9374$mjVUK)
                (if g$ls/false$9374$mjVUK
                  (apply
                    (case-lambda
                      ((g$expr$9375$mjVUK)
                       (g$bless$8516$mjVUK
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$9375$mjVUK)))))
                    g$ls/false$9374$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9373$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9373$mjVUK '(_ any)))))
         g$stx$9372$mjVUK))))
   (g$assert-macro$8532$mjVUK
     g$assert-macro$12050$mjVUK
     (case-lambda
       ((g$stx$9376$mjVUK)
        ((case-lambda
           ((g$t$9377$mjVUK)
            ((case-lambda
               ((g$ls/false$9378$mjVUK)
                (if g$ls/false$9378$mjVUK
                  (apply
                    (case-lambda
                      ((g$expr$9379$mjVUK)
                       ((case-lambda
                          ((g$pos$9380$mjVUK)
                           (g$bless$8516$mjVUK
                             (list
                               'unless
                               g$expr$9379$mjVUK
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$9379$mjVUK)
                                 (list 'quote g$pos$9380$mjVUK))))))
                        ((case-lambda
                           ((g$t$9381$mjVUK)
                            (if g$t$9381$mjVUK
                              g$t$9381$mjVUK
                              (begin
                                '#f
                                (g$expression-position$8660$mjVUK
                                  g$expr$9379$mjVUK)))))
                         (g$expression-position$8660$mjVUK g$stx$9376$mjVUK)))))
                    g$ls/false$9378$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9377$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9377$mjVUK '(_ any)))))
         g$stx$9376$mjVUK))))
   (g$endianness-macro$8533$mjVUK
     g$endianness-macro$12051$mjVUK
     (case-lambda
       ((g$stx$9382$mjVUK)
        ((case-lambda
           ((g$t$9383$mjVUK)
            ((case-lambda
               ((g$ls/false$9384$mjVUK)
                (if g$ls/false$9384$mjVUK
                  (apply
                    (case-lambda
                      ((g$e$9385$mjVUK)
                       ((case-lambda
                          ((g$t$9386$mjVUK)
                           (if (g$memv$5595$mjVUK g$t$9386$mjVUK '(little))
                             (g$bless$8516$mjVUK ''little)
                             (if (g$memv$5595$mjVUK g$t$9386$mjVUK '(big))
                               (g$bless$8516$mjVUK ''big)
                               (g$syntax-violation$8665$mjVUK
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$9382$mjVUK)))))
                        (g$syntax->datum$8668$mjVUK g$e$9385$mjVUK))))
                    g$ls/false$9384$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9383$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9383$mjVUK '(_ any)))))
         g$stx$9382$mjVUK))))
   (g$identifier-syntax-macro$8534$mjVUK
     g$identifier-syntax-macro$12052$mjVUK
     (case-lambda
       ((g$stx$9387$mjVUK)
        ((case-lambda
           ((g$t$9388$mjVUK)
            ((case-lambda
               ((g$ls/false$9389$mjVUK)
                (if g$ls/false$9389$mjVUK
                  (apply
                    (case-lambda
                      ((g$expr$9390$mjVUK)
                       (g$bless$8516$mjVUK
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$9390$mjVUK))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$9390$mjVUK)
                                   '(#'(e* ...))))))))))
                    g$ls/false$9389$mjVUK)
                  ((case-lambda
                     ((g$t$9391$mjVUK)
                      ((case-lambda
                         ((g$ls/false$9392$mjVUK)
                          (if (if g$ls/false$9392$mjVUK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$9393$mjVUK
                                         g$expr1$9394$mjVUK
                                         g$id2$9395$mjVUK
                                         g$expr2$9396$mjVUK
                                         g$expr3$9397$mjVUK)
                                       (if (g$id?$8274$mjVUK g$id1$9393$mjVUK)
                                         (if (g$id?$8274$mjVUK g$id2$9395$mjVUK)
                                           (begin
                                             '#f
                                             (g$id?$8274$mjVUK
                                               g$expr2$9396$mjVUK))
                                           '#f)
                                         '#f)))
                                    g$ls/false$9392$mjVUK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$9398$mjVUK
                                   g$expr1$9399$mjVUK
                                   g$id2$9400$mjVUK
                                   g$expr2$9401$mjVUK
                                   g$expr3$9402$mjVUK)
                                 (g$bless$8516$mjVUK
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$9399$mjVUK))
                                         (list
                                           (list 'set! 'id g$expr2$9401$mjVUK)
                                           (list 'syntax g$expr3$9402$mjVUK))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$9399$mjVUK
                                               '(e* ...))))))))))
                              g$ls/false$9392$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$9391$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$9391$mjVUK
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$9388$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9388$mjVUK '(_ any)))))
         g$stx$9387$mjVUK))))
   (g$do-macro$8535$mjVUK
     g$do-macro$12053$mjVUK
     (case-lambda
       ((g$stx$9403$mjVUK)
        (letrec* ((g$bind$9404$mjVUK
                    (case-lambda
                      ((g$x$9416$mjVUK)
                       ((case-lambda
                          ((g$t$9417$mjVUK)
                           ((case-lambda
                              ((g$ls/false$9418$mjVUK)
                               (if g$ls/false$9418$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$x$9419$mjVUK g$init$9420$mjVUK)
                                      (list
                                        g$x$9419$mjVUK
                                        g$init$9420$mjVUK
                                        g$x$9419$mjVUK)))
                                   g$ls/false$9418$mjVUK)
                                 ((case-lambda
                                    ((g$t$9421$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$9422$mjVUK)
                                         (if g$ls/false$9422$mjVUK
                                           (apply
                                             (case-lambda
                                               ((g$x$9423$mjVUK
                                                  g$init$9424$mjVUK
                                                  g$step$9425$mjVUK)
                                                (list
                                                  g$x$9423$mjVUK
                                                  g$init$9424$mjVUK
                                                  g$step$9425$mjVUK)))
                                             g$ls/false$9422$mjVUK)
                                           ((case-lambda
                                              ((g$t$9426$mjVUK)
                                               ((case-lambda
                                                  ((g$ls/false$9427$mjVUK)
                                                   (if g$ls/false$9427$mjVUK
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8665$mjVUK
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$9403$mjVUK)))
                                                       g$ls/false$9427$mjVUK)
                                                     (g$syntax-violation$8665$mjVUK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9426$mjVUK))))
                                                (g$syntax-dispatch$8553$mjVUK
                                                  g$t$9426$mjVUK
                                                  '_))))
                                            g$t$9421$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$9421$mjVUK
                                        '(any any any)))))
                                  g$t$9417$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$9417$mjVUK
                              '(any any)))))
                        g$x$9416$mjVUK)))))
          ((case-lambda
             ((g$t$9405$mjVUK)
              ((case-lambda
                 ((g$ls/false$9406$mjVUK)
                  (if g$ls/false$9406$mjVUK
                    (apply
                      (case-lambda
                        ((g$binding*$9407$mjVUK
                           g$test$9408$mjVUK
                           g$expr*$9409$mjVUK
                           g$command*$9410$mjVUK)
                         ((case-lambda
                            ((g$t$9411$mjVUK)
                             ((case-lambda
                                ((g$ls/false$9412$mjVUK)
                                 (if g$ls/false$9412$mjVUK
                                   (apply
                                     (case-lambda
                                       ((g$x*$9413$mjVUK
                                          g$init*$9414$mjVUK
                                          g$step*$9415$mjVUK)
                                        (if (g$valid-bound-ids?$8279$mjVUK
                                              g$x*$9413$mjVUK)
                                          (g$bless$8516$mjVUK
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$9413$mjVUK
                                                    (list
                                                      'if
                                                      g$test$9408$mjVUK
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$9409$mjVUK))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$9410$mjVUK
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$9415$mjVUK))))))))
                                              (cons 'loop g$init*$9414$mjVUK)))
                                          (g$syntax-violation$8665$mjVUK
                                            '#f
                                            '"invalid bindings"
                                            g$stx$9403$mjVUK))))
                                     g$ls/false$9412$mjVUK)
                                   (g$syntax-violation$8665$mjVUK
                                     '#f
                                     '"invalid syntax"
                                     g$t$9411$mjVUK))))
                              (g$syntax-dispatch$8553$mjVUK
                                g$t$9411$mjVUK
                                '#(each (any any any))))))
                          (g$map$5602$mjVUK
                            g$bind$9404$mjVUK
                            g$binding*$9407$mjVUK))))
                      g$ls/false$9406$mjVUK)
                    (g$syntax-violation$8665$mjVUK
                      '#f
                      '"invalid syntax"
                      g$t$9405$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK
                 g$t$9405$mjVUK
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$9403$mjVUK)))))
   (g$let*-macro$8536$mjVUK
     g$let*-macro$12054$mjVUK
     (case-lambda
       ((g$stx$9428$mjVUK)
        ((case-lambda
           ((g$t$9429$mjVUK)
            ((case-lambda
               ((g$ls/false$9430$mjVUK)
                (if (if g$ls/false$9430$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$9431$mjVUK
                               g$rhs*$9432$mjVUK
                               g$b$9433$mjVUK
                               g$b*$9434$mjVUK)
                             (g$for-all$5600$mjVUK
                               g$id?$8274$mjVUK
                               g$lhs*$9431$mjVUK)))
                          g$ls/false$9430$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$9435$mjVUK
                         g$rhs*$9436$mjVUK
                         g$b$9437$mjVUK
                         g$b*$9438$mjVUK)
                       (g$bless$8516$mjVUK
                         ((letrec ((g$f$9439$mjVUK
                                     (case-lambda
                                       ((g$x*$9440$mjVUK)
                                        (if (null? g$x*$9440$mjVUK)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$9437$mjVUK
                                                g$b*$9438$mjVUK)))
                                          (if (null? (cdr g$x*$9440$mjVUK))
                                            (cons
                                              'let
                                              (cons
                                                (list (car g$x*$9440$mjVUK))
                                                (cons
                                                  g$b$9437$mjVUK
                                                  g$b*$9438$mjVUK)))
                                            (list
                                              'let
                                              (list (car g$x*$9440$mjVUK))
                                              (g$f$9439$mjVUK
                                                (cdr g$x*$9440$mjVUK)))))))))
                            g$f$9439$mjVUK)
                          (g$map$5602$mjVUK
                            list
                            g$lhs*$9435$mjVUK
                            g$rhs*$9436$mjVUK)))))
                    g$ls/false$9430$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9429$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9429$mjVUK
               '(_ #(each (any any)) any . each-any)))))
         g$stx$9428$mjVUK))))
   (g$or-macro$8537$mjVUK
     g$or-macro$12055$mjVUK
     (case-lambda
       ((g$stx$9441$mjVUK)
        ((case-lambda
           ((g$t$9442$mjVUK)
            ((case-lambda
               ((g$ls/false$9443$mjVUK)
                (if g$ls/false$9443$mjVUK
                  (apply (case-lambda (() '#f)) g$ls/false$9443$mjVUK)
                  ((case-lambda
                     ((g$t$9444$mjVUK)
                      ((case-lambda
                         ((g$ls/false$9445$mjVUK)
                          (if g$ls/false$9445$mjVUK
                            (apply
                              (case-lambda
                                ((g$e$9446$mjVUK g$e*$9447$mjVUK)
                                 (g$bless$8516$mjVUK
                                   ((letrec ((g$f$9448$mjVUK
                                               (case-lambda
                                                 ((g$e$9449$mjVUK
                                                    g$e*$9450$mjVUK)
                                                  (if (null? g$e*$9450$mjVUK)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9449$mjVUK)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$9449$mjVUK))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$9448$mjVUK
                                                          (car g$e*$9450$mjVUK)
                                                          (cdr g$e*$9450$mjVUK)))))))))
                                      g$f$9448$mjVUK)
                                    g$e$9446$mjVUK
                                    g$e*$9447$mjVUK))))
                              g$ls/false$9445$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$9444$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$9444$mjVUK
                         '(_ any . each-any)))))
                   g$t$9442$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9442$mjVUK '(_)))))
         g$stx$9441$mjVUK))))
   (g$and-macro$8538$mjVUK
     g$and-macro$12056$mjVUK
     (case-lambda
       ((g$stx$9451$mjVUK)
        ((case-lambda
           ((g$t$9452$mjVUK)
            ((case-lambda
               ((g$ls/false$9453$mjVUK)
                (if g$ls/false$9453$mjVUK
                  (apply (case-lambda (() '#t)) g$ls/false$9453$mjVUK)
                  ((case-lambda
                     ((g$t$9454$mjVUK)
                      ((case-lambda
                         ((g$ls/false$9455$mjVUK)
                          (if g$ls/false$9455$mjVUK
                            (apply
                              (case-lambda
                                ((g$e$9456$mjVUK g$e*$9457$mjVUK)
                                 (g$bless$8516$mjVUK
                                   ((letrec ((g$f$9458$mjVUK
                                               (case-lambda
                                                 ((g$e$9459$mjVUK
                                                    g$e*$9460$mjVUK)
                                                  (if (null? g$e*$9460$mjVUK)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9459$mjVUK)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$9459$mjVUK
                                                        (cons
                                                          (g$f$9458$mjVUK
                                                            (car g$e*$9460$mjVUK)
                                                            (cdr g$e*$9460$mjVUK))
                                                          '(#f)))))))))
                                      g$f$9458$mjVUK)
                                    g$e$9456$mjVUK
                                    g$e*$9457$mjVUK))))
                              g$ls/false$9455$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$9454$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$9454$mjVUK
                         '(_ any . each-any)))))
                   g$t$9452$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9452$mjVUK '(_)))))
         g$stx$9451$mjVUK))))
   (g$cond-macro$8539$mjVUK
     g$cond-macro$12057$mjVUK
     (case-lambda
       ((g$stx$9461$mjVUK)
        ((case-lambda
           ((g$t$9462$mjVUK)
            ((case-lambda
               ((g$ls/false$9463$mjVUK)
                (if g$ls/false$9463$mjVUK
                  (apply
                    (case-lambda
                      ((g$cls$9464$mjVUK g$cls*$9465$mjVUK)
                       (g$bless$8516$mjVUK
                         ((letrec ((g$f$9466$mjVUK
                                     (case-lambda
                                       ((g$cls$9467$mjVUK g$cls*$9468$mjVUK)
                                        (if (null? g$cls*$9468$mjVUK)
                                          ((case-lambda
                                             ((g$t$9469$mjVUK)
                                              ((case-lambda
                                                 ((g$ls/false$9470$mjVUK)
                                                  (if g$ls/false$9470$mjVUK
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9471$mjVUK
                                                           g$e*$9472$mjVUK)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$9471$mjVUK
                                                             g$e*$9472$mjVUK))))
                                                      g$ls/false$9470$mjVUK)
                                                    ((case-lambda
                                                       ((g$t$9473$mjVUK)
                                                        ((case-lambda
                                                           ((g$ls/false$9474$mjVUK)
                                                            (if g$ls/false$9474$mjVUK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9475$mjVUK
                                                                     g$p$9476$mjVUK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9475$mjVUK))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9476$mjVUK
                                                                         '(t))))))
                                                                g$ls/false$9474$mjVUK)
                                                              ((case-lambda
                                                                 ((g$t$9477$mjVUK)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9478$mjVUK)
                                                                      (if g$ls/false$9478$mjVUK
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9479$mjVUK)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$9479$mjVUK
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$9478$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$t$9480$mjVUK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9481$mjVUK)
                                                                                (if g$ls/false$9481$mjVUK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9482$mjVUK
                                                                                         g$e*$9483$mjVUK)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9482$mjVUK
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9483$mjVUK))))
                                                                                    g$ls/false$9481$mjVUK)
                                                                                  ((case-lambda
                                                                                     ((g$t$9484$mjVUK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9485$mjVUK)
                                                                                          (if g$ls/false$9485$mjVUK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8665$mjVUK
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9461$mjVUK)))
                                                                                              g$ls/false$9485$mjVUK)
                                                                                            (g$syntax-violation$8665$mjVUK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9484$mjVUK))))
                                                                                       (g$syntax-dispatch$8553$mjVUK
                                                                                         g$t$9484$mjVUK
                                                                                         '_))))
                                                                                   g$t$9480$mjVUK))))
                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                               g$t$9480$mjVUK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9477$mjVUK))))
                                                                   (g$syntax-dispatch$8553$mjVUK
                                                                     g$t$9477$mjVUK
                                                                     '(any)))))
                                                               g$t$9473$mjVUK))))
                                                         (g$syntax-dispatch$8553$mjVUK
                                                           g$t$9473$mjVUK
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9469$mjVUK))))
                                               (g$syntax-dispatch$8553$mjVUK
                                                 g$t$9469$mjVUK
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9467$mjVUK)
                                          ((case-lambda
                                             ((g$t$9486$mjVUK)
                                              ((case-lambda
                                                 ((g$ls/false$9487$mjVUK)
                                                  (if g$ls/false$9487$mjVUK
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9488$mjVUK
                                                           g$e*$9489$mjVUK)
                                                         (g$syntax-violation$8665$mjVUK
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$9461$mjVUK)))
                                                      g$ls/false$9487$mjVUK)
                                                    ((case-lambda
                                                       ((g$t$9490$mjVUK)
                                                        ((case-lambda
                                                           ((g$ls/false$9491$mjVUK)
                                                            (if g$ls/false$9491$mjVUK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9492$mjVUK
                                                                     g$p$9493$mjVUK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9492$mjVUK))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9493$mjVUK
                                                                         '(t))
                                                                       (g$f$9466$mjVUK
                                                                         (car g$cls*$9468$mjVUK)
                                                                         (cdr g$cls*$9468$mjVUK))))))
                                                                g$ls/false$9491$mjVUK)
                                                              ((case-lambda
                                                                 ((g$t$9494$mjVUK)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9495$mjVUK)
                                                                      (if g$ls/false$9495$mjVUK
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9496$mjVUK)
                                                                             (list
                                                                               'or
                                                                               g$e$9496$mjVUK
                                                                               (g$f$9466$mjVUK
                                                                                 (car g$cls*$9468$mjVUK)
                                                                                 (cdr g$cls*$9468$mjVUK)))))
                                                                          g$ls/false$9495$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$t$9497$mjVUK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9498$mjVUK)
                                                                                (if g$ls/false$9498$mjVUK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9499$mjVUK
                                                                                         g$e*$9500$mjVUK)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9499$mjVUK
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9500$mjVUK)
                                                                                         (g$f$9466$mjVUK
                                                                                           (car g$cls*$9468$mjVUK)
                                                                                           (cdr g$cls*$9468$mjVUK)))))
                                                                                    g$ls/false$9498$mjVUK)
                                                                                  ((case-lambda
                                                                                     ((g$t$9501$mjVUK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9502$mjVUK)
                                                                                          (if g$ls/false$9502$mjVUK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8665$mjVUK
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9461$mjVUK)))
                                                                                              g$ls/false$9502$mjVUK)
                                                                                            (g$syntax-violation$8665$mjVUK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9501$mjVUK))))
                                                                                       (g$syntax-dispatch$8553$mjVUK
                                                                                         g$t$9501$mjVUK
                                                                                         '_))))
                                                                                   g$t$9497$mjVUK))))
                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                               g$t$9497$mjVUK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9494$mjVUK))))
                                                                   (g$syntax-dispatch$8553$mjVUK
                                                                     g$t$9494$mjVUK
                                                                     '(any)))))
                                                               g$t$9490$mjVUK))))
                                                         (g$syntax-dispatch$8553$mjVUK
                                                           g$t$9490$mjVUK
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9486$mjVUK))))
                                               (g$syntax-dispatch$8553$mjVUK
                                                 g$t$9486$mjVUK
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9467$mjVUK))))))
                            g$f$9466$mjVUK)
                          g$cls$9464$mjVUK
                          g$cls*$9465$mjVUK))))
                    g$ls/false$9463$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9462$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9462$mjVUK
               '(_ any . each-any)))))
         g$stx$9461$mjVUK))))
   (g$do-include$8540$mjVUK
     g$do-include$12058$mjVUK
     (case-lambda
       ((g$stx$9503$mjVUK g$id$9504$mjVUK g$filename$9505$mjVUK)
        ((case-lambda
           ((g$filename$9506$mjVUK)
            (begin
              (if (not (if (string? g$filename$9506$mjVUK)
                         (begin '#f (g$id?$8274$mjVUK g$id$9504$mjVUK))
                         '#f))
                (g$syntax-violation$8665$mjVUK
                  '#f
                  '"invalid syntax"
                  g$stx$9503$mjVUK)
                (void))
              (cons
                (g$bless$8516$mjVUK 'begin)
                (g$with-input-from-file$6952$mjVUK
                  g$filename$9506$mjVUK
                  (case-lambda
                    (()
                     ((letrec ((g$f$9507$mjVUK
                                 (case-lambda
                                   ((g$ls$9508$mjVUK)
                                    ((case-lambda
                                       ((g$x$9509$mjVUK)
                                        (if (eof-object? g$x$9509$mjVUK)
                                          (reverse g$ls$9508$mjVUK)
                                          (g$f$9507$mjVUK
                                            (cons
                                              (g$datum->stx$8257$mjVUK
                                                g$id$9504$mjVUK
                                                g$x$9509$mjVUK)
                                              g$ls$9508$mjVUK)))))
                                     (read-annotated))))))
                        g$f$9507$mjVUK)
                      '()))))))))
         (g$stx->datum$8285$mjVUK g$filename$9505$mjVUK)))))
   (g$include-macro$8541$mjVUK
     g$include-macro$12059$mjVUK
     (case-lambda
       ((g$e$9510$mjVUK)
        ((case-lambda
           ((g$t$9511$mjVUK)
            ((case-lambda
               ((g$ls/false$9512$mjVUK)
                (if g$ls/false$9512$mjVUK
                  (apply
                    (case-lambda
                      ((g$id$9513$mjVUK g$filename$9514$mjVUK)
                       (g$do-include$8540$mjVUK
                         g$e$9510$mjVUK
                         g$id$9513$mjVUK
                         g$filename$9514$mjVUK)))
                    g$ls/false$9512$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9511$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9511$mjVUK '(any any)))))
         g$e$9510$mjVUK))))
   (g$include-into-macro$8542$mjVUK
     g$include-into-macro$12060$mjVUK
     (case-lambda
       ((g$e$9515$mjVUK)
        ((case-lambda
           ((g$t$9516$mjVUK)
            ((case-lambda
               ((g$ls/false$9517$mjVUK)
                (if g$ls/false$9517$mjVUK
                  (apply
                    (case-lambda
                      ((g$id$9518$mjVUK g$filename$9519$mjVUK)
                       (g$do-include$8540$mjVUK
                         g$e$9515$mjVUK
                         g$id$9518$mjVUK
                         g$filename$9519$mjVUK)))
                    g$ls/false$9517$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9516$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$9516$mjVUK '(_ any any)))))
         g$e$9515$mjVUK))))
   (g$syntax-rules-macro$8543$mjVUK
     g$syntax-rules-macro$12061$mjVUK
     (case-lambda
       ((g$e$9520$mjVUK)
        ((case-lambda
           ((g$t$9521$mjVUK)
            ((case-lambda
               ((g$ls/false$9522$mjVUK)
                (if g$ls/false$9522$mjVUK
                  (apply
                    (case-lambda
                      ((g$lits$9523$mjVUK g$pat*$9524$mjVUK g$tmp*$9525$mjVUK)
                       (begin
                         (g$verify-literals$8556$mjVUK
                           g$lits$9523$mjVUK
                           g$e$9520$mjVUK)
                         (g$bless$8516$mjVUK
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$9523$mjVUK
                                   (g$map$5602$mjVUK
                                     (case-lambda
                                       ((g$pat$9526$mjVUK g$tmp$9527$mjVUK)
                                        ((case-lambda
                                           ((g$t$9528$mjVUK)
                                            ((case-lambda
                                               ((g$ls/false$9529$mjVUK)
                                                (if g$ls/false$9529$mjVUK
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$9530$mjVUK)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$9530$mjVUK)
                                                         (list
                                                           'syntax
                                                           g$tmp$9527$mjVUK))))
                                                    g$ls/false$9529$mjVUK)
                                                  ((case-lambda
                                                     ((g$t$9531$mjVUK)
                                                      ((case-lambda
                                                         ((g$ls/false$9532$mjVUK)
                                                          (if g$ls/false$9532$mjVUK
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$8665$mjVUK
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$9520$mjVUK
                                                                   g$pat$9526$mjVUK)))
                                                              g$ls/false$9532$mjVUK)
                                                            (g$syntax-violation$8665$mjVUK
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$9531$mjVUK))))
                                                       (g$syntax-dispatch$8553$mjVUK
                                                         g$t$9531$mjVUK
                                                         '_))))
                                                   g$t$9528$mjVUK))))
                                             (g$syntax-dispatch$8553$mjVUK
                                               g$t$9528$mjVUK
                                               '(_ . any)))))
                                         g$pat$9526$mjVUK)))
                                     g$pat*$9524$mjVUK
                                     g$tmp*$9525$mjVUK)))))))))
                    g$ls/false$9522$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$9521$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$9521$mjVUK
               '(_ each-any . #(each (any any)))))))
         g$e$9520$mjVUK))))
   (g$quasiquote-macro$8544$mjVUK
     g$quasiquote-macro$12062$mjVUK
     ((case-lambda
        (()
         (letrec* ((g$datum$9533$mjVUK
                     (case-lambda
                       ((g$x$9664$mjVUK)
                        (list
                          (g$scheme-stx$8496$mjVUK 'quote)
                          (g$mkstx$8262$mjVUK g$x$9664$mjVUK '() '() '())))))
                   (g$quasicons*$9549$mjVUK
                     (case-lambda
                       ((g$x$9660$mjVUK g$y$9661$mjVUK)
                        ((letrec ((g$f$9662$mjVUK
                                    (case-lambda
                                      ((g$x$9663$mjVUK)
                                       (if (null? g$x$9663$mjVUK)
                                         g$y$9661$mjVUK
                                         (g$quasicons$9550$mjVUK
                                           (car g$x$9663$mjVUK)
                                           (g$f$9662$mjVUK
                                             (cdr g$x$9663$mjVUK))))))))
                           g$f$9662$mjVUK)
                         g$x$9660$mjVUK))))
                   (g$quasicons$9550$mjVUK
                     (case-lambda
                       ((g$x$9641$mjVUK g$y$9642$mjVUK)
                        ((case-lambda
                           ((g$t$9643$mjVUK)
                            ((case-lambda
                               ((g$ls/false$9644$mjVUK)
                                (if g$ls/false$9644$mjVUK
                                  (apply
                                    (case-lambda
                                      ((g$dy$9645$mjVUK)
                                       ((case-lambda
                                          ((g$t$9646$mjVUK)
                                           ((case-lambda
                                              ((g$ls/false$9647$mjVUK)
                                               (if g$ls/false$9647$mjVUK
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9648$mjVUK)
                                                      (list
                                                        (g$scheme-stx$8496$mjVUK
                                                          'quote)
                                                        (cons
                                                          g$dx$9648$mjVUK
                                                          g$dy$9645$mjVUK))))
                                                   g$ls/false$9647$mjVUK)
                                                 ((case-lambda
                                                    ((g$t$9649$mjVUK)
                                                     ((case-lambda
                                                        ((g$ls/false$9650$mjVUK)
                                                         (if g$ls/false$9650$mjVUK
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9651$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9652$mjVUK)
                                                                        (if g$ls/false$9652$mjVUK
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$8496$mjVUK
                                                                                   'list)
                                                                                 g$x$9641$mjVUK)))
                                                                            g$ls/false$9652$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$t$9653$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9654$mjVUK)
                                                                                  (if g$ls/false$9654$mjVUK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$8496$mjVUK
                                                                                             'cons)
                                                                                           g$x$9641$mjVUK
                                                                                           g$y$9642$mjVUK)))
                                                                                      g$ls/false$9654$mjVUK)
                                                                                    (g$syntax-violation$8665$mjVUK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9653$mjVUK))))
                                                                               (g$syntax-dispatch$8553$mjVUK
                                                                                 g$t$9653$mjVUK
                                                                                 '_))))
                                                                           g$t$9651$mjVUK))))
                                                                     (g$syntax-dispatch$8553$mjVUK
                                                                       g$t$9651$mjVUK
                                                                       '()))))
                                                                 g$dy$9645$mjVUK)))
                                                             g$ls/false$9650$mjVUK)
                                                           (g$syntax-violation$8665$mjVUK
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9649$mjVUK))))
                                                      (g$syntax-dispatch$8553$mjVUK
                                                        g$t$9649$mjVUK
                                                        '_))))
                                                  g$t$9646$mjVUK))))
                                            (g$syntax-dispatch$8553$mjVUK
                                              g$t$9646$mjVUK
                                              '(#(scheme-id quote) any)))))
                                        g$x$9641$mjVUK)))
                                    g$ls/false$9644$mjVUK)
                                  ((case-lambda
                                     ((g$t$9655$mjVUK)
                                      ((case-lambda
                                         ((g$ls/false$9656$mjVUK)
                                          (if g$ls/false$9656$mjVUK
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9657$mjVUK)
                                                 (g$cons*$5604$mjVUK
                                                   (g$scheme-stx$8496$mjVUK
                                                     'list)
                                                   g$x$9641$mjVUK
                                                   g$stuff$9657$mjVUK)))
                                              g$ls/false$9656$mjVUK)
                                            ((case-lambda
                                               ((g$t$9658$mjVUK)
                                                ((case-lambda
                                                   ((g$ls/false$9659$mjVUK)
                                                    (if g$ls/false$9659$mjVUK
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$8496$mjVUK
                                                               'cons)
                                                             g$x$9641$mjVUK
                                                             g$y$9642$mjVUK)))
                                                        g$ls/false$9659$mjVUK)
                                                      (g$syntax-violation$8665$mjVUK
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9658$mjVUK))))
                                                 (g$syntax-dispatch$8553$mjVUK
                                                   g$t$9658$mjVUK
                                                   '_))))
                                             g$t$9655$mjVUK))))
                                       (g$syntax-dispatch$8553$mjVUK
                                         g$t$9655$mjVUK
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9643$mjVUK))))
                             (g$syntax-dispatch$8553$mjVUK
                               g$t$9643$mjVUK
                               '(#(scheme-id quote) any)))))
                         g$y$9642$mjVUK))))
                   (g$quasiappend$9551$mjVUK
                     (case-lambda
                       ((g$x$9628$mjVUK g$y$9629$mjVUK)
                        ((case-lambda
                           ((g$ls$9630$mjVUK)
                            (if (null? g$ls$9630$mjVUK)
                              (list (g$scheme-stx$8496$mjVUK 'quote) '())
                              (if (null? (cdr g$ls$9630$mjVUK))
                                (car g$ls$9630$mjVUK)
                                (g$cons*$5604$mjVUK
                                  (g$scheme-stx$8496$mjVUK 'append)
                                  g$ls$9630$mjVUK)))))
                         ((letrec ((g$f$9631$mjVUK
                                     (case-lambda
                                       ((g$x$9632$mjVUK)
                                        (if (null? g$x$9632$mjVUK)
                                          ((case-lambda
                                             ((g$t$9633$mjVUK)
                                              ((case-lambda
                                                 ((g$ls/false$9634$mjVUK)
                                                  (if g$ls/false$9634$mjVUK
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9634$mjVUK)
                                                    ((case-lambda
                                                       ((g$t$9635$mjVUK)
                                                        ((case-lambda
                                                           ((g$ls/false$9636$mjVUK)
                                                            (if g$ls/false$9636$mjVUK
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9629$mjVUK)))
                                                                g$ls/false$9636$mjVUK)
                                                              (g$syntax-violation$8665$mjVUK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9635$mjVUK))))
                                                         (g$syntax-dispatch$8553$mjVUK
                                                           g$t$9635$mjVUK
                                                           '_))))
                                                     g$t$9633$mjVUK))))
                                               (g$syntax-dispatch$8553$mjVUK
                                                 g$t$9633$mjVUK
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9629$mjVUK)
                                          ((case-lambda
                                             ((g$t$9637$mjVUK)
                                              ((case-lambda
                                                 ((g$ls/false$9638$mjVUK)
                                                  (if g$ls/false$9638$mjVUK
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9631$mjVUK
                                                           (cdr g$x$9632$mjVUK))))
                                                      g$ls/false$9638$mjVUK)
                                                    ((case-lambda
                                                       ((g$t$9639$mjVUK)
                                                        ((case-lambda
                                                           ((g$ls/false$9640$mjVUK)
                                                            (if g$ls/false$9640$mjVUK
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9632$mjVUK)
                                                                     (g$f$9631$mjVUK
                                                                       (cdr g$x$9632$mjVUK)))))
                                                                g$ls/false$9640$mjVUK)
                                                              (g$syntax-violation$8665$mjVUK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9639$mjVUK))))
                                                         (g$syntax-dispatch$8553$mjVUK
                                                           g$t$9639$mjVUK
                                                           '_))))
                                                     g$t$9637$mjVUK))))
                                               (g$syntax-dispatch$8553$mjVUK
                                                 g$t$9637$mjVUK
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9632$mjVUK)))))))
                            g$f$9631$mjVUK)
                          g$x$9628$mjVUK)))))
                   (g$quasivector$9552$mjVUK
                     (case-lambda
                       ((g$x$9603$mjVUK)
                        ((case-lambda
                           ((g$pat-x$9604$mjVUK)
                            ((case-lambda
                               ((g$t$9605$mjVUK)
                                ((case-lambda
                                   ((g$ls/false$9606$mjVUK)
                                    (if g$ls/false$9606$mjVUK
                                      (apply
                                        (case-lambda
                                          ((g$x*$9607$mjVUK)
                                           (list
                                             (g$scheme-stx$8496$mjVUK 'quote)
                                             (list->vector g$x*$9607$mjVUK))))
                                        g$ls/false$9606$mjVUK)
                                      ((case-lambda
                                         ((g$t$9608$mjVUK)
                                          ((case-lambda
                                             ((g$ls/false$9609$mjVUK)
                                              (if g$ls/false$9609$mjVUK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9610$mjVUK
                                                                 (case-lambda
                                                                   ((g$x$9611$mjVUK
                                                                      g$k$9612$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$t$9613$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9614$mjVUK)
                                                                            (if g$ls/false$9614$mjVUK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9615$mjVUK)
                                                                                   (g$k$9612$mjVUK
                                                                                     (g$map$5602$mjVUK
                                                                                       (case-lambda
                                                                                         ((g$x$9616$mjVUK)
                                                                                          (list
                                                                                            (g$scheme-stx$8496$mjVUK
                                                                                              'quote)
                                                                                            g$x$9616$mjVUK)))
                                                                                       g$x*$9615$mjVUK))))
                                                                                g$ls/false$9614$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$t$9617$mjVUK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9618$mjVUK)
                                                                                      (if g$ls/false$9618$mjVUK
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9619$mjVUK)
                                                                                             (g$k$9612$mjVUK
                                                                                               g$x*$9619$mjVUK)))
                                                                                          g$ls/false$9618$mjVUK)
                                                                                        ((case-lambda
                                                                                           ((g$t$9620$mjVUK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9621$mjVUK)
                                                                                                (if g$ls/false$9621$mjVUK
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9622$mjVUK
                                                                                                         g$y$9623$mjVUK)
                                                                                                       (g$f$9610$mjVUK
                                                                                                         g$y$9623$mjVUK
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9624$mjVUK)
                                                                                                            (g$k$9612$mjVUK
                                                                                                              (cons
                                                                                                                g$x$9622$mjVUK
                                                                                                                g$ls$9624$mjVUK)))))))
                                                                                                    g$ls/false$9621$mjVUK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9625$mjVUK)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9626$mjVUK)
                                                                                                          (if g$ls/false$9626$mjVUK
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$8496$mjVUK
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9604$mjVUK)))
                                                                                                              g$ls/false$9626$mjVUK)
                                                                                                            (g$syntax-violation$8665$mjVUK
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9625$mjVUK))))
                                                                                                       (g$syntax-dispatch$8553$mjVUK
                                                                                                         g$t$9625$mjVUK
                                                                                                         '_))))
                                                                                                   g$t$9620$mjVUK))))
                                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                                               g$t$9620$mjVUK
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9617$mjVUK))))
                                                                                   (g$syntax-dispatch$8553$mjVUK
                                                                                     g$t$9617$mjVUK
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9613$mjVUK))))
                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                           g$t$9613$mjVUK
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9611$mjVUK)))))
                                                        g$f$9610$mjVUK)
                                                      g$x$9603$mjVUK
                                                      (case-lambda
                                                        ((g$ls$9627$mjVUK)
                                                         (g$cons*$5604$mjVUK
                                                           (g$scheme-stx$8496$mjVUK
                                                             'vector)
                                                           g$ls$9627$mjVUK))))))
                                                  g$ls/false$9609$mjVUK)
                                                (g$syntax-violation$8665$mjVUK
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9608$mjVUK))))
                                           (g$syntax-dispatch$8553$mjVUK
                                             g$t$9608$mjVUK
                                             '_))))
                                       g$t$9605$mjVUK))))
                                 (g$syntax-dispatch$8553$mjVUK
                                   g$t$9605$mjVUK
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9604$mjVUK)))
                         g$x$9603$mjVUK))))
                   (g$vquasi$9553$mjVUK
                     (case-lambda
                       ((g$p$9586$mjVUK g$lev$9587$mjVUK)
                        ((case-lambda
                           ((g$t$9588$mjVUK)
                            ((case-lambda
                               ((g$ls/false$9589$mjVUK)
                                (if g$ls/false$9589$mjVUK
                                  (apply
                                    (case-lambda
                                      ((g$p$9590$mjVUK g$q$9591$mjVUK)
                                       ((case-lambda
                                          ((g$t$9592$mjVUK)
                                           ((case-lambda
                                              ((g$ls/false$9593$mjVUK)
                                               (if g$ls/false$9593$mjVUK
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9594$mjVUK)
                                                      (if (= g$lev$9587$mjVUK
                                                             '0)
                                                        (g$quasicons*$9549$mjVUK
                                                          g$p$9594$mjVUK
                                                          (g$vquasi$9553$mjVUK
                                                            g$q$9591$mjVUK
                                                            g$lev$9587$mjVUK))
                                                        (g$quasicons$9550$mjVUK
                                                          (g$quasicons$9550$mjVUK
                                                            (g$datum$9533$mjVUK
                                                              'unquote)
                                                            (g$quasi$9554$mjVUK
                                                              g$p$9594$mjVUK
                                                              (- g$lev$9587$mjVUK
                                                                 '1)))
                                                          (g$vquasi$9553$mjVUK
                                                            g$q$9591$mjVUK
                                                            g$lev$9587$mjVUK)))))
                                                   g$ls/false$9593$mjVUK)
                                                 ((case-lambda
                                                    ((g$t$9595$mjVUK)
                                                     ((case-lambda
                                                        ((g$ls/false$9596$mjVUK)
                                                         (if g$ls/false$9596$mjVUK
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9597$mjVUK)
                                                                (if (= g$lev$9587$mjVUK
                                                                       '0)
                                                                  (g$quasiappend$9551$mjVUK
                                                                    g$p$9597$mjVUK
                                                                    (g$vquasi$9553$mjVUK
                                                                      g$q$9591$mjVUK
                                                                      g$lev$9587$mjVUK))
                                                                  (g$quasicons$9550$mjVUK
                                                                    (g$quasicons$9550$mjVUK
                                                                      (g$datum$9533$mjVUK
                                                                        'unquote-splicing)
                                                                      (g$quasi$9554$mjVUK
                                                                        g$p$9597$mjVUK
                                                                        (- g$lev$9587$mjVUK
                                                                           '1)))
                                                                    (g$vquasi$9553$mjVUK
                                                                      g$q$9591$mjVUK
                                                                      g$lev$9587$mjVUK)))))
                                                             g$ls/false$9596$mjVUK)
                                                           ((case-lambda
                                                              ((g$t$9598$mjVUK)
                                                               ((case-lambda
                                                                  ((g$ls/false$9599$mjVUK)
                                                                   (if g$ls/false$9599$mjVUK
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9600$mjVUK)
                                                                          (g$quasicons$9550$mjVUK
                                                                            (g$quasi$9554$mjVUK
                                                                              g$p$9600$mjVUK
                                                                              g$lev$9587$mjVUK)
                                                                            (g$vquasi$9553$mjVUK
                                                                              g$q$9591$mjVUK
                                                                              g$lev$9587$mjVUK))))
                                                                       g$ls/false$9599$mjVUK)
                                                                     (g$syntax-violation$8665$mjVUK
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9598$mjVUK))))
                                                                (g$syntax-dispatch$8553$mjVUK
                                                                  g$t$9598$mjVUK
                                                                  'any))))
                                                            g$t$9595$mjVUK))))
                                                      (g$syntax-dispatch$8553$mjVUK
                                                        g$t$9595$mjVUK
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9592$mjVUK))))
                                            (g$syntax-dispatch$8553$mjVUK
                                              g$t$9592$mjVUK
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9590$mjVUK)))
                                    g$ls/false$9589$mjVUK)
                                  ((case-lambda
                                     ((g$t$9601$mjVUK)
                                      ((case-lambda
                                         ((g$ls/false$9602$mjVUK)
                                          (if g$ls/false$9602$mjVUK
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$8496$mjVUK
                                                     'quote)
                                                   '())))
                                              g$ls/false$9602$mjVUK)
                                            (g$syntax-violation$8665$mjVUK
                                              '#f
                                              '"invalid syntax"
                                              g$t$9601$mjVUK))))
                                       (g$syntax-dispatch$8553$mjVUK
                                         g$t$9601$mjVUK
                                         '()))))
                                   g$t$9588$mjVUK))))
                             (g$syntax-dispatch$8553$mjVUK
                               g$t$9588$mjVUK
                               '(any . any)))))
                         g$p$9586$mjVUK))))
                   (g$quasi$9554$mjVUK
                     (case-lambda
                       ((g$p$9559$mjVUK g$lev$9560$mjVUK)
                        ((case-lambda
                           ((g$t$9561$mjVUK)
                            ((case-lambda
                               ((g$ls/false$9562$mjVUK)
                                (if g$ls/false$9562$mjVUK
                                  (apply
                                    (case-lambda
                                      ((g$p$9563$mjVUK)
                                       (if (= g$lev$9560$mjVUK '0)
                                         g$p$9563$mjVUK
                                         (g$quasicons$9550$mjVUK
                                           (g$datum$9533$mjVUK 'unquote)
                                           (g$quasi$9554$mjVUK
                                             (list g$p$9563$mjVUK)
                                             (- g$lev$9560$mjVUK '1))))))
                                    g$ls/false$9562$mjVUK)
                                  ((case-lambda
                                     ((g$t$9564$mjVUK)
                                      ((case-lambda
                                         ((g$ls/false$9565$mjVUK)
                                          (if g$ls/false$9565$mjVUK
                                            (apply
                                              (case-lambda
                                                ((g$p$9566$mjVUK g$q$9567$mjVUK)
                                                 (if (= g$lev$9560$mjVUK '0)
                                                   (g$quasicons*$9549$mjVUK
                                                     g$p$9566$mjVUK
                                                     (g$quasi$9554$mjVUK
                                                       g$q$9567$mjVUK
                                                       g$lev$9560$mjVUK))
                                                   (g$quasicons$9550$mjVUK
                                                     (g$quasicons$9550$mjVUK
                                                       (g$datum$9533$mjVUK
                                                         'unquote)
                                                       (g$quasi$9554$mjVUK
                                                         g$p$9566$mjVUK
                                                         (- g$lev$9560$mjVUK
                                                            '1)))
                                                     (g$quasi$9554$mjVUK
                                                       g$q$9567$mjVUK
                                                       g$lev$9560$mjVUK)))))
                                              g$ls/false$9565$mjVUK)
                                            ((case-lambda
                                               ((g$t$9568$mjVUK)
                                                ((case-lambda
                                                   ((g$ls/false$9569$mjVUK)
                                                    (if g$ls/false$9569$mjVUK
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9570$mjVUK
                                                             g$q$9571$mjVUK)
                                                           (if (= g$lev$9560$mjVUK
                                                                  '0)
                                                             (g$quasiappend$9551$mjVUK
                                                               g$p$9570$mjVUK
                                                               (g$quasi$9554$mjVUK
                                                                 g$q$9571$mjVUK
                                                                 g$lev$9560$mjVUK))
                                                             (g$quasicons$9550$mjVUK
                                                               (g$quasicons$9550$mjVUK
                                                                 (g$datum$9533$mjVUK
                                                                   'unquote-splicing)
                                                                 (g$quasi$9554$mjVUK
                                                                   g$p$9570$mjVUK
                                                                   (- g$lev$9560$mjVUK
                                                                      '1)))
                                                               (g$quasi$9554$mjVUK
                                                                 g$q$9571$mjVUK
                                                                 g$lev$9560$mjVUK)))))
                                                        g$ls/false$9569$mjVUK)
                                                      ((case-lambda
                                                         ((g$t$9572$mjVUK)
                                                          ((case-lambda
                                                             ((g$ls/false$9573$mjVUK)
                                                              (if g$ls/false$9573$mjVUK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9574$mjVUK)
                                                                     (g$quasicons$9550$mjVUK
                                                                       (g$datum$9533$mjVUK
                                                                         'quasiquote)
                                                                       (g$quasi$9554$mjVUK
                                                                         (list
                                                                           g$p$9574$mjVUK)
                                                                         (+ g$lev$9560$mjVUK
                                                                            '1)))))
                                                                  g$ls/false$9573$mjVUK)
                                                                ((case-lambda
                                                                   ((g$t$9575$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9576$mjVUK)
                                                                        (if g$ls/false$9576$mjVUK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9577$mjVUK
                                                                                 g$q$9578$mjVUK)
                                                                               (g$quasicons$9550$mjVUK
                                                                                 (g$quasi$9554$mjVUK
                                                                                   g$p$9577$mjVUK
                                                                                   g$lev$9560$mjVUK)
                                                                                 (g$quasi$9554$mjVUK
                                                                                   g$q$9578$mjVUK
                                                                                   g$lev$9560$mjVUK))))
                                                                            g$ls/false$9576$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$t$9579$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9580$mjVUK)
                                                                                  (if (if g$ls/false$9580$mjVUK
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9581$mjVUK)
                                                                                               (not (g$stx?$8246$mjVUK
                                                                                                      g$x$9581$mjVUK))))
                                                                                            g$ls/false$9580$mjVUK))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9582$mjVUK)
                                                                                         (g$quasivector$9552$mjVUK
                                                                                           (g$vquasi$9553$mjVUK
                                                                                             g$x$9582$mjVUK
                                                                                             g$lev$9560$mjVUK))))
                                                                                      g$ls/false$9580$mjVUK)
                                                                                    ((case-lambda
                                                                                       ((g$t$9583$mjVUK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9584$mjVUK)
                                                                                            (if g$ls/false$9584$mjVUK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9585$mjVUK)
                                                                                                   (list
                                                                                                     (g$scheme-stx$8496$mjVUK
                                                                                                       'quote)
                                                                                                     g$p$9585$mjVUK)))
                                                                                                g$ls/false$9584$mjVUK)
                                                                                              (g$syntax-violation$8665$mjVUK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9583$mjVUK))))
                                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                                           g$t$9583$mjVUK
                                                                                           'any))))
                                                                                     g$t$9579$mjVUK))))
                                                                               (g$syntax-dispatch$8553$mjVUK
                                                                                 g$t$9579$mjVUK
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9575$mjVUK))))
                                                                     (g$syntax-dispatch$8553$mjVUK
                                                                       g$t$9575$mjVUK
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9572$mjVUK))))
                                                           (g$syntax-dispatch$8553$mjVUK
                                                             g$t$9572$mjVUK
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$9568$mjVUK))))
                                                 (g$syntax-dispatch$8553$mjVUK
                                                   g$t$9568$mjVUK
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9564$mjVUK))))
                                       (g$syntax-dispatch$8553$mjVUK
                                         g$t$9564$mjVUK
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$9561$mjVUK))))
                             (g$syntax-dispatch$8553$mjVUK
                               g$t$9561$mjVUK
                               '(#(scheme-id unquote) any)))))
                         g$p$9559$mjVUK)))))
           (case-lambda
             ((g$x$9555$mjVUK)
              ((case-lambda
                 ((g$t$9556$mjVUK)
                  ((case-lambda
                     ((g$ls/false$9557$mjVUK)
                      (if g$ls/false$9557$mjVUK
                        (apply
                          (case-lambda
                            ((g$e$9558$mjVUK)
                             (g$quasi$9554$mjVUK g$e$9558$mjVUK '0)))
                          g$ls/false$9557$mjVUK)
                        (g$syntax-violation$8665$mjVUK
                          '#f
                          '"invalid syntax"
                          g$t$9556$mjVUK))))
                   (g$syntax-dispatch$8553$mjVUK g$t$9556$mjVUK '(_ any)))))
               g$x$9555$mjVUK))))))))
   (g$quasisyntax-macro$8545$mjVUK
     g$quasisyntax-macro$12063$mjVUK
     ((case-lambda
        (()
         (letrec* ((g$quasi$9665$mjVUK
                     (case-lambda
                       ((g$p$9679$mjVUK g$lev$9680$mjVUK)
                        ((case-lambda
                           ((g$t$9681$mjVUK)
                            ((case-lambda
                               ((g$ls/false$9682$mjVUK)
                                (if g$ls/false$9682$mjVUK
                                  (apply
                                    (case-lambda
                                      ((g$p$9683$mjVUK)
                                       (if (= g$lev$9680$mjVUK '0)
                                         ((case-lambda
                                            ((g$g$9684$mjVUK)
                                             (values
                                               (list g$g$9684$mjVUK)
                                               (list g$p$9683$mjVUK)
                                               g$g$9684$mjVUK)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9665$mjVUK
                                                g$p$9683$mjVUK
                                                (- g$lev$9680$mjVUK '1))))
                                           (case-lambda
                                             ((g$lhs*$9688$mjVUK
                                                g$rhs*$9689$mjVUK
                                                g$p$9690$mjVUK)
                                              ((case-lambda
                                                 ((g$p$9691$mjVUK
                                                    g$rhs*$9692$mjVUK
                                                    g$lhs*$9693$mjVUK)
                                                  (values
                                                    g$lhs*$9693$mjVUK
                                                    g$rhs*$9692$mjVUK
                                                    (list
                                                      'unsyntax
                                                      g$p$9691$mjVUK))))
                                               g$p$9690$mjVUK
                                               g$rhs*$9689$mjVUK
                                               g$lhs*$9688$mjVUK)))))))
                                    g$ls/false$9682$mjVUK)
                                  ((case-lambda
                                     ((g$t$9694$mjVUK)
                                      ((case-lambda
                                         ((g$ls/false$9695$mjVUK)
                                          (if (if g$ls/false$9695$mjVUK
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9680$mjVUK '0)))
                                                    g$ls/false$9695$mjVUK))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8665$mjVUK
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9679$mjVUK)))
                                              g$ls/false$9695$mjVUK)
                                            ((case-lambda
                                               ((g$t$9696$mjVUK)
                                                ((case-lambda
                                                   ((g$ls/false$9697$mjVUK)
                                                    (if g$ls/false$9697$mjVUK
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$9698$mjVUK
                                                             g$q$9699$mjVUK)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9665$mjVUK
                                                                  g$q$9699$mjVUK
                                                                  g$lev$9680$mjVUK)))
                                                             (case-lambda
                                                               ((g$lhs*$9703$mjVUK
                                                                  g$rhs*$9704$mjVUK
                                                                  g$q$9705$mjVUK)
                                                                ((case-lambda
                                                                   ((g$q$9706$mjVUK
                                                                      g$rhs*$9707$mjVUK
                                                                      g$lhs*$9708$mjVUK)
                                                                    (if (= g$lev$9680$mjVUK
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$9709$mjVUK)
                                                                          (values
                                                                            (append
                                                                              g$g*$9709$mjVUK
                                                                              g$lhs*$9708$mjVUK)
                                                                            (append
                                                                              g$p*$9698$mjVUK
                                                                              g$rhs*$9707$mjVUK)
                                                                            (append
                                                                              g$g*$9709$mjVUK
                                                                              g$q$9706$mjVUK))))
                                                                       (g$map$5602$mjVUK
                                                                         (case-lambda
                                                                           ((g$x$9710$mjVUK)
                                                                            (gensym)))
                                                                         g$p*$9698$mjVUK))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9665$mjVUK
                                                                             g$p*$9698$mjVUK
                                                                             (- g$lev$9680$mjVUK
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9714$mjVUK
                                                                             g$rhs2*$9715$mjVUK
                                                                             g$p*$9716$mjVUK)
                                                                           ((case-lambda
                                                                              ((g$p*$9717$mjVUK
                                                                                 g$rhs2*$9718$mjVUK
                                                                                 g$lhs2*$9719$mjVUK)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9719$mjVUK
                                                                                   g$lhs*$9708$mjVUK)
                                                                                 (append
                                                                                   g$rhs2*$9718$mjVUK
                                                                                   g$rhs*$9707$mjVUK)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$9717$mjVUK)
                                                                                   g$q$9706$mjVUK))))
                                                                            g$p*$9716$mjVUK
                                                                            g$rhs2*$9715$mjVUK
                                                                            g$lhs2*$9714$mjVUK)))))))
                                                                 g$q$9705$mjVUK
                                                                 g$rhs*$9704$mjVUK
                                                                 g$lhs*$9703$mjVUK))))))
                                                        g$ls/false$9697$mjVUK)
                                                      ((case-lambda
                                                         ((g$t$9720$mjVUK)
                                                          ((case-lambda
                                                             ((g$ls/false$9721$mjVUK)
                                                              (if g$ls/false$9721$mjVUK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$9722$mjVUK
                                                                       g$q$9723$mjVUK)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$9665$mjVUK
                                                                            g$q$9723$mjVUK
                                                                            g$lev$9680$mjVUK)))
                                                                       (case-lambda
                                                                         ((g$lhs*$9727$mjVUK
                                                                            g$rhs*$9728$mjVUK
                                                                            g$q$9729$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$q$9730$mjVUK
                                                                                g$rhs*$9731$mjVUK
                                                                                g$lhs*$9732$mjVUK)
                                                                              (if (= g$lev$9680$mjVUK
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9733$mjVUK)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$5602$mjVUK
                                                                                          (case-lambda
                                                                                            ((g$g$9734$mjVUK)
                                                                                             (cons
                                                                                               g$g$9734$mjVUK
                                                                                               '(...))))
                                                                                          g$g*$9733$mjVUK)
                                                                                        g$lhs*$9732$mjVUK)
                                                                                      (append
                                                                                        g$p*$9722$mjVUK
                                                                                        g$rhs*$9731$mjVUK)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$5602$mjVUK
                                                                                            (case-lambda
                                                                                              ((g$g$9735$mjVUK)
                                                                                               (cons
                                                                                                 g$g$9735$mjVUK
                                                                                                 '(...))))
                                                                                            g$g*$9733$mjVUK))
                                                                                        g$q$9730$mjVUK))))
                                                                                 (g$map$5602$mjVUK
                                                                                   (case-lambda
                                                                                     ((g$x$9736$mjVUK)
                                                                                      (gensym)))
                                                                                   g$p*$9722$mjVUK))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$9665$mjVUK
                                                                                       g$p*$9722$mjVUK
                                                                                       (- g$lev$9680$mjVUK
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9740$mjVUK
                                                                                       g$rhs2*$9741$mjVUK
                                                                                       g$p*$9742$mjVUK)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9743$mjVUK
                                                                                           g$rhs2*$9744$mjVUK
                                                                                           g$lhs2*$9745$mjVUK)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9745$mjVUK
                                                                                             g$lhs*$9732$mjVUK)
                                                                                           (append
                                                                                             g$rhs2*$9744$mjVUK
                                                                                             g$rhs*$9731$mjVUK)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9743$mjVUK)
                                                                                             g$q$9730$mjVUK))))
                                                                                      g$p*$9742$mjVUK
                                                                                      g$rhs2*$9741$mjVUK
                                                                                      g$lhs2*$9740$mjVUK)))))))
                                                                           g$q$9729$mjVUK
                                                                           g$rhs*$9728$mjVUK
                                                                           g$lhs*$9727$mjVUK))))))
                                                                  g$ls/false$9721$mjVUK)
                                                                ((case-lambda
                                                                   ((g$t$9746$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9747$mjVUK)
                                                                        (if (if g$ls/false$9747$mjVUK
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$9680$mjVUK
                                                                                        '0)))
                                                                                  g$ls/false$9747$mjVUK))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$8665$mjVUK
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$9679$mjVUK)))
                                                                            g$ls/false$9747$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$t$9748$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9749$mjVUK)
                                                                                  (if g$ls/false$9749$mjVUK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9750$mjVUK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9665$mjVUK
                                                                                                g$p$9750$mjVUK
                                                                                                (+ g$lev$9680$mjVUK
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9754$mjVUK
                                                                                                g$rhs*$9755$mjVUK
                                                                                                g$p$9756$mjVUK)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9757$mjVUK
                                                                                                    g$rhs*$9758$mjVUK
                                                                                                    g$lhs*$9759$mjVUK)
                                                                                                  (values
                                                                                                    g$lhs*$9759$mjVUK
                                                                                                    g$rhs*$9758$mjVUK
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9757$mjVUK))))
                                                                                               g$p$9756$mjVUK
                                                                                               g$rhs*$9755$mjVUK
                                                                                               g$lhs*$9754$mjVUK))))))
                                                                                      g$ls/false$9749$mjVUK)
                                                                                    ((case-lambda
                                                                                       ((g$t$9760$mjVUK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9761$mjVUK)
                                                                                            (if g$ls/false$9761$mjVUK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9762$mjVUK
                                                                                                     g$q$9763$mjVUK)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$9665$mjVUK
                                                                                                          g$p$9762$mjVUK
                                                                                                          g$lev$9680$mjVUK)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9770$mjVUK
                                                                                                          g$rhs*$9771$mjVUK
                                                                                                          g$p$9772$mjVUK)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$9665$mjVUK
                                                                                                               g$q$9763$mjVUK
                                                                                                               g$lev$9680$mjVUK)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$9773$mjVUK
                                                                                                               g$rhs2*$9774$mjVUK
                                                                                                               g$q$9775$mjVUK)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$9776$mjVUK
                                                                                                                   g$rhs2*$9777$mjVUK
                                                                                                                   g$lhs2*$9778$mjVUK
                                                                                                                   g$p$9779$mjVUK
                                                                                                                   g$rhs*$9780$mjVUK
                                                                                                                   g$lhs*$9781$mjVUK)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$9778$mjVUK
                                                                                                                     g$lhs*$9781$mjVUK)
                                                                                                                   (append
                                                                                                                     g$rhs2*$9777$mjVUK
                                                                                                                     g$rhs*$9780$mjVUK)
                                                                                                                   (cons
                                                                                                                     g$p$9779$mjVUK
                                                                                                                     g$q$9776$mjVUK))))
                                                                                                              g$q$9775$mjVUK
                                                                                                              g$rhs2*$9774$mjVUK
                                                                                                              g$lhs2*$9773$mjVUK
                                                                                                              g$p$9772$mjVUK
                                                                                                              g$rhs*$9771$mjVUK
                                                                                                              g$lhs*$9770$mjVUK)))))))))
                                                                                                g$ls/false$9761$mjVUK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9782$mjVUK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9783$mjVUK)
                                                                                                      (if g$ls/false$9783$mjVUK
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$9784$mjVUK)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$9665$mjVUK
                                                                                                                    g$x*$9784$mjVUK
                                                                                                                    g$lev$9680$mjVUK)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$9788$mjVUK
                                                                                                                    g$rhs*$9789$mjVUK
                                                                                                                    g$x*$9790$mjVUK)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$9791$mjVUK
                                                                                                                        g$rhs*$9792$mjVUK
                                                                                                                        g$lhs*$9793$mjVUK)
                                                                                                                      (values
                                                                                                                        g$lhs*$9793$mjVUK
                                                                                                                        g$rhs*$9792$mjVUK
                                                                                                                        (list->vector
                                                                                                                          g$x*$9791$mjVUK))))
                                                                                                                   g$x*$9790$mjVUK
                                                                                                                   g$rhs*$9789$mjVUK
                                                                                                                   g$lhs*$9788$mjVUK))))))
                                                                                                          g$ls/false$9783$mjVUK)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9794$mjVUK)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9795$mjVUK)
                                                                                                                (if g$ls/false$9795$mjVUK
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$9679$mjVUK)))
                                                                                                                    g$ls/false$9795$mjVUK)
                                                                                                                  (g$syntax-violation$8665$mjVUK
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9794$mjVUK))))
                                                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                                                               g$t$9794$mjVUK
                                                                                                               '_))))
                                                                                                         g$t$9782$mjVUK))))
                                                                                                   (g$syntax-dispatch$8553$mjVUK
                                                                                                     g$t$9782$mjVUK
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$9760$mjVUK))))
                                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                                           g$t$9760$mjVUK
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9748$mjVUK))))
                                                                               (g$syntax-dispatch$8553$mjVUK
                                                                                 g$t$9748$mjVUK
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9746$mjVUK))))
                                                                     (g$syntax-dispatch$8553$mjVUK
                                                                       g$t$9746$mjVUK
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$9720$mjVUK))))
                                                           (g$syntax-dispatch$8553$mjVUK
                                                             g$t$9720$mjVUK
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$9696$mjVUK))))
                                                 (g$syntax-dispatch$8553$mjVUK
                                                   g$t$9696$mjVUK
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9694$mjVUK))))
                                       (g$syntax-dispatch$8553$mjVUK
                                         g$t$9694$mjVUK
                                         '#(scheme-id unsyntax)))))
                                   g$t$9681$mjVUK))))
                             (g$syntax-dispatch$8553$mjVUK
                               g$t$9681$mjVUK
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9679$mjVUK)))))
           (case-lambda
             ((g$x$9666$mjVUK)
              ((case-lambda
                 ((g$t$9667$mjVUK)
                  ((case-lambda
                     ((g$ls/false$9668$mjVUK)
                      (if g$ls/false$9668$mjVUK
                        (apply
                          (case-lambda
                            ((g$e$9669$mjVUK)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9665$mjVUK g$e$9669$mjVUK '0)))
                               (case-lambda
                                 ((g$lhs*$9673$mjVUK
                                    g$rhs*$9674$mjVUK
                                    g$v$9675$mjVUK)
                                  ((case-lambda
                                     ((g$v$9676$mjVUK
                                        g$rhs*$9677$mjVUK
                                        g$lhs*$9678$mjVUK)
                                      (g$bless$8516$mjVUK
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9677$mjVUK)
                                          '()
                                          (list
                                            g$lhs*$9678$mjVUK
                                            (list 'syntax g$v$9676$mjVUK))))))
                                   g$v$9675$mjVUK
                                   g$rhs*$9674$mjVUK
                                   g$lhs*$9673$mjVUK))))))
                          g$ls/false$9668$mjVUK)
                        (g$syntax-violation$8665$mjVUK
                          '#f
                          '"invalid syntax"
                          g$t$9667$mjVUK))))
                   (g$syntax-dispatch$8553$mjVUK g$t$9667$mjVUK '(_ any)))))
               g$x$9666$mjVUK))))))))
   (g$define-struct-macro$8546$mjVUK
     g$define-struct-macro$12064$mjVUK
     (case-lambda
       ((g$stx$9796$mjVUK)
        (g$syntax-violation$8665$mjVUK
          '#f
          '"define-struct not supported"
          g$stx$9796$mjVUK))))
   (g$define-record-type-macro$8547$mjVUK
     g$define-record-type-macro$12065$mjVUK
     (case-lambda
       ((g$x$9797$mjVUK)
        (letrec* ((g$id$9798$mjVUK
                    (case-lambda
                      ((g$ctxt$10050$mjVUK . g$str*$10051$mjVUK)
                       (g$datum->syntax$8667$mjVUK
                         g$ctxt$10050$mjVUK
                         (string->symbol
                           (apply
                             string-append
                             (g$map$5602$mjVUK
                               (case-lambda
                                 ((g$x$10052$mjVUK)
                                  (if (symbol? g$x$10052$mjVUK)
                                    (symbol->string g$x$10052$mjVUK)
                                    (if (string? g$x$10052$mjVUK)
                                      g$x$10052$mjVUK
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$10051$mjVUK)))))))
                  (g$get-record-name$9799$mjVUK
                    (case-lambda
                      ((g$spec$10041$mjVUK)
                       ((case-lambda
                          ((g$t$10042$mjVUK)
                           ((case-lambda
                              ((g$ls/false$10043$mjVUK)
                               (if g$ls/false$10043$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$foo$10044$mjVUK
                                        g$make-foo$10045$mjVUK
                                        g$foo?$10046$mjVUK)
                                      g$foo$10044$mjVUK))
                                   g$ls/false$10043$mjVUK)
                                 ((case-lambda
                                    ((g$t$10047$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$10048$mjVUK)
                                         (if g$ls/false$10048$mjVUK
                                           (apply
                                             (case-lambda
                                               ((g$foo$10049$mjVUK)
                                                g$foo$10049$mjVUK))
                                             g$ls/false$10048$mjVUK)
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$t$10047$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$10047$mjVUK
                                        'any))))
                                  g$t$10042$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$10042$mjVUK
                              '(any any any)))))
                        g$spec$10041$mjVUK))))
                  (g$get-record-constructor-name$9800$mjVUK
                    (case-lambda
                      ((g$spec$10031$mjVUK)
                       ((case-lambda
                          ((g$t$10032$mjVUK)
                           ((case-lambda
                              ((g$ls/false$10033$mjVUK)
                               (if g$ls/false$10033$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$foo$10034$mjVUK
                                        g$make-foo$10035$mjVUK
                                        g$foo?$10036$mjVUK)
                                      g$make-foo$10035$mjVUK))
                                   g$ls/false$10033$mjVUK)
                                 ((case-lambda
                                    ((g$t$10037$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$10038$mjVUK)
                                         (if (if g$ls/false$10038$mjVUK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$10039$mjVUK)
                                                      (g$id?$8274$mjVUK
                                                        g$foo$10039$mjVUK)))
                                                   g$ls/false$10038$mjVUK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$10040$mjVUK)
                                                (g$id$9798$mjVUK
                                                  g$foo$10040$mjVUK
                                                  '"make-"
                                                  (g$stx->datum$8285$mjVUK
                                                    g$foo$10040$mjVUK))))
                                             g$ls/false$10038$mjVUK)
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$t$10037$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$10037$mjVUK
                                        'any))))
                                  g$t$10032$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$10032$mjVUK
                              '(any any any)))))
                        g$spec$10031$mjVUK))))
                  (g$get-record-predicate-name$9801$mjVUK
                    (case-lambda
                      ((g$spec$10021$mjVUK)
                       ((case-lambda
                          ((g$t$10022$mjVUK)
                           ((case-lambda
                              ((g$ls/false$10023$mjVUK)
                               (if g$ls/false$10023$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$foo$10024$mjVUK
                                        g$make-foo$10025$mjVUK
                                        g$foo?$10026$mjVUK)
                                      g$foo?$10026$mjVUK))
                                   g$ls/false$10023$mjVUK)
                                 ((case-lambda
                                    ((g$t$10027$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$10028$mjVUK)
                                         (if (if g$ls/false$10028$mjVUK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$10029$mjVUK)
                                                      (g$id?$8274$mjVUK
                                                        g$foo$10029$mjVUK)))
                                                   g$ls/false$10028$mjVUK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$10030$mjVUK)
                                                (g$id$9798$mjVUK
                                                  g$foo$10030$mjVUK
                                                  (g$stx->datum$8285$mjVUK
                                                    g$foo$10030$mjVUK)
                                                  '"?")))
                                             g$ls/false$10028$mjVUK)
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$t$10027$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$10027$mjVUK
                                        'any))))
                                  g$t$10022$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$10022$mjVUK
                              '(any any any)))))
                        g$spec$10021$mjVUK))))
                  (g$get-clause$9802$mjVUK
                    (case-lambda
                      ((g$id$10012$mjVUK g$ls$10013$mjVUK)
                       ((case-lambda
                          ((g$t$10014$mjVUK)
                           ((case-lambda
                              ((g$ls/false$10015$mjVUK)
                               (if g$ls/false$10015$mjVUK
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$10015$mjVUK)
                                 ((case-lambda
                                    ((g$t$10016$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$10017$mjVUK)
                                         (if g$ls/false$10017$mjVUK
                                           (apply
                                             (case-lambda
                                               ((g$x$10018$mjVUK
                                                  g$rest$10019$mjVUK
                                                  g$ls$10020$mjVUK)
                                                (if (g$free-id=?$8278$mjVUK
                                                      (g$bless$8516$mjVUK
                                                        g$id$10012$mjVUK)
                                                      g$x$10018$mjVUK)
                                                  (cons
                                                    g$x$10018$mjVUK
                                                    g$rest$10019$mjVUK)
                                                  (g$get-clause$9802$mjVUK
                                                    g$id$10012$mjVUK
                                                    g$ls$10020$mjVUK))))
                                             g$ls/false$10017$mjVUK)
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$t$10016$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$10016$mjVUK
                                        '((any . any) . any)))))
                                  g$t$10014$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$10014$mjVUK
                              '()))))
                        g$ls$10013$mjVUK))))
                  (g$foo-rtd-code$9803$mjVUK
                    (case-lambda
                      ((g$name$9971$mjVUK
                         g$clause*$9972$mjVUK
                         g$parent-rtd-code$9973$mjVUK)
                       (letrec* ((g$convert-field-spec*$9974$mjVUK
                                   (case-lambda
                                     ((g$ls$9999$mjVUK)
                                      (list->vector
                                        (g$map$5602$mjVUK
                                          (case-lambda
                                            ((g$x$10000$mjVUK)
                                             ((case-lambda
                                                ((g$t$10001$mjVUK)
                                                 ((case-lambda
                                                    ((g$ls/false$10002$mjVUK)
                                                     (if g$ls/false$10002$mjVUK
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$10003$mjVUK
                                                              g$rest$10004$mjVUK)
                                                            (list
                                                              'mutable
                                                              g$name$10003$mjVUK)))
                                                         g$ls/false$10002$mjVUK)
                                                       ((case-lambda
                                                          ((g$t$10005$mjVUK)
                                                           ((case-lambda
                                                              ((g$ls/false$10006$mjVUK)
                                                               (if g$ls/false$10006$mjVUK
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$10007$mjVUK
                                                                        g$rest$10008$mjVUK)
                                                                      (list
                                                                        'immutable
                                                                        g$name$10007$mjVUK)))
                                                                   g$ls/false$10006$mjVUK)
                                                                 ((case-lambda
                                                                    ((g$t$10009$mjVUK)
                                                                     ((case-lambda
                                                                        ((g$ls/false$10010$mjVUK)
                                                                         (if g$ls/false$10010$mjVUK
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$10011$mjVUK)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$10011$mjVUK)))
                                                                             g$ls/false$10010$mjVUK)
                                                                           (g$syntax-violation$8665$mjVUK
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$10009$mjVUK))))
                                                                      (g$syntax-dispatch$8553$mjVUK
                                                                        g$t$10009$mjVUK
                                                                        'any))))
                                                                  g$t$10005$mjVUK))))
                                                            (g$syntax-dispatch$8553$mjVUK
                                                              g$t$10005$mjVUK
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$10001$mjVUK))))
                                                  (g$syntax-dispatch$8553$mjVUK
                                                    g$t$10001$mjVUK
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$10000$mjVUK)))
                                          g$ls$9999$mjVUK))))))
                         ((case-lambda
                            ((g$uid-code$9975$mjVUK
                               g$sealed?$9976$mjVUK
                               g$opaque?$9977$mjVUK
                               g$fields$9978$mjVUK)
                             (g$bless$8516$mjVUK
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9971$mjVUK)
                                 g$parent-rtd-code$9973$mjVUK
                                 g$uid-code$9975$mjVUK
                                 g$sealed?$9976$mjVUK
                                 g$opaque?$9977$mjVUK
                                 g$fields$9978$mjVUK))))
                          ((case-lambda
                             ((g$t$9979$mjVUK)
                              ((case-lambda
                                 ((g$ls/false$9980$mjVUK)
                                  (if g$ls/false$9980$mjVUK
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9980$mjVUK)
                                    ((case-lambda
                                       ((g$t$9981$mjVUK)
                                        ((case-lambda
                                           ((g$ls/false$9982$mjVUK)
                                            (if g$ls/false$9982$mjVUK
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9983$mjVUK)
                                                   (list
                                                     'quote
                                                     g$uid$9983$mjVUK)))
                                                g$ls/false$9982$mjVUK)
                                              ((case-lambda
                                                 ((g$t$9984$mjVUK)
                                                  ((case-lambda
                                                     ((g$ls/false$9985$mjVUK)
                                                      (if g$ls/false$9985$mjVUK
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9985$mjVUK)
                                                        (g$syntax-violation$8665$mjVUK
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9984$mjVUK))))
                                                   (g$syntax-dispatch$8553$mjVUK
                                                     g$t$9984$mjVUK
                                                     '_))))
                                               g$t$9981$mjVUK))))
                                         (g$syntax-dispatch$8553$mjVUK
                                           g$t$9981$mjVUK
                                           '(_ any)))))
                                     g$t$9979$mjVUK))))
                               (g$syntax-dispatch$8553$mjVUK
                                 g$t$9979$mjVUK
                                 '(_)))))
                           (g$get-clause$9802$mjVUK
                             'nongenerative
                             g$clause*$9972$mjVUK))
                          ((case-lambda
                             ((g$t$9986$mjVUK)
                              ((case-lambda
                                 ((g$ls/false$9987$mjVUK)
                                  (if g$ls/false$9987$mjVUK
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9987$mjVUK)
                                    ((case-lambda
                                       ((g$t$9988$mjVUK)
                                        ((case-lambda
                                           ((g$ls/false$9989$mjVUK)
                                            (if g$ls/false$9989$mjVUK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9989$mjVUK)
                                              (g$syntax-violation$8665$mjVUK
                                                '#f
                                                '"invalid syntax"
                                                g$t$9988$mjVUK))))
                                         (g$syntax-dispatch$8553$mjVUK
                                           g$t$9988$mjVUK
                                           '_))))
                                     g$t$9986$mjVUK))))
                               (g$syntax-dispatch$8553$mjVUK
                                 g$t$9986$mjVUK
                                 '(_ #(atom #t))))))
                           (g$get-clause$9802$mjVUK
                             'sealed
                             g$clause*$9972$mjVUK))
                          ((case-lambda
                             ((g$t$9990$mjVUK)
                              ((case-lambda
                                 ((g$ls/false$9991$mjVUK)
                                  (if g$ls/false$9991$mjVUK
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9991$mjVUK)
                                    ((case-lambda
                                       ((g$t$9992$mjVUK)
                                        ((case-lambda
                                           ((g$ls/false$9993$mjVUK)
                                            (if g$ls/false$9993$mjVUK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9993$mjVUK)
                                              (g$syntax-violation$8665$mjVUK
                                                '#f
                                                '"invalid syntax"
                                                g$t$9992$mjVUK))))
                                         (g$syntax-dispatch$8553$mjVUK
                                           g$t$9992$mjVUK
                                           '_))))
                                     g$t$9990$mjVUK))))
                               (g$syntax-dispatch$8553$mjVUK
                                 g$t$9990$mjVUK
                                 '(_ #(atom #t))))))
                           (g$get-clause$9802$mjVUK
                             'opaque
                             g$clause*$9972$mjVUK))
                          ((case-lambda
                             ((g$t$9994$mjVUK)
                              ((case-lambda
                                 ((g$ls/false$9995$mjVUK)
                                  (if g$ls/false$9995$mjVUK
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9996$mjVUK)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9974$mjVUK
                                             g$field-spec*$9996$mjVUK))))
                                      g$ls/false$9995$mjVUK)
                                    ((case-lambda
                                       ((g$t$9997$mjVUK)
                                        ((case-lambda
                                           ((g$ls/false$9998$mjVUK)
                                            (if g$ls/false$9998$mjVUK
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9998$mjVUK)
                                              (g$syntax-violation$8665$mjVUK
                                                '#f
                                                '"invalid syntax"
                                                g$t$9997$mjVUK))))
                                         (g$syntax-dispatch$8553$mjVUK
                                           g$t$9997$mjVUK
                                           '_))))
                                     g$t$9994$mjVUK))))
                               (g$syntax-dispatch$8553$mjVUK
                                 g$t$9994$mjVUK
                                 '(_ . each-any)))))
                           (g$get-clause$9802$mjVUK
                             'fields
                             g$clause*$9972$mjVUK)))))))
                  (g$parent-rtd-code$9804$mjVUK
                    (case-lambda
                      ((g$clause*$9959$mjVUK)
                       ((case-lambda
                          ((g$t$9960$mjVUK)
                           ((case-lambda
                              ((g$ls/false$9961$mjVUK)
                               (if g$ls/false$9961$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$name$9962$mjVUK)
                                      (list
                                        'record-type-descriptor
                                        g$name$9962$mjVUK)))
                                   g$ls/false$9961$mjVUK)
                                 ((case-lambda
                                    ((g$t$9963$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$9964$mjVUK)
                                         (if g$ls/false$9964$mjVUK
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9965$mjVUK)
                                                    ((case-lambda
                                                       ((g$ls/false$9966$mjVUK)
                                                        (if g$ls/false$9966$mjVUK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9967$mjVUK
                                                                 g$rcd$9968$mjVUK)
                                                               g$rtd$9967$mjVUK))
                                                            g$ls/false$9966$mjVUK)
                                                          ((case-lambda
                                                             ((g$t$9969$mjVUK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9970$mjVUK)
                                                                  (if g$ls/false$9970$mjVUK
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9970$mjVUK)
                                                                    (g$syntax-violation$8665$mjVUK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9969$mjVUK))))
                                                               (g$syntax-dispatch$8553$mjVUK
                                                                 g$t$9969$mjVUK
                                                                 '#(atom #f)))))
                                                           g$t$9965$mjVUK))))
                                                     (g$syntax-dispatch$8553$mjVUK
                                                       g$t$9965$mjVUK
                                                       '(_ any any)))))
                                                 (g$get-clause$9802$mjVUK
                                                   'parent-rtd
                                                   g$clause*$9959$mjVUK))))
                                             g$ls/false$9964$mjVUK)
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9963$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$9963$mjVUK
                                        '#(atom #f)))))
                                  g$t$9960$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$9960$mjVUK
                              '(_ any)))))
                        (g$get-clause$9802$mjVUK
                          'parent
                          g$clause*$9959$mjVUK)))))
                  (g$parent-rcd-code$9805$mjVUK
                    (case-lambda
                      ((g$clause*$9947$mjVUK)
                       ((case-lambda
                          ((g$t$9948$mjVUK)
                           ((case-lambda
                              ((g$ls/false$9949$mjVUK)
                               (if g$ls/false$9949$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$name$9950$mjVUK)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9950$mjVUK)))
                                   g$ls/false$9949$mjVUK)
                                 ((case-lambda
                                    ((g$t$9951$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$9952$mjVUK)
                                         (if g$ls/false$9952$mjVUK
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9953$mjVUK)
                                                    ((case-lambda
                                                       ((g$ls/false$9954$mjVUK)
                                                        (if g$ls/false$9954$mjVUK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9955$mjVUK
                                                                 g$rcd$9956$mjVUK)
                                                               g$rcd$9956$mjVUK))
                                                            g$ls/false$9954$mjVUK)
                                                          ((case-lambda
                                                             ((g$t$9957$mjVUK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9958$mjVUK)
                                                                  (if g$ls/false$9958$mjVUK
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9958$mjVUK)
                                                                    (g$syntax-violation$8665$mjVUK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9957$mjVUK))))
                                                               (g$syntax-dispatch$8553$mjVUK
                                                                 g$t$9957$mjVUK
                                                                 '#(atom #f)))))
                                                           g$t$9953$mjVUK))))
                                                     (g$syntax-dispatch$8553$mjVUK
                                                       g$t$9953$mjVUK
                                                       '(_ any any)))))
                                                 (g$get-clause$9802$mjVUK
                                                   'parent-rtd
                                                   g$clause*$9947$mjVUK))))
                                             g$ls/false$9952$mjVUK)
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9951$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$9951$mjVUK
                                        '#(atom #f)))))
                                  g$t$9948$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$9948$mjVUK
                              '(_ any)))))
                        (g$get-clause$9802$mjVUK
                          'parent
                          g$clause*$9947$mjVUK)))))
                  (g$foo-rcd-code$9806$mjVUK
                    (case-lambda
                      ((g$clause*$9943$mjVUK
                         g$foo-rtd$9944$mjVUK
                         g$protocol$9945$mjVUK
                         g$parent-rcd-code$9946$mjVUK)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9944$mjVUK
                         g$parent-rcd-code$9946$mjVUK
                         g$protocol$9945$mjVUK))))
                  (g$get-protocol-code$9807$mjVUK
                    (case-lambda
                      ((g$clause*$9937$mjVUK)
                       ((case-lambda
                          ((g$t$9938$mjVUK)
                           ((case-lambda
                              ((g$ls/false$9939$mjVUK)
                               (if g$ls/false$9939$mjVUK
                                 (apply
                                   (case-lambda
                                     ((g$expr$9940$mjVUK) g$expr$9940$mjVUK))
                                   g$ls/false$9939$mjVUK)
                                 ((case-lambda
                                    ((g$t$9941$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$9942$mjVUK)
                                         (if g$ls/false$9942$mjVUK
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9942$mjVUK)
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$t$9941$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$9941$mjVUK
                                        '_))))
                                  g$t$9938$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$9938$mjVUK
                              '(_ any)))))
                        (g$get-clause$9802$mjVUK
                          'protocol
                          g$clause*$9937$mjVUK)))))
                  (g$get-fields$9808$mjVUK
                    (case-lambda
                      ((g$clause*$9928$mjVUK)
                       ((case-lambda
                          ((g$t$9929$mjVUK)
                           ((case-lambda
                              ((g$ls/false$9930$mjVUK)
                               (if g$ls/false$9930$mjVUK
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9930$mjVUK)
                                 ((case-lambda
                                    ((g$t$9931$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$9932$mjVUK)
                                         (if g$ls/false$9932$mjVUK
                                           (apply
                                             (case-lambda
                                               ((g$f*$9933$mjVUK)
                                                g$f*$9933$mjVUK))
                                             g$ls/false$9932$mjVUK)
                                           ((case-lambda
                                              ((g$t$9934$mjVUK)
                                               ((case-lambda
                                                  ((g$ls/false$9935$mjVUK)
                                                   (if g$ls/false$9935$mjVUK
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9936$mjVUK)
                                                          (g$get-fields$9808$mjVUK
                                                            g$rest$9936$mjVUK)))
                                                       g$ls/false$9935$mjVUK)
                                                     (g$syntax-violation$8665$mjVUK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9934$mjVUK))))
                                                (g$syntax-dispatch$8553$mjVUK
                                                  g$t$9934$mjVUK
                                                  '(_ . any)))))
                                            g$t$9931$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$9931$mjVUK
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9929$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK g$t$9929$mjVUK '()))))
                        g$clause*$9928$mjVUK))))
                  (g$get-mutator-indices$9809$mjVUK
                    (case-lambda
                      ((g$fields$9916$mjVUK)
                       ((letrec ((g$f$9917$mjVUK
                                   (case-lambda
                                     ((g$fields$9918$mjVUK g$i$9919$mjVUK)
                                      ((case-lambda
                                         ((g$t$9920$mjVUK)
                                          ((case-lambda
                                             ((g$ls/false$9921$mjVUK)
                                              (if g$ls/false$9921$mjVUK
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9921$mjVUK)
                                                ((case-lambda
                                                   ((g$t$9922$mjVUK)
                                                    ((case-lambda
                                                       ((g$ls/false$9923$mjVUK)
                                                        (if g$ls/false$9923$mjVUK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9924$mjVUK)
                                                               (cons
                                                                 g$i$9919$mjVUK
                                                                 (g$f$9917$mjVUK
                                                                   g$rest$9924$mjVUK
                                                                   (+ g$i$9919$mjVUK
                                                                      '1)))))
                                                            g$ls/false$9923$mjVUK)
                                                          ((case-lambda
                                                             ((g$t$9925$mjVUK)
                                                              ((case-lambda
                                                                 ((g$ls/false$9926$mjVUK)
                                                                  (if g$ls/false$9926$mjVUK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9927$mjVUK)
                                                                         (g$f$9917$mjVUK
                                                                           g$rest$9927$mjVUK
                                                                           (+ g$i$9919$mjVUK
                                                                              '1))))
                                                                      g$ls/false$9926$mjVUK)
                                                                    (g$syntax-violation$8665$mjVUK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9925$mjVUK))))
                                                               (g$syntax-dispatch$8553$mjVUK
                                                                 g$t$9925$mjVUK
                                                                 '(_ . any)))))
                                                           g$t$9922$mjVUK))))
                                                     (g$syntax-dispatch$8553$mjVUK
                                                       g$t$9922$mjVUK
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9920$mjVUK))))
                                           (g$syntax-dispatch$8553$mjVUK
                                             g$t$9920$mjVUK
                                             '()))))
                                       g$fields$9918$mjVUK)))))
                          g$f$9917$mjVUK)
                        g$fields$9916$mjVUK
                        '0))))
                  (g$get-mutators$9810$mjVUK
                    (case-lambda
                      ((g$foo$9895$mjVUK g$fields$9896$mjVUK)
                       (letrec* ((g$gen-name$9897$mjVUK
                                   (case-lambda
                                     ((g$x$9915$mjVUK)
                                      (g$datum->syntax$8667$mjVUK
                                        g$foo$9895$mjVUK
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8668$mjVUK
                                                g$foo$9895$mjVUK))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8668$mjVUK
                                                g$x$9915$mjVUK))
                                            '"-set!")))))))
                         ((letrec ((g$f$9898$mjVUK
                                     (case-lambda
                                       ((g$fields$9899$mjVUK)
                                        ((case-lambda
                                           ((g$t$9900$mjVUK)
                                            ((case-lambda
                                               ((g$ls/false$9901$mjVUK)
                                                (if g$ls/false$9901$mjVUK
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9901$mjVUK)
                                                  ((case-lambda
                                                     ((g$t$9902$mjVUK)
                                                      ((case-lambda
                                                         ((g$ls/false$9903$mjVUK)
                                                          (if g$ls/false$9903$mjVUK
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9904$mjVUK
                                                                   g$accessor$9905$mjVUK
                                                                   g$mutator$9906$mjVUK
                                                                   g$rest$9907$mjVUK)
                                                                 (cons
                                                                   g$mutator$9906$mjVUK
                                                                   (g$f$9898$mjVUK
                                                                     g$rest$9907$mjVUK))))
                                                              g$ls/false$9903$mjVUK)
                                                            ((case-lambda
                                                               ((g$t$9908$mjVUK)
                                                                ((case-lambda
                                                                   ((g$ls/false$9909$mjVUK)
                                                                    (if g$ls/false$9909$mjVUK
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9910$mjVUK
                                                                             g$rest$9911$mjVUK)
                                                                           (cons
                                                                             (g$gen-name$9897$mjVUK
                                                                               g$name$9910$mjVUK)
                                                                             (g$f$9898$mjVUK
                                                                               g$rest$9911$mjVUK))))
                                                                        g$ls/false$9909$mjVUK)
                                                                      ((case-lambda
                                                                         ((g$t$9912$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9913$mjVUK)
                                                                              (if g$ls/false$9913$mjVUK
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9914$mjVUK)
                                                                                     (g$f$9898$mjVUK
                                                                                       g$rest$9914$mjVUK)))
                                                                                  g$ls/false$9913$mjVUK)
                                                                                (g$syntax-violation$8665$mjVUK
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9912$mjVUK))))
                                                                           (g$syntax-dispatch$8553$mjVUK
                                                                             g$t$9912$mjVUK
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9908$mjVUK))))
                                                                 (g$syntax-dispatch$8553$mjVUK
                                                                   g$t$9908$mjVUK
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9902$mjVUK))))
                                                       (g$syntax-dispatch$8553$mjVUK
                                                         g$t$9902$mjVUK
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9900$mjVUK))))
                                             (g$syntax-dispatch$8553$mjVUK
                                               g$t$9900$mjVUK
                                               '()))))
                                         g$fields$9899$mjVUK)))))
                            g$f$9898$mjVUK)
                          g$fields$9896$mjVUK)))))
                  (g$get-accessors$9811$mjVUK
                    (case-lambda
                      ((g$foo$9861$mjVUK g$fields$9862$mjVUK)
                       (letrec* ((g$gen-name$9863$mjVUK
                                   (case-lambda
                                     ((g$x$9894$mjVUK)
                                      (g$datum->syntax$8667$mjVUK
                                        g$foo$9861$mjVUK
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8668$mjVUK
                                                g$foo$9861$mjVUK))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8668$mjVUK
                                                g$x$9894$mjVUK)))))))))
                         (g$map$5602$mjVUK
                           (case-lambda
                             ((g$field$9864$mjVUK)
                              ((case-lambda
                                 ((g$t$9865$mjVUK)
                                  ((case-lambda
                                     ((g$ls/false$9866$mjVUK)
                                      (if (if g$ls/false$9866$mjVUK
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$9867$mjVUK
                                                     g$accessor$9868$mjVUK
                                                     g$mutator$9869$mjVUK)
                                                   (g$id?$8274$mjVUK
                                                     g$accessor$9868$mjVUK)))
                                                g$ls/false$9866$mjVUK))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$9870$mjVUK
                                               g$accessor$9871$mjVUK
                                               g$mutator$9872$mjVUK)
                                             g$accessor$9871$mjVUK))
                                          g$ls/false$9866$mjVUK)
                                        ((case-lambda
                                           ((g$t$9873$mjVUK)
                                            ((case-lambda
                                               ((g$ls/false$9874$mjVUK)
                                                (if (if g$ls/false$9874$mjVUK
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$9875$mjVUK
                                                               g$accessor$9876$mjVUK)
                                                             (g$id?$8274$mjVUK
                                                               g$accessor$9876$mjVUK)))
                                                          g$ls/false$9874$mjVUK))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$9877$mjVUK
                                                         g$accessor$9878$mjVUK)
                                                       g$accessor$9878$mjVUK))
                                                    g$ls/false$9874$mjVUK)
                                                  ((case-lambda
                                                     ((g$t$9879$mjVUK)
                                                      ((case-lambda
                                                         ((g$ls/false$9880$mjVUK)
                                                          (if (if g$ls/false$9880$mjVUK
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$9881$mjVUK)
                                                                       (g$id?$8274$mjVUK
                                                                         g$name$9881$mjVUK)))
                                                                    g$ls/false$9880$mjVUK))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9882$mjVUK)
                                                                 (g$gen-name$9863$mjVUK
                                                                   g$name$9882$mjVUK)))
                                                              g$ls/false$9880$mjVUK)
                                                            ((case-lambda
                                                               ((g$t$9883$mjVUK)
                                                                ((case-lambda
                                                                   ((g$ls/false$9884$mjVUK)
                                                                    (if (if g$ls/false$9884$mjVUK
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$9885$mjVUK)
                                                                                 (g$id?$8274$mjVUK
                                                                                   g$name$9885$mjVUK)))
                                                                              g$ls/false$9884$mjVUK))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9886$mjVUK)
                                                                           (g$gen-name$9863$mjVUK
                                                                             g$name$9886$mjVUK)))
                                                                        g$ls/false$9884$mjVUK)
                                                                      ((case-lambda
                                                                         ((g$t$9887$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9888$mjVUK)
                                                                              (if (if g$ls/false$9888$mjVUK
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$9889$mjVUK)
                                                                                           (g$id?$8274$mjVUK
                                                                                             g$name$9889$mjVUK)))
                                                                                        g$ls/false$9888$mjVUK))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$9890$mjVUK)
                                                                                     (g$gen-name$9863$mjVUK
                                                                                       g$name$9890$mjVUK)))
                                                                                  g$ls/false$9888$mjVUK)
                                                                                ((case-lambda
                                                                                   ((g$t$9891$mjVUK)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$9892$mjVUK)
                                                                                        (if g$ls/false$9892$mjVUK
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$9893$mjVUK)
                                                                                               (g$syntax-violation$8665$mjVUK
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$9864$mjVUK)))
                                                                                            g$ls/false$9892$mjVUK)
                                                                                          (g$syntax-violation$8665$mjVUK
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$9891$mjVUK))))
                                                                                     (g$syntax-dispatch$8553$mjVUK
                                                                                       g$t$9891$mjVUK
                                                                                       'any))))
                                                                                 g$t$9887$mjVUK))))
                                                                           (g$syntax-dispatch$8553$mjVUK
                                                                             g$t$9887$mjVUK
                                                                             'any))))
                                                                       g$t$9883$mjVUK))))
                                                                 (g$syntax-dispatch$8553$mjVUK
                                                                   g$t$9883$mjVUK
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$9879$mjVUK))))
                                                       (g$syntax-dispatch$8553$mjVUK
                                                         g$t$9879$mjVUK
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$9873$mjVUK))))
                                             (g$syntax-dispatch$8553$mjVUK
                                               g$t$9873$mjVUK
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$9865$mjVUK))))
                                   (g$syntax-dispatch$8553$mjVUK
                                     g$t$9865$mjVUK
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$9864$mjVUK)))
                           g$fields$9862$mjVUK)))))
                  (g$enumerate$9812$mjVUK
                    (case-lambda
                      ((g$ls$9857$mjVUK)
                       ((letrec ((g$f$9858$mjVUK
                                   (case-lambda
                                     ((g$ls$9859$mjVUK g$i$9860$mjVUK)
                                      (if (null? g$ls$9859$mjVUK)
                                        '()
                                        (cons
                                          g$i$9860$mjVUK
                                          (g$f$9858$mjVUK
                                            (cdr g$ls$9859$mjVUK)
                                            (+ g$i$9860$mjVUK '1))))))))
                          g$f$9858$mjVUK)
                        g$ls$9857$mjVUK
                        '0))))
                  (g$do-define-record$9813$mjVUK
                    (case-lambda
                      ((g$namespec$9837$mjVUK g$clause*$9838$mjVUK)
                       ((case-lambda
                          ((g$foo$9839$mjVUK)
                           ((case-lambda
                              ((g$foo-rtd$9840$mjVUK)
                               ((case-lambda
                                  ((g$foo-rcd$9841$mjVUK)
                                   ((case-lambda
                                      ((g$protocol$9842$mjVUK)
                                       ((case-lambda
                                          ((g$make-foo$9843$mjVUK)
                                           ((case-lambda
                                              ((g$fields$9844$mjVUK)
                                               ((case-lambda
                                                  ((g$idx*$9845$mjVUK)
                                                   ((case-lambda
                                                      ((g$foo-x*$9846$mjVUK)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9847$mjVUK)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9848$mjVUK)
                                                               ((case-lambda
                                                                  ((g$foo?$9849$mjVUK)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9850$mjVUK)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9851$mjVUK)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9852$mjVUK)
                                                                               (g$bless$8516$mjVUK
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$9840$mjVUK
                                                                                       g$foo-rtd-code$9850$mjVUK)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$9842$mjVUK
                                                                                         g$protocol-code$9852$mjVUK)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$9841$mjVUK
                                                                                           g$foo-rcd-code$9851$mjVUK)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$9839$mjVUK
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$9840$mjVUK)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$9841$mjVUK)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$9849$mjVUK
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$9840$mjVUK))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$9843$mjVUK
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$9841$mjVUK))
                                                                                               (append
                                                                                                 (g$map$5602$mjVUK
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$9853$mjVUK
                                                                                                        g$idx$9854$mjVUK)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$9853$mjVUK
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$9840$mjVUK
                                                                                                          g$idx$9854$mjVUK))))
                                                                                                   g$foo-x*$9846$mjVUK
                                                                                                   g$idx*$9845$mjVUK)
                                                                                                 (g$map$5602$mjVUK
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$9855$mjVUK
                                                                                                        g$idx$9856$mjVUK)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$9855$mjVUK
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$9840$mjVUK
                                                                                                          g$idx$9856$mjVUK))))
                                                                                                   g$set-foo-x!*$9847$mjVUK
                                                                                                   g$set-foo-idx*$9848$mjVUK))))))))))))
                                                                            (g$get-protocol-code$9807$mjVUK
                                                                              g$clause*$9838$mjVUK))))
                                                                        (g$foo-rcd-code$9806$mjVUK
                                                                          g$clause*$9838$mjVUK
                                                                          g$foo-rtd$9840$mjVUK
                                                                          g$protocol$9842$mjVUK
                                                                          (g$parent-rcd-code$9805$mjVUK
                                                                            g$clause*$9838$mjVUK)))))
                                                                    (g$foo-rtd-code$9803$mjVUK
                                                                      g$foo$9839$mjVUK
                                                                      g$clause*$9838$mjVUK
                                                                      (g$parent-rtd-code$9804$mjVUK
                                                                        g$clause*$9838$mjVUK)))))
                                                                (g$get-record-predicate-name$9801$mjVUK
                                                                  g$namespec$9837$mjVUK))))
                                                            (g$get-mutator-indices$9809$mjVUK
                                                              g$fields$9844$mjVUK))))
                                                        (g$get-mutators$9810$mjVUK
                                                          g$foo$9839$mjVUK
                                                          g$fields$9844$mjVUK))))
                                                    (g$get-accessors$9811$mjVUK
                                                      g$foo$9839$mjVUK
                                                      g$fields$9844$mjVUK))))
                                                (g$enumerate$9812$mjVUK
                                                  g$fields$9844$mjVUK))))
                                            (g$get-fields$9808$mjVUK
                                              g$clause*$9838$mjVUK))))
                                        (g$get-record-constructor-name$9800$mjVUK
                                          g$namespec$9837$mjVUK))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9799$mjVUK g$namespec$9837$mjVUK)))))
                  (g$verify-clauses$9814$mjVUK
                    (case-lambda
                      ((g$x$9819$mjVUK g$cls*$9820$mjVUK)
                       (letrec* ((g$valid-kwds$9821$mjVUK
                                   (g$map$5602$mjVUK
                                     g$bless$8516$mjVUK
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$9822$mjVUK
                                   (case-lambda
                                     ((g$x$9834$mjVUK g$ls$9835$mjVUK)
                                      (if (pair? g$ls$9835$mjVUK)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9836$mjVUK)
                                              (if g$t$9836$mjVUK
                                                g$t$9836$mjVUK
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9822$mjVUK
                                                    g$x$9834$mjVUK
                                                    (cdr g$ls$9835$mjVUK))))))
                                           (g$free-id=?$8278$mjVUK
                                             g$x$9834$mjVUK
                                             (car g$ls$9835$mjVUK))))
                                        '#f)))))
                         ((letrec ((g$f$9823$mjVUK
                                     (case-lambda
                                       ((g$cls*$9824$mjVUK g$seen*$9825$mjVUK)
                                        (if (not (null? g$cls*$9824$mjVUK))
                                          ((case-lambda
                                             ((g$t$9826$mjVUK)
                                              ((case-lambda
                                                 ((g$ls/false$9827$mjVUK)
                                                  (if g$ls/false$9827$mjVUK
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9828$mjVUK
                                                           g$rest$9829$mjVUK)
                                                         (if ((case-lambda
                                                                ((g$t$9830$mjVUK)
                                                                 (if g$t$9830$mjVUK
                                                                   g$t$9830$mjVUK
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9822$mjVUK
                                                                            g$kwd$9828$mjVUK
                                                                            g$valid-kwds$9821$mjVUK))))))
                                                              (not (g$id?$8274$mjVUK
                                                                     g$kwd$9828$mjVUK)))
                                                           (g$syntax-violation$8665$mjVUK
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9828$mjVUK)
                                                           (if (g$bound-id-member?$8281$mjVUK
                                                                 g$kwd$9828$mjVUK
                                                                 g$seen*$9825$mjVUK)
                                                             (g$syntax-violation$8665$mjVUK
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9819$mjVUK
                                                               g$kwd$9828$mjVUK)
                                                             (g$f$9823$mjVUK
                                                               (cdr g$cls*$9824$mjVUK)
                                                               (cons
                                                                 g$kwd$9828$mjVUK
                                                                 g$seen*$9825$mjVUK))))))
                                                      g$ls/false$9827$mjVUK)
                                                    ((case-lambda
                                                       ((g$t$9831$mjVUK)
                                                        ((case-lambda
                                                           ((g$ls/false$9832$mjVUK)
                                                            (if g$ls/false$9832$mjVUK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9833$mjVUK)
                                                                   (g$syntax-violation$8665$mjVUK
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9833$mjVUK)))
                                                                g$ls/false$9832$mjVUK)
                                                              (g$syntax-violation$8665$mjVUK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9831$mjVUK))))
                                                         (g$syntax-dispatch$8553$mjVUK
                                                           g$t$9831$mjVUK
                                                           'any))))
                                                     g$t$9826$mjVUK))))
                                               (g$syntax-dispatch$8553$mjVUK
                                                 g$t$9826$mjVUK
                                                 '(any . any)))))
                                           (car g$cls*$9824$mjVUK))
                                          (void))))))
                            g$f$9823$mjVUK)
                          g$cls*$9820$mjVUK
                          '()))))))
          ((case-lambda
             ((g$t$9815$mjVUK)
              ((case-lambda
                 ((g$ls/false$9816$mjVUK)
                  (if g$ls/false$9816$mjVUK
                    (apply
                      (case-lambda
                        ((g$namespec$9817$mjVUK g$clause*$9818$mjVUK)
                         (begin
                           (g$verify-clauses$9814$mjVUK
                             g$x$9797$mjVUK
                             g$clause*$9818$mjVUK)
                           (g$do-define-record$9813$mjVUK
                             g$namespec$9817$mjVUK
                             g$clause*$9818$mjVUK))))
                      g$ls/false$9816$mjVUK)
                    (g$syntax-violation$8665$mjVUK
                      '#f
                      '"invalid syntax"
                      g$t$9815$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK
                 g$t$9815$mjVUK
                 '(_ any . each-any)))))
           g$x$9797$mjVUK)))))
   (g$define-condition-type-macro$8548$mjVUK
     g$define-condition-type-macro$12066$mjVUK
     (case-lambda
       ((g$x$10053$mjVUK)
        (letrec* ((g$mkname$10054$mjVUK
                    (case-lambda
                      ((g$name$10077$mjVUK g$suffix$10078$mjVUK)
                       (g$datum->syntax$8667$mjVUK
                         g$name$10077$mjVUK
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8668$mjVUK g$name$10077$mjVUK))
                             g$suffix$10078$mjVUK)))))))
          ((case-lambda
             ((g$t$10055$mjVUK)
              ((case-lambda
                 ((g$ls/false$10056$mjVUK)
                  (if (if g$ls/false$10056$mjVUK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$10057$mjVUK
                                 g$name$10058$mjVUK
                                 g$super$10059$mjVUK
                                 g$constructor$10060$mjVUK
                                 g$predicate$10061$mjVUK
                                 g$field*$10062$mjVUK
                                 g$accessor*$10063$mjVUK)
                               (if (g$id?$8274$mjVUK g$name$10058$mjVUK)
                                 (if (g$id?$8274$mjVUK g$super$10059$mjVUK)
                                   (if (g$id?$8274$mjVUK
                                         g$constructor$10060$mjVUK)
                                     (if (g$id?$8274$mjVUK
                                           g$predicate$10061$mjVUK)
                                       (if (g$for-all$5600$mjVUK
                                             g$id?$8274$mjVUK
                                             g$field*$10062$mjVUK)
                                         (begin
                                           '#f
                                           (g$for-all$5600$mjVUK
                                             g$id?$8274$mjVUK
                                             g$accessor*$10063$mjVUK))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$10056$mjVUK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$10064$mjVUK
                           g$name$10065$mjVUK
                           g$super$10066$mjVUK
                           g$constructor$10067$mjVUK
                           g$predicate$10068$mjVUK
                           g$field*$10069$mjVUK
                           g$accessor*$10070$mjVUK)
                         ((case-lambda
                            ((g$aux-accessor*$10071$mjVUK)
                             (g$bless$8516$mjVUK
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$10065$mjVUK
                                         g$constructor$10067$mjVUK
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$10066$mjVUK)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$5602$mjVUK
                                               (case-lambda
                                                 ((g$field$10072$mjVUK
                                                    g$aux$10073$mjVUK)
                                                  (list
                                                    'immutable
                                                    g$field$10072$mjVUK
                                                    g$aux$10073$mjVUK)))
                                               g$field*$10069$mjVUK
                                               g$aux-accessor*$10071$mjVUK))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$10068$mjVUK
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$10065$mjVUK)))
                                     (g$map$5602$mjVUK
                                       (case-lambda
                                         ((g$accessor$10074$mjVUK
                                            g$aux$10075$mjVUK)
                                          (list
                                            'define
                                            g$accessor$10074$mjVUK
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$10065$mjVUK)
                                              g$aux$10075$mjVUK))))
                                       g$accessor*$10070$mjVUK
                                       g$aux-accessor*$10071$mjVUK)))))))
                          (g$map$5602$mjVUK
                            (case-lambda ((g$x$10076$mjVUK) (gensym)))
                            g$accessor*$10070$mjVUK))))
                      g$ls/false$10056$mjVUK)
                    (g$syntax-violation$8665$mjVUK
                      '#f
                      '"invalid syntax"
                      g$t$10055$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK
                 g$t$10055$mjVUK
                 '(any any any any any . #(each (any any)))))))
           g$x$10053$mjVUK)))))
   (g$incorrect-usage-macro$8549$mjVUK
     g$incorrect-usage-macro$12067$mjVUK
     (case-lambda
       ((g$e$10079$mjVUK)
        (g$syntax-violation$8665$mjVUK
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$10079$mjVUK))))
   (g$parameterize-macro$8550$mjVUK
     g$parameterize-macro$12068$mjVUK
     (case-lambda
       ((g$e$10080$mjVUK)
        ((case-lambda
           ((g$t$10081$mjVUK)
            ((case-lambda
               ((g$ls/false$10082$mjVUK)
                (if g$ls/false$10082$mjVUK
                  (apply
                    (case-lambda
                      ((g$b$10083$mjVUK g$b*$10084$mjVUK)
                       (g$bless$8516$mjVUK
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$10083$mjVUK g$b*$10084$mjVUK))))))
                    g$ls/false$10082$mjVUK)
                  ((case-lambda
                     ((g$t$10085$mjVUK)
                      ((case-lambda
                         ((g$ls/false$10086$mjVUK)
                          (if g$ls/false$10086$mjVUK
                            (apply
                              (case-lambda
                                ((g$olhs*$10087$mjVUK
                                   g$orhs*$10088$mjVUK
                                   g$b$10089$mjVUK
                                   g$b*$10090$mjVUK)
                                 ((case-lambda
                                    ((g$lhs*$10091$mjVUK g$rhs*$10092$mjVUK)
                                     (g$bless$8516$mjVUK
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$10091$mjVUK
                                             g$rhs*$10092$mjVUK)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$5602$mjVUK
                                                       (case-lambda
                                                         ((g$lhs$10093$mjVUK
                                                            g$rhs$10094$mjVUK)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$10093$mjVUK)))
                                                            (list
                                                              g$lhs$10093$mjVUK
                                                              g$rhs$10094$mjVUK)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$10094$mjVUK
                                                                '(t))))))
                                                       g$lhs*$10091$mjVUK
                                                       g$rhs*$10092$mjVUK)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$10089$mjVUK
                                                         g$b*$10090$mjVUK)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$10087$mjVUK
                                           g$orhs*$10088$mjVUK)))))
                                  (g$generate-temporaries$8655$mjVUK
                                    g$olhs*$10087$mjVUK)
                                  (g$generate-temporaries$8655$mjVUK
                                    g$orhs*$10088$mjVUK))))
                              g$ls/false$10086$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$10085$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$10085$mjVUK
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$10081$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$10081$mjVUK
               '(_ () any . each-any)))))
         g$e$10080$mjVUK))))
   (g$foreign-call-transformer$8551$mjVUK
     g$foreign-call-transformer$12069$mjVUK
     (case-lambda
       ((g$e$10095$mjVUK g$r$10096$mjVUK g$mr$10097$mjVUK)
        ((case-lambda
           ((g$t$10098$mjVUK)
            ((case-lambda
               ((g$ls/false$10099$mjVUK)
                (if g$ls/false$10099$mjVUK
                  (apply
                    (case-lambda
                      ((g$name$10100$mjVUK g$arg*$10101$mjVUK)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$8571$mjVUK
                             g$name$10100$mjVUK
                             g$r$10096$mjVUK
                             g$mr$10097$mjVUK)
                           (g$chi-expr*$8569$mjVUK
                             g$arg*$10101$mjVUK
                             g$r$10096$mjVUK
                             g$mr$10097$mjVUK)))))
                    g$ls/false$10099$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$10098$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$10098$mjVUK
               '(_ any . each-any)))))
         g$e$10095$mjVUK))))
   (g$convert-pattern$8552$mjVUK
     g$convert-pattern$12070$mjVUK
     (case-lambda
       ((g$pattern$10102$mjVUK g$keys$10103$mjVUK)
        (letrec* ((g$cvt*$10104$mjVUK
                    (case-lambda
                      ((g$p*$10184$mjVUK g$n$10185$mjVUK g$ids$10186$mjVUK)
                       (if (null? g$p*$10184$mjVUK)
                         (values '() g$ids$10186$mjVUK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$10104$mjVUK
                                (cdr g$p*$10184$mjVUK)
                                g$n$10185$mjVUK
                                g$ids$10186$mjVUK)))
                           (case-lambda
                             ((g$y$10189$mjVUK g$ids$10190$mjVUK)
                              ((case-lambda
                                 ((g$ids$10191$mjVUK g$y$10192$mjVUK)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$10105$mjVUK
                                         (car g$p*$10184$mjVUK)
                                         g$n$10185$mjVUK
                                         g$ids$10191$mjVUK)))
                                    (case-lambda
                                      ((g$x$10195$mjVUK g$ids$10196$mjVUK)
                                       ((case-lambda
                                          ((g$ids$10197$mjVUK g$x$10198$mjVUK)
                                           (values
                                             (cons
                                               g$x$10198$mjVUK
                                               g$y$10192$mjVUK)
                                             g$ids$10197$mjVUK)))
                                        g$ids$10196$mjVUK
                                        g$x$10195$mjVUK))))))
                               g$ids$10190$mjVUK
                               g$y$10189$mjVUK))))))))
                  (g$cvt$10105$mjVUK
                    (case-lambda
                      ((g$p$10106$mjVUK g$n$10107$mjVUK g$ids$10108$mjVUK)
                       ((case-lambda
                          ((g$t$10109$mjVUK)
                           ((case-lambda
                              ((g$ls/false$10110$mjVUK)
                               (if (if g$ls/false$10110$mjVUK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$10111$mjVUK)
                                            (g$id?$8274$mjVUK
                                              g$id$10111$mjVUK)))
                                         g$ls/false$10110$mjVUK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$10112$mjVUK)
                                      (if (g$bound-id-member?$8281$mjVUK
                                            g$p$10106$mjVUK
                                            g$keys$10103$mjVUK)
                                        (values
                                          (vector 'free-id g$p$10106$mjVUK)
                                          g$ids$10108$mjVUK)
                                        (if (g$free-id=?$8278$mjVUK
                                              g$p$10106$mjVUK
                                              (g$scheme-stx$8496$mjVUK '_))
                                          (values '_ g$ids$10108$mjVUK)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$10106$mjVUK
                                                g$n$10107$mjVUK)
                                              g$ids$10108$mjVUK))))))
                                   g$ls/false$10110$mjVUK)
                                 ((case-lambda
                                    ((g$t$10113$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$10114$mjVUK)
                                         (if (if g$ls/false$10114$mjVUK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$10115$mjVUK
                                                        g$dots$10116$mjVUK)
                                                      (g$ellipsis?$8554$mjVUK
                                                        g$dots$10116$mjVUK)))
                                                   g$ls/false$10114$mjVUK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$10117$mjVUK
                                                  g$dots$10118$mjVUK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$10105$mjVUK
                                                       g$p$10117$mjVUK
                                                       (+ g$n$10107$mjVUK '1)
                                                       g$ids$10108$mjVUK)))
                                                  (case-lambda
                                                    ((g$p$10121$mjVUK
                                                       g$ids$10122$mjVUK)
                                                     ((case-lambda
                                                        ((g$ids$10123$mjVUK
                                                           g$p$10124$mjVUK)
                                                         (values
                                                           (if (eq? g$p$10124$mjVUK
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$10124$mjVUK))
                                                           g$ids$10123$mjVUK)))
                                                      g$ids$10122$mjVUK
                                                      g$p$10121$mjVUK))))))
                                             g$ls/false$10114$mjVUK)
                                           ((case-lambda
                                              ((g$t$10125$mjVUK)
                                               ((case-lambda
                                                  ((g$ls/false$10126$mjVUK)
                                                   (if (if g$ls/false$10126$mjVUK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$10127$mjVUK
                                                                  g$dots$10128$mjVUK
                                                                  g$ys$10129$mjVUK
                                                                  g$z$10130$mjVUK)
                                                                (g$ellipsis?$8554$mjVUK
                                                                  g$dots$10128$mjVUK)))
                                                             g$ls/false$10126$mjVUK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10131$mjVUK
                                                            g$dots$10132$mjVUK
                                                            g$ys$10133$mjVUK
                                                            g$z$10134$mjVUK)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$10105$mjVUK
                                                                 g$z$10134$mjVUK
                                                                 g$n$10107$mjVUK
                                                                 g$ids$10108$mjVUK)))
                                                            (case-lambda
                                                              ((g$z$10137$mjVUK
                                                                 g$ids$10138$mjVUK)
                                                               ((case-lambda
                                                                  ((g$ids$10139$mjVUK
                                                                     g$z$10140$mjVUK)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$10104$mjVUK
                                                                          g$ys$10133$mjVUK
                                                                          g$n$10107$mjVUK
                                                                          g$ids$10139$mjVUK)))
                                                                     (case-lambda
                                                                       ((g$ys$10143$mjVUK
                                                                          g$ids$10144$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$ids$10145$mjVUK
                                                                              g$ys$10146$mjVUK)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$10105$mjVUK
                                                                                   g$x$10131$mjVUK
                                                                                   (+ g$n$10107$mjVUK
                                                                                      '1)
                                                                                   g$ids$10145$mjVUK)))
                                                                              (case-lambda
                                                                                ((g$x$10149$mjVUK
                                                                                   g$ids$10150$mjVUK)
                                                                                 ((case-lambda
                                                                                    ((g$ids$10151$mjVUK
                                                                                       g$x$10152$mjVUK)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$10152$mjVUK
                                                                                         (reverse
                                                                                           g$ys$10146$mjVUK)
                                                                                         g$z$10140$mjVUK)
                                                                                       g$ids$10151$mjVUK)))
                                                                                  g$ids$10150$mjVUK
                                                                                  g$x$10149$mjVUK))))))
                                                                         g$ids$10144$mjVUK
                                                                         g$ys$10143$mjVUK))))))
                                                                g$ids$10138$mjVUK
                                                                g$z$10137$mjVUK))))))
                                                       g$ls/false$10126$mjVUK)
                                                     ((case-lambda
                                                        ((g$t$10153$mjVUK)
                                                         ((case-lambda
                                                            ((g$ls/false$10154$mjVUK)
                                                             (if g$ls/false$10154$mjVUK
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$10155$mjVUK
                                                                      g$y$10156$mjVUK)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$10105$mjVUK
                                                                           g$y$10156$mjVUK
                                                                           g$n$10107$mjVUK
                                                                           g$ids$10108$mjVUK)))
                                                                      (case-lambda
                                                                        ((g$y$10159$mjVUK
                                                                           g$ids$10160$mjVUK)
                                                                         ((case-lambda
                                                                            ((g$ids$10161$mjVUK
                                                                               g$y$10162$mjVUK)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$10105$mjVUK
                                                                                    g$x$10155$mjVUK
                                                                                    g$n$10107$mjVUK
                                                                                    g$ids$10161$mjVUK)))
                                                                               (case-lambda
                                                                                 ((g$x$10165$mjVUK
                                                                                    g$ids$10166$mjVUK)
                                                                                  ((case-lambda
                                                                                     ((g$ids$10167$mjVUK
                                                                                        g$x$10168$mjVUK)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$10168$mjVUK
                                                                                          g$y$10162$mjVUK)
                                                                                        g$ids$10167$mjVUK)))
                                                                                   g$ids$10166$mjVUK
                                                                                   g$x$10165$mjVUK))))))
                                                                          g$ids$10160$mjVUK
                                                                          g$y$10159$mjVUK))))))
                                                                 g$ls/false$10154$mjVUK)
                                                               ((case-lambda
                                                                  ((g$t$10169$mjVUK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10170$mjVUK)
                                                                       (if g$ls/false$10170$mjVUK
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$10108$mjVUK)))
                                                                           g$ls/false$10170$mjVUK)
                                                                         ((case-lambda
                                                                            ((g$t$10171$mjVUK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10172$mjVUK)
                                                                                 (if (if g$ls/false$10172$mjVUK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$10173$mjVUK)
                                                                                              (not (g$stx?$8246$mjVUK
                                                                                                     g$p$10173$mjVUK))))
                                                                                           g$ls/false$10172$mjVUK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$10174$mjVUK)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$10105$mjVUK
                                                                                               g$p$10174$mjVUK
                                                                                               g$n$10107$mjVUK
                                                                                               g$ids$10108$mjVUK)))
                                                                                          (case-lambda
                                                                                            ((g$p$10177$mjVUK
                                                                                               g$ids$10178$mjVUK)
                                                                                             ((case-lambda
                                                                                                ((g$ids$10179$mjVUK
                                                                                                   g$p$10180$mjVUK)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$10180$mjVUK)
                                                                                                   g$ids$10179$mjVUK)))
                                                                                              g$ids$10178$mjVUK
                                                                                              g$p$10177$mjVUK))))))
                                                                                     g$ls/false$10172$mjVUK)
                                                                                   ((case-lambda
                                                                                      ((g$t$10181$mjVUK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10182$mjVUK)
                                                                                           (if g$ls/false$10182$mjVUK
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$10183$mjVUK)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$8285$mjVUK
                                                                                                        g$datum$10183$mjVUK))
                                                                                                    g$ids$10108$mjVUK)))
                                                                                               g$ls/false$10182$mjVUK)
                                                                                             (g$syntax-violation$8665$mjVUK
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$10181$mjVUK))))
                                                                                        (g$syntax-dispatch$8553$mjVUK
                                                                                          g$t$10181$mjVUK
                                                                                          'any))))
                                                                                    g$t$10171$mjVUK))))
                                                                              (g$syntax-dispatch$8553$mjVUK
                                                                                g$t$10171$mjVUK
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$10169$mjVUK))))
                                                                    (g$syntax-dispatch$8553$mjVUK
                                                                      g$t$10169$mjVUK
                                                                      '()))))
                                                                g$t$10153$mjVUK))))
                                                          (g$syntax-dispatch$8553$mjVUK
                                                            g$t$10153$mjVUK
                                                            '(any . any)))))
                                                      g$t$10125$mjVUK))))
                                                (g$syntax-dispatch$8553$mjVUK
                                                  g$t$10125$mjVUK
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$10113$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$10113$mjVUK
                                        '(any any)))))
                                  g$t$10109$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$10109$mjVUK
                              'any))))
                        g$p$10106$mjVUK)))))
          (g$cvt$10105$mjVUK g$pattern$10102$mjVUK '0 '())))))
   (g$syntax-dispatch$8553$mjVUK
     g$syntax-dispatch$12071$mjVUK
     ((case-lambda
        (()
         (letrec* ((g$stx^$10199$mjVUK
                     (case-lambda
                       ((g$e$10309$mjVUK
                          g$m*$10310$mjVUK
                          g$s*$10311$mjVUK
                          g$ae*$10312$mjVUK)
                        (if (if (null? g$m*$10310$mjVUK)
                              (if (null? g$s*$10311$mjVUK)
                                (begin '#f (null? g$ae*$10312$mjVUK))
                                '#f)
                              '#f)
                          g$e$10309$mjVUK
                          (g$mkstx$8262$mjVUK
                            g$e$10309$mjVUK
                            g$m*$10310$mjVUK
                            g$s*$10311$mjVUK
                            g$ae*$10312$mjVUK)))))
                   (g$match-each$10200$mjVUK
                     (case-lambda
                       ((g$e$10293$mjVUK
                          g$p$10294$mjVUK
                          g$m*$10295$mjVUK
                          g$s*$10296$mjVUK
                          g$ae*$10297$mjVUK)
                        (if (pair? g$e$10293$mjVUK)
                          ((case-lambda
                             ((g$first$10298$mjVUK)
                              (if g$first$10298$mjVUK
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$10299$mjVUK)
                                      (if g$rest$10299$mjVUK
                                        (begin
                                          '#f
                                          (cons
                                            g$first$10298$mjVUK
                                            g$rest$10299$mjVUK))
                                        '#f)))
                                   (g$match-each$10200$mjVUK
                                     (cdr g$e$10293$mjVUK)
                                     g$p$10294$mjVUK
                                     g$m*$10295$mjVUK
                                     g$s*$10296$mjVUK
                                     g$ae*$10297$mjVUK)))
                                '#f)))
                           (g$match$10206$mjVUK
                             (car g$e$10293$mjVUK)
                             g$p$10294$mjVUK
                             g$m*$10295$mjVUK
                             g$s*$10296$mjVUK
                             g$ae*$10297$mjVUK
                             '()))
                          (if (null? g$e$10293$mjVUK)
                            '()
                            (if (g$stx?$8246$mjVUK g$e$10293$mjVUK)
                              (if (not (g$top-marked?$8212$mjVUK
                                         g$m*$10295$mjVUK))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8261$mjVUK
                                         g$m*$10295$mjVUK
                                         g$s*$10296$mjVUK
                                         g$ae*$10297$mjVUK
                                         g$e$10293$mjVUK)))
                                    (case-lambda
                                      ((g$m*$10303$mjVUK
                                         g$s*$10304$mjVUK
                                         g$ae*$10305$mjVUK)
                                       ((case-lambda
                                          ((g$ae*$10306$mjVUK
                                             g$s*$10307$mjVUK
                                             g$m*$10308$mjVUK)
                                           (g$match-each$10200$mjVUK
                                             (g$stx-expr$8248$mjVUK
                                               g$e$10293$mjVUK)
                                             g$p$10294$mjVUK
                                             g$m*$10308$mjVUK
                                             g$s*$10307$mjVUK
                                             g$ae*$10306$mjVUK)))
                                        g$ae*$10305$mjVUK
                                        g$s*$10304$mjVUK
                                        g$m*$10303$mjVUK)))))
                                '#f)
                              (if (annotation? g$e$10293$mjVUK)
                                (g$match-each$10200$mjVUK
                                  (annotation-expression g$e$10293$mjVUK)
                                  g$p$10294$mjVUK
                                  g$m*$10295$mjVUK
                                  g$s*$10296$mjVUK
                                  g$ae*$10297$mjVUK)
                                '#f)))))))
                   (g$match-each+$10201$mjVUK
                     (case-lambda
                       ((g$e$10261$mjVUK
                          g$x-pat$10262$mjVUK
                          g$y-pat$10263$mjVUK
                          g$z-pat$10264$mjVUK
                          g$m*$10265$mjVUK
                          g$s*$10266$mjVUK
                          g$ae*$10267$mjVUK
                          g$r$10268$mjVUK)
                        ((letrec ((g$f$10269$mjVUK
                                    (case-lambda
                                      ((g$e$10270$mjVUK
                                         g$m*$10271$mjVUK
                                         g$s*$10272$mjVUK
                                         g$ae*$10273$mjVUK)
                                       (if (pair? g$e$10270$mjVUK)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$10269$mjVUK
                                                (cdr g$e$10270$mjVUK)
                                                g$m*$10271$mjVUK
                                                g$s*$10272$mjVUK
                                                g$ae*$10273$mjVUK)))
                                           (case-lambda
                                             ((g$xr*$10277$mjVUK
                                                g$y-pat$10278$mjVUK
                                                g$r$10279$mjVUK)
                                              ((case-lambda
                                                 ((g$r$10280$mjVUK
                                                    g$y-pat$10281$mjVUK
                                                    g$xr*$10282$mjVUK)
                                                  (if g$r$10280$mjVUK
                                                    (if (null?
                                                          g$y-pat$10281$mjVUK)
                                                      ((case-lambda
                                                         ((g$xr$10283$mjVUK)
                                                          (if g$xr$10283$mjVUK
                                                            (values
                                                              (cons
                                                                g$xr$10283$mjVUK
                                                                g$xr*$10282$mjVUK)
                                                              g$y-pat$10281$mjVUK
                                                              g$r$10280$mjVUK)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$10206$mjVUK
                                                         (car g$e$10270$mjVUK)
                                                         g$x-pat$10262$mjVUK
                                                         g$m*$10271$mjVUK
                                                         g$s*$10272$mjVUK
                                                         g$ae*$10273$mjVUK
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$10281$mjVUK)
                                                        (g$match$10206$mjVUK
                                                          (car g$e$10270$mjVUK)
                                                          (car g$y-pat$10281$mjVUK)
                                                          g$m*$10271$mjVUK
                                                          g$s*$10272$mjVUK
                                                          g$ae*$10273$mjVUK
                                                          g$r$10280$mjVUK)))
                                                    (values '#f '#f '#f))))
                                               g$r$10279$mjVUK
                                               g$y-pat$10278$mjVUK
                                               g$xr*$10277$mjVUK))))
                                         (if (g$stx?$8246$mjVUK g$e$10270$mjVUK)
                                           (if (g$top-marked?$8212$mjVUK
                                                 g$m*$10271$mjVUK)
                                             (values
                                               '()
                                               g$y-pat$10263$mjVUK
                                               (g$match$10206$mjVUK
                                                 g$e$10270$mjVUK
                                                 g$z-pat$10264$mjVUK
                                                 g$m*$10271$mjVUK
                                                 g$s*$10272$mjVUK
                                                 g$ae*$10273$mjVUK
                                                 g$r$10268$mjVUK))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$8261$mjVUK
                                                    g$m*$10271$mjVUK
                                                    g$s*$10272$mjVUK
                                                    g$ae*$10273$mjVUK
                                                    g$e$10270$mjVUK)))
                                               (case-lambda
                                                 ((g$m*$10287$mjVUK
                                                    g$s*$10288$mjVUK
                                                    g$ae*$10289$mjVUK)
                                                  ((case-lambda
                                                     ((g$ae*$10290$mjVUK
                                                        g$s*$10291$mjVUK
                                                        g$m*$10292$mjVUK)
                                                      (g$f$10269$mjVUK
                                                        (g$stx-expr$8248$mjVUK
                                                          g$e$10270$mjVUK)
                                                        g$m*$10292$mjVUK
                                                        g$s*$10291$mjVUK
                                                        g$ae*$10290$mjVUK)))
                                                   g$ae*$10289$mjVUK
                                                   g$s*$10288$mjVUK
                                                   g$m*$10287$mjVUK)))))
                                           (if (annotation? g$e$10270$mjVUK)
                                             (g$f$10269$mjVUK
                                               (annotation-expression
                                                 g$e$10270$mjVUK)
                                               g$m*$10271$mjVUK
                                               g$s*$10272$mjVUK
                                               g$ae*$10273$mjVUK)
                                             (values
                                               '()
                                               g$y-pat$10263$mjVUK
                                               (g$match$10206$mjVUK
                                                 g$e$10270$mjVUK
                                                 g$z-pat$10264$mjVUK
                                                 g$m*$10271$mjVUK
                                                 g$s*$10272$mjVUK
                                                 g$ae*$10273$mjVUK
                                                 g$r$10268$mjVUK)))))))))
                           g$f$10269$mjVUK)
                         g$e$10261$mjVUK
                         g$m*$10265$mjVUK
                         g$s*$10266$mjVUK
                         g$ae*$10267$mjVUK))))
                   (g$match-each-any$10202$mjVUK
                     (case-lambda
                       ((g$e$10247$mjVUK
                          g$m*$10248$mjVUK
                          g$s*$10249$mjVUK
                          g$ae*$10250$mjVUK)
                        (if (pair? g$e$10247$mjVUK)
                          ((case-lambda
                             ((g$l$10251$mjVUK)
                              (if g$l$10251$mjVUK
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$10199$mjVUK
                                      (car g$e$10247$mjVUK)
                                      g$m*$10248$mjVUK
                                      g$s*$10249$mjVUK
                                      g$ae*$10250$mjVUK)
                                    g$l$10251$mjVUK))
                                '#f)))
                           (g$match-each-any$10202$mjVUK
                             (cdr g$e$10247$mjVUK)
                             g$m*$10248$mjVUK
                             g$s*$10249$mjVUK
                             g$ae*$10250$mjVUK))
                          (if (null? g$e$10247$mjVUK)
                            '()
                            (if (g$stx?$8246$mjVUK g$e$10247$mjVUK)
                              (if (not (g$top-marked?$8212$mjVUK
                                         g$m*$10248$mjVUK))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8261$mjVUK
                                         g$m*$10248$mjVUK
                                         g$s*$10249$mjVUK
                                         g$ae*$10250$mjVUK
                                         g$e$10247$mjVUK)))
                                    (case-lambda
                                      ((g$m*$10255$mjVUK
                                         g$s*$10256$mjVUK
                                         g$ae*$10257$mjVUK)
                                       ((case-lambda
                                          ((g$ae*$10258$mjVUK
                                             g$s*$10259$mjVUK
                                             g$m*$10260$mjVUK)
                                           (g$match-each-any$10202$mjVUK
                                             (g$stx-expr$8248$mjVUK
                                               g$e$10247$mjVUK)
                                             g$m*$10260$mjVUK
                                             g$s*$10259$mjVUK
                                             g$ae*$10258$mjVUK)))
                                        g$ae*$10257$mjVUK
                                        g$s*$10256$mjVUK
                                        g$m*$10255$mjVUK)))))
                                '#f)
                              (if (annotation? g$e$10247$mjVUK)
                                (g$match-each-any$10202$mjVUK
                                  (annotation-expression g$e$10247$mjVUK)
                                  g$m*$10248$mjVUK
                                  g$s*$10249$mjVUK
                                  g$ae*$10250$mjVUK)
                                '#f)))))))
                   (g$match-empty$10203$mjVUK
                     (case-lambda
                       ((g$p$10244$mjVUK g$r$10245$mjVUK)
                        (if (null? g$p$10244$mjVUK)
                          g$r$10245$mjVUK
                          (if (eq? g$p$10244$mjVUK '_)
                            g$r$10245$mjVUK
                            (if (eq? g$p$10244$mjVUK 'any)
                              (cons '() g$r$10245$mjVUK)
                              (if (pair? g$p$10244$mjVUK)
                                (g$match-empty$10203$mjVUK
                                  (car g$p$10244$mjVUK)
                                  (g$match-empty$10203$mjVUK
                                    (cdr g$p$10244$mjVUK)
                                    g$r$10245$mjVUK))
                                (if (eq? g$p$10244$mjVUK 'each-any)
                                  (cons '() g$r$10245$mjVUK)
                                  ((case-lambda
                                     ((g$t$10246$mjVUK)
                                      (if (g$memv$5595$mjVUK
                                            g$t$10246$mjVUK
                                            '(each))
                                        (g$match-empty$10203$mjVUK
                                          (vector-ref g$p$10244$mjVUK '1)
                                          g$r$10245$mjVUK)
                                        (if (g$memv$5595$mjVUK
                                              g$t$10246$mjVUK
                                              '(each+))
                                          (g$match-empty$10203$mjVUK
                                            (vector-ref g$p$10244$mjVUK '1)
                                            (g$match-empty$10203$mjVUK
                                              (reverse
                                                (vector-ref g$p$10244$mjVUK '2))
                                              (g$match-empty$10203$mjVUK
                                                (vector-ref g$p$10244$mjVUK '3)
                                                g$r$10245$mjVUK)))
                                          (if (g$memv$5595$mjVUK
                                                g$t$10246$mjVUK
                                                '(free-id atom))
                                            g$r$10245$mjVUK
                                            (if (g$memv$5595$mjVUK
                                                  g$t$10246$mjVUK
                                                  '(scheme-id atom))
                                              g$r$10245$mjVUK
                                              (if (g$memv$5595$mjVUK
                                                    g$t$10246$mjVUK
                                                    '(vector))
                                                (g$match-empty$10203$mjVUK
                                                  (vector-ref
                                                    g$p$10244$mjVUK
                                                    '1)
                                                  g$r$10245$mjVUK)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$10244$mjVUK))))))))
                                   (vector-ref g$p$10244$mjVUK '0))))))))))
                   (g$combine$10204$mjVUK
                     (case-lambda
                       ((g$r*$10242$mjVUK g$r$10243$mjVUK)
                        (if (null? (car g$r*$10242$mjVUK))
                          g$r$10243$mjVUK
                          (cons
                            (g$map$5602$mjVUK car g$r*$10242$mjVUK)
                            (g$combine$10204$mjVUK
                              (g$map$5602$mjVUK cdr g$r*$10242$mjVUK)
                              g$r$10243$mjVUK))))))
                   (g$match*$10205$mjVUK
                     (case-lambda
                       ((g$e$10224$mjVUK
                          g$p$10225$mjVUK
                          g$m*$10226$mjVUK
                          g$s*$10227$mjVUK
                          g$ae*$10228$mjVUK
                          g$r$10229$mjVUK)
                        (if (null? g$p$10225$mjVUK)
                          (if (null? g$e$10224$mjVUK)
                            (begin '#f g$r$10229$mjVUK)
                            '#f)
                          (if (pair? g$p$10225$mjVUK)
                            (if (pair? g$e$10224$mjVUK)
                              (begin
                                '#f
                                (g$match$10206$mjVUK
                                  (car g$e$10224$mjVUK)
                                  (car g$p$10225$mjVUK)
                                  g$m*$10226$mjVUK
                                  g$s*$10227$mjVUK
                                  g$ae*$10228$mjVUK
                                  (g$match$10206$mjVUK
                                    (cdr g$e$10224$mjVUK)
                                    (cdr g$p$10225$mjVUK)
                                    g$m*$10226$mjVUK
                                    g$s*$10227$mjVUK
                                    g$ae*$10228$mjVUK
                                    g$r$10229$mjVUK)))
                              '#f)
                            (if (eq? g$p$10225$mjVUK 'each-any)
                              ((case-lambda
                                 ((g$l$10230$mjVUK)
                                  (if g$l$10230$mjVUK
                                    (begin
                                      '#f
                                      (cons g$l$10230$mjVUK g$r$10229$mjVUK))
                                    '#f)))
                               (g$match-each-any$10202$mjVUK
                                 g$e$10224$mjVUK
                                 g$m*$10226$mjVUK
                                 g$s*$10227$mjVUK
                                 g$ae*$10228$mjVUK))
                              ((case-lambda
                                 ((g$t$10231$mjVUK)
                                  (if (g$memv$5595$mjVUK
                                        g$t$10231$mjVUK
                                        '(each))
                                    (if (null? g$e$10224$mjVUK)
                                      (g$match-empty$10203$mjVUK
                                        (vector-ref g$p$10225$mjVUK '1)
                                        g$r$10229$mjVUK)
                                      ((case-lambda
                                         ((g$r*$10232$mjVUK)
                                          (if g$r*$10232$mjVUK
                                            (begin
                                              '#f
                                              (g$combine$10204$mjVUK
                                                g$r*$10232$mjVUK
                                                g$r$10229$mjVUK))
                                            '#f)))
                                       (g$match-each$10200$mjVUK
                                         g$e$10224$mjVUK
                                         (vector-ref g$p$10225$mjVUK '1)
                                         g$m*$10226$mjVUK
                                         g$s*$10227$mjVUK
                                         g$ae*$10228$mjVUK)))
                                    (if (g$memv$5595$mjVUK
                                          g$t$10231$mjVUK
                                          '(free-id))
                                      (if (symbol? g$e$10224$mjVUK)
                                        (if (g$top-marked?$8212$mjVUK
                                              g$m*$10226$mjVUK)
                                          (if (g$free-id=?$8278$mjVUK
                                                (g$stx^$10199$mjVUK
                                                  g$e$10224$mjVUK
                                                  g$m*$10226$mjVUK
                                                  g$s*$10227$mjVUK
                                                  g$ae*$10228$mjVUK)
                                                (vector-ref g$p$10225$mjVUK '1))
                                            (begin '#f g$r$10229$mjVUK)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$5595$mjVUK
                                            g$t$10231$mjVUK
                                            '(scheme-id))
                                        (if (symbol? g$e$10224$mjVUK)
                                          (if (g$top-marked?$8212$mjVUK
                                                g$m*$10226$mjVUK)
                                            (if (g$free-id=?$8278$mjVUK
                                                  (g$stx^$10199$mjVUK
                                                    g$e$10224$mjVUK
                                                    g$m*$10226$mjVUK
                                                    g$s*$10227$mjVUK
                                                    g$ae*$10228$mjVUK)
                                                  (g$scheme-stx$8496$mjVUK
                                                    (vector-ref
                                                      g$p$10225$mjVUK
                                                      '1)))
                                              (begin '#f g$r$10229$mjVUK)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$5595$mjVUK
                                              g$t$10231$mjVUK
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$10201$mjVUK
                                                 g$e$10224$mjVUK
                                                 (vector-ref g$p$10225$mjVUK '1)
                                                 (vector-ref g$p$10225$mjVUK '2)
                                                 (vector-ref g$p$10225$mjVUK '3)
                                                 g$m*$10226$mjVUK
                                                 g$s*$10227$mjVUK
                                                 g$ae*$10228$mjVUK
                                                 g$r$10229$mjVUK)))
                                            (case-lambda
                                              ((g$xr*$10236$mjVUK
                                                 g$y-pat$10237$mjVUK
                                                 g$r$10238$mjVUK)
                                               ((case-lambda
                                                  ((g$r$10239$mjVUK
                                                     g$y-pat$10240$mjVUK
                                                     g$xr*$10241$mjVUK)
                                                   (if g$r$10239$mjVUK
                                                     (if (null?
                                                           g$y-pat$10240$mjVUK)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$10241$mjVUK)
                                                           (g$match-empty$10203$mjVUK
                                                             (vector-ref
                                                               g$p$10225$mjVUK
                                                               '1)
                                                             g$r$10239$mjVUK)
                                                           (g$combine$10204$mjVUK
                                                             g$xr*$10241$mjVUK
                                                             g$r$10239$mjVUK)))
                                                       '#f)
                                                     '#f)))
                                                g$r$10238$mjVUK
                                                g$y-pat$10237$mjVUK
                                                g$xr*$10236$mjVUK))))
                                          (if (g$memv$5595$mjVUK
                                                g$t$10231$mjVUK
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref
                                                    g$p$10225$mjVUK
                                                    '1)
                                                  (g$strip$8284$mjVUK
                                                    g$e$10224$mjVUK
                                                    g$m*$10226$mjVUK))
                                              (begin '#f g$r$10229$mjVUK)
                                              '#f)
                                            (if (g$memv$5595$mjVUK
                                                  g$t$10231$mjVUK
                                                  '(vector))
                                              (if (vector? g$e$10224$mjVUK)
                                                (begin
                                                  '#f
                                                  (g$match$10206$mjVUK
                                                    (vector->list
                                                      g$e$10224$mjVUK)
                                                    (vector-ref
                                                      g$p$10225$mjVUK
                                                      '1)
                                                    g$m*$10226$mjVUK
                                                    g$s*$10227$mjVUK
                                                    g$ae*$10228$mjVUK
                                                    g$r$10229$mjVUK))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$10225$mjVUK)))))))))
                               (vector-ref g$p$10225$mjVUK '0))))))))
                   (g$match$10206$mjVUK
                     (case-lambda
                       ((g$e$10209$mjVUK
                          g$p$10210$mjVUK
                          g$m*$10211$mjVUK
                          g$s*$10212$mjVUK
                          g$ae*$10213$mjVUK
                          g$r$10214$mjVUK)
                        (if (not g$r$10214$mjVUK)
                          '#f
                          (if (eq? g$p$10210$mjVUK '_)
                            g$r$10214$mjVUK
                            (if (eq? g$p$10210$mjVUK 'any)
                              (cons
                                (g$stx^$10199$mjVUK
                                  g$e$10209$mjVUK
                                  g$m*$10211$mjVUK
                                  g$s*$10212$mjVUK
                                  g$ae*$10213$mjVUK)
                                g$r$10214$mjVUK)
                              (if (g$stx?$8246$mjVUK g$e$10209$mjVUK)
                                (if (not (g$top-marked?$8212$mjVUK
                                           g$m*$10211$mjVUK))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$8261$mjVUK
                                           g$m*$10211$mjVUK
                                           g$s*$10212$mjVUK
                                           g$ae*$10213$mjVUK
                                           g$e$10209$mjVUK)))
                                      (case-lambda
                                        ((g$m*$10218$mjVUK
                                           g$s*$10219$mjVUK
                                           g$ae*$10220$mjVUK)
                                         ((case-lambda
                                            ((g$ae*$10221$mjVUK
                                               g$s*$10222$mjVUK
                                               g$m*$10223$mjVUK)
                                             (g$match$10206$mjVUK
                                               (g$stx-expr$8248$mjVUK
                                                 g$e$10209$mjVUK)
                                               g$p$10210$mjVUK
                                               g$m*$10223$mjVUK
                                               g$s*$10222$mjVUK
                                               g$ae*$10221$mjVUK
                                               g$r$10214$mjVUK)))
                                          g$ae*$10220$mjVUK
                                          g$s*$10219$mjVUK
                                          g$m*$10218$mjVUK)))))
                                  '#f)
                                (if (annotation? g$e$10209$mjVUK)
                                  (g$match$10206$mjVUK
                                    (annotation-expression g$e$10209$mjVUK)
                                    g$p$10210$mjVUK
                                    g$m*$10211$mjVUK
                                    g$s*$10212$mjVUK
                                    g$ae*$10213$mjVUK
                                    g$r$10214$mjVUK)
                                  (g$match*$10205$mjVUK
                                    g$e$10209$mjVUK
                                    g$p$10210$mjVUK
                                    g$m*$10211$mjVUK
                                    g$s*$10212$mjVUK
                                    g$ae*$10213$mjVUK
                                    g$r$10214$mjVUK))))))))))
           (case-lambda
             ((g$e$10207$mjVUK g$p$10208$mjVUK)
              (g$match$10206$mjVUK
                g$e$10207$mjVUK
                g$p$10208$mjVUK
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$8554$mjVUK
     g$ellipsis?$12072$mjVUK
     (case-lambda
       ((g$x$10313$mjVUK)
        (if (g$id?$8274$mjVUK g$x$10313$mjVUK)
          (begin
            '#f
            (g$free-id=?$8278$mjVUK
              g$x$10313$mjVUK
              (g$scheme-stx$8496$mjVUK '...)))
          '#f))))
   (g$underscore?$8555$mjVUK
     g$underscore?$12073$mjVUK
     (case-lambda
       ((g$x$10314$mjVUK)
        (if (g$id?$8274$mjVUK g$x$10314$mjVUK)
          (begin
            '#f
            (g$free-id=?$8278$mjVUK
              g$x$10314$mjVUK
              (g$scheme-stx$8496$mjVUK '_)))
          '#f))))
   (g$verify-literals$8556$mjVUK
     g$verify-literals$12074$mjVUK
     (case-lambda
       ((g$lits$10315$mjVUK g$expr$10316$mjVUK)
        (g$for-each$5603$mjVUK
          (case-lambda
            ((g$x$10317$mjVUK)
             (if ((case-lambda
                    ((g$t$10318$mjVUK)
                     (if g$t$10318$mjVUK
                       g$t$10318$mjVUK
                       ((case-lambda
                          ((g$t$10319$mjVUK)
                           (if g$t$10319$mjVUK
                             g$t$10319$mjVUK
                             (begin
                               '#f
                               (g$underscore?$8555$mjVUK g$x$10317$mjVUK)))))
                        (g$ellipsis?$8554$mjVUK g$x$10317$mjVUK)))))
                  (not (g$id?$8274$mjVUK g$x$10317$mjVUK)))
               (g$syntax-violation$8665$mjVUK
                 '#f
                 '"invalid literal"
                 g$expr$10316$mjVUK
                 g$x$10317$mjVUK)
               (void))))
          g$lits$10315$mjVUK))))
   (g$syntax-case-transformer$8557$mjVUK
     g$syntax-case-transformer$12075$mjVUK
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$10320$mjVUK
                     (case-lambda
                       ((g$pvars$10377$mjVUK
                          g$expr$10378$mjVUK
                          g$y$10379$mjVUK
                          g$r$10380$mjVUK
                          g$mr$10381$mjVUK)
                        ((case-lambda
                           ((g$ids$10382$mjVUK g$levels$10383$mjVUK)
                            ((case-lambda
                               ((g$labels$10384$mjVUK g$new-vars$10385$mjVUK)
                                ((case-lambda
                                   ((g$body$10386$mjVUK)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$8200$mjVUK
                                        '#f
                                        g$new-vars$10385$mjVUK
                                        g$body$10386$mjVUK)
                                      g$y$10379$mjVUK)))
                                 (g$chi-expr$8571$mjVUK
                                   (g$add-subst$8264$mjVUK
                                     (g$make-full-rib$8242$mjVUK
                                       g$ids$10382$mjVUK
                                       g$labels$10384$mjVUK)
                                     g$expr$10378$mjVUK)
                                   (append
                                     (g$map$5602$mjVUK
                                       (case-lambda
                                         ((g$label$10387$mjVUK
                                            g$var$10388$mjVUK
                                            g$level$10389$mjVUK)
                                          (cons
                                            g$label$10387$mjVUK
                                            (g$make-binding$8290$mjVUK
                                              'syntax
                                              (cons
                                                g$var$10388$mjVUK
                                                g$level$10389$mjVUK)))))
                                       g$labels$10384$mjVUK
                                       g$new-vars$10385$mjVUK
                                       (g$map$5602$mjVUK
                                         cdr
                                         g$pvars$10377$mjVUK))
                                     g$r$10380$mjVUK)
                                   g$mr$10381$mjVUK))))
                             (g$map$5602$mjVUK
                               g$gen-label$8215$mjVUK
                               g$ids$10382$mjVUK)
                             (g$map$5602$mjVUK
                               g$gen-lexical$8213$mjVUK
                               g$ids$10382$mjVUK))))
                         (g$map$5602$mjVUK car g$pvars$10377$mjVUK)
                         (g$map$5602$mjVUK cdr g$pvars$10377$mjVUK)))))
                   (g$invalid-ids-error$10321$mjVUK
                     (case-lambda
                       ((g$id*$10371$mjVUK g$e$10372$mjVUK g$class$10373$mjVUK)
                        ((letrec ((g$find$10374$mjVUK
                                    (case-lambda
                                      ((g$id*$10375$mjVUK g$ok*$10376$mjVUK)
                                       (if (null? g$id*$10375$mjVUK)
                                         (g$syntax-violation$8665$mjVUK
                                           '#f
                                           '"invalid syntax"
                                           g$e$10372$mjVUK)
                                         (if (g$id?$8274$mjVUK
                                               (car g$id*$10375$mjVUK))
                                           (if (g$bound-id-member?$8281$mjVUK
                                                 (car g$id*$10375$mjVUK)
                                                 g$ok*$10376$mjVUK)
                                             (g$syntax-error$8662$mjVUK
                                               (car g$id*$10375$mjVUK)
                                               '"duplicate "
                                               g$class$10373$mjVUK)
                                             (g$find$10374$mjVUK
                                               (cdr g$id*$10375$mjVUK)
                                               (cons
                                                 (car g$id*$10375$mjVUK)
                                                 g$ok*$10376$mjVUK)))
                                           (g$syntax-error$8662$mjVUK
                                             (car g$id*$10375$mjVUK)
                                             '"invalid "
                                             g$class$10373$mjVUK)))))))
                           g$find$10374$mjVUK)
                         g$id*$10371$mjVUK
                         '()))))
                   (g$gen-clause$10322$mjVUK
                     (case-lambda
                       ((g$x$10351$mjVUK
                          g$keys$10352$mjVUK
                          g$clauses$10353$mjVUK
                          g$r$10354$mjVUK
                          g$mr$10355$mjVUK
                          g$pat$10356$mjVUK
                          g$fender$10357$mjVUK
                          g$expr$10358$mjVUK)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$8552$mjVUK
                               g$pat$10356$mjVUK
                               g$keys$10352$mjVUK)))
                          (case-lambda
                            ((g$p$10361$mjVUK g$pvars$10362$mjVUK)
                             ((case-lambda
                                ((g$pvars$10363$mjVUK g$p$10364$mjVUK)
                                 (if (not (g$distinct-bound-ids?$8280$mjVUK
                                            (g$map$5602$mjVUK
                                              car
                                              g$pvars$10363$mjVUK)))
                                   (g$invalid-ids-error$10321$mjVUK
                                     (g$map$5602$mjVUK car g$pvars$10363$mjVUK)
                                     g$pat$10356$mjVUK
                                     '"pattern variable")
                                   (if (not (g$for-all$5600$mjVUK
                                              (case-lambda
                                                ((g$x$10365$mjVUK)
                                                 (not (g$ellipsis?$8554$mjVUK
                                                        (car g$x$10365$mjVUK)))))
                                              g$pvars$10363$mjVUK))
                                     (g$syntax-violation$8665$mjVUK
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$10356$mjVUK)
                                     ((case-lambda
                                        ((g$y$10366$mjVUK)
                                         ((case-lambda
                                            ((g$test$10367$mjVUK)
                                             ((case-lambda
                                                ((g$conseq$10368$mjVUK)
                                                 ((case-lambda
                                                    ((g$altern$10369$mjVUK)
                                                     (list
                                                       (g$build-lambda$8200$mjVUK
                                                         '#f
                                                         (list g$y$10366$mjVUK)
                                                         (list
                                                           'if
                                                           g$test$10367$mjVUK
                                                           g$conseq$10368$mjVUK
                                                           g$altern$10369$mjVUK))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$10351$mjVUK
                                                         (list
                                                           'quote
                                                           g$p$10364$mjVUK)))))
                                                  (g$gen-syntax-case$10323$mjVUK
                                                    g$x$10351$mjVUK
                                                    g$keys$10352$mjVUK
                                                    g$clauses$10353$mjVUK
                                                    g$r$10354$mjVUK
                                                    g$mr$10355$mjVUK))))
                                              (g$build-dispatch-call$10320$mjVUK
                                                g$pvars$10363$mjVUK
                                                g$expr$10358$mjVUK
                                                g$y$10366$mjVUK
                                                g$r$10354$mjVUK
                                                g$mr$10355$mjVUK))))
                                          (if (eq? g$fender$10357$mjVUK '#t)
                                            g$y$10366$mjVUK
                                            ((case-lambda
                                               ((g$call$10370$mjVUK)
                                                (list
                                                  'if
                                                  g$y$10366$mjVUK
                                                  g$call$10370$mjVUK
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$10320$mjVUK
                                               g$pvars$10363$mjVUK
                                               g$fender$10357$mjVUK
                                               g$y$10366$mjVUK
                                               g$r$10354$mjVUK
                                               g$mr$10355$mjVUK))))))
                                      (g$gen-lexical$8213$mjVUK 'tmp))))))
                              g$pvars$10362$mjVUK
                              g$p$10361$mjVUK)))))))
                   (g$gen-syntax-case$10323$mjVUK
                     (case-lambda
                       ((g$x$10334$mjVUK
                          g$keys$10335$mjVUK
                          g$clauses$10336$mjVUK
                          g$r$10337$mjVUK
                          g$mr$10338$mjVUK)
                        (if (null? g$clauses$10336$mjVUK)
                          (list '(primitive syntax-error) g$x$10334$mjVUK)
                          ((case-lambda
                             ((g$t$10339$mjVUK)
                              ((case-lambda
                                 ((g$ls/false$10340$mjVUK)
                                  (if g$ls/false$10340$mjVUK
                                    (apply
                                      (case-lambda
                                        ((g$pat$10341$mjVUK g$expr$10342$mjVUK)
                                         (if (if (g$id?$8274$mjVUK
                                                   g$pat$10341$mjVUK)
                                               (if (not (g$bound-id-member?$8281$mjVUK
                                                          g$pat$10341$mjVUK
                                                          g$keys$10335$mjVUK))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$8554$mjVUK
                                                          g$pat$10341$mjVUK)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$8278$mjVUK
                                                 g$pat$10341$mjVUK
                                                 (g$scheme-stx$8496$mjVUK '_))
                                             (g$chi-expr$8571$mjVUK
                                               g$expr$10342$mjVUK
                                               g$r$10337$mjVUK
                                               g$mr$10338$mjVUK)
                                             ((case-lambda
                                                ((g$lab$10343$mjVUK
                                                   g$lex$10344$mjVUK)
                                                 ((case-lambda
                                                    ((g$body$10345$mjVUK)
                                                     (list
                                                       (g$build-lambda$8200$mjVUK
                                                         '#f
                                                         (list
                                                           g$lex$10344$mjVUK)
                                                         g$body$10345$mjVUK)
                                                       g$x$10334$mjVUK)))
                                                  (g$chi-expr$8571$mjVUK
                                                    (g$add-subst$8264$mjVUK
                                                      (g$make-full-rib$8242$mjVUK
                                                        (list g$pat$10341$mjVUK)
                                                        (list
                                                          g$lab$10343$mjVUK))
                                                      g$expr$10342$mjVUK)
                                                    (cons
                                                      (cons
                                                        g$lab$10343$mjVUK
                                                        (g$make-binding$8290$mjVUK
                                                          'syntax
                                                          (cons
                                                            g$lex$10344$mjVUK
                                                            '0)))
                                                      g$r$10337$mjVUK)
                                                    g$mr$10338$mjVUK))))
                                              (g$gen-label$8215$mjVUK
                                                g$pat$10341$mjVUK)
                                              (g$gen-lexical$8213$mjVUK
                                                g$pat$10341$mjVUK)))
                                           (g$gen-clause$10322$mjVUK
                                             g$x$10334$mjVUK
                                             g$keys$10335$mjVUK
                                             (cdr g$clauses$10336$mjVUK)
                                             g$r$10337$mjVUK
                                             g$mr$10338$mjVUK
                                             g$pat$10341$mjVUK
                                             '#t
                                             g$expr$10342$mjVUK))))
                                      g$ls/false$10340$mjVUK)
                                    ((case-lambda
                                       ((g$t$10346$mjVUK)
                                        ((case-lambda
                                           ((g$ls/false$10347$mjVUK)
                                            (if g$ls/false$10347$mjVUK
                                              (apply
                                                (case-lambda
                                                  ((g$pat$10348$mjVUK
                                                     g$fender$10349$mjVUK
                                                     g$expr$10350$mjVUK)
                                                   (g$gen-clause$10322$mjVUK
                                                     g$x$10334$mjVUK
                                                     g$keys$10335$mjVUK
                                                     (cdr g$clauses$10336$mjVUK)
                                                     g$r$10337$mjVUK
                                                     g$mr$10338$mjVUK
                                                     g$pat$10348$mjVUK
                                                     g$fender$10349$mjVUK
                                                     g$expr$10350$mjVUK)))
                                                g$ls/false$10347$mjVUK)
                                              (g$syntax-violation$8665$mjVUK
                                                '#f
                                                '"invalid syntax"
                                                g$t$10346$mjVUK))))
                                         (g$syntax-dispatch$8553$mjVUK
                                           g$t$10346$mjVUK
                                           '(any any any)))))
                                     g$t$10339$mjVUK))))
                               (g$syntax-dispatch$8553$mjVUK
                                 g$t$10339$mjVUK
                                 '(any any)))))
                           (car g$clauses$10336$mjVUK)))))))
           (case-lambda
             ((g$e$10324$mjVUK g$r$10325$mjVUK g$mr$10326$mjVUK)
              ((case-lambda
                 ((g$t$10327$mjVUK)
                  ((case-lambda
                     ((g$ls/false$10328$mjVUK)
                      (if g$ls/false$10328$mjVUK
                        (apply
                          (case-lambda
                            ((g$expr$10329$mjVUK
                               g$keys$10330$mjVUK
                               g$clauses$10331$mjVUK)
                             (begin
                               (g$verify-literals$8556$mjVUK
                                 g$keys$10330$mjVUK
                                 g$e$10324$mjVUK)
                               ((case-lambda
                                  ((g$x$10332$mjVUK)
                                   ((case-lambda
                                      ((g$body$10333$mjVUK)
                                       (list
                                         (g$build-lambda$8200$mjVUK
                                           '#f
                                           (list g$x$10332$mjVUK)
                                           g$body$10333$mjVUK)
                                         (g$chi-expr$8571$mjVUK
                                           g$expr$10329$mjVUK
                                           g$r$10325$mjVUK
                                           g$mr$10326$mjVUK))))
                                    (g$gen-syntax-case$10323$mjVUK
                                      g$x$10332$mjVUK
                                      g$keys$10330$mjVUK
                                      g$clauses$10331$mjVUK
                                      g$r$10325$mjVUK
                                      g$mr$10326$mjVUK))))
                                (g$gen-lexical$8213$mjVUK 'tmp)))))
                          g$ls/false$10328$mjVUK)
                        (g$syntax-violation$8665$mjVUK
                          '#f
                          '"invalid syntax"
                          g$t$10327$mjVUK))))
                   (g$syntax-dispatch$8553$mjVUK
                     g$t$10327$mjVUK
                     '(_ any each-any . each-any)))))
               g$e$10324$mjVUK))))))))
   (g$ellipsis-map$8558$mjVUK
     g$ellipsis-map$12076$mjVUK
     (case-lambda
       ((g$proc$10390$mjVUK g$ls$10391$mjVUK . g$ls*$10392$mjVUK)
        (letrec* ((g$who$10393$mjVUK '...))
          (begin
            (if (not (list? g$ls$10391$mjVUK))
              (assertion-violation
                g$who$10393$mjVUK
                '"not a list"
                g$ls$10391$mjVUK)
              (void))
            (if (not (null? g$ls*$10392$mjVUK))
              ((case-lambda
                 ((g$n$10394$mjVUK)
                  (g$for-each$5603$mjVUK
                    (case-lambda
                      ((g$x$10395$mjVUK)
                       (begin
                         (if (not (list? g$x$10395$mjVUK))
                           (assertion-violation
                             g$who$10393$mjVUK
                             '"not a list"
                             g$x$10395$mjVUK)
                           (void))
                         (if (not (= (length g$x$10395$mjVUK) g$n$10394$mjVUK))
                           (assertion-violation
                             g$who$10393$mjVUK
                             '"length mismatch"
                             g$ls$10391$mjVUK
                             g$x$10395$mjVUK)
                           (void)))))
                    g$ls*$10392$mjVUK)))
               (length g$ls$10391$mjVUK))
              (void))
            (apply
              g$map$5602$mjVUK
              g$proc$10390$mjVUK
              g$ls$10391$mjVUK
              g$ls*$10392$mjVUK))))))
   (g$syntax-transformer$8559$mjVUK
     g$syntax-transformer$12077$mjVUK
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$10396$mjVUK
                     (case-lambda
                       ((g$src$10456$mjVUK
                          g$e$10457$mjVUK
                          g$r$10458$mjVUK
                          g$maps$10459$mjVUK
                          g$ellipsis?$10460$mjVUK
                          g$vec?$10461$mjVUK)
                        ((case-lambda
                           ((g$t$10462$mjVUK)
                            ((case-lambda
                               ((g$ls/false$10463$mjVUK)
                                (if (if g$ls/false$10463$mjVUK
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$10464$mjVUK)
                                             (g$ellipsis?$10460$mjVUK
                                               g$dots$10464$mjVUK)))
                                          g$ls/false$10463$mjVUK))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$10465$mjVUK)
                                       (g$syntax-violation$8665$mjVUK
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$10456$mjVUK)))
                                    g$ls/false$10463$mjVUK)
                                  ((case-lambda
                                     ((g$t$10466$mjVUK)
                                      ((case-lambda
                                         ((g$ls/false$10467$mjVUK)
                                          (if (if g$ls/false$10467$mjVUK
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$10468$mjVUK)
                                                       (g$id?$8274$mjVUK
                                                         g$id$10468$mjVUK)))
                                                    g$ls/false$10467$mjVUK))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$10469$mjVUK)
                                                 ((case-lambda
                                                    ((g$label$10470$mjVUK)
                                                     ((case-lambda
                                                        ((g$b$10471$mjVUK)
                                                         (if (eq? (g$binding-type$8291$mjVUK
                                                                    g$b$10471$mjVUK)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$10474$mjVUK)
                                                                    (g$gen-ref$10397$mjVUK
                                                                      g$src$10456$mjVUK
                                                                      (car g$var.lev$10474$mjVUK)
                                                                      (cdr g$var.lev$10474$mjVUK)
                                                                      g$maps$10459$mjVUK)))
                                                                 (g$binding-value$8292$mjVUK
                                                                   g$b$10471$mjVUK))))
                                                             (case-lambda
                                                               ((g$var$10475$mjVUK
                                                                  g$maps$10476$mjVUK)
                                                                ((case-lambda
                                                                   ((g$maps$10477$mjVUK
                                                                      g$var$10478$mjVUK)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$10478$mjVUK)
                                                                      g$maps$10477$mjVUK)))
                                                                 g$maps$10476$mjVUK
                                                                 g$var$10475$mjVUK))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$10457$mjVUK)
                                                             g$maps$10459$mjVUK))))
                                                      (g$label->binding$8289$mjVUK
                                                        g$label$10470$mjVUK
                                                        g$r$10458$mjVUK))))
                                                  (g$id->label$8287$mjVUK
                                                    g$e$10457$mjVUK))))
                                              g$ls/false$10467$mjVUK)
                                            ((case-lambda
                                               ((g$t$10479$mjVUK)
                                                ((case-lambda
                                                   ((g$ls/false$10480$mjVUK)
                                                    (if (if g$ls/false$10480$mjVUK
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$10481$mjVUK
                                                                   g$e$10482$mjVUK)
                                                                 (g$ellipsis?$10460$mjVUK
                                                                   g$dots$10481$mjVUK)))
                                                              g$ls/false$10480$mjVUK))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$10483$mjVUK
                                                             g$e$10484$mjVUK)
                                                           (if g$vec?$10461$mjVUK
                                                             (g$syntax-violation$8665$mjVUK
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$10456$mjVUK)
                                                             (g$gen-syntax$10396$mjVUK
                                                               g$src$10456$mjVUK
                                                               g$e$10484$mjVUK
                                                               g$r$10458$mjVUK
                                                               g$maps$10459$mjVUK
                                                               (case-lambda
                                                                 ((g$x$10485$mjVUK)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$10480$mjVUK)
                                                      ((case-lambda
                                                         ((g$t$10486$mjVUK)
                                                          ((case-lambda
                                                             ((g$ls/false$10487$mjVUK)
                                                              (if (if g$ls/false$10487$mjVUK
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$10488$mjVUK
                                                                             g$dots$10489$mjVUK
                                                                             g$y$10490$mjVUK)
                                                                           (g$ellipsis?$10460$mjVUK
                                                                             g$dots$10489$mjVUK)))
                                                                        g$ls/false$10487$mjVUK))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$10491$mjVUK
                                                                       g$dots$10492$mjVUK
                                                                       g$y$10493$mjVUK)
                                                                     ((letrec ((g$f$10494$mjVUK
                                                                                 (case-lambda
                                                                                   ((g$y$10495$mjVUK
                                                                                      g$k$10496$mjVUK)
                                                                                    ((case-lambda
                                                                                       ((g$t$10497$mjVUK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10498$mjVUK)
                                                                                            (if g$ls/false$10498$mjVUK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$10496$mjVUK
                                                                                                     g$maps$10459$mjVUK)))
                                                                                                g$ls/false$10498$mjVUK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10499$mjVUK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10500$mjVUK)
                                                                                                      (if (if g$ls/false$10500$mjVUK
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$10501$mjVUK
                                                                                                                     g$y$10502$mjVUK)
                                                                                                                   (g$ellipsis?$10460$mjVUK
                                                                                                                     g$dots$10501$mjVUK)))
                                                                                                                g$ls/false$10500$mjVUK))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$10503$mjVUK
                                                                                                               g$y$10504$mjVUK)
                                                                                                             (g$f$10494$mjVUK
                                                                                                               g$y$10504$mjVUK
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$10505$mjVUK)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$10496$mjVUK
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$10505$mjVUK))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$10508$mjVUK
                                                                                                                         g$maps$10509$mjVUK)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$10510$mjVUK
                                                                                                                             g$x$10511$mjVUK)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$10510$mjVUK))
                                                                                                                             (g$syntax-violation$8665$mjVUK
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$10456$mjVUK)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$10399$mjVUK
                                                                                                                                 g$x$10511$mjVUK
                                                                                                                                 (car g$maps$10510$mjVUK))
                                                                                                                               (cdr g$maps$10510$mjVUK)))))
                                                                                                                        g$maps$10509$mjVUK
                                                                                                                        g$x$10508$mjVUK)))))))))
                                                                                                          g$ls/false$10500$mjVUK)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$10512$mjVUK)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$10513$mjVUK)
                                                                                                                (if g$ls/false$10513$mjVUK
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$10396$mjVUK
                                                                                                                              g$src$10456$mjVUK
                                                                                                                              g$y$10495$mjVUK
                                                                                                                              g$r$10458$mjVUK
                                                                                                                              g$maps$10459$mjVUK
                                                                                                                              g$ellipsis?$10460$mjVUK
                                                                                                                              g$vec?$10461$mjVUK)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$10516$mjVUK
                                                                                                                              g$maps$10517$mjVUK)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$10518$mjVUK
                                                                                                                                  g$y$10519$mjVUK)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$10496$mjVUK
                                                                                                                                       g$maps$10518$mjVUK)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$10522$mjVUK
                                                                                                                                       g$maps$10523$mjVUK)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$10524$mjVUK
                                                                                                                                           g$x$10525$mjVUK)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$10398$mjVUK
                                                                                                                                             g$x$10525$mjVUK
                                                                                                                                             g$y$10519$mjVUK)
                                                                                                                                           g$maps$10524$mjVUK)))
                                                                                                                                      g$maps$10523$mjVUK
                                                                                                                                      g$x$10522$mjVUK))))))
                                                                                                                             g$maps$10517$mjVUK
                                                                                                                             g$y$10516$mjVUK))))))
                                                                                                                    g$ls/false$10513$mjVUK)
                                                                                                                  (g$syntax-violation$8665$mjVUK
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$10512$mjVUK))))
                                                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                                                               g$t$10512$mjVUK
                                                                                                               '_))))
                                                                                                         g$t$10499$mjVUK))))
                                                                                                   (g$syntax-dispatch$8553$mjVUK
                                                                                                     g$t$10499$mjVUK
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$10497$mjVUK))))
                                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                                           g$t$10497$mjVUK
                                                                                           '()))))
                                                                                     g$y$10495$mjVUK)))))
                                                                        g$f$10494$mjVUK)
                                                                      g$y$10493$mjVUK
                                                                      (case-lambda
                                                                        ((g$maps$10526$mjVUK)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$10396$mjVUK
                                                                                g$src$10456$mjVUK
                                                                                g$x$10491$mjVUK
                                                                                g$r$10458$mjVUK
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$10526$mjVUK)
                                                                                g$ellipsis?$10460$mjVUK
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$10529$mjVUK
                                                                                g$maps$10530$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$maps$10531$mjVUK
                                                                                    g$x$10532$mjVUK)
                                                                                  (if (null?
                                                                                        (car g$maps$10531$mjVUK))
                                                                                    (g$syntax-violation$8665$mjVUK
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$10456$mjVUK)
                                                                                    (values
                                                                                      (g$gen-map$10400$mjVUK
                                                                                        g$x$10532$mjVUK
                                                                                        (car g$maps$10531$mjVUK))
                                                                                      (cdr g$maps$10531$mjVUK)))))
                                                                               g$maps$10530$mjVUK
                                                                               g$x$10529$mjVUK)))))))))
                                                                  g$ls/false$10487$mjVUK)
                                                                ((case-lambda
                                                                   ((g$t$10533$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10534$mjVUK)
                                                                        (if g$ls/false$10534$mjVUK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$10535$mjVUK
                                                                                 g$y$10536$mjVUK)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$10396$mjVUK
                                                                                      g$src$10456$mjVUK
                                                                                      g$x$10535$mjVUK
                                                                                      g$r$10458$mjVUK
                                                                                      g$maps$10459$mjVUK
                                                                                      g$ellipsis?$10460$mjVUK
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$10539$mjVUK
                                                                                      g$maps$10540$mjVUK)
                                                                                    ((case-lambda
                                                                                       ((g$maps$10541$mjVUK
                                                                                          g$xnew$10542$mjVUK)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$10396$mjVUK
                                                                                               g$src$10456$mjVUK
                                                                                               g$y$10536$mjVUK
                                                                                               g$r$10458$mjVUK
                                                                                               g$maps$10541$mjVUK
                                                                                               g$ellipsis?$10460$mjVUK
                                                                                               g$vec?$10461$mjVUK)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$10545$mjVUK
                                                                                               g$maps$10546$mjVUK)
                                                                                             ((case-lambda
                                                                                                ((g$maps$10547$mjVUK
                                                                                                   g$ynew$10548$mjVUK)
                                                                                                 (values
                                                                                                   (g$gen-cons$10401$mjVUK
                                                                                                     g$e$10457$mjVUK
                                                                                                     g$x$10535$mjVUK
                                                                                                     g$y$10536$mjVUK
                                                                                                     g$xnew$10542$mjVUK
                                                                                                     g$ynew$10548$mjVUK)
                                                                                                   g$maps$10547$mjVUK)))
                                                                                              g$maps$10546$mjVUK
                                                                                              g$ynew$10545$mjVUK))))))
                                                                                     g$maps$10540$mjVUK
                                                                                     g$xnew$10539$mjVUK))))))
                                                                            g$ls/false$10534$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$t$10549$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10550$mjVUK)
                                                                                  (if g$ls/false$10550$mjVUK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$10551$mjVUK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$10396$mjVUK
                                                                                                g$src$10456$mjVUK
                                                                                                g$ls$10551$mjVUK
                                                                                                g$r$10458$mjVUK
                                                                                                g$maps$10459$mjVUK
                                                                                                g$ellipsis?$10460$mjVUK
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$10554$mjVUK
                                                                                                g$maps$10555$mjVUK)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$10556$mjVUK
                                                                                                    g$lsnew$10557$mjVUK)
                                                                                                  (values
                                                                                                    (g$gen-vector$10402$mjVUK
                                                                                                      g$e$10457$mjVUK
                                                                                                      g$ls$10551$mjVUK
                                                                                                      g$lsnew$10557$mjVUK)
                                                                                                    g$maps$10556$mjVUK)))
                                                                                               g$maps$10555$mjVUK
                                                                                               g$lsnew$10554$mjVUK))))))
                                                                                      g$ls/false$10550$mjVUK)
                                                                                    ((case-lambda
                                                                                       ((g$t$10558$mjVUK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10559$mjVUK)
                                                                                            (if g$ls/false$10559$mjVUK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$10457$mjVUK)
                                                                                                     g$maps$10459$mjVUK)))
                                                                                                g$ls/false$10559$mjVUK)
                                                                                              (g$syntax-violation$8665$mjVUK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$10558$mjVUK))))
                                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                                           g$t$10558$mjVUK
                                                                                           '_))))
                                                                                     g$t$10549$mjVUK))))
                                                                               (g$syntax-dispatch$8553$mjVUK
                                                                                 g$t$10549$mjVUK
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$10533$mjVUK))))
                                                                     (g$syntax-dispatch$8553$mjVUK
                                                                       g$t$10533$mjVUK
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$10486$mjVUK))))
                                                           (g$syntax-dispatch$8553$mjVUK
                                                             g$t$10486$mjVUK
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$10479$mjVUK))))
                                                 (g$syntax-dispatch$8553$mjVUK
                                                   g$t$10479$mjVUK
                                                   '(any any)))))
                                             g$t$10466$mjVUK))))
                                       (g$syntax-dispatch$8553$mjVUK
                                         g$t$10466$mjVUK
                                         'any))))
                                   g$t$10462$mjVUK))))
                             (g$syntax-dispatch$8553$mjVUK
                               g$t$10462$mjVUK
                               'any))))
                         g$e$10457$mjVUK))))
                   (g$gen-ref$10397$mjVUK
                     (case-lambda
                       ((g$src$10443$mjVUK
                          g$var$10444$mjVUK
                          g$level$10445$mjVUK
                          g$maps$10446$mjVUK)
                        (if (= g$level$10445$mjVUK '0)
                          (values g$var$10444$mjVUK g$maps$10446$mjVUK)
                          (if (null? g$maps$10446$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$10443$mjVUK)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$10397$mjVUK
                                   g$src$10443$mjVUK
                                   g$var$10444$mjVUK
                                   (- g$level$10445$mjVUK '1)
                                   (cdr g$maps$10446$mjVUK))))
                              (case-lambda
                                ((g$outer-var$10449$mjVUK
                                   g$outer-maps$10450$mjVUK)
                                 ((case-lambda
                                    ((g$outer-maps$10451$mjVUK
                                       g$outer-var$10452$mjVUK)
                                     ((case-lambda
                                        ((g$t$10453$mjVUK)
                                         (if g$t$10453$mjVUK
                                           ((case-lambda
                                              ((g$b$10454$mjVUK)
                                               (values
                                                 (cdr g$b$10454$mjVUK)
                                                 g$maps$10446$mjVUK)))
                                            g$t$10453$mjVUK)
                                           ((case-lambda
                                              ((g$inner-var$10455$mjVUK)
                                               (values
                                                 g$inner-var$10455$mjVUK
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$10452$mjVUK
                                                       g$inner-var$10455$mjVUK)
                                                     (car g$maps$10446$mjVUK))
                                                   g$outer-maps$10451$mjVUK))))
                                            (g$gen-lexical$8213$mjVUK 'tmp)))))
                                      (g$assq$5590$mjVUK
                                        g$outer-var$10452$mjVUK
                                        (car g$maps$10446$mjVUK)))))
                                  g$outer-maps$10450$mjVUK
                                  g$outer-var$10449$mjVUK)))))))))
                   (g$gen-append$10398$mjVUK
                     (case-lambda
                       ((g$x$10441$mjVUK g$y$10442$mjVUK)
                        (if (equal? g$y$10442$mjVUK ''())
                          g$x$10441$mjVUK
                          (list 'append g$x$10441$mjVUK g$y$10442$mjVUK)))))
                   (g$gen-mappend$10399$mjVUK
                     (case-lambda
                       ((g$e$10439$mjVUK g$map-env$10440$mjVUK)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$10400$mjVUK
                            g$e$10439$mjVUK
                            g$map-env$10440$mjVUK)))))
                   (g$gen-map$10400$mjVUK
                     (case-lambda
                       ((g$e$10430$mjVUK g$map-env$10431$mjVUK)
                        ((case-lambda
                           ((g$formals$10432$mjVUK g$actuals$10433$mjVUK)
                            (if (eq? (car g$e$10430$mjVUK) 'ref)
                              (car g$actuals$10433$mjVUK)
                              (if (g$for-all$5600$mjVUK
                                    (case-lambda
                                      ((g$x$10434$mjVUK)
                                       (if (eq? (car g$x$10434$mjVUK) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5594$mjVUK
                                             (g$cadr$5828$mjVUK g$x$10434$mjVUK)
                                             g$formals$10432$mjVUK))
                                         '#f)))
                                    (cdr g$e$10430$mjVUK))
                                ((case-lambda
                                   ((g$args$10435$mjVUK)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$10430$mjVUK))
                                        g$args$10435$mjVUK))))
                                 (g$map$5602$mjVUK
                                   ((case-lambda
                                      ((g$r$10436$mjVUK)
                                       (case-lambda
                                         ((g$x$10437$mjVUK)
                                          (cdr (g$assq$5590$mjVUK
                                                 (g$cadr$5828$mjVUK
                                                   g$x$10437$mjVUK)
                                                 g$r$10436$mjVUK))))))
                                    (g$map$5602$mjVUK
                                      cons
                                      g$formals$10432$mjVUK
                                      g$actuals$10433$mjVUK))
                                   (cdr g$e$10430$mjVUK)))
                                (g$cons*$5604$mjVUK
                                  'map
                                  (list
                                    'lambda
                                    g$formals$10432$mjVUK
                                    g$e$10430$mjVUK)
                                  g$actuals$10433$mjVUK)))))
                         (g$map$5602$mjVUK cdr g$map-env$10431$mjVUK)
                         (g$map$5602$mjVUK
                           (case-lambda
                             ((g$x$10438$mjVUK)
                              (list 'ref (car g$x$10438$mjVUK))))
                           g$map-env$10431$mjVUK)))))
                   (g$gen-cons$10401$mjVUK
                     (case-lambda
                       ((g$e$10422$mjVUK
                          g$x$10423$mjVUK
                          g$y$10424$mjVUK
                          g$xnew$10425$mjVUK
                          g$ynew$10426$mjVUK)
                        ((case-lambda
                           ((g$t$10427$mjVUK)
                            (if (g$memv$5595$mjVUK g$t$10427$mjVUK '(quote))
                              (if (eq? (car g$xnew$10425$mjVUK) 'quote)
                                ((case-lambda
                                   ((g$xnew$10428$mjVUK g$ynew$10429$mjVUK)
                                    (if (if (eq? g$xnew$10428$mjVUK
                                                 g$x$10423$mjVUK)
                                          (begin
                                            '#f
                                            (eq? g$ynew$10429$mjVUK
                                                 g$y$10424$mjVUK))
                                          '#f)
                                      (list 'quote g$e$10422$mjVUK)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$10428$mjVUK
                                          g$ynew$10429$mjVUK)))))
                                 (g$cadr$5828$mjVUK g$xnew$10425$mjVUK)
                                 (g$cadr$5828$mjVUK g$ynew$10426$mjVUK))
                                (if (null?
                                      (g$cadr$5828$mjVUK g$ynew$10426$mjVUK))
                                  (list 'list g$xnew$10425$mjVUK)
                                  (list
                                    'cons
                                    g$xnew$10425$mjVUK
                                    g$ynew$10426$mjVUK)))
                              (if (g$memv$5595$mjVUK g$t$10427$mjVUK '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$10425$mjVUK
                                    (cdr g$ynew$10426$mjVUK)))
                                (list
                                  'cons
                                  g$xnew$10425$mjVUK
                                  g$ynew$10426$mjVUK)))))
                         (car g$ynew$10426$mjVUK)))))
                   (g$gen-vector$10402$mjVUK
                     (case-lambda
                       ((g$e$10419$mjVUK g$ls$10420$mjVUK g$lsnew$10421$mjVUK)
                        (if (eq? (car g$lsnew$10421$mjVUK) 'quote)
                          (if (eq? (g$cadr$5828$mjVUK g$lsnew$10421$mjVUK)
                                   g$ls$10420$mjVUK)
                            (list 'quote g$e$10419$mjVUK)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5828$mjVUK g$lsnew$10421$mjVUK))))
                          (if (eq? (car g$lsnew$10421$mjVUK) 'list)
                            (cons 'vector (cdr g$lsnew$10421$mjVUK))
                            (list 'list->vector g$lsnew$10421$mjVUK))))))
                   (g$regen$10403$mjVUK
                     (case-lambda
                       ((g$x$10416$mjVUK)
                        ((case-lambda
                           ((g$t$10417$mjVUK)
                            (if (g$memv$5595$mjVUK g$t$10417$mjVUK '(ref))
                              (g$cadr$5828$mjVUK g$x$10416$mjVUK)
                              (if (g$memv$5595$mjVUK
                                    g$t$10417$mjVUK
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5828$mjVUK g$x$10416$mjVUK))
                                (if (g$memv$5595$mjVUK g$t$10417$mjVUK '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5828$mjVUK g$x$10416$mjVUK))
                                  (if (g$memv$5595$mjVUK
                                        g$t$10417$mjVUK
                                        '(lambda))
                                    (g$build-lambda$8200$mjVUK
                                      '#f
                                      (g$cadr$5828$mjVUK g$x$10416$mjVUK)
                                      (g$regen$10403$mjVUK
                                        (g$caddr$5834$mjVUK g$x$10416$mjVUK)))
                                    (if (g$memv$5595$mjVUK
                                          g$t$10417$mjVUK
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$10418$mjVUK)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$10418$mjVUK)))
                                       (g$map$5602$mjVUK
                                         g$regen$10403$mjVUK
                                         (cdr g$x$10416$mjVUK)))
                                      (cons
                                        (list 'primitive (car g$x$10416$mjVUK))
                                        (g$map$5602$mjVUK
                                          g$regen$10403$mjVUK
                                          (cdr g$x$10416$mjVUK))))))))))
                         (car g$x$10416$mjVUK))))))
           (case-lambda
             ((g$e$10404$mjVUK g$r$10405$mjVUK g$mr$10406$mjVUK)
              ((case-lambda
                 ((g$t$10407$mjVUK)
                  ((case-lambda
                     ((g$ls/false$10408$mjVUK)
                      (if g$ls/false$10408$mjVUK
                        (apply
                          (case-lambda
                            ((g$x$10409$mjVUK)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$10396$mjVUK
                                    g$e$10404$mjVUK
                                    g$x$10409$mjVUK
                                    g$r$10405$mjVUK
                                    '()
                                    g$ellipsis?$8554$mjVUK
                                    '#f)))
                               (case-lambda
                                 ((g$e$10412$mjVUK g$maps$10413$mjVUK)
                                  ((case-lambda
                                     ((g$maps$10414$mjVUK g$e$10415$mjVUK)
                                      (g$regen$10403$mjVUK g$e$10415$mjVUK)))
                                   g$maps$10413$mjVUK
                                   g$e$10412$mjVUK))))))
                          g$ls/false$10408$mjVUK)
                        (g$syntax-violation$8665$mjVUK
                          '#f
                          '"invalid syntax"
                          g$t$10407$mjVUK))))
                   (g$syntax-dispatch$8553$mjVUK g$t$10407$mjVUK '(_ any)))))
               g$e$10404$mjVUK))))))))
   (g$core-macro-transformer$8560$mjVUK
     g$core-macro-transformer$12078$mjVUK
     (case-lambda
       ((g$name$10560$mjVUK)
        ((case-lambda
           ((g$t$10561$mjVUK)
            (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(quote))
              g$quote-transformer$8513$mjVUK
              (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(lambda))
                g$lambda-transformer$8515$mjVUK
                (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(case-lambda))
                  g$case-lambda-transformer$8514$mjVUK
                  (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(letrec))
                    g$letrec-transformer$8503$mjVUK
                    (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(letrec*))
                      g$letrec*-transformer$8504$mjVUK
                      (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(if))
                        g$if-transformer$8511$mjVUK
                        (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(foreign-call))
                          g$foreign-call-transformer$8551$mjVUK
                          (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(syntax-case))
                            g$syntax-case-transformer$8557$mjVUK
                            (if (g$memv$5595$mjVUK g$t$10561$mjVUK '(syntax))
                              g$syntax-transformer$8559$mjVUK
                              (if (g$memv$5595$mjVUK
                                    g$t$10561$mjVUK
                                    '(type-descriptor))
                                g$type-descriptor-transformer$8506$mjVUK
                                (if (g$memv$5595$mjVUK
                                      g$t$10561$mjVUK
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$8507$mjVUK
                                  (if (g$memv$5595$mjVUK
                                        g$t$10561$mjVUK
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$8508$mjVUK
                                    (if (g$memv$5595$mjVUK
                                          g$t$10561$mjVUK
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$8505$mjVUK
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$10560$mjVUK))))))))))))))))
         g$name$10560$mjVUK))))
   (g$file-options-macro$8561$mjVUK
     g$file-options-macro$12079$mjVUK
     (case-lambda
       ((g$x$10562$mjVUK)
        (letrec* ((g$valid-option?$10563$mjVUK
                    (case-lambda
                      ((g$x$10568$mjVUK)
                       (if (g$id?$8274$mjVUK g$x$10568$mjVUK)
                         (begin
                           '#f
                           (g$memq$5594$mjVUK
                             (g$id->sym$8275$mjVUK g$x$10568$mjVUK)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$10564$mjVUK)
              ((case-lambda
                 ((g$ls/false$10565$mjVUK)
                  (if (if g$ls/false$10565$mjVUK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$10566$mjVUK)
                               (if (g$for-all$5600$mjVUK
                                     g$valid-option?$10563$mjVUK
                                     g$opt*$10566$mjVUK)
                                 (begin
                                   '#f
                                   (g$file-options-spec$7538$mjVUK
                                     (g$map$5602$mjVUK
                                       g$id->sym$8275$mjVUK
                                       g$opt*$10566$mjVUK)))
                                 '#f)))
                            g$ls/false$10565$mjVUK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$10567$mjVUK)
                         (g$bless$8516$mjVUK
                           (list
                             'quote
                             (g$file-options-spec$7538$mjVUK
                               (g$map$5602$mjVUK
                                 g$id->sym$8275$mjVUK
                                 g$opt*$10567$mjVUK))))))
                      g$ls/false$10565$mjVUK)
                    (g$syntax-violation$8665$mjVUK
                      '#f
                      '"invalid syntax"
                      g$t$10564$mjVUK))))
               (g$syntax-dispatch$8553$mjVUK g$t$10564$mjVUK '(_ . each-any)))))
           g$x$10562$mjVUK)))))
   (g$symbol-macro$8562$mjVUK
     g$symbol-macro$12080$mjVUK
     (case-lambda
       ((g$x$10569$mjVUK g$set$10570$mjVUK)
        ((case-lambda
           ((g$t$10571$mjVUK)
            ((case-lambda
               ((g$ls/false$10572$mjVUK)
                (if (if g$ls/false$10572$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10573$mjVUK)
                             (if (g$id?$8274$mjVUK g$name$10573$mjVUK)
                               (begin
                                 '#f
                                 (g$memq$5594$mjVUK
                                   (g$id->sym$8275$mjVUK g$name$10573$mjVUK)
                                   g$set$10570$mjVUK))
                               '#f)))
                          g$ls/false$10572$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10574$mjVUK)
                       (g$bless$8516$mjVUK (list 'quote g$name$10574$mjVUK))))
                    g$ls/false$10572$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$10571$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$10571$mjVUK '(_ any)))))
         g$x$10569$mjVUK))))
   (g$macro-transformer$8563$mjVUK
     g$macro-transformer$12081$mjVUK
     (case-lambda
       ((g$x$10575$mjVUK)
        (if (procedure? g$x$10575$mjVUK)
          g$x$10575$mjVUK
          (if (symbol? g$x$10575$mjVUK)
            ((case-lambda
               ((g$t$10576$mjVUK)
                (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(define-record-type))
                  g$define-record-type-macro$8547$mjVUK
                  (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(define-struct))
                    g$define-struct-macro$8546$mjVUK
                    (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(include))
                      g$include-macro$8541$mjVUK
                      (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(cond))
                        g$cond-macro$8539$mjVUK
                        (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(let))
                          g$let-macro$8519$mjVUK
                          (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(do))
                            g$do-macro$8535$mjVUK
                            (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(or))
                              g$or-macro$8537$mjVUK
                              (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(and))
                                g$and-macro$8538$mjVUK
                                (if (g$memv$5595$mjVUK g$t$10576$mjVUK '(let*))
                                  g$let*-macro$8536$mjVUK
                                  (if (g$memv$5595$mjVUK
                                        g$t$10576$mjVUK
                                        '(let-values))
                                    g$let-values-macro$8520$mjVUK
                                    (if (g$memv$5595$mjVUK
                                          g$t$10576$mjVUK
                                          '(let*-values))
                                      g$let*-values-macro$8521$mjVUK
                                      (if (g$memv$5595$mjVUK
                                            g$t$10576$mjVUK
                                            '(syntax-rules))
                                        g$syntax-rules-macro$8543$mjVUK
                                        (if (g$memv$5595$mjVUK
                                              g$t$10576$mjVUK
                                              '(quasiquote))
                                          g$quasiquote-macro$8544$mjVUK
                                          (if (g$memv$5595$mjVUK
                                                g$t$10576$mjVUK
                                                '(quasisyntax))
                                            g$quasisyntax-macro$8545$mjVUK
                                            (if (g$memv$5595$mjVUK
                                                  g$t$10576$mjVUK
                                                  '(with-syntax))
                                              g$with-syntax-macro$8517$mjVUK
                                              (if (g$memv$5595$mjVUK
                                                    g$t$10576$mjVUK
                                                    '(when))
                                                g$when-macro$8509$mjVUK
                                                (if (g$memv$5595$mjVUK
                                                      g$t$10576$mjVUK
                                                      '(unless))
                                                  g$unless-macro$8510$mjVUK
                                                  (if (g$memv$5595$mjVUK
                                                        g$t$10576$mjVUK
                                                        '(case))
                                                    g$case-macro$8512$mjVUK
                                                    (if (g$memv$5595$mjVUK
                                                          g$t$10576$mjVUK
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$8534$mjVUK
                                                      (if (g$memv$5595$mjVUK
                                                            g$t$10576$mjVUK
                                                            '(time))
                                                        g$time-macro$8530$mjVUK
                                                        (if (g$memv$5595$mjVUK
                                                              g$t$10576$mjVUK
                                                              '(delay))
                                                          g$delay-macro$8531$mjVUK
                                                          (if (g$memv$5595$mjVUK
                                                                g$t$10576$mjVUK
                                                                '(assert))
                                                            g$assert-macro$8532$mjVUK
                                                            (if (g$memv$5595$mjVUK
                                                                  g$t$10576$mjVUK
                                                                  '(endianness))
                                                              g$endianness-macro$8533$mjVUK
                                                              (if (g$memv$5595$mjVUK
                                                                    g$t$10576$mjVUK
                                                                    '(guard))
                                                                g$guard-macro$8528$mjVUK
                                                                (if (g$memv$5595$mjVUK
                                                                      g$t$10576$mjVUK
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$8529$mjVUK
                                                                  (if (g$memv$5595$mjVUK
                                                                        g$t$10576$mjVUK
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$8522$mjVUK
                                                                    (if (g$memv$5595$mjVUK
                                                                          g$t$10576$mjVUK
                                                                          '(trace-define))
                                                                      g$trace-define-macro$8523$mjVUK
                                                                      (if (g$memv$5595$mjVUK
                                                                            g$t$10576$mjVUK
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$8524$mjVUK
                                                                        (if (g$memv$5595$mjVUK
                                                                              g$t$10576$mjVUK
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$8526$mjVUK
                                                                          (if (g$memv$5595$mjVUK
                                                                                g$t$10576$mjVUK
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$8527$mjVUK
                                                                            (if (g$memv$5595$mjVUK
                                                                                  g$t$10576$mjVUK
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$8548$mjVUK
                                                                              (if (g$memv$5595$mjVUK
                                                                                    g$t$10576$mjVUK
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$8550$mjVUK
                                                                                (if (g$memv$5595$mjVUK
                                                                                      g$t$10576$mjVUK
                                                                                      '(include-into))
                                                                                  g$include-into-macro$8542$mjVUK
                                                                                  (if (g$memv$5595$mjVUK
                                                                                        g$t$10576$mjVUK
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$10577$mjVUK)
                                                                                       (g$symbol-macro$8562$mjVUK
                                                                                         g$x$10577$mjVUK
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$5595$mjVUK
                                                                                          g$t$10576$mjVUK
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$10578$mjVUK)
                                                                                         (g$symbol-macro$8562$mjVUK
                                                                                           g$x$10578$mjVUK
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$5595$mjVUK
                                                                                            g$t$10576$mjVUK
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$10579$mjVUK)
                                                                                           (g$symbol-macro$8562$mjVUK
                                                                                             g$x$10579$mjVUK
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$5595$mjVUK
                                                                                              g$t$10576$mjVUK
                                                                                              '(file-options))
                                                                                          g$file-options-macro$8561$mjVUK
                                                                                          (if (g$memv$5595$mjVUK
                                                                                                g$t$10576$mjVUK
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$8549$mjVUK
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$10575$mjVUK)))))))))))))))))))))))))))))))))))))))))
             g$x$10575$mjVUK)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10575$mjVUK))))))
   (g$local-macro-transformer$8564$mjVUK
     g$local-macro-transformer$12082$mjVUK
     (case-lambda ((g$x$10580$mjVUK) (car g$x$10580$mjVUK))))
   (g$do-macro-call$8565$mjVUK
     g$do-macro-call$12083$mjVUK
     (case-lambda
       ((g$transformer$10581$mjVUK g$expr$10582$mjVUK g$r$10583$mjVUK)
        (letrec* ((g$return$10584$mjVUK
                    (case-lambda
                      ((g$x$10592$mjVUK)
                       (begin
                         ((letrec ((g$f$10593$mjVUK
                                     (case-lambda
                                       ((g$x$10594$mjVUK)
                                        (if (not (g$stx?$8246$mjVUK
                                                   g$x$10594$mjVUK))
                                          (if (pair? g$x$10594$mjVUK)
                                            (begin
                                              (g$f$10593$mjVUK
                                                (car g$x$10594$mjVUK))
                                              (g$f$10593$mjVUK
                                                (cdr g$x$10594$mjVUK)))
                                            (if (vector? g$x$10594$mjVUK)
                                              (g$vector-for-each$5880$mjVUK
                                                g$f$10593$mjVUK
                                                g$x$10594$mjVUK)
                                              (if (symbol? g$x$10594$mjVUK)
                                                (g$syntax-violation$8665$mjVUK
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$10582$mjVUK
                                                  g$x$10594$mjVUK)
                                                (void))))
                                          (void))))))
                            g$f$10593$mjVUK)
                          g$x$10592$mjVUK)
                         (g$add-mark$8263$mjVUK
                           (g$gen-mark$8258$mjVUK)
                           g$x$10592$mjVUK
                           g$expr$10582$mjVUK))))))
          ((case-lambda
             ((g$x$10585$mjVUK)
              (if (procedure? g$x$10585$mjVUK)
                (g$return$10584$mjVUK
                  (g$x$10585$mjVUK
                    (case-lambda
                      ((g$id$10586$mjVUK)
                       (begin
                         (if (not (g$id?$8274$mjVUK g$id$10586$mjVUK))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$10586$mjVUK)
                           (void))
                         ((case-lambda
                            ((g$label$10587$mjVUK)
                             ((case-lambda
                                ((g$binding$10588$mjVUK)
                                 ((case-lambda
                                    ((g$t$10589$mjVUK)
                                     (if (g$memv$5595$mjVUK
                                           g$t$10589$mjVUK
                                           '(local-ctv))
                                       (g$cadr$5828$mjVUK g$binding$10588$mjVUK)
                                       (if (g$memv$5595$mjVUK
                                             g$t$10589$mjVUK
                                             '(global-ctv))
                                         ((case-lambda
                                            ((g$lib$10590$mjVUK
                                               g$loc$10591$mjVUK)
                                             (begin
                                               (g$visit-library$8085$mjVUK
                                                 g$lib$10590$mjVUK)
                                               (symbol-value
                                                 g$loc$10591$mjVUK))))
                                          (g$cadr$5828$mjVUK
                                            g$binding$10588$mjVUK)
                                          (g$cddr$5830$mjVUK
                                            g$binding$10588$mjVUK))
                                         '#f))))
                                  (car g$binding$10588$mjVUK))))
                              (g$label->binding$8289$mjVUK
                                g$label$10587$mjVUK
                                g$r$10583$mjVUK))))
                          (g$id->label$8287$mjVUK g$id$10586$mjVUK)))))))
                (g$return$10584$mjVUK g$x$10585$mjVUK))))
           (g$transformer$10581$mjVUK
             (g$add-mark$8263$mjVUK
               g$anti-mark$8259$mjVUK
               g$expr$10582$mjVUK
               '#f)))))))
   (g$chi-macro$8566$mjVUK
     g$chi-macro$12084$mjVUK
     (case-lambda
       ((g$p$10595$mjVUK g$e$10596$mjVUK g$r$10597$mjVUK)
        (g$do-macro-call$8565$mjVUK
          (g$macro-transformer$8563$mjVUK g$p$10595$mjVUK)
          g$e$10596$mjVUK
          g$r$10597$mjVUK))))
   (g$chi-local-macro$8567$mjVUK
     g$chi-local-macro$12085$mjVUK
     (case-lambda
       ((g$p$10598$mjVUK g$e$10599$mjVUK g$r$10600$mjVUK)
        (g$do-macro-call$8565$mjVUK
          (g$local-macro-transformer$8564$mjVUK g$p$10598$mjVUK)
          g$e$10599$mjVUK
          g$r$10600$mjVUK))))
   (g$chi-global-macro$8568$mjVUK
     g$chi-global-macro$12086$mjVUK
     (case-lambda
       ((g$p$10601$mjVUK g$e$10602$mjVUK g$r$10603$mjVUK)
        ((case-lambda
           ((g$lib$10604$mjVUK g$loc$10605$mjVUK)
            (begin
              (g$visit-library$8085$mjVUK g$lib$10604$mjVUK)
              ((case-lambda
                 ((g$x$10606$mjVUK)
                  ((case-lambda
                     ((g$transformer$10607$mjVUK)
                      (g$do-macro-call$8565$mjVUK
                        g$transformer$10607$mjVUK
                        g$e$10602$mjVUK
                        g$r$10603$mjVUK)))
                   (if (procedure? g$x$10606$mjVUK)
                     g$x$10606$mjVUK
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10606$mjVUK)))))
               (symbol-value g$loc$10605$mjVUK)))))
         (car g$p$10601$mjVUK)
         (cdr g$p$10601$mjVUK)))))
   (g$chi-expr*$8569$mjVUK
     g$chi-expr*$12087$mjVUK
     (case-lambda
       ((g$e*$10608$mjVUK g$r$10609$mjVUK g$mr$10610$mjVUK)
        (if (null? g$e*$10608$mjVUK)
          '()
          ((case-lambda
             ((g$e$10611$mjVUK)
              (cons
                g$e$10611$mjVUK
                (g$chi-expr*$8569$mjVUK
                  (cdr g$e*$10608$mjVUK)
                  g$r$10609$mjVUK
                  g$mr$10610$mjVUK))))
           (g$chi-expr$8571$mjVUK
             (car g$e*$10608$mjVUK)
             g$r$10609$mjVUK
             g$mr$10610$mjVUK))))))
   (g$chi-application$8570$mjVUK
     g$chi-application$12088$mjVUK
     (case-lambda
       ((g$e$10612$mjVUK g$r$10613$mjVUK g$mr$10614$mjVUK)
        ((case-lambda
           ((g$t$10615$mjVUK)
            ((case-lambda
               ((g$ls/false$10616$mjVUK)
                (if g$ls/false$10616$mjVUK
                  (apply
                    (case-lambda
                      ((g$rator$10617$mjVUK g$rands$10618$mjVUK)
                       ((case-lambda
                          ((g$rator$10619$mjVUK)
                           (cons
                             g$rator$10619$mjVUK
                             (g$chi-expr*$8569$mjVUK
                               g$rands$10618$mjVUK
                               g$r$10613$mjVUK
                               g$mr$10614$mjVUK))))
                        (g$chi-expr$8571$mjVUK
                          g$rator$10617$mjVUK
                          g$r$10613$mjVUK
                          g$mr$10614$mjVUK))))
                    g$ls/false$10616$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$10615$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$10615$mjVUK '(any . each-any)))))
         g$e$10612$mjVUK))))
   (g$chi-expr$8571$mjVUK
     g$chi-expr$12089$mjVUK
     (case-lambda
       ((g$e$10620$mjVUK g$r$10621$mjVUK g$mr$10622$mjVUK)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$8294$mjVUK g$e$10620$mjVUK g$r$10621$mjVUK)))
          (case-lambda
            ((g$type$10626$mjVUK g$value$10627$mjVUK g$kwd$10628$mjVUK)
             ((case-lambda
                ((g$kwd$10629$mjVUK g$value$10630$mjVUK g$type$10631$mjVUK)
                 ((case-lambda
                    ((g$t$10632$mjVUK)
                     (if (g$memv$5595$mjVUK g$t$10632$mjVUK '(core-macro))
                       ((case-lambda
                          ((g$transformer$10633$mjVUK)
                           (g$transformer$10633$mjVUK
                             g$e$10620$mjVUK
                             g$r$10621$mjVUK
                             g$mr$10622$mjVUK)))
                        (g$core-macro-transformer$8560$mjVUK
                          g$value$10630$mjVUK))
                       (if (g$memv$5595$mjVUK g$t$10632$mjVUK '(global))
                         ((case-lambda
                            ((g$lib$10634$mjVUK)
                             ((case-lambda
                                ((g$loc$10635$mjVUK)
                                 (begin
                                   ((g$inv-collector$8605$mjVUK)
                                    g$lib$10634$mjVUK)
                                   g$loc$10635$mjVUK)))
                              (cdr g$value$10630$mjVUK))))
                          (car g$value$10630$mjVUK))
                         (if (g$memv$5595$mjVUK g$t$10632$mjVUK '(core-prim))
                           ((case-lambda
                              ((g$name$10636$mjVUK)
                               (list 'primitive g$name$10636$mjVUK)))
                            g$value$10630$mjVUK)
                           (if (g$memv$5595$mjVUK g$t$10632$mjVUK '(call))
                             (g$chi-application$8570$mjVUK
                               g$e$10620$mjVUK
                               g$r$10621$mjVUK
                               g$mr$10622$mjVUK)
                             (if (g$memv$5595$mjVUK g$t$10632$mjVUK '(lexical))
                               ((case-lambda
                                  ((g$lex$10637$mjVUK) g$lex$10637$mjVUK))
                                (g$lexical-var$8497$mjVUK g$value$10630$mjVUK))
                               (if (g$memv$5595$mjVUK
                                     g$t$10632$mjVUK
                                     '(global-macro global-macro!))
                                 (g$chi-expr$8571$mjVUK
                                   (g$chi-global-macro$8568$mjVUK
                                     g$value$10630$mjVUK
                                     g$e$10620$mjVUK
                                     g$r$10621$mjVUK)
                                   g$r$10621$mjVUK
                                   g$mr$10622$mjVUK)
                                 (if (g$memv$5595$mjVUK
                                       g$t$10632$mjVUK
                                       '(local-macro local-macro!))
                                   (g$chi-expr$8571$mjVUK
                                     (g$chi-local-macro$8567$mjVUK
                                       g$value$10630$mjVUK
                                       g$e$10620$mjVUK
                                       g$r$10621$mjVUK)
                                     g$r$10621$mjVUK
                                     g$mr$10622$mjVUK)
                                   (if (g$memv$5595$mjVUK
                                         g$t$10632$mjVUK
                                         '(macro macro!))
                                     (g$chi-expr$8571$mjVUK
                                       (g$chi-macro$8566$mjVUK
                                         g$value$10630$mjVUK
                                         g$e$10620$mjVUK
                                         g$r$10621$mjVUK)
                                       g$r$10621$mjVUK
                                       g$mr$10622$mjVUK)
                                     (if (g$memv$5595$mjVUK
                                           g$t$10632$mjVUK
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$10638$mjVUK)
                                           (list 'quote g$datum$10638$mjVUK)))
                                        g$value$10630$mjVUK)
                                       (if (g$memv$5595$mjVUK
                                             g$t$10632$mjVUK
                                             '(set!))
                                         (g$chi-set!$8572$mjVUK
                                           g$e$10620$mjVUK
                                           g$r$10621$mjVUK
                                           g$mr$10622$mjVUK)
                                         (if (g$memv$5595$mjVUK
                                               g$t$10632$mjVUK
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$10639$mjVUK)
                                               ((case-lambda
                                                  ((g$ls/false$10640$mjVUK)
                                                   (if g$ls/false$10640$mjVUK
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10641$mjVUK
                                                            g$x*$10642$mjVUK)
                                                          (g$build-sequence$8203$mjVUK
                                                            '#f
                                                            (g$chi-expr*$8569$mjVUK
                                                              (cons
                                                                g$x$10641$mjVUK
                                                                g$x*$10642$mjVUK)
                                                              g$r$10621$mjVUK
                                                              g$mr$10622$mjVUK))))
                                                       g$ls/false$10640$mjVUK)
                                                     (g$syntax-violation$8665$mjVUK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10639$mjVUK))))
                                                (g$syntax-dispatch$8553$mjVUK
                                                  g$t$10639$mjVUK
                                                  '(_ any . each-any)))))
                                            g$e$10620$mjVUK)
                                           (if (g$memv$5595$mjVUK
                                                 g$t$10632$mjVUK
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10643$mjVUK)
                                                 ((case-lambda
                                                    ((g$ls/false$10644$mjVUK)
                                                     (if (if g$ls/false$10644$mjVUK
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10645$mjVUK
                                                                    g$xrhs*$10646$mjVUK
                                                                    g$xbody$10647$mjVUK
                                                                    g$xbody*$10648$mjVUK)
                                                                  (if (not (g$valid-bound-ids?$8279$mjVUK
                                                                             g$xlhs*$10645$mjVUK))
                                                                    (g$syntax-violation$8665$mjVUK
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10620$mjVUK)
                                                                    (void))))
                                                               g$ls/false$10644$mjVUK))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10649$mjVUK
                                                              g$xrhs*$10650$mjVUK
                                                              g$xbody$10651$mjVUK
                                                              g$xbody*$10652$mjVUK)
                                                            ((case-lambda
                                                               ((g$xlab*$10653$mjVUK)
                                                                ((case-lambda
                                                                   ((g$xrib$10654$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$xb*$10655$mjVUK)
                                                                        (g$build-sequence$8203$mjVUK
                                                                          '#f
                                                                          (g$chi-expr*$8569$mjVUK
                                                                            (g$map$5602$mjVUK
                                                                              (case-lambda
                                                                                ((g$x$10656$mjVUK)
                                                                                 (g$add-subst$8264$mjVUK
                                                                                   g$xrib$10654$mjVUK
                                                                                   g$x$10656$mjVUK)))
                                                                              (cons
                                                                                g$xbody$10651$mjVUK
                                                                                g$xbody*$10652$mjVUK))
                                                                            (append
                                                                              (g$map$5602$mjVUK
                                                                                cons
                                                                                g$xlab*$10653$mjVUK
                                                                                g$xb*$10655$mjVUK)
                                                                              g$r$10621$mjVUK)
                                                                            (append
                                                                              (g$map$5602$mjVUK
                                                                                cons
                                                                                g$xlab*$10653$mjVUK
                                                                                g$xb*$10655$mjVUK)
                                                                              g$mr$10622$mjVUK)))))
                                                                     (g$map$5602$mjVUK
                                                                       (case-lambda
                                                                         ((g$x$10657$mjVUK)
                                                                          (g$make-eval-transformer$8307$mjVUK
                                                                            (g$expand-transformer$8598$mjVUK
                                                                              (if (eq? g$type$10631$mjVUK
                                                                                       'let-syntax)
                                                                                g$x$10657$mjVUK
                                                                                (g$add-subst$8264$mjVUK
                                                                                  g$xrib$10654$mjVUK
                                                                                  g$x$10657$mjVUK))
                                                                              g$mr$10622$mjVUK))))
                                                                       g$xrhs*$10650$mjVUK))))
                                                                 (g$make-full-rib$8242$mjVUK
                                                                   g$xlhs*$10649$mjVUK
                                                                   g$xlab*$10653$mjVUK))))
                                                             (g$map$5602$mjVUK
                                                               g$gen-label$8215$mjVUK
                                                               g$xlhs*$10649$mjVUK))))
                                                         g$ls/false$10644$mjVUK)
                                                       (g$syntax-violation$8665$mjVUK
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10643$mjVUK))))
                                                  (g$syntax-dispatch$8553$mjVUK
                                                    g$t$10643$mjVUK
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10620$mjVUK)
                                             (if (g$memv$5595$mjVUK
                                                   g$t$10632$mjVUK
                                                   '(displaced-lexical))
                                               (g$syntax-violation$8665$mjVUK
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10620$mjVUK)
                                               (if (g$memv$5595$mjVUK
                                                     g$t$10632$mjVUK
                                                     '(syntax))
                                                 (g$syntax-violation$8665$mjVUK
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10620$mjVUK)
                                                 (if (g$memv$5595$mjVUK
                                                       g$t$10632$mjVUK
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8665$mjVUK
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10658$mjVUK)
                                                           (if (g$memv$5595$mjVUK
                                                                 g$t$10658$mjVUK
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$5595$mjVUK
                                                                   g$t$10658$mjVUK
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$5595$mjVUK
                                                                     g$t$10658$mjVUK
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$5595$mjVUK
                                                                       g$t$10658$mjVUK
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$5595$mjVUK
                                                                         g$t$10658$mjVUK
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$5595$mjVUK
                                                                           g$t$10658$mjVUK
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$10631$mjVUK)
                                                       '" was found where an expression was expected")
                                                     g$e$10620$mjVUK)
                                                   (if (g$memv$5595$mjVUK
                                                         g$t$10632$mjVUK
                                                         '(mutable))
                                                     (g$syntax-violation$8665$mjVUK
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10620$mjVUK)
                                                     (g$syntax-violation$8665$mjVUK
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10620$mjVUK)))))))))))))))))))
                  g$type$10631$mjVUK)))
              g$kwd$10628$mjVUK
              g$value$10627$mjVUK
              g$type$10626$mjVUK)))))))
   (g$chi-set!$8572$mjVUK
     g$chi-set!$12090$mjVUK
     (case-lambda
       ((g$e$10659$mjVUK g$r$10660$mjVUK g$mr$10661$mjVUK)
        ((case-lambda
           ((g$t$10662$mjVUK)
            ((case-lambda
               ((g$ls/false$10663$mjVUK)
                (if (if g$ls/false$10663$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10664$mjVUK g$v$10665$mjVUK)
                             (g$id?$8274$mjVUK g$x$10664$mjVUK)))
                          g$ls/false$10663$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10666$mjVUK g$v$10667$mjVUK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$8294$mjVUK
                              g$x$10666$mjVUK
                              g$r$10660$mjVUK)))
                         (case-lambda
                           ((g$type$10671$mjVUK
                              g$value$10672$mjVUK
                              g$kwd$10673$mjVUK)
                            ((case-lambda
                               ((g$kwd$10674$mjVUK
                                  g$value$10675$mjVUK
                                  g$type$10676$mjVUK)
                                ((case-lambda
                                   ((g$t$10677$mjVUK)
                                    (if (g$memv$5595$mjVUK
                                          g$t$10677$mjVUK
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$8499$mjVUK
                                          g$value$10675$mjVUK
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$8497$mjVUK
                                            g$value$10675$mjVUK)
                                          (g$chi-expr$8571$mjVUK
                                            g$v$10667$mjVUK
                                            g$r$10660$mjVUK
                                            g$mr$10661$mjVUK)))
                                      (if (g$memv$5595$mjVUK
                                            g$t$10677$mjVUK
                                            '(core-prim))
                                        (g$syntax-violation$8665$mjVUK
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10659$mjVUK)
                                        (if (g$memv$5595$mjVUK
                                              g$t$10677$mjVUK
                                              '(global))
                                          (g$syntax-violation$8665$mjVUK
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10659$mjVUK)
                                          (if (g$memv$5595$mjVUK
                                                g$t$10677$mjVUK
                                                '(global-macro!))
                                            (g$chi-expr$8571$mjVUK
                                              (g$chi-global-macro$8568$mjVUK
                                                g$value$10675$mjVUK
                                                g$e$10659$mjVUK
                                                g$r$10660$mjVUK)
                                              g$r$10660$mjVUK
                                              g$mr$10661$mjVUK)
                                            (if (g$memv$5595$mjVUK
                                                  g$t$10677$mjVUK
                                                  '(local-macro!))
                                              (g$chi-expr$8571$mjVUK
                                                (g$chi-local-macro$8567$mjVUK
                                                  g$value$10675$mjVUK
                                                  g$e$10659$mjVUK
                                                  g$r$10660$mjVUK)
                                                g$r$10660$mjVUK
                                                g$mr$10661$mjVUK)
                                              (if (g$memv$5595$mjVUK
                                                    g$t$10677$mjVUK
                                                    '(mutable))
                                                (g$syntax-violation$8665$mjVUK
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10659$mjVUK)
                                                (g$syntax-violation$8665$mjVUK
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10659$mjVUK)))))))))
                                 g$type$10676$mjVUK)))
                             g$kwd$10673$mjVUK
                             g$value$10672$mjVUK
                             g$type$10671$mjVUK))))))
                    g$ls/false$10663$mjVUK)
                  (g$syntax-violation$8665$mjVUK
                    '#f
                    '"invalid syntax"
                    g$t$10662$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$10662$mjVUK '(_ any any)))))
         g$e$10659$mjVUK))))
   (g$verify-formals$8573$mjVUK
     g$verify-formals$12091$mjVUK
     (case-lambda
       ((g$fmls$10678$mjVUK g$stx$10679$mjVUK)
        ((case-lambda
           ((g$t$10680$mjVUK)
            ((case-lambda
               ((g$ls/false$10681$mjVUK)
                (if g$ls/false$10681$mjVUK
                  (apply
                    (case-lambda
                      ((g$x*$10682$mjVUK)
                       (if (not (g$valid-bound-ids?$8279$mjVUK
                                  g$x*$10682$mjVUK))
                         (g$invalid-fmls-error$8518$mjVUK
                           g$stx$10679$mjVUK
                           g$fmls$10678$mjVUK)
                         (void))))
                    g$ls/false$10681$mjVUK)
                  ((case-lambda
                     ((g$t$10683$mjVUK)
                      ((case-lambda
                         ((g$ls/false$10684$mjVUK)
                          (if g$ls/false$10684$mjVUK
                            (apply
                              (case-lambda
                                ((g$x*$10685$mjVUK g$x$10686$mjVUK)
                                 (if (not (g$valid-bound-ids?$8279$mjVUK
                                            (cons
                                              g$x$10686$mjVUK
                                              g$x*$10685$mjVUK)))
                                   (g$invalid-fmls-error$8518$mjVUK
                                     g$stx$10679$mjVUK
                                     g$fmls$10678$mjVUK)
                                   (void))))
                              g$ls/false$10684$mjVUK)
                            ((case-lambda
                               ((g$t$10687$mjVUK)
                                ((case-lambda
                                   ((g$ls/false$10688$mjVUK)
                                    (if g$ls/false$10688$mjVUK
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10679$mjVUK)))
                                        g$ls/false$10688$mjVUK)
                                      (g$syntax-violation$8665$mjVUK
                                        '#f
                                        '"invalid syntax"
                                        g$t$10687$mjVUK))))
                                 (g$syntax-dispatch$8553$mjVUK
                                   g$t$10687$mjVUK
                                   '_))))
                             g$t$10683$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$10683$mjVUK
                         '#(each+ any () any)))))
                   g$t$10680$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$10680$mjVUK 'each-any))))
         g$fmls$10678$mjVUK))))
   (g$chi-lambda-clause$8574$mjVUK
     g$chi-lambda-clause$12092$mjVUK
     (case-lambda
       ((g$stx$10689$mjVUK
          g$fmls$10690$mjVUK
          g$body*$10691$mjVUK
          g$r$10692$mjVUK
          g$mr$10693$mjVUK)
        ((case-lambda
           ((g$t$10694$mjVUK)
            ((case-lambda
               ((g$ls/false$10695$mjVUK)
                (if g$ls/false$10695$mjVUK
                  (apply
                    (case-lambda
                      ((g$x*$10696$mjVUK)
                       (begin
                         (g$verify-formals$8573$mjVUK
                           g$fmls$10690$mjVUK
                           g$stx$10689$mjVUK)
                         ((case-lambda
                            ((g$lex*$10697$mjVUK g$lab*$10698$mjVUK)
                             (values
                               g$lex*$10697$mjVUK
                               (g$chi-internal$8582$mjVUK
                                 (g$add-subst$8264$mjVUK
                                   (g$make-full-rib$8242$mjVUK
                                     g$x*$10696$mjVUK
                                     g$lab*$10698$mjVUK)
                                   g$body*$10691$mjVUK)
                                 (g$add-lexicals$8501$mjVUK
                                   g$lab*$10698$mjVUK
                                   g$lex*$10697$mjVUK
                                   g$r$10692$mjVUK)
                                 g$mr$10693$mjVUK))))
                          (g$map$5602$mjVUK
                            g$gen-lexical$8213$mjVUK
                            g$x*$10696$mjVUK)
                          (g$map$5602$mjVUK
                            g$gen-label$8215$mjVUK
                            g$x*$10696$mjVUK)))))
                    g$ls/false$10695$mjVUK)
                  ((case-lambda
                     ((g$t$10699$mjVUK)
                      ((case-lambda
                         ((g$ls/false$10700$mjVUK)
                          (if g$ls/false$10700$mjVUK
                            (apply
                              (case-lambda
                                ((g$x*$10701$mjVUK g$x$10702$mjVUK)
                                 (begin
                                   (g$verify-formals$8573$mjVUK
                                     g$fmls$10690$mjVUK
                                     g$stx$10689$mjVUK)
                                   ((case-lambda
                                      ((g$lex*$10703$mjVUK
                                         g$lab*$10704$mjVUK
                                         g$lex$10705$mjVUK
                                         g$lab$10706$mjVUK)
                                       (values
                                         (append
                                           g$lex*$10703$mjVUK
                                           g$lex$10705$mjVUK)
                                         (g$chi-internal$8582$mjVUK
                                           (g$add-subst$8264$mjVUK
                                             (g$make-full-rib$8242$mjVUK
                                               (cons
                                                 g$x$10702$mjVUK
                                                 g$x*$10701$mjVUK)
                                               (cons
                                                 g$lab$10706$mjVUK
                                                 g$lab*$10704$mjVUK))
                                             g$body*$10691$mjVUK)
                                           (g$add-lexicals$8501$mjVUK
                                             (cons
                                               g$lab$10706$mjVUK
                                               g$lab*$10704$mjVUK)
                                             (cons
                                               g$lex$10705$mjVUK
                                               g$lex*$10703$mjVUK)
                                             g$r$10692$mjVUK)
                                           g$mr$10693$mjVUK))))
                                    (g$map$5602$mjVUK
                                      g$gen-lexical$8213$mjVUK
                                      g$x*$10701$mjVUK)
                                    (g$map$5602$mjVUK
                                      g$gen-label$8215$mjVUK
                                      g$x*$10701$mjVUK)
                                    (g$gen-lexical$8213$mjVUK g$x$10702$mjVUK)
                                    (g$gen-label$8215$mjVUK g$x$10702$mjVUK)))))
                              g$ls/false$10700$mjVUK)
                            ((case-lambda
                               ((g$t$10707$mjVUK)
                                ((case-lambda
                                   ((g$ls/false$10708$mjVUK)
                                    (if g$ls/false$10708$mjVUK
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8665$mjVUK
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10690$mjVUK)))
                                        g$ls/false$10708$mjVUK)
                                      (g$syntax-violation$8665$mjVUK
                                        '#f
                                        '"invalid syntax"
                                        g$t$10707$mjVUK))))
                                 (g$syntax-dispatch$8553$mjVUK
                                   g$t$10707$mjVUK
                                   '_))))
                             g$t$10699$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$10699$mjVUK
                         '#(each+ any () any)))))
                   g$t$10694$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$10694$mjVUK 'each-any))))
         g$fmls$10690$mjVUK))))
   (g$chi-lambda-clause*$8575$mjVUK
     g$chi-lambda-clause*$12093$mjVUK
     (case-lambda
       ((g$stx$10709$mjVUK
          g$fmls*$10710$mjVUK
          g$body**$10711$mjVUK
          g$r$10712$mjVUK
          g$mr$10713$mjVUK)
        (if (null? g$fmls*$10710$mjVUK)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8574$mjVUK
                 g$stx$10709$mjVUK
                 (car g$fmls*$10710$mjVUK)
                 (car g$body**$10711$mjVUK)
                 g$r$10712$mjVUK
                 g$mr$10713$mjVUK)))
            (case-lambda
              ((g$a$10716$mjVUK g$b$10717$mjVUK)
               ((case-lambda
                  ((g$b$10718$mjVUK g$a$10719$mjVUK)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8575$mjVUK
                          g$stx$10709$mjVUK
                          (cdr g$fmls*$10710$mjVUK)
                          (cdr g$body**$10711$mjVUK)
                          g$r$10712$mjVUK
                          g$mr$10713$mjVUK)))
                     (case-lambda
                       ((g$a*$10722$mjVUK g$b*$10723$mjVUK)
                        ((case-lambda
                           ((g$b*$10724$mjVUK g$a*$10725$mjVUK)
                            (values
                              (cons g$a$10719$mjVUK g$a*$10725$mjVUK)
                              (cons g$b$10718$mjVUK g$b*$10724$mjVUK))))
                         g$b*$10723$mjVUK
                         g$a*$10722$mjVUK))))))
                g$b$10717$mjVUK
                g$a$10716$mjVUK))))))))
   (g$chi-defun$8576$mjVUK
     g$chi-defun$12094$mjVUK
     (case-lambda
       ((g$x$10726$mjVUK g$r$10727$mjVUK g$mr$10728$mjVUK)
        ((case-lambda
           ((g$fmls$10729$mjVUK g$body*$10730$mjVUK)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8574$mjVUK
                   g$fmls$10729$mjVUK
                   g$fmls$10729$mjVUK
                   g$body*$10730$mjVUK
                   g$r$10727$mjVUK
                   g$mr$10728$mjVUK)))
              (case-lambda
                ((g$fmls$10733$mjVUK g$body$10734$mjVUK)
                 ((case-lambda
                    ((g$body$10735$mjVUK g$fmls$10736$mjVUK)
                     (g$build-lambda$8200$mjVUK
                       '#f
                       g$fmls$10736$mjVUK
                       g$body$10735$mjVUK)))
                  g$body$10734$mjVUK
                  g$fmls$10733$mjVUK))))))
         (car g$x$10726$mjVUK)
         (cdr g$x$10726$mjVUK)))))
   (g$chi-rhs$8577$mjVUK
     g$chi-rhs$12095$mjVUK
     (case-lambda
       ((g$rhs$10737$mjVUK g$r$10738$mjVUK g$mr$10739$mjVUK)
        ((case-lambda
           ((g$t$10740$mjVUK)
            (if (g$memv$5595$mjVUK g$t$10740$mjVUK '(defun))
              (g$chi-defun$8576$mjVUK
                (cdr g$rhs$10737$mjVUK)
                g$r$10738$mjVUK
                g$mr$10739$mjVUK)
              (if (g$memv$5595$mjVUK g$t$10740$mjVUK '(expr))
                ((case-lambda
                   ((g$expr$10741$mjVUK)
                    (g$chi-expr$8571$mjVUK
                      g$expr$10741$mjVUK
                      g$r$10738$mjVUK
                      g$mr$10739$mjVUK)))
                 (cdr g$rhs$10737$mjVUK))
                (if (g$memv$5595$mjVUK g$t$10740$mjVUK '(top-expr))
                  ((case-lambda
                     ((g$expr$10742$mjVUK)
                      (g$build-sequence$8203$mjVUK
                        '#f
                        (list
                          (g$chi-expr$8571$mjVUK
                            g$expr$10742$mjVUK
                            g$r$10738$mjVUK
                            g$mr$10739$mjVUK)
                          (g$build-void$8204$mjVUK)))))
                   (cdr g$rhs$10737$mjVUK))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10737$mjVUK))))))
         (car g$rhs$10737$mjVUK)))))
   (g$expand-interaction-rhs*/init*$8578$mjVUK
     g$expand-interaction-rhs*/init*$12096$mjVUK
     (case-lambda
       ((g$lhs*$10743$mjVUK
          g$rhs*$10744$mjVUK
          g$init*$10745$mjVUK
          g$r$10746$mjVUK
          g$mr$10747$mjVUK)
        ((letrec ((g$f$10748$mjVUK
                    (case-lambda
                      ((g$lhs*$10749$mjVUK g$rhs*$10750$mjVUK)
                       (if (null? g$lhs*$10749$mjVUK)
                         (g$map$5602$mjVUK
                           (case-lambda
                             ((g$x$10751$mjVUK)
                              (g$chi-expr$8571$mjVUK
                                g$x$10751$mjVUK
                                g$r$10746$mjVUK
                                g$mr$10747$mjVUK)))
                           g$init*$10745$mjVUK)
                         ((case-lambda
                            ((g$lhs$10752$mjVUK g$rhs$10753$mjVUK)
                             ((case-lambda
                                ((g$t$10754$mjVUK)
                                 (if (g$memv$5595$mjVUK
                                       g$t$10754$mjVUK
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$10755$mjVUK)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10752$mjVUK
                                           g$rhs$10755$mjVUK)
                                         (g$f$10748$mjVUK
                                           (cdr g$lhs*$10749$mjVUK)
                                           (cdr g$rhs*$10750$mjVUK)))))
                                    (g$chi-defun$8576$mjVUK
                                      (cdr g$rhs$10753$mjVUK)
                                      g$r$10746$mjVUK
                                      g$mr$10747$mjVUK))
                                   (if (g$memv$5595$mjVUK
                                         g$t$10754$mjVUK
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$10756$mjVUK)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10752$mjVUK
                                             g$rhs$10756$mjVUK)
                                           (g$f$10748$mjVUK
                                             (cdr g$lhs*$10749$mjVUK)
                                             (cdr g$rhs*$10750$mjVUK)))))
                                      (g$chi-expr$8571$mjVUK
                                        (cdr g$rhs$10753$mjVUK)
                                        g$r$10746$mjVUK
                                        g$mr$10747$mjVUK))
                                     (if (g$memv$5595$mjVUK
                                           g$t$10754$mjVUK
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$10757$mjVUK)
                                           (cons
                                             g$e$10757$mjVUK
                                             (g$f$10748$mjVUK
                                               (cdr g$lhs*$10749$mjVUK)
                                               (cdr g$rhs*$10750$mjVUK)))))
                                        (g$chi-expr$8571$mjVUK
                                          (cdr g$rhs$10753$mjVUK)
                                          g$r$10746$mjVUK
                                          g$mr$10747$mjVUK))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10753$mjVUK))))))
                              (car g$rhs$10753$mjVUK))))
                          (car g$lhs*$10749$mjVUK)
                          (car g$rhs*$10750$mjVUK)))))))
           g$f$10748$mjVUK)
         g$lhs*$10743$mjVUK
         g$rhs*$10744$mjVUK))))
   (g$chi-rhs*$8579$mjVUK
     g$chi-rhs*$12097$mjVUK
     (case-lambda
       ((g$rhs*$10758$mjVUK g$r$10759$mjVUK g$mr$10760$mjVUK)
        ((letrec ((g$f$10761$mjVUK
                    (case-lambda
                      ((g$ls$10762$mjVUK)
                       (if (null? g$ls$10762$mjVUK)
                         '()
                         ((case-lambda
                            ((g$a$10763$mjVUK)
                             (cons
                               g$a$10763$mjVUK
                               (g$f$10761$mjVUK (cdr g$ls$10762$mjVUK)))))
                          (g$chi-rhs$8577$mjVUK
                            (car g$ls$10762$mjVUK)
                            g$r$10759$mjVUK
                            g$mr$10760$mjVUK)))))))
           g$f$10761$mjVUK)
         g$rhs*$10758$mjVUK))))
   (g$find-bound=?$8580$mjVUK
     g$find-bound=?$12098$mjVUK
     (case-lambda
       ((g$x$10764$mjVUK g$lhs*$10765$mjVUK g$rhs*$10766$mjVUK)
        (if (null? g$lhs*$10765$mjVUK)
          '#f
          (if (g$bound-id=?$8277$mjVUK g$x$10764$mjVUK (car g$lhs*$10765$mjVUK))
            (car g$rhs*$10766$mjVUK)
            (g$find-bound=?$8580$mjVUK
              g$x$10764$mjVUK
              (cdr g$lhs*$10765$mjVUK)
              (cdr g$rhs*$10766$mjVUK)))))))
   (g$find-dups$8581$mjVUK
     g$find-dups$12099$mjVUK
     (case-lambda
       ((g$ls$10767$mjVUK)
        ((letrec ((g$f$10768$mjVUK
                    (case-lambda
                      ((g$ls$10769$mjVUK g$dups$10770$mjVUK)
                       (if (null? g$ls$10769$mjVUK)
                         g$dups$10770$mjVUK
                         ((case-lambda
                            ((g$t$10771$mjVUK)
                             (if g$t$10771$mjVUK
                               ((case-lambda
                                  ((g$x$10772$mjVUK)
                                   (g$f$10768$mjVUK
                                     (cdr g$ls$10769$mjVUK)
                                     (cons
                                       (list
                                         (car g$ls$10769$mjVUK)
                                         g$x$10772$mjVUK)
                                       g$dups$10770$mjVUK))))
                                g$t$10771$mjVUK)
                               (g$f$10768$mjVUK
                                 (cdr g$ls$10769$mjVUK)
                                 g$dups$10770$mjVUK))))
                          (g$find-bound=?$8580$mjVUK
                            (car g$ls$10769$mjVUK)
                            (cdr g$ls$10769$mjVUK)
                            (cdr g$ls$10769$mjVUK))))))))
           g$f$10768$mjVUK)
         g$ls$10767$mjVUK
         '()))))
   (g$chi-internal$8582$mjVUK
     g$chi-internal$12100$mjVUK
     (case-lambda
       ((g$e*$10773$mjVUK g$r$10774$mjVUK g$mr$10775$mjVUK)
        ((case-lambda
           ((g$rib$10776$mjVUK)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8597$mjVUK
                   (g$map$5602$mjVUK
                     (case-lambda
                       ((g$x$10785$mjVUK)
                        (g$add-subst$8264$mjVUK
                          g$rib$10776$mjVUK
                          g$x$10785$mjVUK)))
                     (g$syntax->list$8273$mjVUK g$e*$10773$mjVUK))
                   g$r$10774$mjVUK
                   g$mr$10775$mjVUK
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$10776$mjVUK
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$10786$mjVUK
                   g$r$10787$mjVUK
                   g$mr$10788$mjVUK
                   g$lex*$10789$mjVUK
                   g$rhs*$10790$mjVUK
                   g$mod**$10791$mjVUK
                   g$kwd*$10792$mjVUK
                   g$_exp*$10793$mjVUK)
                 ((case-lambda
                    ((g$_exp*$10794$mjVUK
                       g$kwd*$10795$mjVUK
                       g$mod**$10796$mjVUK
                       g$rhs*$10797$mjVUK
                       g$lex*$10798$mjVUK
                       g$mr$10799$mjVUK
                       g$r$10800$mjVUK
                       g$e*$10801$mjVUK)
                     (begin
                       (if (null? g$e*$10801$mjVUK)
                         (g$syntax-violation$8665$mjVUK
                           '#f
                           '"no expression in body"
                           g$e*$10801$mjVUK)
                         (void))
                       ((case-lambda
                          ((g$init*$10802$mjVUK)
                           ((case-lambda
                              ((g$rhs*$10803$mjVUK)
                               (g$build-letrec*$8206$mjVUK
                                 '#f
                                 (reverse g$lex*$10798$mjVUK)
                                 (reverse g$rhs*$10803$mjVUK)
                                 (g$build-sequence$8203$mjVUK
                                   '#f
                                   g$init*$10802$mjVUK))))
                            (g$chi-rhs*$8579$mjVUK
                              g$rhs*$10797$mjVUK
                              g$r$10800$mjVUK
                              g$mr$10799$mjVUK))))
                        (g$chi-expr*$8569$mjVUK
                          (append
                            (apply append (reverse g$mod**$10796$mjVUK))
                            g$e*$10801$mjVUK)
                          g$r$10800$mjVUK
                          g$mr$10799$mjVUK)))))
                  g$_exp*$10793$mjVUK
                  g$kwd*$10792$mjVUK
                  g$mod**$10791$mjVUK
                  g$rhs*$10790$mjVUK
                  g$lex*$10789$mjVUK
                  g$mr$10788$mjVUK
                  g$r$10787$mjVUK
                  g$e*$10786$mjVUK))))))
         (g$make-empty-rib$8234$mjVUK)))))
   (g$parse-module$8583$mjVUK
     g$parse-module$12101$mjVUK
     (case-lambda
       ((g$e$10804$mjVUK)
        ((case-lambda
           ((g$t$10805$mjVUK)
            ((case-lambda
               ((g$ls/false$10806$mjVUK)
                (if g$ls/false$10806$mjVUK
                  (apply
                    (case-lambda
                      ((g$export*$10807$mjVUK g$b*$10808$mjVUK)
                       (begin
                         (if (not (g$for-all$5600$mjVUK
                                    g$id?$8274$mjVUK
                                    g$export*$10807$mjVUK))
                           (g$syntax-violation$8665$mjVUK
                             '#f
                             '"module exports must be identifiers"
                             g$e$10804$mjVUK)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$10807$mjVUK)
                           g$b*$10808$mjVUK))))
                    g$ls/false$10806$mjVUK)
                  ((case-lambda
                     ((g$t$10809$mjVUK)
                      ((case-lambda
                         ((g$ls/false$10810$mjVUK)
                          (if g$ls/false$10810$mjVUK
                            (apply
                              (case-lambda
                                ((g$name$10811$mjVUK
                                   g$export*$10812$mjVUK
                                   g$b*$10813$mjVUK)
                                 (begin
                                   (if (not (g$id?$8274$mjVUK
                                              g$name$10811$mjVUK))
                                     (g$syntax-violation$8665$mjVUK
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10804$mjVUK)
                                     (void))
                                   (if (not (g$for-all$5600$mjVUK
                                              g$id?$8274$mjVUK
                                              g$export*$10812$mjVUK))
                                     (g$syntax-violation$8665$mjVUK
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10804$mjVUK)
                                     (void))
                                   (values
                                     g$name$10811$mjVUK
                                     (list->vector g$export*$10812$mjVUK)
                                     g$b*$10813$mjVUK))))
                              g$ls/false$10810$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$10809$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$10809$mjVUK
                         '(_ any each-any . each-any)))))
                   g$t$10805$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$10805$mjVUK
               '(_ each-any . each-any)))))
         g$e$10804$mjVUK))))
   (g$9813$8584$mjVUK
     g$9813$12102$mjVUK
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9816$mjVUK
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9815$8585$mjVUK g$9815$12103$mjVUK '#f)
   (g$9814$8586$mjVUK
     g$9814$12104$mjVUK
     (make-record-constructor-descriptor
       g$9813$8584$mjVUK
       '#f
       g$9815$8585$mjVUK))
   (g$module-interface?$8587$mjVUK
     g$module-interface?$12105$mjVUK
     (record-predicate g$9813$8584$mjVUK))
   (g$make-module-interface$8588$mjVUK
     g$make-module-interface$12106$mjVUK
     (record-constructor g$9814$8586$mjVUK))
   (g$module-interface-first-mark$8589$mjVUK
     g$module-interface-first-mark$12107$mjVUK
     (record-accessor g$9813$8584$mjVUK '0))
   (g$module-interface-exp-id-vec$8590$mjVUK
     g$module-interface-exp-id-vec$12108$mjVUK
     (record-accessor g$9813$8584$mjVUK '1))
   (g$module-interface-exp-lab-vec$8591$mjVUK
     g$module-interface-exp-lab-vec$12109$mjVUK
     (record-accessor g$9813$8584$mjVUK '2))
   (g$set-module-interface-first-mark!$8592$mjVUK
     g$set-module-interface-first-mark!$12110$mjVUK
     (record-mutator g$9813$8584$mjVUK '0))
   (g$set-module-interface-exp-id-vec!$8593$mjVUK
     g$set-module-interface-exp-id-vec!$12111$mjVUK
     (record-mutator g$9813$8584$mjVUK '1))
   (g$set-module-interface-exp-lab-vec!$8594$mjVUK
     g$set-module-interface-exp-lab-vec!$12112$mjVUK
     (record-mutator g$9813$8584$mjVUK '2))
   (g$module-interface-exp-id*$8595$mjVUK
     g$module-interface-exp-id*$12113$mjVUK
     (case-lambda
       ((g$iface$10814$mjVUK g$id$10815$mjVUK)
        (letrec* ((g$diff-marks$10816$mjVUK
                    (case-lambda
                      ((g$ls$10820$mjVUK g$x$10821$mjVUK)
                       (begin
                         (if (null? g$ls$10820$mjVUK)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10822$mjVUK)
                             (if (eq? g$a$10822$mjVUK g$x$10821$mjVUK)
                               '()
                               (cons
                                 g$a$10822$mjVUK
                                 (g$diff-marks$10816$mjVUK
                                   (cdr g$ls$10820$mjVUK)
                                   g$x$10821$mjVUK)))))
                          (car g$ls$10820$mjVUK)))))))
          ((case-lambda
             ((g$diff$10817$mjVUK g$id-vec$10818$mjVUK)
              (if (null? g$diff$10817$mjVUK)
                g$id-vec$10818$mjVUK
                (g$vector-map$5879$mjVUK
                  (case-lambda
                    ((g$x$10819$mjVUK)
                     (g$make-stx$8247$mjVUK
                       (g$stx-expr$8248$mjVUK g$x$10819$mjVUK)
                       (append
                         g$diff$10817$mjVUK
                         (g$stx-mark*$8249$mjVUK g$x$10819$mjVUK))
                       '()
                       '())))
                  g$id-vec$10818$mjVUK))))
           (g$diff-marks$10816$mjVUK
             (g$stx-mark*$8249$mjVUK g$id$10815$mjVUK)
             (g$module-interface-first-mark$8589$mjVUK g$iface$10814$mjVUK))
           (g$module-interface-exp-id-vec$8590$mjVUK g$iface$10814$mjVUK))))))
   (g$chi-internal-module$8596$mjVUK
     g$chi-internal-module$12114$mjVUK
     (case-lambda
       ((g$e$10823$mjVUK
          g$r$10824$mjVUK
          g$mr$10825$mjVUK
          g$lex*$10826$mjVUK
          g$rhs*$10827$mjVUK
          g$mod**$10828$mjVUK
          g$kwd*$10829$mjVUK)
        (call-with-values
          (case-lambda (() (g$parse-module$8583$mjVUK g$e$10823$mjVUK)))
          (case-lambda
            ((g$name$10833$mjVUK g$exp-id*$10834$mjVUK g$e*$10835$mjVUK)
             ((case-lambda
                ((g$e*$10836$mjVUK g$exp-id*$10837$mjVUK g$name$10838$mjVUK)
                 ((case-lambda
                    ((g$rib$10839$mjVUK)
                     ((case-lambda
                        ((g$e*$10840$mjVUK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$8597$mjVUK
                                g$e*$10840$mjVUK
                                g$r$10824$mjVUK
                                g$mr$10825$mjVUK
                                g$lex*$10826$mjVUK
                                g$rhs*$10827$mjVUK
                                g$mod**$10828$mjVUK
                                g$kwd*$10829$mjVUK
                                '()
                                g$rib$10839$mjVUK
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$10849$mjVUK
                                g$r$10850$mjVUK
                                g$mr$10851$mjVUK
                                g$lex*$10852$mjVUK
                                g$rhs*$10853$mjVUK
                                g$mod**$10854$mjVUK
                                g$kwd*$10855$mjVUK
                                g$_exp*$10856$mjVUK)
                              ((case-lambda
                                 ((g$_exp*$10857$mjVUK
                                    g$kwd*$10858$mjVUK
                                    g$mod**$10859$mjVUK
                                    g$rhs*$10860$mjVUK
                                    g$lex*$10861$mjVUK
                                    g$mr$10862$mjVUK
                                    g$r$10863$mjVUK
                                    g$e*$10864$mjVUK)
                                  ((case-lambda
                                     ((g$exp-lab*$10865$mjVUK
                                        g$mod**$10866$mjVUK)
                                      (if (not g$name$10838$mjVUK)
                                        (values
                                          g$lex*$10861$mjVUK
                                          g$rhs*$10860$mjVUK
                                          g$exp-id*$10837$mjVUK
                                          g$exp-lab*$10865$mjVUK
                                          g$r$10863$mjVUK
                                          g$mr$10862$mjVUK
                                          g$mod**$10866$mjVUK
                                          g$kwd*$10858$mjVUK)
                                        ((case-lambda
                                           ((g$lab$10867$mjVUK
                                              g$iface$10868$mjVUK)
                                            (values
                                              g$lex*$10861$mjVUK
                                              g$rhs*$10860$mjVUK
                                              (vector g$name$10838$mjVUK)
                                              (vector g$lab$10867$mjVUK)
                                              (cons
                                                (cons
                                                  g$lab$10867$mjVUK
                                                  (cons
                                                    '$module
                                                    g$iface$10868$mjVUK))
                                                g$r$10863$mjVUK)
                                              (cons
                                                (cons
                                                  g$lab$10867$mjVUK
                                                  (cons
                                                    '$module
                                                    g$iface$10868$mjVUK))
                                                g$mr$10862$mjVUK)
                                              g$mod**$10866$mjVUK
                                              g$kwd*$10858$mjVUK)))
                                         (g$gen-label$8215$mjVUK 'module)
                                         (g$make-module-interface$8588$mjVUK
                                           (car (g$stx-mark*$8249$mjVUK
                                                  g$name$10838$mjVUK))
                                           (g$vector-map$5879$mjVUK
                                             (case-lambda
                                               ((g$x$10869$mjVUK)
                                                (g$make-stx$8247$mjVUK
                                                  (g$stx-expr$8248$mjVUK
                                                    g$x$10869$mjVUK)
                                                  (g$stx-mark*$8249$mjVUK
                                                    g$x$10869$mjVUK)
                                                  '()
                                                  '())))
                                             g$exp-id*$10837$mjVUK)
                                           g$exp-lab*$10865$mjVUK)))))
                                   (g$vector-map$5879$mjVUK
                                     (case-lambda
                                       ((g$x$10870$mjVUK)
                                        ((case-lambda
                                           ((g$t$10871$mjVUK)
                                            (if g$t$10871$mjVUK
                                              g$t$10871$mjVUK
                                              (begin
                                                '#f
                                                (g$syntax-violation$8665$mjVUK
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$10870$mjVUK)))))
                                         (g$id->label$8287$mjVUK
                                           (g$make-stx$8247$mjVUK
                                             (g$id->sym$8275$mjVUK
                                               g$x$10870$mjVUK)
                                             (g$stx-mark*$8249$mjVUK
                                               g$x$10870$mjVUK)
                                             (list g$rib$10839$mjVUK)
                                             '())))))
                                     g$exp-id*$10837$mjVUK)
                                   (cons
                                     g$e*$10864$mjVUK
                                     g$mod**$10859$mjVUK))))
                               g$_exp*$10856$mjVUK
                               g$kwd*$10855$mjVUK
                               g$mod**$10854$mjVUK
                               g$rhs*$10853$mjVUK
                               g$lex*$10852$mjVUK
                               g$mr$10851$mjVUK
                               g$r$10850$mjVUK
                               g$e*$10849$mjVUK))))))
                      (g$map$5602$mjVUK
                        (case-lambda
                          ((g$x$10872$mjVUK)
                           (g$add-subst$8264$mjVUK
                             g$rib$10839$mjVUK
                             g$x$10872$mjVUK)))
                        (g$syntax->list$8273$mjVUK g$e*$10836$mjVUK)))))
                  (g$make-empty-rib$8234$mjVUK))))
              g$e*$10835$mjVUK
              g$exp-id*$10834$mjVUK
              g$name$10833$mjVUK)))))))
   (g$chi-body*$8597$mjVUK
     g$chi-body*$12115$mjVUK
     (case-lambda
       ((g$e*$10873$mjVUK
          g$r$10874$mjVUK
          g$mr$10875$mjVUK
          g$lex*$10876$mjVUK
          g$rhs*$10877$mjVUK
          g$mod**$10878$mjVUK
          g$kwd*$10879$mjVUK
          g$exp*$10880$mjVUK
          g$rib$10881$mjVUK
          g$mix?$10882$mjVUK
          g$sd?$10883$mjVUK)
        (if (null? g$e*$10873$mjVUK)
          (values
            g$e*$10873$mjVUK
            g$r$10874$mjVUK
            g$mr$10875$mjVUK
            g$lex*$10876$mjVUK
            g$rhs*$10877$mjVUK
            g$mod**$10878$mjVUK
            g$kwd*$10879$mjVUK
            g$exp*$10880$mjVUK)
          ((case-lambda
             ((g$e$10884$mjVUK)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$8294$mjVUK g$e$10884$mjVUK g$r$10874$mjVUK)))
                (case-lambda
                  ((g$type$10888$mjVUK g$value$10889$mjVUK g$kwd$10890$mjVUK)
                   ((case-lambda
                      ((g$kwd$10891$mjVUK
                         g$value$10892$mjVUK
                         g$type$10893$mjVUK)
                       ((case-lambda
                          ((g$kwd*$10894$mjVUK)
                           ((case-lambda
                              ((g$t$10895$mjVUK)
                               (if (g$memv$5595$mjVUK g$t$10895$mjVUK '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$8493$mjVUK
                                        g$e$10884$mjVUK)))
                                   (case-lambda
                                     ((g$id$10898$mjVUK g$rhs$10899$mjVUK)
                                      ((case-lambda
                                         ((g$rhs$10900$mjVUK g$id$10901$mjVUK)
                                          (begin
                                            (if (g$bound-id-member?$8281$mjVUK
                                                  g$id$10901$mjVUK
                                                  g$kwd*$10894$mjVUK)
                                              (g$syntax-violation$8665$mjVUK
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10884$mjVUK)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$8217$mjVUK
                                                   g$id$10901$mjVUK
                                                   g$rib$10881$mjVUK
                                                   g$sd?$10883$mjVUK)))
                                              (case-lambda
                                                ((g$lab$10904$mjVUK
                                                   g$lex$10905$mjVUK)
                                                 ((case-lambda
                                                    ((g$lex$10906$mjVUK
                                                       g$lab$10907$mjVUK)
                                                     (begin
                                                       (g$extend-rib!$8237$mjVUK
                                                         g$rib$10881$mjVUK
                                                         g$id$10901$mjVUK
                                                         g$lab$10907$mjVUK
                                                         g$sd?$10883$mjVUK)
                                                       (g$chi-body*$8597$mjVUK
                                                         (cdr g$e*$10873$mjVUK)
                                                         (g$add-lexical$8500$mjVUK
                                                           g$lab$10907$mjVUK
                                                           g$lex$10906$mjVUK
                                                           g$r$10874$mjVUK)
                                                         g$mr$10875$mjVUK
                                                         (cons
                                                           g$lex$10906$mjVUK
                                                           g$lex*$10876$mjVUK)
                                                         (cons
                                                           g$rhs$10900$mjVUK
                                                           g$rhs*$10877$mjVUK)
                                                         g$mod**$10878$mjVUK
                                                         g$kwd*$10894$mjVUK
                                                         g$exp*$10880$mjVUK
                                                         g$rib$10881$mjVUK
                                                         g$mix?$10882$mjVUK
                                                         g$sd?$10883$mjVUK))))
                                                  g$lex$10905$mjVUK
                                                  g$lab$10904$mjVUK)))))))
                                       g$rhs$10899$mjVUK
                                       g$id$10898$mjVUK))))
                                 (if (g$memv$5595$mjVUK
                                       g$t$10895$mjVUK
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$8494$mjVUK
                                          g$e$10884$mjVUK)))
                                     (case-lambda
                                       ((g$id$10910$mjVUK g$rhs$10911$mjVUK)
                                        ((case-lambda
                                           ((g$rhs$10912$mjVUK g$id$10913$mjVUK)
                                            (begin
                                              (if (g$bound-id-member?$8281$mjVUK
                                                    g$id$10913$mjVUK
                                                    g$kwd*$10894$mjVUK)
                                                (g$syntax-violation$8665$mjVUK
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10884$mjVUK)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10914$mjVUK)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$10915$mjVUK)
                                                      (begin
                                                        (g$extend-rib!$8237$mjVUK
                                                          g$rib$10881$mjVUK
                                                          g$id$10913$mjVUK
                                                          g$lab$10914$mjVUK
                                                          g$sd?$10883$mjVUK)
                                                        ((case-lambda
                                                           ((g$b$10916$mjVUK)
                                                            (g$chi-body*$8597$mjVUK
                                                              (cdr g$e*$10873$mjVUK)
                                                              (cons
                                                                (cons
                                                                  g$lab$10914$mjVUK
                                                                  g$b$10916$mjVUK)
                                                                g$r$10874$mjVUK)
                                                              (cons
                                                                (cons
                                                                  g$lab$10914$mjVUK
                                                                  g$b$10916$mjVUK)
                                                                g$mr$10875$mjVUK)
                                                              g$lex*$10876$mjVUK
                                                              g$rhs*$10877$mjVUK
                                                              g$mod**$10878$mjVUK
                                                              g$kwd*$10894$mjVUK
                                                              g$exp*$10880$mjVUK
                                                              g$rib$10881$mjVUK
                                                              g$mix?$10882$mjVUK
                                                              g$sd?$10883$mjVUK)))
                                                         (g$make-eval-transformer$8307$mjVUK
                                                           g$expanded-rhs$10915$mjVUK)))))
                                                   (g$expand-transformer$8598$mjVUK
                                                     g$rhs$10912$mjVUK
                                                     g$mr$10875$mjVUK))))
                                               (g$gen-define-label$8218$mjVUK
                                                 g$id$10913$mjVUK
                                                 g$rib$10881$mjVUK
                                                 g$sd?$10883$mjVUK)))))
                                         g$rhs$10911$mjVUK
                                         g$id$10910$mjVUK))))
                                   (if (g$memv$5595$mjVUK
                                         g$t$10895$mjVUK
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10917$mjVUK)
                                         ((case-lambda
                                            ((g$ls/false$10918$mjVUK)
                                             (if (if g$ls/false$10918$mjVUK
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10919$mjVUK
                                                            g$xrhs*$10920$mjVUK
                                                            g$xbody*$10921$mjVUK)
                                                          (if (not (g$valid-bound-ids?$8279$mjVUK
                                                                     g$xlhs*$10919$mjVUK))
                                                            (g$syntax-violation$8665$mjVUK
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10884$mjVUK)
                                                            (void))))
                                                       g$ls/false$10918$mjVUK))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10922$mjVUK
                                                      g$xrhs*$10923$mjVUK
                                                      g$xbody*$10924$mjVUK)
                                                    ((case-lambda
                                                       ((g$xlab*$10925$mjVUK)
                                                        ((case-lambda
                                                           ((g$xrib$10926$mjVUK)
                                                            ((case-lambda
                                                               ((g$xb*$10927$mjVUK)
                                                                (g$chi-body*$8597$mjVUK
                                                                  (append
                                                                    (g$map$5602$mjVUK
                                                                      (case-lambda
                                                                        ((g$x$10928$mjVUK)
                                                                         (g$add-subst$8264$mjVUK
                                                                           g$xrib$10926$mjVUK
                                                                           g$x$10928$mjVUK)))
                                                                      g$xbody*$10924$mjVUK)
                                                                    (cdr g$e*$10873$mjVUK))
                                                                  (append
                                                                    (g$map$5602$mjVUK
                                                                      cons
                                                                      g$xlab*$10925$mjVUK
                                                                      g$xb*$10927$mjVUK)
                                                                    g$r$10874$mjVUK)
                                                                  (append
                                                                    (g$map$5602$mjVUK
                                                                      cons
                                                                      g$xlab*$10925$mjVUK
                                                                      g$xb*$10927$mjVUK)
                                                                    g$mr$10875$mjVUK)
                                                                  g$lex*$10876$mjVUK
                                                                  g$rhs*$10877$mjVUK
                                                                  g$mod**$10878$mjVUK
                                                                  g$kwd*$10894$mjVUK
                                                                  g$exp*$10880$mjVUK
                                                                  g$rib$10881$mjVUK
                                                                  g$mix?$10882$mjVUK
                                                                  g$sd?$10883$mjVUK)))
                                                             (g$map$5602$mjVUK
                                                               (case-lambda
                                                                 ((g$x$10929$mjVUK)
                                                                  (g$make-eval-transformer$8307$mjVUK
                                                                    (g$expand-transformer$8598$mjVUK
                                                                      (if (eq? g$type$10893$mjVUK
                                                                               'let-syntax)
                                                                        g$x$10929$mjVUK
                                                                        (g$add-subst$8264$mjVUK
                                                                          g$xrib$10926$mjVUK
                                                                          g$x$10929$mjVUK))
                                                                      g$mr$10875$mjVUK))))
                                                               g$xrhs*$10923$mjVUK))))
                                                         (g$make-full-rib$8242$mjVUK
                                                           g$xlhs*$10922$mjVUK
                                                           g$xlab*$10925$mjVUK))))
                                                     (g$map$5602$mjVUK
                                                       g$gen-label$8215$mjVUK
                                                       g$xlhs*$10922$mjVUK))))
                                                 g$ls/false$10918$mjVUK)
                                               (g$syntax-violation$8665$mjVUK
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10917$mjVUK))))
                                          (g$syntax-dispatch$8553$mjVUK
                                            g$t$10917$mjVUK
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10884$mjVUK)
                                     (if (g$memv$5595$mjVUK
                                           g$t$10895$mjVUK
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$10930$mjVUK)
                                           ((case-lambda
                                              ((g$ls/false$10931$mjVUK)
                                               (if g$ls/false$10931$mjVUK
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10932$mjVUK)
                                                      (g$chi-body*$8597$mjVUK
                                                        (append
                                                          g$x*$10932$mjVUK
                                                          (cdr g$e*$10873$mjVUK))
                                                        g$r$10874$mjVUK
                                                        g$mr$10875$mjVUK
                                                        g$lex*$10876$mjVUK
                                                        g$rhs*$10877$mjVUK
                                                        g$mod**$10878$mjVUK
                                                        g$kwd*$10894$mjVUK
                                                        g$exp*$10880$mjVUK
                                                        g$rib$10881$mjVUK
                                                        g$mix?$10882$mjVUK
                                                        g$sd?$10883$mjVUK)))
                                                   g$ls/false$10931$mjVUK)
                                                 (g$syntax-violation$8665$mjVUK
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10930$mjVUK))))
                                            (g$syntax-dispatch$8553$mjVUK
                                              g$t$10930$mjVUK
                                              '(_ . each-any)))))
                                        g$e$10884$mjVUK)
                                       (if (g$memv$5595$mjVUK
                                             g$t$10895$mjVUK
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8597$mjVUK
                                           (cons
                                             (g$add-subst$8264$mjVUK
                                               g$rib$10881$mjVUK
                                               (g$chi-global-macro$8568$mjVUK
                                                 g$value$10892$mjVUK
                                                 g$e$10884$mjVUK
                                                 g$r$10874$mjVUK))
                                             (cdr g$e*$10873$mjVUK))
                                           g$r$10874$mjVUK
                                           g$mr$10875$mjVUK
                                           g$lex*$10876$mjVUK
                                           g$rhs*$10877$mjVUK
                                           g$mod**$10878$mjVUK
                                           g$kwd*$10894$mjVUK
                                           g$exp*$10880$mjVUK
                                           g$rib$10881$mjVUK
                                           g$mix?$10882$mjVUK
                                           g$sd?$10883$mjVUK)
                                         (if (g$memv$5595$mjVUK
                                               g$t$10895$mjVUK
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8597$mjVUK
                                             (cons
                                               (g$add-subst$8264$mjVUK
                                                 g$rib$10881$mjVUK
                                                 (g$chi-local-macro$8567$mjVUK
                                                   g$value$10892$mjVUK
                                                   g$e$10884$mjVUK
                                                   g$r$10874$mjVUK))
                                               (cdr g$e*$10873$mjVUK))
                                             g$r$10874$mjVUK
                                             g$mr$10875$mjVUK
                                             g$lex*$10876$mjVUK
                                             g$rhs*$10877$mjVUK
                                             g$mod**$10878$mjVUK
                                             g$kwd*$10894$mjVUK
                                             g$exp*$10880$mjVUK
                                             g$rib$10881$mjVUK
                                             g$mix?$10882$mjVUK
                                             g$sd?$10883$mjVUK)
                                           (if (g$memv$5595$mjVUK
                                                 g$t$10895$mjVUK
                                                 '(macro macro!))
                                             (g$chi-body*$8597$mjVUK
                                               (cons
                                                 (g$add-subst$8264$mjVUK
                                                   g$rib$10881$mjVUK
                                                   (g$chi-macro$8566$mjVUK
                                                     g$value$10892$mjVUK
                                                     g$e$10884$mjVUK
                                                     g$r$10874$mjVUK))
                                                 (cdr g$e*$10873$mjVUK))
                                               g$r$10874$mjVUK
                                               g$mr$10875$mjVUK
                                               g$lex*$10876$mjVUK
                                               g$rhs*$10877$mjVUK
                                               g$mod**$10878$mjVUK
                                               g$kwd*$10894$mjVUK
                                               g$exp*$10880$mjVUK
                                               g$rib$10881$mjVUK
                                               g$mix?$10882$mjVUK
                                               g$sd?$10883$mjVUK)
                                             (if (g$memv$5595$mjVUK
                                                   g$t$10895$mjVUK
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8596$mjVUK
                                                      g$e$10884$mjVUK
                                                      g$r$10874$mjVUK
                                                      g$mr$10875$mjVUK
                                                      g$lex*$10876$mjVUK
                                                      g$rhs*$10877$mjVUK
                                                      g$mod**$10878$mjVUK
                                                      g$kwd*$10894$mjVUK)))
                                                 (case-lambda
                                                   ((g$lex*$10941$mjVUK
                                                      g$rhs*$10942$mjVUK
                                                      g$m-exp-id*$10943$mjVUK
                                                      g$m-exp-lab*$10944$mjVUK
                                                      g$r$10945$mjVUK
                                                      g$mr$10946$mjVUK
                                                      g$mod**$10947$mjVUK
                                                      g$kwd*$10948$mjVUK)
                                                    ((case-lambda
                                                       ((g$kwd*$10949$mjVUK
                                                          g$mod**$10950$mjVUK
                                                          g$mr$10951$mjVUK
                                                          g$r$10952$mjVUK
                                                          g$m-exp-lab*$10953$mjVUK
                                                          g$m-exp-id*$10954$mjVUK
                                                          g$rhs*$10955$mjVUK
                                                          g$lex*$10956$mjVUK)
                                                        (begin
                                                          (g$vector-for-each$5880$mjVUK
                                                            (case-lambda
                                                              ((g$id$10957$mjVUK
                                                                 g$lab$10958$mjVUK)
                                                               (g$extend-rib!$8237$mjVUK
                                                                 g$rib$10881$mjVUK
                                                                 g$id$10957$mjVUK
                                                                 g$lab$10958$mjVUK
                                                                 g$sd?$10883$mjVUK)))
                                                            g$m-exp-id*$10954$mjVUK
                                                            g$m-exp-lab*$10953$mjVUK)
                                                          (g$chi-body*$8597$mjVUK
                                                            (cdr g$e*$10873$mjVUK)
                                                            g$r$10952$mjVUK
                                                            g$mr$10951$mjVUK
                                                            g$lex*$10956$mjVUK
                                                            g$rhs*$10955$mjVUK
                                                            g$mod**$10950$mjVUK
                                                            g$kwd*$10949$mjVUK
                                                            g$exp*$10880$mjVUK
                                                            g$rib$10881$mjVUK
                                                            g$mix?$10882$mjVUK
                                                            g$sd?$10883$mjVUK))))
                                                     g$kwd*$10948$mjVUK
                                                     g$mod**$10947$mjVUK
                                                     g$mr$10946$mjVUK
                                                     g$r$10945$mjVUK
                                                     g$m-exp-lab*$10944$mjVUK
                                                     g$m-exp-id*$10943$mjVUK
                                                     g$rhs*$10942$mjVUK
                                                     g$lex*$10941$mjVUK))))
                                               (if (g$memv$5595$mjVUK
                                                     g$t$10895$mjVUK
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$8649$mjVUK
                                                     (g$stx->datum$8285$mjVUK
                                                       g$e$10884$mjVUK))
                                                   (g$chi-body*$8597$mjVUK
                                                     (cdr g$e*$10873$mjVUK)
                                                     g$r$10874$mjVUK
                                                     g$mr$10875$mjVUK
                                                     g$lex*$10876$mjVUK
                                                     g$rhs*$10877$mjVUK
                                                     g$mod**$10878$mjVUK
                                                     g$kwd*$10894$mjVUK
                                                     g$exp*$10880$mjVUK
                                                     g$rib$10881$mjVUK
                                                     g$mix?$10882$mjVUK
                                                     g$sd?$10883$mjVUK))
                                                 (if (g$memv$5595$mjVUK
                                                       g$t$10895$mjVUK
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$10959$mjVUK)
                                                       ((case-lambda
                                                          ((g$ls/false$10960$mjVUK)
                                                           (if g$ls/false$10960$mjVUK
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$10961$mjVUK)
                                                                  (g$chi-body*$8597$mjVUK
                                                                    (cdr g$e*$10873$mjVUK)
                                                                    g$r$10874$mjVUK
                                                                    g$mr$10875$mjVUK
                                                                    g$lex*$10876$mjVUK
                                                                    g$rhs*$10877$mjVUK
                                                                    g$mod**$10878$mjVUK
                                                                    g$kwd*$10894$mjVUK
                                                                    (append
                                                                      g$exp-decl*$10961$mjVUK
                                                                      g$exp*$10880$mjVUK)
                                                                    g$rib$10881$mjVUK
                                                                    g$mix?$10882$mjVUK
                                                                    g$sd?$10883$mjVUK)))
                                                               g$ls/false$10960$mjVUK)
                                                             (g$syntax-violation$8665$mjVUK
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$10959$mjVUK))))
                                                        (g$syntax-dispatch$8553$mjVUK
                                                          g$t$10959$mjVUK
                                                          '(_ . each-any)))))
                                                    g$e$10884$mjVUK)
                                                   (if (g$memv$5595$mjVUK
                                                         g$t$10895$mjVUK
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10962$mjVUK
                                                                     (case-lambda
                                                                       ((g$e$11004$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$t$11005$mjVUK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$11006$mjVUK)
                                                                                (if (if g$ls/false$11006$mjVUK
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$11007$mjVUK)
                                                                                             (g$id?$8274$mjVUK
                                                                                               g$id$11007$mjVUK)))
                                                                                          g$ls/false$11006$mjVUK))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$11008$mjVUK)
                                                                                       '#t))
                                                                                    g$ls/false$11006$mjVUK)
                                                                                  ((case-lambda
                                                                                     ((g$t$11009$mjVUK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$11010$mjVUK)
                                                                                          (if g$ls/false$11010$mjVUK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$11011$mjVUK)
                                                                                                 '#f))
                                                                                              g$ls/false$11010$mjVUK)
                                                                                            ((case-lambda
                                                                                               ((g$t$11012$mjVUK)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$11013$mjVUK)
                                                                                                    (if g$ls/false$11013$mjVUK
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8665$mjVUK
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$11004$mjVUK)))
                                                                                                        g$ls/false$11013$mjVUK)
                                                                                                      (g$syntax-violation$8665$mjVUK
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$11012$mjVUK))))
                                                                                                 (g$syntax-dispatch$8553$mjVUK
                                                                                                   g$t$11012$mjVUK
                                                                                                   '_))))
                                                                                             g$t$11009$mjVUK))))
                                                                                       (g$syntax-dispatch$8553$mjVUK
                                                                                         g$t$11009$mjVUK
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$11005$mjVUK))))
                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                               g$t$11005$mjVUK
                                                                               '(_ any)))))
                                                                         g$e$11004$mjVUK))))
                                                                   (g$module-import$10963$mjVUK
                                                                     (case-lambda
                                                                       ((g$e$10987$mjVUK
                                                                          g$r$10988$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$t$10989$mjVUK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10990$mjVUK)
                                                                                (if (if g$ls/false$10990$mjVUK
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10991$mjVUK)
                                                                                             (g$id?$8274$mjVUK
                                                                                               g$id$10991$mjVUK)))
                                                                                          g$ls/false$10990$mjVUK))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10992$mjVUK)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$8294$mjVUK
                                                                                              g$id$10992$mjVUK
                                                                                              g$r$10988$mjVUK)))
                                                                                         (case-lambda
                                                                                           ((g$type$10996$mjVUK
                                                                                              g$value$10997$mjVUK
                                                                                              g$kwd$10998$mjVUK)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10999$mjVUK
                                                                                                  g$value$11000$mjVUK
                                                                                                  g$type$11001$mjVUK)
                                                                                                ((case-lambda
                                                                                                   ((g$t$11002$mjVUK)
                                                                                                    (if (g$memv$5595$mjVUK
                                                                                                          g$t$11002$mjVUK
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$11003$mjVUK)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8595$mjVUK
                                                                                                              g$iface$11003$mjVUK
                                                                                                              g$id$10992$mjVUK)
                                                                                                            (g$module-interface-exp-lab-vec$8591$mjVUK
                                                                                                              g$iface$11003$mjVUK))))
                                                                                                       g$value$11000$mjVUK)
                                                                                                      (g$syntax-violation$8665$mjVUK
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10987$mjVUK))))
                                                                                                 g$type$11001$mjVUK)))
                                                                                             g$kwd$10998$mjVUK
                                                                                             g$value$10997$mjVUK
                                                                                             g$type$10996$mjVUK))))))
                                                                                    g$ls/false$10990$mjVUK)
                                                                                  (g$syntax-violation$8665$mjVUK
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10989$mjVUK))))
                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                               g$t$10989$mjVUK
                                                                               '(_ any)))))
                                                                         g$e$10987$mjVUK))))
                                                                   (g$library-import$10964$mjVUK
                                                                     (case-lambda
                                                                       ((g$e$10973$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$t$10974$mjVUK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10975$mjVUK)
                                                                                (if g$ls/false$10975$mjVUK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10976$mjVUK
                                                                                         g$imp*$10977$mjVUK)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8602$mjVUK
                                                                                              (g$syntax->datum$8668$mjVUK
                                                                                                g$imp*$10977$mjVUK))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10980$mjVUK
                                                                                              g$subst-labels$10981$mjVUK)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10982$mjVUK
                                                                                                  g$subst-names$10983$mjVUK)
                                                                                                (values
                                                                                                  (g$vector-map$5879$mjVUK
                                                                                                    (case-lambda
                                                                                                      ((g$name$10984$mjVUK)
                                                                                                       (g$datum->stx$8257$mjVUK
                                                                                                         g$ctxt$10976$mjVUK
                                                                                                         g$name$10984$mjVUK)))
                                                                                                    g$subst-names$10983$mjVUK)
                                                                                                  g$subst-labels$10982$mjVUK)))
                                                                                             g$subst-labels$10981$mjVUK
                                                                                             g$subst-names$10980$mjVUK))))))
                                                                                    g$ls/false$10975$mjVUK)
                                                                                  ((case-lambda
                                                                                     ((g$t$10985$mjVUK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10986$mjVUK)
                                                                                          (if g$ls/false$10986$mjVUK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8665$mjVUK
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10973$mjVUK)))
                                                                                              g$ls/false$10986$mjVUK)
                                                                                            (g$syntax-violation$8665$mjVUK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10985$mjVUK))))
                                                                                       (g$syntax-dispatch$8553$mjVUK
                                                                                         g$t$10985$mjVUK
                                                                                         '_))))
                                                                                   g$t$10974$mjVUK))))
                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                               g$t$10974$mjVUK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10973$mjVUK)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$10962$mjVUK
                                                                        g$e$10884$mjVUK)
                                                                    (g$module-import$10963$mjVUK
                                                                      g$e$10884$mjVUK
                                                                      g$r$10874$mjVUK)
                                                                    (g$library-import$10964$mjVUK
                                                                      g$e$10884$mjVUK))))
                                                               (case-lambda
                                                                 ((g$id*$10967$mjVUK
                                                                    g$lab*$10968$mjVUK)
                                                                  ((case-lambda
                                                                     ((g$lab*$10969$mjVUK
                                                                        g$id*$10970$mjVUK)
                                                                      (g$vector-for-each$5880$mjVUK
                                                                        (case-lambda
                                                                          ((g$id$10971$mjVUK
                                                                             g$lab$10972$mjVUK)
                                                                           (g$extend-rib!$8237$mjVUK
                                                                             g$rib$10881$mjVUK
                                                                             g$id$10971$mjVUK
                                                                             g$lab$10972$mjVUK
                                                                             g$sd?$10883$mjVUK)))
                                                                        g$id*$10970$mjVUK
                                                                        g$lab*$10969$mjVUK)))
                                                                   g$lab*$10968$mjVUK
                                                                   g$id*$10967$mjVUK))))
                                                             (g$chi-body*$8597$mjVUK
                                                               (cdr g$e*$10873$mjVUK)
                                                               g$r$10874$mjVUK
                                                               g$mr$10875$mjVUK
                                                               g$lex*$10876$mjVUK
                                                               g$rhs*$10877$mjVUK
                                                               g$mod**$10878$mjVUK
                                                               g$kwd*$10894$mjVUK
                                                               g$exp*$10880$mjVUK
                                                               g$rib$10881$mjVUK
                                                               g$mix?$10882$mjVUK
                                                               g$sd?$10883$mjVUK))))))
                                                     (if g$mix?$10882$mjVUK
                                                       (g$chi-body*$8597$mjVUK
                                                         (cdr g$e*$10873$mjVUK)
                                                         g$r$10874$mjVUK
                                                         g$mr$10875$mjVUK
                                                         (cons
                                                           (g$gen-lexical$8213$mjVUK
                                                             'dummy)
                                                           g$lex*$10876$mjVUK)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$10884$mjVUK)
                                                           g$rhs*$10877$mjVUK)
                                                         g$mod**$10878$mjVUK
                                                         g$kwd*$10894$mjVUK
                                                         g$exp*$10880$mjVUK
                                                         g$rib$10881$mjVUK
                                                         '#t
                                                         g$sd?$10883$mjVUK)
                                                       (values
                                                         g$e*$10873$mjVUK
                                                         g$r$10874$mjVUK
                                                         g$mr$10875$mjVUK
                                                         g$lex*$10876$mjVUK
                                                         g$rhs*$10877$mjVUK
                                                         g$mod**$10878$mjVUK
                                                         g$kwd*$10894$mjVUK
                                                         g$exp*$10880$mjVUK)))))))))))))))
                            g$type$10893$mjVUK)))
                        (if (g$id?$8274$mjVUK g$kwd$10891$mjVUK)
                          (cons g$kwd$10891$mjVUK g$kwd*$10879$mjVUK)
                          g$kwd*$10879$mjVUK))))
                    g$kwd$10890$mjVUK
                    g$value$10889$mjVUK
                    g$type$10888$mjVUK))))))
           (car g$e*$10873$mjVUK))))))
   (g$expand-transformer$8598$mjVUK
     g$expand-transformer$12116$mjVUK
     (case-lambda
       ((g$expr$11014$mjVUK g$r$11015$mjVUK)
        ((case-lambda
           ((g$rtc$11016$mjVUK)
            ((case-lambda
               ((g$expanded-rhs$11017$mjVUK)
                (begin
                  (g$for-each$5603$mjVUK
                    ((case-lambda
                       ((g$mark-visit$11018$mjVUK)
                        (case-lambda
                          ((g$x$11019$mjVUK)
                           (begin
                             (g$invoke-library$8084$mjVUK g$x$11019$mjVUK)
                             (g$mark-visit$11018$mjVUK g$x$11019$mjVUK))))))
                     (g$vis-collector$8606$mjVUK))
                    (g$rtc$11016$mjVUK))
                  g$expanded-rhs$11017$mjVUK)))
             ((case-lambda
                ((g$inv-collector$11024$mjVUK
                   g$vis-collector$11025$mjVUK
                   g$inv-collector$11026$mjVUK
                   g$vis-collector$11027$mjVUK)
                 ((case-lambda
                    ((g$swap$11028$mjVUK)
                     (dynamic-wind
                       g$swap$11028$mjVUK
                       (case-lambda
                         (()
                          (g$chi-expr$8571$mjVUK
                            g$expr$11014$mjVUK
                            g$r$11015$mjVUK
                            g$r$11015$mjVUK)))
                       g$swap$11028$mjVUK)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$11029$mjVUK)
                           (begin
                             (g$inv-collector$11024$mjVUK
                               g$inv-collector$11026$mjVUK)
                             (set! g$inv-collector$11026$mjVUK
                               g$t$11029$mjVUK))))
                        (g$inv-collector$11024$mjVUK))
                       ((case-lambda
                          ((g$t$11030$mjVUK)
                           (begin
                             (g$vis-collector$11025$mjVUK
                               g$vis-collector$11027$mjVUK)
                             (set! g$vis-collector$11027$mjVUK
                               g$t$11030$mjVUK))))
                        (g$vis-collector$11025$mjVUK))))))))
              g$inv-collector$8605$mjVUK
              g$vis-collector$8606$mjVUK
              g$rtc$11016$mjVUK
              (case-lambda ((g$x$11031$mjVUK) (values)))))))
         (g$make-collector$8604$mjVUK)))))
   (g$parse-exports$8599$mjVUK
     g$parse-exports$12117$mjVUK
     (case-lambda
       ((g$exp*$11032$mjVUK)
        ((letrec ((g$f$11033$mjVUK
                    (case-lambda
                      ((g$exp*$11034$mjVUK
                         g$int*$11035$mjVUK
                         g$ext*$11036$mjVUK)
                       (if (null? g$exp*$11034$mjVUK)
                         (begin
                           (if (not (g$valid-bound-ids?$8279$mjVUK
                                      g$ext*$11036$mjVUK))
                             (g$syntax-violation$8665$mjVUK
                               'export
                               '"invalid exports"
                               (g$find-dups$8581$mjVUK g$ext*$11036$mjVUK))
                             (void))
                           (values
                             (g$map$5602$mjVUK
                               g$syntax->datum$8668$mjVUK
                               g$ext*$11036$mjVUK)
                             g$int*$11035$mjVUK))
                         ((case-lambda
                            ((g$t$11037$mjVUK)
                             ((case-lambda
                                ((g$ls/false$11038$mjVUK)
                                 (if g$ls/false$11038$mjVUK
                                   (apply
                                     (case-lambda
                                       ((g$rename$11039$mjVUK
                                          g$i*$11040$mjVUK
                                          g$e*$11041$mjVUK)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$8668$mjVUK
                                                              g$rename$11039$mjVUK)
                                                            'rename)
                                                     (if (g$for-all$5600$mjVUK
                                                           g$id?$8274$mjVUK
                                                           g$i*$11040$mjVUK)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5600$mjVUK
                                                           g$id?$8274$mjVUK
                                                           g$e*$11041$mjVUK))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$8665$mjVUK
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$11034$mjVUK))
                                            (void))
                                          (g$f$11033$mjVUK
                                            (cdr g$exp*$11034$mjVUK)
                                            (append
                                              g$i*$11040$mjVUK
                                              g$int*$11035$mjVUK)
                                            (append
                                              g$e*$11041$mjVUK
                                              g$ext*$11036$mjVUK)))))
                                     g$ls/false$11038$mjVUK)
                                   ((case-lambda
                                      ((g$t$11042$mjVUK)
                                       ((case-lambda
                                          ((g$ls/false$11043$mjVUK)
                                           (if g$ls/false$11043$mjVUK
                                             (apply
                                               (case-lambda
                                                 ((g$ie$11044$mjVUK)
                                                  (begin
                                                    (if (not (g$id?$8274$mjVUK
                                                               g$ie$11044$mjVUK))
                                                      (g$syntax-violation$8665$mjVUK
                                                        'export
                                                        '"invalid export"
                                                        g$ie$11044$mjVUK)
                                                      (void))
                                                    (g$f$11033$mjVUK
                                                      (cdr g$exp*$11034$mjVUK)
                                                      (cons
                                                        g$ie$11044$mjVUK
                                                        g$int*$11035$mjVUK)
                                                      (cons
                                                        g$ie$11044$mjVUK
                                                        g$ext*$11036$mjVUK)))))
                                               g$ls/false$11043$mjVUK)
                                             (g$syntax-violation$8665$mjVUK
                                               '#f
                                               '"invalid syntax"
                                               g$t$11042$mjVUK))))
                                        (g$syntax-dispatch$8553$mjVUK
                                          g$t$11042$mjVUK
                                          'any))))
                                    g$t$11037$mjVUK))))
                              (g$syntax-dispatch$8553$mjVUK
                                g$t$11037$mjVUK
                                '(any . #(each (any any)))))))
                          (car g$exp*$11034$mjVUK)))))))
           g$f$11033$mjVUK)
         g$exp*$11032$mjVUK
         '()
         '()))))
   (g$parse-library-name$8600$mjVUK
     g$parse-library-name$12118$mjVUK
     (case-lambda
       ((g$spec$11045$mjVUK)
        (letrec* ((g$parse$11046$mjVUK
                    (case-lambda
                      ((g$x$11053$mjVUK)
                       ((case-lambda
                          ((g$t$11054$mjVUK)
                           ((case-lambda
                              ((g$ls/false$11055$mjVUK)
                               (if (if g$ls/false$11055$mjVUK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$11056$mjVUK)
                                            (g$for-all$5600$mjVUK
                                              (case-lambda
                                                ((g$x$11057$mjVUK)
                                                 ((case-lambda
                                                    ((g$x$11058$mjVUK)
                                                     (if (integer?
                                                           g$x$11058$mjVUK)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$11058$mjVUK))
                                                       '#f)))
                                                  (g$syntax->datum$8668$mjVUK
                                                    g$x$11057$mjVUK))))
                                              g$v*$11056$mjVUK)))
                                         g$ls/false$11055$mjVUK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$11059$mjVUK)
                                      (values
                                        '()
                                        (g$map$5602$mjVUK
                                          g$syntax->datum$8668$mjVUK
                                          g$v*$11059$mjVUK))))
                                   g$ls/false$11055$mjVUK)
                                 ((case-lambda
                                    ((g$t$11060$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$11061$mjVUK)
                                         (if (if g$ls/false$11061$mjVUK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$11062$mjVUK
                                                        g$rest$11063$mjVUK)
                                                      (symbol?
                                                        (g$syntax->datum$8668$mjVUK
                                                          g$x$11062$mjVUK))))
                                                   g$ls/false$11061$mjVUK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$11064$mjVUK
                                                  g$rest$11065$mjVUK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$11046$mjVUK
                                                       g$rest$11065$mjVUK)))
                                                  (case-lambda
                                                    ((g$x*$11068$mjVUK
                                                       g$v*$11069$mjVUK)
                                                     ((case-lambda
                                                        ((g$v*$11070$mjVUK
                                                           g$x*$11071$mjVUK)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8668$mjVUK
                                                               g$x$11064$mjVUK)
                                                             g$x*$11071$mjVUK)
                                                           g$v*$11070$mjVUK)))
                                                      g$v*$11069$mjVUK
                                                      g$x*$11068$mjVUK))))))
                                             g$ls/false$11061$mjVUK)
                                           ((case-lambda
                                              ((g$t$11072$mjVUK)
                                               ((case-lambda
                                                  ((g$ls/false$11073$mjVUK)
                                                   (if g$ls/false$11073$mjVUK
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$11073$mjVUK)
                                                     ((case-lambda
                                                        ((g$t$11074$mjVUK)
                                                         ((case-lambda
                                                            ((g$ls/false$11075$mjVUK)
                                                             (if g$ls/false$11075$mjVUK
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8665$mjVUK
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$11045$mjVUK)))
                                                                 g$ls/false$11075$mjVUK)
                                                               (g$syntax-violation$8665$mjVUK
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$11074$mjVUK))))
                                                          (g$syntax-dispatch$8553$mjVUK
                                                            g$t$11074$mjVUK
                                                            '_))))
                                                      g$t$11072$mjVUK))))
                                                (g$syntax-dispatch$8553$mjVUK
                                                  g$t$11072$mjVUK
                                                  '()))))
                                            g$t$11060$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$11060$mjVUK
                                        '(any . any)))))
                                  g$t$11054$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$11054$mjVUK
                              '(each-any)))))
                        g$x$11053$mjVUK)))))
          (call-with-values
            (case-lambda (() (g$parse$11046$mjVUK g$spec$11045$mjVUK)))
            (case-lambda
              ((g$name*$11049$mjVUK g$ver*$11050$mjVUK)
               ((case-lambda
                  ((g$ver*$11051$mjVUK g$name*$11052$mjVUK)
                   (begin
                     (if (null? g$name*$11052$mjVUK)
                       (g$syntax-violation$8665$mjVUK
                         '#f
                         '"empty library name"
                         g$spec$11045$mjVUK)
                       (void))
                     (values g$name*$11052$mjVUK g$ver*$11051$mjVUK))))
                g$ver*$11050$mjVUK
                g$name*$11049$mjVUK))))))))
   (g$parse-library$8601$mjVUK
     g$parse-library$12119$mjVUK
     (case-lambda
       ((g$e$11076$mjVUK)
        ((case-lambda
           ((g$t$11077$mjVUK)
            ((case-lambda
               ((g$ls/false$11078$mjVUK)
                (if (if g$ls/false$11078$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$11079$mjVUK
                               g$name*$11080$mjVUK
                               g$export$11081$mjVUK
                               g$exp*$11082$mjVUK
                               g$import$11083$mjVUK
                               g$imp*$11084$mjVUK
                               g$b*$11085$mjVUK)
                             (if (eq? (g$syntax->datum$8668$mjVUK
                                        g$export$11081$mjVUK)
                                      'export)
                               (if (eq? (g$syntax->datum$8668$mjVUK
                                          g$import$11083$mjVUK)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8668$mjVUK
                                          g$library$11079$mjVUK)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$11078$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$11086$mjVUK
                         g$name*$11087$mjVUK
                         g$export$11088$mjVUK
                         g$exp*$11089$mjVUK
                         g$import$11090$mjVUK
                         g$imp*$11091$mjVUK
                         g$b*$11092$mjVUK)
                       (values
                         g$name*$11087$mjVUK
                         g$exp*$11089$mjVUK
                         g$imp*$11091$mjVUK
                         g$b*$11092$mjVUK)))
                    g$ls/false$11078$mjVUK)
                  ((case-lambda
                     ((g$t$11093$mjVUK)
                      ((case-lambda
                         ((g$ls/false$11094$mjVUK)
                          (if g$ls/false$11094$mjVUK
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8665$mjVUK
                                   '#f
                                   '"malformed library"
                                   g$e$11076$mjVUK)))
                              g$ls/false$11094$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$11093$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK g$t$11093$mjVUK '_))))
                   g$t$11077$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$11077$mjVUK
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$11076$mjVUK))))
   (g$parse-import-spec*$8602$mjVUK
     g$parse-import-spec*$12120$mjVUK
     (case-lambda
       ((g$imp*$11095$mjVUK)
        (letrec* ((g$idsyn?$11096$mjVUK
                    (case-lambda
                      ((g$x$11356$mjVUK)
                       (symbol? (g$syntax->datum$8668$mjVUK g$x$11356$mjVUK)))))
                  (g$dup-error$11097$mjVUK
                    (case-lambda
                      ((g$name$11355$mjVUK)
                       (g$syntax-violation$8665$mjVUK
                         'import
                         '"two imports with different bindings"
                         g$name$11355$mjVUK))))
                  (g$merge-substs$11098$mjVUK
                    (case-lambda
                      ((g$s$11346$mjVUK g$subst$11347$mjVUK)
                       (letrec* ((g$insert-to-subst$11348$mjVUK
                                   (case-lambda
                                     ((g$a$11349$mjVUK g$subst$11350$mjVUK)
                                      ((case-lambda
                                         ((g$name$11351$mjVUK
                                            g$label$11352$mjVUK)
                                          ((case-lambda
                                             ((g$t$11353$mjVUK)
                                              (if g$t$11353$mjVUK
                                                ((case-lambda
                                                   ((g$x$11354$mjVUK)
                                                    (if (eq? (cdr g$x$11354$mjVUK)
                                                             g$label$11352$mjVUK)
                                                      g$subst$11350$mjVUK
                                                      (g$dup-error$11097$mjVUK
                                                        g$name$11351$mjVUK))))
                                                 g$t$11353$mjVUK)
                                                (cons
                                                  g$a$11349$mjVUK
                                                  g$subst$11350$mjVUK))))
                                           (g$assq$5590$mjVUK
                                             g$name$11351$mjVUK
                                             g$subst$11350$mjVUK))))
                                       (car g$a$11349$mjVUK)
                                       (cdr g$a$11349$mjVUK))))))
                         (if (null? g$s$11346$mjVUK)
                           g$subst$11347$mjVUK
                           (g$insert-to-subst$11348$mjVUK
                             (car g$s$11346$mjVUK)
                             (g$merge-substs$11098$mjVUK
                               (cdr g$s$11346$mjVUK)
                               g$subst$11347$mjVUK)))))))
                  (g$exclude*$11099$mjVUK
                    (case-lambda
                      ((g$sym*$11322$mjVUK g$subst$11323$mjVUK)
                       (letrec* ((g$exclude$11324$mjVUK
                                   (case-lambda
                                     ((g$sym$11337$mjVUK g$subst$11338$mjVUK)
                                      (if (null? g$subst$11338$mjVUK)
                                        (g$syntax-violation$8665$mjVUK
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$11337$mjVUK)
                                        (if (eq? g$sym$11337$mjVUK
                                                 (g$caar$5827$mjVUK
                                                   g$subst$11338$mjVUK))
                                          (values
                                            (g$cdar$5829$mjVUK
                                              g$subst$11338$mjVUK)
                                            (cdr g$subst$11338$mjVUK))
                                          ((case-lambda
                                             ((g$a$11339$mjVUK)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$11324$mjVUK
                                                     g$sym$11337$mjVUK
                                                     (cdr g$subst$11338$mjVUK))))
                                                (case-lambda
                                                  ((g$old$11342$mjVUK
                                                     g$subst$11343$mjVUK)
                                                   ((case-lambda
                                                      ((g$subst$11344$mjVUK
                                                         g$old$11345$mjVUK)
                                                       (values
                                                         g$old$11345$mjVUK
                                                         (cons
                                                           g$a$11339$mjVUK
                                                           g$subst$11344$mjVUK))))
                                                    g$subst$11343$mjVUK
                                                    g$old$11342$mjVUK))))))
                                           (car g$subst$11338$mjVUK))))))))
                         (if (null? g$sym*$11322$mjVUK)
                           (values '() g$subst$11323$mjVUK)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$11324$mjVUK
                                  (car g$sym*$11322$mjVUK)
                                  g$subst$11323$mjVUK)))
                             (case-lambda
                               ((g$old$11327$mjVUK g$subst$11328$mjVUK)
                                ((case-lambda
                                   ((g$subst$11329$mjVUK g$old$11330$mjVUK)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$11099$mjVUK
                                           (cdr g$sym*$11322$mjVUK)
                                           g$subst$11329$mjVUK)))
                                      (case-lambda
                                        ((g$old*$11333$mjVUK
                                           g$subst$11334$mjVUK)
                                         ((case-lambda
                                            ((g$subst$11335$mjVUK
                                               g$old*$11336$mjVUK)
                                             (values
                                               (cons
                                                 g$old$11330$mjVUK
                                                 g$old*$11336$mjVUK)
                                               g$subst$11335$mjVUK)))
                                          g$subst$11334$mjVUK
                                          g$old*$11333$mjVUK))))))
                                 g$subst$11328$mjVUK
                                 g$old$11327$mjVUK)))))))))
                  (g$find*$11100$mjVUK
                    (case-lambda
                      ((g$sym*$11318$mjVUK g$subst$11319$mjVUK)
                       (g$map$5602$mjVUK
                         (case-lambda
                           ((g$x$11320$mjVUK)
                            ((case-lambda
                               ((g$t$11321$mjVUK)
                                (if g$t$11321$mjVUK
                                  (cdr g$t$11321$mjVUK)
                                  (g$syntax-violation$8665$mjVUK
                                    'import
                                    '"cannot find identifier"
                                    g$x$11320$mjVUK))))
                             (g$assq$5590$mjVUK
                               g$x$11320$mjVUK
                               g$subst$11319$mjVUK))))
                         g$sym*$11318$mjVUK))))
                  (g$rem*$11101$mjVUK
                    (case-lambda
                      ((g$sym*$11314$mjVUK g$subst$11315$mjVUK)
                       ((letrec ((g$f$11316$mjVUK
                                   (case-lambda
                                     ((g$subst$11317$mjVUK)
                                      (if (null? g$subst$11317$mjVUK)
                                        '()
                                        (if (g$memq$5594$mjVUK
                                              (g$caar$5827$mjVUK
                                                g$subst$11317$mjVUK)
                                              g$sym*$11314$mjVUK)
                                          (g$f$11316$mjVUK
                                            (cdr g$subst$11317$mjVUK))
                                          (cons
                                            (car g$subst$11317$mjVUK)
                                            (g$f$11316$mjVUK
                                              (cdr g$subst$11317$mjVUK)))))))))
                          g$f$11316$mjVUK)
                        g$subst$11315$mjVUK))))
                  (g$remove-dups$11102$mjVUK
                    (case-lambda
                      ((g$ls$11313$mjVUK)
                       (if (null? g$ls$11313$mjVUK)
                         '()
                         (if (g$memq$5594$mjVUK
                               (car g$ls$11313$mjVUK)
                               (cdr g$ls$11313$mjVUK))
                           (g$remove-dups$11102$mjVUK (cdr g$ls$11313$mjVUK))
                           (cons
                             (car g$ls$11313$mjVUK)
                             (g$remove-dups$11102$mjVUK
                               (cdr g$ls$11313$mjVUK))))))))
                  (g$parse-library-name$11103$mjVUK
                    (case-lambda
                      ((g$spec$11197$mjVUK)
                       (letrec* ((g$subversion?$11198$mjVUK
                                   (case-lambda
                                     ((g$x$11311$mjVUK)
                                      ((case-lambda
                                         ((g$x$11312$mjVUK)
                                          (if (integer? g$x$11312$mjVUK)
                                            (if (exact? g$x$11312$mjVUK)
                                              (begin
                                                '#f
                                                (>= g$x$11312$mjVUK '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$8668$mjVUK
                                         g$x$11311$mjVUK)))))
                                 (g$subversion-pred$11199$mjVUK
                                   (case-lambda
                                     ((g$x*$11263$mjVUK)
                                      ((case-lambda
                                         ((g$t$11264$mjVUK)
                                          ((case-lambda
                                             ((g$ls/false$11265$mjVUK)
                                              (if (if g$ls/false$11265$mjVUK
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$11266$mjVUK)
                                                           (g$subversion?$11198$mjVUK
                                                             g$n$11266$mjVUK)))
                                                        g$ls/false$11265$mjVUK))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$11267$mjVUK)
                                                     (case-lambda
                                                       ((g$x$11268$mjVUK)
                                                        (= g$x$11268$mjVUK
                                                           (g$syntax->datum$8668$mjVUK
                                                             g$n$11267$mjVUK))))))
                                                  g$ls/false$11265$mjVUK)
                                                ((case-lambda
                                                   ((g$t$11269$mjVUK)
                                                    ((case-lambda
                                                       ((g$ls/false$11270$mjVUK)
                                                        (if (if g$ls/false$11270$mjVUK
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$11271$mjVUK
                                                                       g$sub*$11272$mjVUK)
                                                                     (eq? (g$syntax->datum$8668$mjVUK
                                                                            g$p?$11271$mjVUK)
                                                                          'and)))
                                                                  g$ls/false$11270$mjVUK))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$11273$mjVUK
                                                                 g$sub*$11274$mjVUK)
                                                               ((case-lambda
                                                                  ((g$p*$11275$mjVUK)
                                                                   (case-lambda
                                                                     ((g$x$11276$mjVUK)
                                                                      (g$for-all$5600$mjVUK
                                                                        (case-lambda
                                                                          ((g$p$11277$mjVUK)
                                                                           (g$p$11277$mjVUK
                                                                             g$x$11276$mjVUK)))
                                                                        g$p*$11275$mjVUK)))))
                                                                (g$map$5602$mjVUK
                                                                  g$subversion-pred$11199$mjVUK
                                                                  g$sub*$11274$mjVUK))))
                                                            g$ls/false$11270$mjVUK)
                                                          ((case-lambda
                                                             ((g$t$11278$mjVUK)
                                                              ((case-lambda
                                                                 ((g$ls/false$11279$mjVUK)
                                                                  (if (if g$ls/false$11279$mjVUK
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$11280$mjVUK
                                                                                 g$sub*$11281$mjVUK)
                                                                               (eq? (g$syntax->datum$8668$mjVUK
                                                                                      g$p?$11280$mjVUK)
                                                                                    'or)))
                                                                            g$ls/false$11279$mjVUK))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$11282$mjVUK
                                                                           g$sub*$11283$mjVUK)
                                                                         ((case-lambda
                                                                            ((g$p*$11284$mjVUK)
                                                                             (case-lambda
                                                                               ((g$x$11285$mjVUK)
                                                                                (g$exists$5601$mjVUK
                                                                                  (case-lambda
                                                                                    ((g$p$11286$mjVUK)
                                                                                     (g$p$11286$mjVUK
                                                                                       g$x$11285$mjVUK)))
                                                                                  g$p*$11284$mjVUK)))))
                                                                          (g$map$5602$mjVUK
                                                                            g$subversion-pred$11199$mjVUK
                                                                            g$sub*$11283$mjVUK))))
                                                                      g$ls/false$11279$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$t$11287$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$11288$mjVUK)
                                                                            (if (if g$ls/false$11288$mjVUK
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$11289$mjVUK
                                                                                           g$sub$11290$mjVUK)
                                                                                         (eq? (g$syntax->datum$8668$mjVUK
                                                                                                g$p?$11289$mjVUK)
                                                                                              'not)))
                                                                                      g$ls/false$11288$mjVUK))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$11291$mjVUK
                                                                                     g$sub$11292$mjVUK)
                                                                                   ((case-lambda
                                                                                      ((g$p$11293$mjVUK)
                                                                                       (case-lambda
                                                                                         ((g$x$11294$mjVUK)
                                                                                          (not (g$p$11293$mjVUK
                                                                                                 g$x$11294$mjVUK))))))
                                                                                    (g$subversion-pred$11199$mjVUK
                                                                                      g$sub$11292$mjVUK))))
                                                                                g$ls/false$11288$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$t$11295$mjVUK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$11296$mjVUK)
                                                                                      (if (if g$ls/false$11296$mjVUK
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$11297$mjVUK
                                                                                                     g$n$11298$mjVUK)
                                                                                                   (if (eq? (g$syntax->datum$8668$mjVUK
                                                                                                              g$p?$11297$mjVUK)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$11198$mjVUK
                                                                                                         g$n$11298$mjVUK))
                                                                                                     '#f)))
                                                                                                g$ls/false$11296$mjVUK))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$11299$mjVUK
                                                                                               g$n$11300$mjVUK)
                                                                                             (case-lambda
                                                                                               ((g$x$11301$mjVUK)
                                                                                                (<= g$x$11301$mjVUK
                                                                                                    (g$syntax->datum$8668$mjVUK
                                                                                                      g$n$11300$mjVUK))))))
                                                                                          g$ls/false$11296$mjVUK)
                                                                                        ((case-lambda
                                                                                           ((g$t$11302$mjVUK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$11303$mjVUK)
                                                                                                (if (if g$ls/false$11303$mjVUK
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$11304$mjVUK
                                                                                                               g$n$11305$mjVUK)
                                                                                                             (if (eq? (g$syntax->datum$8668$mjVUK
                                                                                                                        g$p?$11304$mjVUK)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$11198$mjVUK
                                                                                                                   g$n$11305$mjVUK))
                                                                                                               '#f)))
                                                                                                          g$ls/false$11303$mjVUK))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$11306$mjVUK
                                                                                                         g$n$11307$mjVUK)
                                                                                                       (case-lambda
                                                                                                         ((g$x$11308$mjVUK)
                                                                                                          (>= g$x$11308$mjVUK
                                                                                                              (g$syntax->datum$8668$mjVUK
                                                                                                                g$n$11307$mjVUK))))))
                                                                                                    g$ls/false$11303$mjVUK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$11309$mjVUK)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$11310$mjVUK)
                                                                                                          (if g$ls/false$11310$mjVUK
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$8665$mjVUK
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$11197$mjVUK
                                                                                                                   g$x*$11263$mjVUK)))
                                                                                                              g$ls/false$11310$mjVUK)
                                                                                                            (g$syntax-violation$8665$mjVUK
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$11309$mjVUK))))
                                                                                                       (g$syntax-dispatch$8553$mjVUK
                                                                                                         g$t$11309$mjVUK
                                                                                                         '_))))
                                                                                                   g$t$11302$mjVUK))))
                                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                                               g$t$11302$mjVUK
                                                                                               '(any any)))))
                                                                                         g$t$11295$mjVUK))))
                                                                                   (g$syntax-dispatch$8553$mjVUK
                                                                                     g$t$11295$mjVUK
                                                                                     '(any any)))))
                                                                               g$t$11287$mjVUK))))
                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                           g$t$11287$mjVUK
                                                                           '(any any)))))
                                                                     g$t$11278$mjVUK))))
                                                               (g$syntax-dispatch$8553$mjVUK
                                                                 g$t$11278$mjVUK
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$11269$mjVUK))))
                                                     (g$syntax-dispatch$8553$mjVUK
                                                       g$t$11269$mjVUK
                                                       '(any . each-any)))))
                                                 g$t$11264$mjVUK))))
                                           (g$syntax-dispatch$8553$mjVUK
                                             g$t$11264$mjVUK
                                             'any))))
                                       g$x*$11263$mjVUK))))
                                 (g$version-pred$11200$mjVUK
                                   (case-lambda
                                     ((g$x*$11223$mjVUK)
                                      ((case-lambda
                                         ((g$t$11224$mjVUK)
                                          ((case-lambda
                                             ((g$ls/false$11225$mjVUK)
                                              (if g$ls/false$11225$mjVUK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$11226$mjVUK)
                                                        '#t))))
                                                  g$ls/false$11225$mjVUK)
                                                ((case-lambda
                                                   ((g$t$11227$mjVUK)
                                                    ((case-lambda
                                                       ((g$ls/false$11228$mjVUK)
                                                        (if (if g$ls/false$11228$mjVUK
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$11229$mjVUK
                                                                       g$ver*$11230$mjVUK)
                                                                     (eq? (g$syntax->datum$8668$mjVUK
                                                                            g$c$11229$mjVUK)
                                                                          'and)))
                                                                  g$ls/false$11228$mjVUK))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$11231$mjVUK
                                                                 g$ver*$11232$mjVUK)
                                                               ((case-lambda
                                                                  ((g$p*$11233$mjVUK)
                                                                   (case-lambda
                                                                     ((g$x$11234$mjVUK)
                                                                      (g$for-all$5600$mjVUK
                                                                        (case-lambda
                                                                          ((g$p$11235$mjVUK)
                                                                           (g$p$11235$mjVUK
                                                                             g$x$11234$mjVUK)))
                                                                        g$p*$11233$mjVUK)))))
                                                                (g$map$5602$mjVUK
                                                                  g$version-pred$11200$mjVUK
                                                                  g$ver*$11232$mjVUK))))
                                                            g$ls/false$11228$mjVUK)
                                                          ((case-lambda
                                                             ((g$t$11236$mjVUK)
                                                              ((case-lambda
                                                                 ((g$ls/false$11237$mjVUK)
                                                                  (if (if g$ls/false$11237$mjVUK
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$11238$mjVUK
                                                                                 g$ver*$11239$mjVUK)
                                                                               (eq? (g$syntax->datum$8668$mjVUK
                                                                                      g$c$11238$mjVUK)
                                                                                    'or)))
                                                                            g$ls/false$11237$mjVUK))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$11240$mjVUK
                                                                           g$ver*$11241$mjVUK)
                                                                         ((case-lambda
                                                                            ((g$p*$11242$mjVUK)
                                                                             (case-lambda
                                                                               ((g$x$11243$mjVUK)
                                                                                (g$exists$5601$mjVUK
                                                                                  (case-lambda
                                                                                    ((g$p$11244$mjVUK)
                                                                                     (g$p$11244$mjVUK
                                                                                       g$x$11243$mjVUK)))
                                                                                  g$p*$11242$mjVUK)))))
                                                                          (g$map$5602$mjVUK
                                                                            g$version-pred$11200$mjVUK
                                                                            g$ver*$11241$mjVUK))))
                                                                      g$ls/false$11237$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$t$11245$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$11246$mjVUK)
                                                                            (if (if g$ls/false$11246$mjVUK
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$11247$mjVUK
                                                                                           g$ver$11248$mjVUK)
                                                                                         (eq? (g$syntax->datum$8668$mjVUK
                                                                                                g$c$11247$mjVUK)
                                                                                              'not)))
                                                                                      g$ls/false$11246$mjVUK))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$11249$mjVUK
                                                                                     g$ver$11250$mjVUK)
                                                                                   ((case-lambda
                                                                                      ((g$p$11251$mjVUK)
                                                                                       (case-lambda
                                                                                         ((g$x$11252$mjVUK)
                                                                                          (not (g$p$11251$mjVUK
                                                                                                 g$x$11252$mjVUK))))))
                                                                                    (g$version-pred$11200$mjVUK
                                                                                      g$ver$11250$mjVUK))))
                                                                                g$ls/false$11246$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$t$11253$mjVUK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$11254$mjVUK)
                                                                                      (if g$ls/false$11254$mjVUK
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$11255$mjVUK)
                                                                                             ((case-lambda
                                                                                                ((g$p*$11256$mjVUK)
                                                                                                 (case-lambda
                                                                                                   ((g$x$11257$mjVUK)
                                                                                                    ((letrec ((g$f$11258$mjVUK
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$11259$mjVUK
                                                                                                                     g$x$11260$mjVUK)
                                                                                                                   (if (null?
                                                                                                                         g$p*$11259$mjVUK)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$11260$mjVUK)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$11259$mjVUK)
                                                                                                                            (car g$x$11260$mjVUK))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$11258$mjVUK
                                                                                                                             (cdr g$p*$11259$mjVUK)
                                                                                                                             (cdr g$x$11260$mjVUK)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$11258$mjVUK)
                                                                                                     g$p*$11256$mjVUK
                                                                                                     g$x$11257$mjVUK)))))
                                                                                              (g$map$5602$mjVUK
                                                                                                g$subversion-pred$11199$mjVUK
                                                                                                g$sub*$11255$mjVUK))))
                                                                                          g$ls/false$11254$mjVUK)
                                                                                        ((case-lambda
                                                                                           ((g$t$11261$mjVUK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$11262$mjVUK)
                                                                                                (if g$ls/false$11262$mjVUK
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$8665$mjVUK
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$11197$mjVUK
                                                                                                         g$x*$11223$mjVUK)))
                                                                                                    g$ls/false$11262$mjVUK)
                                                                                                  (g$syntax-violation$8665$mjVUK
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$11261$mjVUK))))
                                                                                             (g$syntax-dispatch$8553$mjVUK
                                                                                               g$t$11261$mjVUK
                                                                                               '_))))
                                                                                         g$t$11253$mjVUK))))
                                                                                   (g$syntax-dispatch$8553$mjVUK
                                                                                     g$t$11253$mjVUK
                                                                                     'each-any))))
                                                                               g$t$11245$mjVUK))))
                                                                         (g$syntax-dispatch$8553$mjVUK
                                                                           g$t$11245$mjVUK
                                                                           '(any any)))))
                                                                     g$t$11236$mjVUK))))
                                                               (g$syntax-dispatch$8553$mjVUK
                                                                 g$t$11236$mjVUK
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$11227$mjVUK))))
                                                     (g$syntax-dispatch$8553$mjVUK
                                                       g$t$11227$mjVUK
                                                       '(any . each-any)))))
                                                 g$t$11224$mjVUK))))
                                           (g$syntax-dispatch$8553$mjVUK
                                             g$t$11224$mjVUK
                                             '()))))
                                       g$x*$11223$mjVUK)))))
                         ((letrec ((g$f$11201$mjVUK
                                     (case-lambda
                                       ((g$x$11202$mjVUK)
                                        ((case-lambda
                                           ((g$t$11203$mjVUK)
                                            ((case-lambda
                                               ((g$ls/false$11204$mjVUK)
                                                (if g$ls/false$11204$mjVUK
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$11205$mjVUK)
                                                       (values
                                                         '()
                                                         (g$version-pred$11200$mjVUK
                                                           g$version-spec*$11205$mjVUK))))
                                                    g$ls/false$11204$mjVUK)
                                                  ((case-lambda
                                                     ((g$t$11206$mjVUK)
                                                      ((case-lambda
                                                         ((g$ls/false$11207$mjVUK)
                                                          (if (if g$ls/false$11207$mjVUK
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$11208$mjVUK
                                                                         g$x*$11209$mjVUK)
                                                                       (g$idsyn?$11096$mjVUK
                                                                         g$x$11208$mjVUK)))
                                                                    g$ls/false$11207$mjVUK))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$11210$mjVUK
                                                                   g$x*$11211$mjVUK)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$11201$mjVUK
                                                                        g$x*$11211$mjVUK)))
                                                                   (case-lambda
                                                                     ((g$name$11214$mjVUK
                                                                        g$pred$11215$mjVUK)
                                                                      ((case-lambda
                                                                         ((g$pred$11216$mjVUK
                                                                            g$name$11217$mjVUK)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$8668$mjVUK
                                                                                g$x$11210$mjVUK)
                                                                              g$name$11217$mjVUK)
                                                                            g$pred$11216$mjVUK)))
                                                                       g$pred$11215$mjVUK
                                                                       g$name$11214$mjVUK))))))
                                                              g$ls/false$11207$mjVUK)
                                                            ((case-lambda
                                                               ((g$t$11218$mjVUK)
                                                                ((case-lambda
                                                                   ((g$ls/false$11219$mjVUK)
                                                                    (if g$ls/false$11219$mjVUK
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$11220$mjVUK)
                                                                                '#t)))))
                                                                        g$ls/false$11219$mjVUK)
                                                                      ((case-lambda
                                                                         ((g$t$11221$mjVUK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$11222$mjVUK)
                                                                              (if g$ls/false$11222$mjVUK
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$8665$mjVUK
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$11197$mjVUK)))
                                                                                  g$ls/false$11222$mjVUK)
                                                                                (g$syntax-violation$8665$mjVUK
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$11221$mjVUK))))
                                                                           (g$syntax-dispatch$8553$mjVUK
                                                                             g$t$11221$mjVUK
                                                                             '_))))
                                                                       g$t$11218$mjVUK))))
                                                                 (g$syntax-dispatch$8553$mjVUK
                                                                   g$t$11218$mjVUK
                                                                   '()))))
                                                             g$t$11206$mjVUK))))
                                                       (g$syntax-dispatch$8553$mjVUK
                                                         g$t$11206$mjVUK
                                                         '(any . any)))))
                                                   g$t$11203$mjVUK))))
                                             (g$syntax-dispatch$8553$mjVUK
                                               g$t$11203$mjVUK
                                               '(each-any)))))
                                         g$x$11202$mjVUK)))))
                            g$f$11201$mjVUK)
                          g$spec$11197$mjVUK)))))
                  (g$import-library$11104$mjVUK
                    (case-lambda
                      ((g$spec*$11189$mjVUK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$11103$mjVUK
                              g$spec*$11189$mjVUK)))
                         (case-lambda
                           ((g$name$11192$mjVUK g$pred$11193$mjVUK)
                            ((case-lambda
                               ((g$pred$11194$mjVUK g$name$11195$mjVUK)
                                (begin
                                  (if (null? g$name$11195$mjVUK)
                                    (g$syntax-violation$8665$mjVUK
                                      'import
                                      '"empty library name"
                                      g$spec*$11189$mjVUK)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$11196$mjVUK)
                                      (begin
                                        (if (not g$lib$11196$mjVUK)
                                          (g$syntax-violation$8665$mjVUK
                                            'import
                                            '"cannot find library with required name"
                                            g$name$11195$mjVUK)
                                          (void))
                                        (if (not (g$pred$11194$mjVUK
                                                   (g$library-version$8037$mjVUK
                                                     g$lib$11196$mjVUK)))
                                          (g$syntax-violation$8665$mjVUK
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$11189$mjVUK
                                            g$lib$11196$mjVUK)
                                          (void))
                                        ((g$imp-collector$8607$mjVUK)
                                         g$lib$11196$mjVUK)
                                        (g$library-subst$8041$mjVUK
                                          g$lib$11196$mjVUK))))
                                   (g$find-library-by-name$8077$mjVUK
                                     g$name$11195$mjVUK)))))
                             g$pred$11193$mjVUK
                             g$name$11192$mjVUK)))))))
                  (g$get-import$11105$mjVUK
                    (case-lambda
                      ((g$spec$11118$mjVUK)
                       ((case-lambda
                          ((g$t$11119$mjVUK)
                           ((case-lambda
                              ((g$ls/false$11120$mjVUK)
                               (if (if g$ls/false$11120$mjVUK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$11121$mjVUK g$x*$11122$mjVUK)
                                            (not (g$memq$5594$mjVUK
                                                   (g$syntax->datum$8668$mjVUK
                                                     g$x$11121$mjVUK)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$11120$mjVUK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$11123$mjVUK g$x*$11124$mjVUK)
                                      (g$import-library$11104$mjVUK
                                        (cons
                                          g$x$11123$mjVUK
                                          g$x*$11124$mjVUK))))
                                   g$ls/false$11120$mjVUK)
                                 ((case-lambda
                                    ((g$t$11125$mjVUK)
                                     ((case-lambda
                                        ((g$ls/false$11126$mjVUK)
                                         (if (if g$ls/false$11126$mjVUK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$11127$mjVUK
                                                        g$isp$11128$mjVUK
                                                        g$old*$11129$mjVUK
                                                        g$new*$11130$mjVUK)
                                                      (if (eq? (g$syntax->datum$8668$mjVUK
                                                                 g$rename$11127$mjVUK)
                                                               'rename)
                                                        (if (g$for-all$5600$mjVUK
                                                              g$idsyn?$11096$mjVUK
                                                              g$old*$11129$mjVUK)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5600$mjVUK
                                                              g$idsyn?$11096$mjVUK
                                                              g$new*$11130$mjVUK))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$11126$mjVUK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$11131$mjVUK
                                                  g$isp$11132$mjVUK
                                                  g$old*$11133$mjVUK
                                                  g$new*$11134$mjVUK)
                                                ((case-lambda
                                                   ((g$subst$11135$mjVUK
                                                      g$old*$11136$mjVUK
                                                      g$new*$11137$mjVUK)
                                                    ((case-lambda
                                                       ((g$old-label*$11138$mjVUK)
                                                        ((case-lambda
                                                           ((g$subst$11139$mjVUK)
                                                            (g$merge-substs$11098$mjVUK
                                                              (g$map$5602$mjVUK
                                                                cons
                                                                g$new*$11137$mjVUK
                                                                g$old-label*$11138$mjVUK)
                                                              g$subst$11139$mjVUK)))
                                                         (g$rem*$11101$mjVUK
                                                           g$old*$11136$mjVUK
                                                           g$subst$11135$mjVUK))))
                                                     (g$find*$11100$mjVUK
                                                       g$old*$11136$mjVUK
                                                       g$subst$11135$mjVUK))))
                                                 (g$get-import$11105$mjVUK
                                                   g$isp$11132$mjVUK)
                                                 (g$map$5602$mjVUK
                                                   g$syntax->datum$8668$mjVUK
                                                   g$old*$11133$mjVUK)
                                                 (g$map$5602$mjVUK
                                                   g$syntax->datum$8668$mjVUK
                                                   g$new*$11134$mjVUK))))
                                             g$ls/false$11126$mjVUK)
                                           ((case-lambda
                                              ((g$t$11140$mjVUK)
                                               ((case-lambda
                                                  ((g$ls/false$11141$mjVUK)
                                                   (if (if g$ls/false$11141$mjVUK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$11142$mjVUK
                                                                  g$isp$11143$mjVUK
                                                                  g$sym*$11144$mjVUK)
                                                                (if (eq? (g$syntax->datum$8668$mjVUK
                                                                           g$except$11142$mjVUK)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5600$mjVUK
                                                                      g$idsyn?$11096$mjVUK
                                                                      g$sym*$11144$mjVUK))
                                                                  '#f)))
                                                             g$ls/false$11141$mjVUK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$11145$mjVUK
                                                            g$isp$11146$mjVUK
                                                            g$sym*$11147$mjVUK)
                                                          ((case-lambda
                                                             ((g$subst$11148$mjVUK)
                                                              (g$rem*$11101$mjVUK
                                                                (g$map$5602$mjVUK
                                                                  g$syntax->datum$8668$mjVUK
                                                                  g$sym*$11147$mjVUK)
                                                                g$subst$11148$mjVUK)))
                                                           (g$get-import$11105$mjVUK
                                                             g$isp$11146$mjVUK))))
                                                       g$ls/false$11141$mjVUK)
                                                     ((case-lambda
                                                        ((g$t$11149$mjVUK)
                                                         ((case-lambda
                                                            ((g$ls/false$11150$mjVUK)
                                                             (if (if g$ls/false$11150$mjVUK
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$11151$mjVUK
                                                                            g$isp$11152$mjVUK
                                                                            g$sym*$11153$mjVUK)
                                                                          (if (eq? (g$syntax->datum$8668$mjVUK
                                                                                     g$only$11151$mjVUK)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5600$mjVUK
                                                                                g$idsyn?$11096$mjVUK
                                                                                g$sym*$11153$mjVUK))
                                                                            '#f)))
                                                                       g$ls/false$11150$mjVUK))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$11154$mjVUK
                                                                      g$isp$11155$mjVUK
                                                                      g$sym*$11156$mjVUK)
                                                                    ((case-lambda
                                                                       ((g$subst$11157$mjVUK
                                                                          g$sym*$11158$mjVUK)
                                                                        ((case-lambda
                                                                           ((g$sym*$11159$mjVUK)
                                                                            ((case-lambda
                                                                               ((g$lab*$11160$mjVUK)
                                                                                (g$map$5602$mjVUK
                                                                                  cons
                                                                                  g$sym*$11159$mjVUK
                                                                                  g$lab*$11160$mjVUK)))
                                                                             (g$find*$11100$mjVUK
                                                                               g$sym*$11159$mjVUK
                                                                               g$subst$11157$mjVUK))))
                                                                         (g$remove-dups$11102$mjVUK
                                                                           g$sym*$11158$mjVUK))))
                                                                     (g$get-import$11105$mjVUK
                                                                       g$isp$11155$mjVUK)
                                                                     (g$map$5602$mjVUK
                                                                       g$syntax->datum$8668$mjVUK
                                                                       g$sym*$11156$mjVUK))))
                                                                 g$ls/false$11150$mjVUK)
                                                               ((case-lambda
                                                                  ((g$t$11161$mjVUK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$11162$mjVUK)
                                                                       (if (if g$ls/false$11162$mjVUK
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$11163$mjVUK
                                                                                      g$isp$11164$mjVUK
                                                                                      g$p$11165$mjVUK)
                                                                                    (if (eq? (g$syntax->datum$8668$mjVUK
                                                                                               g$prefix$11163$mjVUK)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$11096$mjVUK
                                                                                          g$p$11165$mjVUK))
                                                                                      '#f)))
                                                                                 g$ls/false$11162$mjVUK))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$11166$mjVUK
                                                                                g$isp$11167$mjVUK
                                                                                g$p$11168$mjVUK)
                                                                              ((case-lambda
                                                                                 ((g$subst$11169$mjVUK
                                                                                    g$prefix$11170$mjVUK)
                                                                                  (g$map$5602$mjVUK
                                                                                    (case-lambda
                                                                                      ((g$x$11171$mjVUK)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$11170$mjVUK
                                                                                             (symbol->string
                                                                                               (car g$x$11171$mjVUK))))
                                                                                         (cdr g$x$11171$mjVUK))))
                                                                                    g$subst$11169$mjVUK)))
                                                                               (g$get-import$11105$mjVUK
                                                                                 g$isp$11167$mjVUK)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$8668$mjVUK
                                                                                   g$p$11168$mjVUK)))))
                                                                           g$ls/false$11162$mjVUK)
                                                                         ((case-lambda
                                                                            ((g$t$11172$mjVUK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$11173$mjVUK)
                                                                                 (if (if g$ls/false$11173$mjVUK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$11174$mjVUK
                                                                                                g$spec*$11175$mjVUK)
                                                                                              (eq? (g$syntax->datum$8668$mjVUK
                                                                                                     g$library$11174$mjVUK)
                                                                                                   'library)))
                                                                                           g$ls/false$11173$mjVUK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$11176$mjVUK
                                                                                          g$spec*$11177$mjVUK)
                                                                                        (g$import-library$11104$mjVUK
                                                                                          g$spec*$11177$mjVUK)))
                                                                                     g$ls/false$11173$mjVUK)
                                                                                   ((case-lambda
                                                                                      ((g$t$11178$mjVUK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$11179$mjVUK)
                                                                                           (if (if g$ls/false$11179$mjVUK
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$11180$mjVUK
                                                                                                          g$isp$11181$mjVUK
                                                                                                          g$rest$11182$mjVUK)
                                                                                                        (eq? (g$syntax->datum$8668$mjVUK
                                                                                                               g$for$11180$mjVUK)
                                                                                                             'for)))
                                                                                                     g$ls/false$11179$mjVUK))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$11183$mjVUK
                                                                                                    g$isp$11184$mjVUK
                                                                                                    g$rest$11185$mjVUK)
                                                                                                  (g$get-import$11105$mjVUK
                                                                                                    g$isp$11184$mjVUK)))
                                                                                               g$ls/false$11179$mjVUK)
                                                                                             ((case-lambda
                                                                                                ((g$t$11186$mjVUK)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$11187$mjVUK)
                                                                                                     (if g$ls/false$11187$mjVUK
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$11188$mjVUK)
                                                                                                            (g$syntax-violation$8665$mjVUK
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$11188$mjVUK)))
                                                                                                         g$ls/false$11187$mjVUK)
                                                                                                       (g$syntax-violation$8665$mjVUK
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$11186$mjVUK))))
                                                                                                  (g$syntax-dispatch$8553$mjVUK
                                                                                                    g$t$11186$mjVUK
                                                                                                    'any))))
                                                                                              g$t$11178$mjVUK))))
                                                                                        (g$syntax-dispatch$8553$mjVUK
                                                                                          g$t$11178$mjVUK
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$11172$mjVUK))))
                                                                              (g$syntax-dispatch$8553$mjVUK
                                                                                g$t$11172$mjVUK
                                                                                '(any each-any)))))
                                                                          g$t$11161$mjVUK))))
                                                                    (g$syntax-dispatch$8553$mjVUK
                                                                      g$t$11161$mjVUK
                                                                      '(any any
                                                                            any)))))
                                                                g$t$11149$mjVUK))))
                                                          (g$syntax-dispatch$8553$mjVUK
                                                            g$t$11149$mjVUK
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$11140$mjVUK))))
                                                (g$syntax-dispatch$8553$mjVUK
                                                  g$t$11140$mjVUK
                                                  '(any any . each-any)))))
                                            g$t$11125$mjVUK))))
                                      (g$syntax-dispatch$8553$mjVUK
                                        g$t$11125$mjVUK
                                        '(any any . #(each (any any)))))))
                                  g$t$11119$mjVUK))))
                            (g$syntax-dispatch$8553$mjVUK
                              g$t$11119$mjVUK
                              '(any . each-any)))))
                        g$spec$11118$mjVUK))))
                  (g$add-imports!$11106$mjVUK
                    (case-lambda
                      ((g$imp$11110$mjVUK g$h$11111$mjVUK)
                       ((case-lambda
                          ((g$subst$11112$mjVUK)
                           (g$for-each$5603$mjVUK
                             (case-lambda
                               ((g$x$11113$mjVUK)
                                ((case-lambda
                                   ((g$name$11114$mjVUK g$label$11115$mjVUK)
                                    ((case-lambda
                                       ((g$t$11116$mjVUK)
                                        (if g$t$11116$mjVUK
                                          ((case-lambda
                                             ((g$l$11117$mjVUK)
                                              (if (not (eq? g$l$11117$mjVUK
                                                            g$label$11115$mjVUK))
                                                (g$dup-error$11097$mjVUK
                                                  g$name$11114$mjVUK)
                                                (void))))
                                           g$t$11116$mjVUK)
                                          (g$hashtable-set!$6109$mjVUK
                                            g$h$11111$mjVUK
                                            g$name$11114$mjVUK
                                            g$label$11115$mjVUK))))
                                     (g$hashtable-ref$6108$mjVUK
                                       g$h$11111$mjVUK
                                       g$name$11114$mjVUK
                                       '#f))))
                                 (car g$x$11113$mjVUK)
                                 (cdr g$x$11113$mjVUK))))
                             g$subst$11112$mjVUK)))
                        (g$get-import$11105$mjVUK g$imp$11110$mjVUK))))))
          ((letrec ((g$f$11107$mjVUK
                      (case-lambda
                        ((g$imp*$11108$mjVUK g$h$11109$mjVUK)
                         (if (null? g$imp*$11108$mjVUK)
                           (hashtable-entries g$h$11109$mjVUK)
                           (begin
                             (g$add-imports!$11106$mjVUK
                               (car g$imp*$11108$mjVUK)
                               g$h$11109$mjVUK)
                             (g$f$11107$mjVUK
                               (cdr g$imp*$11108$mjVUK)
                               g$h$11109$mjVUK)))))))
             g$f$11107$mjVUK)
           g$imp*$11095$mjVUK
           (g$make-eq-hashtable$6105$mjVUK))))))
   (g$make-top-rib$8603$mjVUK
     g$make-top-rib$12121$mjVUK
     (case-lambda
       ((g$names$11357$mjVUK g$labels$11358$mjVUK)
        ((case-lambda
           ((g$rib$11359$mjVUK)
            (begin
              (g$vector-for-each$5880$mjVUK
                (case-lambda
                  ((g$name$11360$mjVUK g$label$11361$mjVUK)
                   (begin
                     (if (not (symbol? g$name$11360$mjVUK))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$11360$mjVUK)
                       (void))
                     (g$extend-rib/nc!$8238$mjVUK
                       g$rib$11359$mjVUK
                       (g$make-stx$8247$mjVUK
                         g$name$11360$mjVUK
                         g$top-mark*$8211$mjVUK
                         '()
                         '())
                       g$label$11361$mjVUK))))
                g$names$11357$mjVUK
                g$labels$11358$mjVUK)
              g$rib$11359$mjVUK)))
         (g$make-cache-rib$8235$mjVUK)))))
   (g$make-collector$8604$mjVUK
     g$make-collector$12122$mjVUK
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$11362$mjVUK)
            (case-lambda
              (() g$ls$11362$mjVUK)
              ((g$x$11363$mjVUK)
               (set! g$ls$11362$mjVUK
                 (g$set-cons$8208$mjVUK g$x$11363$mjVUK g$ls$11362$mjVUK))))))
         '()))))
   (g$inv-collector$8605$mjVUK
     g$inv-collector$12123$mjVUK
     (g$make-parameter$7536$mjVUK
       (case-lambda
         (g$args$11364$mjVUK
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11365$mjVUK)
          (begin
            (if (not (procedure? g$x$11365$mjVUK))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$11365$mjVUK)
              (void))
            g$x$11365$mjVUK)))))
   (g$vis-collector$8606$mjVUK
     g$vis-collector$12124$mjVUK
     (g$make-parameter$7536$mjVUK
       (case-lambda
         (g$args$11366$mjVUK
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11367$mjVUK)
          (begin
            (if (not (procedure? g$x$11367$mjVUK))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$11367$mjVUK)
              (void))
            g$x$11367$mjVUK)))))
   (g$imp-collector$8607$mjVUK
     g$imp-collector$12125$mjVUK
     (g$make-parameter$7536$mjVUK
       (case-lambda
         (g$args$11368$mjVUK
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11369$mjVUK)
          (begin
            (if (not (procedure? g$x$11369$mjVUK))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$11369$mjVUK)
              (void))
            g$x$11369$mjVUK)))))
   (g$chi-library-internal$8608$mjVUK
     g$chi-library-internal$12126$mjVUK
     (case-lambda
       ((g$e*$11370$mjVUK g$rib$11371$mjVUK g$mix?$11372$mjVUK)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8597$mjVUK
               g$e*$11370$mjVUK
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$11371$mjVUK
               g$mix?$11372$mjVUK
               '#t)))
          (case-lambda
            ((g$e*$11381$mjVUK
               g$r$11382$mjVUK
               g$mr$11383$mjVUK
               g$lex*$11384$mjVUK
               g$rhs*$11385$mjVUK
               g$mod**$11386$mjVUK
               g$_kwd*$11387$mjVUK
               g$exp*$11388$mjVUK)
             ((case-lambda
                ((g$exp*$11389$mjVUK
                   g$_kwd*$11390$mjVUK
                   g$mod**$11391$mjVUK
                   g$rhs*$11392$mjVUK
                   g$lex*$11393$mjVUK
                   g$mr$11394$mjVUK
                   g$r$11395$mjVUK
                   g$e*$11396$mjVUK)
                 (values
                   (append
                     (apply append (reverse g$mod**$11391$mjVUK))
                     g$e*$11396$mjVUK)
                   g$r$11395$mjVUK
                   g$mr$11394$mjVUK
                   (reverse g$lex*$11393$mjVUK)
                   (reverse g$rhs*$11392$mjVUK)
                   g$exp*$11389$mjVUK)))
              g$exp*$11388$mjVUK
              g$_kwd*$11387$mjVUK
              g$mod**$11386$mjVUK
              g$rhs*$11385$mjVUK
              g$lex*$11384$mjVUK
              g$mr$11383$mjVUK
              g$r$11382$mjVUK
              g$e*$11381$mjVUK)))))))
   (g$chi-interaction-expr$8609$mjVUK
     g$chi-interaction-expr$12127$mjVUK
     (case-lambda
       ((g$e$11397$mjVUK g$rib$11398$mjVUK g$r$11399$mjVUK)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8597$mjVUK
               (list g$e$11397$mjVUK)
               g$r$11399$mjVUK
               g$r$11399$mjVUK
               '()
               '()
               '()
               '()
               '()
               g$rib$11398$mjVUK
               '#t
               '#f)))
          (case-lambda
            ((g$e*$11408$mjVUK
               g$r$11409$mjVUK
               g$mr$11410$mjVUK
               g$lex*$11411$mjVUK
               g$rhs*$11412$mjVUK
               g$mod**$11413$mjVUK
               g$_kwd*$11414$mjVUK
               g$_exp*$11415$mjVUK)
             ((case-lambda
                ((g$_exp*$11416$mjVUK
                   g$_kwd*$11417$mjVUK
                   g$mod**$11418$mjVUK
                   g$rhs*$11419$mjVUK
                   g$lex*$11420$mjVUK
                   g$mr$11421$mjVUK
                   g$r$11422$mjVUK
                   g$e*$11423$mjVUK)
                 ((case-lambda
                    ((g$e*$11424$mjVUK)
                     ((case-lambda
                        ((g$e$11425$mjVUK)
                         (values g$e$11425$mjVUK g$r$11422$mjVUK)))
                      (if (null? g$e*$11424$mjVUK)
                        (g$build-void$8204$mjVUK)
                        (if (null? (cdr g$e*$11424$mjVUK))
                          (car g$e*$11424$mjVUK)
                          (g$build-sequence$8203$mjVUK
                            '#f
                            g$e*$11424$mjVUK))))))
                  (g$expand-interaction-rhs*/init*$8578$mjVUK
                    (reverse g$lex*$11420$mjVUK)
                    (reverse g$rhs*$11419$mjVUK)
                    (append
                      (apply append (reverse g$mod**$11418$mjVUK))
                      g$e*$11423$mjVUK)
                    g$r$11422$mjVUK
                    g$mr$11421$mjVUK))))
              g$_exp*$11415$mjVUK
              g$_kwd*$11414$mjVUK
              g$mod**$11413$mjVUK
              g$rhs*$11412$mjVUK
              g$lex*$11411$mjVUK
              g$mr$11410$mjVUK
              g$r$11409$mjVUK
              g$e*$11408$mjVUK)))))))
   (g$library-body-expander$8610$mjVUK
     g$library-body-expander$12128$mjVUK
     (case-lambda
       ((g$name$11426$mjVUK
          g$main-exp*$11427$mjVUK
          g$imp*$11428$mjVUK
          g$b*$11429$mjVUK
          g$mix?$11430$mjVUK)
        (letrec* ((g$itc$11431$mjVUK (g$make-collector$8604$mjVUK)))
          ((case-lambda
             ((g$imp-collector$11436$mjVUK
                g$top-level-context$11437$mjVUK
                g$imp-collector$11438$mjVUK
                g$top-level-context$11439$mjVUK)
              ((case-lambda
                 ((g$swap$11440$mjVUK)
                  (dynamic-wind
                    g$swap$11440$mjVUK
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$8602$mjVUK
                              g$imp*$11428$mjVUK)))
                         (case-lambda
                           ((g$subst-names$11443$mjVUK
                              g$subst-labels$11444$mjVUK)
                            ((case-lambda
                               ((g$subst-labels$11445$mjVUK
                                  g$subst-names$11446$mjVUK)
                                ((case-lambda
                                   ((g$rib$11447$mjVUK)
                                    (letrec* ((g$wrap$11448$mjVUK
                                                (case-lambda
                                                  ((g$x$11510$mjVUK)
                                                   (g$make-stx$8247$mjVUK
                                                     g$x$11510$mjVUK
                                                     g$top-mark*$8211$mjVUK
                                                     (list g$rib$11447$mjVUK)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$11449$mjVUK
                                            g$main-exp*$11450$mjVUK
                                            g$rtc$11451$mjVUK
                                            g$vtc$11452$mjVUK)
                                          ((case-lambda
                                             ((g$inv-collector$11457$mjVUK
                                                g$vis-collector$11458$mjVUK
                                                g$inv-collector$11459$mjVUK
                                                g$vis-collector$11460$mjVUK)
                                              ((case-lambda
                                                 ((g$swap$11461$mjVUK)
                                                  (dynamic-wind
                                                    g$swap$11461$mjVUK
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$8608$mjVUK
                                                              g$b*$11449$mjVUK
                                                              g$rib$11447$mjVUK
                                                              g$mix?$11430$mjVUK)))
                                                         (case-lambda
                                                           ((g$init*$11468$mjVUK
                                                              g$r$11469$mjVUK
                                                              g$mr$11470$mjVUK
                                                              g$lex*$11471$mjVUK
                                                              g$rhs*$11472$mjVUK
                                                              g$internal-exp*$11473$mjVUK)
                                                            ((case-lambda
                                                               ((g$internal-exp*$11474$mjVUK
                                                                  g$rhs*$11475$mjVUK
                                                                  g$lex*$11476$mjVUK
                                                                  g$mr$11477$mjVUK
                                                                  g$r$11478$mjVUK
                                                                  g$init*$11479$mjVUK)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$8599$mjVUK
                                                                       (append
                                                                         g$main-exp*$11450$mjVUK
                                                                         g$internal-exp*$11474$mjVUK))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$11482$mjVUK
                                                                       g$exp-id*$11483$mjVUK)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$11484$mjVUK
                                                                           g$exp-name*$11485$mjVUK)
                                                                         (begin
                                                                           (g$seal-rib!$8240$mjVUK
                                                                             g$rib$11447$mjVUK)
                                                                           ((case-lambda
                                                                              ((g$init*$11486$mjVUK)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$11487$mjVUK)
                                                                                   (begin
                                                                                     (g$unseal-rib!$8241$mjVUK
                                                                                       g$rib$11447$mjVUK)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$11488$mjVUK
                                                                                           g$export-subst$11489$mjVUK)
                                                                                         (letrec* ((g$errstr$11490$mjVUK
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$8654$mjVUK
                                                                                                  g$lex*$11476$mjVUK
                                                                                                  g$loc*$11488$mjVUK
                                                                                                  g$r$11478$mjVUK)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$11494$mjVUK
                                                                                                  g$global*$11495$mjVUK
                                                                                                  g$macro*$11496$mjVUK)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$11497$mjVUK
                                                                                                      g$global*$11498$mjVUK
                                                                                                      g$export-env$11499$mjVUK)
                                                                                                    (begin
                                                                                                      (g$for-each$5603$mjVUK
                                                                                                        (case-lambda
                                                                                                          ((g$s$11500$mjVUK)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$11501$mjVUK
                                                                                                                 g$label$11502$mjVUK)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$11503$mjVUK)
                                                                                                                   (if g$p$11503$mjVUK
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$11504$mjVUK)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$11505$mjVUK)
                                                                                                                             (if (eq? g$type$11505$mjVUK
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$8665$mjVUK
                                                                                                                                 'export
                                                                                                                                 g$errstr$11490$mjVUK
                                                                                                                                 g$name$11501$mjVUK)
                                                                                                                               (void))))
                                                                                                                          (car g$b$11504$mjVUK))))
                                                                                                                      (cdr g$p$11503$mjVUK))
                                                                                                                     (void))))
                                                                                                                (g$assq$5590$mjVUK
                                                                                                                  g$label$11502$mjVUK
                                                                                                                  g$export-env$11499$mjVUK))))
                                                                                                            (car g$s$11500$mjVUK)
                                                                                                            (cdr g$s$11500$mjVUK))))
                                                                                                        g$export-subst$11489$mjVUK)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$11506$mjVUK
                                                                                                            g$invoke-definitions$11507$mjVUK)
                                                                                                          (values
                                                                                                            (g$itc$11431$mjVUK)
                                                                                                            (g$rtc$11451$mjVUK)
                                                                                                            (g$vtc$11452$mjVUK)
                                                                                                            (g$build-sequence$8203$mjVUK
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$11507$mjVUK
                                                                                                                (list
                                                                                                                  g$invoke-body$11506$mjVUK)))
                                                                                                            g$macro*$11497$mjVUK
                                                                                                            g$export-subst$11489$mjVUK
                                                                                                            g$export-env$11499$mjVUK)))
                                                                                                       (g$build-library-letrec*$8207$mjVUK
                                                                                                         '#f
                                                                                                         g$name$11426$mjVUK
                                                                                                         g$lex*$11476$mjVUK
                                                                                                         g$loc*$11488$mjVUK
                                                                                                         g$rhs*$11487$mjVUK
                                                                                                         (if (null?
                                                                                                               g$init*$11486$mjVUK)
                                                                                                           (g$build-void$8204$mjVUK)
                                                                                                           (g$build-sequence$8203$mjVUK
                                                                                                             '#f
                                                                                                             g$init*$11486$mjVUK)))
                                                                                                       (g$map$5602$mjVUK
                                                                                                         g$build-global-define$8199$mjVUK
                                                                                                         (g$map$5602$mjVUK
                                                                                                           cdr
                                                                                                           g$global*$11498$mjVUK))))))
                                                                                                 g$macro*$11496$mjVUK
                                                                                                 g$global*$11495$mjVUK
                                                                                                 g$export-env$11494$mjVUK)))))))
                                                                                      (g$map$5602$mjVUK
                                                                                        g$gen-global$8214$mjVUK
                                                                                        g$lex*$11476$mjVUK)
                                                                                      (g$make-export-subst$8653$mjVUK
                                                                                        g$exp-name*$11485$mjVUK
                                                                                        g$exp-id*$11484$mjVUK)))))
                                                                                (g$chi-rhs*$8579$mjVUK
                                                                                  g$rhs*$11475$mjVUK
                                                                                  g$r$11478$mjVUK
                                                                                  g$mr$11477$mjVUK))))
                                                                            (g$chi-expr*$8569$mjVUK
                                                                              g$init*$11479$mjVUK
                                                                              g$r$11478$mjVUK
                                                                              g$mr$11477$mjVUK)))))
                                                                      g$exp-id*$11483$mjVUK
                                                                      g$exp-name*$11482$mjVUK))))))
                                                             g$internal-exp*$11473$mjVUK
                                                             g$rhs*$11472$mjVUK
                                                             g$lex*$11471$mjVUK
                                                             g$mr$11470$mjVUK
                                                             g$r$11469$mjVUK
                                                             g$init*$11468$mjVUK))))))
                                                    g$swap$11461$mjVUK)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$11508$mjVUK)
                                                        (begin
                                                          (g$inv-collector$11457$mjVUK
                                                            g$inv-collector$11459$mjVUK)
                                                          (set! g$inv-collector$11459$mjVUK
                                                            g$t$11508$mjVUK))))
                                                     (g$inv-collector$11457$mjVUK))
                                                    ((case-lambda
                                                       ((g$t$11509$mjVUK)
                                                        (begin
                                                          (g$vis-collector$11458$mjVUK
                                                            g$vis-collector$11460$mjVUK)
                                                          (set! g$vis-collector$11460$mjVUK
                                                            g$t$11509$mjVUK))))
                                                     (g$vis-collector$11458$mjVUK))))))))
                                           g$inv-collector$8605$mjVUK
                                           g$vis-collector$8606$mjVUK
                                           g$rtc$11451$mjVUK
                                           g$vtc$11452$mjVUK)))
                                       (g$map$5602$mjVUK
                                         g$wrap$11448$mjVUK
                                         g$b*$11429$mjVUK)
                                       (g$map$5602$mjVUK
                                         g$wrap$11448$mjVUK
                                         g$main-exp*$11427$mjVUK)
                                       (g$make-collector$8604$mjVUK)
                                       (g$make-collector$8604$mjVUK)))))
                                 (g$make-top-rib$8603$mjVUK
                                   g$subst-names$11446$mjVUK
                                   g$subst-labels$11445$mjVUK))))
                             g$subst-labels$11444$mjVUK
                             g$subst-names$11443$mjVUK))))))
                    g$swap$11440$mjVUK)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$11511$mjVUK)
                        (begin
                          (g$imp-collector$11436$mjVUK
                            g$imp-collector$11438$mjVUK)
                          (set! g$imp-collector$11438$mjVUK g$t$11511$mjVUK))))
                     (g$imp-collector$11436$mjVUK))
                    ((case-lambda
                       ((g$t$11512$mjVUK)
                        (begin
                          (g$top-level-context$11437$mjVUK
                            g$top-level-context$11439$mjVUK)
                          (set! g$top-level-context$11439$mjVUK
                            g$t$11512$mjVUK))))
                     (g$top-level-context$11437$mjVUK))))))))
           g$imp-collector$8607$mjVUK
           g$top-level-context$8673$mjVUK
           g$itc$11431$mjVUK
           '#f)))))
   (g$core-library-expander$8611$mjVUK
     g$core-library-expander$12129$mjVUK
     (case-lambda
       ((g$e$11513$mjVUK g$verify-name$11514$mjVUK)
        (call-with-values
          (case-lambda (() (g$parse-library$8601$mjVUK g$e$11513$mjVUK)))
          (case-lambda
            ((g$name*$11519$mjVUK
               g$exp*$11520$mjVUK
               g$imp*$11521$mjVUK
               g$b*$11522$mjVUK)
             ((case-lambda
                ((g$b*$11523$mjVUK
                   g$imp*$11524$mjVUK
                   g$exp*$11525$mjVUK
                   g$name*$11526$mjVUK)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$8600$mjVUK g$name*$11526$mjVUK)))
                   (case-lambda
                     ((g$name$11529$mjVUK g$ver$11530$mjVUK)
                      ((case-lambda
                         ((g$ver$11531$mjVUK g$name$11532$mjVUK)
                          (begin
                            (g$verify-name$11514$mjVUK g$name$11532$mjVUK)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8610$mjVUK
                                   g$name$11532$mjVUK
                                   g$exp*$11525$mjVUK
                                   g$imp*$11524$mjVUK
                                   g$b*$11523$mjVUK
                                   '#f)))
                              (case-lambda
                                ((g$imp*$11540$mjVUK
                                   g$invoke-req*$11541$mjVUK
                                   g$visit-req*$11542$mjVUK
                                   g$invoke-code$11543$mjVUK
                                   g$visit-code$11544$mjVUK
                                   g$export-subst$11545$mjVUK
                                   g$export-env$11546$mjVUK)
                                 ((case-lambda
                                    ((g$export-env$11547$mjVUK
                                       g$export-subst$11548$mjVUK
                                       g$visit-code$11549$mjVUK
                                       g$invoke-code$11550$mjVUK
                                       g$visit-req*$11551$mjVUK
                                       g$invoke-req*$11552$mjVUK
                                       g$imp*$11553$mjVUK)
                                     (values
                                       g$name$11532$mjVUK
                                       g$ver$11531$mjVUK
                                       g$imp*$11553$mjVUK
                                       g$invoke-req*$11552$mjVUK
                                       g$visit-req*$11551$mjVUK
                                       g$invoke-code$11550$mjVUK
                                       g$visit-code$11549$mjVUK
                                       g$export-subst$11548$mjVUK
                                       g$export-env$11547$mjVUK)))
                                  g$export-env$11546$mjVUK
                                  g$export-subst$11545$mjVUK
                                  g$visit-code$11544$mjVUK
                                  g$invoke-code$11543$mjVUK
                                  g$visit-req*$11542$mjVUK
                                  g$invoke-req*$11541$mjVUK
                                  g$imp*$11540$mjVUK)))))))
                       g$ver$11530$mjVUK
                       g$name$11529$mjVUK))))))
              g$b*$11522$mjVUK
              g$imp*$11521$mjVUK
              g$exp*$11520$mjVUK
              g$name*$11519$mjVUK)))))))
   (g$parse-top-level-program$8612$mjVUK
     g$parse-top-level-program$12130$mjVUK
     (case-lambda
       ((g$e*$11554$mjVUK)
        ((case-lambda
           ((g$t$11555$mjVUK)
            ((case-lambda
               ((g$ls/false$11556$mjVUK)
                (if (if g$ls/false$11556$mjVUK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$11557$mjVUK
                               g$imp*$11558$mjVUK
                               g$b*$11559$mjVUK)
                             (eq? (g$syntax->datum$8668$mjVUK
                                    g$import$11557$mjVUK)
                                  'import)))
                          g$ls/false$11556$mjVUK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$11560$mjVUK
                         g$imp*$11561$mjVUK
                         g$b*$11562$mjVUK)
                       (values g$imp*$11561$mjVUK g$b*$11562$mjVUK)))
                    g$ls/false$11556$mjVUK)
                  ((case-lambda
                     ((g$t$11563$mjVUK)
                      ((case-lambda
                         ((g$ls/false$11564$mjVUK)
                          (if (if g$ls/false$11564$mjVUK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$11565$mjVUK
                                         g$x$11566$mjVUK
                                         g$y$11567$mjVUK)
                                       (eq? (g$syntax->datum$8668$mjVUK
                                              g$import$11565$mjVUK)
                                            'import)))
                                    g$ls/false$11564$mjVUK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$11568$mjVUK
                                   g$x$11569$mjVUK
                                   g$y$11570$mjVUK)
                                 (g$syntax-violation$8665$mjVUK
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$8271$mjVUK g$e*$11554$mjVUK))))
                              g$ls/false$11564$mjVUK)
                            ((case-lambda
                               ((g$t$11571$mjVUK)
                                ((case-lambda
                                   ((g$ls/false$11572$mjVUK)
                                    (if g$ls/false$11572$mjVUK
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$11572$mjVUK)
                                      (g$syntax-violation$8665$mjVUK
                                        '#f
                                        '"invalid syntax"
                                        g$t$11571$mjVUK))))
                                 (g$syntax-dispatch$8553$mjVUK
                                   g$t$11571$mjVUK
                                   '_))))
                             g$t$11563$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK
                         g$t$11563$mjVUK
                         '((any . any) . any)))))
                   g$t$11555$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK
               g$t$11555$mjVUK
               '((any . each-any) . each-any)))))
         g$e*$11554$mjVUK))))
   (g$top-level-expander$8613$mjVUK
     g$top-level-expander$12131$mjVUK
     (case-lambda
       ((g$e*$11573$mjVUK)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8612$mjVUK g$e*$11573$mjVUK)))
          (case-lambda
            ((g$imp*$11576$mjVUK g$b*$11577$mjVUK)
             ((case-lambda
                ((g$b*$11578$mjVUK g$imp*$11579$mjVUK)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8610$mjVUK
                        '()
                        '()
                        g$imp*$11579$mjVUK
                        g$b*$11578$mjVUK
                        '#t)))
                   (case-lambda
                     ((g$imp*$11587$mjVUK
                        g$invoke-req*$11588$mjVUK
                        g$visit-req*$11589$mjVUK
                        g$invoke-code$11590$mjVUK
                        g$visit-code$11591$mjVUK
                        g$export-subst$11592$mjVUK
                        g$export-env$11593$mjVUK)
                      ((case-lambda
                         ((g$export-env$11594$mjVUK
                            g$export-subst$11595$mjVUK
                            g$visit-code$11596$mjVUK
                            g$invoke-code$11597$mjVUK
                            g$visit-req*$11598$mjVUK
                            g$invoke-req*$11599$mjVUK
                            g$imp*$11600$mjVUK)
                          (values
                            g$invoke-req*$11599$mjVUK
                            g$invoke-code$11597$mjVUK)))
                       g$export-env$11593$mjVUK
                       g$export-subst$11592$mjVUK
                       g$visit-code$11591$mjVUK
                       g$invoke-code$11590$mjVUK
                       g$visit-req*$11589$mjVUK
                       g$invoke-req*$11588$mjVUK
                       g$imp*$11587$mjVUK))))))
              g$b*$11577$mjVUK
              g$imp*$11576$mjVUK)))))))
   (g$9850$8614$mjVUK
     g$9850$12132$mjVUK
     (make-record-type-descriptor
       'env
       '#f
       'g$9853$mjVUK
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9852$8615$mjVUK g$9852$12133$mjVUK '#f)
   (g$9851$8616$mjVUK
     g$9851$12134$mjVUK
     (make-record-constructor-descriptor
       g$9850$8614$mjVUK
       '#f
       g$9852$8615$mjVUK))
   (g$env?$8617$mjVUK
     g$env?$12135$mjVUK
     (record-predicate g$9850$8614$mjVUK))
   (g$make-env$8618$mjVUK
     g$make-env$12136$mjVUK
     (record-constructor g$9851$8616$mjVUK))
   (g$env-names$8619$mjVUK
     g$env-names$12137$mjVUK
     (record-accessor g$9850$8614$mjVUK '0))
   (g$env-labels$8620$mjVUK
     g$env-labels$12138$mjVUK
     (record-accessor g$9850$8614$mjVUK '1))
   (g$env-itc$8621$mjVUK
     g$env-itc$12139$mjVUK
     (record-accessor g$9850$8614$mjVUK '2))
   (g$set-env-names!$8622$mjVUK
     g$set-env-names!$12140$mjVUK
     (record-mutator g$9850$8614$mjVUK '0))
   (g$set-env-labels!$8623$mjVUK
     g$set-env-labels!$12141$mjVUK
     (record-mutator g$9850$8614$mjVUK '1))
   (g$set-env-itc!$8624$mjVUK
     g$set-env-itc!$12142$mjVUK
     (record-mutator g$9850$8614$mjVUK '2))
   (g$rp$8625$mjVUK
     g$rp$12143$mjVUK
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11601$mjVUK g$p$11602$mjVUK g$wr$11603$mjVUK)
          (display '"#<environment>" g$p$11602$mjVUK)))))
   (g$9869$8626$mjVUK
     g$9869$12144$mjVUK
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9872$mjVUK
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9871$8627$mjVUK g$9871$12145$mjVUK '#f)
   (g$9870$8628$mjVUK
     g$9870$12146$mjVUK
     (make-record-constructor-descriptor
       g$9869$8626$mjVUK
       '#f
       g$9871$8627$mjVUK))
   (g$interaction-env?$8629$mjVUK
     g$interaction-env?$12147$mjVUK
     (record-predicate g$9869$8626$mjVUK))
   (g$make-interaction-env$8630$mjVUK
     g$make-interaction-env$12148$mjVUK
     (record-constructor g$9870$8628$mjVUK))
   (g$interaction-env-rib$8631$mjVUK
     g$interaction-env-rib$12149$mjVUK
     (record-accessor g$9869$8626$mjVUK '0))
   (g$interaction-env-r$8632$mjVUK
     g$interaction-env-r$12150$mjVUK
     (record-accessor g$9869$8626$mjVUK '1))
   (g$interaction-env-locs$8633$mjVUK
     g$interaction-env-locs$12151$mjVUK
     (record-accessor g$9869$8626$mjVUK '2))
   (g$set-interaction-env-rib!$8634$mjVUK
     g$set-interaction-env-rib!$12152$mjVUK
     (record-mutator g$9869$8626$mjVUK '0))
   (g$set-interaction-env-r!$8635$mjVUK
     g$set-interaction-env-r!$12153$mjVUK
     (record-mutator g$9869$8626$mjVUK '1))
   (g$set-interaction-env-locs!$8636$mjVUK
     g$set-interaction-env-locs!$12154$mjVUK
     (record-mutator g$9869$8626$mjVUK '2))
   (g$rp$8637$mjVUK
     g$rp$12155$mjVUK
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11604$mjVUK g$p$11605$mjVUK g$wr$11606$mjVUK)
          (display '"#<environment>" g$p$11605$mjVUK)))))
   (g$interaction-environment-symbols$8638$mjVUK
     g$interaction-environment-symbols$12156$mjVUK
     (case-lambda
       (()
        (g$environment-symbols$8642$mjVUK
          (g$interaction-environment$8672$mjVUK)))))
   (g$environment-bindings$8639$mjVUK
     g$environment-bindings$12157$mjVUK
     (case-lambda
       ((g$e$11607$mjVUK)
        (vector->list
          (g$vector-map$5879$mjVUK
            (case-lambda
              ((g$name$11608$mjVUK g$label$11609$mjVUK)
               (g$parse-binding$8640$mjVUK
                 (cons
                   g$name$11608$mjVUK
                   (g$imported-label->binding$8083$mjVUK
                     g$label$11609$mjVUK)))))
            (g$env-names$8619$mjVUK g$e$11607$mjVUK)
            (g$env-labels$8620$mjVUK g$e$11607$mjVUK))))))
   (g$parse-binding$8640$mjVUK
     g$parse-binding$12158$mjVUK
     (case-lambda
       ((g$b$11610$mjVUK)
        (cons
          (car g$b$11610$mjVUK)
          ((case-lambda
             ((g$t$11611$mjVUK)
              (if (g$memv$5595$mjVUK g$t$11611$mjVUK '(core-prim global))
                'procedure
                (if (g$memv$5595$mjVUK
                      g$t$11611$mjVUK
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$5595$mjVUK g$t$11611$mjVUK '($core-rtd))
                    'record
                    (if (eq? (car g$b$11610$mjVUK)
                             (g$cadr$5828$mjVUK g$b$11610$mjVUK))
                      'syntax
                      'unknown))))))
           (g$cadr$5828$mjVUK g$b$11610$mjVUK))))))
   (g$environment?$8641$mjVUK
     g$environment?$12159$mjVUK
     (case-lambda
       ((g$x$11612$mjVUK)
        ((case-lambda
           ((g$t$11613$mjVUK)
            (if g$t$11613$mjVUK
              g$t$11613$mjVUK
              (begin '#f (g$interaction-env?$8629$mjVUK g$x$11612$mjVUK)))))
         (g$env?$8617$mjVUK g$x$11612$mjVUK)))))
   (g$environment-symbols$8642$mjVUK
     g$environment-symbols$12160$mjVUK
     (case-lambda
       ((g$x$11614$mjVUK)
        (if (g$env?$8617$mjVUK g$x$11614$mjVUK)
          (vector->list (g$env-names$8619$mjVUK g$x$11614$mjVUK))
          (if (g$interaction-env?$8629$mjVUK g$x$11614$mjVUK)
            (g$map$5602$mjVUK
              values
              (g$rib-sym*$8224$mjVUK
                (g$interaction-env-rib$8631$mjVUK g$x$11614$mjVUK)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$11614$mjVUK))))))
   (g$environment$8643$mjVUK
     g$environment$12161$mjVUK
     (case-lambda
       (g$imp*$11615$mjVUK
        ((case-lambda
           ((g$itc$11616$mjVUK)
            ((case-lambda
               ((g$imp-collector$11619$mjVUK g$imp-collector$11620$mjVUK)
                ((case-lambda
                   ((g$swap$11621$mjVUK)
                    (dynamic-wind
                      g$swap$11621$mjVUK
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8602$mjVUK
                                g$imp*$11615$mjVUK)))
                           (case-lambda
                             ((g$subst-names$11624$mjVUK
                                g$subst-labels$11625$mjVUK)
                              ((case-lambda
                                 ((g$subst-labels$11626$mjVUK
                                    g$subst-names$11627$mjVUK)
                                  (g$make-env$8618$mjVUK
                                    g$subst-names$11627$mjVUK
                                    g$subst-labels$11626$mjVUK
                                    g$itc$11616$mjVUK)))
                               g$subst-labels$11625$mjVUK
                               g$subst-names$11624$mjVUK))))))
                      g$swap$11621$mjVUK)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11628$mjVUK)
                        (begin
                          (g$imp-collector$11619$mjVUK
                            g$imp-collector$11620$mjVUK)
                          (set! g$imp-collector$11620$mjVUK g$t$11628$mjVUK))))
                     (g$imp-collector$11619$mjVUK)))))))
             g$imp-collector$8607$mjVUK
             g$itc$11616$mjVUK)))
         (g$make-collector$8604$mjVUK)))))
   (g$null-environment$8644$mjVUK
     g$null-environment$12162$mjVUK
     (case-lambda
       ((g$n$11629$mjVUK)
        (begin
          (if (not (eqv? g$n$11629$mjVUK '5))
            (assertion-violation 'null-environment '"not 5" g$n$11629$mjVUK)
            (void))
          (g$environment$8643$mjVUK '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8645$mjVUK
     g$scheme-report-environment$12163$mjVUK
     (case-lambda
       ((g$n$11630$mjVUK)
        (begin
          (if (not (eqv? g$n$11630$mjVUK '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11630$mjVUK)
            (void))
          (g$environment$8643$mjVUK '(psyntax scheme-report-environment-5))))))
   (g$expand$8646$mjVUK
     g$expand$12164$mjVUK
     (case-lambda
       ((g$x$11631$mjVUK g$env$11632$mjVUK)
        (if (g$env?$8617$mjVUK g$env$11632$mjVUK)
          ((case-lambda
             ((g$rib$11633$mjVUK)
              ((case-lambda
                 ((g$x$11634$mjVUK
                    g$itc$11635$mjVUK
                    g$rtc$11636$mjVUK
                    g$vtc$11637$mjVUK)
                  ((case-lambda
                     ((g$x$11638$mjVUK)
                      (begin
                        (g$seal-rib!$8240$mjVUK g$rib$11633$mjVUK)
                        (values g$x$11638$mjVUK (g$rtc$11636$mjVUK)))))
                   ((case-lambda
                      ((g$top-level-context$11647$mjVUK
                         g$inv-collector$11648$mjVUK
                         g$vis-collector$11649$mjVUK
                         g$imp-collector$11650$mjVUK
                         g$top-level-context$11651$mjVUK
                         g$inv-collector$11652$mjVUK
                         g$vis-collector$11653$mjVUK
                         g$imp-collector$11654$mjVUK)
                       ((case-lambda
                          ((g$swap$11655$mjVUK)
                           (dynamic-wind
                             g$swap$11655$mjVUK
                             (case-lambda
                               (()
                                (g$chi-expr$8571$mjVUK
                                  g$x$11634$mjVUK
                                  '()
                                  '())))
                             g$swap$11655$mjVUK)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11656$mjVUK)
                                 (begin
                                   (g$top-level-context$11647$mjVUK
                                     g$top-level-context$11651$mjVUK)
                                   (set! g$top-level-context$11651$mjVUK
                                     g$t$11656$mjVUK))))
                              (g$top-level-context$11647$mjVUK))
                             ((case-lambda
                                ((g$t$11657$mjVUK)
                                 (begin
                                   (g$inv-collector$11648$mjVUK
                                     g$inv-collector$11652$mjVUK)
                                   (set! g$inv-collector$11652$mjVUK
                                     g$t$11657$mjVUK))))
                              (g$inv-collector$11648$mjVUK))
                             ((case-lambda
                                ((g$t$11658$mjVUK)
                                 (begin
                                   (g$vis-collector$11649$mjVUK
                                     g$vis-collector$11653$mjVUK)
                                   (set! g$vis-collector$11653$mjVUK
                                     g$t$11658$mjVUK))))
                              (g$vis-collector$11649$mjVUK))
                             ((case-lambda
                                ((g$t$11659$mjVUK)
                                 (begin
                                   (g$imp-collector$11650$mjVUK
                                     g$imp-collector$11654$mjVUK)
                                   (set! g$imp-collector$11654$mjVUK
                                     g$t$11659$mjVUK))))
                              (g$imp-collector$11650$mjVUK))))))))
                    g$top-level-context$8673$mjVUK
                    g$inv-collector$8605$mjVUK
                    g$vis-collector$8606$mjVUK
                    g$imp-collector$8607$mjVUK
                    '#f
                    g$rtc$11636$mjVUK
                    g$vtc$11637$mjVUK
                    g$itc$11635$mjVUK))))
               (g$make-stx$8247$mjVUK
                 g$x$11631$mjVUK
                 g$top-mark*$8211$mjVUK
                 (list g$rib$11633$mjVUK)
                 '())
               (g$env-itc$8621$mjVUK g$env$11632$mjVUK)
               (g$make-collector$8604$mjVUK)
               (g$make-collector$8604$mjVUK))))
           (g$make-top-rib$8603$mjVUK
             (g$env-names$8619$mjVUK g$env$11632$mjVUK)
             (g$env-labels$8620$mjVUK g$env$11632$mjVUK)))
          (if (g$interaction-env?$8629$mjVUK g$env$11632$mjVUK)
            ((case-lambda
               ((g$rib$11660$mjVUK g$r$11661$mjVUK g$rtc$11662$mjVUK)
                ((case-lambda
                   ((g$x$11663$mjVUK)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11674$mjVUK
                               g$inv-collector$11675$mjVUK
                               g$vis-collector$11676$mjVUK
                               g$imp-collector$11677$mjVUK
                               g$top-level-context$11678$mjVUK
                               g$inv-collector$11679$mjVUK
                               g$vis-collector$11680$mjVUK
                               g$imp-collector$11681$mjVUK)
                             ((case-lambda
                                ((g$swap$11682$mjVUK)
                                 (dynamic-wind
                                   g$swap$11682$mjVUK
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8609$mjVUK
                                        g$x$11663$mjVUK
                                        g$rib$11660$mjVUK
                                        g$r$11661$mjVUK)))
                                   g$swap$11682$mjVUK)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11683$mjVUK)
                                       (begin
                                         (g$top-level-context$11674$mjVUK
                                           g$top-level-context$11678$mjVUK)
                                         (set! g$top-level-context$11678$mjVUK
                                           g$t$11683$mjVUK))))
                                    (g$top-level-context$11674$mjVUK))
                                   ((case-lambda
                                      ((g$t$11684$mjVUK)
                                       (begin
                                         (g$inv-collector$11675$mjVUK
                                           g$inv-collector$11679$mjVUK)
                                         (set! g$inv-collector$11679$mjVUK
                                           g$t$11684$mjVUK))))
                                    (g$inv-collector$11675$mjVUK))
                                   ((case-lambda
                                      ((g$t$11685$mjVUK)
                                       (begin
                                         (g$vis-collector$11676$mjVUK
                                           g$vis-collector$11680$mjVUK)
                                         (set! g$vis-collector$11680$mjVUK
                                           g$t$11685$mjVUK))))
                                    (g$vis-collector$11676$mjVUK))
                                   ((case-lambda
                                      ((g$t$11686$mjVUK)
                                       (begin
                                         (g$imp-collector$11677$mjVUK
                                           g$imp-collector$11681$mjVUK)
                                         (set! g$imp-collector$11681$mjVUK
                                           g$t$11686$mjVUK))))
                                    (g$imp-collector$11677$mjVUK))))))))
                          g$top-level-context$8673$mjVUK
                          g$inv-collector$8605$mjVUK
                          g$vis-collector$8606$mjVUK
                          g$imp-collector$8607$mjVUK
                          g$env$11632$mjVUK
                          g$rtc$11662$mjVUK
                          (g$make-collector$8604$mjVUK)
                          (g$make-collector$8604$mjVUK))))
                      (case-lambda
                        ((g$e$11687$mjVUK g$r^$11688$mjVUK)
                         ((case-lambda
                            ((g$r^$11689$mjVUK g$e$11690$mjVUK)
                             (begin
                               (g$set-interaction-env-r!$8635$mjVUK
                                 g$env$11632$mjVUK
                                 g$r^$11689$mjVUK)
                               (values g$e$11690$mjVUK (g$rtc$11662$mjVUK)))))
                          g$r^$11688$mjVUK
                          g$e$11687$mjVUK))))))
                 (g$make-stx$8247$mjVUK
                   g$x$11631$mjVUK
                   g$top-mark*$8211$mjVUK
                   (list g$rib$11660$mjVUK)
                   '()))))
             (g$interaction-env-rib$8631$mjVUK g$env$11632$mjVUK)
             (g$interaction-env-r$8632$mjVUK g$env$11632$mjVUK)
             (g$make-collector$8604$mjVUK))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11632$mjVUK))))))
   (g$eval$8647$mjVUK
     g$eval$12165$mjVUK
     (case-lambda
       ((g$x$11691$mjVUK g$env$11692$mjVUK)
        (begin
          (if (not (g$environment?$8641$mjVUK g$env$11692$mjVUK))
            (error 'eval '"not an environment" g$env$11692$mjVUK)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8646$mjVUK g$x$11691$mjVUK g$env$11692$mjVUK)))
            (case-lambda
              ((g$x$11695$mjVUK g$invoke-req*$11696$mjVUK)
               ((case-lambda
                  ((g$invoke-req*$11697$mjVUK g$x$11698$mjVUK)
                   (begin
                     (g$for-each$5603$mjVUK
                       g$invoke-library$8084$mjVUK
                       g$invoke-req*$11697$mjVUK)
                     (eval-core
                       (g$expanded->core$7784$mjVUK g$x$11698$mjVUK)))))
                g$invoke-req*$11696$mjVUK
                g$x$11695$mjVUK))))))))
   (g$expand->core$8648$mjVUK
     g$expand->core$12166$mjVUK
     (case-lambda
       ((g$x$11699$mjVUK g$env$11700$mjVUK)
        (begin
          (if (not (g$environment?$8641$mjVUK g$env$11700$mjVUK))
            (error 'eval '"not an environment" g$env$11700$mjVUK)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8646$mjVUK g$x$11699$mjVUK g$env$11700$mjVUK)))
            (case-lambda
              ((g$x$11703$mjVUK g$invoke-req*$11704$mjVUK)
               ((case-lambda
                  ((g$invoke-req*$11705$mjVUK g$x$11706$mjVUK)
                   (begin
                     (g$for-each$5603$mjVUK
                       g$invoke-library$8084$mjVUK
                       g$invoke-req*$11705$mjVUK)
                     (g$expanded->core$7784$mjVUK g$x$11706$mjVUK))))
                g$invoke-req*$11704$mjVUK
                g$x$11703$mjVUK))))))))
   (g$library-expander$8649$mjVUK
     g$library-expander$12167$mjVUK
     (case-lambda
       ((g$x$11707$mjVUK g$filename$11708$mjVUK g$verify-name$11709$mjVUK)
        (letrec* ((g$build-visit-code$11710$mjVUK
                    (case-lambda
                      ((g$macro*$11753$mjVUK)
                       (if (null? g$macro*$11753$mjVUK)
                         (g$build-void$8204$mjVUK)
                         (g$build-sequence$8203$mjVUK
                           '#f
                           (g$map$5602$mjVUK
                             (case-lambda
                               ((g$x$11754$mjVUK)
                                ((case-lambda
                                   ((g$loc$11755$mjVUK g$src$11756$mjVUK)
                                    (list
                                      'set!
                                      g$loc$11755$mjVUK
                                      g$src$11756$mjVUK)))
                                 (car g$x$11754$mjVUK)
                                 (g$cddr$5830$mjVUK g$x$11754$mjVUK))))
                             g$macro*$11753$mjVUK))))))
                  (g$visit!$11711$mjVUK
                    (case-lambda
                      ((g$macro*$11749$mjVUK)
                       (g$for-each$5603$mjVUK
                         (case-lambda
                           ((g$x$11750$mjVUK)
                            ((case-lambda
                               ((g$loc$11751$mjVUK g$proc$11752$mjVUK)
                                (set-symbol-value!
                                  g$loc$11751$mjVUK
                                  g$proc$11752$mjVUK)))
                             (car g$x$11750$mjVUK)
                             (g$cadr$5828$mjVUK g$x$11750$mjVUK))))
                         g$macro*$11749$mjVUK)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8611$mjVUK
                 g$x$11707$mjVUK
                 g$verify-name$11709$mjVUK)))
            (case-lambda
              ((g$name$11721$mjVUK
                 g$ver$11722$mjVUK
                 g$imp*$11723$mjVUK
                 g$inv*$11724$mjVUK
                 g$vis*$11725$mjVUK
                 g$invoke-code$11726$mjVUK
                 g$macro*$11727$mjVUK
                 g$export-subst$11728$mjVUK
                 g$export-env$11729$mjVUK)
               ((case-lambda
                  ((g$export-env$11730$mjVUK
                     g$export-subst$11731$mjVUK
                     g$macro*$11732$mjVUK
                     g$invoke-code$11733$mjVUK
                     g$vis*$11734$mjVUK
                     g$inv*$11735$mjVUK
                     g$imp*$11736$mjVUK
                     g$ver$11737$mjVUK
                     g$name$11738$mjVUK)
                   ((case-lambda
                      ((g$id$11739$mjVUK
                         g$name$11740$mjVUK
                         g$ver$11741$mjVUK
                         g$imp*$11742$mjVUK
                         g$vis*$11743$mjVUK
                         g$inv*$11744$mjVUK
                         g$visit-proc$11745$mjVUK
                         g$invoke-proc$11746$mjVUK
                         g$visit-code$11747$mjVUK
                         g$invoke-code$11748$mjVUK)
                       (begin
                         (g$install-library$8082$mjVUK
                           g$id$11739$mjVUK
                           g$name$11740$mjVUK
                           g$ver$11741$mjVUK
                           g$imp*$11742$mjVUK
                           g$vis*$11743$mjVUK
                           g$inv*$11744$mjVUK
                           g$export-subst$11731$mjVUK
                           g$export-env$11730$mjVUK
                           g$visit-proc$11745$mjVUK
                           g$invoke-proc$11746$mjVUK
                           g$visit-code$11747$mjVUK
                           g$invoke-code$11748$mjVUK
                           '#t
                           g$filename$11708$mjVUK)
                         (values
                           g$id$11739$mjVUK
                           g$name$11740$mjVUK
                           g$ver$11741$mjVUK
                           g$imp*$11742$mjVUK
                           g$vis*$11743$mjVUK
                           g$inv*$11744$mjVUK
                           g$invoke-code$11748$mjVUK
                           g$visit-code$11747$mjVUK
                           g$export-subst$11731$mjVUK
                           g$export-env$11730$mjVUK))))
                    (gensym)
                    g$name$11738$mjVUK
                    g$ver$11737$mjVUK
                    (g$map$5602$mjVUK
                      g$library-spec$8088$mjVUK
                      g$imp*$11736$mjVUK)
                    (g$map$5602$mjVUK
                      g$library-spec$8088$mjVUK
                      g$vis*$11734$mjVUK)
                    (g$map$5602$mjVUK
                      g$library-spec$8088$mjVUK
                      g$inv*$11735$mjVUK)
                    (case-lambda
                      (() (g$visit!$11711$mjVUK g$macro*$11732$mjVUK)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7784$mjVUK
                           g$invoke-code$11733$mjVUK))))
                    (g$build-visit-code$11710$mjVUK g$macro*$11732$mjVUK)
                    g$invoke-code$11733$mjVUK)))
                g$export-env$11729$mjVUK
                g$export-subst$11728$mjVUK
                g$macro*$11727$mjVUK
                g$invoke-code$11726$mjVUK
                g$vis*$11725$mjVUK
                g$inv*$11724$mjVUK
                g$imp*$11723$mjVUK
                g$ver$11722$mjVUK
                g$name$11721$mjVUK))))))
       ((g$x$11757$mjVUK g$filename$11758$mjVUK)
        (g$library-expander$8649$mjVUK
          g$x$11757$mjVUK
          g$filename$11758$mjVUK
          (case-lambda ((g$x$11759$mjVUK) (values)))))
       ((g$x$11760$mjVUK)
        (g$library-expander$8649$mjVUK
          g$x$11760$mjVUK
          '#f
          (case-lambda ((g$x$11761$mjVUK) (values)))))))
   (g$boot-library-expand$8650$mjVUK
     g$boot-library-expand$12168$mjVUK
     (case-lambda
       ((g$x$11762$mjVUK)
        (call-with-values
          (case-lambda (() (g$library-expander$8649$mjVUK g$x$11762$mjVUK)))
          (case-lambda
            ((g$id$11773$mjVUK
               g$name$11774$mjVUK
               g$ver$11775$mjVUK
               g$imp*$11776$mjVUK
               g$vis*$11777$mjVUK
               g$inv*$11778$mjVUK
               g$invoke-code$11779$mjVUK
               g$visit-code$11780$mjVUK
               g$export-subst$11781$mjVUK
               g$export-env$11782$mjVUK)
             ((case-lambda
                ((g$export-env$11783$mjVUK
                   g$export-subst$11784$mjVUK
                   g$visit-code$11785$mjVUK
                   g$invoke-code$11786$mjVUK
                   g$inv*$11787$mjVUK
                   g$vis*$11788$mjVUK
                   g$imp*$11789$mjVUK
                   g$ver$11790$mjVUK
                   g$name$11791$mjVUK
                   g$id$11792$mjVUK)
                 (values
                   g$name$11791$mjVUK
                   g$invoke-code$11786$mjVUK
                   g$export-subst$11784$mjVUK
                   g$export-env$11783$mjVUK)))
              g$export-env$11782$mjVUK
              g$export-subst$11781$mjVUK
              g$visit-code$11780$mjVUK
              g$invoke-code$11779$mjVUK
              g$inv*$11778$mjVUK
              g$vis*$11777$mjVUK
              g$imp*$11776$mjVUK
              g$ver$11775$mjVUK
              g$name$11774$mjVUK
              g$id$11773$mjVUK)))))))
   (g$rev-map-append$8651$mjVUK
     g$rev-map-append$12169$mjVUK
     (case-lambda
       ((g$f$11793$mjVUK g$ls$11794$mjVUK g$ac$11795$mjVUK)
        (if (null? g$ls$11794$mjVUK)
          g$ac$11795$mjVUK
          (g$rev-map-append$8651$mjVUK
            g$f$11793$mjVUK
            (cdr g$ls$11794$mjVUK)
            (cons
              (g$f$11793$mjVUK (car g$ls$11794$mjVUK))
              g$ac$11795$mjVUK))))))
   (g$build-exports$8652$mjVUK
     g$build-exports$12170$mjVUK
     (case-lambda
       ((g$lex*+loc*$11796$mjVUK g$init*$11797$mjVUK)
        (g$build-sequence$8203$mjVUK
          '#f
          (cons
            (g$build-void$8204$mjVUK)
            (g$rev-map-append$8651$mjVUK
              (case-lambda
                ((g$x$11798$mjVUK)
                 (list 'set! (cdr g$x$11798$mjVUK) (car g$x$11798$mjVUK))))
              g$lex*+loc*$11796$mjVUK
              g$init*$11797$mjVUK))))))
   (g$make-export-subst$8653$mjVUK
     g$make-export-subst$12171$mjVUK
     (case-lambda
       ((g$name*$11799$mjVUK g$id*$11800$mjVUK)
        (g$map$5602$mjVUK
          (case-lambda
            ((g$name$11801$mjVUK g$id$11802$mjVUK)
             ((case-lambda
                ((g$label$11803$mjVUK)
                 (begin
                   (if (not g$label$11803$mjVUK)
                     (g$syntax-violation$8665$mjVUK
                       '#f
                       '"cannot export unbound identifier"
                       g$id$11802$mjVUK)
                     (void))
                   (cons g$name$11801$mjVUK g$label$11803$mjVUK))))
              (g$id->label$8287$mjVUK g$id$11802$mjVUK))))
          g$name*$11799$mjVUK
          g$id*$11800$mjVUK))))
   (g$make-export-env/macros$8654$mjVUK
     g$make-export-env/macros$12172$mjVUK
     (case-lambda
       ((g$lex*$11804$mjVUK g$loc*$11805$mjVUK g$r$11806$mjVUK)
        (letrec* ((g$lookup$11807$mjVUK
                    (case-lambda
                      ((g$x$11823$mjVUK)
                       ((letrec ((g$f$11824$mjVUK
                                   (case-lambda
                                     ((g$x$11825$mjVUK
                                        g$lex*$11826$mjVUK
                                        g$loc*$11827$mjVUK)
                                      (if (pair? g$lex*$11826$mjVUK)
                                        (if (eq? g$x$11825$mjVUK
                                                 (car g$lex*$11826$mjVUK))
                                          (car g$loc*$11827$mjVUK)
                                          (g$f$11824$mjVUK
                                            g$x$11825$mjVUK
                                            (cdr g$lex*$11826$mjVUK)
                                            (cdr g$loc*$11827$mjVUK)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11824$mjVUK)
                        g$x$11823$mjVUK
                        g$lex*$11804$mjVUK
                        g$loc*$11805$mjVUK)))))
          ((letrec ((g$f$11808$mjVUK
                      (case-lambda
                        ((g$r$11809$mjVUK
                           g$env$11810$mjVUK
                           g$global*$11811$mjVUK
                           g$macro*$11812$mjVUK)
                         (if (null? g$r$11809$mjVUK)
                           (values
                             g$env$11810$mjVUK
                             g$global*$11811$mjVUK
                             g$macro*$11812$mjVUK)
                           ((case-lambda
                              ((g$x$11813$mjVUK)
                               ((case-lambda
                                  ((g$label$11814$mjVUK g$b$11815$mjVUK)
                                   ((case-lambda
                                      ((g$t$11816$mjVUK)
                                       (if (g$memv$5595$mjVUK
                                             g$t$11816$mjVUK
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$11817$mjVUK)
                                             ((case-lambda
                                                ((g$loc$11818$mjVUK
                                                   g$type$11819$mjVUK)
                                                 (g$f$11808$mjVUK
                                                   (cdr g$r$11809$mjVUK)
                                                   (cons
                                                     (g$cons*$5604$mjVUK
                                                       g$label$11814$mjVUK
                                                       g$type$11819$mjVUK
                                                       g$loc$11818$mjVUK)
                                                     g$env$11810$mjVUK)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$8497$mjVUK
                                                         g$v$11817$mjVUK)
                                                       g$loc$11818$mjVUK)
                                                     g$global*$11811$mjVUK)
                                                   g$macro*$11812$mjVUK)))
                                              (g$lookup$11807$mjVUK
                                                (g$lexical-var$8497$mjVUK
                                                  g$v$11817$mjVUK))
                                              (if (g$lexical-mutable?$8498$mjVUK
                                                    g$v$11817$mjVUK)
                                                'mutable
                                                'global))))
                                          (g$binding-value$8292$mjVUK
                                            g$b$11815$mjVUK))
                                         (if (g$memv$5595$mjVUK
                                               g$t$11816$mjVUK
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$11820$mjVUK)
                                               (g$f$11808$mjVUK
                                                 (cdr g$r$11809$mjVUK)
                                                 (cons
                                                   (g$cons*$5604$mjVUK
                                                     g$label$11814$mjVUK
                                                     'global-macro
                                                     g$loc$11820$mjVUK)
                                                   g$env$11810$mjVUK)
                                                 g$global*$11811$mjVUK
                                                 (cons
                                                   (cons
                                                     g$loc$11820$mjVUK
                                                     (g$binding-value$8292$mjVUK
                                                       g$b$11815$mjVUK))
                                                   g$macro*$11812$mjVUK))))
                                            (gensym))
                                           (if (g$memv$5595$mjVUK
                                                 g$t$11816$mjVUK
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$11821$mjVUK)
                                                 (g$f$11808$mjVUK
                                                   (cdr g$r$11809$mjVUK)
                                                   (cons
                                                     (g$cons*$5604$mjVUK
                                                       g$label$11814$mjVUK
                                                       'global-macro!
                                                       g$loc$11821$mjVUK)
                                                     g$env$11810$mjVUK)
                                                   g$global*$11811$mjVUK
                                                   (cons
                                                     (cons
                                                       g$loc$11821$mjVUK
                                                       (g$binding-value$8292$mjVUK
                                                         g$b$11815$mjVUK))
                                                     g$macro*$11812$mjVUK))))
                                              (gensym))
                                             (if (g$memv$5595$mjVUK
                                                   g$t$11816$mjVUK
                                                   '(local-ctv))
                                               ((case-lambda
                                                  ((g$loc$11822$mjVUK)
                                                   (g$f$11808$mjVUK
                                                     (cdr g$r$11809$mjVUK)
                                                     (cons
                                                       (g$cons*$5604$mjVUK
                                                         g$label$11814$mjVUK
                                                         'global-ctv
                                                         g$loc$11822$mjVUK)
                                                       g$env$11810$mjVUK)
                                                     g$global*$11811$mjVUK
                                                     (cons
                                                       (cons
                                                         g$loc$11822$mjVUK
                                                         (g$binding-value$8292$mjVUK
                                                           g$b$11815$mjVUK))
                                                       g$macro*$11812$mjVUK))))
                                                (gensym))
                                               (if (g$memv$5595$mjVUK
                                                     g$t$11816$mjVUK
                                                     '($rtd $module))
                                                 (g$f$11808$mjVUK
                                                   (cdr g$r$11809$mjVUK)
                                                   (cons
                                                     g$x$11813$mjVUK
                                                     g$env$11810$mjVUK)
                                                   g$global*$11811$mjVUK
                                                   g$macro*$11812$mjVUK)
                                                 (assertion-violation
                                                   'expander
                                                   '"BUG: do not know how to export"
                                                   (g$binding-type$8291$mjVUK
                                                     g$b$11815$mjVUK)
                                                   (g$binding-value$8292$mjVUK
                                                     g$b$11815$mjVUK)))))))))
                                    (g$binding-type$8291$mjVUK
                                      g$b$11815$mjVUK))))
                                (car g$x$11813$mjVUK)
                                (cdr g$x$11813$mjVUK))))
                            (car g$r$11809$mjVUK)))))))
             g$f$11808$mjVUK)
           g$r$11806$mjVUK
           '()
           '()
           '())))))
   (g$generate-temporaries$8655$mjVUK
     g$generate-temporaries$12173$mjVUK
     (case-lambda
       ((g$ls$11828$mjVUK)
        ((case-lambda
           ((g$t$11829$mjVUK)
            ((case-lambda
               ((g$ls/false$11830$mjVUK)
                (if g$ls/false$11830$mjVUK
                  (apply
                    (case-lambda
                      ((g$ls$11831$mjVUK)
                       (g$map$5602$mjVUK
                         (case-lambda
                           ((g$x$11832$mjVUK)
                            (g$make-stx$8247$mjVUK
                              ((case-lambda
                                 ((g$x$11833$mjVUK)
                                  (if ((case-lambda
                                         ((g$t$11834$mjVUK)
                                          (if g$t$11834$mjVUK
                                            g$t$11834$mjVUK
                                            (begin
                                              '#f
                                              (string? g$x$11833$mjVUK)))))
                                       (symbol? g$x$11833$mjVUK))
                                    (gensym g$x$11833$mjVUK)
                                    (gensym 't))))
                               (g$syntax->datum$8668$mjVUK g$x$11832$mjVUK))
                              g$top-mark*$8211$mjVUK
                              '()
                              '())))
                         g$ls$11831$mjVUK)))
                    g$ls/false$11830$mjVUK)
                  ((case-lambda
                     ((g$t$11835$mjVUK)
                      ((case-lambda
                         ((g$ls/false$11836$mjVUK)
                          (if g$ls/false$11836$mjVUK
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11836$mjVUK)
                            (g$syntax-violation$8665$mjVUK
                              '#f
                              '"invalid syntax"
                              g$t$11835$mjVUK))))
                       (g$syntax-dispatch$8553$mjVUK g$t$11835$mjVUK '_))))
                   g$t$11829$mjVUK))))
             (g$syntax-dispatch$8553$mjVUK g$t$11829$mjVUK 'each-any))))
         g$ls$11828$mjVUK))))
   (g$free-identifier=?$8656$mjVUK
     g$free-identifier=?$12174$mjVUK
     (case-lambda
       ((g$x$11837$mjVUK g$y$11838$mjVUK)
        (if (g$id?$8274$mjVUK g$x$11837$mjVUK)
          (if (g$id?$8274$mjVUK g$y$11838$mjVUK)
            (g$free-id=?$8278$mjVUK g$x$11837$mjVUK g$y$11838$mjVUK)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11838$mjVUK))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11837$mjVUK)))))
   (g$bound-identifier=?$8657$mjVUK
     g$bound-identifier=?$12175$mjVUK
     (case-lambda
       ((g$x$11839$mjVUK g$y$11840$mjVUK)
        (if (g$id?$8274$mjVUK g$x$11839$mjVUK)
          (if (g$id?$8274$mjVUK g$y$11840$mjVUK)
            (g$bound-id=?$8277$mjVUK g$x$11839$mjVUK g$y$11840$mjVUK)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11840$mjVUK))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11839$mjVUK)))))
   (g$make-source-condition$8658$mjVUK
     g$make-source-condition$12176$mjVUK
     (case-lambda
       ((g$x$11841$mjVUK)
        (letrec* ((g$12819$11842$mjVUK
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12822$mjVUK
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12821$11843$mjVUK '#f)
                  (g$12820$11844$mjVUK
                    (make-record-constructor-descriptor
                      g$12819$11842$mjVUK
                      &condition-rcd
                      g$12821$11843$mjVUK))
                  (g$12818$11845$mjVUK (record-predicate g$12819$11842$mjVUK))
                  (g$make-source-condition$11846$mjVUK
                    (record-constructor g$12820$11844$mjVUK))
                  (g$12816$11847$mjVUK (record-accessor g$12819$11842$mjVUK '0))
                  (g$12817$11848$mjVUK (record-accessor g$12819$11842$mjVUK '1))
                  (g$source-condition?$11849$mjVUK
                    (condition-predicate g$12819$11842$mjVUK))
                  (g$source-filename$11850$mjVUK
                    (condition-accessor
                      g$12819$11842$mjVUK
                      g$12816$11847$mjVUK))
                  (g$source-character$11851$mjVUK
                    (condition-accessor
                      g$12819$11842$mjVUK
                      g$12817$11848$mjVUK)))
          (if (pair? g$x$11841$mjVUK)
            (g$make-source-condition$11846$mjVUK
              (car g$x$11841$mjVUK)
              (cdr g$x$11841$mjVUK))
            (condition))))))
   (g$extract-position-condition$8659$mjVUK
     g$extract-position-condition$12177$mjVUK
     (case-lambda
       ((g$x$11852$mjVUK)
        (g$make-source-condition$8658$mjVUK
          (g$expression-position$8660$mjVUK g$x$11852$mjVUK)))))
   (g$expression-position$8660$mjVUK
     g$expression-position$12178$mjVUK
     (case-lambda
       ((g$x$11853$mjVUK)
        (if (g$stx?$8246$mjVUK g$x$11853$mjVUK)
          (begin
            '#f
            ((case-lambda
               ((g$x$11854$mjVUK)
                (if (annotation? g$x$11854$mjVUK)
                  (begin '#f (annotation-source g$x$11854$mjVUK))
                  '#f)))
             (g$stx-expr$8248$mjVUK g$x$11853$mjVUK)))
          '#f))))
   (g$assertion-error$8661$mjVUK
     g$assertion-error$12179$mjVUK
     (case-lambda
       ((g$expr$11855$mjVUK g$pos$11856$mjVUK)
        (raise
          (condition
            (g$make-assertion-violation$6404$mjVUK)
            (g$make-who-condition$6418$mjVUK 'assert)
            (g$make-message-condition$6372$mjVUK '"assertion failed")
            (g$make-irritants-condition$6410$mjVUK (list g$expr$11855$mjVUK))
            (g$make-source-condition$8658$mjVUK g$pos$11856$mjVUK))))))
   (g$syntax-error$8662$mjVUK
     g$syntax-error$12180$mjVUK
     (case-lambda
       ((g$x$11857$mjVUK . g$args$11858$mjVUK)
        (begin
          (if (not (g$for-all$5600$mjVUK string? g$args$11858$mjVUK))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11858$mjVUK)
            (void))
          (raise
            (condition
              (g$make-message-condition$6372$mjVUK
                (if (null? g$args$11858$mjVUK)
                  '"invalid syntax"
                  (apply string-append g$args$11858$mjVUK)))
              (g$make-syntax-violation$6444$mjVUK
                (g$syntax->datum$8668$mjVUK g$x$11857$mjVUK)
                '#f)
              (g$extract-position-condition$8659$mjVUK g$x$11857$mjVUK)
              (g$extract-trace$8663$mjVUK g$x$11857$mjVUK)))))))
   (g$extract-trace$8663$mjVUK
     g$extract-trace$12181$mjVUK
     (case-lambda
       ((g$x$11859$mjVUK)
        (letrec* ((g$12846$11860$mjVUK
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12849$mjVUK
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12848$11861$mjVUK '#f)
                  (g$12847$11862$mjVUK
                    (make-record-constructor-descriptor
                      g$12846$11860$mjVUK
                      &condition-rcd
                      g$12848$11861$mjVUK))
                  (g$12845$11863$mjVUK (record-predicate g$12846$11860$mjVUK))
                  (g$make-trace$11864$mjVUK
                    (record-constructor g$12847$11862$mjVUK))
                  (g$12844$11865$mjVUK (record-accessor g$12846$11860$mjVUK '0))
                  (g$trace?$11866$mjVUK
                    (condition-predicate g$12846$11860$mjVUK))
                  (g$trace-form$11867$mjVUK
                    (condition-accessor
                      g$12846$11860$mjVUK
                      g$12844$11865$mjVUK)))
          ((letrec ((g$f$11868$mjVUK
                      (case-lambda
                        ((g$x$11869$mjVUK)
                         (if (g$stx?$8246$mjVUK g$x$11869$mjVUK)
                           (apply
                             condition
                             (g$make-trace$11864$mjVUK g$x$11869$mjVUK)
                             (g$map$5602$mjVUK
                               g$f$11868$mjVUK
                               (g$stx-ae*$8251$mjVUK g$x$11869$mjVUK)))
                           (if (annotation? g$x$11869$mjVUK)
                             (g$make-trace$11864$mjVUK
                               (g$make-stx$8247$mjVUK
                                 g$x$11869$mjVUK
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11868$mjVUK)
           g$x$11859$mjVUK)))))
   (g$syntax-violation*$8664$mjVUK
     g$syntax-violation*$12182$mjVUK
     (case-lambda
       ((g$who$11870$mjVUK
          g$msg$11871$mjVUK
          g$form$11872$mjVUK
          g$condition-object$11873$mjVUK)
        (begin
          (if (not (string? g$msg$11871$mjVUK))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11871$mjVUK)
            (void))
          ((case-lambda
             ((g$who$11874$mjVUK)
              (raise
                (condition
                  (if g$who$11874$mjVUK
                    (g$make-who-condition$6418$mjVUK g$who$11874$mjVUK)
                    (condition))
                  (g$make-message-condition$6372$mjVUK g$msg$11871$mjVUK)
                  g$condition-object$11873$mjVUK
                  (g$extract-position-condition$8659$mjVUK g$form$11872$mjVUK)
                  (g$extract-trace$8663$mjVUK g$form$11872$mjVUK)))))
           (if ((case-lambda
                  ((g$t$11875$mjVUK)
                   (if g$t$11875$mjVUK
                     g$t$11875$mjVUK
                     (begin '#f (symbol? g$who$11870$mjVUK)))))
                (string? g$who$11870$mjVUK))
             g$who$11870$mjVUK
             (if (not g$who$11870$mjVUK)
               ((case-lambda
                  ((g$t$11876$mjVUK)
                   ((case-lambda
                      ((g$ls/false$11877$mjVUK)
                       (if (if g$ls/false$11877$mjVUK
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11878$mjVUK)
                                    (g$id?$8274$mjVUK g$id$11878$mjVUK)))
                                 g$ls/false$11877$mjVUK))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11879$mjVUK)
                              (g$syntax->datum$8668$mjVUK g$id$11879$mjVUK)))
                           g$ls/false$11877$mjVUK)
                         ((case-lambda
                            ((g$t$11880$mjVUK)
                             ((case-lambda
                                ((g$ls/false$11881$mjVUK)
                                 (if (if g$ls/false$11881$mjVUK
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11882$mjVUK
                                                g$rest$11883$mjVUK)
                                              (g$id?$8274$mjVUK
                                                g$id$11882$mjVUK)))
                                           g$ls/false$11881$mjVUK))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11884$mjVUK g$rest$11885$mjVUK)
                                        (g$syntax->datum$8668$mjVUK
                                          g$id$11884$mjVUK)))
                                     g$ls/false$11881$mjVUK)
                                   ((case-lambda
                                      ((g$t$11886$mjVUK)
                                       ((case-lambda
                                          ((g$ls/false$11887$mjVUK)
                                           (if g$ls/false$11887$mjVUK
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11887$mjVUK)
                                             (g$syntax-violation$8665$mjVUK
                                               '#f
                                               '"invalid syntax"
                                               g$t$11886$mjVUK))))
                                        (g$syntax-dispatch$8553$mjVUK
                                          g$t$11886$mjVUK
                                          '_))))
                                    g$t$11880$mjVUK))))
                              (g$syntax-dispatch$8553$mjVUK
                                g$t$11880$mjVUK
                                '(any . any)))))
                          g$t$11876$mjVUK))))
                    (g$syntax-dispatch$8553$mjVUK g$t$11876$mjVUK 'any))))
                g$form$11872$mjVUK)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11870$mjVUK))))))))
   (g$syntax-violation$8665$mjVUK
     g$syntax-violation$12183$mjVUK
     (case-lambda
       ((g$who$11888$mjVUK g$msg$11889$mjVUK g$form$11890$mjVUK)
        (g$syntax-violation$8665$mjVUK
          g$who$11888$mjVUK
          g$msg$11889$mjVUK
          g$form$11890$mjVUK
          '#f))
       ((g$who$11891$mjVUK
          g$msg$11892$mjVUK
          g$form$11893$mjVUK
          g$subform$11894$mjVUK)
        (g$syntax-violation*$8664$mjVUK
          g$who$11891$mjVUK
          g$msg$11892$mjVUK
          g$form$11893$mjVUK
          (g$make-syntax-violation$6444$mjVUK
            (g$syntax->datum$8668$mjVUK g$form$11893$mjVUK)
            (g$syntax->datum$8668$mjVUK g$subform$11894$mjVUK))))))
   (g$identifier?$8666$mjVUK
     g$identifier?$12184$mjVUK
     (case-lambda ((g$x$11895$mjVUK) (g$id?$8274$mjVUK g$x$11895$mjVUK))))
   (g$datum->syntax$8667$mjVUK
     g$datum->syntax$12185$mjVUK
     (case-lambda
       ((g$id$11896$mjVUK g$datum$11897$mjVUK)
        (if (g$id?$8274$mjVUK g$id$11896$mjVUK)
          (g$datum->stx$8257$mjVUK g$id$11896$mjVUK g$datum$11897$mjVUK)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11896$mjVUK)))))
   (g$syntax->datum$8668$mjVUK
     g$syntax->datum$12186$mjVUK
     (case-lambda
       ((g$x$11898$mjVUK) (g$stx->datum$8285$mjVUK g$x$11898$mjVUK))))
   (g$compile-r6rs-top-level$8669$mjVUK
     g$compile-r6rs-top-level$12187$mjVUK
     (case-lambda
       ((g$x*$11899$mjVUK)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8613$mjVUK g$x*$11899$mjVUK)))
          (case-lambda
            ((g$lib*$11902$mjVUK g$invoke-code$11903$mjVUK)
             ((case-lambda
                ((g$invoke-code$11904$mjVUK g$lib*$11905$mjVUK)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$5603$mjVUK
                        g$invoke-library$8084$mjVUK
                        g$lib*$11905$mjVUK)
                      (eval-core
                        (g$expanded->core$7784$mjVUK
                          g$invoke-code$11904$mjVUK)))))))
              g$invoke-code$11903$mjVUK
              g$lib*$11902$mjVUK)))))))
   (g$pre-compile-r6rs-top-level$8670$mjVUK
     g$pre-compile-r6rs-top-level$12188$mjVUK
     (case-lambda
       ((g$x*$11906$mjVUK)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8613$mjVUK g$x*$11906$mjVUK)))
          (case-lambda
            ((g$lib*$11909$mjVUK g$invoke-code$11910$mjVUK)
             ((case-lambda
                ((g$invoke-code$11911$mjVUK g$lib*$11912$mjVUK)
                 (begin
                   (g$for-each$5603$mjVUK
                     g$invoke-library$8084$mjVUK
                     g$lib*$11912$mjVUK)
                   (compile-core
                     (g$expanded->core$7784$mjVUK g$invoke-code$11911$mjVUK)))))
              g$invoke-code$11910$mjVUK
              g$lib*$11909$mjVUK)))))))
   (g$new-interaction-environment$8671$mjVUK
     g$new-interaction-environment$12189$mjVUK
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$11913$mjVUK g$rib$11914$mjVUK)
            (begin
              ((case-lambda
                 ((g$subst$11915$mjVUK)
                  (begin
                    (g$set-rib-sym*!$8229$mjVUK
                      g$rib$11914$mjVUK
                      (g$map$5602$mjVUK car g$subst$11915$mjVUK))
                    (g$set-rib-mark**!$8230$mjVUK
                      g$rib$11914$mjVUK
                      (g$map$5602$mjVUK
                        (case-lambda ((g$x$11916$mjVUK) g$top-mark*$8211$mjVUK))
                        g$subst$11915$mjVUK))
                    (g$set-rib-label*!$8231$mjVUK
                      g$rib$11914$mjVUK
                      (g$map$5602$mjVUK cdr g$subst$11915$mjVUK)))))
               (g$library-subst$8041$mjVUK g$lib$11913$mjVUK))
              (g$make-interaction-env$8630$mjVUK g$rib$11914$mjVUK '() '()))))
         (g$find-library-by-name$8077$mjVUK '(ironscheme))
         (g$make-empty-rib$8234$mjVUK)))))
   (g$interaction-environment$8672$mjVUK
     g$interaction-environment$12190$mjVUK
     ((case-lambda
        ((g$e$11917$mjVUK)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11918$mjVUK)
                (if g$t$11918$mjVUK
                  g$t$11918$mjVUK
                  (begin
                    '#f
                    (begin
                      (set! g$e$11917$mjVUK
                        (g$new-interaction-environment$8671$mjVUK))
                      g$e$11917$mjVUK)))))
             g$e$11917$mjVUK)))))
      '#f))
   (g$top-level-context$8673$mjVUK
     g$top-level-context$12191$mjVUK
     (g$make-parameter$7536$mjVUK '#f)))
  (g$current-library-expander$8074$mjVUK g$library-expander$8649$mjVUK))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7781$mjVUK
      (case-lambda
        ((g$x$12255$mjVUK)
         ((case-lambda
            ((g$t$12256$mjVUK) (if g$t$12256$mjVUK (cdr g$t$12256$mjVUK) '#f)))
          (g$assq$5590$mjVUK
            g$x$12255$mjVUK
            '((ellipsis-map . g$ellipsis-map$12076$mjVUK)
              (make-list . g$make-list$5585$mjVUK)
              (last-pair . g$last-pair$5584$mjVUK)
              (ironscheme-build . g$ironscheme-build$12247$mjVUK)
              (syntax-error . g$syntax-error$12180$mjVUK)
              (syntax-dispatch . g$syntax-dispatch$12071$mjVUK)
              (compile-system-libraries
                .
                g$compile-system-libraries$12250$mjVUK)
              (compile->closure . g$compile->closure$12252$mjVUK)
              (compile . g$compile$12251$mjVUK)
              (load . g$load$12246$mjVUK)
              (interaction-environment . g$interaction-environment$12190$mjVUK)
              (string-ci>? . g$string-ci>?$6594$mjVUK)
              (string-ci>=? . g$string-ci>=?$6596$mjVUK)
              (string-ci=? . g$string-ci=?$6592$mjVUK)
              (string-ci<? . g$string-ci<?$6593$mjVUK)
              (string-ci<=? . g$string-ci<=?$6595$mjVUK)
              (char-ci>? . g$char-ci>?$6599$mjVUK)
              (char-ci>=? . g$char-ci>=?$6601$mjVUK)
              (char-ci=? . g$char-ci=?$6597$mjVUK)
              (char-ci<? . g$char-ci<?$6598$mjVUK)
              (char-ci<=? . g$char-ci<=?$6600$mjVUK)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$12009$mjVUK)
              (variable-transformer? . g$variable-transformer?$12008$mjVUK)
              (make-variable-transformer
                .
                g$make-variable-transformer$12006$mjVUK)
              (identifier? . g$identifier?$12184$mjVUK)
              (generate-temporaries . g$generate-temporaries$12173$mjVUK)
              (free-identifier=? . g$free-identifier=?$12174$mjVUK)
              (syntax->datum . g$syntax->datum$12186$mjVUK)
              (datum->syntax . g$datum->syntax$12185$mjVUK)
              (bound-identifier=? . g$bound-identifier=?$12175$mjVUK)
              (delete-file . g$delete-file$6124$mjVUK)
              (file-exists? . g$file-exists?$6123$mjVUK)
              (list-sort . g$list-sort$6519$mjVUK)
              (make-eqv-hashtable . g$make-eqv-hashtable$6106$mjVUK)
              (make-eq-hashtable . g$make-eq-hashtable$6105$mjVUK)
              (hashtable-update! . g$hashtable-update!$6112$mjVUK)
              (hashtable-size . g$hashtable-size$6107$mjVUK)
              (hashtable-set! . g$hashtable-set!$6109$mjVUK)
              (hashtable-ref . g$hashtable-ref$6108$mjVUK)
              (hashtable-delete! . g$hashtable-delete!$6110$mjVUK)
              (hashtable-contains? . g$hashtable-contains?$6111$mjVUK)
              (hashtable-clear! . g$hashtable-clear!$6113$mjVUK)
              (call-with-output-file . g$call-with-output-file$6955$mjVUK)
              (call-with-input-file . g$call-with-input-file$6954$mjVUK)
              (write-char . g$write-char$6951$mjVUK)
              (with-output-to-file . g$with-output-to-file$6953$mjVUK)
              (with-input-from-file . g$with-input-from-file$6952$mjVUK)
              (read-char . g$read-char$6950$mjVUK)
              (peek-char . g$peek-char$6949$mjVUK)
              (newline . g$newline$6956$mjVUK)
              (port? . g$port?$6904$mjVUK)
              (open-string-output-port . g$open-string-output-port$6903$mjVUK)
              (make-i/o-write-error . g$make-i/o-write-error$6819$mjVUK)
              (make-i/o-read-error . g$make-i/o-read-error$6813$mjVUK)
              (make-i/o-port-error . g$make-i/o-port-error$6865$mjVUK)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6825$mjVUK)
              (make-i/o-filename-error . g$make-i/o-filename-error$6833$mjVUK)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6841$mjVUK)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6847$mjVUK)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6859$mjVUK)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6853$mjVUK)
              (make-i/o-error . g$make-i/o-error$6807$mjVUK)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6879$mjVUK)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6873$mjVUK)
              (i/o-write-error? . g$i/o-write-error?$6820$mjVUK)
              (i/o-read-error? . g$i/o-read-error?$6814$mjVUK)
              (i/o-port-error? . g$i/o-port-error?$6867$mjVUK)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6827$mjVUK)
              (i/o-error-position . g$i/o-error-position$6828$mjVUK)
              (i/o-filename-error? . g$i/o-filename-error?$6835$mjVUK)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6842$mjVUK)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6848$mjVUK)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6860$mjVUK)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6854$mjVUK)
              (i/o-error? . g$i/o-error?$6808$mjVUK)
              (i/o-error-port . g$i/o-error-port$6868$mjVUK)
              (i/o-error-filename . g$i/o-error-filename$6836$mjVUK)
              (i/o-encoding-error? . g$i/o-encoding-error?$6881$mjVUK)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6882$mjVUK)
              (i/o-decoding-error? . g$i/o-decoding-error?$6874$mjVUK)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$6905$mjVUK)
              (call-with-port . g$call-with-port$6906$mjVUK)
              (scheme-report-environment
                .
                g$scheme-report-environment$12163$mjVUK)
              (quotient . g$quotient$6486$mjVUK)
              (null-environment . g$null-environment$12162$mjVUK)
              (remainder . g$remainder$6487$mjVUK)
              (modulo . g$modulo$6488$mjVUK)
              (inexact->exact . g$inexact->exact$6483$mjVUK)
              (force . g$force$6490$mjVUK)
              (exact->inexact . g$exact->inexact$6484$mjVUK)
              (command-line . g$command-line$12243$mjVUK)
              (remove . g$remove$5607$mjVUK)
              (remv . g$remv$5608$mjVUK)
              (remp . g$remp$5588$mjVUK)
              (remq . g$remq$5609$mjVUK)
              (partition . g$partition$5587$mjVUK)
              (memv . g$memv$5595$mjVUK)
              (memq . g$memq$5594$mjVUK)
              (memp . g$memp$5597$mjVUK)
              (member . g$member$5596$mjVUK)
              (exists . g$exists$5601$mjVUK)
              (for-all . g$for-all$5600$mjVUK)
              (fold-right . g$fold-right$5606$mjVUK)
              (fold-left . g$fold-left$5605$mjVUK)
              (find . g$find$5586$mjVUK)
              (filter . g$filter$5589$mjVUK)
              (cons* . g$cons*$5604$mjVUK)
              (assv . g$assv$5591$mjVUK)
              (assq . g$assq$5590$mjVUK)
              (assp . g$assp$5593$mjVUK)
              (assoc . g$assoc$5592$mjVUK)
              (eval . g$eval$12165$mjVUK)
              (environment . g$environment$12161$mjVUK)
              (make-enumeration . g$make-enumeration$7088$mjVUK)
              (enum-set=? . g$enum-set=?$7095$mjVUK)
              (enum-set-universe . g$enum-set-universe$7089$mjVUK)
              (enum-set-union . g$enum-set-union$7096$mjVUK)
              (enum-set-subset? . g$enum-set-subset?$7094$mjVUK)
              (enum-set-projection . g$enum-set-projection$7100$mjVUK)
              (enum-set-member? . g$enum-set-member?$7093$mjVUK)
              (enum-set-intersection . g$enum-set-intersection$7097$mjVUK)
              (enum-set-indexer . g$enum-set-indexer$7090$mjVUK)
              (enum-set-difference . g$enum-set-difference$7098$mjVUK)
              (enum-set-constructor . g$enum-set-constructor$7091$mjVUK)
              (enum-set-complement . g$enum-set-complement$7099$mjVUK)
              (enum-set->list . g$enum-set->list$7092$mjVUK)
              (who-condition? . g$who-condition?$6420$mjVUK)
              (warning? . g$warning?$6381$mjVUK)
              (violation? . g$violation?$6399$mjVUK)
              (undefined-violation? . g$undefined-violation?$6455$mjVUK)
              (syntax-violation? . g$syntax-violation?$6447$mjVUK)
              (syntax-violation-subform . g$syntax-violation-subform$6449$mjVUK)
              (syntax-violation-form . g$syntax-violation-form$6448$mjVUK)
              (syntax-violation . g$syntax-violation$12183$mjVUK)
              (serious-condition? . g$serious-condition?$6387$mjVUK)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6427$mjVUK)
              (message-condition? . g$message-condition?$6374$mjVUK)
              (make-who-condition . g$make-who-condition$6418$mjVUK)
              (make-warning . g$make-warning$6380$mjVUK)
              (make-violation . g$make-violation$6398$mjVUK)
              (make-undefined-violation . g$make-undefined-violation$6454$mjVUK)
              (make-syntax-violation . g$make-syntax-violation$6444$mjVUK)
              (make-serious-condition . g$make-serious-condition$6386$mjVUK)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6426$mjVUK)
              (make-message-condition . g$make-message-condition$6372$mjVUK)
              (make-lexical-violation . g$make-lexical-violation$6438$mjVUK)
              (make-irritants-condition . g$make-irritants-condition$6410$mjVUK)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6432$mjVUK)
              (make-error . g$make-error$6392$mjVUK)
              (make-assertion-violation . g$make-assertion-violation$6404$mjVUK)
              (lexical-violation? . g$lexical-violation?$6439$mjVUK)
              (irritants-condition? . g$irritants-condition?$6412$mjVUK)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6433$mjVUK)
              (error? . g$error?$6393$mjVUK)
              (condition-who . g$condition-who$6421$mjVUK)
              (condition-message . g$condition-message$6375$mjVUK)
              (condition-irritants . g$condition-irritants$6413$mjVUK)
              (assertion-violation? . g$assertion-violation?$6405$mjVUK)
              (native-endianness . g$native-endianness$6237$mjVUK)
              (bytevector-u64-set! . g$bytevector-u64-set!$6258$mjVUK)
              (bytevector-u64-ref . g$bytevector-u64-ref$6254$mjVUK)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6260$mjVUK)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6256$mjVUK)
              (bytevector-u32-set! . g$bytevector-u32-set!$6250$mjVUK)
              (bytevector-u32-ref . g$bytevector-u32-ref$6246$mjVUK)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6252$mjVUK)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6248$mjVUK)
              (bytevector-u16-set! . g$bytevector-u16-set!$6242$mjVUK)
              (bytevector-u16-ref . g$bytevector-u16-ref$6238$mjVUK)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6244$mjVUK)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6240$mjVUK)
              (bytevector-s64-set! . g$bytevector-s64-set!$6259$mjVUK)
              (bytevector-s64-ref . g$bytevector-s64-ref$6255$mjVUK)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6261$mjVUK)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6257$mjVUK)
              (bytevector-s32-set! . g$bytevector-s32-set!$6251$mjVUK)
              (bytevector-s32-ref . g$bytevector-s32-ref$6247$mjVUK)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6253$mjVUK)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6249$mjVUK)
              (bytevector-s16-set! . g$bytevector-s16-set!$6243$mjVUK)
              (bytevector-s16-ref . g$bytevector-s16-ref$6239$mjVUK)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6245$mjVUK)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6241$mjVUK)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6264$mjVUK)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6262$mjVUK)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6265$mjVUK)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6263$mjVUK)
              (no-nans-violation? . g$no-nans-violation?$6722$mjVUK)
              (no-infinities-violation? . g$no-infinities-violation?$6716$mjVUK)
              (make-no-nans-violation . g$make-no-nans-violation$6721$mjVUK)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6715$mjVUK)
              (fxrotate-bit-field . g$fxrotate-bit-field$6698$mjVUK)
              (fxif . g$fxif$6692$mjVUK)
              (fxcopy-bit-field . g$fxcopy-bit-field$6695$mjVUK)
              (fxcopy-bit . g$fxcopy-bit$6693$mjVUK)
              (fxbit-field . g$fxbit-field$6694$mjVUK)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6697$mjVUK)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6696$mjVUK)
              (fx-/carry . g$fx-/carry$6690$mjVUK)
              (fx+/carry . g$fx+/carry$6691$mjVUK)
              (fx*/carry . g$fx*/carry$6689$mjVUK)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6639$mjVUK)
              (bitwise-if . g$bitwise-if$6633$mjVUK)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6636$mjVUK)
              (bitwise-copy-bit . g$bitwise-copy-bit$6634$mjVUK)
              (bitwise-bit-field . g$bitwise-bit-field$6635$mjVUK)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6638$mjVUK)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6637$mjVUK)
              (zero? . g$zero?$5857$mjVUK)
              (vector-map . g$vector-map$5879$mjVUK)
              (vector-for-each . g$vector-for-each$5880$mjVUK)
              (symbol=? . g$symbol=?$5869$mjVUK)
              (string>? . g$string>?$5866$mjVUK)
              (string>=? . g$string>=?$5868$mjVUK)
              (string=? . g$string=?$5864$mjVUK)
              (string<? . g$string<?$5865$mjVUK)
              (string<=? . g$string<=?$5867$mjVUK)
              (string-for-each . g$string-for-each$5881$mjVUK)
              (rationalize . g$rationalize$5876$mjVUK)
              (positive? . g$positive?$5855$mjVUK)
              (odd? . g$odd?$5859$mjVUK)
              (negative? . g$negative?$5856$mjVUK)
              (min . g$min$5861$mjVUK)
              (max . g$max$5860$mjVUK)
              (map . g$map$5602$mjVUK)
              (list-tail . g$list-tail$5582$mjVUK)
              (list-ref . g$list-ref$5583$mjVUK)
              (lcm . g$lcm$5863$mjVUK)
              (gcd . g$gcd$5862$mjVUK)
              (for-each . g$for-each$5603$mjVUK)
              (even? . g$even?$5858$mjVUK)
              (char>? . g$char>?$5873$mjVUK)
              (char>=? . g$char>=?$5875$mjVUK)
              (char=? . g$char=?$5871$mjVUK)
              (char<? . g$char<?$5872$mjVUK)
              (char<=? . g$char<=?$5874$mjVUK)
              (cddddr . g$cddddr$5854$mjVUK)
              (cdddar . g$cdddar$5853$mjVUK)
              (cddadr . g$cddadr$5852$mjVUK)
              (cddaar . g$cddaar$5851$mjVUK)
              (cdaddr . g$cdaddr$5850$mjVUK)
              (cdadar . g$cdadar$5849$mjVUK)
              (cdaadr . g$cdaadr$5848$mjVUK)
              (cdaaar . g$cdaaar$5847$mjVUK)
              (cadddr . g$cadddr$5846$mjVUK)
              (caddar . g$caddar$5845$mjVUK)
              (cadadr . g$cadadr$5844$mjVUK)
              (cadaar . g$cadaar$5843$mjVUK)
              (caaddr . g$caaddr$5842$mjVUK)
              (caadar . g$caadar$5841$mjVUK)
              (caaadr . g$caaadr$5840$mjVUK)
              (caaaar . g$caaaar$5839$mjVUK)
              (cdddr . g$cdddr$5838$mjVUK)
              (cddar . g$cddar$5837$mjVUK)
              (cdadr . g$cdadr$5836$mjVUK)
              (cdaar . g$cdaar$5835$mjVUK)
              (caddr . g$caddr$5834$mjVUK)
              (cadar . g$cadar$5833$mjVUK)
              (caadr . g$caadr$5832$mjVUK)
              (caaar . g$caaar$5831$mjVUK)
              (cddr . g$cddr$5830$mjVUK)
              (cdar . g$cdar$5829$mjVUK)
              (cadr . g$cadr$5828$mjVUK)
              (caar . g$caar$5827$mjVUK)
              (boolean=? . g$boolean=?$5870$mjVUK)
              (enum-set? . g$enum?$7069$mjVUK)
              (make-promise . g$make-promise$6489$mjVUK)
              (load/args . g$load/args$12245$mjVUK)
              (printf . g$printf$7124$mjVUK)
              (fprintf . g$fprintf$7125$mjVUK)
              (format . g$format$7126$mjVUK)
              (trace-printer . g$trace-printer$12242$mjVUK)
              (make-traced-macro . g$make-traced-macro$7130$mjVUK)
              (assertion-error . g$assertion-error$12179$mjVUK)
              (make-parameter . g$make-parameter$7536$mjVUK)
              (environment-bindings . g$environment-bindings$12157$mjVUK)
              (environment-symbols . g$environment-symbols$12160$mjVUK)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$12156$mjVUK)
              (library-path . g$library-path$8066$mjVUK)
              (make-compile-time-value . g$make-compile-time-value$12007$mjVUK)
              (expand->core . g$expand->core$12166$mjVUK)
              (expand . g$expand$12164$mjVUK)
              (convert->cps . g$convert->cps$7431$mjVUK)
              (installed-libraries . g$installed-libraries$8087$mjVUK)
              (uninstall-library . g$uninstall-library$8078$mjVUK)))))))
    (g$install-library$8082$mjVUK
      'g$13546$mjVUK
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$13483$mjVUK)
        (cosh . g$13482$mjVUK)
        (sinh . g$13481$mjVUK)
        (make-guid . g$13480$mjVUK)
        (unspecified? . g$13479$mjVUK)
        (make-list . g$6578$mjVUK)
        (last-pair . g$6577$mjVUK)
        (load-r5rs . g$13478$mjVUK)
        (license . g$13477$mjVUK)
        (stacktrace . g$13476$mjVUK)
        (ironscheme-build . g$12917$mjVUK)
        (set-symbol-value! . g$13463$mjVUK)
        (symbol-value . g$13462$mjVUK)
        (symbol-bound? . g$13461$mjVUK)
        (ungensym . g$13460$mjVUK)
        (gensym . g$13459$mjVUK)
        (void . g$13458$mjVUK)
        (compile-system-libraries . g$12920$mjVUK)
        (compile->closure . g$12922$mjVUK)
        (compile . g$12921$mjVUK)
        (load . g$12916$mjVUK)
        (interaction-environment . g$9922$mjVUK)
        (string-upcase . g$13454$mjVUK)
        (string-titlecase . g$13453$mjVUK)
        (string-normalize-nfkd . g$13452$mjVUK)
        (string-normalize-nfkc . g$13451$mjVUK)
        (string-normalize-nfd . g$13450$mjVUK)
        (string-normalize-nfc . g$13449$mjVUK)
        (string-foldcase . g$13448$mjVUK)
        (string-downcase . g$13447$mjVUK)
        (string-ci>? . g$7746$mjVUK)
        (string-ci>=? . g$7748$mjVUK)
        (string-ci=? . g$7744$mjVUK)
        (string-ci<? . g$7745$mjVUK)
        (string-ci<=? . g$7747$mjVUK)
        (char-whitespace? . g$13446$mjVUK)
        (char-upper-case? . g$13445$mjVUK)
        (char-title-case? . g$13444$mjVUK)
        (char-numeric? . g$13443$mjVUK)
        (char-lower-case? . g$13442$mjVUK)
        (char-general-category . g$13441$mjVUK)
        (char-upcase . g$13440$mjVUK)
        (char-titlecase . g$13439$mjVUK)
        (char-foldcase . g$13438$mjVUK)
        (char-downcase . g$13437$mjVUK)
        (char-ci>? . g$7785$mjVUK)
        (char-ci>=? . g$7787$mjVUK)
        (char-ci=? . g$7783$mjVUK)
        (char-ci<? . g$7784$mjVUK)
        (char-ci<=? . g$7786$mjVUK)
        (char-alphabetic? . g$13436$mjVUK)
        (make-variable-transformer . g$9516$mjVUK)
        (identifier? . g$9916$mjVUK)
        (generate-temporaries . g$9905$mjVUK)
        (free-identifier=? . g$9906$mjVUK)
        (syntax->datum . g$9918$mjVUK)
        (datum->syntax . g$9917$mjVUK)
        (bound-identifier=? . g$9907$mjVUK)
        (record-type-descriptor? . g$13435$mjVUK)
        (record-predicate . g$13434$mjVUK)
        (record-mutator . g$13433$mjVUK)
        (record-constructor . g$13432$mjVUK)
        (record-accessor . g$13431$mjVUK)
        (make-record-type-descriptor . g$13430$mjVUK)
        (make-record-constructor-descriptor . g$13429$mjVUK)
        (record? . g$13428$mjVUK)
        (record-type-uid . g$13427$mjVUK)
        (record-type-sealed? . g$13426$mjVUK)
        (record-type-parent . g$13425$mjVUK)
        (record-type-opaque? . g$13424$mjVUK)
        (record-type-name . g$13423$mjVUK)
        (record-type-generative? . g$13422$mjVUK)
        (record-type-field-names . g$13421$mjVUK)
        (record-rtd . g$13420$mjVUK)
        (record-field-mutable? . g$13419$mjVUK)
        (delete-file . g$7320$mjVUK)
        (file-exists? . g$7319$mjVUK)
        (vector-sort! . g$13418$mjVUK)
        (vector-sort . g$13417$mjVUK)
        (list-sort . g$7686$mjVUK)
        (symbol-hash . g$13416$mjVUK)
        (string-ci-hash . g$13415$mjVUK)
        (string-hash . g$13414$mjVUK)
        (equal-hash . g$13413$mjVUK)
        (hashtable-equivalence-function . g$13412$mjVUK)
        (make-hashtable . g$13411$mjVUK)
        (hashtable-hash-function . g$13410$mjVUK)
        (make-eqv-hashtable . g$7288$mjVUK)
        (make-eq-hashtable . g$7287$mjVUK)
        (hashtable? . g$13409$mjVUK)
        (hashtable-update! . g$7294$mjVUK)
        (hashtable-size . g$7289$mjVUK)
        (hashtable-set! . g$7291$mjVUK)
        (hashtable-ref . g$7290$mjVUK)
        (hashtable-mutable? . g$13408$mjVUK)
        (hashtable-keys . g$13407$mjVUK)
        (hashtable-entries . g$13406$mjVUK)
        (hashtable-delete! . g$7292$mjVUK)
        (hashtable-copy . g$13405$mjVUK)
        (hashtable-contains? . g$7293$mjVUK)
        (hashtable-clear! . g$7295$mjVUK)
        (call-with-output-file . g$8171$mjVUK)
        (call-with-input-file . g$8170$mjVUK)
        (write-char . g$8152$mjVUK)
        (write . g$13404$mjVUK)
        (with-output-to-file . g$8169$mjVUK)
        (with-input-from-file . g$8168$mjVUK)
        (read-char . g$8151$mjVUK)
        (read . g$13403$mjVUK)
        (peek-char . g$8150$mjVUK)
        (open-output-file . g$13402$mjVUK)
        (open-input-file . g$13401$mjVUK)
        (newline . g$8172$mjVUK)
        (display . g$13400$mjVUK)
        (close-output-port . g$13399$mjVUK)
        (close-input-port . g$13398$mjVUK)
        (eof-object? . g$13397$mjVUK)
        (eof-object . g$13396$mjVUK)
        (current-error-port . g$13395$mjVUK)
        (current-output-port . g$13394$mjVUK)
        (current-input-port . g$13393$mjVUK)
        (output-port? . g$13392$mjVUK)
        (input-port? . g$13391$mjVUK)
        (utf-8-codec . g$13390$mjVUK)
        (utf-16-codec . g$13389$mjVUK)
        (transcoder-error-handling-mode . g$13388$mjVUK)
        (transcoder-eol-style . g$13387$mjVUK)
        (transcoder-codec . g$13386$mjVUK)
        (transcoded-port . g$13385$mjVUK)
        (textual-port? . g$13384$mjVUK)
        (string->bytevector . g$13383$mjVUK)
        (standard-output-port . g$13382$mjVUK)
        (standard-input-port . g$13381$mjVUK)
        (standard-error-port . g$13380$mjVUK)
        (set-port-position! . g$13379$mjVUK)
        (put-u8 . g$13378$mjVUK)
        (put-string . g$13377$mjVUK)
        (put-datum . g$13376$mjVUK)
        (put-char . g$13375$mjVUK)
        (put-bytevector . g$13374$mjVUK)
        (port? . g$8137$mjVUK)
        (port-transcoder . g$13373$mjVUK)
        (port-position . g$13372$mjVUK)
        (port-has-set-port-position!? . g$13371$mjVUK)
        (port-has-port-position? . g$13370$mjVUK)
        (port-eof? . g$13369$mjVUK)
        (output-port-buffer-mode . g$13368$mjVUK)
        (open-string-output-port . g$8136$mjVUK)
        (open-string-input-port . g$13367$mjVUK)
        (open-file-output-port . g$13366$mjVUK)
        (open-file-input/output-port . g$13365$mjVUK)
        (open-file-input-port . g$13364$mjVUK)
        (open-bytevector-output-port . g$13363$mjVUK)
        (open-bytevector-input-port . g$13362$mjVUK)
        (native-transcoder . g$13361$mjVUK)
        (native-eol-style . g$13360$mjVUK)
        (make-transcoder . g$13359$mjVUK)
        (latin-1-codec . g$13358$mjVUK)
        (make-i/o-write-error . g$7992$mjVUK)
        (make-i/o-read-error . g$7978$mjVUK)
        (make-i/o-port-error . g$8097$mjVUK)
        (make-i/o-invalid-position-error . g$8007$mjVUK)
        (make-i/o-filename-error . g$8024$mjVUK)
        (make-i/o-file-protection-error . g$8040$mjVUK)
        (make-i/o-file-is-read-only-error . g$8054$mjVUK)
        (make-i/o-file-does-not-exist-error . g$8082$mjVUK)
        (make-i/o-file-already-exists-error . g$8068$mjVUK)
        (make-i/o-error . g$7964$mjVUK)
        (make-i/o-encoding-error . g$8128$mjVUK)
        (make-i/o-decoding-error . g$8113$mjVUK)
        (make-custom-textual-output-port . g$13357$mjVUK)
        (make-custom-textual-input/output-port . g$13356$mjVUK)
        (make-custom-textual-input-port . g$13355$mjVUK)
        (make-custom-binary-output-port . g$13354$mjVUK)
        (make-custom-binary-input/output-port . g$13353$mjVUK)
        (make-custom-binary-input-port . g$13352$mjVUK)
        (make-bytevector . g$13351$mjVUK)
        (lookahead-u8 . g$13350$mjVUK)
        (lookahead-char . g$13349$mjVUK)
        (i/o-write-error? . g$7993$mjVUK)
        (i/o-read-error? . g$7979$mjVUK)
        (i/o-port-error? . g$8099$mjVUK)
        (i/o-invalid-position-error? . g$8009$mjVUK)
        (i/o-error-position . g$8010$mjVUK)
        (i/o-filename-error? . g$8026$mjVUK)
        (i/o-file-protection-error? . g$8041$mjVUK)
        (i/o-file-is-read-only-error? . g$8055$mjVUK)
        (i/o-file-does-not-exist-error? . g$8083$mjVUK)
        (i/o-file-already-exists-error? . g$8069$mjVUK)
        (i/o-error? . g$7965$mjVUK)
        (i/o-error-port . g$8100$mjVUK)
        (i/o-error-filename . g$8027$mjVUK)
        (i/o-encoding-error? . g$8130$mjVUK)
        (i/o-encoding-error-char . g$8131$mjVUK)
        (i/o-decoding-error? . g$8114$mjVUK)
        (get-u8 . g$13348$mjVUK)
        (get-string-n! . g$13347$mjVUK)
        (get-string-n . g$13346$mjVUK)
        (get-string-all . g$13345$mjVUK)
        (get-line . g$13344$mjVUK)
        (get-datum . g$13343$mjVUK)
        (get-char . g$13342$mjVUK)
        (get-bytevector-some . g$13341$mjVUK)
        (get-bytevector-n! . g$13340$mjVUK)
        (get-bytevector-n . g$13339$mjVUK)
        (get-bytevector-all . g$13338$mjVUK)
        (flush-output-port . g$13337$mjVUK)
        (close-port . g$13336$mjVUK)
        (call-with-string-output-port . g$8138$mjVUK)
        (call-with-port . g$8139$mjVUK)
        (call-with-bytevector-output-port . g$13335$mjVUK)
        (bytevector->string . g$13334$mjVUK)
        (buffer-mode? . g$13333$mjVUK)
        (binary-port? . g$13332$mjVUK)
        (scheme-report-environment . g$9895$mjVUK)
        (quotient . g$7665$mjVUK)
        (null-environment . g$9894$mjVUK)
        (remainder . g$7666$mjVUK)
        (modulo . g$7667$mjVUK)
        (inexact->exact . g$7662$mjVUK)
        (force . g$7669$mjVUK)
        (exact->inexact . g$7663$mjVUK)
        (exit . g$13331$mjVUK)
        (command-line . g$12913$mjVUK)
        (string-fill! . g$13330$mjVUK)
        (string-set! . g$13329$mjVUK)
        (set-cdr! . g$13328$mjVUK)
        (set-car! . g$13327$mjVUK)
        (remove . g$6600$mjVUK)
        (remv . g$6601$mjVUK)
        (remp . g$6581$mjVUK)
        (remq . g$6602$mjVUK)
        (partition . g$6580$mjVUK)
        (memv . g$6588$mjVUK)
        (memq . g$6587$mjVUK)
        (memp . g$6590$mjVUK)
        (member . g$6589$mjVUK)
        (exists . g$6594$mjVUK)
        (for-all . g$6593$mjVUK)
        (fold-right . g$6599$mjVUK)
        (fold-left . g$6598$mjVUK)
        (find . g$6579$mjVUK)
        (filter . g$6582$mjVUK)
        (cons* . g$6597$mjVUK)
        (assv . g$6584$mjVUK)
        (assq . g$6583$mjVUK)
        (assp . g$6586$mjVUK)
        (assoc . g$6585$mjVUK)
        (with-exception-handler . g$13326$mjVUK)
        (raise-continuable . g$13325$mjVUK)
        (raise . g$13324$mjVUK)
        (eval . g$9897$mjVUK)
        (environment . g$9893$mjVUK)
        (make-enumeration . g$8236$mjVUK)
        (enum-set=? . g$8243$mjVUK)
        (enum-set-universe . g$8237$mjVUK)
        (enum-set-union . g$8244$mjVUK)
        (enum-set-subset? . g$8242$mjVUK)
        (enum-set-projection . g$8248$mjVUK)
        (enum-set-member? . g$8241$mjVUK)
        (enum-set-intersection . g$8245$mjVUK)
        (enum-set-indexer . g$8238$mjVUK)
        (enum-set-difference . g$8246$mjVUK)
        (enum-set-constructor . g$8239$mjVUK)
        (enum-set-complement . g$8247$mjVUK)
        (enum-set->list . g$8240$mjVUK)
        (who-condition? . g$7574$mjVUK)
        (warning? . g$7485$mjVUK)
        (violation? . g$7527$mjVUK)
        (undefined-violation? . g$7651$mjVUK)
        (syntax-violation? . g$7635$mjVUK)
        (syntax-violation-subform . g$7637$mjVUK)
        (syntax-violation-form . g$7636$mjVUK)
        (syntax-violation . g$9915$mjVUK)
        (simple-conditions . g$13323$mjVUK)
        (serious-condition? . g$7499$mjVUK)
        (non-continuable-violation? . g$7589$mjVUK)
        (message-condition? . g$7470$mjVUK)
        (make-who-condition . g$7572$mjVUK)
        (make-warning . g$7484$mjVUK)
        (make-violation . g$7526$mjVUK)
        (make-undefined-violation . g$7650$mjVUK)
        (make-syntax-violation . g$7632$mjVUK)
        (make-serious-condition . g$7498$mjVUK)
        (make-non-continuable-violation . g$7588$mjVUK)
        (make-message-condition . g$7468$mjVUK)
        (make-lexical-violation . g$7616$mjVUK)
        (make-irritants-condition . g$7555$mjVUK)
        (make-implementation-restriction-violation . g$7602$mjVUK)
        (make-error . g$7512$mjVUK)
        (make-assertion-violation . g$7540$mjVUK)
        (lexical-violation? . g$7617$mjVUK)
        (irritants-condition? . g$7557$mjVUK)
        (implementation-restriction-violation? . g$7603$mjVUK)
        (error? . g$7513$mjVUK)
        (condition-who . g$7575$mjVUK)
        (condition-predicate . g$13322$mjVUK)
        (condition-message . g$7471$mjVUK)
        (condition-irritants . g$7558$mjVUK)
        (condition-accessor . g$13321$mjVUK)
        (condition . g$13320$mjVUK)
        (assertion-violation? . g$7541$mjVUK)
        (condition? . g$13319$mjVUK)
        (utf32->string . g$13318$mjVUK)
        (utf16->string . g$13317$mjVUK)
        (utf8->string . g$13316$mjVUK)
        (uint-list->bytevector . g$13315$mjVUK)
        (u8-list->bytevector . g$13314$mjVUK)
        (string->utf8 . g$13313$mjVUK)
        (string->utf32 . g$13312$mjVUK)
        (string->utf16 . g$13311$mjVUK)
        (sint-list->bytevector . g$13310$mjVUK)
        (native-endianness . g$7326$mjVUK)
        (bytevector? . g$13309$mjVUK)
        (bytevector=? . g$13308$mjVUK)
        (bytevector-uint-set! . g$13307$mjVUK)
        (bytevector-uint-ref . g$13306$mjVUK)
        (bytevector-u8-set! . g$13305$mjVUK)
        (bytevector-u8-ref . g$13304$mjVUK)
        (bytevector-u64-set! . g$7347$mjVUK)
        (bytevector-u64-ref . g$7343$mjVUK)
        (bytevector-u64-native-set! . g$7349$mjVUK)
        (bytevector-u64-native-ref . g$7345$mjVUK)
        (bytevector-u32-set! . g$7339$mjVUK)
        (bytevector-u32-ref . g$7335$mjVUK)
        (bytevector-u32-native-set! . g$7341$mjVUK)
        (bytevector-u32-native-ref . g$7337$mjVUK)
        (bytevector-u16-set! . g$7331$mjVUK)
        (bytevector-u16-ref . g$7327$mjVUK)
        (bytevector-u16-native-set! . g$7333$mjVUK)
        (bytevector-u16-native-ref . g$7329$mjVUK)
        (bytevector-sint-set! . g$13303$mjVUK)
        (bytevector-sint-ref . g$13302$mjVUK)
        (bytevector-s8-set! . g$13301$mjVUK)
        (bytevector-s8-ref . g$13300$mjVUK)
        (bytevector-s64-set! . g$7348$mjVUK)
        (bytevector-s64-ref . g$7344$mjVUK)
        (bytevector-s64-native-set! . g$7350$mjVUK)
        (bytevector-s64-native-ref . g$7346$mjVUK)
        (bytevector-s32-set! . g$7340$mjVUK)
        (bytevector-s32-ref . g$7336$mjVUK)
        (bytevector-s32-native-set! . g$7342$mjVUK)
        (bytevector-s32-native-ref . g$7338$mjVUK)
        (bytevector-s16-set! . g$7332$mjVUK)
        (bytevector-s16-ref . g$7328$mjVUK)
        (bytevector-s16-native-set! . g$7334$mjVUK)
        (bytevector-s16-native-ref . g$7330$mjVUK)
        (bytevector-length . g$13299$mjVUK)
        (bytevector-ieee-single-set! . g$13298$mjVUK)
        (bytevector-ieee-single-ref . g$13297$mjVUK)
        (bytevector-ieee-single-native-set! . g$7353$mjVUK)
        (bytevector-ieee-single-native-ref . g$7351$mjVUK)
        (bytevector-ieee-double-set! . g$13296$mjVUK)
        (bytevector-ieee-double-ref . g$13295$mjVUK)
        (bytevector-ieee-double-native-set! . g$7354$mjVUK)
        (bytevector-ieee-double-native-ref . g$7352$mjVUK)
        (bytevector-fill! . g$13294$mjVUK)
        (bytevector-copy! . g$13293$mjVUK)
        (bytevector-copy . g$13292$mjVUK)
        (bytevector->uint-list . g$13291$mjVUK)
        (bytevector->u8-list . g$13290$mjVUK)
        (bytevector->sint-list . g$13289$mjVUK)
        (no-nans-violation? . g$7950$mjVUK)
        (no-infinities-violation? . g$7936$mjVUK)
        (make-no-nans-violation . g$7949$mjVUK)
        (make-no-infinities-violation . g$7935$mjVUK)
        (real->flonum . g$13288$mjVUK)
        (flzero? . g$13287$mjVUK)
        (fltruncate . g$13286$mjVUK)
        (fltan . g$13285$mjVUK)
        (flsqrt . g$13284$mjVUK)
        (flsin . g$13283$mjVUK)
        (flround . g$13282$mjVUK)
        (flpositive? . g$13281$mjVUK)
        (flonum? . g$13280$mjVUK)
        (flodd? . g$13279$mjVUK)
        (flnumerator . g$13278$mjVUK)
        (flnegative? . g$13277$mjVUK)
        (flnan? . g$13276$mjVUK)
        (flmod0 . g$13275$mjVUK)
        (flmod . g$13274$mjVUK)
        (flmin . g$13273$mjVUK)
        (flmax . g$13272$mjVUK)
        (fllog . g$13271$mjVUK)
        (flinteger? . g$13270$mjVUK)
        (flinfinite? . g$13269$mjVUK)
        (flfloor . g$13268$mjVUK)
        (flfinite? . g$13267$mjVUK)
        (flexpt . g$13266$mjVUK)
        (flexp . g$13265$mjVUK)
        (fleven? . g$13264$mjVUK)
        (fldiv0-and-mod0 . g$13263$mjVUK)
        (fldiv0 . g$13262$mjVUK)
        (fldiv-and-mod . g$13261$mjVUK)
        (fldiv . g$13260$mjVUK)
        (fldenominator . g$13259$mjVUK)
        (flcos . g$13258$mjVUK)
        (flceiling . g$13257$mjVUK)
        (flatan . g$13256$mjVUK)
        (flasin . g$13255$mjVUK)
        (flacos . g$13254$mjVUK)
        (flabs . g$13253$mjVUK)
        (fl>? . g$13252$mjVUK)
        (fl>=? . g$13251$mjVUK)
        (fl=? . g$13250$mjVUK)
        (fl<? . g$13249$mjVUK)
        (fl<=? . g$13248$mjVUK)
        (fl/ . g$13247$mjVUK)
        (fl- . g$13246$mjVUK)
        (fl+ . g$13245$mjVUK)
        (fl* . g$13244$mjVUK)
        (fixnum->flonum . g$13243$mjVUK)
        (fxzero? . g$13242$mjVUK)
        (fxxor . g$13241$mjVUK)
        (fxrotate-bit-field . g$7882$mjVUK)
        (fxreverse-bit-field . g$13240$mjVUK)
        (fxpositive? . g$13239$mjVUK)
        (fxodd? . g$13238$mjVUK)
        (fxnot . g$13237$mjVUK)
        (fxnegative? . g$13236$mjVUK)
        (fxmod0 . g$13235$mjVUK)
        (fxmod . g$13234$mjVUK)
        (fxmin . g$13233$mjVUK)
        (fxmax . g$13232$mjVUK)
        (fxlength . g$13231$mjVUK)
        (fxior . g$13230$mjVUK)
        (fxif . g$7876$mjVUK)
        (fxfirst-bit-set . g$13229$mjVUK)
        (fxeven? . g$13228$mjVUK)
        (fxdiv0-and-mod0 . g$13227$mjVUK)
        (fxdiv0 . g$13226$mjVUK)
        (fxdiv-and-mod . g$13225$mjVUK)
        (fxdiv . g$13224$mjVUK)
        (fxcopy-bit-field . g$7879$mjVUK)
        (fxcopy-bit . g$7877$mjVUK)
        (fxbit-set? . g$13223$mjVUK)
        (fxbit-field . g$7878$mjVUK)
        (fxbit-count . g$13222$mjVUK)
        (fxarithmetic-shift-right . g$7881$mjVUK)
        (fxarithmetic-shift-left . g$7880$mjVUK)
        (fxarithmetic-shift . g$13221$mjVUK)
        (fxand . g$13220$mjVUK)
        (fx>? . g$13219$mjVUK)
        (fx>=? . g$13218$mjVUK)
        (fx=? . g$13217$mjVUK)
        (fx<? . g$13216$mjVUK)
        (fx<=? . g$13215$mjVUK)
        (fx-/carry . g$7874$mjVUK)
        (fx- . g$13214$mjVUK)
        (fx+/carry . g$7875$mjVUK)
        (fx+ . g$13213$mjVUK)
        (fx*/carry . g$7873$mjVUK)
        (fx* . g$13212$mjVUK)
        (greatest-fixnum . g$13211$mjVUK)
        (least-fixnum . g$13210$mjVUK)
        (fixnum-width . g$13209$mjVUK)
        (fixnum? . g$13208$mjVUK)
        (bitwise-rotate-bit-field . g$7847$mjVUK)
        (bitwise-reverse-bit-field . g$13207$mjVUK)
        (bitwise-length . g$13206$mjVUK)
        (bitwise-if . g$7841$mjVUK)
        (bitwise-first-bit-set . g$13205$mjVUK)
        (bitwise-copy-bit-field . g$7844$mjVUK)
        (bitwise-copy-bit . g$7842$mjVUK)
        (bitwise-bit-set? . g$13204$mjVUK)
        (bitwise-bit-field . g$7843$mjVUK)
        (bitwise-bit-count . g$13203$mjVUK)
        (bitwise-xor . g$13202$mjVUK)
        (bitwise-ior . g$13201$mjVUK)
        (bitwise-and . g$13200$mjVUK)
        (bitwise-not . g$13199$mjVUK)
        (bitwise-arithmetic-shift-right . g$7846$mjVUK)
        (bitwise-arithmetic-shift-left . g$7845$mjVUK)
        (bitwise-arithmetic-shift . g$13198$mjVUK)
        (zero? . g$6743$mjVUK)
        (vector? . g$13197$mjVUK)
        (vector-set! . g$13196$mjVUK)
        (vector-ref . g$13195$mjVUK)
        (vector-map . g$6837$mjVUK)
        (vector-length . g$13194$mjVUK)
        (vector-for-each . g$6838$mjVUK)
        (vector-fill! . g$13193$mjVUK)
        (vector->list . g$13192$mjVUK)
        (vector . g$13191$mjVUK)
        (values . g$13190$mjVUK)
        (truncate . g$13189$mjVUK)
        (tan . g$13188$mjVUK)
        (symbol? . g$13187$mjVUK)
        (symbol=? . g$6791$mjVUK)
        (symbol->string . g$13186$mjVUK)
        (substring . g$13185$mjVUK)
        (string? . g$13184$mjVUK)
        (string>? . g$6788$mjVUK)
        (string>=? . g$6790$mjVUK)
        (string=? . g$6786$mjVUK)
        (string<? . g$6787$mjVUK)
        (string<=? . g$6789$mjVUK)
        (string-ref . g$13183$mjVUK)
        (string-length . g$13182$mjVUK)
        (string-for-each . g$6839$mjVUK)
        (string-copy . g$13181$mjVUK)
        (string-append . g$13180$mjVUK)
        (string->symbol . g$13179$mjVUK)
        (string->number . g$13178$mjVUK)
        (string->list . g$13177$mjVUK)
        (string . g$13176$mjVUK)
        (sqrt . g$13175$mjVUK)
        (sin . g$13174$mjVUK)
        (round . g$13173$mjVUK)
        (reverse . g$13172$mjVUK)
        (real? . g$13171$mjVUK)
        (real-valued? . g$13170$mjVUK)
        (real-part . g$13169$mjVUK)
        (rationalize . g$6834$mjVUK)
        (rational? . g$13168$mjVUK)
        (rational-valued? . g$13167$mjVUK)
        (procedure? . g$13166$mjVUK)
        (positive? . g$6741$mjVUK)
        (pair? . g$13165$mjVUK)
        (odd? . g$6745$mjVUK)
        (numerator . g$13164$mjVUK)
        (number? . g$13163$mjVUK)
        (number->string . g$13162$mjVUK)
        (null? . g$13161$mjVUK)
        (not . g$13160$mjVUK)
        (negative? . g$6742$mjVUK)
        (nan? . g$13159$mjVUK)
        (min . g$6747$mjVUK)
        (max . g$6746$mjVUK)
        (map . g$6595$mjVUK)
        (make-vector . g$13158$mjVUK)
        (make-string . g$13157$mjVUK)
        (make-rectangular . g$13156$mjVUK)
        (make-polar . g$13155$mjVUK)
        (magnitude . g$13154$mjVUK)
        (log . g$13153$mjVUK)
        (list? . g$13152$mjVUK)
        (list-tail . g$6575$mjVUK)
        (list-ref . g$6576$mjVUK)
        (list->vector . g$13151$mjVUK)
        (list->string . g$13150$mjVUK)
        (list . g$13149$mjVUK)
        (length . g$13148$mjVUK)
        (lcm . g$6749$mjVUK)
        (integer? . g$13147$mjVUK)
        (integer-valued? . g$13146$mjVUK)
        (integer->char . g$13145$mjVUK)
        (infinite? . g$13144$mjVUK)
        (inexact? . g$13143$mjVUK)
        (inexact . g$13142$mjVUK)
        (imag-part . g$13141$mjVUK)
        (gcd . g$6748$mjVUK)
        (for-each . g$6596$mjVUK)
        (floor . g$13140$mjVUK)
        (finite? . g$13139$mjVUK)
        (expt . g$13138$mjVUK)
        (exp . g$13137$mjVUK)
        (exact? . g$13136$mjVUK)
        (exact-integer-sqrt . g$13135$mjVUK)
        (exact . g$13134$mjVUK)
        (even? . g$6744$mjVUK)
        (error . g$13133$mjVUK)
        (eqv? . g$13132$mjVUK)
        (equal? . g$13131$mjVUK)
        (eq? . g$13130$mjVUK)
        (dynamic-wind . g$13129$mjVUK)
        (div0-and-mod0 . g$13128$mjVUK)
        (mod0 . g$13127$mjVUK)
        (div0 . g$13126$mjVUK)
        (div-and-mod . g$13125$mjVUK)
        (mod . g$13124$mjVUK)
        (div . g$13123$mjVUK)
        (denominator . g$13122$mjVUK)
        (cos . g$13121$mjVUK)
        (cons . g$13120$mjVUK)
        (complex? . g$13119$mjVUK)
        (char? . g$13118$mjVUK)
        (char>? . g$6831$mjVUK)
        (char>=? . g$6833$mjVUK)
        (char=? . g$6829$mjVUK)
        (char<? . g$6830$mjVUK)
        (char<=? . g$6832$mjVUK)
        (char->integer . g$13117$mjVUK)
        (ceiling . g$13116$mjVUK)
        (call-with-values . g$13115$mjVUK)
        (call/cc . g$13114$mjVUK)
        (call-with-current-continuation . g$13113$mjVUK)
        (cddddr . g$6740$mjVUK)
        (cdddar . g$6739$mjVUK)
        (cddadr . g$6738$mjVUK)
        (cddaar . g$6737$mjVUK)
        (cdaddr . g$6736$mjVUK)
        (cdadar . g$6735$mjVUK)
        (cdaadr . g$6734$mjVUK)
        (cdaaar . g$6733$mjVUK)
        (cadddr . g$6732$mjVUK)
        (caddar . g$6731$mjVUK)
        (cadadr . g$6730$mjVUK)
        (cadaar . g$6729$mjVUK)
        (caaddr . g$6728$mjVUK)
        (caadar . g$6727$mjVUK)
        (caaadr . g$6726$mjVUK)
        (caaaar . g$6725$mjVUK)
        (cdddr . g$6724$mjVUK)
        (cddar . g$6723$mjVUK)
        (cdadr . g$6722$mjVUK)
        (cdaar . g$6721$mjVUK)
        (caddr . g$6720$mjVUK)
        (cadar . g$6719$mjVUK)
        (caadr . g$6718$mjVUK)
        (caaar . g$6717$mjVUK)
        (cddr . g$6716$mjVUK)
        (cdar . g$6715$mjVUK)
        (cadr . g$6714$mjVUK)
        (caar . g$6713$mjVUK)
        (cdr . g$13112$mjVUK)
        (car . g$13111$mjVUK)
        (boolean? . g$13110$mjVUK)
        (boolean=? . g$6792$mjVUK)
        (atan . g$13109$mjVUK)
        (assertion-violation . g$13108$mjVUK)
        (asin . g$13107$mjVUK)
        (apply . g$13106$mjVUK)
        (append . g$13105$mjVUK)
        (angle . g$13104$mjVUK)
        (acos . g$13103$mjVUK)
        (abs . g$13102$mjVUK)
        (/ . g$13101$mjVUK)
        (* . g$13100$mjVUK)
        (- . g$13099$mjVUK)
        (+ . g$13098$mjVUK)
        (>= . g$13097$mjVUK)
        (> . g$13096$mjVUK)
        (= . g$13095$mjVUK)
        (<= . g$13094$mjVUK)
        (< . g$13093$mjVUK)
        (deserialize-port . g$13089$mjVUK)
        (serialize-port . g$13088$mjVUK)
        (enum-set? . g$8211$mjVUK)
        (load/args . g$12915$mjVUK)
        (printf . g$8322$mjVUK)
        (fprintf . g$8323$mjVUK)
        (format . g$8324$mjVUK)
        (procedure-form . g$13087$mjVUK)
        (procedure-environment . g$13086$mjVUK)
        (procedure-name . g$13085$mjVUK)
        (procedure-arity . g$13084$mjVUK)
        (gc-collect . g$13083$mjVUK)
        (clr-type? . g$13082$mjVUK)
        (get-clr-type . g$13081$mjVUK)
        (vector-append . g$13079$mjVUK)
        (vector-filter . g$13078$mjVUK)
        (vector-reverse! . g$13077$mjVUK)
        (vector-contains? . g$13076$mjVUK)
        (vector-index-of . g$13075$mjVUK)
        (vector-copy . g$13074$mjVUK)
        (vector-binary-search . g$13073$mjVUK)
        (string-ci-compare . g$13072$mjVUK)
        (string-compare . g$13071$mjVUK)
        (string-format . g$13070$mjVUK)
        (trace-printer . g$12912$mjVUK)
        (time-it . g$13068$mjVUK)
        (make-parameter . g$8602$mjVUK)
        (open-tcp-input/output-port . g$13065$mjVUK)
        (hashtable-for-each . g$13064$mjVUK)
        (hashtable-map . g$13063$mjVUK)
        (environment-bindings . g$9889$mjVUK)
        (environment-symbols . g$9892$mjVUK)
        (interaction-environment-symbols . g$9888$mjVUK)
        (optimization-level . g$13062$mjVUK)
        (library-path . g$9062$mjVUK)
        (make-compile-time-value . g$9517$mjVUK)
        (expand->core . g$9898$mjVUK)
        (expand . g$9896$mjVUK)
        (convert->cps . g$8398$mjVUK)
        (installed-libraries . g$9083$mjVUK)
        (uninstall-library . g$9074$mjVUK)
        (&no-nans . g$13061$mjVUK)
        (&no-infinities . g$13060$mjVUK)
        (&i/o-encoding . g$13059$mjVUK)
        (&i/o-decoding . g$13058$mjVUK)
        (&i/o-port . g$13057$mjVUK)
        (&i/o-file-does-not-exist . g$13056$mjVUK)
        (&i/o-file-already-exists . g$13055$mjVUK)
        (&i/o-file-is-read-only . g$13054$mjVUK)
        (&i/o-file-protection . g$13053$mjVUK)
        (&i/o-filename . g$13052$mjVUK)
        (&i/o-invalid-position . g$13051$mjVUK)
        (&i/o-write . g$13050$mjVUK)
        (&i/o-read . g$13049$mjVUK)
        (&i/o . g$13048$mjVUK)
        (&non-continuable . g$13047$mjVUK)
        (&undefined . g$13046$mjVUK)
        (&syntax . g$13045$mjVUK)
        (&lexical . g$13044$mjVUK)
        (&implementation-restriction . g$13043$mjVUK)
        (&who . g$13042$mjVUK)
        (&irritants . g$13041$mjVUK)
        (&assertion . g$13040$mjVUK)
        (&violation . g$13039$mjVUK)
        (&error . g$13038$mjVUK)
        (&serious . g$13037$mjVUK)
        (&warning . g$13036$mjVUK)
        (&message . g$13035$mjVUK)
        (&condition . g$13034$mjVUK)
        (define-condition-type . g$13033$mjVUK)
        (define-enumeration . g$13032$mjVUK)
        (define-record-type . g$13031$mjVUK)
        (parent-rtd . g$13030$mjVUK)
        (nongenerative . g$13029$mjVUK)
        (opaque . g$13028$mjVUK)
        (sealed . g$13027$mjVUK)
        (protocol . g$13026$mjVUK)
        (parent . g$13025$mjVUK)
        (immutable . g$13024$mjVUK)
        (mutable . g$13023$mjVUK)
        (fields . g$13022$mjVUK)
        (error-handling-mode . g$13021$mjVUK)
        (file-options . g$13020$mjVUK)
        (buffer-mode . g$13019$mjVUK)
        (eol-style . g$13018$mjVUK)
        (guard . g$13017$mjVUK)
        (trace-letrec-syntax . g$13016$mjVUK)
        (trace-let-syntax . g$13015$mjVUK)
        (trace-define-syntax . g$13014$mjVUK)
        (trace-define . g$13013$mjVUK)
        (trace-lambda . g$13012$mjVUK)
        (unsyntax-splicing . g$13011$mjVUK)
        (unsyntax . g$13010$mjVUK)
        (unquote-splicing . g$13009$mjVUK)
        (unquote . g$13008$mjVUK)
        (_ . g$13007$mjVUK)
        (else . g$13006$mjVUK)
        (=> . g$13005$mjVUK)
        (... . g$13004$mjVUK)
        (assert . g$13003$mjVUK)
        (endianness . g$13002$mjVUK)
        (delay . g$13001$mjVUK)
        (time . g$13000$mjVUK)
        (or . g$12999$mjVUK)
        (and . g$12998$mjVUK)
        (do . g$12997$mjVUK)
        (cond . g$12996$mjVUK)
        (let* . g$12995$mjVUK)
        (let . g$12994$mjVUK)
        (identifier-syntax . g$12993$mjVUK)
        (with-syntax . g$12992$mjVUK)
        (quasisyntax . g$12991$mjVUK)
        (quasiquote . g$12990$mjVUK)
        (syntax-rules . g$12989$mjVUK)
        (include-into . g$12988$mjVUK)
        (include . g$12987$mjVUK)
        (let-values . g$12985$mjVUK)
        (let*-values . g$12984$mjVUK)
        (record-constructor-descriptor . g$12983$mjVUK)
        (record-type-descriptor . g$12982$mjVUK)
        (fluid-let-syntax . g$12981$mjVUK)
        (case . g$12980$mjVUK)
        (parameterize . g$12979$mjVUK)
        (unless . g$12978$mjVUK)
        (when . g$12977$mjVUK)
        (if . g$12976$mjVUK)
        (letrec* . g$12975$mjVUK)
        (letrec . g$12974$mjVUK)
        (case-lambda . g$12972$mjVUK)
        (lambda . g$12971$mjVUK)
        (syntax . g$12970$mjVUK)
        (syntax-case . g$12969$mjVUK)
        (quote . g$12968$mjVUK)
        (letrec-syntax . g$12966$mjVUK)
        (let-syntax . g$12965$mjVUK)
        (set! . g$12964$mjVUK)
        (export . g$12963$mjVUK)
        (import . g$12962$mjVUK)
        (library . g$12961$mjVUK)
        (begin . g$12960$mjVUK)
        (module . g$12959$mjVUK)
        (define-syntax . g$12958$mjVUK)
        (define . g$12957$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13547$mjVUK
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13066$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8082$mjVUK
      'g$13548$mjVUK
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13488$mjVUK)
        (annotation-source . g$13487$mjVUK)
        (annotation-expression . g$13486$mjVUK)
        (annotation? . g$13485$mjVUK)
        (read-annotated . g$13484$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8082$mjVUK
      'g$13549$mjVUK
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13457$mjVUK)
        (serialize-library . g$13456$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8082$mjVUK
      'g$13550$mjVUK
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$9519$mjVUK)
        (variable-transformer? . g$9518$mjVUK)
        (eqv-hash . g$13091$mjVUK)
        (reverse! . g$13090$mjVUK)
        (make-promise . g$7668$mjVUK)
        (format . g$8324$mjVUK)
        (get-command-line . g$13080$mjVUK)
        (make-traced-procedure . g$13069$mjVUK)
        (make-traced-macro . g$8344$mjVUK)
        (assertion-error . g$9911$mjVUK)
        (library-locator . g$13067$mjVUK)
        (get-library-paths . g$13066$mjVUK)
        (library-path . g$9062$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8082$mjVUK
      'g$13551$mjVUK
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13092$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13552$mjVUK
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$13475$mjVUK)
        (clr-field-set!-internal . g$13474$mjVUK)
        (clr-field-get-internal . g$13473$mjVUK)
        (clr-cast-internal . g$13472$mjVUK)
        (clr-call-internal . g$13471$mjVUK)
        (clr-new-internal . g$13470$mjVUK)
        (clr-new-array-internal . g$13469$mjVUK)
        (clr-is-internal . g$13468$mjVUK)
        (clr-reference-internal . g$13467$mjVUK)
        (clr-using-internal . g$13466$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13553$mjVUK
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13009$mjVUK)
        (unquote . g$13008$mjVUK)
        (else . g$13006$mjVUK)
        (=> . g$13005$mjVUK)
        (delay . g$13001$mjVUK)
        (or . g$12999$mjVUK)
        (and . g$12998$mjVUK)
        (do . g$12997$mjVUK)
        (cond . g$12996$mjVUK)
        (let* . g$12995$mjVUK)
        (let . g$12994$mjVUK)
        (quasiquote . g$12990$mjVUK)
        (syntax-rules . g$12989$mjVUK)
        (case . g$12980$mjVUK)
        (if . g$12976$mjVUK)
        (letrec . g$12974$mjVUK)
        (lambda . g$12971$mjVUK)
        (quote . g$12968$mjVUK)
        (letrec-syntax . g$12966$mjVUK)
        (let-syntax . g$12965$mjVUK)
        (set! . g$12964$mjVUK)
        (begin . g$12960$mjVUK)
        (define-syntax . g$12958$mjVUK)
        (define . g$12957$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8082$mjVUK
      'g$13554$mjVUK
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$13455$mjVUK)
        (string-ci>? . g$7746$mjVUK)
        (string-ci>=? . g$7748$mjVUK)
        (string-ci=? . g$7744$mjVUK)
        (string-ci<? . g$7745$mjVUK)
        (string-ci<=? . g$7747$mjVUK)
        (char-whitespace? . g$13446$mjVUK)
        (char-upper-case? . g$13445$mjVUK)
        (char-numeric? . g$13443$mjVUK)
        (char-lower-case? . g$13442$mjVUK)
        (char-upcase . g$13440$mjVUK)
        (char-downcase . g$13437$mjVUK)
        (char-ci>? . g$7785$mjVUK)
        (char-ci>=? . g$7787$mjVUK)
        (char-ci=? . g$7783$mjVUK)
        (char-ci<? . g$7784$mjVUK)
        (char-ci<=? . g$7786$mjVUK)
        (char-alphabetic? . g$13436$mjVUK)
        (call-with-output-file . g$8171$mjVUK)
        (call-with-input-file . g$8170$mjVUK)
        (write-char . g$8152$mjVUK)
        (write . g$13404$mjVUK)
        (with-output-to-file . g$8169$mjVUK)
        (with-input-from-file . g$8168$mjVUK)
        (read-char . g$8151$mjVUK)
        (read . g$13403$mjVUK)
        (peek-char . g$8150$mjVUK)
        (open-output-file . g$13402$mjVUK)
        (open-input-file . g$13401$mjVUK)
        (newline . g$8172$mjVUK)
        (display . g$13400$mjVUK)
        (close-output-port . g$13399$mjVUK)
        (close-input-port . g$13398$mjVUK)
        (eof-object? . g$13397$mjVUK)
        (current-error-port . g$13395$mjVUK)
        (current-output-port . g$13394$mjVUK)
        (current-input-port . g$13393$mjVUK)
        (output-port? . g$13392$mjVUK)
        (input-port? . g$13391$mjVUK)
        (scheme-report-environment . g$9895$mjVUK)
        (quotient . g$7665$mjVUK)
        (null-environment . g$9894$mjVUK)
        (remainder . g$7666$mjVUK)
        (modulo . g$7667$mjVUK)
        (inexact->exact . g$7662$mjVUK)
        (force . g$7669$mjVUK)
        (exact->inexact . g$7663$mjVUK)
        (string-fill! . g$13330$mjVUK)
        (string-set! . g$13329$mjVUK)
        (set-cdr! . g$13328$mjVUK)
        (set-car! . g$13327$mjVUK)
        (memv . g$6588$mjVUK)
        (memq . g$6587$mjVUK)
        (member . g$6589$mjVUK)
        (assv . g$6584$mjVUK)
        (assq . g$6583$mjVUK)
        (assoc . g$6585$mjVUK)
        (eval . g$9897$mjVUK)
        (zero? . g$6743$mjVUK)
        (vector? . g$13197$mjVUK)
        (vector-set! . g$13196$mjVUK)
        (vector-ref . g$13195$mjVUK)
        (vector-length . g$13194$mjVUK)
        (vector-fill! . g$13193$mjVUK)
        (vector->list . g$13192$mjVUK)
        (vector . g$13191$mjVUK)
        (values . g$13190$mjVUK)
        (truncate . g$13189$mjVUK)
        (tan . g$13188$mjVUK)
        (symbol? . g$13187$mjVUK)
        (symbol->string . g$13186$mjVUK)
        (substring . g$13185$mjVUK)
        (string? . g$13184$mjVUK)
        (string>? . g$6788$mjVUK)
        (string>=? . g$6790$mjVUK)
        (string=? . g$6786$mjVUK)
        (string<? . g$6787$mjVUK)
        (string<=? . g$6789$mjVUK)
        (string-ref . g$13183$mjVUK)
        (string-length . g$13182$mjVUK)
        (string-copy . g$13181$mjVUK)
        (string-append . g$13180$mjVUK)
        (string->symbol . g$13179$mjVUK)
        (string->number . g$13178$mjVUK)
        (string->list . g$13177$mjVUK)
        (string . g$13176$mjVUK)
        (sqrt . g$13175$mjVUK)
        (sin . g$13174$mjVUK)
        (round . g$13173$mjVUK)
        (reverse . g$13172$mjVUK)
        (real? . g$13171$mjVUK)
        (real-part . g$13169$mjVUK)
        (rationalize . g$6834$mjVUK)
        (rational? . g$13168$mjVUK)
        (procedure? . g$13166$mjVUK)
        (positive? . g$6741$mjVUK)
        (pair? . g$13165$mjVUK)
        (odd? . g$6745$mjVUK)
        (numerator . g$13164$mjVUK)
        (number? . g$13163$mjVUK)
        (number->string . g$13162$mjVUK)
        (null? . g$13161$mjVUK)
        (not . g$13160$mjVUK)
        (negative? . g$6742$mjVUK)
        (min . g$6747$mjVUK)
        (max . g$6746$mjVUK)
        (map . g$6595$mjVUK)
        (make-vector . g$13158$mjVUK)
        (make-string . g$13157$mjVUK)
        (make-rectangular . g$13156$mjVUK)
        (make-polar . g$13155$mjVUK)
        (magnitude . g$13154$mjVUK)
        (log . g$13153$mjVUK)
        (list? . g$13152$mjVUK)
        (list-tail . g$6575$mjVUK)
        (list-ref . g$6576$mjVUK)
        (list->vector . g$13151$mjVUK)
        (list->string . g$13150$mjVUK)
        (list . g$13149$mjVUK)
        (length . g$13148$mjVUK)
        (lcm . g$6749$mjVUK)
        (integer? . g$13147$mjVUK)
        (integer->char . g$13145$mjVUK)
        (inexact? . g$13143$mjVUK)
        (imag-part . g$13141$mjVUK)
        (gcd . g$6748$mjVUK)
        (for-each . g$6596$mjVUK)
        (floor . g$13140$mjVUK)
        (expt . g$13138$mjVUK)
        (exp . g$13137$mjVUK)
        (exact? . g$13136$mjVUK)
        (even? . g$6744$mjVUK)
        (eqv? . g$13132$mjVUK)
        (equal? . g$13131$mjVUK)
        (eq? . g$13130$mjVUK)
        (dynamic-wind . g$13129$mjVUK)
        (denominator . g$13122$mjVUK)
        (cos . g$13121$mjVUK)
        (cons . g$13120$mjVUK)
        (complex? . g$13119$mjVUK)
        (char? . g$13118$mjVUK)
        (char>? . g$6831$mjVUK)
        (char>=? . g$6833$mjVUK)
        (char=? . g$6829$mjVUK)
        (char<? . g$6830$mjVUK)
        (char<=? . g$6832$mjVUK)
        (char->integer . g$13117$mjVUK)
        (ceiling . g$13116$mjVUK)
        (call-with-values . g$13115$mjVUK)
        (call-with-current-continuation . g$13113$mjVUK)
        (cddddr . g$6740$mjVUK)
        (cdddar . g$6739$mjVUK)
        (cddadr . g$6738$mjVUK)
        (cddaar . g$6737$mjVUK)
        (cdaddr . g$6736$mjVUK)
        (cdadar . g$6735$mjVUK)
        (cdaadr . g$6734$mjVUK)
        (cdaaar . g$6733$mjVUK)
        (cadddr . g$6732$mjVUK)
        (caddar . g$6731$mjVUK)
        (cadadr . g$6730$mjVUK)
        (cadaar . g$6729$mjVUK)
        (caaddr . g$6728$mjVUK)
        (caadar . g$6727$mjVUK)
        (caaadr . g$6726$mjVUK)
        (caaaar . g$6725$mjVUK)
        (cdddr . g$6724$mjVUK)
        (cddar . g$6723$mjVUK)
        (cdadr . g$6722$mjVUK)
        (cdaar . g$6721$mjVUK)
        (caddr . g$6720$mjVUK)
        (cadar . g$6719$mjVUK)
        (caadr . g$6718$mjVUK)
        (caaar . g$6717$mjVUK)
        (cddr . g$6716$mjVUK)
        (cdar . g$6715$mjVUK)
        (cadr . g$6714$mjVUK)
        (caar . g$6713$mjVUK)
        (cdr . g$13112$mjVUK)
        (car . g$13111$mjVUK)
        (boolean? . g$13110$mjVUK)
        (atan . g$13109$mjVUK)
        (asin . g$13107$mjVUK)
        (apply . g$13106$mjVUK)
        (append . g$13105$mjVUK)
        (angle . g$13104$mjVUK)
        (acos . g$13103$mjVUK)
        (abs . g$13102$mjVUK)
        (/ . g$13101$mjVUK)
        (* . g$13100$mjVUK)
        (- . g$13099$mjVUK)
        (+ . g$13098$mjVUK)
        (>= . g$13097$mjVUK)
        (> . g$13096$mjVUK)
        (= . g$13095$mjVUK)
        (<= . g$13094$mjVUK)
        (< . g$13093$mjVUK)
        (unquote-splicing . g$13009$mjVUK)
        (unquote . g$13008$mjVUK)
        (else . g$13006$mjVUK)
        (=> . g$13005$mjVUK)
        (... . g$13004$mjVUK)
        (delay . g$13001$mjVUK)
        (or . g$12999$mjVUK)
        (and . g$12998$mjVUK)
        (do . g$12997$mjVUK)
        (cond . g$12996$mjVUK)
        (let* . g$12995$mjVUK)
        (let . g$12994$mjVUK)
        (quasiquote . g$12990$mjVUK)
        (syntax-rules . g$12989$mjVUK)
        (case . g$12980$mjVUK)
        (if . g$12976$mjVUK)
        (letrec . g$12974$mjVUK)
        (lambda . g$12971$mjVUK)
        (quote . g$12968$mjVUK)
        (letrec-syntax . g$12966$mjVUK)
        (let-syntax . g$12965$mjVUK)
        (set! . g$12964$mjVUK)
        (begin . g$12960$mjVUK)
        (define-syntax . g$12958$mjVUK)
        (define . g$12957$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8082$mjVUK
      'g$13555$mjVUK
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13454$mjVUK)
        (string-titlecase . g$13453$mjVUK)
        (string-normalize-nfkd . g$13452$mjVUK)
        (string-normalize-nfkc . g$13451$mjVUK)
        (string-normalize-nfd . g$13450$mjVUK)
        (string-normalize-nfc . g$13449$mjVUK)
        (string-foldcase . g$13448$mjVUK)
        (string-downcase . g$13447$mjVUK)
        (string-ci>? . g$7746$mjVUK)
        (string-ci>=? . g$7748$mjVUK)
        (string-ci=? . g$7744$mjVUK)
        (string-ci<? . g$7745$mjVUK)
        (string-ci<=? . g$7747$mjVUK)
        (char-whitespace? . g$13446$mjVUK)
        (char-upper-case? . g$13445$mjVUK)
        (char-title-case? . g$13444$mjVUK)
        (char-numeric? . g$13443$mjVUK)
        (char-lower-case? . g$13442$mjVUK)
        (char-general-category . g$13441$mjVUK)
        (char-upcase . g$13440$mjVUK)
        (char-titlecase . g$13439$mjVUK)
        (char-foldcase . g$13438$mjVUK)
        (char-downcase . g$13437$mjVUK)
        (char-ci>? . g$7785$mjVUK)
        (char-ci>=? . g$7787$mjVUK)
        (char-ci=? . g$7783$mjVUK)
        (char-ci<? . g$7784$mjVUK)
        (char-ci<=? . g$7786$mjVUK)
        (char-alphabetic? . g$13436$mjVUK)
        (make-variable-transformer . g$9516$mjVUK)
        (identifier? . g$9916$mjVUK)
        (generate-temporaries . g$9905$mjVUK)
        (free-identifier=? . g$9906$mjVUK)
        (syntax->datum . g$9918$mjVUK)
        (datum->syntax . g$9917$mjVUK)
        (bound-identifier=? . g$9907$mjVUK)
        (record-type-descriptor? . g$13435$mjVUK)
        (record-predicate . g$13434$mjVUK)
        (record-mutator . g$13433$mjVUK)
        (record-constructor . g$13432$mjVUK)
        (record-accessor . g$13431$mjVUK)
        (make-record-type-descriptor . g$13430$mjVUK)
        (make-record-constructor-descriptor . g$13429$mjVUK)
        (record? . g$13428$mjVUK)
        (record-type-uid . g$13427$mjVUK)
        (record-type-sealed? . g$13426$mjVUK)
        (record-type-parent . g$13425$mjVUK)
        (record-type-opaque? . g$13424$mjVUK)
        (record-type-name . g$13423$mjVUK)
        (record-type-generative? . g$13422$mjVUK)
        (record-type-field-names . g$13421$mjVUK)
        (record-rtd . g$13420$mjVUK)
        (record-field-mutable? . g$13419$mjVUK)
        (delete-file . g$7320$mjVUK)
        (file-exists? . g$7319$mjVUK)
        (vector-sort! . g$13418$mjVUK)
        (vector-sort . g$13417$mjVUK)
        (list-sort . g$7686$mjVUK)
        (symbol-hash . g$13416$mjVUK)
        (string-ci-hash . g$13415$mjVUK)
        (string-hash . g$13414$mjVUK)
        (equal-hash . g$13413$mjVUK)
        (hashtable-equivalence-function . g$13412$mjVUK)
        (make-hashtable . g$13411$mjVUK)
        (hashtable-hash-function . g$13410$mjVUK)
        (make-eqv-hashtable . g$7288$mjVUK)
        (make-eq-hashtable . g$7287$mjVUK)
        (hashtable? . g$13409$mjVUK)
        (hashtable-update! . g$7294$mjVUK)
        (hashtable-size . g$7289$mjVUK)
        (hashtable-set! . g$7291$mjVUK)
        (hashtable-ref . g$7290$mjVUK)
        (hashtable-mutable? . g$13408$mjVUK)
        (hashtable-keys . g$13407$mjVUK)
        (hashtable-entries . g$13406$mjVUK)
        (hashtable-delete! . g$7292$mjVUK)
        (hashtable-copy . g$13405$mjVUK)
        (hashtable-contains? . g$7293$mjVUK)
        (hashtable-clear! . g$7295$mjVUK)
        (call-with-output-file . g$8171$mjVUK)
        (call-with-input-file . g$8170$mjVUK)
        (write-char . g$8152$mjVUK)
        (write . g$13404$mjVUK)
        (with-output-to-file . g$8169$mjVUK)
        (with-input-from-file . g$8168$mjVUK)
        (read-char . g$8151$mjVUK)
        (read . g$13403$mjVUK)
        (peek-char . g$8150$mjVUK)
        (open-output-file . g$13402$mjVUK)
        (open-input-file . g$13401$mjVUK)
        (newline . g$8172$mjVUK)
        (display . g$13400$mjVUK)
        (close-output-port . g$13399$mjVUK)
        (close-input-port . g$13398$mjVUK)
        (eof-object? . g$13397$mjVUK)
        (eof-object . g$13396$mjVUK)
        (current-error-port . g$13395$mjVUK)
        (current-output-port . g$13394$mjVUK)
        (current-input-port . g$13393$mjVUK)
        (output-port? . g$13392$mjVUK)
        (input-port? . g$13391$mjVUK)
        (utf-8-codec . g$13390$mjVUK)
        (utf-16-codec . g$13389$mjVUK)
        (transcoder-error-handling-mode . g$13388$mjVUK)
        (transcoder-eol-style . g$13387$mjVUK)
        (transcoder-codec . g$13386$mjVUK)
        (transcoded-port . g$13385$mjVUK)
        (textual-port? . g$13384$mjVUK)
        (string->bytevector . g$13383$mjVUK)
        (standard-output-port . g$13382$mjVUK)
        (standard-input-port . g$13381$mjVUK)
        (standard-error-port . g$13380$mjVUK)
        (set-port-position! . g$13379$mjVUK)
        (put-u8 . g$13378$mjVUK)
        (put-string . g$13377$mjVUK)
        (put-datum . g$13376$mjVUK)
        (put-char . g$13375$mjVUK)
        (put-bytevector . g$13374$mjVUK)
        (port? . g$8137$mjVUK)
        (port-transcoder . g$13373$mjVUK)
        (port-position . g$13372$mjVUK)
        (port-has-set-port-position!? . g$13371$mjVUK)
        (port-has-port-position? . g$13370$mjVUK)
        (port-eof? . g$13369$mjVUK)
        (output-port-buffer-mode . g$13368$mjVUK)
        (open-string-output-port . g$8136$mjVUK)
        (open-string-input-port . g$13367$mjVUK)
        (open-file-output-port . g$13366$mjVUK)
        (open-file-input/output-port . g$13365$mjVUK)
        (open-file-input-port . g$13364$mjVUK)
        (open-bytevector-output-port . g$13363$mjVUK)
        (open-bytevector-input-port . g$13362$mjVUK)
        (native-transcoder . g$13361$mjVUK)
        (native-eol-style . g$13360$mjVUK)
        (make-transcoder . g$13359$mjVUK)
        (latin-1-codec . g$13358$mjVUK)
        (make-i/o-write-error . g$7992$mjVUK)
        (make-i/o-read-error . g$7978$mjVUK)
        (make-i/o-port-error . g$8097$mjVUK)
        (make-i/o-invalid-position-error . g$8007$mjVUK)
        (make-i/o-filename-error . g$8024$mjVUK)
        (make-i/o-file-protection-error . g$8040$mjVUK)
        (make-i/o-file-is-read-only-error . g$8054$mjVUK)
        (make-i/o-file-does-not-exist-error . g$8082$mjVUK)
        (make-i/o-file-already-exists-error . g$8068$mjVUK)
        (make-i/o-error . g$7964$mjVUK)
        (make-i/o-encoding-error . g$8128$mjVUK)
        (make-i/o-decoding-error . g$8113$mjVUK)
        (make-custom-textual-output-port . g$13357$mjVUK)
        (make-custom-textual-input/output-port . g$13356$mjVUK)
        (make-custom-textual-input-port . g$13355$mjVUK)
        (make-custom-binary-output-port . g$13354$mjVUK)
        (make-custom-binary-input/output-port . g$13353$mjVUK)
        (make-custom-binary-input-port . g$13352$mjVUK)
        (make-bytevector . g$13351$mjVUK)
        (lookahead-u8 . g$13350$mjVUK)
        (lookahead-char . g$13349$mjVUK)
        (i/o-write-error? . g$7993$mjVUK)
        (i/o-read-error? . g$7979$mjVUK)
        (i/o-port-error? . g$8099$mjVUK)
        (i/o-invalid-position-error? . g$8009$mjVUK)
        (i/o-error-position . g$8010$mjVUK)
        (i/o-filename-error? . g$8026$mjVUK)
        (i/o-file-protection-error? . g$8041$mjVUK)
        (i/o-file-is-read-only-error? . g$8055$mjVUK)
        (i/o-file-does-not-exist-error? . g$8083$mjVUK)
        (i/o-file-already-exists-error? . g$8069$mjVUK)
        (i/o-error? . g$7965$mjVUK)
        (i/o-error-port . g$8100$mjVUK)
        (i/o-error-filename . g$8027$mjVUK)
        (i/o-encoding-error? . g$8130$mjVUK)
        (i/o-encoding-error-char . g$8131$mjVUK)
        (i/o-decoding-error? . g$8114$mjVUK)
        (get-u8 . g$13348$mjVUK)
        (get-string-n! . g$13347$mjVUK)
        (get-string-n . g$13346$mjVUK)
        (get-string-all . g$13345$mjVUK)
        (get-line . g$13344$mjVUK)
        (get-datum . g$13343$mjVUK)
        (get-char . g$13342$mjVUK)
        (get-bytevector-some . g$13341$mjVUK)
        (get-bytevector-n! . g$13340$mjVUK)
        (get-bytevector-n . g$13339$mjVUK)
        (get-bytevector-all . g$13338$mjVUK)
        (flush-output-port . g$13337$mjVUK)
        (close-port . g$13336$mjVUK)
        (call-with-string-output-port . g$8138$mjVUK)
        (call-with-port . g$8139$mjVUK)
        (call-with-bytevector-output-port . g$13335$mjVUK)
        (bytevector->string . g$13334$mjVUK)
        (buffer-mode? . g$13333$mjVUK)
        (binary-port? . g$13332$mjVUK)
        (exit . g$13331$mjVUK)
        (command-line . g$12913$mjVUK)
        (remove . g$6600$mjVUK)
        (remv . g$6601$mjVUK)
        (remp . g$6581$mjVUK)
        (remq . g$6602$mjVUK)
        (partition . g$6580$mjVUK)
        (memv . g$6588$mjVUK)
        (memq . g$6587$mjVUK)
        (memp . g$6590$mjVUK)
        (member . g$6589$mjVUK)
        (exists . g$6594$mjVUK)
        (for-all . g$6593$mjVUK)
        (fold-right . g$6599$mjVUK)
        (fold-left . g$6598$mjVUK)
        (find . g$6579$mjVUK)
        (filter . g$6582$mjVUK)
        (cons* . g$6597$mjVUK)
        (assv . g$6584$mjVUK)
        (assq . g$6583$mjVUK)
        (assp . g$6586$mjVUK)
        (assoc . g$6585$mjVUK)
        (with-exception-handler . g$13326$mjVUK)
        (raise-continuable . g$13325$mjVUK)
        (raise . g$13324$mjVUK)
        (make-enumeration . g$8236$mjVUK)
        (enum-set=? . g$8243$mjVUK)
        (enum-set-universe . g$8237$mjVUK)
        (enum-set-union . g$8244$mjVUK)
        (enum-set-subset? . g$8242$mjVUK)
        (enum-set-projection . g$8248$mjVUK)
        (enum-set-member? . g$8241$mjVUK)
        (enum-set-intersection . g$8245$mjVUK)
        (enum-set-indexer . g$8238$mjVUK)
        (enum-set-difference . g$8246$mjVUK)
        (enum-set-constructor . g$8239$mjVUK)
        (enum-set-complement . g$8247$mjVUK)
        (enum-set->list . g$8240$mjVUK)
        (who-condition? . g$7574$mjVUK)
        (warning? . g$7485$mjVUK)
        (violation? . g$7527$mjVUK)
        (undefined-violation? . g$7651$mjVUK)
        (syntax-violation? . g$7635$mjVUK)
        (syntax-violation-subform . g$7637$mjVUK)
        (syntax-violation-form . g$7636$mjVUK)
        (syntax-violation . g$9915$mjVUK)
        (simple-conditions . g$13323$mjVUK)
        (serious-condition? . g$7499$mjVUK)
        (non-continuable-violation? . g$7589$mjVUK)
        (message-condition? . g$7470$mjVUK)
        (make-who-condition . g$7572$mjVUK)
        (make-warning . g$7484$mjVUK)
        (make-violation . g$7526$mjVUK)
        (make-undefined-violation . g$7650$mjVUK)
        (make-syntax-violation . g$7632$mjVUK)
        (make-serious-condition . g$7498$mjVUK)
        (make-non-continuable-violation . g$7588$mjVUK)
        (make-message-condition . g$7468$mjVUK)
        (make-lexical-violation . g$7616$mjVUK)
        (make-irritants-condition . g$7555$mjVUK)
        (make-implementation-restriction-violation . g$7602$mjVUK)
        (make-error . g$7512$mjVUK)
        (make-assertion-violation . g$7540$mjVUK)
        (lexical-violation? . g$7617$mjVUK)
        (irritants-condition? . g$7557$mjVUK)
        (implementation-restriction-violation? . g$7603$mjVUK)
        (error? . g$7513$mjVUK)
        (condition-who . g$7575$mjVUK)
        (condition-predicate . g$13322$mjVUK)
        (condition-message . g$7471$mjVUK)
        (condition-irritants . g$7558$mjVUK)
        (condition-accessor . g$13321$mjVUK)
        (condition . g$13320$mjVUK)
        (assertion-violation? . g$7541$mjVUK)
        (condition? . g$13319$mjVUK)
        (utf32->string . g$13318$mjVUK)
        (utf16->string . g$13317$mjVUK)
        (utf8->string . g$13316$mjVUK)
        (uint-list->bytevector . g$13315$mjVUK)
        (u8-list->bytevector . g$13314$mjVUK)
        (string->utf8 . g$13313$mjVUK)
        (string->utf32 . g$13312$mjVUK)
        (string->utf16 . g$13311$mjVUK)
        (sint-list->bytevector . g$13310$mjVUK)
        (native-endianness . g$7326$mjVUK)
        (bytevector? . g$13309$mjVUK)
        (bytevector=? . g$13308$mjVUK)
        (bytevector-uint-set! . g$13307$mjVUK)
        (bytevector-uint-ref . g$13306$mjVUK)
        (bytevector-u8-set! . g$13305$mjVUK)
        (bytevector-u8-ref . g$13304$mjVUK)
        (bytevector-u64-set! . g$7347$mjVUK)
        (bytevector-u64-ref . g$7343$mjVUK)
        (bytevector-u64-native-set! . g$7349$mjVUK)
        (bytevector-u64-native-ref . g$7345$mjVUK)
        (bytevector-u32-set! . g$7339$mjVUK)
        (bytevector-u32-ref . g$7335$mjVUK)
        (bytevector-u32-native-set! . g$7341$mjVUK)
        (bytevector-u32-native-ref . g$7337$mjVUK)
        (bytevector-u16-set! . g$7331$mjVUK)
        (bytevector-u16-ref . g$7327$mjVUK)
        (bytevector-u16-native-set! . g$7333$mjVUK)
        (bytevector-u16-native-ref . g$7329$mjVUK)
        (bytevector-sint-set! . g$13303$mjVUK)
        (bytevector-sint-ref . g$13302$mjVUK)
        (bytevector-s8-set! . g$13301$mjVUK)
        (bytevector-s8-ref . g$13300$mjVUK)
        (bytevector-s64-set! . g$7348$mjVUK)
        (bytevector-s64-ref . g$7344$mjVUK)
        (bytevector-s64-native-set! . g$7350$mjVUK)
        (bytevector-s64-native-ref . g$7346$mjVUK)
        (bytevector-s32-set! . g$7340$mjVUK)
        (bytevector-s32-ref . g$7336$mjVUK)
        (bytevector-s32-native-set! . g$7342$mjVUK)
        (bytevector-s32-native-ref . g$7338$mjVUK)
        (bytevector-s16-set! . g$7332$mjVUK)
        (bytevector-s16-ref . g$7328$mjVUK)
        (bytevector-s16-native-set! . g$7334$mjVUK)
        (bytevector-s16-native-ref . g$7330$mjVUK)
        (bytevector-length . g$13299$mjVUK)
        (bytevector-ieee-single-set! . g$13298$mjVUK)
        (bytevector-ieee-single-ref . g$13297$mjVUK)
        (bytevector-ieee-single-native-set! . g$7353$mjVUK)
        (bytevector-ieee-single-native-ref . g$7351$mjVUK)
        (bytevector-ieee-double-set! . g$13296$mjVUK)
        (bytevector-ieee-double-ref . g$13295$mjVUK)
        (bytevector-ieee-double-native-set! . g$7354$mjVUK)
        (bytevector-ieee-double-native-ref . g$7352$mjVUK)
        (bytevector-fill! . g$13294$mjVUK)
        (bytevector-copy! . g$13293$mjVUK)
        (bytevector-copy . g$13292$mjVUK)
        (bytevector->uint-list . g$13291$mjVUK)
        (bytevector->u8-list . g$13290$mjVUK)
        (bytevector->sint-list . g$13289$mjVUK)
        (no-nans-violation? . g$7950$mjVUK)
        (no-infinities-violation? . g$7936$mjVUK)
        (make-no-nans-violation . g$7949$mjVUK)
        (make-no-infinities-violation . g$7935$mjVUK)
        (real->flonum . g$13288$mjVUK)
        (flzero? . g$13287$mjVUK)
        (fltruncate . g$13286$mjVUK)
        (fltan . g$13285$mjVUK)
        (flsqrt . g$13284$mjVUK)
        (flsin . g$13283$mjVUK)
        (flround . g$13282$mjVUK)
        (flpositive? . g$13281$mjVUK)
        (flonum? . g$13280$mjVUK)
        (flodd? . g$13279$mjVUK)
        (flnumerator . g$13278$mjVUK)
        (flnegative? . g$13277$mjVUK)
        (flnan? . g$13276$mjVUK)
        (flmod0 . g$13275$mjVUK)
        (flmod . g$13274$mjVUK)
        (flmin . g$13273$mjVUK)
        (flmax . g$13272$mjVUK)
        (fllog . g$13271$mjVUK)
        (flinteger? . g$13270$mjVUK)
        (flinfinite? . g$13269$mjVUK)
        (flfloor . g$13268$mjVUK)
        (flfinite? . g$13267$mjVUK)
        (flexpt . g$13266$mjVUK)
        (flexp . g$13265$mjVUK)
        (fleven? . g$13264$mjVUK)
        (fldiv0-and-mod0 . g$13263$mjVUK)
        (fldiv0 . g$13262$mjVUK)
        (fldiv-and-mod . g$13261$mjVUK)
        (fldiv . g$13260$mjVUK)
        (fldenominator . g$13259$mjVUK)
        (flcos . g$13258$mjVUK)
        (flceiling . g$13257$mjVUK)
        (flatan . g$13256$mjVUK)
        (flasin . g$13255$mjVUK)
        (flacos . g$13254$mjVUK)
        (flabs . g$13253$mjVUK)
        (fl>? . g$13252$mjVUK)
        (fl>=? . g$13251$mjVUK)
        (fl=? . g$13250$mjVUK)
        (fl<? . g$13249$mjVUK)
        (fl<=? . g$13248$mjVUK)
        (fl/ . g$13247$mjVUK)
        (fl- . g$13246$mjVUK)
        (fl+ . g$13245$mjVUK)
        (fl* . g$13244$mjVUK)
        (fixnum->flonum . g$13243$mjVUK)
        (fxzero? . g$13242$mjVUK)
        (fxxor . g$13241$mjVUK)
        (fxrotate-bit-field . g$7882$mjVUK)
        (fxreverse-bit-field . g$13240$mjVUK)
        (fxpositive? . g$13239$mjVUK)
        (fxodd? . g$13238$mjVUK)
        (fxnot . g$13237$mjVUK)
        (fxnegative? . g$13236$mjVUK)
        (fxmod0 . g$13235$mjVUK)
        (fxmod . g$13234$mjVUK)
        (fxmin . g$13233$mjVUK)
        (fxmax . g$13232$mjVUK)
        (fxlength . g$13231$mjVUK)
        (fxior . g$13230$mjVUK)
        (fxif . g$7876$mjVUK)
        (fxfirst-bit-set . g$13229$mjVUK)
        (fxeven? . g$13228$mjVUK)
        (fxdiv0-and-mod0 . g$13227$mjVUK)
        (fxdiv0 . g$13226$mjVUK)
        (fxdiv-and-mod . g$13225$mjVUK)
        (fxdiv . g$13224$mjVUK)
        (fxcopy-bit-field . g$7879$mjVUK)
        (fxcopy-bit . g$7877$mjVUK)
        (fxbit-set? . g$13223$mjVUK)
        (fxbit-field . g$7878$mjVUK)
        (fxbit-count . g$13222$mjVUK)
        (fxarithmetic-shift-right . g$7881$mjVUK)
        (fxarithmetic-shift-left . g$7880$mjVUK)
        (fxarithmetic-shift . g$13221$mjVUK)
        (fxand . g$13220$mjVUK)
        (fx>? . g$13219$mjVUK)
        (fx>=? . g$13218$mjVUK)
        (fx=? . g$13217$mjVUK)
        (fx<? . g$13216$mjVUK)
        (fx<=? . g$13215$mjVUK)
        (fx-/carry . g$7874$mjVUK)
        (fx- . g$13214$mjVUK)
        (fx+/carry . g$7875$mjVUK)
        (fx+ . g$13213$mjVUK)
        (fx*/carry . g$7873$mjVUK)
        (fx* . g$13212$mjVUK)
        (greatest-fixnum . g$13211$mjVUK)
        (least-fixnum . g$13210$mjVUK)
        (fixnum-width . g$13209$mjVUK)
        (fixnum? . g$13208$mjVUK)
        (bitwise-rotate-bit-field . g$7847$mjVUK)
        (bitwise-reverse-bit-field . g$13207$mjVUK)
        (bitwise-length . g$13206$mjVUK)
        (bitwise-if . g$7841$mjVUK)
        (bitwise-first-bit-set . g$13205$mjVUK)
        (bitwise-copy-bit-field . g$7844$mjVUK)
        (bitwise-copy-bit . g$7842$mjVUK)
        (bitwise-bit-set? . g$13204$mjVUK)
        (bitwise-bit-field . g$7843$mjVUK)
        (bitwise-bit-count . g$13203$mjVUK)
        (bitwise-xor . g$13202$mjVUK)
        (bitwise-ior . g$13201$mjVUK)
        (bitwise-and . g$13200$mjVUK)
        (bitwise-not . g$13199$mjVUK)
        (bitwise-arithmetic-shift-right . g$7846$mjVUK)
        (bitwise-arithmetic-shift-left . g$7845$mjVUK)
        (bitwise-arithmetic-shift . g$13198$mjVUK)
        (zero? . g$6743$mjVUK)
        (vector? . g$13197$mjVUK)
        (vector-set! . g$13196$mjVUK)
        (vector-ref . g$13195$mjVUK)
        (vector-map . g$6837$mjVUK)
        (vector-length . g$13194$mjVUK)
        (vector-for-each . g$6838$mjVUK)
        (vector-fill! . g$13193$mjVUK)
        (vector->list . g$13192$mjVUK)
        (vector . g$13191$mjVUK)
        (values . g$13190$mjVUK)
        (truncate . g$13189$mjVUK)
        (tan . g$13188$mjVUK)
        (symbol? . g$13187$mjVUK)
        (symbol=? . g$6791$mjVUK)
        (symbol->string . g$13186$mjVUK)
        (substring . g$13185$mjVUK)
        (string? . g$13184$mjVUK)
        (string>? . g$6788$mjVUK)
        (string>=? . g$6790$mjVUK)
        (string=? . g$6786$mjVUK)
        (string<? . g$6787$mjVUK)
        (string<=? . g$6789$mjVUK)
        (string-ref . g$13183$mjVUK)
        (string-length . g$13182$mjVUK)
        (string-for-each . g$6839$mjVUK)
        (string-copy . g$13181$mjVUK)
        (string-append . g$13180$mjVUK)
        (string->symbol . g$13179$mjVUK)
        (string->number . g$13178$mjVUK)
        (string->list . g$13177$mjVUK)
        (string . g$13176$mjVUK)
        (sqrt . g$13175$mjVUK)
        (sin . g$13174$mjVUK)
        (round . g$13173$mjVUK)
        (reverse . g$13172$mjVUK)
        (real? . g$13171$mjVUK)
        (real-valued? . g$13170$mjVUK)
        (real-part . g$13169$mjVUK)
        (rationalize . g$6834$mjVUK)
        (rational? . g$13168$mjVUK)
        (rational-valued? . g$13167$mjVUK)
        (procedure? . g$13166$mjVUK)
        (positive? . g$6741$mjVUK)
        (pair? . g$13165$mjVUK)
        (odd? . g$6745$mjVUK)
        (numerator . g$13164$mjVUK)
        (number? . g$13163$mjVUK)
        (number->string . g$13162$mjVUK)
        (null? . g$13161$mjVUK)
        (not . g$13160$mjVUK)
        (negative? . g$6742$mjVUK)
        (nan? . g$13159$mjVUK)
        (min . g$6747$mjVUK)
        (max . g$6746$mjVUK)
        (map . g$6595$mjVUK)
        (make-vector . g$13158$mjVUK)
        (make-string . g$13157$mjVUK)
        (make-rectangular . g$13156$mjVUK)
        (make-polar . g$13155$mjVUK)
        (magnitude . g$13154$mjVUK)
        (log . g$13153$mjVUK)
        (list? . g$13152$mjVUK)
        (list-tail . g$6575$mjVUK)
        (list-ref . g$6576$mjVUK)
        (list->vector . g$13151$mjVUK)
        (list->string . g$13150$mjVUK)
        (list . g$13149$mjVUK)
        (length . g$13148$mjVUK)
        (lcm . g$6749$mjVUK)
        (integer? . g$13147$mjVUK)
        (integer-valued? . g$13146$mjVUK)
        (integer->char . g$13145$mjVUK)
        (infinite? . g$13144$mjVUK)
        (inexact? . g$13143$mjVUK)
        (inexact . g$13142$mjVUK)
        (imag-part . g$13141$mjVUK)
        (gcd . g$6748$mjVUK)
        (for-each . g$6596$mjVUK)
        (floor . g$13140$mjVUK)
        (finite? . g$13139$mjVUK)
        (expt . g$13138$mjVUK)
        (exp . g$13137$mjVUK)
        (exact? . g$13136$mjVUK)
        (exact-integer-sqrt . g$13135$mjVUK)
        (exact . g$13134$mjVUK)
        (even? . g$6744$mjVUK)
        (error . g$13133$mjVUK)
        (eqv? . g$13132$mjVUK)
        (equal? . g$13131$mjVUK)
        (eq? . g$13130$mjVUK)
        (dynamic-wind . g$13129$mjVUK)
        (div0-and-mod0 . g$13128$mjVUK)
        (mod0 . g$13127$mjVUK)
        (div0 . g$13126$mjVUK)
        (div-and-mod . g$13125$mjVUK)
        (mod . g$13124$mjVUK)
        (div . g$13123$mjVUK)
        (denominator . g$13122$mjVUK)
        (cos . g$13121$mjVUK)
        (cons . g$13120$mjVUK)
        (complex? . g$13119$mjVUK)
        (char? . g$13118$mjVUK)
        (char>? . g$6831$mjVUK)
        (char>=? . g$6833$mjVUK)
        (char=? . g$6829$mjVUK)
        (char<? . g$6830$mjVUK)
        (char<=? . g$6832$mjVUK)
        (char->integer . g$13117$mjVUK)
        (ceiling . g$13116$mjVUK)
        (call-with-values . g$13115$mjVUK)
        (call/cc . g$13114$mjVUK)
        (call-with-current-continuation . g$13113$mjVUK)
        (cddddr . g$6740$mjVUK)
        (cdddar . g$6739$mjVUK)
        (cddadr . g$6738$mjVUK)
        (cddaar . g$6737$mjVUK)
        (cdaddr . g$6736$mjVUK)
        (cdadar . g$6735$mjVUK)
        (cdaadr . g$6734$mjVUK)
        (cdaaar . g$6733$mjVUK)
        (cadddr . g$6732$mjVUK)
        (caddar . g$6731$mjVUK)
        (cadadr . g$6730$mjVUK)
        (cadaar . g$6729$mjVUK)
        (caaddr . g$6728$mjVUK)
        (caadar . g$6727$mjVUK)
        (caaadr . g$6726$mjVUK)
        (caaaar . g$6725$mjVUK)
        (cdddr . g$6724$mjVUK)
        (cddar . g$6723$mjVUK)
        (cdadr . g$6722$mjVUK)
        (cdaar . g$6721$mjVUK)
        (caddr . g$6720$mjVUK)
        (cadar . g$6719$mjVUK)
        (caadr . g$6718$mjVUK)
        (caaar . g$6717$mjVUK)
        (cddr . g$6716$mjVUK)
        (cdar . g$6715$mjVUK)
        (cadr . g$6714$mjVUK)
        (caar . g$6713$mjVUK)
        (cdr . g$13112$mjVUK)
        (car . g$13111$mjVUK)
        (boolean? . g$13110$mjVUK)
        (boolean=? . g$6792$mjVUK)
        (atan . g$13109$mjVUK)
        (assertion-violation . g$13108$mjVUK)
        (asin . g$13107$mjVUK)
        (apply . g$13106$mjVUK)
        (append . g$13105$mjVUK)
        (angle . g$13104$mjVUK)
        (acos . g$13103$mjVUK)
        (abs . g$13102$mjVUK)
        (/ . g$13101$mjVUK)
        (* . g$13100$mjVUK)
        (- . g$13099$mjVUK)
        (+ . g$13098$mjVUK)
        (>= . g$13097$mjVUK)
        (> . g$13096$mjVUK)
        (= . g$13095$mjVUK)
        (<= . g$13094$mjVUK)
        (< . g$13093$mjVUK)
        (&no-nans . g$13061$mjVUK)
        (&no-infinities . g$13060$mjVUK)
        (&i/o-encoding . g$13059$mjVUK)
        (&i/o-decoding . g$13058$mjVUK)
        (&i/o-port . g$13057$mjVUK)
        (&i/o-file-does-not-exist . g$13056$mjVUK)
        (&i/o-file-already-exists . g$13055$mjVUK)
        (&i/o-file-is-read-only . g$13054$mjVUK)
        (&i/o-file-protection . g$13053$mjVUK)
        (&i/o-filename . g$13052$mjVUK)
        (&i/o-invalid-position . g$13051$mjVUK)
        (&i/o-write . g$13050$mjVUK)
        (&i/o-read . g$13049$mjVUK)
        (&i/o . g$13048$mjVUK)
        (&non-continuable . g$13047$mjVUK)
        (&undefined . g$13046$mjVUK)
        (&syntax . g$13045$mjVUK)
        (&lexical . g$13044$mjVUK)
        (&implementation-restriction . g$13043$mjVUK)
        (&who . g$13042$mjVUK)
        (&irritants . g$13041$mjVUK)
        (&assertion . g$13040$mjVUK)
        (&violation . g$13039$mjVUK)
        (&error . g$13038$mjVUK)
        (&serious . g$13037$mjVUK)
        (&warning . g$13036$mjVUK)
        (&message . g$13035$mjVUK)
        (&condition . g$13034$mjVUK)
        (define-condition-type . g$13033$mjVUK)
        (define-enumeration . g$13032$mjVUK)
        (define-record-type . g$13031$mjVUK)
        (parent-rtd . g$13030$mjVUK)
        (nongenerative . g$13029$mjVUK)
        (opaque . g$13028$mjVUK)
        (sealed . g$13027$mjVUK)
        (protocol . g$13026$mjVUK)
        (parent . g$13025$mjVUK)
        (immutable . g$13024$mjVUK)
        (mutable . g$13023$mjVUK)
        (fields . g$13022$mjVUK)
        (error-handling-mode . g$13021$mjVUK)
        (file-options . g$13020$mjVUK)
        (buffer-mode . g$13019$mjVUK)
        (eol-style . g$13018$mjVUK)
        (guard . g$13017$mjVUK)
        (unsyntax-splicing . g$13011$mjVUK)
        (unsyntax . g$13010$mjVUK)
        (unquote-splicing . g$13009$mjVUK)
        (unquote . g$13008$mjVUK)
        (_ . g$13007$mjVUK)
        (else . g$13006$mjVUK)
        (=> . g$13005$mjVUK)
        (... . g$13004$mjVUK)
        (assert . g$13003$mjVUK)
        (endianness . g$13002$mjVUK)
        (or . g$12999$mjVUK)
        (and . g$12998$mjVUK)
        (do . g$12997$mjVUK)
        (cond . g$12996$mjVUK)
        (let* . g$12995$mjVUK)
        (let . g$12994$mjVUK)
        (identifier-syntax . g$12993$mjVUK)
        (with-syntax . g$12992$mjVUK)
        (quasisyntax . g$12991$mjVUK)
        (quasiquote . g$12990$mjVUK)
        (syntax-rules . g$12989$mjVUK)
        (let-values . g$12985$mjVUK)
        (let*-values . g$12984$mjVUK)
        (record-constructor-descriptor . g$12983$mjVUK)
        (record-type-descriptor . g$12982$mjVUK)
        (case . g$12980$mjVUK)
        (unless . g$12978$mjVUK)
        (when . g$12977$mjVUK)
        (if . g$12976$mjVUK)
        (letrec* . g$12975$mjVUK)
        (letrec . g$12974$mjVUK)
        (case-lambda . g$12972$mjVUK)
        (lambda . g$12971$mjVUK)
        (syntax . g$12970$mjVUK)
        (syntax-case . g$12969$mjVUK)
        (quote . g$12968$mjVUK)
        (letrec-syntax . g$12966$mjVUK)
        (let-syntax . g$12965$mjVUK)
        (set! . g$12964$mjVUK)
        (begin . g$12960$mjVUK)
        (define-syntax . g$12958$mjVUK)
        (define . g$12957$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13556$mjVUK
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$9895$mjVUK)
        (quotient . g$7665$mjVUK)
        (null-environment . g$9894$mjVUK)
        (remainder . g$7666$mjVUK)
        (modulo . g$7667$mjVUK)
        (inexact->exact . g$7662$mjVUK)
        (force . g$7669$mjVUK)
        (exact->inexact . g$7663$mjVUK)
        (delay . g$13001$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13557$mjVUK
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12997$mjVUK)
        (unless . g$12978$mjVUK)
        (when . g$12977$mjVUK)
        (case-lambda . g$12972$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13558$mjVUK
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9897$mjVUK) (environment . g$9893$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13559$mjVUK
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$13328$mjVUK) (set-car! . g$13327$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13560$mjVUK
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$13330$mjVUK) (string-set! . g$13329$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13561$mjVUK
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13331$mjVUK) (command-line . g$12913$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13562$mjVUK
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9516$mjVUK)
        (identifier? . g$9916$mjVUK)
        (generate-temporaries . g$9905$mjVUK)
        (free-identifier=? . g$9906$mjVUK)
        (syntax->datum . g$9918$mjVUK)
        (datum->syntax . g$9917$mjVUK)
        (bound-identifier=? . g$9907$mjVUK)
        (syntax-violation . g$9915$mjVUK)
        (unsyntax-splicing . g$13011$mjVUK)
        (unsyntax . g$13010$mjVUK)
        (_ . g$13007$mjVUK)
        (... . g$13004$mjVUK)
        (with-syntax . g$12992$mjVUK)
        (quasisyntax . g$12991$mjVUK)
        (syntax . g$12970$mjVUK)
        (syntax-case . g$12969$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13563$mjVUK
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$7320$mjVUK)
        (file-exists? . g$7319$mjVUK)
        (make-i/o-write-error . g$7992$mjVUK)
        (make-i/o-read-error . g$7978$mjVUK)
        (make-i/o-port-error . g$8097$mjVUK)
        (make-i/o-invalid-position-error . g$8007$mjVUK)
        (make-i/o-filename-error . g$8024$mjVUK)
        (make-i/o-file-protection-error . g$8040$mjVUK)
        (make-i/o-file-is-read-only-error . g$8054$mjVUK)
        (make-i/o-file-does-not-exist-error . g$8082$mjVUK)
        (make-i/o-file-already-exists-error . g$8068$mjVUK)
        (make-i/o-error . g$7964$mjVUK)
        (i/o-write-error? . g$7993$mjVUK)
        (i/o-read-error? . g$7979$mjVUK)
        (i/o-port-error? . g$8099$mjVUK)
        (i/o-invalid-position-error? . g$8009$mjVUK)
        (i/o-error-position . g$8010$mjVUK)
        (i/o-filename-error? . g$8026$mjVUK)
        (i/o-file-protection-error? . g$8041$mjVUK)
        (i/o-file-is-read-only-error? . g$8055$mjVUK)
        (i/o-file-does-not-exist-error? . g$8083$mjVUK)
        (i/o-file-already-exists-error? . g$8069$mjVUK)
        (i/o-error? . g$7965$mjVUK)
        (i/o-error-port . g$8100$mjVUK)
        (i/o-error-filename . g$8027$mjVUK)
        (&i/o-port . g$13057$mjVUK)
        (&i/o-file-does-not-exist . g$13056$mjVUK)
        (&i/o-file-already-exists . g$13055$mjVUK)
        (&i/o-file-is-read-only . g$13054$mjVUK)
        (&i/o-file-protection . g$13053$mjVUK)
        (&i/o-filename . g$13052$mjVUK)
        (&i/o-invalid-position . g$13051$mjVUK)
        (&i/o-write . g$13050$mjVUK)
        (&i/o-read . g$13049$mjVUK)
        (&i/o . g$13048$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13564$mjVUK
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13418$mjVUK)
        (vector-sort . g$13417$mjVUK)
        (list-sort . g$7686$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13565$mjVUK
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6743$mjVUK)
        (vector? . g$13197$mjVUK)
        (vector-set! . g$13196$mjVUK)
        (vector-ref . g$13195$mjVUK)
        (vector-map . g$6837$mjVUK)
        (vector-length . g$13194$mjVUK)
        (vector-for-each . g$6838$mjVUK)
        (vector-fill! . g$13193$mjVUK)
        (vector->list . g$13192$mjVUK)
        (vector . g$13191$mjVUK)
        (values . g$13190$mjVUK)
        (truncate . g$13189$mjVUK)
        (tan . g$13188$mjVUK)
        (symbol? . g$13187$mjVUK)
        (symbol=? . g$6791$mjVUK)
        (symbol->string . g$13186$mjVUK)
        (substring . g$13185$mjVUK)
        (string? . g$13184$mjVUK)
        (string>? . g$6788$mjVUK)
        (string>=? . g$6790$mjVUK)
        (string=? . g$6786$mjVUK)
        (string<? . g$6787$mjVUK)
        (string<=? . g$6789$mjVUK)
        (string-ref . g$13183$mjVUK)
        (string-length . g$13182$mjVUK)
        (string-for-each . g$6839$mjVUK)
        (string-copy . g$13181$mjVUK)
        (string-append . g$13180$mjVUK)
        (string->symbol . g$13179$mjVUK)
        (string->number . g$13178$mjVUK)
        (string->list . g$13177$mjVUK)
        (string . g$13176$mjVUK)
        (sqrt . g$13175$mjVUK)
        (sin . g$13174$mjVUK)
        (round . g$13173$mjVUK)
        (reverse . g$13172$mjVUK)
        (real? . g$13171$mjVUK)
        (real-valued? . g$13170$mjVUK)
        (real-part . g$13169$mjVUK)
        (rationalize . g$6834$mjVUK)
        (rational? . g$13168$mjVUK)
        (rational-valued? . g$13167$mjVUK)
        (procedure? . g$13166$mjVUK)
        (positive? . g$6741$mjVUK)
        (pair? . g$13165$mjVUK)
        (odd? . g$6745$mjVUK)
        (numerator . g$13164$mjVUK)
        (number? . g$13163$mjVUK)
        (number->string . g$13162$mjVUK)
        (null? . g$13161$mjVUK)
        (not . g$13160$mjVUK)
        (negative? . g$6742$mjVUK)
        (nan? . g$13159$mjVUK)
        (min . g$6747$mjVUK)
        (max . g$6746$mjVUK)
        (map . g$6595$mjVUK)
        (make-vector . g$13158$mjVUK)
        (make-string . g$13157$mjVUK)
        (make-rectangular . g$13156$mjVUK)
        (make-polar . g$13155$mjVUK)
        (magnitude . g$13154$mjVUK)
        (log . g$13153$mjVUK)
        (list? . g$13152$mjVUK)
        (list-tail . g$6575$mjVUK)
        (list-ref . g$6576$mjVUK)
        (list->vector . g$13151$mjVUK)
        (list->string . g$13150$mjVUK)
        (list . g$13149$mjVUK)
        (length . g$13148$mjVUK)
        (lcm . g$6749$mjVUK)
        (integer? . g$13147$mjVUK)
        (integer-valued? . g$13146$mjVUK)
        (integer->char . g$13145$mjVUK)
        (infinite? . g$13144$mjVUK)
        (inexact? . g$13143$mjVUK)
        (inexact . g$13142$mjVUK)
        (imag-part . g$13141$mjVUK)
        (gcd . g$6748$mjVUK)
        (for-each . g$6596$mjVUK)
        (floor . g$13140$mjVUK)
        (finite? . g$13139$mjVUK)
        (expt . g$13138$mjVUK)
        (exp . g$13137$mjVUK)
        (exact? . g$13136$mjVUK)
        (exact-integer-sqrt . g$13135$mjVUK)
        (exact . g$13134$mjVUK)
        (even? . g$6744$mjVUK)
        (error . g$13133$mjVUK)
        (eqv? . g$13132$mjVUK)
        (equal? . g$13131$mjVUK)
        (eq? . g$13130$mjVUK)
        (dynamic-wind . g$13129$mjVUK)
        (div0-and-mod0 . g$13128$mjVUK)
        (mod0 . g$13127$mjVUK)
        (div0 . g$13126$mjVUK)
        (div-and-mod . g$13125$mjVUK)
        (mod . g$13124$mjVUK)
        (div . g$13123$mjVUK)
        (denominator . g$13122$mjVUK)
        (cos . g$13121$mjVUK)
        (cons . g$13120$mjVUK)
        (complex? . g$13119$mjVUK)
        (char? . g$13118$mjVUK)
        (char>? . g$6831$mjVUK)
        (char>=? . g$6833$mjVUK)
        (char=? . g$6829$mjVUK)
        (char<? . g$6830$mjVUK)
        (char<=? . g$6832$mjVUK)
        (char->integer . g$13117$mjVUK)
        (ceiling . g$13116$mjVUK)
        (call-with-values . g$13115$mjVUK)
        (call/cc . g$13114$mjVUK)
        (call-with-current-continuation . g$13113$mjVUK)
        (cddddr . g$6740$mjVUK)
        (cdddar . g$6739$mjVUK)
        (cddadr . g$6738$mjVUK)
        (cddaar . g$6737$mjVUK)
        (cdaddr . g$6736$mjVUK)
        (cdadar . g$6735$mjVUK)
        (cdaadr . g$6734$mjVUK)
        (cdaaar . g$6733$mjVUK)
        (cadddr . g$6732$mjVUK)
        (caddar . g$6731$mjVUK)
        (cadadr . g$6730$mjVUK)
        (cadaar . g$6729$mjVUK)
        (caaddr . g$6728$mjVUK)
        (caadar . g$6727$mjVUK)
        (caaadr . g$6726$mjVUK)
        (caaaar . g$6725$mjVUK)
        (cdddr . g$6724$mjVUK)
        (cddar . g$6723$mjVUK)
        (cdadr . g$6722$mjVUK)
        (cdaar . g$6721$mjVUK)
        (caddr . g$6720$mjVUK)
        (cadar . g$6719$mjVUK)
        (caadr . g$6718$mjVUK)
        (caaar . g$6717$mjVUK)
        (cddr . g$6716$mjVUK)
        (cdar . g$6715$mjVUK)
        (cadr . g$6714$mjVUK)
        (caar . g$6713$mjVUK)
        (cdr . g$13112$mjVUK)
        (car . g$13111$mjVUK)
        (boolean? . g$13110$mjVUK)
        (boolean=? . g$6792$mjVUK)
        (atan . g$13109$mjVUK)
        (assertion-violation . g$13108$mjVUK)
        (asin . g$13107$mjVUK)
        (apply . g$13106$mjVUK)
        (append . g$13105$mjVUK)
        (angle . g$13104$mjVUK)
        (acos . g$13103$mjVUK)
        (abs . g$13102$mjVUK)
        (/ . g$13101$mjVUK)
        (* . g$13100$mjVUK)
        (- . g$13099$mjVUK)
        (+ . g$13098$mjVUK)
        (>= . g$13097$mjVUK)
        (> . g$13096$mjVUK)
        (= . g$13095$mjVUK)
        (<= . g$13094$mjVUK)
        (< . g$13093$mjVUK)
        (unquote-splicing . g$13009$mjVUK)
        (unquote . g$13008$mjVUK)
        (_ . g$13007$mjVUK)
        (else . g$13006$mjVUK)
        (=> . g$13005$mjVUK)
        (... . g$13004$mjVUK)
        (assert . g$13003$mjVUK)
        (or . g$12999$mjVUK)
        (and . g$12998$mjVUK)
        (cond . g$12996$mjVUK)
        (let* . g$12995$mjVUK)
        (let . g$12994$mjVUK)
        (identifier-syntax . g$12993$mjVUK)
        (quasiquote . g$12990$mjVUK)
        (syntax-rules . g$12989$mjVUK)
        (let-values . g$12985$mjVUK)
        (let*-values . g$12984$mjVUK)
        (case . g$12980$mjVUK)
        (if . g$12976$mjVUK)
        (letrec* . g$12975$mjVUK)
        (letrec . g$12974$mjVUK)
        (lambda . g$12971$mjVUK)
        (quote . g$12968$mjVUK)
        (letrec-syntax . g$12966$mjVUK)
        (let-syntax . g$12965$mjVUK)
        (set! . g$12964$mjVUK)
        (begin . g$12960$mjVUK)
        (define-syntax . g$12958$mjVUK)
        (define . g$12957$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13566$mjVUK
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6600$mjVUK)
        (remv . g$6601$mjVUK)
        (remp . g$6581$mjVUK)
        (remq . g$6602$mjVUK)
        (partition . g$6580$mjVUK)
        (memv . g$6588$mjVUK)
        (memq . g$6587$mjVUK)
        (memp . g$6590$mjVUK)
        (member . g$6589$mjVUK)
        (exists . g$6594$mjVUK)
        (for-all . g$6593$mjVUK)
        (fold-right . g$6599$mjVUK)
        (fold-left . g$6598$mjVUK)
        (find . g$6579$mjVUK)
        (filter . g$6582$mjVUK)
        (cons* . g$6597$mjVUK)
        (assv . g$6584$mjVUK)
        (assq . g$6583$mjVUK)
        (assp . g$6586$mjVUK)
        (assoc . g$6585$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13567$mjVUK
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8171$mjVUK)
        (call-with-input-file . g$8170$mjVUK)
        (write-char . g$8152$mjVUK)
        (write . g$13404$mjVUK)
        (with-output-to-file . g$8169$mjVUK)
        (with-input-from-file . g$8168$mjVUK)
        (read-char . g$8151$mjVUK)
        (read . g$13403$mjVUK)
        (peek-char . g$8150$mjVUK)
        (open-output-file . g$13402$mjVUK)
        (open-input-file . g$13401$mjVUK)
        (newline . g$8172$mjVUK)
        (display . g$13400$mjVUK)
        (close-output-port . g$13399$mjVUK)
        (close-input-port . g$13398$mjVUK)
        (eof-object? . g$13397$mjVUK)
        (eof-object . g$13396$mjVUK)
        (current-error-port . g$13395$mjVUK)
        (current-output-port . g$13394$mjVUK)
        (current-input-port . g$13393$mjVUK)
        (output-port? . g$13392$mjVUK)
        (input-port? . g$13391$mjVUK)
        (make-i/o-write-error . g$7992$mjVUK)
        (make-i/o-read-error . g$7978$mjVUK)
        (make-i/o-port-error . g$8097$mjVUK)
        (make-i/o-invalid-position-error . g$8007$mjVUK)
        (make-i/o-filename-error . g$8024$mjVUK)
        (make-i/o-file-protection-error . g$8040$mjVUK)
        (make-i/o-file-is-read-only-error . g$8054$mjVUK)
        (make-i/o-file-does-not-exist-error . g$8082$mjVUK)
        (make-i/o-file-already-exists-error . g$8068$mjVUK)
        (make-i/o-error . g$7964$mjVUK)
        (i/o-write-error? . g$7993$mjVUK)
        (i/o-read-error? . g$7979$mjVUK)
        (i/o-port-error? . g$8099$mjVUK)
        (i/o-invalid-position-error? . g$8009$mjVUK)
        (i/o-error-position . g$8010$mjVUK)
        (i/o-filename-error? . g$8026$mjVUK)
        (i/o-file-protection-error? . g$8041$mjVUK)
        (i/o-file-is-read-only-error? . g$8055$mjVUK)
        (i/o-file-does-not-exist-error? . g$8083$mjVUK)
        (i/o-file-already-exists-error? . g$8069$mjVUK)
        (i/o-error? . g$7965$mjVUK)
        (i/o-error-port . g$8100$mjVUK)
        (i/o-error-filename . g$8027$mjVUK)
        (&i/o-port . g$13057$mjVUK)
        (&i/o-file-does-not-exist . g$13056$mjVUK)
        (&i/o-file-already-exists . g$13055$mjVUK)
        (&i/o-file-is-read-only . g$13054$mjVUK)
        (&i/o-file-protection . g$13053$mjVUK)
        (&i/o-filename . g$13052$mjVUK)
        (&i/o-invalid-position . g$13051$mjVUK)
        (&i/o-write . g$13050$mjVUK)
        (&i/o-read . g$13049$mjVUK)
        (&i/o . g$13048$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13568$mjVUK
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$13351$mjVUK)
        (utf32->string . g$13318$mjVUK)
        (utf16->string . g$13317$mjVUK)
        (utf8->string . g$13316$mjVUK)
        (uint-list->bytevector . g$13315$mjVUK)
        (u8-list->bytevector . g$13314$mjVUK)
        (string->utf8 . g$13313$mjVUK)
        (string->utf32 . g$13312$mjVUK)
        (string->utf16 . g$13311$mjVUK)
        (sint-list->bytevector . g$13310$mjVUK)
        (native-endianness . g$7326$mjVUK)
        (bytevector? . g$13309$mjVUK)
        (bytevector=? . g$13308$mjVUK)
        (bytevector-uint-set! . g$13307$mjVUK)
        (bytevector-uint-ref . g$13306$mjVUK)
        (bytevector-u8-set! . g$13305$mjVUK)
        (bytevector-u8-ref . g$13304$mjVUK)
        (bytevector-u64-set! . g$7347$mjVUK)
        (bytevector-u64-ref . g$7343$mjVUK)
        (bytevector-u64-native-set! . g$7349$mjVUK)
        (bytevector-u64-native-ref . g$7345$mjVUK)
        (bytevector-u32-set! . g$7339$mjVUK)
        (bytevector-u32-ref . g$7335$mjVUK)
        (bytevector-u32-native-set! . g$7341$mjVUK)
        (bytevector-u32-native-ref . g$7337$mjVUK)
        (bytevector-u16-set! . g$7331$mjVUK)
        (bytevector-u16-ref . g$7327$mjVUK)
        (bytevector-u16-native-set! . g$7333$mjVUK)
        (bytevector-u16-native-ref . g$7329$mjVUK)
        (bytevector-sint-set! . g$13303$mjVUK)
        (bytevector-sint-ref . g$13302$mjVUK)
        (bytevector-s8-set! . g$13301$mjVUK)
        (bytevector-s8-ref . g$13300$mjVUK)
        (bytevector-s64-set! . g$7348$mjVUK)
        (bytevector-s64-ref . g$7344$mjVUK)
        (bytevector-s64-native-set! . g$7350$mjVUK)
        (bytevector-s64-native-ref . g$7346$mjVUK)
        (bytevector-s32-set! . g$7340$mjVUK)
        (bytevector-s32-ref . g$7336$mjVUK)
        (bytevector-s32-native-set! . g$7342$mjVUK)
        (bytevector-s32-native-ref . g$7338$mjVUK)
        (bytevector-s16-set! . g$7332$mjVUK)
        (bytevector-s16-ref . g$7328$mjVUK)
        (bytevector-s16-native-set! . g$7334$mjVUK)
        (bytevector-s16-native-ref . g$7330$mjVUK)
        (bytevector-length . g$13299$mjVUK)
        (bytevector-ieee-single-set! . g$13298$mjVUK)
        (bytevector-ieee-single-ref . g$13297$mjVUK)
        (bytevector-ieee-single-native-set! . g$7353$mjVUK)
        (bytevector-ieee-single-native-ref . g$7351$mjVUK)
        (bytevector-ieee-double-set! . g$13296$mjVUK)
        (bytevector-ieee-double-ref . g$13295$mjVUK)
        (bytevector-ieee-double-native-set! . g$7354$mjVUK)
        (bytevector-ieee-double-native-ref . g$7352$mjVUK)
        (bytevector-fill! . g$13294$mjVUK)
        (bytevector-copy! . g$13293$mjVUK)
        (bytevector-copy . g$13292$mjVUK)
        (bytevector->uint-list . g$13291$mjVUK)
        (bytevector->u8-list . g$13290$mjVUK)
        (bytevector->sint-list . g$13289$mjVUK)
        (endianness . g$13002$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13569$mjVUK
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13454$mjVUK)
        (string-titlecase . g$13453$mjVUK)
        (string-normalize-nfkd . g$13452$mjVUK)
        (string-normalize-nfkc . g$13451$mjVUK)
        (string-normalize-nfd . g$13450$mjVUK)
        (string-normalize-nfc . g$13449$mjVUK)
        (string-foldcase . g$13448$mjVUK)
        (string-downcase . g$13447$mjVUK)
        (string-ci>? . g$7746$mjVUK)
        (string-ci>=? . g$7748$mjVUK)
        (string-ci=? . g$7744$mjVUK)
        (string-ci<? . g$7745$mjVUK)
        (string-ci<=? . g$7747$mjVUK)
        (char-whitespace? . g$13446$mjVUK)
        (char-upper-case? . g$13445$mjVUK)
        (char-title-case? . g$13444$mjVUK)
        (char-numeric? . g$13443$mjVUK)
        (char-lower-case? . g$13442$mjVUK)
        (char-general-category . g$13441$mjVUK)
        (char-upcase . g$13440$mjVUK)
        (char-titlecase . g$13439$mjVUK)
        (char-foldcase . g$13438$mjVUK)
        (char-downcase . g$13437$mjVUK)
        (char-ci>? . g$7785$mjVUK)
        (char-ci>=? . g$7787$mjVUK)
        (char-ci=? . g$7783$mjVUK)
        (char-ci<? . g$7784$mjVUK)
        (char-ci<=? . g$7786$mjVUK)
        (char-alphabetic? . g$13436$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13570$mjVUK
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13326$mjVUK)
        (raise-continuable . g$13325$mjVUK)
        (raise . g$13324$mjVUK)
        (guard . g$13017$mjVUK)
        (else . g$13006$mjVUK)
        (=> . g$13005$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13571$mjVUK
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7847$mjVUK)
        (bitwise-reverse-bit-field . g$13207$mjVUK)
        (bitwise-length . g$13206$mjVUK)
        (bitwise-if . g$7841$mjVUK)
        (bitwise-first-bit-set . g$13205$mjVUK)
        (bitwise-copy-bit-field . g$7844$mjVUK)
        (bitwise-copy-bit . g$7842$mjVUK)
        (bitwise-bit-set? . g$13204$mjVUK)
        (bitwise-bit-field . g$7843$mjVUK)
        (bitwise-bit-count . g$13203$mjVUK)
        (bitwise-xor . g$13202$mjVUK)
        (bitwise-ior . g$13201$mjVUK)
        (bitwise-and . g$13200$mjVUK)
        (bitwise-not . g$13199$mjVUK)
        (bitwise-arithmetic-shift-right . g$7846$mjVUK)
        (bitwise-arithmetic-shift-left . g$7845$mjVUK)
        (bitwise-arithmetic-shift . g$13198$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13572$mjVUK
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$13242$mjVUK)
        (fxxor . g$13241$mjVUK)
        (fxrotate-bit-field . g$7882$mjVUK)
        (fxreverse-bit-field . g$13240$mjVUK)
        (fxpositive? . g$13239$mjVUK)
        (fxodd? . g$13238$mjVUK)
        (fxnot . g$13237$mjVUK)
        (fxnegative? . g$13236$mjVUK)
        (fxmod0 . g$13235$mjVUK)
        (fxmod . g$13234$mjVUK)
        (fxmin . g$13233$mjVUK)
        (fxmax . g$13232$mjVUK)
        (fxlength . g$13231$mjVUK)
        (fxior . g$13230$mjVUK)
        (fxif . g$7876$mjVUK)
        (fxfirst-bit-set . g$13229$mjVUK)
        (fxeven? . g$13228$mjVUK)
        (fxdiv0-and-mod0 . g$13227$mjVUK)
        (fxdiv0 . g$13226$mjVUK)
        (fxdiv-and-mod . g$13225$mjVUK)
        (fxdiv . g$13224$mjVUK)
        (fxcopy-bit-field . g$7879$mjVUK)
        (fxcopy-bit . g$7877$mjVUK)
        (fxbit-set? . g$13223$mjVUK)
        (fxbit-field . g$7878$mjVUK)
        (fxbit-count . g$13222$mjVUK)
        (fxarithmetic-shift-right . g$7881$mjVUK)
        (fxarithmetic-shift-left . g$7880$mjVUK)
        (fxarithmetic-shift . g$13221$mjVUK)
        (fxand . g$13220$mjVUK)
        (fx>? . g$13219$mjVUK)
        (fx>=? . g$13218$mjVUK)
        (fx=? . g$13217$mjVUK)
        (fx<? . g$13216$mjVUK)
        (fx<=? . g$13215$mjVUK)
        (fx-/carry . g$7874$mjVUK)
        (fx- . g$13214$mjVUK)
        (fx+/carry . g$7875$mjVUK)
        (fx+ . g$13213$mjVUK)
        (fx*/carry . g$7873$mjVUK)
        (fx* . g$13212$mjVUK)
        (greatest-fixnum . g$13211$mjVUK)
        (least-fixnum . g$13210$mjVUK)
        (fixnum-width . g$13209$mjVUK)
        (fixnum? . g$13208$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13573$mjVUK
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7950$mjVUK)
        (no-infinities-violation? . g$7936$mjVUK)
        (make-no-nans-violation . g$7949$mjVUK)
        (make-no-infinities-violation . g$7935$mjVUK)
        (real->flonum . g$13288$mjVUK)
        (flzero? . g$13287$mjVUK)
        (fltruncate . g$13286$mjVUK)
        (fltan . g$13285$mjVUK)
        (flsqrt . g$13284$mjVUK)
        (flsin . g$13283$mjVUK)
        (flround . g$13282$mjVUK)
        (flpositive? . g$13281$mjVUK)
        (flonum? . g$13280$mjVUK)
        (flodd? . g$13279$mjVUK)
        (flnumerator . g$13278$mjVUK)
        (flnegative? . g$13277$mjVUK)
        (flnan? . g$13276$mjVUK)
        (flmod0 . g$13275$mjVUK)
        (flmod . g$13274$mjVUK)
        (flmin . g$13273$mjVUK)
        (flmax . g$13272$mjVUK)
        (fllog . g$13271$mjVUK)
        (flinteger? . g$13270$mjVUK)
        (flinfinite? . g$13269$mjVUK)
        (flfloor . g$13268$mjVUK)
        (flfinite? . g$13267$mjVUK)
        (flexpt . g$13266$mjVUK)
        (flexp . g$13265$mjVUK)
        (fleven? . g$13264$mjVUK)
        (fldiv0-and-mod0 . g$13263$mjVUK)
        (fldiv0 . g$13262$mjVUK)
        (fldiv-and-mod . g$13261$mjVUK)
        (fldiv . g$13260$mjVUK)
        (fldenominator . g$13259$mjVUK)
        (flcos . g$13258$mjVUK)
        (flceiling . g$13257$mjVUK)
        (flatan . g$13256$mjVUK)
        (flasin . g$13255$mjVUK)
        (flacos . g$13254$mjVUK)
        (flabs . g$13253$mjVUK)
        (fl>? . g$13252$mjVUK)
        (fl>=? . g$13251$mjVUK)
        (fl=? . g$13250$mjVUK)
        (fl<? . g$13249$mjVUK)
        (fl<=? . g$13248$mjVUK)
        (fl/ . g$13247$mjVUK)
        (fl- . g$13246$mjVUK)
        (fl+ . g$13245$mjVUK)
        (fl* . g$13244$mjVUK)
        (fixnum->flonum . g$13243$mjVUK)
        (&no-nans . g$13061$mjVUK)
        (&no-infinities . g$13060$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13574$mjVUK
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13416$mjVUK)
        (string-ci-hash . g$13415$mjVUK)
        (string-hash . g$13414$mjVUK)
        (equal-hash . g$13413$mjVUK)
        (hashtable-equivalence-function . g$13412$mjVUK)
        (make-hashtable . g$13411$mjVUK)
        (hashtable-hash-function . g$13410$mjVUK)
        (make-eqv-hashtable . g$7288$mjVUK)
        (make-eq-hashtable . g$7287$mjVUK)
        (hashtable? . g$13409$mjVUK)
        (hashtable-update! . g$7294$mjVUK)
        (hashtable-size . g$7289$mjVUK)
        (hashtable-set! . g$7291$mjVUK)
        (hashtable-ref . g$7290$mjVUK)
        (hashtable-mutable? . g$13408$mjVUK)
        (hashtable-keys . g$13407$mjVUK)
        (hashtable-entries . g$13406$mjVUK)
        (hashtable-delete! . g$7292$mjVUK)
        (hashtable-copy . g$13405$mjVUK)
        (hashtable-contains? . g$7293$mjVUK)
        (hashtable-clear! . g$7295$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13575$mjVUK
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13397$mjVUK)
        (eof-object . g$13396$mjVUK)
        (current-error-port . g$13395$mjVUK)
        (current-output-port . g$13394$mjVUK)
        (current-input-port . g$13393$mjVUK)
        (output-port? . g$13392$mjVUK)
        (input-port? . g$13391$mjVUK)
        (utf-8-codec . g$13390$mjVUK)
        (utf-16-codec . g$13389$mjVUK)
        (transcoder-error-handling-mode . g$13388$mjVUK)
        (transcoder-eol-style . g$13387$mjVUK)
        (transcoder-codec . g$13386$mjVUK)
        (transcoded-port . g$13385$mjVUK)
        (textual-port? . g$13384$mjVUK)
        (string->bytevector . g$13383$mjVUK)
        (standard-output-port . g$13382$mjVUK)
        (standard-input-port . g$13381$mjVUK)
        (standard-error-port . g$13380$mjVUK)
        (set-port-position! . g$13379$mjVUK)
        (put-u8 . g$13378$mjVUK)
        (put-string . g$13377$mjVUK)
        (put-datum . g$13376$mjVUK)
        (put-char . g$13375$mjVUK)
        (put-bytevector . g$13374$mjVUK)
        (port? . g$8137$mjVUK)
        (port-transcoder . g$13373$mjVUK)
        (port-position . g$13372$mjVUK)
        (port-has-set-port-position!? . g$13371$mjVUK)
        (port-has-port-position? . g$13370$mjVUK)
        (port-eof? . g$13369$mjVUK)
        (output-port-buffer-mode . g$13368$mjVUK)
        (open-string-output-port . g$8136$mjVUK)
        (open-string-input-port . g$13367$mjVUK)
        (open-file-output-port . g$13366$mjVUK)
        (open-file-input/output-port . g$13365$mjVUK)
        (open-file-input-port . g$13364$mjVUK)
        (open-bytevector-output-port . g$13363$mjVUK)
        (open-bytevector-input-port . g$13362$mjVUK)
        (native-transcoder . g$13361$mjVUK)
        (native-eol-style . g$13360$mjVUK)
        (make-transcoder . g$13359$mjVUK)
        (latin-1-codec . g$13358$mjVUK)
        (make-i/o-write-error . g$7992$mjVUK)
        (make-i/o-read-error . g$7978$mjVUK)
        (make-i/o-port-error . g$8097$mjVUK)
        (make-i/o-invalid-position-error . g$8007$mjVUK)
        (make-i/o-filename-error . g$8024$mjVUK)
        (make-i/o-file-protection-error . g$8040$mjVUK)
        (make-i/o-file-is-read-only-error . g$8054$mjVUK)
        (make-i/o-file-does-not-exist-error . g$8082$mjVUK)
        (make-i/o-file-already-exists-error . g$8068$mjVUK)
        (make-i/o-error . g$7964$mjVUK)
        (make-i/o-encoding-error . g$8128$mjVUK)
        (make-i/o-decoding-error . g$8113$mjVUK)
        (make-custom-textual-output-port . g$13357$mjVUK)
        (make-custom-textual-input/output-port . g$13356$mjVUK)
        (make-custom-textual-input-port . g$13355$mjVUK)
        (make-custom-binary-output-port . g$13354$mjVUK)
        (make-custom-binary-input/output-port . g$13353$mjVUK)
        (make-custom-binary-input-port . g$13352$mjVUK)
        (lookahead-u8 . g$13350$mjVUK)
        (lookahead-char . g$13349$mjVUK)
        (i/o-write-error? . g$7993$mjVUK)
        (i/o-read-error? . g$7979$mjVUK)
        (i/o-port-error? . g$8099$mjVUK)
        (i/o-invalid-position-error? . g$8009$mjVUK)
        (i/o-error-position . g$8010$mjVUK)
        (i/o-filename-error? . g$8026$mjVUK)
        (i/o-file-protection-error? . g$8041$mjVUK)
        (i/o-file-is-read-only-error? . g$8055$mjVUK)
        (i/o-file-does-not-exist-error? . g$8083$mjVUK)
        (i/o-file-already-exists-error? . g$8069$mjVUK)
        (i/o-error? . g$7965$mjVUK)
        (i/o-error-port . g$8100$mjVUK)
        (i/o-error-filename . g$8027$mjVUK)
        (i/o-encoding-error? . g$8130$mjVUK)
        (i/o-encoding-error-char . g$8131$mjVUK)
        (i/o-decoding-error? . g$8114$mjVUK)
        (get-u8 . g$13348$mjVUK)
        (get-string-n! . g$13347$mjVUK)
        (get-string-n . g$13346$mjVUK)
        (get-string-all . g$13345$mjVUK)
        (get-line . g$13344$mjVUK)
        (get-datum . g$13343$mjVUK)
        (get-char . g$13342$mjVUK)
        (get-bytevector-some . g$13341$mjVUK)
        (get-bytevector-n! . g$13340$mjVUK)
        (get-bytevector-n . g$13339$mjVUK)
        (get-bytevector-all . g$13338$mjVUK)
        (flush-output-port . g$13337$mjVUK)
        (close-port . g$13336$mjVUK)
        (call-with-string-output-port . g$8138$mjVUK)
        (call-with-port . g$8139$mjVUK)
        (call-with-bytevector-output-port . g$13335$mjVUK)
        (bytevector->string . g$13334$mjVUK)
        (buffer-mode? . g$13333$mjVUK)
        (binary-port? . g$13332$mjVUK)
        (&i/o-encoding . g$13059$mjVUK)
        (&i/o-decoding . g$13058$mjVUK)
        (&i/o-port . g$13057$mjVUK)
        (&i/o-file-does-not-exist . g$13056$mjVUK)
        (&i/o-file-already-exists . g$13055$mjVUK)
        (&i/o-file-is-read-only . g$13054$mjVUK)
        (&i/o-file-protection . g$13053$mjVUK)
        (&i/o-filename . g$13052$mjVUK)
        (&i/o-invalid-position . g$13051$mjVUK)
        (&i/o-write . g$13050$mjVUK)
        (&i/o-read . g$13049$mjVUK)
        (&i/o . g$13048$mjVUK)
        (error-handling-mode . g$13021$mjVUK)
        (file-options . g$13020$mjVUK)
        (buffer-mode . g$13019$mjVUK)
        (eol-style . g$13018$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13576$mjVUK
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8236$mjVUK)
        (enum-set=? . g$8243$mjVUK)
        (enum-set-universe . g$8237$mjVUK)
        (enum-set-union . g$8244$mjVUK)
        (enum-set-subset? . g$8242$mjVUK)
        (enum-set-projection . g$8248$mjVUK)
        (enum-set-member? . g$8241$mjVUK)
        (enum-set-intersection . g$8245$mjVUK)
        (enum-set-indexer . g$8238$mjVUK)
        (enum-set-difference . g$8246$mjVUK)
        (enum-set-constructor . g$8239$mjVUK)
        (enum-set-complement . g$8247$mjVUK)
        (enum-set->list . g$8240$mjVUK)
        (define-enumeration . g$13032$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13577$mjVUK
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7574$mjVUK)
        (warning? . g$7485$mjVUK)
        (violation? . g$7527$mjVUK)
        (undefined-violation? . g$7651$mjVUK)
        (syntax-violation? . g$7635$mjVUK)
        (syntax-violation-subform . g$7637$mjVUK)
        (syntax-violation-form . g$7636$mjVUK)
        (simple-conditions . g$13323$mjVUK)
        (serious-condition? . g$7499$mjVUK)
        (non-continuable-violation? . g$7589$mjVUK)
        (message-condition? . g$7470$mjVUK)
        (make-who-condition . g$7572$mjVUK)
        (make-warning . g$7484$mjVUK)
        (make-violation . g$7526$mjVUK)
        (make-undefined-violation . g$7650$mjVUK)
        (make-syntax-violation . g$7632$mjVUK)
        (make-serious-condition . g$7498$mjVUK)
        (make-non-continuable-violation . g$7588$mjVUK)
        (make-message-condition . g$7468$mjVUK)
        (make-lexical-violation . g$7616$mjVUK)
        (make-irritants-condition . g$7555$mjVUK)
        (make-implementation-restriction-violation . g$7602$mjVUK)
        (make-error . g$7512$mjVUK)
        (make-assertion-violation . g$7540$mjVUK)
        (lexical-violation? . g$7617$mjVUK)
        (irritants-condition? . g$7557$mjVUK)
        (implementation-restriction-violation? . g$7603$mjVUK)
        (error? . g$7513$mjVUK)
        (condition-who . g$7575$mjVUK)
        (condition-predicate . g$13322$mjVUK)
        (condition-message . g$7471$mjVUK)
        (condition-irritants . g$7558$mjVUK)
        (condition-accessor . g$13321$mjVUK)
        (condition . g$13320$mjVUK)
        (assertion-violation? . g$7541$mjVUK)
        (condition? . g$13319$mjVUK)
        (&non-continuable . g$13047$mjVUK)
        (&undefined . g$13046$mjVUK)
        (&syntax . g$13045$mjVUK)
        (&lexical . g$13044$mjVUK)
        (&implementation-restriction . g$13043$mjVUK)
        (&who . g$13042$mjVUK)
        (&irritants . g$13041$mjVUK)
        (&assertion . g$13040$mjVUK)
        (&violation . g$13039$mjVUK)
        (&error . g$13038$mjVUK)
        (&serious . g$13037$mjVUK)
        (&warning . g$13036$mjVUK)
        (&message . g$13035$mjVUK)
        (&condition . g$13034$mjVUK)
        (define-condition-type . g$13033$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13578$mjVUK
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13428$mjVUK)
        (record-type-uid . g$13427$mjVUK)
        (record-type-sealed? . g$13426$mjVUK)
        (record-type-parent . g$13425$mjVUK)
        (record-type-opaque? . g$13424$mjVUK)
        (record-type-name . g$13423$mjVUK)
        (record-type-generative? . g$13422$mjVUK)
        (record-type-field-names . g$13421$mjVUK)
        (record-rtd . g$13420$mjVUK)
        (record-field-mutable? . g$13419$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13579$mjVUK
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13435$mjVUK)
        (record-predicate . g$13434$mjVUK)
        (record-mutator . g$13433$mjVUK)
        (record-constructor . g$13432$mjVUK)
        (record-accessor . g$13431$mjVUK)
        (make-record-type-descriptor . g$13430$mjVUK)
        (make-record-constructor-descriptor . g$13429$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13580$mjVUK
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13031$mjVUK)
        (parent-rtd . g$13030$mjVUK)
        (nongenerative . g$13029$mjVUK)
        (opaque . g$13028$mjVUK)
        (sealed . g$13027$mjVUK)
        (protocol . g$13026$mjVUK)
        (parent . g$13025$mjVUK)
        (immutable . g$13024$mjVUK)
        (mutable . g$13023$mjVUK)
        (fields . g$13022$mjVUK)
        (record-constructor-descriptor . g$12983$mjVUK)
        (record-type-descriptor . g$12982$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$8082$mjVUK
      'g$13581$mjVUK
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9787$mjVUK)
        (&no-nans-rcd . g$13545$mjVUK)
        (&no-nans-rtd . g$13544$mjVUK)
        (&no-infinities-rcd . g$13543$mjVUK)
        (&no-infinities-rtd . g$13542$mjVUK)
        (&i/o-encoding-rcd . g$13541$mjVUK)
        (&i/o-encoding-rtd . g$13540$mjVUK)
        (&i/o-decoding-rcd . g$13539$mjVUK)
        (&i/o-decoding-rtd . g$13538$mjVUK)
        (&i/o-port-rcd . g$13537$mjVUK)
        (&i/o-port-rtd . g$13536$mjVUK)
        (&i/o-file-does-not-exist-rcd . g$13535$mjVUK)
        (&i/o-file-does-not-exist-rtd . g$13534$mjVUK)
        (&i/o-file-already-exists-rcd . g$13533$mjVUK)
        (&i/o-file-already-exists-rtd . g$13532$mjVUK)
        (&i/o-file-is-read-only-rcd . g$13531$mjVUK)
        (&i/o-file-is-read-only-rtd . g$13530$mjVUK)
        (&i/o-file-protection-rcd . g$13529$mjVUK)
        (&i/o-file-protection-rtd . g$13528$mjVUK)
        (&i/o-filename-rcd . g$13527$mjVUK)
        (&i/o-filename-rtd . g$13526$mjVUK)
        (&i/o-invalid-position-rcd . g$13525$mjVUK)
        (&i/o-invalid-position-rtd . g$13524$mjVUK)
        (&i/o-write-rcd . g$13523$mjVUK)
        (&i/o-write-rtd . g$13522$mjVUK)
        (&i/o-read-rcd . g$13521$mjVUK)
        (&i/o-read-rtd . g$13520$mjVUK)
        (&i/o-rcd . g$13519$mjVUK)
        (&i/o-rtd . g$13518$mjVUK)
        (&undefined-rcd . g$13517$mjVUK)
        (&undefined-rtd . g$13516$mjVUK)
        (&syntax-rcd . g$13515$mjVUK)
        (&syntax-rtd . g$13514$mjVUK)
        (&lexical-rcd . g$13513$mjVUK)
        (&lexical-rtd . g$13512$mjVUK)
        (&implementation-restriction-rcd . g$13511$mjVUK)
        (&implementation-restriction-rtd . g$13510$mjVUK)
        (&non-continuable-rcd . g$13509$mjVUK)
        (&non-continuable-rtd . g$13508$mjVUK)
        (&who-rcd . g$13507$mjVUK)
        (&who-rtd . g$13506$mjVUK)
        (&irritants-rcd . g$13505$mjVUK)
        (&irritants-rtd . g$13504$mjVUK)
        (&assertion-rcd . g$13503$mjVUK)
        (&assertion-rtd . g$13502$mjVUK)
        (&violation-rcd . g$13501$mjVUK)
        (&violation-rtd . g$13500$mjVUK)
        (&error-rcd . g$13499$mjVUK)
        (&error-rtd . g$13498$mjVUK)
        (&serious-rcd . g$13497$mjVUK)
        (&serious-rtd . g$13496$mjVUK)
        (&warning-rcd . g$13495$mjVUK)
        (&warning-rtd . g$13494$mjVUK)
        (&message-rcd . g$13493$mjVUK)
        (&message-rtd . g$13492$mjVUK)
        (&condition-rcd . g$13491$mjVUK)
        (&condition-rtd . g$13490$mjVUK)
        (library-letrec* . g$13489$mjVUK)
        (annotation-stripped . g$13488$mjVUK)
        (annotation-source . g$13487$mjVUK)
        (annotation-expression . g$13486$mjVUK)
        (annotation? . g$13485$mjVUK)
        (read-annotated . g$13484$mjVUK)
        (tanh . g$13483$mjVUK)
        (cosh . g$13482$mjVUK)
        (sinh . g$13481$mjVUK)
        (make-guid . g$13480$mjVUK)
        (unspecified? . g$13479$mjVUK)
        (make-list . g$6578$mjVUK)
        (last-pair . g$6577$mjVUK)
        (load-r5rs . g$13478$mjVUK)
        (license . g$13477$mjVUK)
        (stacktrace . g$13476$mjVUK)
        (ironscheme-build . g$12917$mjVUK)
        (define-clr-class-internal . g$13475$mjVUK)
        (clr-field-set!-internal . g$13474$mjVUK)
        (clr-field-get-internal . g$13473$mjVUK)
        (clr-cast-internal . g$13472$mjVUK)
        (clr-call-internal . g$13471$mjVUK)
        (clr-new-internal . g$13470$mjVUK)
        (clr-new-array-internal . g$13469$mjVUK)
        (clr-is-internal . g$13468$mjVUK)
        (clr-reference-internal . g$13467$mjVUK)
        (clr-using-internal . g$13466$mjVUK)
        (syntax-error . g$9912$mjVUK)
        (syntax-dispatch . g$9782$mjVUK)
        (compile-core . g$13465$mjVUK)
        (eval-core . g$13464$mjVUK)
        (set-symbol-value! . g$13463$mjVUK)
        (symbol-value . g$13462$mjVUK)
        (symbol-bound? . g$13461$mjVUK)
        (ungensym . g$13460$mjVUK)
        (gensym . g$13459$mjVUK)
        (void . g$13458$mjVUK)
        (load-serialized-library . g$13457$mjVUK)
        (serialize-library . g$13456$mjVUK)
        (compile-system-libraries . g$12920$mjVUK)
        (compile->closure . g$12922$mjVUK)
        (compile . g$12921$mjVUK)
        (load . g$12916$mjVUK)
        (interaction-environment . g$9922$mjVUK)
        (char-ready? . g$13455$mjVUK)
        (string-upcase . g$13454$mjVUK)
        (string-titlecase . g$13453$mjVUK)
        (string-normalize-nfkd . g$13452$mjVUK)
        (string-normalize-nfkc . g$13451$mjVUK)
        (string-normalize-nfd . g$13450$mjVUK)
        (string-normalize-nfc . g$13449$mjVUK)
        (string-foldcase . g$13448$mjVUK)
        (string-downcase . g$13447$mjVUK)
        (string-ci>? . g$7746$mjVUK)
        (string-ci>=? . g$7748$mjVUK)
        (string-ci=? . g$7744$mjVUK)
        (string-ci<? . g$7745$mjVUK)
        (string-ci<=? . g$7747$mjVUK)
        (char-whitespace? . g$13446$mjVUK)
        (char-upper-case? . g$13445$mjVUK)
        (char-title-case? . g$13444$mjVUK)
        (char-numeric? . g$13443$mjVUK)
        (char-lower-case? . g$13442$mjVUK)
        (char-general-category . g$13441$mjVUK)
        (char-upcase . g$13440$mjVUK)
        (char-titlecase . g$13439$mjVUK)
        (char-foldcase . g$13438$mjVUK)
        (char-downcase . g$13437$mjVUK)
        (char-ci>? . g$7785$mjVUK)
        (char-ci>=? . g$7787$mjVUK)
        (char-ci=? . g$7783$mjVUK)
        (char-ci<? . g$7784$mjVUK)
        (char-ci<=? . g$7786$mjVUK)
        (char-alphabetic? . g$13436$mjVUK)
        (variable-transformer-procedure . g$9519$mjVUK)
        (variable-transformer? . g$9518$mjVUK)
        (make-variable-transformer . g$9516$mjVUK)
        (identifier? . g$9916$mjVUK)
        (generate-temporaries . g$9905$mjVUK)
        (free-identifier=? . g$9906$mjVUK)
        (syntax->datum . g$9918$mjVUK)
        (datum->syntax . g$9917$mjVUK)
        (bound-identifier=? . g$9907$mjVUK)
        (record-type-descriptor? . g$13435$mjVUK)
        (record-predicate . g$13434$mjVUK)
        (record-mutator . g$13433$mjVUK)
        (record-constructor . g$13432$mjVUK)
        (record-accessor . g$13431$mjVUK)
        (make-record-type-descriptor . g$13430$mjVUK)
        (make-record-constructor-descriptor . g$13429$mjVUK)
        (record? . g$13428$mjVUK)
        (record-type-uid . g$13427$mjVUK)
        (record-type-sealed? . g$13426$mjVUK)
        (record-type-parent . g$13425$mjVUK)
        (record-type-opaque? . g$13424$mjVUK)
        (record-type-name . g$13423$mjVUK)
        (record-type-generative? . g$13422$mjVUK)
        (record-type-field-names . g$13421$mjVUK)
        (record-rtd . g$13420$mjVUK)
        (record-field-mutable? . g$13419$mjVUK)
        (delete-file . g$7320$mjVUK)
        (file-exists? . g$7319$mjVUK)
        (vector-sort! . g$13418$mjVUK)
        (vector-sort . g$13417$mjVUK)
        (list-sort . g$7686$mjVUK)
        (symbol-hash . g$13416$mjVUK)
        (string-ci-hash . g$13415$mjVUK)
        (string-hash . g$13414$mjVUK)
        (equal-hash . g$13413$mjVUK)
        (hashtable-equivalence-function . g$13412$mjVUK)
        (make-hashtable . g$13411$mjVUK)
        (hashtable-hash-function . g$13410$mjVUK)
        (make-eqv-hashtable . g$7288$mjVUK)
        (make-eq-hashtable . g$7287$mjVUK)
        (hashtable? . g$13409$mjVUK)
        (hashtable-update! . g$7294$mjVUK)
        (hashtable-size . g$7289$mjVUK)
        (hashtable-set! . g$7291$mjVUK)
        (hashtable-ref . g$7290$mjVUK)
        (hashtable-mutable? . g$13408$mjVUK)
        (hashtable-keys . g$13407$mjVUK)
        (hashtable-entries . g$13406$mjVUK)
        (hashtable-delete! . g$7292$mjVUK)
        (hashtable-copy . g$13405$mjVUK)
        (hashtable-contains? . g$7293$mjVUK)
        (hashtable-clear! . g$7295$mjVUK)
        (call-with-output-file . g$8171$mjVUK)
        (call-with-input-file . g$8170$mjVUK)
        (write-char . g$8152$mjVUK)
        (write . g$13404$mjVUK)
        (with-output-to-file . g$8169$mjVUK)
        (with-input-from-file . g$8168$mjVUK)
        (read-char . g$8151$mjVUK)
        (read . g$13403$mjVUK)
        (peek-char . g$8150$mjVUK)
        (open-output-file . g$13402$mjVUK)
        (open-input-file . g$13401$mjVUK)
        (newline . g$8172$mjVUK)
        (display . g$13400$mjVUK)
        (close-output-port . g$13399$mjVUK)
        (close-input-port . g$13398$mjVUK)
        (eof-object? . g$13397$mjVUK)
        (eof-object . g$13396$mjVUK)
        (current-error-port . g$13395$mjVUK)
        (current-output-port . g$13394$mjVUK)
        (current-input-port . g$13393$mjVUK)
        (output-port? . g$13392$mjVUK)
        (input-port? . g$13391$mjVUK)
        (utf-8-codec . g$13390$mjVUK)
        (utf-16-codec . g$13389$mjVUK)
        (transcoder-error-handling-mode . g$13388$mjVUK)
        (transcoder-eol-style . g$13387$mjVUK)
        (transcoder-codec . g$13386$mjVUK)
        (transcoded-port . g$13385$mjVUK)
        (textual-port? . g$13384$mjVUK)
        (string->bytevector . g$13383$mjVUK)
        (standard-output-port . g$13382$mjVUK)
        (standard-input-port . g$13381$mjVUK)
        (standard-error-port . g$13380$mjVUK)
        (set-port-position! . g$13379$mjVUK)
        (put-u8 . g$13378$mjVUK)
        (put-string . g$13377$mjVUK)
        (put-datum . g$13376$mjVUK)
        (put-char . g$13375$mjVUK)
        (put-bytevector . g$13374$mjVUK)
        (port? . g$8137$mjVUK)
        (port-transcoder . g$13373$mjVUK)
        (port-position . g$13372$mjVUK)
        (port-has-set-port-position!? . g$13371$mjVUK)
        (port-has-port-position? . g$13370$mjVUK)
        (port-eof? . g$13369$mjVUK)
        (output-port-buffer-mode . g$13368$mjVUK)
        (open-string-output-port . g$8136$mjVUK)
        (open-string-input-port . g$13367$mjVUK)
        (open-file-output-port . g$13366$mjVUK)
        (open-file-input/output-port . g$13365$mjVUK)
        (open-file-input-port . g$13364$mjVUK)
        (open-bytevector-output-port . g$13363$mjVUK)
        (open-bytevector-input-port . g$13362$mjVUK)
        (native-transcoder . g$13361$mjVUK)
        (native-eol-style . g$13360$mjVUK)
        (make-transcoder . g$13359$mjVUK)
        (latin-1-codec . g$13358$mjVUK)
        (make-i/o-write-error . g$7992$mjVUK)
        (make-i/o-read-error . g$7978$mjVUK)
        (make-i/o-port-error . g$8097$mjVUK)
        (make-i/o-invalid-position-error . g$8007$mjVUK)
        (make-i/o-filename-error . g$8024$mjVUK)
        (make-i/o-file-protection-error . g$8040$mjVUK)
        (make-i/o-file-is-read-only-error . g$8054$mjVUK)
        (make-i/o-file-does-not-exist-error . g$8082$mjVUK)
        (make-i/o-file-already-exists-error . g$8068$mjVUK)
        (make-i/o-error . g$7964$mjVUK)
        (make-i/o-encoding-error . g$8128$mjVUK)
        (make-i/o-decoding-error . g$8113$mjVUK)
        (make-custom-textual-output-port . g$13357$mjVUK)
        (make-custom-textual-input/output-port . g$13356$mjVUK)
        (make-custom-textual-input-port . g$13355$mjVUK)
        (make-custom-binary-output-port . g$13354$mjVUK)
        (make-custom-binary-input/output-port . g$13353$mjVUK)
        (make-custom-binary-input-port . g$13352$mjVUK)
        (make-bytevector . g$13351$mjVUK)
        (lookahead-u8 . g$13350$mjVUK)
        (lookahead-char . g$13349$mjVUK)
        (i/o-write-error? . g$7993$mjVUK)
        (i/o-read-error? . g$7979$mjVUK)
        (i/o-port-error? . g$8099$mjVUK)
        (i/o-invalid-position-error? . g$8009$mjVUK)
        (i/o-error-position . g$8010$mjVUK)
        (i/o-filename-error? . g$8026$mjVUK)
        (i/o-file-protection-error? . g$8041$mjVUK)
        (i/o-file-is-read-only-error? . g$8055$mjVUK)
        (i/o-file-does-not-exist-error? . g$8083$mjVUK)
        (i/o-file-already-exists-error? . g$8069$mjVUK)
        (i/o-error? . g$7965$mjVUK)
        (i/o-error-port . g$8100$mjVUK)
        (i/o-error-filename . g$8027$mjVUK)
        (i/o-encoding-error? . g$8130$mjVUK)
        (i/o-encoding-error-char . g$8131$mjVUK)
        (i/o-decoding-error? . g$8114$mjVUK)
        (get-u8 . g$13348$mjVUK)
        (get-string-n! . g$13347$mjVUK)
        (get-string-n . g$13346$mjVUK)
        (get-string-all . g$13345$mjVUK)
        (get-line . g$13344$mjVUK)
        (get-datum . g$13343$mjVUK)
        (get-char . g$13342$mjVUK)
        (get-bytevector-some . g$13341$mjVUK)
        (get-bytevector-n! . g$13340$mjVUK)
        (get-bytevector-n . g$13339$mjVUK)
        (get-bytevector-all . g$13338$mjVUK)
        (flush-output-port . g$13337$mjVUK)
        (close-port . g$13336$mjVUK)
        (call-with-string-output-port . g$8138$mjVUK)
        (call-with-port . g$8139$mjVUK)
        (call-with-bytevector-output-port . g$13335$mjVUK)
        (bytevector->string . g$13334$mjVUK)
        (buffer-mode? . g$13333$mjVUK)
        (binary-port? . g$13332$mjVUK)
        (scheme-report-environment . g$9895$mjVUK)
        (quotient . g$7665$mjVUK)
        (null-environment . g$9894$mjVUK)
        (remainder . g$7666$mjVUK)
        (modulo . g$7667$mjVUK)
        (inexact->exact . g$7662$mjVUK)
        (force . g$7669$mjVUK)
        (exact->inexact . g$7663$mjVUK)
        (exit . g$13331$mjVUK)
        (command-line . g$12913$mjVUK)
        (string-fill! . g$13330$mjVUK)
        (string-set! . g$13329$mjVUK)
        (set-cdr! . g$13328$mjVUK)
        (set-car! . g$13327$mjVUK)
        (remove . g$6600$mjVUK)
        (remv . g$6601$mjVUK)
        (remp . g$6581$mjVUK)
        (remq . g$6602$mjVUK)
        (partition . g$6580$mjVUK)
        (memv . g$6588$mjVUK)
        (memq . g$6587$mjVUK)
        (memp . g$6590$mjVUK)
        (member . g$6589$mjVUK)
        (exists . g$6594$mjVUK)
        (for-all . g$6593$mjVUK)
        (fold-right . g$6599$mjVUK)
        (fold-left . g$6598$mjVUK)
        (find . g$6579$mjVUK)
        (filter . g$6582$mjVUK)
        (cons* . g$6597$mjVUK)
        (assv . g$6584$mjVUK)
        (assq . g$6583$mjVUK)
        (assp . g$6586$mjVUK)
        (assoc . g$6585$mjVUK)
        (with-exception-handler . g$13326$mjVUK)
        (raise-continuable . g$13325$mjVUK)
        (raise . g$13324$mjVUK)
        (eval . g$9897$mjVUK)
        (environment . g$9893$mjVUK)
        (make-enumeration . g$8236$mjVUK)
        (enum-set=? . g$8243$mjVUK)
        (enum-set-universe . g$8237$mjVUK)
        (enum-set-union . g$8244$mjVUK)
        (enum-set-subset? . g$8242$mjVUK)
        (enum-set-projection . g$8248$mjVUK)
        (enum-set-member? . g$8241$mjVUK)
        (enum-set-intersection . g$8245$mjVUK)
        (enum-set-indexer . g$8238$mjVUK)
        (enum-set-difference . g$8246$mjVUK)
        (enum-set-constructor . g$8239$mjVUK)
        (enum-set-complement . g$8247$mjVUK)
        (enum-set->list . g$8240$mjVUK)
        (who-condition? . g$7574$mjVUK)
        (warning? . g$7485$mjVUK)
        (violation? . g$7527$mjVUK)
        (undefined-violation? . g$7651$mjVUK)
        (syntax-violation? . g$7635$mjVUK)
        (syntax-violation-subform . g$7637$mjVUK)
        (syntax-violation-form . g$7636$mjVUK)
        (syntax-violation . g$9915$mjVUK)
        (simple-conditions . g$13323$mjVUK)
        (serious-condition? . g$7499$mjVUK)
        (non-continuable-violation? . g$7589$mjVUK)
        (message-condition? . g$7470$mjVUK)
        (make-who-condition . g$7572$mjVUK)
        (make-warning . g$7484$mjVUK)
        (make-violation . g$7526$mjVUK)
        (make-undefined-violation . g$7650$mjVUK)
        (make-syntax-violation . g$7632$mjVUK)
        (make-serious-condition . g$7498$mjVUK)
        (make-non-continuable-violation . g$7588$mjVUK)
        (make-message-condition . g$7468$mjVUK)
        (make-lexical-violation . g$7616$mjVUK)
        (make-irritants-condition . g$7555$mjVUK)
        (make-implementation-restriction-violation . g$7602$mjVUK)
        (make-error . g$7512$mjVUK)
        (make-assertion-violation . g$7540$mjVUK)
        (lexical-violation? . g$7617$mjVUK)
        (irritants-condition? . g$7557$mjVUK)
        (implementation-restriction-violation? . g$7603$mjVUK)
        (error? . g$7513$mjVUK)
        (condition-who . g$7575$mjVUK)
        (condition-predicate . g$13322$mjVUK)
        (condition-message . g$7471$mjVUK)
        (condition-irritants . g$7558$mjVUK)
        (condition-accessor . g$13321$mjVUK)
        (condition . g$13320$mjVUK)
        (assertion-violation? . g$7541$mjVUK)
        (condition? . g$13319$mjVUK)
        (utf32->string . g$13318$mjVUK)
        (utf16->string . g$13317$mjVUK)
        (utf8->string . g$13316$mjVUK)
        (uint-list->bytevector . g$13315$mjVUK)
        (u8-list->bytevector . g$13314$mjVUK)
        (string->utf8 . g$13313$mjVUK)
        (string->utf32 . g$13312$mjVUK)
        (string->utf16 . g$13311$mjVUK)
        (sint-list->bytevector . g$13310$mjVUK)
        (native-endianness . g$7326$mjVUK)
        (bytevector? . g$13309$mjVUK)
        (bytevector=? . g$13308$mjVUK)
        (bytevector-uint-set! . g$13307$mjVUK)
        (bytevector-uint-ref . g$13306$mjVUK)
        (bytevector-u8-set! . g$13305$mjVUK)
        (bytevector-u8-ref . g$13304$mjVUK)
        (bytevector-u64-set! . g$7347$mjVUK)
        (bytevector-u64-ref . g$7343$mjVUK)
        (bytevector-u64-native-set! . g$7349$mjVUK)
        (bytevector-u64-native-ref . g$7345$mjVUK)
        (bytevector-u32-set! . g$7339$mjVUK)
        (bytevector-u32-ref . g$7335$mjVUK)
        (bytevector-u32-native-set! . g$7341$mjVUK)
        (bytevector-u32-native-ref . g$7337$mjVUK)
        (bytevector-u16-set! . g$7331$mjVUK)
        (bytevector-u16-ref . g$7327$mjVUK)
        (bytevector-u16-native-set! . g$7333$mjVUK)
        (bytevector-u16-native-ref . g$7329$mjVUK)
        (bytevector-sint-set! . g$13303$mjVUK)
        (bytevector-sint-ref . g$13302$mjVUK)
        (bytevector-s8-set! . g$13301$mjVUK)
        (bytevector-s8-ref . g$13300$mjVUK)
        (bytevector-s64-set! . g$7348$mjVUK)
        (bytevector-s64-ref . g$7344$mjVUK)
        (bytevector-s64-native-set! . g$7350$mjVUK)
        (bytevector-s64-native-ref . g$7346$mjVUK)
        (bytevector-s32-set! . g$7340$mjVUK)
        (bytevector-s32-ref . g$7336$mjVUK)
        (bytevector-s32-native-set! . g$7342$mjVUK)
        (bytevector-s32-native-ref . g$7338$mjVUK)
        (bytevector-s16-set! . g$7332$mjVUK)
        (bytevector-s16-ref . g$7328$mjVUK)
        (bytevector-s16-native-set! . g$7334$mjVUK)
        (bytevector-s16-native-ref . g$7330$mjVUK)
        (bytevector-length . g$13299$mjVUK)
        (bytevector-ieee-single-set! . g$13298$mjVUK)
        (bytevector-ieee-single-ref . g$13297$mjVUK)
        (bytevector-ieee-single-native-set! . g$7353$mjVUK)
        (bytevector-ieee-single-native-ref . g$7351$mjVUK)
        (bytevector-ieee-double-set! . g$13296$mjVUK)
        (bytevector-ieee-double-ref . g$13295$mjVUK)
        (bytevector-ieee-double-native-set! . g$7354$mjVUK)
        (bytevector-ieee-double-native-ref . g$7352$mjVUK)
        (bytevector-fill! . g$13294$mjVUK)
        (bytevector-copy! . g$13293$mjVUK)
        (bytevector-copy . g$13292$mjVUK)
        (bytevector->uint-list . g$13291$mjVUK)
        (bytevector->u8-list . g$13290$mjVUK)
        (bytevector->sint-list . g$13289$mjVUK)
        (no-nans-violation? . g$7950$mjVUK)
        (no-infinities-violation? . g$7936$mjVUK)
        (make-no-nans-violation . g$7949$mjVUK)
        (make-no-infinities-violation . g$7935$mjVUK)
        (real->flonum . g$13288$mjVUK)
        (flzero? . g$13287$mjVUK)
        (fltruncate . g$13286$mjVUK)
        (fltan . g$13285$mjVUK)
        (flsqrt . g$13284$mjVUK)
        (flsin . g$13283$mjVUK)
        (flround . g$13282$mjVUK)
        (flpositive? . g$13281$mjVUK)
        (flonum? . g$13280$mjVUK)
        (flodd? . g$13279$mjVUK)
        (flnumerator . g$13278$mjVUK)
        (flnegative? . g$13277$mjVUK)
        (flnan? . g$13276$mjVUK)
        (flmod0 . g$13275$mjVUK)
        (flmod . g$13274$mjVUK)
        (flmin . g$13273$mjVUK)
        (flmax . g$13272$mjVUK)
        (fllog . g$13271$mjVUK)
        (flinteger? . g$13270$mjVUK)
        (flinfinite? . g$13269$mjVUK)
        (flfloor . g$13268$mjVUK)
        (flfinite? . g$13267$mjVUK)
        (flexpt . g$13266$mjVUK)
        (flexp . g$13265$mjVUK)
        (fleven? . g$13264$mjVUK)
        (fldiv0-and-mod0 . g$13263$mjVUK)
        (fldiv0 . g$13262$mjVUK)
        (fldiv-and-mod . g$13261$mjVUK)
        (fldiv . g$13260$mjVUK)
        (fldenominator . g$13259$mjVUK)
        (flcos . g$13258$mjVUK)
        (flceiling . g$13257$mjVUK)
        (flatan . g$13256$mjVUK)
        (flasin . g$13255$mjVUK)
        (flacos . g$13254$mjVUK)
        (flabs . g$13253$mjVUK)
        (fl>? . g$13252$mjVUK)
        (fl>=? . g$13251$mjVUK)
        (fl=? . g$13250$mjVUK)
        (fl<? . g$13249$mjVUK)
        (fl<=? . g$13248$mjVUK)
        (fl/ . g$13247$mjVUK)
        (fl- . g$13246$mjVUK)
        (fl+ . g$13245$mjVUK)
        (fl* . g$13244$mjVUK)
        (fixnum->flonum . g$13243$mjVUK)
        (fxzero? . g$13242$mjVUK)
        (fxxor . g$13241$mjVUK)
        (fxrotate-bit-field . g$7882$mjVUK)
        (fxreverse-bit-field . g$13240$mjVUK)
        (fxpositive? . g$13239$mjVUK)
        (fxodd? . g$13238$mjVUK)
        (fxnot . g$13237$mjVUK)
        (fxnegative? . g$13236$mjVUK)
        (fxmod0 . g$13235$mjVUK)
        (fxmod . g$13234$mjVUK)
        (fxmin . g$13233$mjVUK)
        (fxmax . g$13232$mjVUK)
        (fxlength . g$13231$mjVUK)
        (fxior . g$13230$mjVUK)
        (fxif . g$7876$mjVUK)
        (fxfirst-bit-set . g$13229$mjVUK)
        (fxeven? . g$13228$mjVUK)
        (fxdiv0-and-mod0 . g$13227$mjVUK)
        (fxdiv0 . g$13226$mjVUK)
        (fxdiv-and-mod . g$13225$mjVUK)
        (fxdiv . g$13224$mjVUK)
        (fxcopy-bit-field . g$7879$mjVUK)
        (fxcopy-bit . g$7877$mjVUK)
        (fxbit-set? . g$13223$mjVUK)
        (fxbit-field . g$7878$mjVUK)
        (fxbit-count . g$13222$mjVUK)
        (fxarithmetic-shift-right . g$7881$mjVUK)
        (fxarithmetic-shift-left . g$7880$mjVUK)
        (fxarithmetic-shift . g$13221$mjVUK)
        (fxand . g$13220$mjVUK)
        (fx>? . g$13219$mjVUK)
        (fx>=? . g$13218$mjVUK)
        (fx=? . g$13217$mjVUK)
        (fx<? . g$13216$mjVUK)
        (fx<=? . g$13215$mjVUK)
        (fx-/carry . g$7874$mjVUK)
        (fx- . g$13214$mjVUK)
        (fx+/carry . g$7875$mjVUK)
        (fx+ . g$13213$mjVUK)
        (fx*/carry . g$7873$mjVUK)
        (fx* . g$13212$mjVUK)
        (greatest-fixnum . g$13211$mjVUK)
        (least-fixnum . g$13210$mjVUK)
        (fixnum-width . g$13209$mjVUK)
        (fixnum? . g$13208$mjVUK)
        (bitwise-rotate-bit-field . g$7847$mjVUK)
        (bitwise-reverse-bit-field . g$13207$mjVUK)
        (bitwise-length . g$13206$mjVUK)
        (bitwise-if . g$7841$mjVUK)
        (bitwise-first-bit-set . g$13205$mjVUK)
        (bitwise-copy-bit-field . g$7844$mjVUK)
        (bitwise-copy-bit . g$7842$mjVUK)
        (bitwise-bit-set? . g$13204$mjVUK)
        (bitwise-bit-field . g$7843$mjVUK)
        (bitwise-bit-count . g$13203$mjVUK)
        (bitwise-xor . g$13202$mjVUK)
        (bitwise-ior . g$13201$mjVUK)
        (bitwise-and . g$13200$mjVUK)
        (bitwise-not . g$13199$mjVUK)
        (bitwise-arithmetic-shift-right . g$7846$mjVUK)
        (bitwise-arithmetic-shift-left . g$7845$mjVUK)
        (bitwise-arithmetic-shift . g$13198$mjVUK)
        (zero? . g$6743$mjVUK)
        (vector? . g$13197$mjVUK)
        (vector-set! . g$13196$mjVUK)
        (vector-ref . g$13195$mjVUK)
        (vector-map . g$6837$mjVUK)
        (vector-length . g$13194$mjVUK)
        (vector-for-each . g$6838$mjVUK)
        (vector-fill! . g$13193$mjVUK)
        (vector->list . g$13192$mjVUK)
        (vector . g$13191$mjVUK)
        (values . g$13190$mjVUK)
        (truncate . g$13189$mjVUK)
        (tan . g$13188$mjVUK)
        (symbol? . g$13187$mjVUK)
        (symbol=? . g$6791$mjVUK)
        (symbol->string . g$13186$mjVUK)
        (substring . g$13185$mjVUK)
        (string? . g$13184$mjVUK)
        (string>? . g$6788$mjVUK)
        (string>=? . g$6790$mjVUK)
        (string=? . g$6786$mjVUK)
        (string<? . g$6787$mjVUK)
        (string<=? . g$6789$mjVUK)
        (string-ref . g$13183$mjVUK)
        (string-length . g$13182$mjVUK)
        (string-for-each . g$6839$mjVUK)
        (string-copy . g$13181$mjVUK)
        (string-append . g$13180$mjVUK)
        (string->symbol . g$13179$mjVUK)
        (string->number . g$13178$mjVUK)
        (string->list . g$13177$mjVUK)
        (string . g$13176$mjVUK)
        (sqrt . g$13175$mjVUK)
        (sin . g$13174$mjVUK)
        (round . g$13173$mjVUK)
        (reverse . g$13172$mjVUK)
        (real? . g$13171$mjVUK)
        (real-valued? . g$13170$mjVUK)
        (real-part . g$13169$mjVUK)
        (rationalize . g$6834$mjVUK)
        (rational? . g$13168$mjVUK)
        (rational-valued? . g$13167$mjVUK)
        (procedure? . g$13166$mjVUK)
        (positive? . g$6741$mjVUK)
        (pair? . g$13165$mjVUK)
        (odd? . g$6745$mjVUK)
        (numerator . g$13164$mjVUK)
        (number? . g$13163$mjVUK)
        (number->string . g$13162$mjVUK)
        (null? . g$13161$mjVUK)
        (not . g$13160$mjVUK)
        (negative? . g$6742$mjVUK)
        (nan? . g$13159$mjVUK)
        (min . g$6747$mjVUK)
        (max . g$6746$mjVUK)
        (map . g$6595$mjVUK)
        (make-vector . g$13158$mjVUK)
        (make-string . g$13157$mjVUK)
        (make-rectangular . g$13156$mjVUK)
        (make-polar . g$13155$mjVUK)
        (magnitude . g$13154$mjVUK)
        (log . g$13153$mjVUK)
        (list? . g$13152$mjVUK)
        (list-tail . g$6575$mjVUK)
        (list-ref . g$6576$mjVUK)
        (list->vector . g$13151$mjVUK)
        (list->string . g$13150$mjVUK)
        (list . g$13149$mjVUK)
        (length . g$13148$mjVUK)
        (lcm . g$6749$mjVUK)
        (integer? . g$13147$mjVUK)
        (integer-valued? . g$13146$mjVUK)
        (integer->char . g$13145$mjVUK)
        (infinite? . g$13144$mjVUK)
        (inexact? . g$13143$mjVUK)
        (inexact . g$13142$mjVUK)
        (imag-part . g$13141$mjVUK)
        (gcd . g$6748$mjVUK)
        (for-each . g$6596$mjVUK)
        (floor . g$13140$mjVUK)
        (finite? . g$13139$mjVUK)
        (expt . g$13138$mjVUK)
        (exp . g$13137$mjVUK)
        (exact? . g$13136$mjVUK)
        (exact-integer-sqrt . g$13135$mjVUK)
        (exact . g$13134$mjVUK)
        (even? . g$6744$mjVUK)
        (error . g$13133$mjVUK)
        (eqv? . g$13132$mjVUK)
        (equal? . g$13131$mjVUK)
        (eq? . g$13130$mjVUK)
        (dynamic-wind . g$13129$mjVUK)
        (div0-and-mod0 . g$13128$mjVUK)
        (mod0 . g$13127$mjVUK)
        (div0 . g$13126$mjVUK)
        (div-and-mod . g$13125$mjVUK)
        (mod . g$13124$mjVUK)
        (div . g$13123$mjVUK)
        (denominator . g$13122$mjVUK)
        (cos . g$13121$mjVUK)
        (cons . g$13120$mjVUK)
        (complex? . g$13119$mjVUK)
        (char? . g$13118$mjVUK)
        (char>? . g$6831$mjVUK)
        (char>=? . g$6833$mjVUK)
        (char=? . g$6829$mjVUK)
        (char<? . g$6830$mjVUK)
        (char<=? . g$6832$mjVUK)
        (char->integer . g$13117$mjVUK)
        (ceiling . g$13116$mjVUK)
        (call-with-values . g$13115$mjVUK)
        (call/cc . g$13114$mjVUK)
        (call-with-current-continuation . g$13113$mjVUK)
        (cddddr . g$6740$mjVUK)
        (cdddar . g$6739$mjVUK)
        (cddadr . g$6738$mjVUK)
        (cddaar . g$6737$mjVUK)
        (cdaddr . g$6736$mjVUK)
        (cdadar . g$6735$mjVUK)
        (cdaadr . g$6734$mjVUK)
        (cdaaar . g$6733$mjVUK)
        (cadddr . g$6732$mjVUK)
        (caddar . g$6731$mjVUK)
        (cadadr . g$6730$mjVUK)
        (cadaar . g$6729$mjVUK)
        (caaddr . g$6728$mjVUK)
        (caadar . g$6727$mjVUK)
        (caaadr . g$6726$mjVUK)
        (caaaar . g$6725$mjVUK)
        (cdddr . g$6724$mjVUK)
        (cddar . g$6723$mjVUK)
        (cdadr . g$6722$mjVUK)
        (cdaar . g$6721$mjVUK)
        (caddr . g$6720$mjVUK)
        (cadar . g$6719$mjVUK)
        (caadr . g$6718$mjVUK)
        (caaar . g$6717$mjVUK)
        (cddr . g$6716$mjVUK)
        (cdar . g$6715$mjVUK)
        (cadr . g$6714$mjVUK)
        (caar . g$6713$mjVUK)
        (cdr . g$13112$mjVUK)
        (car . g$13111$mjVUK)
        (boolean? . g$13110$mjVUK)
        (boolean=? . g$6792$mjVUK)
        (atan . g$13109$mjVUK)
        (assertion-violation . g$13108$mjVUK)
        (asin . g$13107$mjVUK)
        (apply . g$13106$mjVUK)
        (append . g$13105$mjVUK)
        (angle . g$13104$mjVUK)
        (acos . g$13103$mjVUK)
        (abs . g$13102$mjVUK)
        (/ . g$13101$mjVUK)
        (* . g$13100$mjVUK)
        (- . g$13099$mjVUK)
        (+ . g$13098$mjVUK)
        (>= . g$13097$mjVUK)
        (> . g$13096$mjVUK)
        (= . g$13095$mjVUK)
        (<= . g$13094$mjVUK)
        (< . g$13093$mjVUK)
        (make-record-printer . g$13092$mjVUK)
        (eqv-hash . g$13091$mjVUK)
        (reverse! . g$13090$mjVUK)
        (deserialize-port . g$13089$mjVUK)
        (serialize-port . g$13088$mjVUK)
        (enum-set? . g$8211$mjVUK)
        (make-promise . g$7668$mjVUK)
        (load/args . g$12915$mjVUK)
        (printf . g$8322$mjVUK)
        (fprintf . g$8323$mjVUK)
        (format . g$8324$mjVUK)
        (procedure-form . g$13087$mjVUK)
        (procedure-environment . g$13086$mjVUK)
        (procedure-name . g$13085$mjVUK)
        (procedure-arity . g$13084$mjVUK)
        (gc-collect . g$13083$mjVUK)
        (clr-type? . g$13082$mjVUK)
        (get-clr-type . g$13081$mjVUK)
        (get-command-line . g$13080$mjVUK)
        (vector-append . g$13079$mjVUK)
        (vector-filter . g$13078$mjVUK)
        (vector-reverse! . g$13077$mjVUK)
        (vector-contains? . g$13076$mjVUK)
        (vector-index-of . g$13075$mjVUK)
        (vector-copy . g$13074$mjVUK)
        (vector-binary-search . g$13073$mjVUK)
        (string-ci-compare . g$13072$mjVUK)
        (string-compare . g$13071$mjVUK)
        (string-format . g$13070$mjVUK)
        (trace-printer . g$12912$mjVUK)
        (make-traced-procedure . g$13069$mjVUK)
        (make-traced-macro . g$8344$mjVUK)
        (assertion-error . g$9911$mjVUK)
        (time-it . g$13068$mjVUK)
        (make-parameter . g$8602$mjVUK)
        (library-locator . g$13067$mjVUK)
        (get-library-paths . g$13066$mjVUK)
        (open-tcp-input/output-port . g$13065$mjVUK)
        (hashtable-for-each . g$13064$mjVUK)
        (hashtable-map . g$13063$mjVUK)
        (environment-bindings . g$9889$mjVUK)
        (environment-symbols . g$9892$mjVUK)
        (interaction-environment-symbols . g$9888$mjVUK)
        (optimization-level . g$13062$mjVUK)
        (library-path . g$9062$mjVUK)
        (make-compile-time-value . g$9517$mjVUK)
        (expand->core . g$9898$mjVUK)
        (expand . g$9896$mjVUK)
        (convert->cps . g$8398$mjVUK)
        (installed-libraries . g$9083$mjVUK)
        (uninstall-library . g$9074$mjVUK)
        (&no-nans . g$13061$mjVUK)
        (&no-infinities . g$13060$mjVUK)
        (&i/o-encoding . g$13059$mjVUK)
        (&i/o-decoding . g$13058$mjVUK)
        (&i/o-port . g$13057$mjVUK)
        (&i/o-file-does-not-exist . g$13056$mjVUK)
        (&i/o-file-already-exists . g$13055$mjVUK)
        (&i/o-file-is-read-only . g$13054$mjVUK)
        (&i/o-file-protection . g$13053$mjVUK)
        (&i/o-filename . g$13052$mjVUK)
        (&i/o-invalid-position . g$13051$mjVUK)
        (&i/o-write . g$13050$mjVUK)
        (&i/o-read . g$13049$mjVUK)
        (&i/o . g$13048$mjVUK)
        (&non-continuable . g$13047$mjVUK)
        (&undefined . g$13046$mjVUK)
        (&syntax . g$13045$mjVUK)
        (&lexical . g$13044$mjVUK)
        (&implementation-restriction . g$13043$mjVUK)
        (&who . g$13042$mjVUK)
        (&irritants . g$13041$mjVUK)
        (&assertion . g$13040$mjVUK)
        (&violation . g$13039$mjVUK)
        (&error . g$13038$mjVUK)
        (&serious . g$13037$mjVUK)
        (&warning . g$13036$mjVUK)
        (&message . g$13035$mjVUK)
        (&condition . g$13034$mjVUK)
        (define-condition-type . g$13033$mjVUK)
        (define-enumeration . g$13032$mjVUK)
        (define-record-type . g$13031$mjVUK)
        (parent-rtd . g$13030$mjVUK)
        (nongenerative . g$13029$mjVUK)
        (opaque . g$13028$mjVUK)
        (sealed . g$13027$mjVUK)
        (protocol . g$13026$mjVUK)
        (parent . g$13025$mjVUK)
        (immutable . g$13024$mjVUK)
        (mutable . g$13023$mjVUK)
        (fields . g$13022$mjVUK)
        (error-handling-mode . g$13021$mjVUK)
        (file-options . g$13020$mjVUK)
        (buffer-mode . g$13019$mjVUK)
        (eol-style . g$13018$mjVUK)
        (guard . g$13017$mjVUK)
        (trace-letrec-syntax . g$13016$mjVUK)
        (trace-let-syntax . g$13015$mjVUK)
        (trace-define-syntax . g$13014$mjVUK)
        (trace-define . g$13013$mjVUK)
        (trace-lambda . g$13012$mjVUK)
        (unsyntax-splicing . g$13011$mjVUK)
        (unsyntax . g$13010$mjVUK)
        (unquote-splicing . g$13009$mjVUK)
        (unquote . g$13008$mjVUK)
        (_ . g$13007$mjVUK)
        (else . g$13006$mjVUK)
        (=> . g$13005$mjVUK)
        (... . g$13004$mjVUK)
        (assert . g$13003$mjVUK)
        (endianness . g$13002$mjVUK)
        (delay . g$13001$mjVUK)
        (time . g$13000$mjVUK)
        (or . g$12999$mjVUK)
        (and . g$12998$mjVUK)
        (do . g$12997$mjVUK)
        (cond . g$12996$mjVUK)
        (let* . g$12995$mjVUK)
        (let . g$12994$mjVUK)
        (identifier-syntax . g$12993$mjVUK)
        (with-syntax . g$12992$mjVUK)
        (quasisyntax . g$12991$mjVUK)
        (quasiquote . g$12990$mjVUK)
        (syntax-rules . g$12989$mjVUK)
        (include-into . g$12988$mjVUK)
        (include . g$12987$mjVUK)
        (define-struct . g$12986$mjVUK)
        (let-values . g$12985$mjVUK)
        (let*-values . g$12984$mjVUK)
        (record-constructor-descriptor . g$12983$mjVUK)
        (record-type-descriptor . g$12982$mjVUK)
        (fluid-let-syntax . g$12981$mjVUK)
        (case . g$12980$mjVUK)
        (parameterize . g$12979$mjVUK)
        (unless . g$12978$mjVUK)
        (when . g$12977$mjVUK)
        (if . g$12976$mjVUK)
        (letrec* . g$12975$mjVUK)
        (letrec . g$12974$mjVUK)
        (type-descriptor . g$12973$mjVUK)
        (case-lambda . g$12972$mjVUK)
        (lambda . g$12971$mjVUK)
        (syntax . g$12970$mjVUK)
        (syntax-case . g$12969$mjVUK)
        (quote . g$12968$mjVUK)
        (foreign-call . g$12967$mjVUK)
        (letrec-syntax . g$12966$mjVUK)
        (let-syntax . g$12965$mjVUK)
        (set! . g$12964$mjVUK)
        (export . g$12963$mjVUK)
        (import . g$12962$mjVUK)
        (library . g$12961$mjVUK)
        (begin . g$12960$mjVUK)
        (module . g$12959$mjVUK)
        (define-syntax . g$12958$mjVUK)
        (define . g$12957$mjVUK))
      '((g$9787$mjVUK core-prim . ellipsis-map)
        (g$13545$mjVUK core-prim . &no-nans-rcd)
        (g$13544$mjVUK core-prim . &no-nans-rtd)
        (g$13543$mjVUK core-prim . &no-infinities-rcd)
        (g$13542$mjVUK core-prim . &no-infinities-rtd)
        (g$13541$mjVUK core-prim . &i/o-encoding-rcd)
        (g$13540$mjVUK core-prim . &i/o-encoding-rtd)
        (g$13539$mjVUK core-prim . &i/o-decoding-rcd)
        (g$13538$mjVUK core-prim . &i/o-decoding-rtd)
        (g$13537$mjVUK core-prim . &i/o-port-rcd)
        (g$13536$mjVUK core-prim . &i/o-port-rtd)
        (g$13535$mjVUK core-prim . &i/o-file-does-not-exist-rcd)
        (g$13534$mjVUK core-prim . &i/o-file-does-not-exist-rtd)
        (g$13533$mjVUK core-prim . &i/o-file-already-exists-rcd)
        (g$13532$mjVUK core-prim . &i/o-file-already-exists-rtd)
        (g$13531$mjVUK core-prim . &i/o-file-is-read-only-rcd)
        (g$13530$mjVUK core-prim . &i/o-file-is-read-only-rtd)
        (g$13529$mjVUK core-prim . &i/o-file-protection-rcd)
        (g$13528$mjVUK core-prim . &i/o-file-protection-rtd)
        (g$13527$mjVUK core-prim . &i/o-filename-rcd)
        (g$13526$mjVUK core-prim . &i/o-filename-rtd)
        (g$13525$mjVUK core-prim . &i/o-invalid-position-rcd)
        (g$13524$mjVUK core-prim . &i/o-invalid-position-rtd)
        (g$13523$mjVUK core-prim . &i/o-write-rcd)
        (g$13522$mjVUK core-prim . &i/o-write-rtd)
        (g$13521$mjVUK core-prim . &i/o-read-rcd)
        (g$13520$mjVUK core-prim . &i/o-read-rtd)
        (g$13519$mjVUK core-prim . &i/o-rcd)
        (g$13518$mjVUK core-prim . &i/o-rtd)
        (g$13517$mjVUK core-prim . &undefined-rcd)
        (g$13516$mjVUK core-prim . &undefined-rtd)
        (g$13515$mjVUK core-prim . &syntax-rcd)
        (g$13514$mjVUK core-prim . &syntax-rtd)
        (g$13513$mjVUK core-prim . &lexical-rcd)
        (g$13512$mjVUK core-prim . &lexical-rtd)
        (g$13511$mjVUK core-prim . &implementation-restriction-rcd)
        (g$13510$mjVUK core-prim . &implementation-restriction-rtd)
        (g$13509$mjVUK core-prim . &non-continuable-rcd)
        (g$13508$mjVUK core-prim . &non-continuable-rtd)
        (g$13507$mjVUK core-prim . &who-rcd)
        (g$13506$mjVUK core-prim . &who-rtd)
        (g$13505$mjVUK core-prim . &irritants-rcd)
        (g$13504$mjVUK core-prim . &irritants-rtd)
        (g$13503$mjVUK core-prim . &assertion-rcd)
        (g$13502$mjVUK core-prim . &assertion-rtd)
        (g$13501$mjVUK core-prim . &violation-rcd)
        (g$13500$mjVUK core-prim . &violation-rtd)
        (g$13499$mjVUK core-prim . &error-rcd)
        (g$13498$mjVUK core-prim . &error-rtd)
        (g$13497$mjVUK core-prim . &serious-rcd)
        (g$13496$mjVUK core-prim . &serious-rtd)
        (g$13495$mjVUK core-prim . &warning-rcd)
        (g$13494$mjVUK core-prim . &warning-rtd)
        (g$13493$mjVUK core-prim . &message-rcd)
        (g$13492$mjVUK core-prim . &message-rtd)
        (g$13491$mjVUK core-prim . &condition-rcd)
        (g$13490$mjVUK core-prim . &condition-rtd)
        (g$13489$mjVUK core-prim . library-letrec*)
        (g$13488$mjVUK core-prim . annotation-stripped)
        (g$13487$mjVUK core-prim . annotation-source)
        (g$13486$mjVUK core-prim . annotation-expression)
        (g$13485$mjVUK core-prim . annotation?)
        (g$13484$mjVUK core-prim . read-annotated)
        (g$13483$mjVUK core-prim . tanh)
        (g$13482$mjVUK core-prim . cosh)
        (g$13481$mjVUK core-prim . sinh)
        (g$13480$mjVUK core-prim . make-guid)
        (g$13479$mjVUK core-prim . unspecified?)
        (g$6578$mjVUK core-prim . make-list)
        (g$6577$mjVUK core-prim . last-pair)
        (g$13478$mjVUK core-prim . load-r5rs)
        (g$13477$mjVUK core-prim . license)
        (g$13476$mjVUK core-prim . stacktrace)
        (g$12917$mjVUK core-prim . ironscheme-build)
        (g$13475$mjVUK core-prim . define-clr-class-internal)
        (g$13474$mjVUK core-prim . clr-field-set!-internal)
        (g$13473$mjVUK core-prim . clr-field-get-internal)
        (g$13472$mjVUK core-prim . clr-cast-internal)
        (g$13471$mjVUK core-prim . clr-call-internal)
        (g$13470$mjVUK core-prim . clr-new-internal)
        (g$13469$mjVUK core-prim . clr-new-array-internal)
        (g$13468$mjVUK core-prim . clr-is-internal)
        (g$13467$mjVUK core-prim . clr-reference-internal)
        (g$13466$mjVUK core-prim . clr-using-internal)
        (g$9912$mjVUK core-prim . syntax-error)
        (g$9782$mjVUK core-prim . syntax-dispatch)
        (g$13465$mjVUK core-prim . compile-core)
        (g$13464$mjVUK core-prim . eval-core)
        (g$13463$mjVUK core-prim . set-symbol-value!)
        (g$13462$mjVUK core-prim . symbol-value)
        (g$13461$mjVUK core-prim . symbol-bound?)
        (g$13460$mjVUK core-prim . ungensym)
        (g$13459$mjVUK core-prim . gensym)
        (g$13458$mjVUK core-prim . void)
        (g$13457$mjVUK core-prim . load-serialized-library)
        (g$13456$mjVUK core-prim . serialize-library)
        (g$12920$mjVUK core-prim . compile-system-libraries)
        (g$12922$mjVUK core-prim . compile->closure)
        (g$12921$mjVUK core-prim . compile)
        (g$12916$mjVUK core-prim . load)
        (g$9922$mjVUK core-prim . interaction-environment)
        (g$13455$mjVUK core-prim . char-ready?)
        (g$13454$mjVUK core-prim . string-upcase)
        (g$13453$mjVUK core-prim . string-titlecase)
        (g$13452$mjVUK core-prim . string-normalize-nfkd)
        (g$13451$mjVUK core-prim . string-normalize-nfkc)
        (g$13450$mjVUK core-prim . string-normalize-nfd)
        (g$13449$mjVUK core-prim . string-normalize-nfc)
        (g$13448$mjVUK core-prim . string-foldcase)
        (g$13447$mjVUK core-prim . string-downcase)
        (g$7746$mjVUK core-prim . string-ci>?)
        (g$7748$mjVUK core-prim . string-ci>=?)
        (g$7744$mjVUK core-prim . string-ci=?)
        (g$7745$mjVUK core-prim . string-ci<?)
        (g$7747$mjVUK core-prim . string-ci<=?)
        (g$13446$mjVUK core-prim . char-whitespace?)
        (g$13445$mjVUK core-prim . char-upper-case?)
        (g$13444$mjVUK core-prim . char-title-case?)
        (g$13443$mjVUK core-prim . char-numeric?)
        (g$13442$mjVUK core-prim . char-lower-case?)
        (g$13441$mjVUK core-prim . char-general-category)
        (g$13440$mjVUK core-prim . char-upcase)
        (g$13439$mjVUK core-prim . char-titlecase)
        (g$13438$mjVUK core-prim . char-foldcase)
        (g$13437$mjVUK core-prim . char-downcase)
        (g$7785$mjVUK core-prim . char-ci>?)
        (g$7787$mjVUK core-prim . char-ci>=?)
        (g$7783$mjVUK core-prim . char-ci=?)
        (g$7784$mjVUK core-prim . char-ci<?)
        (g$7786$mjVUK core-prim . char-ci<=?)
        (g$13436$mjVUK core-prim . char-alphabetic?)
        (g$9519$mjVUK core-prim . variable-transformer-procedure)
        (g$9518$mjVUK core-prim . variable-transformer?)
        (g$9516$mjVUK core-prim . make-variable-transformer)
        (g$9916$mjVUK core-prim . identifier?)
        (g$9905$mjVUK core-prim . generate-temporaries)
        (g$9906$mjVUK core-prim . free-identifier=?)
        (g$9918$mjVUK core-prim . syntax->datum)
        (g$9917$mjVUK core-prim . datum->syntax)
        (g$9907$mjVUK core-prim . bound-identifier=?)
        (g$13435$mjVUK core-prim . record-type-descriptor?)
        (g$13434$mjVUK core-prim . record-predicate)
        (g$13433$mjVUK core-prim . record-mutator)
        (g$13432$mjVUK core-prim . record-constructor)
        (g$13431$mjVUK core-prim . record-accessor)
        (g$13430$mjVUK core-prim . make-record-type-descriptor)
        (g$13429$mjVUK core-prim . make-record-constructor-descriptor)
        (g$13428$mjVUK core-prim . record?)
        (g$13427$mjVUK core-prim . record-type-uid)
        (g$13426$mjVUK core-prim . record-type-sealed?)
        (g$13425$mjVUK core-prim . record-type-parent)
        (g$13424$mjVUK core-prim . record-type-opaque?)
        (g$13423$mjVUK core-prim . record-type-name)
        (g$13422$mjVUK core-prim . record-type-generative?)
        (g$13421$mjVUK core-prim . record-type-field-names)
        (g$13420$mjVUK core-prim . record-rtd)
        (g$13419$mjVUK core-prim . record-field-mutable?)
        (g$7320$mjVUK core-prim . delete-file)
        (g$7319$mjVUK core-prim . file-exists?)
        (g$13418$mjVUK core-prim . vector-sort!)
        (g$13417$mjVUK core-prim . vector-sort)
        (g$7686$mjVUK core-prim . list-sort)
        (g$13416$mjVUK core-prim . symbol-hash)
        (g$13415$mjVUK core-prim . string-ci-hash)
        (g$13414$mjVUK core-prim . string-hash)
        (g$13413$mjVUK core-prim . equal-hash)
        (g$13412$mjVUK core-prim . hashtable-equivalence-function)
        (g$13411$mjVUK core-prim . make-hashtable)
        (g$13410$mjVUK core-prim . hashtable-hash-function)
        (g$7288$mjVUK core-prim . make-eqv-hashtable)
        (g$7287$mjVUK core-prim . make-eq-hashtable)
        (g$13409$mjVUK core-prim . hashtable?)
        (g$7294$mjVUK core-prim . hashtable-update!)
        (g$7289$mjVUK core-prim . hashtable-size)
        (g$7291$mjVUK core-prim . hashtable-set!)
        (g$7290$mjVUK core-prim . hashtable-ref)
        (g$13408$mjVUK core-prim . hashtable-mutable?)
        (g$13407$mjVUK core-prim . hashtable-keys)
        (g$13406$mjVUK core-prim . hashtable-entries)
        (g$7292$mjVUK core-prim . hashtable-delete!)
        (g$13405$mjVUK core-prim . hashtable-copy)
        (g$7293$mjVUK core-prim . hashtable-contains?)
        (g$7295$mjVUK core-prim . hashtable-clear!)
        (g$8171$mjVUK core-prim . call-with-output-file)
        (g$8170$mjVUK core-prim . call-with-input-file)
        (g$8152$mjVUK core-prim . write-char)
        (g$13404$mjVUK core-prim . write)
        (g$8169$mjVUK core-prim . with-output-to-file)
        (g$8168$mjVUK core-prim . with-input-from-file)
        (g$8151$mjVUK core-prim . read-char)
        (g$13403$mjVUK core-prim . read)
        (g$8150$mjVUK core-prim . peek-char)
        (g$13402$mjVUK core-prim . open-output-file)
        (g$13401$mjVUK core-prim . open-input-file)
        (g$8172$mjVUK core-prim . newline)
        (g$13400$mjVUK core-prim . display)
        (g$13399$mjVUK core-prim . close-output-port)
        (g$13398$mjVUK core-prim . close-input-port)
        (g$13397$mjVUK core-prim . eof-object?)
        (g$13396$mjVUK core-prim . eof-object)
        (g$13395$mjVUK core-prim . current-error-port)
        (g$13394$mjVUK core-prim . current-output-port)
        (g$13393$mjVUK core-prim . current-input-port)
        (g$13392$mjVUK core-prim . output-port?)
        (g$13391$mjVUK core-prim . input-port?)
        (g$13390$mjVUK core-prim . utf-8-codec)
        (g$13389$mjVUK core-prim . utf-16-codec)
        (g$13388$mjVUK core-prim . transcoder-error-handling-mode)
        (g$13387$mjVUK core-prim . transcoder-eol-style)
        (g$13386$mjVUK core-prim . transcoder-codec)
        (g$13385$mjVUK core-prim . transcoded-port)
        (g$13384$mjVUK core-prim . textual-port?)
        (g$13383$mjVUK core-prim . string->bytevector)
        (g$13382$mjVUK core-prim . standard-output-port)
        (g$13381$mjVUK core-prim . standard-input-port)
        (g$13380$mjVUK core-prim . standard-error-port)
        (g$13379$mjVUK core-prim . set-port-position!)
        (g$13378$mjVUK core-prim . put-u8)
        (g$13377$mjVUK core-prim . put-string)
        (g$13376$mjVUK core-prim . put-datum)
        (g$13375$mjVUK core-prim . put-char)
        (g$13374$mjVUK core-prim . put-bytevector)
        (g$8137$mjVUK core-prim . port?)
        (g$13373$mjVUK core-prim . port-transcoder)
        (g$13372$mjVUK core-prim . port-position)
        (g$13371$mjVUK core-prim . port-has-set-port-position!?)
        (g$13370$mjVUK core-prim . port-has-port-position?)
        (g$13369$mjVUK core-prim . port-eof?)
        (g$13368$mjVUK core-prim . output-port-buffer-mode)
        (g$8136$mjVUK core-prim . open-string-output-port)
        (g$13367$mjVUK core-prim . open-string-input-port)
        (g$13366$mjVUK core-prim . open-file-output-port)
        (g$13365$mjVUK core-prim . open-file-input/output-port)
        (g$13364$mjVUK core-prim . open-file-input-port)
        (g$13363$mjVUK core-prim . open-bytevector-output-port)
        (g$13362$mjVUK core-prim . open-bytevector-input-port)
        (g$13361$mjVUK core-prim . native-transcoder)
        (g$13360$mjVUK core-prim . native-eol-style)
        (g$13359$mjVUK core-prim . make-transcoder)
        (g$13358$mjVUK core-prim . latin-1-codec)
        (g$7992$mjVUK core-prim . make-i/o-write-error)
        (g$7978$mjVUK core-prim . make-i/o-read-error)
        (g$8097$mjVUK core-prim . make-i/o-port-error)
        (g$8007$mjVUK core-prim . make-i/o-invalid-position-error)
        (g$8024$mjVUK core-prim . make-i/o-filename-error)
        (g$8040$mjVUK core-prim . make-i/o-file-protection-error)
        (g$8054$mjVUK core-prim . make-i/o-file-is-read-only-error)
        (g$8082$mjVUK core-prim . make-i/o-file-does-not-exist-error)
        (g$8068$mjVUK core-prim . make-i/o-file-already-exists-error)
        (g$7964$mjVUK core-prim . make-i/o-error)
        (g$8128$mjVUK core-prim . make-i/o-encoding-error)
        (g$8113$mjVUK core-prim . make-i/o-decoding-error)
        (g$13357$mjVUK core-prim . make-custom-textual-output-port)
        (g$13356$mjVUK core-prim . make-custom-textual-input/output-port)
        (g$13355$mjVUK core-prim . make-custom-textual-input-port)
        (g$13354$mjVUK core-prim . make-custom-binary-output-port)
        (g$13353$mjVUK core-prim . make-custom-binary-input/output-port)
        (g$13352$mjVUK core-prim . make-custom-binary-input-port)
        (g$13351$mjVUK core-prim . make-bytevector)
        (g$13350$mjVUK core-prim . lookahead-u8)
        (g$13349$mjVUK core-prim . lookahead-char)
        (g$7993$mjVUK core-prim . i/o-write-error?)
        (g$7979$mjVUK core-prim . i/o-read-error?)
        (g$8099$mjVUK core-prim . i/o-port-error?)
        (g$8009$mjVUK core-prim . i/o-invalid-position-error?)
        (g$8010$mjVUK core-prim . i/o-error-position)
        (g$8026$mjVUK core-prim . i/o-filename-error?)
        (g$8041$mjVUK core-prim . i/o-file-protection-error?)
        (g$8055$mjVUK core-prim . i/o-file-is-read-only-error?)
        (g$8083$mjVUK core-prim . i/o-file-does-not-exist-error?)
        (g$8069$mjVUK core-prim . i/o-file-already-exists-error?)
        (g$7965$mjVUK core-prim . i/o-error?)
        (g$8100$mjVUK core-prim . i/o-error-port)
        (g$8027$mjVUK core-prim . i/o-error-filename)
        (g$8130$mjVUK core-prim . i/o-encoding-error?)
        (g$8131$mjVUK core-prim . i/o-encoding-error-char)
        (g$8114$mjVUK core-prim . i/o-decoding-error?)
        (g$13348$mjVUK core-prim . get-u8)
        (g$13347$mjVUK core-prim . get-string-n!)
        (g$13346$mjVUK core-prim . get-string-n)
        (g$13345$mjVUK core-prim . get-string-all)
        (g$13344$mjVUK core-prim . get-line)
        (g$13343$mjVUK core-prim . get-datum)
        (g$13342$mjVUK core-prim . get-char)
        (g$13341$mjVUK core-prim . get-bytevector-some)
        (g$13340$mjVUK core-prim . get-bytevector-n!)
        (g$13339$mjVUK core-prim . get-bytevector-n)
        (g$13338$mjVUK core-prim . get-bytevector-all)
        (g$13337$mjVUK core-prim . flush-output-port)
        (g$13336$mjVUK core-prim . close-port)
        (g$8138$mjVUK core-prim . call-with-string-output-port)
        (g$8139$mjVUK core-prim . call-with-port)
        (g$13335$mjVUK core-prim . call-with-bytevector-output-port)
        (g$13334$mjVUK core-prim . bytevector->string)
        (g$13333$mjVUK core-prim . buffer-mode?)
        (g$13332$mjVUK core-prim . binary-port?)
        (g$9895$mjVUK core-prim . scheme-report-environment)
        (g$7665$mjVUK core-prim . quotient)
        (g$9894$mjVUK core-prim . null-environment)
        (g$7666$mjVUK core-prim . remainder)
        (g$7667$mjVUK core-prim . modulo)
        (g$7662$mjVUK core-prim . inexact->exact)
        (g$7669$mjVUK core-prim . force)
        (g$7663$mjVUK core-prim . exact->inexact)
        (g$13331$mjVUK core-prim . exit)
        (g$12913$mjVUK core-prim . command-line)
        (g$13330$mjVUK core-prim . string-fill!)
        (g$13329$mjVUK core-prim . string-set!)
        (g$13328$mjVUK core-prim . set-cdr!)
        (g$13327$mjVUK core-prim . set-car!)
        (g$6600$mjVUK core-prim . remove)
        (g$6601$mjVUK core-prim . remv)
        (g$6581$mjVUK core-prim . remp)
        (g$6602$mjVUK core-prim . remq)
        (g$6580$mjVUK core-prim . partition)
        (g$6588$mjVUK core-prim . memv)
        (g$6587$mjVUK core-prim . memq)
        (g$6590$mjVUK core-prim . memp)
        (g$6589$mjVUK core-prim . member)
        (g$6594$mjVUK core-prim . exists)
        (g$6593$mjVUK core-prim . for-all)
        (g$6599$mjVUK core-prim . fold-right)
        (g$6598$mjVUK core-prim . fold-left)
        (g$6579$mjVUK core-prim . find)
        (g$6582$mjVUK core-prim . filter)
        (g$6597$mjVUK core-prim . cons*)
        (g$6584$mjVUK core-prim . assv)
        (g$6583$mjVUK core-prim . assq)
        (g$6586$mjVUK core-prim . assp)
        (g$6585$mjVUK core-prim . assoc)
        (g$13326$mjVUK core-prim . with-exception-handler)
        (g$13325$mjVUK core-prim . raise-continuable)
        (g$13324$mjVUK core-prim . raise)
        (g$9897$mjVUK core-prim . eval)
        (g$9893$mjVUK core-prim . environment)
        (g$8236$mjVUK core-prim . make-enumeration)
        (g$8243$mjVUK core-prim . enum-set=?)
        (g$8237$mjVUK core-prim . enum-set-universe)
        (g$8244$mjVUK core-prim . enum-set-union)
        (g$8242$mjVUK core-prim . enum-set-subset?)
        (g$8248$mjVUK core-prim . enum-set-projection)
        (g$8241$mjVUK core-prim . enum-set-member?)
        (g$8245$mjVUK core-prim . enum-set-intersection)
        (g$8238$mjVUK core-prim . enum-set-indexer)
        (g$8246$mjVUK core-prim . enum-set-difference)
        (g$8239$mjVUK core-prim . enum-set-constructor)
        (g$8247$mjVUK core-prim . enum-set-complement)
        (g$8240$mjVUK core-prim . enum-set->list)
        (g$7574$mjVUK core-prim . who-condition?)
        (g$7485$mjVUK core-prim . warning?)
        (g$7527$mjVUK core-prim . violation?)
        (g$7651$mjVUK core-prim . undefined-violation?)
        (g$7635$mjVUK core-prim . syntax-violation?)
        (g$7637$mjVUK core-prim . syntax-violation-subform)
        (g$7636$mjVUK core-prim . syntax-violation-form)
        (g$9915$mjVUK core-prim . syntax-violation)
        (g$13323$mjVUK core-prim . simple-conditions)
        (g$7499$mjVUK core-prim . serious-condition?)
        (g$7589$mjVUK core-prim . non-continuable-violation?)
        (g$7470$mjVUK core-prim . message-condition?)
        (g$7572$mjVUK core-prim . make-who-condition)
        (g$7484$mjVUK core-prim . make-warning)
        (g$7526$mjVUK core-prim . make-violation)
        (g$7650$mjVUK core-prim . make-undefined-violation)
        (g$7632$mjVUK core-prim . make-syntax-violation)
        (g$7498$mjVUK core-prim . make-serious-condition)
        (g$7588$mjVUK core-prim . make-non-continuable-violation)
        (g$7468$mjVUK core-prim . make-message-condition)
        (g$7616$mjVUK core-prim . make-lexical-violation)
        (g$7555$mjVUK core-prim . make-irritants-condition)
        (g$7602$mjVUK core-prim . make-implementation-restriction-violation)
        (g$7512$mjVUK core-prim . make-error)
        (g$7540$mjVUK core-prim . make-assertion-violation)
        (g$7617$mjVUK core-prim . lexical-violation?)
        (g$7557$mjVUK core-prim . irritants-condition?)
        (g$7603$mjVUK core-prim . implementation-restriction-violation?)
        (g$7513$mjVUK core-prim . error?)
        (g$7575$mjVUK core-prim . condition-who)
        (g$13322$mjVUK core-prim . condition-predicate)
        (g$7471$mjVUK core-prim . condition-message)
        (g$7558$mjVUK core-prim . condition-irritants)
        (g$13321$mjVUK core-prim . condition-accessor)
        (g$13320$mjVUK core-prim . condition)
        (g$7541$mjVUK core-prim . assertion-violation?)
        (g$13319$mjVUK core-prim . condition?)
        (g$13318$mjVUK core-prim . utf32->string)
        (g$13317$mjVUK core-prim . utf16->string)
        (g$13316$mjVUK core-prim . utf8->string)
        (g$13315$mjVUK core-prim . uint-list->bytevector)
        (g$13314$mjVUK core-prim . u8-list->bytevector)
        (g$13313$mjVUK core-prim . string->utf8)
        (g$13312$mjVUK core-prim . string->utf32)
        (g$13311$mjVUK core-prim . string->utf16)
        (g$13310$mjVUK core-prim . sint-list->bytevector)
        (g$7326$mjVUK core-prim . native-endianness)
        (g$13309$mjVUK core-prim . bytevector?)
        (g$13308$mjVUK core-prim . bytevector=?)
        (g$13307$mjVUK core-prim . bytevector-uint-set!)
        (g$13306$mjVUK core-prim . bytevector-uint-ref)
        (g$13305$mjVUK core-prim . bytevector-u8-set!)
        (g$13304$mjVUK core-prim . bytevector-u8-ref)
        (g$7347$mjVUK core-prim . bytevector-u64-set!)
        (g$7343$mjVUK core-prim . bytevector-u64-ref)
        (g$7349$mjVUK core-prim . bytevector-u64-native-set!)
        (g$7345$mjVUK core-prim . bytevector-u64-native-ref)
        (g$7339$mjVUK core-prim . bytevector-u32-set!)
        (g$7335$mjVUK core-prim . bytevector-u32-ref)
        (g$7341$mjVUK core-prim . bytevector-u32-native-set!)
        (g$7337$mjVUK core-prim . bytevector-u32-native-ref)
        (g$7331$mjVUK core-prim . bytevector-u16-set!)
        (g$7327$mjVUK core-prim . bytevector-u16-ref)
        (g$7333$mjVUK core-prim . bytevector-u16-native-set!)
        (g$7329$mjVUK core-prim . bytevector-u16-native-ref)
        (g$13303$mjVUK core-prim . bytevector-sint-set!)
        (g$13302$mjVUK core-prim . bytevector-sint-ref)
        (g$13301$mjVUK core-prim . bytevector-s8-set!)
        (g$13300$mjVUK core-prim . bytevector-s8-ref)
        (g$7348$mjVUK core-prim . bytevector-s64-set!)
        (g$7344$mjVUK core-prim . bytevector-s64-ref)
        (g$7350$mjVUK core-prim . bytevector-s64-native-set!)
        (g$7346$mjVUK core-prim . bytevector-s64-native-ref)
        (g$7340$mjVUK core-prim . bytevector-s32-set!)
        (g$7336$mjVUK core-prim . bytevector-s32-ref)
        (g$7342$mjVUK core-prim . bytevector-s32-native-set!)
        (g$7338$mjVUK core-prim . bytevector-s32-native-ref)
        (g$7332$mjVUK core-prim . bytevector-s16-set!)
        (g$7328$mjVUK core-prim . bytevector-s16-ref)
        (g$7334$mjVUK core-prim . bytevector-s16-native-set!)
        (g$7330$mjVUK core-prim . bytevector-s16-native-ref)
        (g$13299$mjVUK core-prim . bytevector-length)
        (g$13298$mjVUK core-prim . bytevector-ieee-single-set!)
        (g$13297$mjVUK core-prim . bytevector-ieee-single-ref)
        (g$7353$mjVUK core-prim . bytevector-ieee-single-native-set!)
        (g$7351$mjVUK core-prim . bytevector-ieee-single-native-ref)
        (g$13296$mjVUK core-prim . bytevector-ieee-double-set!)
        (g$13295$mjVUK core-prim . bytevector-ieee-double-ref)
        (g$7354$mjVUK core-prim . bytevector-ieee-double-native-set!)
        (g$7352$mjVUK core-prim . bytevector-ieee-double-native-ref)
        (g$13294$mjVUK core-prim . bytevector-fill!)
        (g$13293$mjVUK core-prim . bytevector-copy!)
        (g$13292$mjVUK core-prim . bytevector-copy)
        (g$13291$mjVUK core-prim . bytevector->uint-list)
        (g$13290$mjVUK core-prim . bytevector->u8-list)
        (g$13289$mjVUK core-prim . bytevector->sint-list)
        (g$7950$mjVUK core-prim . no-nans-violation?)
        (g$7936$mjVUK core-prim . no-infinities-violation?)
        (g$7949$mjVUK core-prim . make-no-nans-violation)
        (g$7935$mjVUK core-prim . make-no-infinities-violation)
        (g$13288$mjVUK core-prim . real->flonum)
        (g$13287$mjVUK core-prim . flzero?)
        (g$13286$mjVUK core-prim . fltruncate)
        (g$13285$mjVUK core-prim . fltan)
        (g$13284$mjVUK core-prim . flsqrt)
        (g$13283$mjVUK core-prim . flsin)
        (g$13282$mjVUK core-prim . flround)
        (g$13281$mjVUK core-prim . flpositive?)
        (g$13280$mjVUK core-prim . flonum?)
        (g$13279$mjVUK core-prim . flodd?)
        (g$13278$mjVUK core-prim . flnumerator)
        (g$13277$mjVUK core-prim . flnegative?)
        (g$13276$mjVUK core-prim . flnan?)
        (g$13275$mjVUK core-prim . flmod0)
        (g$13274$mjVUK core-prim . flmod)
        (g$13273$mjVUK core-prim . flmin)
        (g$13272$mjVUK core-prim . flmax)
        (g$13271$mjVUK core-prim . fllog)
        (g$13270$mjVUK core-prim . flinteger?)
        (g$13269$mjVUK core-prim . flinfinite?)
        (g$13268$mjVUK core-prim . flfloor)
        (g$13267$mjVUK core-prim . flfinite?)
        (g$13266$mjVUK core-prim . flexpt)
        (g$13265$mjVUK core-prim . flexp)
        (g$13264$mjVUK core-prim . fleven?)
        (g$13263$mjVUK core-prim . fldiv0-and-mod0)
        (g$13262$mjVUK core-prim . fldiv0)
        (g$13261$mjVUK core-prim . fldiv-and-mod)
        (g$13260$mjVUK core-prim . fldiv)
        (g$13259$mjVUK core-prim . fldenominator)
        (g$13258$mjVUK core-prim . flcos)
        (g$13257$mjVUK core-prim . flceiling)
        (g$13256$mjVUK core-prim . flatan)
        (g$13255$mjVUK core-prim . flasin)
        (g$13254$mjVUK core-prim . flacos)
        (g$13253$mjVUK core-prim . flabs)
        (g$13252$mjVUK core-prim . fl>?)
        (g$13251$mjVUK core-prim . fl>=?)
        (g$13250$mjVUK core-prim . fl=?)
        (g$13249$mjVUK core-prim . fl<?)
        (g$13248$mjVUK core-prim . fl<=?)
        (g$13247$mjVUK core-prim . fl/)
        (g$13246$mjVUK core-prim . fl-)
        (g$13245$mjVUK core-prim . fl+)
        (g$13244$mjVUK core-prim . fl*)
        (g$13243$mjVUK core-prim . fixnum->flonum)
        (g$13242$mjVUK core-prim . fxzero?)
        (g$13241$mjVUK core-prim . fxxor)
        (g$7882$mjVUK core-prim . fxrotate-bit-field)
        (g$13240$mjVUK core-prim . fxreverse-bit-field)
        (g$13239$mjVUK core-prim . fxpositive?)
        (g$13238$mjVUK core-prim . fxodd?)
        (g$13237$mjVUK core-prim . fxnot)
        (g$13236$mjVUK core-prim . fxnegative?)
        (g$13235$mjVUK core-prim . fxmod0)
        (g$13234$mjVUK core-prim . fxmod)
        (g$13233$mjVUK core-prim . fxmin)
        (g$13232$mjVUK core-prim . fxmax)
        (g$13231$mjVUK core-prim . fxlength)
        (g$13230$mjVUK core-prim . fxior)
        (g$7876$mjVUK core-prim . fxif)
        (g$13229$mjVUK core-prim . fxfirst-bit-set)
        (g$13228$mjVUK core-prim . fxeven?)
        (g$13227$mjVUK core-prim . fxdiv0-and-mod0)
        (g$13226$mjVUK core-prim . fxdiv0)
        (g$13225$mjVUK core-prim . fxdiv-and-mod)
        (g$13224$mjVUK core-prim . fxdiv)
        (g$7879$mjVUK core-prim . fxcopy-bit-field)
        (g$7877$mjVUK core-prim . fxcopy-bit)
        (g$13223$mjVUK core-prim . fxbit-set?)
        (g$7878$mjVUK core-prim . fxbit-field)
        (g$13222$mjVUK core-prim . fxbit-count)
        (g$7881$mjVUK core-prim . fxarithmetic-shift-right)
        (g$7880$mjVUK core-prim . fxarithmetic-shift-left)
        (g$13221$mjVUK core-prim . fxarithmetic-shift)
        (g$13220$mjVUK core-prim . fxand)
        (g$13219$mjVUK core-prim . fx>?)
        (g$13218$mjVUK core-prim . fx>=?)
        (g$13217$mjVUK core-prim . fx=?)
        (g$13216$mjVUK core-prim . fx<?)
        (g$13215$mjVUK core-prim . fx<=?)
        (g$7874$mjVUK core-prim . fx-/carry)
        (g$13214$mjVUK core-prim . fx-)
        (g$7875$mjVUK core-prim . fx+/carry)
        (g$13213$mjVUK core-prim . fx+)
        (g$7873$mjVUK core-prim . fx*/carry)
        (g$13212$mjVUK core-prim . fx*)
        (g$13211$mjVUK core-prim . greatest-fixnum)
        (g$13210$mjVUK core-prim . least-fixnum)
        (g$13209$mjVUK core-prim . fixnum-width)
        (g$13208$mjVUK core-prim . fixnum?)
        (g$7847$mjVUK core-prim . bitwise-rotate-bit-field)
        (g$13207$mjVUK core-prim . bitwise-reverse-bit-field)
        (g$13206$mjVUK core-prim . bitwise-length)
        (g$7841$mjVUK core-prim . bitwise-if)
        (g$13205$mjVUK core-prim . bitwise-first-bit-set)
        (g$7844$mjVUK core-prim . bitwise-copy-bit-field)
        (g$7842$mjVUK core-prim . bitwise-copy-bit)
        (g$13204$mjVUK core-prim . bitwise-bit-set?)
        (g$7843$mjVUK core-prim . bitwise-bit-field)
        (g$13203$mjVUK core-prim . bitwise-bit-count)
        (g$13202$mjVUK core-prim . bitwise-xor)
        (g$13201$mjVUK core-prim . bitwise-ior)
        (g$13200$mjVUK core-prim . bitwise-and)
        (g$13199$mjVUK core-prim . bitwise-not)
        (g$7846$mjVUK core-prim . bitwise-arithmetic-shift-right)
        (g$7845$mjVUK core-prim . bitwise-arithmetic-shift-left)
        (g$13198$mjVUK core-prim . bitwise-arithmetic-shift)
        (g$6743$mjVUK core-prim . zero?)
        (g$13197$mjVUK core-prim . vector?)
        (g$13196$mjVUK core-prim . vector-set!)
        (g$13195$mjVUK core-prim . vector-ref)
        (g$6837$mjVUK core-prim . vector-map)
        (g$13194$mjVUK core-prim . vector-length)
        (g$6838$mjVUK core-prim . vector-for-each)
        (g$13193$mjVUK core-prim . vector-fill!)
        (g$13192$mjVUK core-prim . vector->list)
        (g$13191$mjVUK core-prim . vector)
        (g$13190$mjVUK core-prim . values)
        (g$13189$mjVUK core-prim . truncate)
        (g$13188$mjVUK core-prim . tan)
        (g$13187$mjVUK core-prim . symbol?)
        (g$6791$mjVUK core-prim . symbol=?)
        (g$13186$mjVUK core-prim . symbol->string)
        (g$13185$mjVUK core-prim . substring)
        (g$13184$mjVUK core-prim . string?)
        (g$6788$mjVUK core-prim . string>?)
        (g$6790$mjVUK core-prim . string>=?)
        (g$6786$mjVUK core-prim . string=?)
        (g$6787$mjVUK core-prim . string<?)
        (g$6789$mjVUK core-prim . string<=?)
        (g$13183$mjVUK core-prim . string-ref)
        (g$13182$mjVUK core-prim . string-length)
        (g$6839$mjVUK core-prim . string-for-each)
        (g$13181$mjVUK core-prim . string-copy)
        (g$13180$mjVUK core-prim . string-append)
        (g$13179$mjVUK core-prim . string->symbol)
        (g$13178$mjVUK core-prim . string->number)
        (g$13177$mjVUK core-prim . string->list)
        (g$13176$mjVUK core-prim . string)
        (g$13175$mjVUK core-prim . sqrt)
        (g$13174$mjVUK core-prim . sin)
        (g$13173$mjVUK core-prim . round)
        (g$13172$mjVUK core-prim . reverse)
        (g$13171$mjVUK core-prim . real?)
        (g$13170$mjVUK core-prim . real-valued?)
        (g$13169$mjVUK core-prim . real-part)
        (g$6834$mjVUK core-prim . rationalize)
        (g$13168$mjVUK core-prim . rational?)
        (g$13167$mjVUK core-prim . rational-valued?)
        (g$13166$mjVUK core-prim . procedure?)
        (g$6741$mjVUK core-prim . positive?)
        (g$13165$mjVUK core-prim . pair?)
        (g$6745$mjVUK core-prim . odd?)
        (g$13164$mjVUK core-prim . numerator)
        (g$13163$mjVUK core-prim . number?)
        (g$13162$mjVUK core-prim . number->string)
        (g$13161$mjVUK core-prim . null?)
        (g$13160$mjVUK core-prim . not)
        (g$6742$mjVUK core-prim . negative?)
        (g$13159$mjVUK core-prim . nan?)
        (g$6747$mjVUK core-prim . min)
        (g$6746$mjVUK core-prim . max)
        (g$6595$mjVUK core-prim . map)
        (g$13158$mjVUK core-prim . make-vector)
        (g$13157$mjVUK core-prim . make-string)
        (g$13156$mjVUK core-prim . make-rectangular)
        (g$13155$mjVUK core-prim . make-polar)
        (g$13154$mjVUK core-prim . magnitude)
        (g$13153$mjVUK core-prim . log)
        (g$13152$mjVUK core-prim . list?)
        (g$6575$mjVUK core-prim . list-tail)
        (g$6576$mjVUK core-prim . list-ref)
        (g$13151$mjVUK core-prim . list->vector)
        (g$13150$mjVUK core-prim . list->string)
        (g$13149$mjVUK core-prim . list)
        (g$13148$mjVUK core-prim . length)
        (g$6749$mjVUK core-prim . lcm)
        (g$13147$mjVUK core-prim . integer?)
        (g$13146$mjVUK core-prim . integer-valued?)
        (g$13145$mjVUK core-prim . integer->char)
        (g$13144$mjVUK core-prim . infinite?)
        (g$13143$mjVUK core-prim . inexact?)
        (g$13142$mjVUK core-prim . inexact)
        (g$13141$mjVUK core-prim . imag-part)
        (g$6748$mjVUK core-prim . gcd)
        (g$6596$mjVUK core-prim . for-each)
        (g$13140$mjVUK core-prim . floor)
        (g$13139$mjVUK core-prim . finite?)
        (g$13138$mjVUK core-prim . expt)
        (g$13137$mjVUK core-prim . exp)
        (g$13136$mjVUK core-prim . exact?)
        (g$13135$mjVUK core-prim . exact-integer-sqrt)
        (g$13134$mjVUK core-prim . exact)
        (g$6744$mjVUK core-prim . even?)
        (g$13133$mjVUK core-prim . error)
        (g$13132$mjVUK core-prim . eqv?)
        (g$13131$mjVUK core-prim . equal?)
        (g$13130$mjVUK core-prim . eq?)
        (g$13129$mjVUK core-prim . dynamic-wind)
        (g$13128$mjVUK core-prim . div0-and-mod0)
        (g$13127$mjVUK core-prim . mod0)
        (g$13126$mjVUK core-prim . div0)
        (g$13125$mjVUK core-prim . div-and-mod)
        (g$13124$mjVUK core-prim . mod)
        (g$13123$mjVUK core-prim . div)
        (g$13122$mjVUK core-prim . denominator)
        (g$13121$mjVUK core-prim . cos)
        (g$13120$mjVUK core-prim . cons)
        (g$13119$mjVUK core-prim . complex?)
        (g$13118$mjVUK core-prim . char?)
        (g$6831$mjVUK core-prim . char>?)
        (g$6833$mjVUK core-prim . char>=?)
        (g$6829$mjVUK core-prim . char=?)
        (g$6830$mjVUK core-prim . char<?)
        (g$6832$mjVUK core-prim . char<=?)
        (g$13117$mjVUK core-prim . char->integer)
        (g$13116$mjVUK core-prim . ceiling)
        (g$13115$mjVUK core-prim . call-with-values)
        (g$13114$mjVUK core-prim . call/cc)
        (g$13113$mjVUK core-prim . call-with-current-continuation)
        (g$6740$mjVUK core-prim . cddddr)
        (g$6739$mjVUK core-prim . cdddar)
        (g$6738$mjVUK core-prim . cddadr)
        (g$6737$mjVUK core-prim . cddaar)
        (g$6736$mjVUK core-prim . cdaddr)
        (g$6735$mjVUK core-prim . cdadar)
        (g$6734$mjVUK core-prim . cdaadr)
        (g$6733$mjVUK core-prim . cdaaar)
        (g$6732$mjVUK core-prim . cadddr)
        (g$6731$mjVUK core-prim . caddar)
        (g$6730$mjVUK core-prim . cadadr)
        (g$6729$mjVUK core-prim . cadaar)
        (g$6728$mjVUK core-prim . caaddr)
        (g$6727$mjVUK core-prim . caadar)
        (g$6726$mjVUK core-prim . caaadr)
        (g$6725$mjVUK core-prim . caaaar)
        (g$6724$mjVUK core-prim . cdddr)
        (g$6723$mjVUK core-prim . cddar)
        (g$6722$mjVUK core-prim . cdadr)
        (g$6721$mjVUK core-prim . cdaar)
        (g$6720$mjVUK core-prim . caddr)
        (g$6719$mjVUK core-prim . cadar)
        (g$6718$mjVUK core-prim . caadr)
        (g$6717$mjVUK core-prim . caaar)
        (g$6716$mjVUK core-prim . cddr)
        (g$6715$mjVUK core-prim . cdar)
        (g$6714$mjVUK core-prim . cadr)
        (g$6713$mjVUK core-prim . caar)
        (g$13112$mjVUK core-prim . cdr)
        (g$13111$mjVUK core-prim . car)
        (g$13110$mjVUK core-prim . boolean?)
        (g$6792$mjVUK core-prim . boolean=?)
        (g$13109$mjVUK core-prim . atan)
        (g$13108$mjVUK core-prim . assertion-violation)
        (g$13107$mjVUK core-prim . asin)
        (g$13106$mjVUK core-prim . apply)
        (g$13105$mjVUK core-prim . append)
        (g$13104$mjVUK core-prim . angle)
        (g$13103$mjVUK core-prim . acos)
        (g$13102$mjVUK core-prim . abs)
        (g$13101$mjVUK core-prim . /)
        (g$13100$mjVUK core-prim . *)
        (g$13099$mjVUK core-prim . -)
        (g$13098$mjVUK core-prim . +)
        (g$13097$mjVUK core-prim . >=)
        (g$13096$mjVUK core-prim . >)
        (g$13095$mjVUK core-prim . =)
        (g$13094$mjVUK core-prim . <=)
        (g$13093$mjVUK core-prim . <)
        (g$13092$mjVUK core-prim . make-record-printer)
        (g$13091$mjVUK core-prim . eqv-hash)
        (g$13090$mjVUK core-prim . reverse!)
        (g$13089$mjVUK core-prim . deserialize-port)
        (g$13088$mjVUK core-prim . serialize-port)
        (g$8211$mjVUK core-prim . enum-set?)
        (g$7668$mjVUK core-prim . make-promise)
        (g$12915$mjVUK core-prim . load/args)
        (g$8322$mjVUK core-prim . printf)
        (g$8323$mjVUK core-prim . fprintf)
        (g$8324$mjVUK core-prim . format)
        (g$13087$mjVUK core-prim . procedure-form)
        (g$13086$mjVUK core-prim . procedure-environment)
        (g$13085$mjVUK core-prim . procedure-name)
        (g$13084$mjVUK core-prim . procedure-arity)
        (g$13083$mjVUK core-prim . gc-collect)
        (g$13082$mjVUK core-prim . clr-type?)
        (g$13081$mjVUK core-prim . get-clr-type)
        (g$13080$mjVUK core-prim . get-command-line)
        (g$13079$mjVUK core-prim . vector-append)
        (g$13078$mjVUK core-prim . vector-filter)
        (g$13077$mjVUK core-prim . vector-reverse!)
        (g$13076$mjVUK core-prim . vector-contains?)
        (g$13075$mjVUK core-prim . vector-index-of)
        (g$13074$mjVUK core-prim . vector-copy)
        (g$13073$mjVUK core-prim . vector-binary-search)
        (g$13072$mjVUK core-prim . string-ci-compare)
        (g$13071$mjVUK core-prim . string-compare)
        (g$13070$mjVUK core-prim . string-format)
        (g$12912$mjVUK core-prim . trace-printer)
        (g$13069$mjVUK core-prim . make-traced-procedure)
        (g$8344$mjVUK core-prim . make-traced-macro)
        (g$9911$mjVUK core-prim . assertion-error)
        (g$13068$mjVUK core-prim . time-it)
        (g$8602$mjVUK core-prim . make-parameter)
        (g$13067$mjVUK core-prim . library-locator)
        (g$13066$mjVUK core-prim . get-library-paths)
        (g$13065$mjVUK core-prim . open-tcp-input/output-port)
        (g$13064$mjVUK core-prim . hashtable-for-each)
        (g$13063$mjVUK core-prim . hashtable-map)
        (g$9889$mjVUK core-prim . environment-bindings)
        (g$9892$mjVUK core-prim . environment-symbols)
        (g$9888$mjVUK core-prim . interaction-environment-symbols)
        (g$13062$mjVUK core-prim . optimization-level)
        (g$9062$mjVUK core-prim . library-path)
        (g$9517$mjVUK core-prim . make-compile-time-value)
        (g$9898$mjVUK core-prim . expand->core)
        (g$9896$mjVUK core-prim . expand)
        (g$8398$mjVUK core-prim . convert->cps)
        (g$9083$mjVUK core-prim . installed-libraries)
        (g$9074$mjVUK core-prim . uninstall-library)
        (g$13061$mjVUK $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13060$mjVUK $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13059$mjVUK $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13058$mjVUK $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13057$mjVUK $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13056$mjVUK
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13055$mjVUK
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13054$mjVUK
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13053$mjVUK
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13052$mjVUK $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13051$mjVUK
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13050$mjVUK $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13049$mjVUK $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13048$mjVUK $core-rtd &i/o-rtd &i/o-rcd)
        (g$13047$mjVUK $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$13046$mjVUK $core-rtd &undefined-rtd &undefined-rcd)
        (g$13045$mjVUK $core-rtd &syntax-rtd &syntax-rcd)
        (g$13044$mjVUK $core-rtd &lexical-rtd &lexical-rcd)
        (g$13043$mjVUK
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13042$mjVUK $core-rtd &who-rtd &who-rcd)
        (g$13041$mjVUK $core-rtd &irritants-rtd &irritants-rcd)
        (g$13040$mjVUK $core-rtd &assertion-rtd &assertion-rcd)
        (g$13039$mjVUK $core-rtd &violation-rtd &violation-rcd)
        (g$13038$mjVUK $core-rtd &error-rtd &error-rcd)
        (g$13037$mjVUK $core-rtd &serious-rtd &serious-rcd)
        (g$13036$mjVUK $core-rtd &warning-rtd &warning-rcd)
        (g$13035$mjVUK $core-rtd &message-rtd &message-rcd)
        (g$13034$mjVUK $core-rtd &condition-rtd &condition-rcd)
        (g$13033$mjVUK macro . define-condition-type)
        (g$13032$mjVUK macro . define-enumeration)
        (g$13031$mjVUK macro . define-record-type)
        (g$13030$mjVUK macro . parent-rtd)
        (g$13029$mjVUK macro . nongenerative)
        (g$13028$mjVUK macro . opaque)
        (g$13027$mjVUK macro . sealed)
        (g$13026$mjVUK macro . protocol)
        (g$13025$mjVUK macro . parent)
        (g$13024$mjVUK macro . immutable)
        (g$13023$mjVUK macro . mutable)
        (g$13022$mjVUK macro . fields)
        (g$13021$mjVUK macro . error-handling-mode)
        (g$13020$mjVUK macro . file-options)
        (g$13019$mjVUK macro . buffer-mode)
        (g$13018$mjVUK macro . eol-style)
        (g$13017$mjVUK macro . guard)
        (g$13016$mjVUK macro . trace-letrec-syntax)
        (g$13015$mjVUK macro . trace-let-syntax)
        (g$13014$mjVUK macro . trace-define-syntax)
        (g$13013$mjVUK macro . trace-define)
        (g$13012$mjVUK macro . trace-lambda)
        (g$13011$mjVUK macro . unsyntax-splicing)
        (g$13010$mjVUK macro . unsyntax)
        (g$13009$mjVUK macro . unquote-splicing)
        (g$13008$mjVUK macro . unquote)
        (g$13007$mjVUK macro . _)
        (g$13006$mjVUK macro . else)
        (g$13005$mjVUK macro . =>)
        (g$13004$mjVUK macro . ...)
        (g$13003$mjVUK macro . assert)
        (g$13002$mjVUK macro . endianness)
        (g$13001$mjVUK macro . delay)
        (g$13000$mjVUK macro . time)
        (g$12999$mjVUK macro . or)
        (g$12998$mjVUK macro . and)
        (g$12997$mjVUK macro . do)
        (g$12996$mjVUK macro . cond)
        (g$12995$mjVUK macro . let*)
        (g$12994$mjVUK macro . let)
        (g$12993$mjVUK macro . identifier-syntax)
        (g$12992$mjVUK macro . with-syntax)
        (g$12991$mjVUK macro . quasisyntax)
        (g$12990$mjVUK macro . quasiquote)
        (g$12989$mjVUK macro . syntax-rules)
        (g$12988$mjVUK macro . include-into)
        (g$12987$mjVUK macro . include)
        (g$12986$mjVUK macro . define-struct)
        (g$12985$mjVUK macro . let-values)
        (g$12984$mjVUK macro . let*-values)
        (g$12983$mjVUK core-macro . record-constructor-descriptor)
        (g$12982$mjVUK core-macro . record-type-descriptor)
        (g$12981$mjVUK core-macro . fluid-let-syntax)
        (g$12980$mjVUK macro . case)
        (g$12979$mjVUK macro . parameterize)
        (g$12978$mjVUK macro . unless)
        (g$12977$mjVUK macro . when)
        (g$12976$mjVUK core-macro . if)
        (g$12975$mjVUK core-macro . letrec*)
        (g$12974$mjVUK core-macro . letrec)
        (g$12973$mjVUK core-macro . type-descriptor)
        (g$12972$mjVUK core-macro . case-lambda)
        (g$12971$mjVUK core-macro . lambda)
        (g$12970$mjVUK core-macro . syntax)
        (g$12969$mjVUK core-macro . syntax-case)
        (g$12968$mjVUK core-macro . quote)
        (g$12967$mjVUK core-macro . foreign-call)
        (g$12966$mjVUK letrec-syntax)
        (g$12965$mjVUK let-syntax)
        (g$12964$mjVUK set!)
        (g$12963$mjVUK export)
        (g$12962$mjVUK import)
        (g$12961$mjVUK library)
        (g$12960$mjVUK begin)
        (g$12959$mjVUK module)
        (g$12958$mjVUK define-syntax)
        (g$12957$mjVUK define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$8082$mjVUK
      'g$13582$mjVUK
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13465$mjVUK)
        (eval-core . g$13464$mjVUK)
        (set-symbol-value! . g$13463$mjVUK)
        (symbol-value . g$13462$mjVUK)
        (gensym . g$13459$mjVUK)
        (void . g$13458$mjVUK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$12192$mjVUK
     g$trace-printer$12242$mjVUK
     (g$make-parameter$7536$mjVUK write))
   (g$command-line$12193$mjVUK
     g$command-line$12243$mjVUK
     (g$make-parameter$7536$mjVUK (get-command-line)))
   (g$local-library-path$12194$mjVUK
     g$local-library-path$12244$mjVUK
     (case-lambda
       ((g$filename$12206$mjVUK)
        (cons
          (g$get-directory-name$6125$mjVUK g$filename$12206$mjVUK)
          (g$library-path$8066$mjVUK)))))
   (g$load/args$12195$mjVUK
     g$load/args$12245$mjVUK
     (case-lambda
       ((g$filename$12207$mjVUK . g$args$12208$mjVUK)
        (begin
          (apply
            g$load-r6rs-top-level$12203$mjVUK
            g$filename$12207$mjVUK
            'load
            g$args$12208$mjVUK)
          (void)))))
   (g$load$12196$mjVUK
     g$load$12246$mjVUK
     (case-lambda
       ((g$filename$12209$mjVUK)
        (begin
          (apply
            g$load-r6rs-top-level$12203$mjVUK
            g$filename$12209$mjVUK
            'load
            (cdr (g$command-line$12193$mjVUK)))
          (void)))))
   (g$ironscheme-build$12197$mjVUK
     g$ironscheme-build$12247$mjVUK
     (case-lambda (() (g$load$12196$mjVUK '"ironscheme-buildscript.ss"))))
   (g$foreground-color$12198$mjVUK
     g$foreground-color$12248$mjVUK
     (case-lambda
       (() (clr-call-internal 'console 'get_foregroundcolor '()))
       ((g$color$12210$mjVUK)
        (clr-call-internal
          'console
          'set_foregroundcolor
          '()
          g$color$12210$mjVUK))))
   (g$eval-top-level$12199$mjVUK
     g$eval-top-level$12249$mjVUK
     (case-lambda
       ((g$x$12211$mjVUK)
        (call/cc
          (case-lambda
            ((g$k$12212$mjVUK)
             (with-exception-handler
               (case-lambda
                 ((g$e$12213$mjVUK)
                  (begin
                    ((case-lambda
                       ((g$foreground-color$12216$mjVUK
                          g$foreground-color$12217$mjVUK)
                        ((case-lambda
                           ((g$swap$12218$mjVUK)
                            (dynamic-wind
                              g$swap$12218$mjVUK
                              (case-lambda
                                (()
                                 (begin
                                   (display '"Unhandled exception:
")
                                   (display g$e$12213$mjVUK)
                                   (g$newline$6956$mjVUK))))
                              g$swap$12218$mjVUK)))
                         (case-lambda
                           (()
                            ((case-lambda
                               ((g$t$12219$mjVUK)
                                (begin
                                  (g$foreground-color$12216$mjVUK
                                    g$foreground-color$12217$mjVUK)
                                  (set! g$foreground-color$12217$mjVUK
                                    g$t$12219$mjVUK))))
                             (g$foreground-color$12216$mjVUK)))))))
                     g$foreground-color$12198$mjVUK
                     'red)
                    (g$k$12212$mjVUK))))
               (case-lambda
                 (()
                  (g$eval$12165$mjVUK
                    g$x$12211$mjVUK
                    (g$interaction-environment$12190$mjVUK)))))))))))
   (g$compile-system-libraries$12200$mjVUK
     g$compile-system-libraries$12250$mjVUK
     (case-lambda
       (()
        (g$eval-top-level$12199$mjVUK
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$12201$mjVUK
     g$compile$12251$mjVUK
     (case-lambda
       ((g$filename$12220$mjVUK)
        (g$load-r6rs-top-level$12203$mjVUK g$filename$12220$mjVUK 'compile))))
   (g$compile->closure$12202$mjVUK
     g$compile->closure$12252$mjVUK
     (case-lambda
       ((g$filename$12221$mjVUK)
        (g$load-r6rs-top-level$12203$mjVUK g$filename$12221$mjVUK 'closure))))
   (g$load-r6rs-top-level$12203$mjVUK
     g$load-r6rs-top-level$12253$mjVUK
     (case-lambda
       ((g$filename$12222$mjVUK g$how$12223$mjVUK . g$args$12224$mjVUK)
        ((case-lambda
           ((g$library-path$12227$mjVUK g$library-path$12228$mjVUK)
            ((case-lambda
               ((g$swap$12229$mjVUK)
                (dynamic-wind
                  g$swap$12229$mjVUK
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$12230$mjVUK)
                         ((case-lambda
                            ((g$t$12231$mjVUK)
                             (if (g$memv$5595$mjVUK g$t$12231$mjVUK '(closure))
                               (g$pre-compile-r6rs-top-level$12188$mjVUK
                                 g$x*$12230$mjVUK)
                               (if (g$memv$5595$mjVUK g$t$12231$mjVUK '(load))
                                 ((case-lambda
                                    ((g$command-line$12234$mjVUK
                                       g$command-line$12235$mjVUK)
                                     ((case-lambda
                                        ((g$swap$12236$mjVUK)
                                         (dynamic-wind
                                           g$swap$12236$mjVUK
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$12187$mjVUK
                                                 g$x*$12230$mjVUK))))
                                           g$swap$12236$mjVUK)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$12237$mjVUK)
                                             (begin
                                               (g$command-line$12234$mjVUK
                                                 g$command-line$12235$mjVUK)
                                               (set! g$command-line$12235$mjVUK
                                                 g$t$12237$mjVUK))))
                                          (g$command-line$12234$mjVUK)))))))
                                  g$command-line$12193$mjVUK
                                  (cons
                                    g$filename$12222$mjVUK
                                    (g$map$5602$mjVUK
                                      (case-lambda
                                        ((g$x$12238$mjVUK)
                                         (g$format$7126$mjVUK
                                           '"~a"
                                           g$x$12238$mjVUK)))
                                      g$args$12224$mjVUK)))
                                 (if (g$memv$5595$mjVUK
                                       g$t$12231$mjVUK
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$12187$mjVUK
                                       g$x*$12230$mjVUK)
                                     (g$serialize-all$8070$mjVUK
                                       serialize-library
                                       g$compile-core-expr$7785$mjVUK))
                                   (if '#f '#f (void)))))))
                          g$how$12223$mjVUK)))
                      (g$with-input-from-file$6952$mjVUK
                        g$filename$12222$mjVUK
                        (case-lambda
                          (()
                           ((letrec ((g$f$12239$mjVUK
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$12240$mjVUK)
                                              (if (eof-object? g$x$12240$mjVUK)
                                                '()
                                                (cons
                                                  g$x$12240$mjVUK
                                                  (g$f$12239$mjVUK)))))
                                           (read-annotated))))))
                              g$f$12239$mjVUK))))))))
                  g$swap$12229$mjVUK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$12241$mjVUK)
                    (begin
                      (g$library-path$12227$mjVUK g$library-path$12228$mjVUK)
                      (set! g$library-path$12228$mjVUK g$t$12241$mjVUK))))
                 (g$library-path$12227$mjVUK)))))))
         g$library-path$8066$mjVUK
         (g$local-library-path$12194$mjVUK g$filename$12222$mjVUK)))))
   (g$fo$12204$mjVUK
     g$fo$12254$mjVUK
     (g$make-enumeration$7088$mjVUK '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$8071$mjVUK
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$12205$mjVUK)
         (if (g$serious-condition?$6387$mjVUK g$ex$12205$mjVUK)
           (raise g$ex$12205$mjVUK)
           (begin (display g$ex$12205$mjVUK) (g$newline$6956$mjVUK))))))
    (set-symbol-value! 'load g$load$12196$mjVUK)
    (set-symbol-value! 'compile g$compile$12201$mjVUK)
    (set-symbol-value! 'compile->closure g$compile->closure$12202$mjVUK)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$12199$mjVUK)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$12156$mjVUK)
    (set-symbol-value! 'expanded2core g$expanded->core$7784$mjVUK)
    (set-symbol-value! 'trace-printer g$trace-printer$12192$mjVUK)
    (set-symbol-value! 'convert->cps g$convert->cps$7431$mjVUK)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$7537$mjVUK
      (g$enum-set-constructor$7091$mjVUK g$fo$12204$mjVUK))
    (g$library-path$8066$mjVUK (get-library-paths))))

