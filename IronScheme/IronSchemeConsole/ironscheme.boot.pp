;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$list-tail$5602$5uPkq
     g$list-tail$5739$5uPkq
     (case-lambda
       ((g$lst$5630$5uPkq g$index$5631$5uPkq)
        (if ((case-lambda
               ((g$t$5632$5uPkq)
                (if g$t$5632$5uPkq
                  g$t$5632$5uPkq
                  (begin '#f (negative? g$index$5631$5uPkq)))))
             (null? g$lst$5630$5uPkq))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$5630$5uPkq
            g$index$5631$5uPkq)
          (if (zero? g$index$5631$5uPkq)
            g$lst$5630$5uPkq
            (g$list-tail$5602$5uPkq
              (cdr g$lst$5630$5uPkq)
              (- g$index$5631$5uPkq '1)))))))
   (g$list-ref$5603$5uPkq
     g$list-ref$5740$5uPkq
     (case-lambda
       ((g$lst$5633$5uPkq g$index$5634$5uPkq)
        (car (g$list-tail$5602$5uPkq g$lst$5633$5uPkq g$index$5634$5uPkq)))))
   (g$last-pair$5604$5uPkq
     g$last-pair$5741$5uPkq
     (case-lambda
       ((g$lst$5635$5uPkq)
        (if (null? g$lst$5635$5uPkq)
          g$lst$5635$5uPkq
          (if (null? (cdr g$lst$5635$5uPkq))
            g$lst$5635$5uPkq
            (g$last-pair$5604$5uPkq (cdr g$lst$5635$5uPkq)))))))
   (g$make-list$5605$5uPkq
     g$make-list$5742$5uPkq
     (case-lambda
       ((g$n$5636$5uPkq) (list->vector (make-vector g$n$5636$5uPkq)))
       ((g$n$5637$5uPkq g$fill$5638$5uPkq)
        (list->vector (make-vector g$n$5637$5uPkq g$fill$5638$5uPkq)))))
   (g$find$5606$5uPkq
     g$find$5743$5uPkq
     (case-lambda
       ((g$proc$5639$5uPkq g$l$5640$5uPkq)
        (if (null? g$l$5640$5uPkq)
          '#f
          ((case-lambda
             ((g$e$5641$5uPkq g$r$5642$5uPkq g$proc$5643$5uPkq)
              (if (g$proc$5643$5uPkq g$e$5641$5uPkq)
                g$e$5641$5uPkq
                (g$find$5606$5uPkq g$proc$5643$5uPkq g$r$5642$5uPkq))))
           (car g$l$5640$5uPkq)
           (cdr g$l$5640$5uPkq)
           g$proc$5639$5uPkq)))))
   (g$partition$5607$5uPkq
     g$partition$5744$5uPkq
     (case-lambda
       ((g$proc$5644$5uPkq g$l$5645$5uPkq)
        ((letrec ((g$f$5646$5uPkq
                    (case-lambda
                      ((g$l$5647$5uPkq g$a$5648$5uPkq g$b$5649$5uPkq)
                       (if (null? g$l$5647$5uPkq)
                         (values
                           (reverse! g$a$5648$5uPkq)
                           (reverse! g$b$5649$5uPkq))
                         ((case-lambda
                            ((g$e$5650$5uPkq)
                             (if (g$proc$5644$5uPkq g$e$5650$5uPkq)
                               (g$f$5646$5uPkq
                                 (cdr g$l$5647$5uPkq)
                                 (cons g$e$5650$5uPkq g$a$5648$5uPkq)
                                 g$b$5649$5uPkq)
                               (g$f$5646$5uPkq
                                 (cdr g$l$5647$5uPkq)
                                 g$a$5648$5uPkq
                                 (cons g$e$5650$5uPkq g$b$5649$5uPkq)))))
                          (car g$l$5647$5uPkq)))))))
           g$f$5646$5uPkq)
         g$l$5645$5uPkq
         '()
         '()))))
   (g$remp$5608$5uPkq
     g$remp$5745$5uPkq
     (case-lambda
       ((g$proc$5651$5uPkq g$l$5652$5uPkq)
        ((letrec ((g$f$5653$5uPkq
                    (case-lambda
                      ((g$l$5654$5uPkq g$a$5655$5uPkq)
                       (if (null? g$l$5654$5uPkq)
                         (reverse! g$a$5655$5uPkq)
                         ((case-lambda
                            ((g$e$5656$5uPkq)
                             (if (g$proc$5651$5uPkq g$e$5656$5uPkq)
                               (g$f$5653$5uPkq
                                 (cdr g$l$5654$5uPkq)
                                 g$a$5655$5uPkq)
                               (g$f$5653$5uPkq
                                 (cdr g$l$5654$5uPkq)
                                 (cons g$e$5656$5uPkq g$a$5655$5uPkq)))))
                          (car g$l$5654$5uPkq)))))))
           g$f$5653$5uPkq)
         g$l$5652$5uPkq
         '()))))
   (g$filter$5609$5uPkq
     g$filter$5746$5uPkq
     (case-lambda
       ((g$proc$5657$5uPkq g$l$5658$5uPkq)
        ((letrec ((g$f$5659$5uPkq
                    (case-lambda
                      ((g$l$5660$5uPkq g$a$5661$5uPkq)
                       (if (null? g$l$5660$5uPkq)
                         (reverse! g$a$5661$5uPkq)
                         ((case-lambda
                            ((g$e$5662$5uPkq)
                             (if (g$proc$5657$5uPkq g$e$5662$5uPkq)
                               (g$f$5659$5uPkq
                                 (cdr g$l$5660$5uPkq)
                                 (cons g$e$5662$5uPkq g$a$5661$5uPkq))
                               (g$f$5659$5uPkq
                                 (cdr g$l$5660$5uPkq)
                                 g$a$5661$5uPkq))))
                          (car g$l$5660$5uPkq)))))))
           g$f$5659$5uPkq)
         g$l$5658$5uPkq
         '()))))
   (g$assq$5610$5uPkq
     g$assq$5747$5uPkq
     (case-lambda
       ((g$obj$5663$5uPkq g$lst$5664$5uPkq)
        (if (null? g$lst$5664$5uPkq)
          '#f
          ((case-lambda
             ((g$obj$5665$5uPkq g$t$5666$5uPkq g$r$5667$5uPkq)
              (if (eq? g$obj$5665$5uPkq (car g$t$5666$5uPkq))
                g$t$5666$5uPkq
                (g$assq$5610$5uPkq g$obj$5665$5uPkq g$r$5667$5uPkq))))
           g$obj$5663$5uPkq
           (car g$lst$5664$5uPkq)
           (cdr g$lst$5664$5uPkq))))))
   (g$assv$5611$5uPkq
     g$assv$5748$5uPkq
     (case-lambda
       ((g$obj$5668$5uPkq g$lst$5669$5uPkq)
        (if (null? g$lst$5669$5uPkq)
          '#f
          ((case-lambda
             ((g$obj$5670$5uPkq g$t$5671$5uPkq g$r$5672$5uPkq)
              (if (eqv? g$obj$5670$5uPkq (car g$t$5671$5uPkq))
                g$t$5671$5uPkq
                (g$assv$5611$5uPkq g$obj$5670$5uPkq g$r$5672$5uPkq))))
           g$obj$5668$5uPkq
           (car g$lst$5669$5uPkq)
           (cdr g$lst$5669$5uPkq))))))
   (g$assoc$5612$5uPkq
     g$assoc$5749$5uPkq
     (case-lambda
       ((g$obj$5673$5uPkq g$lst$5674$5uPkq)
        (if (null? g$lst$5674$5uPkq)
          '#f
          ((case-lambda
             ((g$obj$5675$5uPkq g$t$5676$5uPkq g$r$5677$5uPkq)
              (if (equal? g$obj$5675$5uPkq (car g$t$5676$5uPkq))
                g$t$5676$5uPkq
                (g$assoc$5612$5uPkq g$obj$5675$5uPkq g$r$5677$5uPkq))))
           g$obj$5673$5uPkq
           (car g$lst$5674$5uPkq)
           (cdr g$lst$5674$5uPkq))))))
   (g$assp$5613$5uPkq
     g$assp$5750$5uPkq
     (case-lambda
       ((g$p?$5678$5uPkq g$lst$5679$5uPkq)
        (if (null? g$lst$5679$5uPkq)
          '#f
          ((case-lambda
             ((g$p?$5680$5uPkq g$t$5681$5uPkq g$r$5682$5uPkq)
              (if (g$p?$5680$5uPkq (car g$t$5681$5uPkq))
                g$t$5681$5uPkq
                (g$assp$5613$5uPkq g$p?$5680$5uPkq g$r$5682$5uPkq))))
           g$p?$5678$5uPkq
           (car g$lst$5679$5uPkq)
           (cdr g$lst$5679$5uPkq))))))
   (g$memq$5614$5uPkq
     g$memq$5751$5uPkq
     (case-lambda
       ((g$obj$5683$5uPkq g$lst$5684$5uPkq)
        (if (null? g$lst$5684$5uPkq)
          '#f
          (if (eq? g$obj$5683$5uPkq (car g$lst$5684$5uPkq))
            g$lst$5684$5uPkq
            (g$memq$5614$5uPkq g$obj$5683$5uPkq (cdr g$lst$5684$5uPkq)))))))
   (g$memv$5615$5uPkq
     g$memv$5752$5uPkq
     (case-lambda
       ((g$obj$5685$5uPkq g$lst$5686$5uPkq)
        (if (null? g$lst$5686$5uPkq)
          '#f
          (if (eqv? g$obj$5685$5uPkq (car g$lst$5686$5uPkq))
            g$lst$5686$5uPkq
            (g$memv$5615$5uPkq g$obj$5685$5uPkq (cdr g$lst$5686$5uPkq)))))))
   (g$member$5616$5uPkq
     g$member$5753$5uPkq
     (case-lambda
       ((g$obj$5687$5uPkq g$lst$5688$5uPkq)
        (if (null? g$lst$5688$5uPkq)
          '#f
          (if (equal? g$obj$5687$5uPkq (car g$lst$5688$5uPkq))
            g$lst$5688$5uPkq
            (g$member$5616$5uPkq g$obj$5687$5uPkq (cdr g$lst$5688$5uPkq)))))))
   (g$memp$5617$5uPkq
     g$memp$5754$5uPkq
     (case-lambda
       ((g$p?$5689$5uPkq g$lst$5690$5uPkq)
        (if (null? g$lst$5690$5uPkq)
          '#f
          (if (g$p?$5689$5uPkq (car g$lst$5690$5uPkq))
            g$lst$5690$5uPkq
            (g$memp$5617$5uPkq g$p?$5689$5uPkq (cdr g$lst$5690$5uPkq)))))))
   (g$all-empty?$5618$5uPkq
     g$all-empty?$5755$5uPkq
     (case-lambda
       ((g$ls$5691$5uPkq)
        ((case-lambda
           ((g$t$5692$5uPkq)
            (if g$t$5692$5uPkq
              g$t$5692$5uPkq
              (begin
                '#f
                (if (null? (car g$ls$5691$5uPkq))
                  (begin '#f (g$all-empty?$5618$5uPkq (cdr g$ls$5691$5uPkq)))
                  '#f)))))
         (null? g$ls$5691$5uPkq)))))
   (g$split$5619$5uPkq
     g$split$5756$5uPkq
     (case-lambda
       ((g$ls$5693$5uPkq)
        (if (null? g$ls$5693$5uPkq)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5619$5uPkq (cdr g$ls$5693$5uPkq))))
            (case-lambda
              ((g$cars$5694$5uPkq g$cdrs$5695$5uPkq)
               ((case-lambda
                  ((g$a$5696$5uPkq)
                   (values
                     (cons (car g$a$5696$5uPkq) g$cars$5694$5uPkq)
                     (cons (cdr g$a$5696$5uPkq) g$cdrs$5695$5uPkq))))
                (car g$ls$5693$5uPkq)))))))))
   (g$for-all$5620$5uPkq
     g$for-all$5757$5uPkq
     (case-lambda
       ((g$f$5697$5uPkq . g$args$5698$5uPkq)
        (if (g$all-empty?$5618$5uPkq g$args$5698$5uPkq)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5619$5uPkq g$args$5698$5uPkq)))
            (case-lambda
              ((g$cars$5699$5uPkq g$cdrs$5700$5uPkq)
               (if (g$all-empty?$5618$5uPkq g$cdrs$5700$5uPkq)
                 (apply g$f$5697$5uPkq g$cars$5699$5uPkq)
                 (if (apply g$f$5697$5uPkq g$cars$5699$5uPkq)
                   (begin
                     '#f
                     (apply
                       g$for-all$5620$5uPkq
                       g$f$5697$5uPkq
                       g$cdrs$5700$5uPkq))
                   '#f)))))))))
   (g$exists$5621$5uPkq
     g$exists$5758$5uPkq
     (case-lambda
       ((g$f$5701$5uPkq . g$args$5702$5uPkq)
        (if (g$all-empty?$5618$5uPkq g$args$5702$5uPkq)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5619$5uPkq g$args$5702$5uPkq)))
            (case-lambda
              ((g$cars$5703$5uPkq g$cdrs$5704$5uPkq)
               ((case-lambda
                  ((g$t$5705$5uPkq)
                   (if g$t$5705$5uPkq
                     g$t$5705$5uPkq
                     (begin
                       '#f
                       (apply
                         g$exists$5621$5uPkq
                         g$f$5701$5uPkq
                         g$cdrs$5704$5uPkq)))))
                (apply g$f$5701$5uPkq g$cars$5703$5uPkq)))))))))
   (g$map$5622$5uPkq
     g$map$5759$5uPkq
     (case-lambda
       ((g$proc$5706$5uPkq . g$lists$5707$5uPkq)
        ((letrec ((g$f$5708$5uPkq
                    (case-lambda
                      ((g$lists$5709$5uPkq g$a$5710$5uPkq)
                       (if (g$all-empty?$5618$5uPkq g$lists$5709$5uPkq)
                         (reverse! g$a$5710$5uPkq)
                         (call-with-values
                           (case-lambda
                             (() (g$split$5619$5uPkq g$lists$5709$5uPkq)))
                           (case-lambda
                             ((g$cars$5711$5uPkq g$cdrs$5712$5uPkq)
                              (g$f$5708$5uPkq
                                g$cdrs$5712$5uPkq
                                (cons
                                  (apply g$proc$5706$5uPkq g$cars$5711$5uPkq)
                                  g$a$5710$5uPkq))))))))))
           g$f$5708$5uPkq)
         g$lists$5707$5uPkq
         '()))))
   (g$for-each$5623$5uPkq
     g$for-each$5760$5uPkq
     (case-lambda
       ((g$f$5713$5uPkq . g$args$5714$5uPkq)
        (if (not (g$all-empty?$5618$5uPkq g$args$5714$5uPkq))
          (call-with-values
            (case-lambda (() (g$split$5619$5uPkq g$args$5714$5uPkq)))
            (case-lambda
              ((g$cars$5715$5uPkq g$cdrs$5716$5uPkq)
               (begin
                 (apply g$f$5713$5uPkq g$cars$5715$5uPkq)
                 (apply
                   g$for-each$5623$5uPkq
                   g$f$5713$5uPkq
                   g$cdrs$5716$5uPkq)))))
          (void)))))
   (g$cons*$5624$5uPkq
     g$cons*$5761$5uPkq
     (case-lambda
       ((g$a$5717$5uPkq . g$rest$5718$5uPkq)
        ((letrec ((g$f$5719$5uPkq
                    (case-lambda
                      ((g$a$5720$5uPkq g$rest$5721$5uPkq)
                       (if (null? g$rest$5721$5uPkq)
                         g$a$5720$5uPkq
                         (cons
                           g$a$5720$5uPkq
                           (g$f$5719$5uPkq
                             (car g$rest$5721$5uPkq)
                             (cdr g$rest$5721$5uPkq))))))))
           g$f$5719$5uPkq)
         g$a$5717$5uPkq
         g$rest$5718$5uPkq))))
   (g$fold-left$5625$5uPkq
     g$fold-left$5762$5uPkq
     (case-lambda
       ((g$combine$5722$5uPkq
          g$nil$5723$5uPkq
          g$list1$5724$5uPkq
          .
          g$lists$5725$5uPkq)
        (if (null? g$list1$5724$5uPkq)
          g$nil$5723$5uPkq
          (apply
            g$fold-left$5625$5uPkq
            (g$cons*$5624$5uPkq
              g$combine$5722$5uPkq
              (apply
                g$combine$5722$5uPkq
                (g$cons*$5624$5uPkq
                  g$nil$5723$5uPkq
                  (car g$list1$5724$5uPkq)
                  (g$map$5622$5uPkq car g$lists$5725$5uPkq)))
              (cdr g$list1$5724$5uPkq)
              (g$map$5622$5uPkq cdr g$lists$5725$5uPkq)))))))
   (g$fold-right$5626$5uPkq
     g$fold-right$5763$5uPkq
     (case-lambda
       ((g$combine$5726$5uPkq
          g$nil$5727$5uPkq
          g$list1$5728$5uPkq
          .
          g$lists$5729$5uPkq)
        (if (null? g$list1$5728$5uPkq)
          g$nil$5727$5uPkq
          (apply
            g$combine$5726$5uPkq
            (append
              (list (car g$list1$5728$5uPkq))
              (g$map$5622$5uPkq car g$lists$5729$5uPkq)
              (list
                (apply
                  g$fold-right$5626$5uPkq
                  (g$cons*$5624$5uPkq
                    g$combine$5726$5uPkq
                    g$nil$5727$5uPkq
                    (cdr g$list1$5728$5uPkq)
                    (g$map$5622$5uPkq cdr g$lists$5729$5uPkq))))))))))
   (g$remove$5627$5uPkq
     g$remove$5764$5uPkq
     (case-lambda
       ((g$obj$5730$5uPkq g$list$5731$5uPkq)
        (g$remp$5608$5uPkq
          (case-lambda
            ((g$x$5732$5uPkq) (equal? g$obj$5730$5uPkq g$x$5732$5uPkq)))
          g$list$5731$5uPkq))))
   (g$remv$5628$5uPkq
     g$remv$5765$5uPkq
     (case-lambda
       ((g$obj$5733$5uPkq g$list$5734$5uPkq)
        (g$remp$5608$5uPkq
          (case-lambda
            ((g$x$5735$5uPkq) (eqv? g$obj$5733$5uPkq g$x$5735$5uPkq)))
          g$list$5734$5uPkq))))
   (g$remq$5629$5uPkq
     g$remq$5766$5uPkq
     (case-lambda
       ((g$obj$5736$5uPkq g$list$5737$5uPkq)
        (g$remp$5608$5uPkq
          (case-lambda ((g$x$5738$5uPkq) (eq? g$obj$5736$5uPkq g$x$5738$5uPkq)))
          g$list$5737$5uPkq)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5767$5uPkq
     g$caar$5922$5uPkq
     (case-lambda ((g$x$5822$5uPkq) (car (car g$x$5822$5uPkq)))))
   (g$cadr$5768$5uPkq
     g$cadr$5923$5uPkq
     (case-lambda ((g$x$5823$5uPkq) (car (cdr g$x$5823$5uPkq)))))
   (g$cdar$5769$5uPkq
     g$cdar$5924$5uPkq
     (case-lambda ((g$x$5824$5uPkq) (cdr (car g$x$5824$5uPkq)))))
   (g$cddr$5770$5uPkq
     g$cddr$5925$5uPkq
     (case-lambda ((g$x$5825$5uPkq) (cdr (cdr g$x$5825$5uPkq)))))
   (g$caaar$5771$5uPkq
     g$caaar$5926$5uPkq
     (case-lambda
       ((g$x$5826$5uPkq) (g$caar$5767$5uPkq (car g$x$5826$5uPkq)))))
   (g$caadr$5772$5uPkq
     g$caadr$5927$5uPkq
     (case-lambda
       ((g$x$5827$5uPkq) (g$caar$5767$5uPkq (cdr g$x$5827$5uPkq)))))
   (g$cadar$5773$5uPkq
     g$cadar$5928$5uPkq
     (case-lambda
       ((g$x$5828$5uPkq) (g$cadr$5768$5uPkq (car g$x$5828$5uPkq)))))
   (g$caddr$5774$5uPkq
     g$caddr$5929$5uPkq
     (case-lambda
       ((g$x$5829$5uPkq) (g$cadr$5768$5uPkq (cdr g$x$5829$5uPkq)))))
   (g$cdaar$5775$5uPkq
     g$cdaar$5930$5uPkq
     (case-lambda
       ((g$x$5830$5uPkq) (g$cdar$5769$5uPkq (car g$x$5830$5uPkq)))))
   (g$cdadr$5776$5uPkq
     g$cdadr$5931$5uPkq
     (case-lambda
       ((g$x$5831$5uPkq) (g$cdar$5769$5uPkq (cdr g$x$5831$5uPkq)))))
   (g$cddar$5777$5uPkq
     g$cddar$5932$5uPkq
     (case-lambda
       ((g$x$5832$5uPkq) (g$cddr$5770$5uPkq (car g$x$5832$5uPkq)))))
   (g$cdddr$5778$5uPkq
     g$cdddr$5933$5uPkq
     (case-lambda
       ((g$x$5833$5uPkq) (g$cddr$5770$5uPkq (cdr g$x$5833$5uPkq)))))
   (g$caaaar$5779$5uPkq
     g$caaaar$5934$5uPkq
     (case-lambda
       ((g$x$5834$5uPkq) (g$caaar$5771$5uPkq (car g$x$5834$5uPkq)))))
   (g$caaadr$5780$5uPkq
     g$caaadr$5935$5uPkq
     (case-lambda
       ((g$x$5835$5uPkq) (g$caaar$5771$5uPkq (cdr g$x$5835$5uPkq)))))
   (g$caadar$5781$5uPkq
     g$caadar$5936$5uPkq
     (case-lambda
       ((g$x$5836$5uPkq) (g$caadr$5772$5uPkq (car g$x$5836$5uPkq)))))
   (g$caaddr$5782$5uPkq
     g$caaddr$5937$5uPkq
     (case-lambda
       ((g$x$5837$5uPkq) (g$caadr$5772$5uPkq (cdr g$x$5837$5uPkq)))))
   (g$cadaar$5783$5uPkq
     g$cadaar$5938$5uPkq
     (case-lambda
       ((g$x$5838$5uPkq) (g$cadar$5773$5uPkq (car g$x$5838$5uPkq)))))
   (g$cadadr$5784$5uPkq
     g$cadadr$5939$5uPkq
     (case-lambda
       ((g$x$5839$5uPkq) (g$cadar$5773$5uPkq (cdr g$x$5839$5uPkq)))))
   (g$caddar$5785$5uPkq
     g$caddar$5940$5uPkq
     (case-lambda
       ((g$x$5840$5uPkq) (g$caddr$5774$5uPkq (car g$x$5840$5uPkq)))))
   (g$cadddr$5786$5uPkq
     g$cadddr$5941$5uPkq
     (case-lambda
       ((g$x$5841$5uPkq) (g$caddr$5774$5uPkq (cdr g$x$5841$5uPkq)))))
   (g$cdaaar$5787$5uPkq
     g$cdaaar$5942$5uPkq
     (case-lambda
       ((g$x$5842$5uPkq) (g$cdaar$5775$5uPkq (car g$x$5842$5uPkq)))))
   (g$cdaadr$5788$5uPkq
     g$cdaadr$5943$5uPkq
     (case-lambda
       ((g$x$5843$5uPkq) (g$cdaar$5775$5uPkq (cdr g$x$5843$5uPkq)))))
   (g$cdadar$5789$5uPkq
     g$cdadar$5944$5uPkq
     (case-lambda
       ((g$x$5844$5uPkq) (g$cdadr$5776$5uPkq (car g$x$5844$5uPkq)))))
   (g$cdaddr$5790$5uPkq
     g$cdaddr$5945$5uPkq
     (case-lambda
       ((g$x$5845$5uPkq) (g$cdadr$5776$5uPkq (cdr g$x$5845$5uPkq)))))
   (g$cddaar$5791$5uPkq
     g$cddaar$5946$5uPkq
     (case-lambda
       ((g$x$5846$5uPkq) (g$cddar$5777$5uPkq (car g$x$5846$5uPkq)))))
   (g$cddadr$5792$5uPkq
     g$cddadr$5947$5uPkq
     (case-lambda
       ((g$x$5847$5uPkq) (g$cddar$5777$5uPkq (cdr g$x$5847$5uPkq)))))
   (g$cdddar$5793$5uPkq
     g$cdddar$5948$5uPkq
     (case-lambda
       ((g$x$5848$5uPkq) (g$cdddr$5778$5uPkq (car g$x$5848$5uPkq)))))
   (g$cddddr$5794$5uPkq
     g$cddddr$5949$5uPkq
     (case-lambda
       ((g$x$5849$5uPkq) (g$cdddr$5778$5uPkq (cdr g$x$5849$5uPkq)))))
   (g$string=?$5801$5uPkq
     g$string=?$5950$5uPkq
     (case-lambda
       ((g$a$5850$5uPkq g$b$5851$5uPkq . g$rest$5852$5uPkq)
        (begin
          (if (not (string? g$a$5850$5uPkq))
            (assertion-violation 'string=? '"not a string" g$a$5850$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5853$5uPkq)
               (begin
                 (if (not (string? g$x$5853$5uPkq))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5853$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5854$5uPkq)
                     (begin
                       (set! g$a$5850$5uPkq g$x$5853$5uPkq)
                       g$r$5854$5uPkq)))
                  (= (string-compare g$a$5850$5uPkq g$x$5853$5uPkq) '0)))))
            (cons g$b$5851$5uPkq g$rest$5852$5uPkq))))))
   (g$string<?$5802$5uPkq
     g$string<?$5951$5uPkq
     (case-lambda
       ((g$a$5855$5uPkq g$b$5856$5uPkq . g$rest$5857$5uPkq)
        (begin
          (if (not (string? g$a$5855$5uPkq))
            (assertion-violation 'string<? '"not a string" g$a$5855$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5858$5uPkq)
               (begin
                 (if (not (string? g$x$5858$5uPkq))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5858$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5859$5uPkq)
                     (begin
                       (set! g$a$5855$5uPkq g$x$5858$5uPkq)
                       g$r$5859$5uPkq)))
                  (< (string-compare g$a$5855$5uPkq g$x$5858$5uPkq) '0)))))
            (cons g$b$5856$5uPkq g$rest$5857$5uPkq))))))
   (g$string>?$5803$5uPkq
     g$string>?$5952$5uPkq
     (case-lambda
       ((g$a$5860$5uPkq g$b$5861$5uPkq . g$rest$5862$5uPkq)
        (begin
          (if (not (string? g$a$5860$5uPkq))
            (assertion-violation 'string>? '"not a string" g$a$5860$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5863$5uPkq)
               (begin
                 (if (not (string? g$x$5863$5uPkq))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5863$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5864$5uPkq)
                     (begin
                       (set! g$a$5860$5uPkq g$x$5863$5uPkq)
                       g$r$5864$5uPkq)))
                  (> (string-compare g$a$5860$5uPkq g$x$5863$5uPkq) '0)))))
            (cons g$b$5861$5uPkq g$rest$5862$5uPkq))))))
   (g$string<=?$5804$5uPkq
     g$string<=?$5953$5uPkq
     (case-lambda
       ((g$a$5865$5uPkq g$b$5866$5uPkq . g$rest$5867$5uPkq)
        (begin
          (if (not (string? g$a$5865$5uPkq))
            (assertion-violation 'string<=? '"not a string" g$a$5865$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5868$5uPkq)
               (begin
                 (if (not (string? g$x$5868$5uPkq))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5868$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5869$5uPkq)
                     (begin
                       (set! g$a$5865$5uPkq g$x$5868$5uPkq)
                       g$r$5869$5uPkq)))
                  (<= (string-compare g$a$5865$5uPkq g$x$5868$5uPkq) '0)))))
            (cons g$b$5866$5uPkq g$rest$5867$5uPkq))))))
   (g$string>=?$5805$5uPkq
     g$string>=?$5954$5uPkq
     (case-lambda
       ((g$a$5870$5uPkq g$b$5871$5uPkq . g$rest$5872$5uPkq)
        (begin
          (if (not (string? g$a$5870$5uPkq))
            (assertion-violation 'string>=? '"not a string" g$a$5870$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5873$5uPkq)
               (begin
                 (if (not (string? g$x$5873$5uPkq))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5873$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5874$5uPkq)
                     (begin
                       (set! g$a$5870$5uPkq g$x$5873$5uPkq)
                       g$r$5874$5uPkq)))
                  (>= (string-compare g$a$5870$5uPkq g$x$5873$5uPkq) '0)))))
            (cons g$b$5871$5uPkq g$rest$5872$5uPkq))))))
   (g$symbol=?$5806$5uPkq
     g$symbol=?$5955$5uPkq
     (case-lambda
       ((g$a$5875$5uPkq g$b$5876$5uPkq . g$rest$5877$5uPkq)
        (begin
          (if (not (symbol? g$a$5875$5uPkq))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5875$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5878$5uPkq)
               (begin
                 (if (not (symbol? g$x$5878$5uPkq))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5878$5uPkq)
                   (void))
                 (eq? g$a$5875$5uPkq g$x$5878$5uPkq))))
            (cons g$b$5876$5uPkq g$rest$5877$5uPkq))))))
   (g$boolean=?$5807$5uPkq
     g$boolean=?$5956$5uPkq
     (case-lambda
       ((g$a$5879$5uPkq g$b$5880$5uPkq . g$rest$5881$5uPkq)
        (begin
          (if (not (boolean? g$a$5879$5uPkq))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5879$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5882$5uPkq)
               (begin
                 (if (not (boolean? g$x$5882$5uPkq))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5882$5uPkq)
                   (void))
                 (eq? g$a$5879$5uPkq g$x$5882$5uPkq))))
            (cons g$b$5880$5uPkq g$rest$5881$5uPkq))))))
   (g$char=?$5814$5uPkq
     g$char=?$5957$5uPkq
     (case-lambda
       ((g$a$5883$5uPkq g$b$5884$5uPkq . g$rest$5885$5uPkq)
        (begin
          (if (not (char? g$a$5883$5uPkq))
            (assertion-violation 'char=? '"not a char" g$a$5883$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5886$5uPkq)
               (begin
                 (if (not (char? g$x$5886$5uPkq))
                   (assertion-violation 'char=? '"not a char" g$x$5886$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5887$5uPkq)
                     (begin
                       (set! g$a$5883$5uPkq g$x$5886$5uPkq)
                       g$r$5887$5uPkq)))
                  (= (char->integer g$a$5883$5uPkq)
                     (char->integer g$x$5886$5uPkq))))))
            (cons g$b$5884$5uPkq g$rest$5885$5uPkq))))))
   (g$char<?$5815$5uPkq
     g$char<?$5958$5uPkq
     (case-lambda
       ((g$a$5888$5uPkq g$b$5889$5uPkq . g$rest$5890$5uPkq)
        (begin
          (if (not (char? g$a$5888$5uPkq))
            (assertion-violation 'char<? '"not a char" g$a$5888$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5891$5uPkq)
               (begin
                 (if (not (char? g$x$5891$5uPkq))
                   (assertion-violation 'char<? '"not a char" g$x$5891$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5892$5uPkq)
                     (begin
                       (set! g$a$5888$5uPkq g$x$5891$5uPkq)
                       g$r$5892$5uPkq)))
                  (< (char->integer g$a$5888$5uPkq)
                     (char->integer g$x$5891$5uPkq))))))
            (cons g$b$5889$5uPkq g$rest$5890$5uPkq))))))
   (g$char>?$5816$5uPkq
     g$char>?$5959$5uPkq
     (case-lambda
       ((g$a$5893$5uPkq g$b$5894$5uPkq . g$rest$5895$5uPkq)
        (begin
          (if (not (char? g$a$5893$5uPkq))
            (assertion-violation 'char>? '"not a char" g$a$5893$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5896$5uPkq)
               (begin
                 (if (not (char? g$x$5896$5uPkq))
                   (assertion-violation 'char>? '"not a char" g$x$5896$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5897$5uPkq)
                     (begin
                       (set! g$a$5893$5uPkq g$x$5896$5uPkq)
                       g$r$5897$5uPkq)))
                  (> (char->integer g$a$5893$5uPkq)
                     (char->integer g$x$5896$5uPkq))))))
            (cons g$b$5894$5uPkq g$rest$5895$5uPkq))))))
   (g$char<=?$5817$5uPkq
     g$char<=?$5960$5uPkq
     (case-lambda
       ((g$a$5898$5uPkq g$b$5899$5uPkq . g$rest$5900$5uPkq)
        (begin
          (if (not (char? g$a$5898$5uPkq))
            (assertion-violation 'char<=? '"not a char" g$a$5898$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5901$5uPkq)
               (begin
                 (if (not (char? g$x$5901$5uPkq))
                   (assertion-violation 'char<=? '"not a char" g$x$5901$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5902$5uPkq)
                     (begin
                       (set! g$a$5898$5uPkq g$x$5901$5uPkq)
                       g$r$5902$5uPkq)))
                  (<= (char->integer g$a$5898$5uPkq)
                      (char->integer g$x$5901$5uPkq))))))
            (cons g$b$5899$5uPkq g$rest$5900$5uPkq))))))
   (g$char>=?$5818$5uPkq
     g$char>=?$5961$5uPkq
     (case-lambda
       ((g$a$5903$5uPkq g$b$5904$5uPkq . g$rest$5905$5uPkq)
        (begin
          (if (not (char? g$a$5903$5uPkq))
            (assertion-violation 'char>=? '"not a char" g$a$5903$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$5906$5uPkq)
               (begin
                 (if (not (char? g$x$5906$5uPkq))
                   (assertion-violation 'char>=? '"not a char" g$x$5906$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$5907$5uPkq)
                     (begin
                       (set! g$a$5903$5uPkq g$x$5906$5uPkq)
                       g$r$5907$5uPkq)))
                  (>= (char->integer g$a$5903$5uPkq)
                      (char->integer g$x$5906$5uPkq))))))
            (cons g$b$5904$5uPkq g$rest$5905$5uPkq))))))
   (g$rationalize$5819$5uPkq
     g$rationalize$5962$5uPkq
     (case-lambda
       ((g$x$5908$5uPkq g$e$5909$5uPkq)
        (if (if (infinite? g$x$5908$5uPkq)
              (begin '#f (infinite? g$e$5909$5uPkq))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5910$5uPkq)
              (if (if (exact? g$x$5908$5uPkq)
                    (begin '#f (exact? g$e$5909$5uPkq))
                    '#f)
                g$r$5910$5uPkq
                (inexact g$r$5910$5uPkq))))
           (apply
             /
             (g$find-ratio$5820$5uPkq g$x$5908$5uPkq g$e$5909$5uPkq)))))))
   (g$find-ratio$5820$5uPkq
     g$find-ratio$5963$5uPkq
     (case-lambda
       ((g$x$5911$5uPkq g$e$5912$5uPkq)
        (g$find-ratio-between$5821$5uPkq
          (- g$x$5911$5uPkq g$e$5912$5uPkq)
          (+ g$x$5911$5uPkq g$e$5912$5uPkq)))))
   (g$find-ratio-between$5821$5uPkq
     g$find-ratio-between$5964$5uPkq
     (case-lambda
       ((g$x$5913$5uPkq g$y$5914$5uPkq)
        (letrec* ((g$sr$5915$5uPkq
                    (case-lambda
                      ((g$x$5917$5uPkq g$y$5918$5uPkq)
                       ((case-lambda
                          ((g$fx$5919$5uPkq g$fy$5920$5uPkq)
                           (if (>= g$fx$5919$5uPkq g$x$5917$5uPkq)
                             (list g$fx$5919$5uPkq '1)
                             (if (= g$fx$5919$5uPkq g$fy$5920$5uPkq)
                               ((case-lambda
                                  ((g$rat$5921$5uPkq)
                                   (list
                                     (+ (g$cadr$5768$5uPkq g$rat$5921$5uPkq)
                                        (* g$fx$5919$5uPkq
                                           (car g$rat$5921$5uPkq)))
                                     (car g$rat$5921$5uPkq))))
                                (g$sr$5915$5uPkq
                                  (/ (- g$y$5918$5uPkq g$fy$5920$5uPkq))
                                  (/ (- g$x$5917$5uPkq g$fx$5919$5uPkq))))
                               (list (+ '1 g$fx$5919$5uPkq) '1)))))
                        (exact (floor g$x$5917$5uPkq))
                        (exact (floor g$y$5918$5uPkq)))))))
          (if (< g$y$5914$5uPkq g$x$5913$5uPkq)
            (g$find-ratio-between$5821$5uPkq g$y$5914$5uPkq g$x$5913$5uPkq)
            (if (>= g$x$5913$5uPkq g$y$5914$5uPkq)
              (list g$x$5913$5uPkq '1)
              (if (positive? g$x$5913$5uPkq)
                (g$sr$5915$5uPkq g$x$5913$5uPkq g$y$5914$5uPkq)
                (if (negative? g$y$5914$5uPkq)
                  ((case-lambda
                     ((g$rat$5916$5uPkq)
                      (list
                        (- (car g$rat$5916$5uPkq))
                        (g$cadr$5768$5uPkq g$rat$5916$5uPkq))))
                   (g$sr$5915$5uPkq (- g$y$5914$5uPkq) (- g$x$5913$5uPkq)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$6153$5uPkq g$using$6186$5uPkq (clr-using-internal 'system))
   (g$using$6155$5uPkq
     g$using$6187$5uPkq
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$6156$5uPkq
     g$make-eq-hashtable$6188$5uPkq
     (case-lambda
       (() (g$make-eq-hashtable$6156$5uPkq '32))
       ((g$k$6165$5uPkq)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$6165$5uPkq)))))
   (g$make-eqv-hashtable$6157$5uPkq
     g$make-eqv-hashtable$6189$5uPkq
     (case-lambda
       (() (g$make-eqv-hashtable$6157$5uPkq '32))
       ((g$k$6166$5uPkq) (make-hashtable eqv-hash eqv? g$k$6166$5uPkq))))
   (g$hashtable-size$6158$5uPkq
     g$hashtable-size$6190$5uPkq
     (case-lambda
       ((g$ht$6167$5uPkq)
        (clr-call-internal 'hashtable 'get_count g$ht$6167$5uPkq))))
   (g$hashtable-ref$6159$5uPkq
     g$hashtable-ref$6191$5uPkq
     (case-lambda
       ((g$ht$6168$5uPkq g$key$6169$5uPkq g$default$6170$5uPkq)
        (letrec* ((g$r$6171$5uPkq
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$6168$5uPkq
                      g$key$6169$5uPkq)))
          (if (not (null? g$r$6171$5uPkq))
            g$r$6171$5uPkq
            g$default$6170$5uPkq)))))
   (g$hashtable-set!$6160$5uPkq
     g$hashtable-set!$6192$5uPkq
     (case-lambda
       ((g$ht$6172$5uPkq g$key$6173$5uPkq g$obj$6174$5uPkq)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$6172$5uPkq
          g$key$6173$5uPkq
          g$obj$6174$5uPkq))))
   (g$hashtable-delete!$6161$5uPkq
     g$hashtable-delete!$6193$5uPkq
     (case-lambda
       ((g$ht$6175$5uPkq g$key$6176$5uPkq)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$6175$5uPkq
          g$key$6176$5uPkq))))
   (g$hashtable-contains?$6162$5uPkq
     g$hashtable-contains?$6194$5uPkq
     (case-lambda
       ((g$ht$6177$5uPkq g$key$6178$5uPkq)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$6177$5uPkq
          g$key$6178$5uPkq))))
   (g$hashtable-update!$6163$5uPkq
     g$hashtable-update!$6195$5uPkq
     (case-lambda
       ((g$ht$6179$5uPkq
          g$key$6180$5uPkq
          g$proc$6181$5uPkq
          g$default$6182$5uPkq)
        (g$hashtable-set!$6160$5uPkq
          g$ht$6179$5uPkq
          g$key$6180$5uPkq
          (g$proc$6181$5uPkq
            (g$hashtable-ref$6159$5uPkq
              g$ht$6179$5uPkq
              g$key$6180$5uPkq
              g$default$6182$5uPkq))))))
   (g$hashtable-clear!$6164$5uPkq
     g$hashtable-clear!$6196$5uPkq
     (case-lambda
       ((g$ht$6183$5uPkq) (g$hashtable-clear!$6164$5uPkq g$ht$6183$5uPkq '32))
       ((g$ht$6184$5uPkq g$k$6185$5uPkq)
        (clr-call-internal 'hashtable 'clear g$ht$6184$5uPkq)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$6198$5uPkq g$using$6205$5uPkq (clr-using-internal 'system.io))
   (g$file-exists?$6199$5uPkq
     g$file-exists?$6206$5uPkq
     (case-lambda
       ((g$fn$6202$5uPkq)
        (clr-call-internal 'file 'exists '() g$fn$6202$5uPkq))))
   (g$delete-file$6200$5uPkq
     g$delete-file$6207$5uPkq
     (case-lambda
       ((g$fn$6203$5uPkq)
        (clr-call-internal 'file 'delete '() g$fn$6203$5uPkq))))
   (g$get-directory-name$6201$5uPkq
     g$get-directory-name$6208$5uPkq
     (case-lambda
       ((g$path$6204$5uPkq)
        (clr-call-internal 'path 'getdirectoryname '() g$path$6204$5uPkq)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6209$5uPkq
     g$native-endianness$6320$5uPkq
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6210$5uPkq
     g$bytevector-u16-ref$6321$5uPkq
     (case-lambda
       ((g$bytevector$6238$5uPkq g$k$6239$5uPkq g$endianness$6240$5uPkq)
        (bytevector-uint-ref
          g$bytevector$6238$5uPkq
          g$k$6239$5uPkq
          g$endianness$6240$5uPkq
          '2))))
   (g$bytevector-s16-ref$6211$5uPkq
     g$bytevector-s16-ref$6322$5uPkq
     (case-lambda
       ((g$bytevector$6241$5uPkq g$k$6242$5uPkq g$endianness$6243$5uPkq)
        (bytevector-sint-ref
          g$bytevector$6241$5uPkq
          g$k$6242$5uPkq
          g$endianness$6243$5uPkq
          '2))))
   (g$bytevector-u16-native-ref$6212$5uPkq
     g$bytevector-u16-native-ref$6323$5uPkq
     (case-lambda
       ((g$bytevector$6244$5uPkq g$k$6245$5uPkq)
        (bytevector-uint-ref
          g$bytevector$6244$5uPkq
          g$k$6245$5uPkq
          (g$native-endianness$6209$5uPkq)
          '2))))
   (g$bytevector-s16-native-ref$6213$5uPkq
     g$bytevector-s16-native-ref$6324$5uPkq
     (case-lambda
       ((g$bytevector$6246$5uPkq g$k$6247$5uPkq)
        (bytevector-sint-ref
          g$bytevector$6246$5uPkq
          g$k$6247$5uPkq
          (g$native-endianness$6209$5uPkq)
          '2))))
   (g$bytevector-u16-set!$6214$5uPkq
     g$bytevector-u16-set!$6325$5uPkq
     (case-lambda
       ((g$bytevector$6248$5uPkq
          g$k$6249$5uPkq
          g$n$6250$5uPkq
          g$endianness$6251$5uPkq)
        (bytevector-uint-set!
          g$bytevector$6248$5uPkq
          g$k$6249$5uPkq
          g$n$6250$5uPkq
          g$endianness$6251$5uPkq
          '2))))
   (g$bytevector-s16-set!$6215$5uPkq
     g$bytevector-s16-set!$6326$5uPkq
     (case-lambda
       ((g$bytevector$6252$5uPkq
          g$k$6253$5uPkq
          g$n$6254$5uPkq
          g$endianness$6255$5uPkq)
        (bytevector-sint-set!
          g$bytevector$6252$5uPkq
          g$k$6253$5uPkq
          g$n$6254$5uPkq
          g$endianness$6255$5uPkq
          '2))))
   (g$bytevector-u16-native-set!$6216$5uPkq
     g$bytevector-u16-native-set!$6327$5uPkq
     (case-lambda
       ((g$bytevector$6256$5uPkq g$k$6257$5uPkq g$n$6258$5uPkq)
        (bytevector-uint-set!
          g$bytevector$6256$5uPkq
          g$k$6257$5uPkq
          g$n$6258$5uPkq
          (g$native-endianness$6209$5uPkq)
          '2))))
   (g$bytevector-s16-native-set!$6217$5uPkq
     g$bytevector-s16-native-set!$6328$5uPkq
     (case-lambda
       ((g$bytevector$6259$5uPkq g$k$6260$5uPkq g$n$6261$5uPkq)
        (bytevector-sint-set!
          g$bytevector$6259$5uPkq
          g$k$6260$5uPkq
          g$n$6261$5uPkq
          (g$native-endianness$6209$5uPkq)
          '2))))
   (g$bytevector-u32-ref$6218$5uPkq
     g$bytevector-u32-ref$6329$5uPkq
     (case-lambda
       ((g$bytevector$6262$5uPkq g$k$6263$5uPkq g$endianness$6264$5uPkq)
        (bytevector-uint-ref
          g$bytevector$6262$5uPkq
          g$k$6263$5uPkq
          g$endianness$6264$5uPkq
          '4))))
   (g$bytevector-s32-ref$6219$5uPkq
     g$bytevector-s32-ref$6330$5uPkq
     (case-lambda
       ((g$bytevector$6265$5uPkq g$k$6266$5uPkq g$endianness$6267$5uPkq)
        (bytevector-sint-ref
          g$bytevector$6265$5uPkq
          g$k$6266$5uPkq
          g$endianness$6267$5uPkq
          '4))))
   (g$bytevector-u32-native-ref$6220$5uPkq
     g$bytevector-u32-native-ref$6331$5uPkq
     (case-lambda
       ((g$bytevector$6268$5uPkq g$k$6269$5uPkq)
        (bytevector-uint-ref
          g$bytevector$6268$5uPkq
          g$k$6269$5uPkq
          (g$native-endianness$6209$5uPkq)
          '4))))
   (g$bytevector-s32-native-ref$6221$5uPkq
     g$bytevector-s32-native-ref$6332$5uPkq
     (case-lambda
       ((g$bytevector$6270$5uPkq g$k$6271$5uPkq)
        (bytevector-sint-ref
          g$bytevector$6270$5uPkq
          g$k$6271$5uPkq
          (g$native-endianness$6209$5uPkq)
          '4))))
   (g$bytevector-u32-set!$6222$5uPkq
     g$bytevector-u32-set!$6333$5uPkq
     (case-lambda
       ((g$bytevector$6272$5uPkq
          g$k$6273$5uPkq
          g$n$6274$5uPkq
          g$endianness$6275$5uPkq)
        (bytevector-uint-set!
          g$bytevector$6272$5uPkq
          g$k$6273$5uPkq
          g$n$6274$5uPkq
          g$endianness$6275$5uPkq
          '4))))
   (g$bytevector-s32-set!$6223$5uPkq
     g$bytevector-s32-set!$6334$5uPkq
     (case-lambda
       ((g$bytevector$6276$5uPkq
          g$k$6277$5uPkq
          g$n$6278$5uPkq
          g$endianness$6279$5uPkq)
        (bytevector-sint-set!
          g$bytevector$6276$5uPkq
          g$k$6277$5uPkq
          g$n$6278$5uPkq
          g$endianness$6279$5uPkq
          '4))))
   (g$bytevector-u32-native-set!$6224$5uPkq
     g$bytevector-u32-native-set!$6335$5uPkq
     (case-lambda
       ((g$bytevector$6280$5uPkq g$k$6281$5uPkq g$n$6282$5uPkq)
        (bytevector-uint-set!
          g$bytevector$6280$5uPkq
          g$k$6281$5uPkq
          g$n$6282$5uPkq
          (g$native-endianness$6209$5uPkq)
          '4))))
   (g$bytevector-s32-native-set!$6225$5uPkq
     g$bytevector-s32-native-set!$6336$5uPkq
     (case-lambda
       ((g$bytevector$6283$5uPkq g$k$6284$5uPkq g$n$6285$5uPkq)
        (bytevector-sint-set!
          g$bytevector$6283$5uPkq
          g$k$6284$5uPkq
          g$n$6285$5uPkq
          (g$native-endianness$6209$5uPkq)
          '4))))
   (g$bytevector-u64-ref$6226$5uPkq
     g$bytevector-u64-ref$6337$5uPkq
     (case-lambda
       ((g$bytevector$6286$5uPkq g$k$6287$5uPkq g$endianness$6288$5uPkq)
        (bytevector-uint-ref
          g$bytevector$6286$5uPkq
          g$k$6287$5uPkq
          g$endianness$6288$5uPkq
          '8))))
   (g$bytevector-s64-ref$6227$5uPkq
     g$bytevector-s64-ref$6338$5uPkq
     (case-lambda
       ((g$bytevector$6289$5uPkq g$k$6290$5uPkq g$endianness$6291$5uPkq)
        (bytevector-sint-ref
          g$bytevector$6289$5uPkq
          g$k$6290$5uPkq
          g$endianness$6291$5uPkq
          '8))))
   (g$bytevector-u64-native-ref$6228$5uPkq
     g$bytevector-u64-native-ref$6339$5uPkq
     (case-lambda
       ((g$bytevector$6292$5uPkq g$k$6293$5uPkq)
        (bytevector-uint-ref
          g$bytevector$6292$5uPkq
          g$k$6293$5uPkq
          (g$native-endianness$6209$5uPkq)
          '8))))
   (g$bytevector-s64-native-ref$6229$5uPkq
     g$bytevector-s64-native-ref$6340$5uPkq
     (case-lambda
       ((g$bytevector$6294$5uPkq g$k$6295$5uPkq)
        (bytevector-sint-ref
          g$bytevector$6294$5uPkq
          g$k$6295$5uPkq
          (g$native-endianness$6209$5uPkq)
          '8))))
   (g$bytevector-u64-set!$6230$5uPkq
     g$bytevector-u64-set!$6341$5uPkq
     (case-lambda
       ((g$bytevector$6296$5uPkq
          g$k$6297$5uPkq
          g$n$6298$5uPkq
          g$endianness$6299$5uPkq)
        (bytevector-uint-set!
          g$bytevector$6296$5uPkq
          g$k$6297$5uPkq
          g$n$6298$5uPkq
          g$endianness$6299$5uPkq
          '8))))
   (g$bytevector-s64-set!$6231$5uPkq
     g$bytevector-s64-set!$6342$5uPkq
     (case-lambda
       ((g$bytevector$6300$5uPkq
          g$k$6301$5uPkq
          g$n$6302$5uPkq
          g$endianness$6303$5uPkq)
        (bytevector-sint-set!
          g$bytevector$6300$5uPkq
          g$k$6301$5uPkq
          g$n$6302$5uPkq
          g$endianness$6303$5uPkq
          '8))))
   (g$bytevector-u64-native-set!$6232$5uPkq
     g$bytevector-u64-native-set!$6343$5uPkq
     (case-lambda
       ((g$bytevector$6304$5uPkq g$k$6305$5uPkq g$n$6306$5uPkq)
        (bytevector-uint-set!
          g$bytevector$6304$5uPkq
          g$k$6305$5uPkq
          g$n$6306$5uPkq
          (g$native-endianness$6209$5uPkq)
          '8))))
   (g$bytevector-s64-native-set!$6233$5uPkq
     g$bytevector-s64-native-set!$6344$5uPkq
     (case-lambda
       ((g$bytevector$6307$5uPkq g$k$6308$5uPkq g$n$6309$5uPkq)
        (bytevector-sint-set!
          g$bytevector$6307$5uPkq
          g$k$6308$5uPkq
          g$n$6309$5uPkq
          (g$native-endianness$6209$5uPkq)
          '8))))
   (g$bytevector-ieee-single-native-ref$6234$5uPkq
     g$bytevector-ieee-single-native-ref$6345$5uPkq
     (case-lambda
       ((g$bytevector$6310$5uPkq g$k$6311$5uPkq)
        (if (not (zero? (mod g$k$6311$5uPkq '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$6311$5uPkq)
          (bytevector-ieee-single-ref
            g$bytevector$6310$5uPkq
            g$k$6311$5uPkq
            (g$native-endianness$6209$5uPkq))))))
   (g$bytevector-ieee-double-native-ref$6235$5uPkq
     g$bytevector-ieee-double-native-ref$6346$5uPkq
     (case-lambda
       ((g$bytevector$6312$5uPkq g$k$6313$5uPkq)
        (if (not (zero? (mod g$k$6313$5uPkq '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$6313$5uPkq)
          (bytevector-ieee-double-ref
            g$bytevector$6312$5uPkq
            g$k$6313$5uPkq
            (g$native-endianness$6209$5uPkq))))))
   (g$bytevector-ieee-single-native-set!$6236$5uPkq
     g$bytevector-ieee-single-native-set!$6347$5uPkq
     (case-lambda
       ((g$bytevector$6314$5uPkq g$k$6315$5uPkq g$x$6316$5uPkq)
        (if (not (zero? (mod g$k$6315$5uPkq '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$6315$5uPkq)
          (bytevector-ieee-single-set!
            g$bytevector$6314$5uPkq
            g$k$6315$5uPkq
            g$x$6316$5uPkq
            (g$native-endianness$6209$5uPkq))))))
   (g$bytevector-ieee-double-native-set!$6237$5uPkq
     g$bytevector-ieee-double-native-set!$6348$5uPkq
     (case-lambda
       ((g$bytevector$6317$5uPkq g$k$6318$5uPkq g$x$6319$5uPkq)
        (if (not (zero? (mod g$k$6318$5uPkq '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$6318$5uPkq)
          (bytevector-ieee-double-set!
            g$bytevector$6317$5uPkq
            g$k$6318$5uPkq
            g$x$6319$5uPkq
            (g$native-endianness$6209$5uPkq)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$7344$6349$5uPkq
     g$7344$6444$5uPkq
     (make-record-type-descriptor
       '&condition
       '#f
       'g$7347$5uPkq
       '#f
       '#f
       '#()))
   (g$7346$6350$5uPkq g$7346$6445$5uPkq '#f)
   (g$7345$6351$5uPkq
     g$7345$6446$5uPkq
     (make-record-constructor-descriptor
       g$7344$6349$5uPkq
       '#f
       g$7346$6350$5uPkq))
   (g$&condition?$6352$5uPkq
     g$&condition?$6447$5uPkq
     (record-predicate g$7344$6349$5uPkq))
   (g$make-&condition$6353$5uPkq
     g$make-&condition$6448$5uPkq
     (record-constructor g$7345$6351$5uPkq))
   (g$&condition-rtd$6354$5uPkq
     g$&condition-rtd$6449$5uPkq
     g$7344$6349$5uPkq)
   (g$&condition-rcd$6355$5uPkq
     g$&condition-rcd$6450$5uPkq
     g$7345$6351$5uPkq)
   (g$7360$6356$5uPkq
     g$7360$6451$5uPkq
     (make-record-type-descriptor
       '&message
       g$7344$6349$5uPkq
       'g$7363$5uPkq
       '#f
       '#f
       '#((immutable message))))
   (g$7362$6357$5uPkq g$7362$6452$5uPkq '#f)
   (g$7361$6358$5uPkq
     g$7361$6453$5uPkq
     (make-record-constructor-descriptor
       g$7360$6356$5uPkq
       g$7345$6351$5uPkq
       g$7362$6357$5uPkq))
   (g$7359$6359$5uPkq
     g$7359$6454$5uPkq
     (record-predicate g$7360$6356$5uPkq))
   (g$make-message-condition$6360$5uPkq
     g$make-message-condition$6455$5uPkq
     (record-constructor g$7361$6358$5uPkq))
   (g$7358$6361$5uPkq
     g$7358$6456$5uPkq
     (record-accessor g$7360$6356$5uPkq '0))
   (g$message-condition?$6362$5uPkq
     g$message-condition?$6457$5uPkq
     (condition-predicate g$7360$6356$5uPkq))
   (g$condition-message$6363$5uPkq
     g$condition-message$6458$5uPkq
     (condition-accessor g$7360$6356$5uPkq g$7358$6361$5uPkq))
   (g$7376$6364$5uPkq
     g$7376$6459$5uPkq
     (make-record-type-descriptor
       '&warning
       g$7344$6349$5uPkq
       'g$7379$5uPkq
       '#f
       '#f
       '#()))
   (g$7378$6365$5uPkq g$7378$6460$5uPkq '#f)
   (g$7377$6366$5uPkq
     g$7377$6461$5uPkq
     (make-record-constructor-descriptor
       g$7376$6364$5uPkq
       g$7345$6351$5uPkq
       g$7378$6365$5uPkq))
   (g$7375$6367$5uPkq
     g$7375$6462$5uPkq
     (record-predicate g$7376$6364$5uPkq))
   (g$make-warning$6368$5uPkq
     g$make-warning$6463$5uPkq
     (record-constructor g$7377$6366$5uPkq))
   (g$warning?$6369$5uPkq
     g$warning?$6464$5uPkq
     (condition-predicate g$7376$6364$5uPkq))
   (g$7390$6370$5uPkq
     g$7390$6465$5uPkq
     (make-record-type-descriptor
       '&serious
       g$7344$6349$5uPkq
       'g$7393$5uPkq
       '#f
       '#f
       '#()))
   (g$7392$6371$5uPkq g$7392$6466$5uPkq '#f)
   (g$7391$6372$5uPkq
     g$7391$6467$5uPkq
     (make-record-constructor-descriptor
       g$7390$6370$5uPkq
       g$7345$6351$5uPkq
       g$7392$6371$5uPkq))
   (g$7389$6373$5uPkq
     g$7389$6468$5uPkq
     (record-predicate g$7390$6370$5uPkq))
   (g$make-serious-condition$6374$5uPkq
     g$make-serious-condition$6469$5uPkq
     (record-constructor g$7391$6372$5uPkq))
   (g$serious-condition?$6375$5uPkq
     g$serious-condition?$6470$5uPkq
     (condition-predicate g$7390$6370$5uPkq))
   (g$7404$6376$5uPkq
     g$7404$6471$5uPkq
     (make-record-type-descriptor
       '&error
       g$7390$6370$5uPkq
       'g$7407$5uPkq
       '#f
       '#f
       '#()))
   (g$7406$6377$5uPkq g$7406$6472$5uPkq '#f)
   (g$7405$6378$5uPkq
     g$7405$6473$5uPkq
     (make-record-constructor-descriptor
       g$7404$6376$5uPkq
       g$7391$6372$5uPkq
       g$7406$6377$5uPkq))
   (g$7403$6379$5uPkq
     g$7403$6474$5uPkq
     (record-predicate g$7404$6376$5uPkq))
   (g$make-error$6380$5uPkq
     g$make-error$6475$5uPkq
     (record-constructor g$7405$6378$5uPkq))
   (g$error?$6381$5uPkq
     g$error?$6476$5uPkq
     (condition-predicate g$7404$6376$5uPkq))
   (g$7418$6382$5uPkq
     g$7418$6477$5uPkq
     (make-record-type-descriptor
       '&violation
       g$7390$6370$5uPkq
       'g$7421$5uPkq
       '#f
       '#f
       '#()))
   (g$7420$6383$5uPkq g$7420$6478$5uPkq '#f)
   (g$7419$6384$5uPkq
     g$7419$6479$5uPkq
     (make-record-constructor-descriptor
       g$7418$6382$5uPkq
       g$7391$6372$5uPkq
       g$7420$6383$5uPkq))
   (g$7417$6385$5uPkq
     g$7417$6480$5uPkq
     (record-predicate g$7418$6382$5uPkq))
   (g$make-violation$6386$5uPkq
     g$make-violation$6481$5uPkq
     (record-constructor g$7419$6384$5uPkq))
   (g$violation?$6387$5uPkq
     g$violation?$6482$5uPkq
     (condition-predicate g$7418$6382$5uPkq))
   (g$7432$6388$5uPkq
     g$7432$6483$5uPkq
     (make-record-type-descriptor
       '&assertion
       g$7418$6382$5uPkq
       'g$7435$5uPkq
       '#f
       '#f
       '#()))
   (g$7434$6389$5uPkq g$7434$6484$5uPkq '#f)
   (g$7433$6390$5uPkq
     g$7433$6485$5uPkq
     (make-record-constructor-descriptor
       g$7432$6388$5uPkq
       g$7419$6384$5uPkq
       g$7434$6389$5uPkq))
   (g$7431$6391$5uPkq
     g$7431$6486$5uPkq
     (record-predicate g$7432$6388$5uPkq))
   (g$make-assertion-violation$6392$5uPkq
     g$make-assertion-violation$6487$5uPkq
     (record-constructor g$7433$6390$5uPkq))
   (g$assertion-violation?$6393$5uPkq
     g$assertion-violation?$6488$5uPkq
     (condition-predicate g$7432$6388$5uPkq))
   (g$7447$6394$5uPkq
     g$7447$6489$5uPkq
     (make-record-type-descriptor
       '&irritants
       g$7344$6349$5uPkq
       'g$7450$5uPkq
       '#f
       '#f
       '#((immutable irritants))))
   (g$7449$6395$5uPkq g$7449$6490$5uPkq '#f)
   (g$7448$6396$5uPkq
     g$7448$6491$5uPkq
     (make-record-constructor-descriptor
       g$7447$6394$5uPkq
       g$7345$6351$5uPkq
       g$7449$6395$5uPkq))
   (g$7446$6397$5uPkq
     g$7446$6492$5uPkq
     (record-predicate g$7447$6394$5uPkq))
   (g$make-irritants-condition$6398$5uPkq
     g$make-irritants-condition$6493$5uPkq
     (record-constructor g$7448$6396$5uPkq))
   (g$7445$6399$5uPkq
     g$7445$6494$5uPkq
     (record-accessor g$7447$6394$5uPkq '0))
   (g$irritants-condition?$6400$5uPkq
     g$irritants-condition?$6495$5uPkq
     (condition-predicate g$7447$6394$5uPkq))
   (g$condition-irritants$6401$5uPkq
     g$condition-irritants$6496$5uPkq
     (condition-accessor g$7447$6394$5uPkq g$7445$6399$5uPkq))
   (g$7464$6402$5uPkq
     g$7464$6497$5uPkq
     (make-record-type-descriptor
       '&who
       g$7344$6349$5uPkq
       'g$7467$5uPkq
       '#f
       '#f
       '#((immutable who))))
   (g$7466$6403$5uPkq g$7466$6498$5uPkq '#f)
   (g$7465$6404$5uPkq
     g$7465$6499$5uPkq
     (make-record-constructor-descriptor
       g$7464$6402$5uPkq
       g$7345$6351$5uPkq
       g$7466$6403$5uPkq))
   (g$7463$6405$5uPkq
     g$7463$6500$5uPkq
     (record-predicate g$7464$6402$5uPkq))
   (g$make-who-condition$6406$5uPkq
     g$make-who-condition$6501$5uPkq
     (record-constructor g$7465$6404$5uPkq))
   (g$7462$6407$5uPkq
     g$7462$6502$5uPkq
     (record-accessor g$7464$6402$5uPkq '0))
   (g$who-condition?$6408$5uPkq
     g$who-condition?$6503$5uPkq
     (condition-predicate g$7464$6402$5uPkq))
   (g$condition-who$6409$5uPkq
     g$condition-who$6504$5uPkq
     (condition-accessor g$7464$6402$5uPkq g$7462$6407$5uPkq))
   (g$7480$6410$5uPkq
     g$7480$6505$5uPkq
     (make-record-type-descriptor
       '&non-continuable
       g$7418$6382$5uPkq
       'g$7483$5uPkq
       '#f
       '#f
       '#()))
   (g$7482$6411$5uPkq g$7482$6506$5uPkq '#f)
   (g$7481$6412$5uPkq
     g$7481$6507$5uPkq
     (make-record-constructor-descriptor
       g$7480$6410$5uPkq
       g$7419$6384$5uPkq
       g$7482$6411$5uPkq))
   (g$7479$6413$5uPkq
     g$7479$6508$5uPkq
     (record-predicate g$7480$6410$5uPkq))
   (g$make-non-continuable-violation$6414$5uPkq
     g$make-non-continuable-violation$6509$5uPkq
     (record-constructor g$7481$6412$5uPkq))
   (g$non-continuable-violation?$6415$5uPkq
     g$non-continuable-violation?$6510$5uPkq
     (condition-predicate g$7480$6410$5uPkq))
   (g$7494$6416$5uPkq
     g$7494$6511$5uPkq
     (make-record-type-descriptor
       '&implementation-restriction
       g$7418$6382$5uPkq
       'g$7497$5uPkq
       '#f
       '#f
       '#()))
   (g$7496$6417$5uPkq g$7496$6512$5uPkq '#f)
   (g$7495$6418$5uPkq
     g$7495$6513$5uPkq
     (make-record-constructor-descriptor
       g$7494$6416$5uPkq
       g$7419$6384$5uPkq
       g$7496$6417$5uPkq))
   (g$7493$6419$5uPkq
     g$7493$6514$5uPkq
     (record-predicate g$7494$6416$5uPkq))
   (g$make-implementation-restriction-violation$6420$5uPkq
     g$make-implementation-restriction-violation$6515$5uPkq
     (record-constructor g$7495$6418$5uPkq))
   (g$implementation-restriction-violation?$6421$5uPkq
     g$implementation-restriction-violation?$6516$5uPkq
     (condition-predicate g$7494$6416$5uPkq))
   (g$7508$6422$5uPkq
     g$7508$6517$5uPkq
     (make-record-type-descriptor
       '&lexical
       g$7418$6382$5uPkq
       'g$7511$5uPkq
       '#f
       '#f
       '#()))
   (g$7510$6423$5uPkq g$7510$6518$5uPkq '#f)
   (g$7509$6424$5uPkq
     g$7509$6519$5uPkq
     (make-record-constructor-descriptor
       g$7508$6422$5uPkq
       g$7419$6384$5uPkq
       g$7510$6423$5uPkq))
   (g$7507$6425$5uPkq
     g$7507$6520$5uPkq
     (record-predicate g$7508$6422$5uPkq))
   (g$make-lexical-violation$6426$5uPkq
     g$make-lexical-violation$6521$5uPkq
     (record-constructor g$7509$6424$5uPkq))
   (g$lexical-violation?$6427$5uPkq
     g$lexical-violation?$6522$5uPkq
     (condition-predicate g$7508$6422$5uPkq))
   (g$7524$6428$5uPkq
     g$7524$6523$5uPkq
     (make-record-type-descriptor
       '&syntax
       g$7418$6382$5uPkq
       'g$7527$5uPkq
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7526$6429$5uPkq g$7526$6524$5uPkq '#f)
   (g$7525$6430$5uPkq
     g$7525$6525$5uPkq
     (make-record-constructor-descriptor
       g$7524$6428$5uPkq
       g$7419$6384$5uPkq
       g$7526$6429$5uPkq))
   (g$7523$6431$5uPkq
     g$7523$6526$5uPkq
     (record-predicate g$7524$6428$5uPkq))
   (g$make-syntax-violation$6432$5uPkq
     g$make-syntax-violation$6527$5uPkq
     (record-constructor g$7525$6430$5uPkq))
   (g$7521$6433$5uPkq
     g$7521$6528$5uPkq
     (record-accessor g$7524$6428$5uPkq '0))
   (g$7522$6434$5uPkq
     g$7522$6529$5uPkq
     (record-accessor g$7524$6428$5uPkq '1))
   (g$syntax-violation?$6435$5uPkq
     g$syntax-violation?$6530$5uPkq
     (condition-predicate g$7524$6428$5uPkq))
   (g$syntax-violation-form$6436$5uPkq
     g$syntax-violation-form$6531$5uPkq
     (condition-accessor g$7524$6428$5uPkq g$7521$6433$5uPkq))
   (g$syntax-violation-subform$6437$5uPkq
     g$syntax-violation-subform$6532$5uPkq
     (condition-accessor g$7524$6428$5uPkq g$7522$6434$5uPkq))
   (g$7542$6438$5uPkq
     g$7542$6533$5uPkq
     (make-record-type-descriptor
       '&undefined
       g$7418$6382$5uPkq
       'g$7545$5uPkq
       '#f
       '#f
       '#()))
   (g$7544$6439$5uPkq g$7544$6534$5uPkq '#f)
   (g$7543$6440$5uPkq
     g$7543$6535$5uPkq
     (make-record-constructor-descriptor
       g$7542$6438$5uPkq
       g$7419$6384$5uPkq
       g$7544$6439$5uPkq))
   (g$7541$6441$5uPkq
     g$7541$6536$5uPkq
     (record-predicate g$7542$6438$5uPkq))
   (g$make-undefined-violation$6442$5uPkq
     g$make-undefined-violation$6537$5uPkq
     (record-constructor g$7543$6440$5uPkq))
   (g$undefined-violation?$6443$5uPkq
     g$undefined-violation?$6538$5uPkq
     (condition-predicate g$7542$6438$5uPkq)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6539$5uPkq
     g$append!$6545$5uPkq
     (case-lambda
       ((g$a$6540$5uPkq . g$b$6541$5uPkq)
        (if (null? g$a$6540$5uPkq)
          g$b$6541$5uPkq
          (if (null? g$b$6541$5uPkq)
            g$a$6540$5uPkq
            (begin
              ((letrec ((g$f$6542$5uPkq
                          (case-lambda
                            ((g$a$6543$5uPkq)
                             ((case-lambda
                                ((g$n$6544$5uPkq)
                                 (if (null? g$n$6544$5uPkq)
                                   (set-cdr! g$a$6543$5uPkq g$b$6541$5uPkq)
                                   (g$f$6542$5uPkq g$n$6544$5uPkq))))
                              (cdr g$a$6543$5uPkq))))))
                 g$f$6542$5uPkq)
               g$a$6540$5uPkq)
              g$a$6540$5uPkq)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6546$5uPkq
     g$sign$6564$5uPkq
     (case-lambda
       ((g$n$6552$5uPkq)
        (if (> g$n$6552$5uPkq '0) '1 (if (< g$n$6552$5uPkq '0) '-1 '0)))))
   (g$quotient$6547$5uPkq
     g$quotient$6565$5uPkq
     (case-lambda
       ((g$n1$6553$5uPkq g$n2$6554$5uPkq)
        (begin
          (if (not (integer-valued? g$n1$6553$5uPkq))
            (assertion-violation 'quotient '"not an integer" g$n1$6553$5uPkq)
            (void))
          (if (not (integer-valued? g$n2$6554$5uPkq))
            (assertion-violation 'quotient '"not an integer" g$n2$6554$5uPkq)
            (void))
          (* (g$sign$6546$5uPkq g$n1$6553$5uPkq)
             (g$sign$6546$5uPkq g$n2$6554$5uPkq)
             (div (abs g$n1$6553$5uPkq) (abs g$n2$6554$5uPkq)))))))
   (g$remainder$6548$5uPkq
     g$remainder$6566$5uPkq
     (case-lambda
       ((g$n1$6555$5uPkq g$n2$6556$5uPkq)
        (begin
          (if (not (integer-valued? g$n1$6555$5uPkq))
            (assertion-violation 'remainder '"not an integer" g$n1$6555$5uPkq)
            (void))
          (if (not (integer-valued? g$n2$6556$5uPkq))
            (assertion-violation 'remainder '"not an integer" g$n2$6556$5uPkq)
            (void))
          (* (g$sign$6546$5uPkq g$n1$6555$5uPkq)
             (mod (abs g$n1$6555$5uPkq) (abs g$n2$6556$5uPkq)))))))
   (g$modulo$6549$5uPkq
     g$modulo$6567$5uPkq
     (case-lambda
       ((g$n1$6557$5uPkq g$n2$6558$5uPkq)
        (begin
          (if (not (integer-valued? g$n1$6557$5uPkq))
            (assertion-violation 'modulo '"not an integer" g$n1$6557$5uPkq)
            (void))
          (if (not (integer-valued? g$n2$6558$5uPkq))
            (assertion-violation 'modulo '"not an integer" g$n2$6558$5uPkq)
            (void))
          (* (g$sign$6546$5uPkq g$n2$6558$5uPkq)
             (mod (* (g$sign$6546$5uPkq g$n2$6558$5uPkq) g$n1$6557$5uPkq)
                  (abs g$n2$6558$5uPkq)))))))
   (g$make-promise$6550$5uPkq
     g$make-promise$6568$5uPkq
     (case-lambda
       ((g$proc$6559$5uPkq)
        ((case-lambda
           ((g$result-ready?$6560$5uPkq g$result$6561$5uPkq)
            (case-lambda
              (()
               (if g$result-ready?$6560$5uPkq
                 g$result$6561$5uPkq
                 ((case-lambda
                    ((g$x$6562$5uPkq)
                     (if g$result-ready?$6560$5uPkq
                       g$result$6561$5uPkq
                       (begin
                         (set! g$result-ready?$6560$5uPkq '#t)
                         (set! g$result$6561$5uPkq g$x$6562$5uPkq)
                         g$result$6561$5uPkq))))
                  (g$proc$6559$5uPkq)))))))
         '#f
         '#f))))
   (g$force$6551$5uPkq
     g$force$6569$5uPkq
     (case-lambda ((g$object$6563$5uPkq) (g$object$6563$5uPkq)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6570$5uPkq
     g$split$6595$5uPkq
     (case-lambda
       ((g$ls$6574$5uPkq)
        ((letrec ((g$loop$6575$5uPkq
                    (case-lambda
                      ((g$rest$6576$5uPkq g$left$6577$5uPkq g$right$6578$5uPkq)
                       (if (null? g$rest$6576$5uPkq)
                         (cons g$left$6577$5uPkq g$right$6578$5uPkq)
                         (if (null? (cdr g$rest$6576$5uPkq))
                           (cons
                             (cons (car g$rest$6576$5uPkq) g$left$6577$5uPkq)
                             g$right$6578$5uPkq)
                           (g$loop$6575$5uPkq
                             (g$cddr$5925$5uPkq g$rest$6576$5uPkq)
                             (cons (car g$rest$6576$5uPkq) g$left$6577$5uPkq)
                             (cons
                               (g$cadr$5923$5uPkq g$rest$6576$5uPkq)
                               g$right$6578$5uPkq))))))))
           g$loop$6575$5uPkq)
         g$ls$6574$5uPkq
         '()
         '()))))
   (g$reverse-it$6571$5uPkq
     g$reverse-it$6596$5uPkq
     (case-lambda
       ((g$head$6579$5uPkq g$tail$6580$5uPkq)
        (if (null? g$head$6579$5uPkq)
          g$tail$6580$5uPkq
          (g$reverse-it$6571$5uPkq
            (cdr g$head$6579$5uPkq)
            (cons (car g$head$6579$5uPkq) g$tail$6580$5uPkq))))))
   (g$merge$6572$5uPkq
     g$merge$6597$5uPkq
     (case-lambda
       ((g$list-1$6581$5uPkq g$list-2$6582$5uPkq g$precedes?$6583$5uPkq)
        ((letrec ((g$loop$6584$5uPkq
                    (case-lambda
                      ((g$source-1$6585$5uPkq
                         g$source-2$6586$5uPkq
                         g$so-far$6587$5uPkq)
                       (if (null? g$source-1$6585$5uPkq)
                         (g$reverse-it$6571$5uPkq
                           g$so-far$6587$5uPkq
                           g$source-2$6586$5uPkq)
                         (if (null? g$source-2$6586$5uPkq)
                           (g$reverse-it$6571$5uPkq
                             g$so-far$6587$5uPkq
                             g$source-1$6585$5uPkq)
                           ((case-lambda
                              ((g$car-1$6588$5uPkq g$car-2$6589$5uPkq)
                               (if (g$precedes?$6583$5uPkq
                                     g$car-2$6589$5uPkq
                                     g$car-1$6588$5uPkq)
                                 (g$loop$6584$5uPkq
                                   g$source-1$6585$5uPkq
                                   (cdr g$source-2$6586$5uPkq)
                                   (cons
                                     g$car-2$6589$5uPkq
                                     g$so-far$6587$5uPkq))
                                 (g$loop$6584$5uPkq
                                   g$source-2$6586$5uPkq
                                   (cdr g$source-1$6585$5uPkq)
                                   (cons
                                     g$car-1$6588$5uPkq
                                     g$so-far$6587$5uPkq)))))
                            (car g$source-1$6585$5uPkq)
                            (car g$source-2$6586$5uPkq))))))))
           g$loop$6584$5uPkq)
         g$list-1$6581$5uPkq
         g$list-2$6582$5uPkq
         '()))))
   (g$list-sort$6573$5uPkq
     g$list-sort$6598$5uPkq
     (case-lambda
       ((g$precedes?$6590$5uPkq g$ls$6591$5uPkq)
        (if (null? g$ls$6591$5uPkq)
          '()
          ((letrec ((g$helper$6592$5uPkq
                      (case-lambda
                        ((g$piece$6593$5uPkq)
                         (if (null? (cdr g$piece$6593$5uPkq))
                           g$piece$6593$5uPkq
                           ((case-lambda
                              ((g$parts$6594$5uPkq)
                               (g$merge$6572$5uPkq
                                 (g$helper$6592$5uPkq (car g$parts$6594$5uPkq))
                                 (g$helper$6592$5uPkq (cdr g$parts$6594$5uPkq))
                                 g$precedes?$6590$5uPkq)))
                            (g$split$6570$5uPkq g$piece$6593$5uPkq)))))))
             g$helper$6592$5uPkq)
           g$ls$6591$5uPkq))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$6605$5uPkq
     g$string-ci=?$6671$5uPkq
     (case-lambda
       ((g$a$6621$5uPkq g$b$6622$5uPkq . g$rest$6623$5uPkq)
        (begin
          (if (not (string? g$a$6621$5uPkq))
            (assertion-violation 'string-ci=? '"not a string" g$a$6621$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6624$5uPkq)
               (begin
                 (if (not (string? g$x$6624$5uPkq))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$6624$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6625$5uPkq)
                     (begin
                       (set! g$a$6621$5uPkq g$x$6624$5uPkq)
                       g$r$6625$5uPkq)))
                  (= (string-ci-compare g$a$6621$5uPkq g$x$6624$5uPkq) '0)))))
            (cons g$b$6622$5uPkq g$rest$6623$5uPkq))))))
   (g$string-ci<?$6606$5uPkq
     g$string-ci<?$6672$5uPkq
     (case-lambda
       ((g$a$6626$5uPkq g$b$6627$5uPkq . g$rest$6628$5uPkq)
        (begin
          (if (not (string? g$a$6626$5uPkq))
            (assertion-violation 'string-ci<? '"not a string" g$a$6626$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6629$5uPkq)
               (begin
                 (if (not (string? g$x$6629$5uPkq))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$6629$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6630$5uPkq)
                     (begin
                       (set! g$a$6626$5uPkq g$x$6629$5uPkq)
                       g$r$6630$5uPkq)))
                  (< (string-ci-compare g$a$6626$5uPkq g$x$6629$5uPkq) '0)))))
            (cons g$b$6627$5uPkq g$rest$6628$5uPkq))))))
   (g$string-ci>?$6607$5uPkq
     g$string-ci>?$6673$5uPkq
     (case-lambda
       ((g$a$6631$5uPkq g$b$6632$5uPkq . g$rest$6633$5uPkq)
        (begin
          (if (not (string? g$a$6631$5uPkq))
            (assertion-violation 'string-ci>? '"not a string" g$a$6631$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6634$5uPkq)
               (begin
                 (if (not (string? g$x$6634$5uPkq))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$6634$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6635$5uPkq)
                     (begin
                       (set! g$a$6631$5uPkq g$x$6634$5uPkq)
                       g$r$6635$5uPkq)))
                  (> (string-ci-compare g$a$6631$5uPkq g$x$6634$5uPkq) '0)))))
            (cons g$b$6632$5uPkq g$rest$6633$5uPkq))))))
   (g$string-ci<=?$6608$5uPkq
     g$string-ci<=?$6674$5uPkq
     (case-lambda
       ((g$a$6636$5uPkq g$b$6637$5uPkq . g$rest$6638$5uPkq)
        (begin
          (if (not (string? g$a$6636$5uPkq))
            (assertion-violation 'string-ci<=? '"not a string" g$a$6636$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6639$5uPkq)
               (begin
                 (if (not (string? g$x$6639$5uPkq))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$6639$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6640$5uPkq)
                     (begin
                       (set! g$a$6636$5uPkq g$x$6639$5uPkq)
                       g$r$6640$5uPkq)))
                  (<= (string-ci-compare g$a$6636$5uPkq g$x$6639$5uPkq) '0)))))
            (cons g$b$6637$5uPkq g$rest$6638$5uPkq))))))
   (g$string-ci>=?$6609$5uPkq
     g$string-ci>=?$6675$5uPkq
     (case-lambda
       ((g$a$6641$5uPkq g$b$6642$5uPkq . g$rest$6643$5uPkq)
        (begin
          (if (not (string? g$a$6641$5uPkq))
            (assertion-violation 'string-ci>=? '"not a string" g$a$6641$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6644$5uPkq)
               (begin
                 (if (not (string? g$x$6644$5uPkq))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$6644$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6645$5uPkq)
                     (begin
                       (set! g$a$6641$5uPkq g$x$6644$5uPkq)
                       g$r$6645$5uPkq)))
                  (>= (string-ci-compare g$a$6641$5uPkq g$x$6644$5uPkq) '0)))))
            (cons g$b$6642$5uPkq g$rest$6643$5uPkq))))))
   (g$char-ci=?$6616$5uPkq
     g$char-ci=?$6676$5uPkq
     (case-lambda
       ((g$a$6646$5uPkq g$b$6647$5uPkq . g$rest$6648$5uPkq)
        (begin
          (if (not (char? g$a$6646$5uPkq))
            (assertion-violation 'char-ci=? '"not a char" g$a$6646$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6649$5uPkq)
               (begin
                 (if (not (char? g$x$6649$5uPkq))
                   (assertion-violation 'char-ci=? '"not a char" g$x$6649$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6650$5uPkq)
                     (begin
                       (set! g$a$6646$5uPkq g$x$6649$5uPkq)
                       g$r$6650$5uPkq)))
                  (= (char->integer (char-upcase g$a$6646$5uPkq))
                     (char->integer (char-upcase g$x$6649$5uPkq)))))))
            (cons g$b$6647$5uPkq g$rest$6648$5uPkq))))))
   (g$char-ci<?$6617$5uPkq
     g$char-ci<?$6677$5uPkq
     (case-lambda
       ((g$a$6651$5uPkq g$b$6652$5uPkq . g$rest$6653$5uPkq)
        (begin
          (if (not (char? g$a$6651$5uPkq))
            (assertion-violation 'char-ci<? '"not a char" g$a$6651$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6654$5uPkq)
               (begin
                 (if (not (char? g$x$6654$5uPkq))
                   (assertion-violation 'char-ci<? '"not a char" g$x$6654$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6655$5uPkq)
                     (begin
                       (set! g$a$6651$5uPkq g$x$6654$5uPkq)
                       g$r$6655$5uPkq)))
                  (< (char->integer (char-upcase g$a$6651$5uPkq))
                     (char->integer (char-upcase g$x$6654$5uPkq)))))))
            (cons g$b$6652$5uPkq g$rest$6653$5uPkq))))))
   (g$char-ci>?$6618$5uPkq
     g$char-ci>?$6678$5uPkq
     (case-lambda
       ((g$a$6656$5uPkq g$b$6657$5uPkq . g$rest$6658$5uPkq)
        (begin
          (if (not (char? g$a$6656$5uPkq))
            (assertion-violation 'char-ci>? '"not a char" g$a$6656$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6659$5uPkq)
               (begin
                 (if (not (char? g$x$6659$5uPkq))
                   (assertion-violation 'char-ci>? '"not a char" g$x$6659$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6660$5uPkq)
                     (begin
                       (set! g$a$6656$5uPkq g$x$6659$5uPkq)
                       g$r$6660$5uPkq)))
                  (> (char->integer (char-upcase g$a$6656$5uPkq))
                     (char->integer (char-upcase g$x$6659$5uPkq)))))))
            (cons g$b$6657$5uPkq g$rest$6658$5uPkq))))))
   (g$char-ci<=?$6619$5uPkq
     g$char-ci<=?$6679$5uPkq
     (case-lambda
       ((g$a$6661$5uPkq g$b$6662$5uPkq . g$rest$6663$5uPkq)
        (begin
          (if (not (char? g$a$6661$5uPkq))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6661$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6664$5uPkq)
               (begin
                 (if (not (char? g$x$6664$5uPkq))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$6664$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6665$5uPkq)
                     (begin
                       (set! g$a$6661$5uPkq g$x$6664$5uPkq)
                       g$r$6665$5uPkq)))
                  (<= (char->integer (char-upcase g$a$6661$5uPkq))
                      (char->integer (char-upcase g$x$6664$5uPkq)))))))
            (cons g$b$6662$5uPkq g$rest$6663$5uPkq))))))
   (g$char-ci>=?$6620$5uPkq
     g$char-ci>=?$6680$5uPkq
     (case-lambda
       ((g$a$6666$5uPkq g$b$6667$5uPkq . g$rest$6668$5uPkq)
        (begin
          (if (not (char? g$a$6666$5uPkq))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6666$5uPkq)
            (void))
          (g$for-all$5757$5uPkq
            (case-lambda
              ((g$x$6669$5uPkq)
               (begin
                 (if (not (char? g$x$6669$5uPkq))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$6669$5uPkq)
                   (void))
                 ((case-lambda
                    ((g$r$6670$5uPkq)
                     (begin
                       (set! g$a$6666$5uPkq g$x$6669$5uPkq)
                       g$r$6670$5uPkq)))
                  (>= (char->integer (char-upcase g$a$6666$5uPkq))
                      (char->integer (char-upcase g$x$6669$5uPkq)))))))
            (cons g$b$6667$5uPkq g$rest$6668$5uPkq)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6681$5uPkq
     g$bitwise-if$6712$5uPkq
     (case-lambda
       ((g$ei1$6688$5uPkq g$ei2$6689$5uPkq g$ei3$6690$5uPkq)
        (bitwise-ior
          (bitwise-and g$ei1$6688$5uPkq g$ei2$6689$5uPkq)
          (bitwise-and (bitwise-not g$ei1$6688$5uPkq) g$ei3$6690$5uPkq)))))
   (g$bitwise-copy-bit$6682$5uPkq
     g$bitwise-copy-bit$6713$5uPkq
     (case-lambda
       ((g$ei1$6691$5uPkq g$ei2$6692$5uPkq g$ei3$6693$5uPkq)
        (g$bitwise-if$6681$5uPkq
          (g$bitwise-arithmetic-shift-left$6685$5uPkq '1 g$ei2$6692$5uPkq)
          (g$bitwise-arithmetic-shift-left$6685$5uPkq
            g$ei3$6693$5uPkq
            g$ei2$6692$5uPkq)
          g$ei1$6691$5uPkq))))
   (g$bitwise-bit-field$6683$5uPkq
     g$bitwise-bit-field$6714$5uPkq
     (case-lambda
       ((g$ei1$6694$5uPkq g$ei2$6695$5uPkq g$ei3$6696$5uPkq)
        (g$bitwise-arithmetic-shift-right$6686$5uPkq
          (bitwise-and
            g$ei1$6694$5uPkq
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6685$5uPkq
                '-1
                g$ei3$6696$5uPkq)))
          g$ei2$6695$5uPkq))))
   (g$bitwise-copy-bit-field$6684$5uPkq
     g$bitwise-copy-bit-field$6715$5uPkq
     (case-lambda
       ((g$to$6697$5uPkq g$start$6698$5uPkq g$end$6699$5uPkq g$from$6700$5uPkq)
        (g$bitwise-if$6681$5uPkq
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$6685$5uPkq '-1 g$start$6698$5uPkq)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6685$5uPkq
                '-1
                g$end$6699$5uPkq)))
          (g$bitwise-arithmetic-shift-left$6685$5uPkq
            g$from$6700$5uPkq
            g$start$6698$5uPkq)
          g$to$6697$5uPkq))))
   (g$bitwise-arithmetic-shift-left$6685$5uPkq
     g$bitwise-arithmetic-shift-left$6716$5uPkq
     (case-lambda
       ((g$ei1$6701$5uPkq g$ei2$6702$5uPkq)
        (bitwise-arithmetic-shift g$ei1$6701$5uPkq g$ei2$6702$5uPkq))))
   (g$bitwise-arithmetic-shift-right$6686$5uPkq
     g$bitwise-arithmetic-shift-right$6717$5uPkq
     (case-lambda
       ((g$ei1$6703$5uPkq g$ei2$6704$5uPkq)
        (bitwise-arithmetic-shift g$ei1$6703$5uPkq (- g$ei2$6704$5uPkq)))))
   (g$bitwise-rotate-bit-field$6687$5uPkq
     g$bitwise-rotate-bit-field$6718$5uPkq
     (case-lambda
       ((g$n$6705$5uPkq g$start$6706$5uPkq g$end$6707$5uPkq g$count$6708$5uPkq)
        ((case-lambda
           ((g$width$6709$5uPkq)
            (if (positive? g$width$6709$5uPkq)
              ((case-lambda
                 ((g$count$6710$5uPkq g$field$6711$5uPkq)
                  (g$bitwise-copy-bit-field$6684$5uPkq
                    g$n$6705$5uPkq
                    g$start$6706$5uPkq
                    g$end$6707$5uPkq
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$6685$5uPkq
                        g$field$6711$5uPkq
                        g$count$6710$5uPkq)
                      (g$bitwise-arithmetic-shift-right$6686$5uPkq
                        g$field$6711$5uPkq
                        (- g$width$6709$5uPkq g$count$6710$5uPkq))))))
               (mod g$count$6708$5uPkq g$width$6709$5uPkq)
               (g$bitwise-bit-field$6683$5uPkq
                 g$n$6705$5uPkq
                 g$start$6706$5uPkq
                 g$end$6707$5uPkq))
              g$n$6705$5uPkq)))
         (- g$end$6707$5uPkq g$start$6706$5uPkq))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fx*/carry$6719$5uPkq
     g$fx*/carry$6768$5uPkq
     (case-lambda
       ((g$fx1$6729$5uPkq g$fx2$6730$5uPkq g$fx3$6731$5uPkq)
        ((case-lambda
           ((g$s$6732$5uPkq g$e$6733$5uPkq)
            (values
              (mod0 g$s$6732$5uPkq g$e$6733$5uPkq)
              (div0 g$s$6732$5uPkq g$e$6733$5uPkq))))
         (+ (* g$fx1$6729$5uPkq g$fx2$6730$5uPkq) g$fx3$6731$5uPkq)
         (expt '2 (fixnum-width))))))
   (g$fx-/carry$6720$5uPkq
     g$fx-/carry$6769$5uPkq
     (case-lambda
       ((g$fx1$6734$5uPkq g$fx2$6735$5uPkq g$fx3$6736$5uPkq)
        ((case-lambda
           ((g$s$6737$5uPkq g$e$6738$5uPkq)
            (values
              (mod0 g$s$6737$5uPkq g$e$6738$5uPkq)
              (div0 g$s$6737$5uPkq g$e$6738$5uPkq))))
         (- g$fx1$6734$5uPkq g$fx2$6735$5uPkq g$fx3$6736$5uPkq)
         (expt '2 (fixnum-width))))))
   (g$fx+/carry$6721$5uPkq
     g$fx+/carry$6770$5uPkq
     (case-lambda
       ((g$fx1$6739$5uPkq g$fx2$6740$5uPkq g$fx3$6741$5uPkq)
        ((case-lambda
           ((g$s$6742$5uPkq g$e$6743$5uPkq)
            (values
              (mod0 g$s$6742$5uPkq g$e$6743$5uPkq)
              (div0 g$s$6742$5uPkq g$e$6743$5uPkq))))
         (+ g$fx1$6739$5uPkq g$fx2$6740$5uPkq g$fx3$6741$5uPkq)
         (expt '2 (fixnum-width))))))
   (g$fxif$6722$5uPkq
     g$fxif$6771$5uPkq
     (case-lambda
       ((g$fx1$6744$5uPkq g$fx2$6745$5uPkq g$fx3$6746$5uPkq)
        (fxior
          (fxand g$fx1$6744$5uPkq g$fx2$6745$5uPkq)
          (fxand (fxnot g$fx1$6744$5uPkq) g$fx3$6746$5uPkq)))))
   (g$fxcopy-bit$6723$5uPkq
     g$fxcopy-bit$6772$5uPkq
     (case-lambda
       ((g$fx1$6747$5uPkq g$fx2$6748$5uPkq g$fx3$6749$5uPkq)
        (g$fxif$6722$5uPkq
          (g$fxarithmetic-shift-left$6726$5uPkq '1 g$fx2$6748$5uPkq)
          (g$fxarithmetic-shift-left$6726$5uPkq
            g$fx3$6749$5uPkq
            g$fx2$6748$5uPkq)
          g$fx1$6747$5uPkq))))
   (g$fxbit-field$6724$5uPkq
     g$fxbit-field$6773$5uPkq
     (case-lambda
       ((g$fx1$6750$5uPkq g$fx2$6751$5uPkq g$fx3$6752$5uPkq)
        (g$fxarithmetic-shift-right$6727$5uPkq
          (fxand
            g$fx1$6750$5uPkq
            (fxnot (g$fxarithmetic-shift-left$6726$5uPkq '-1 g$fx3$6752$5uPkq)))
          g$fx2$6751$5uPkq))))
   (g$fxcopy-bit-field$6725$5uPkq
     g$fxcopy-bit-field$6774$5uPkq
     (case-lambda
       ((g$to$6753$5uPkq g$start$6754$5uPkq g$end$6755$5uPkq g$from$6756$5uPkq)
        (g$fxif$6722$5uPkq
          (fxand
            (g$fxarithmetic-shift-left$6726$5uPkq '-1 g$start$6754$5uPkq)
            (fxnot (g$fxarithmetic-shift-left$6726$5uPkq '-1 g$end$6755$5uPkq)))
          (g$fxarithmetic-shift-left$6726$5uPkq
            g$from$6756$5uPkq
            g$start$6754$5uPkq)
          g$to$6753$5uPkq))))
   (g$fxarithmetic-shift-left$6726$5uPkq
     g$fxarithmetic-shift-left$6775$5uPkq
     (case-lambda
       ((g$fx1$6757$5uPkq g$fx2$6758$5uPkq)
        (fxarithmetic-shift g$fx1$6757$5uPkq g$fx2$6758$5uPkq))))
   (g$fxarithmetic-shift-right$6727$5uPkq
     g$fxarithmetic-shift-right$6776$5uPkq
     (case-lambda
       ((g$fx1$6759$5uPkq g$fx2$6760$5uPkq)
        (fxarithmetic-shift g$fx1$6759$5uPkq (fx- g$fx2$6760$5uPkq)))))
   (g$fxrotate-bit-field$6728$5uPkq
     g$fxrotate-bit-field$6777$5uPkq
     (case-lambda
       ((g$n$6761$5uPkq g$start$6762$5uPkq g$end$6763$5uPkq g$count$6764$5uPkq)
        ((case-lambda
           ((g$width$6765$5uPkq)
            (if (fxpositive? g$width$6765$5uPkq)
              ((case-lambda
                 ((g$count$6766$5uPkq g$field$6767$5uPkq)
                  (g$fxcopy-bit-field$6725$5uPkq
                    g$n$6761$5uPkq
                    g$start$6762$5uPkq
                    g$end$6763$5uPkq
                    (fxior
                      (g$fxarithmetic-shift-left$6726$5uPkq
                        g$field$6767$5uPkq
                        g$count$6766$5uPkq)
                      (g$fxarithmetic-shift-right$6727$5uPkq
                        g$field$6767$5uPkq
                        (fx- g$width$6765$5uPkq g$count$6766$5uPkq))))))
               (fxmod g$count$6764$5uPkq g$width$6765$5uPkq)
               (g$fxbit-field$6724$5uPkq
                 g$n$6761$5uPkq
                 g$start$6762$5uPkq
                 g$end$6763$5uPkq))
              g$n$6761$5uPkq)))
         (fx- g$end$6763$5uPkq g$start$6762$5uPkq))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7825$6778$5uPkq
     g$7825$6790$5uPkq
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7828$5uPkq
       '#f
       '#f
       '#()))
   (g$7827$6779$5uPkq g$7827$6791$5uPkq '#f)
   (g$7826$6780$5uPkq
     g$7826$6792$5uPkq
     (make-record-constructor-descriptor
       g$7825$6778$5uPkq
       &implementation-restriction-rcd
       g$7827$6779$5uPkq))
   (g$7824$6781$5uPkq
     g$7824$6793$5uPkq
     (record-predicate g$7825$6778$5uPkq))
   (g$make-no-infinities-violation$6782$5uPkq
     g$make-no-infinities-violation$6794$5uPkq
     (record-constructor g$7826$6780$5uPkq))
   (g$no-infinities-violation?$6783$5uPkq
     g$no-infinities-violation?$6795$5uPkq
     (condition-predicate g$7825$6778$5uPkq))
   (g$7839$6784$5uPkq
     g$7839$6796$5uPkq
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7842$5uPkq
       '#f
       '#f
       '#()))
   (g$7841$6785$5uPkq g$7841$6797$5uPkq '#f)
   (g$7840$6786$5uPkq
     g$7840$6798$5uPkq
     (make-record-constructor-descriptor
       g$7839$6784$5uPkq
       &implementation-restriction-rcd
       g$7841$6785$5uPkq))
   (g$7838$6787$5uPkq
     g$7838$6799$5uPkq
     (record-predicate g$7839$6784$5uPkq))
   (g$make-no-nans-violation$6788$5uPkq
     g$make-no-nans-violation$6800$5uPkq
     (record-constructor g$7840$6786$5uPkq))
   (g$no-nans-violation?$6789$5uPkq
     g$no-nans-violation?$6801$5uPkq
     (condition-predicate g$7839$6784$5uPkq)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7854$6802$5uPkq
     g$7854$6882$5uPkq
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7857$5uPkq
       '#f
       '#f
       '#()))
   (g$7856$6803$5uPkq g$7856$6883$5uPkq '#f)
   (g$7855$6804$5uPkq
     g$7855$6884$5uPkq
     (make-record-constructor-descriptor
       g$7854$6802$5uPkq
       &error-rcd
       g$7856$6803$5uPkq))
   (g$7853$6805$5uPkq
     g$7853$6885$5uPkq
     (record-predicate g$7854$6802$5uPkq))
   (g$make-i/o-error$6806$5uPkq
     g$make-i/o-error$6886$5uPkq
     (record-constructor g$7855$6804$5uPkq))
   (g$i/o-error?$6807$5uPkq
     g$i/o-error?$6887$5uPkq
     (condition-predicate g$7854$6802$5uPkq))
   (g$7868$6808$5uPkq
     g$7868$6888$5uPkq
     (make-record-type-descriptor
       '&i/o-read
       g$7854$6802$5uPkq
       'g$7871$5uPkq
       '#f
       '#f
       '#()))
   (g$7870$6809$5uPkq g$7870$6889$5uPkq '#f)
   (g$7869$6810$5uPkq
     g$7869$6890$5uPkq
     (make-record-constructor-descriptor
       g$7868$6808$5uPkq
       g$7855$6804$5uPkq
       g$7870$6809$5uPkq))
   (g$7867$6811$5uPkq
     g$7867$6891$5uPkq
     (record-predicate g$7868$6808$5uPkq))
   (g$make-i/o-read-error$6812$5uPkq
     g$make-i/o-read-error$6892$5uPkq
     (record-constructor g$7869$6810$5uPkq))
   (g$i/o-read-error?$6813$5uPkq
     g$i/o-read-error?$6893$5uPkq
     (condition-predicate g$7868$6808$5uPkq))
   (g$7882$6814$5uPkq
     g$7882$6894$5uPkq
     (make-record-type-descriptor
       '&i/o-write
       g$7854$6802$5uPkq
       'g$7885$5uPkq
       '#f
       '#f
       '#()))
   (g$7884$6815$5uPkq g$7884$6895$5uPkq '#f)
   (g$7883$6816$5uPkq
     g$7883$6896$5uPkq
     (make-record-constructor-descriptor
       g$7882$6814$5uPkq
       g$7855$6804$5uPkq
       g$7884$6815$5uPkq))
   (g$7881$6817$5uPkq
     g$7881$6897$5uPkq
     (record-predicate g$7882$6814$5uPkq))
   (g$make-i/o-write-error$6818$5uPkq
     g$make-i/o-write-error$6898$5uPkq
     (record-constructor g$7883$6816$5uPkq))
   (g$i/o-write-error?$6819$5uPkq
     g$i/o-write-error?$6899$5uPkq
     (condition-predicate g$7882$6814$5uPkq))
   (g$7897$6820$5uPkq
     g$7897$6900$5uPkq
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7854$6802$5uPkq
       'g$7900$5uPkq
       '#f
       '#f
       '#((immutable position))))
   (g$7899$6821$5uPkq g$7899$6901$5uPkq '#f)
   (g$7898$6822$5uPkq
     g$7898$6902$5uPkq
     (make-record-constructor-descriptor
       g$7897$6820$5uPkq
       g$7855$6804$5uPkq
       g$7899$6821$5uPkq))
   (g$7896$6823$5uPkq
     g$7896$6903$5uPkq
     (record-predicate g$7897$6820$5uPkq))
   (g$make-i/o-invalid-position-error$6824$5uPkq
     g$make-i/o-invalid-position-error$6904$5uPkq
     (record-constructor g$7898$6822$5uPkq))
   (g$7895$6825$5uPkq
     g$7895$6905$5uPkq
     (record-accessor g$7897$6820$5uPkq '0))
   (g$i/o-invalid-position-error?$6826$5uPkq
     g$i/o-invalid-position-error?$6906$5uPkq
     (condition-predicate g$7897$6820$5uPkq))
   (g$i/o-error-position$6827$5uPkq
     g$i/o-error-position$6907$5uPkq
     (condition-accessor g$7897$6820$5uPkq g$7895$6825$5uPkq))
   (g$7914$6828$5uPkq
     g$7914$6908$5uPkq
     (make-record-type-descriptor
       '&i/o-filename
       g$7854$6802$5uPkq
       'g$7917$5uPkq
       '#f
       '#f
       '#((immutable filename))))
   (g$7916$6829$5uPkq g$7916$6909$5uPkq '#f)
   (g$7915$6830$5uPkq
     g$7915$6910$5uPkq
     (make-record-constructor-descriptor
       g$7914$6828$5uPkq
       g$7855$6804$5uPkq
       g$7916$6829$5uPkq))
   (g$7913$6831$5uPkq
     g$7913$6911$5uPkq
     (record-predicate g$7914$6828$5uPkq))
   (g$make-i/o-filename-error$6832$5uPkq
     g$make-i/o-filename-error$6912$5uPkq
     (record-constructor g$7915$6830$5uPkq))
   (g$7912$6833$5uPkq
     g$7912$6913$5uPkq
     (record-accessor g$7914$6828$5uPkq '0))
   (g$i/o-filename-error?$6834$5uPkq
     g$i/o-filename-error?$6914$5uPkq
     (condition-predicate g$7914$6828$5uPkq))
   (g$i/o-error-filename$6835$5uPkq
     g$i/o-error-filename$6915$5uPkq
     (condition-accessor g$7914$6828$5uPkq g$7912$6833$5uPkq))
   (g$7930$6836$5uPkq
     g$7930$6916$5uPkq
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7914$6828$5uPkq
       'g$7933$5uPkq
       '#f
       '#f
       '#()))
   (g$7932$6837$5uPkq g$7932$6917$5uPkq '#f)
   (g$7931$6838$5uPkq
     g$7931$6918$5uPkq
     (make-record-constructor-descriptor
       g$7930$6836$5uPkq
       g$7915$6830$5uPkq
       g$7932$6837$5uPkq))
   (g$7929$6839$5uPkq
     g$7929$6919$5uPkq
     (record-predicate g$7930$6836$5uPkq))
   (g$make-i/o-file-protection-error$6840$5uPkq
     g$make-i/o-file-protection-error$6920$5uPkq
     (record-constructor g$7931$6838$5uPkq))
   (g$i/o-file-protection-error?$6841$5uPkq
     g$i/o-file-protection-error?$6921$5uPkq
     (condition-predicate g$7930$6836$5uPkq))
   (g$7944$6842$5uPkq
     g$7944$6922$5uPkq
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7930$6836$5uPkq
       'g$7947$5uPkq
       '#f
       '#f
       '#()))
   (g$7946$6843$5uPkq g$7946$6923$5uPkq '#f)
   (g$7945$6844$5uPkq
     g$7945$6924$5uPkq
     (make-record-constructor-descriptor
       g$7944$6842$5uPkq
       g$7931$6838$5uPkq
       g$7946$6843$5uPkq))
   (g$7943$6845$5uPkq
     g$7943$6925$5uPkq
     (record-predicate g$7944$6842$5uPkq))
   (g$make-i/o-file-is-read-only-error$6846$5uPkq
     g$make-i/o-file-is-read-only-error$6926$5uPkq
     (record-constructor g$7945$6844$5uPkq))
   (g$i/o-file-is-read-only-error?$6847$5uPkq
     g$i/o-file-is-read-only-error?$6927$5uPkq
     (condition-predicate g$7944$6842$5uPkq))
   (g$7958$6848$5uPkq
     g$7958$6928$5uPkq
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7914$6828$5uPkq
       'g$7961$5uPkq
       '#f
       '#f
       '#()))
   (g$7960$6849$5uPkq g$7960$6929$5uPkq '#f)
   (g$7959$6850$5uPkq
     g$7959$6930$5uPkq
     (make-record-constructor-descriptor
       g$7958$6848$5uPkq
       g$7915$6830$5uPkq
       g$7960$6849$5uPkq))
   (g$7957$6851$5uPkq
     g$7957$6931$5uPkq
     (record-predicate g$7958$6848$5uPkq))
   (g$make-i/o-file-already-exists-error$6852$5uPkq
     g$make-i/o-file-already-exists-error$6932$5uPkq
     (record-constructor g$7959$6850$5uPkq))
   (g$i/o-file-already-exists-error?$6853$5uPkq
     g$i/o-file-already-exists-error?$6933$5uPkq
     (condition-predicate g$7958$6848$5uPkq))
   (g$7972$6854$5uPkq
     g$7972$6934$5uPkq
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7914$6828$5uPkq
       'g$7975$5uPkq
       '#f
       '#f
       '#()))
   (g$7974$6855$5uPkq g$7974$6935$5uPkq '#f)
   (g$7973$6856$5uPkq
     g$7973$6936$5uPkq
     (make-record-constructor-descriptor
       g$7972$6854$5uPkq
       g$7915$6830$5uPkq
       g$7974$6855$5uPkq))
   (g$7971$6857$5uPkq
     g$7971$6937$5uPkq
     (record-predicate g$7972$6854$5uPkq))
   (g$make-i/o-file-does-not-exist-error$6858$5uPkq
     g$make-i/o-file-does-not-exist-error$6938$5uPkq
     (record-constructor g$7973$6856$5uPkq))
   (g$i/o-file-does-not-exist-error?$6859$5uPkq
     g$i/o-file-does-not-exist-error?$6939$5uPkq
     (condition-predicate g$7972$6854$5uPkq))
   (g$7987$6860$5uPkq
     g$7987$6940$5uPkq
     (make-record-type-descriptor
       '&i/o-port
       g$7854$6802$5uPkq
       'g$7990$5uPkq
       '#f
       '#f
       '#((immutable port))))
   (g$7989$6861$5uPkq g$7989$6941$5uPkq '#f)
   (g$7988$6862$5uPkq
     g$7988$6942$5uPkq
     (make-record-constructor-descriptor
       g$7987$6860$5uPkq
       g$7855$6804$5uPkq
       g$7989$6861$5uPkq))
   (g$7986$6863$5uPkq
     g$7986$6943$5uPkq
     (record-predicate g$7987$6860$5uPkq))
   (g$make-i/o-port-error$6864$5uPkq
     g$make-i/o-port-error$6944$5uPkq
     (record-constructor g$7988$6862$5uPkq))
   (g$7985$6865$5uPkq
     g$7985$6945$5uPkq
     (record-accessor g$7987$6860$5uPkq '0))
   (g$i/o-port-error?$6866$5uPkq
     g$i/o-port-error?$6946$5uPkq
     (condition-predicate g$7987$6860$5uPkq))
   (g$i/o-error-port$6867$5uPkq
     g$i/o-error-port$6947$5uPkq
     (condition-accessor g$7987$6860$5uPkq g$7985$6865$5uPkq))
   (g$8003$6868$5uPkq
     g$8003$6948$5uPkq
     (make-record-type-descriptor
       '&i/o-decoding
       g$7987$6860$5uPkq
       'g$8006$5uPkq
       '#f
       '#f
       '#()))
   (g$8005$6869$5uPkq g$8005$6949$5uPkq '#f)
   (g$8004$6870$5uPkq
     g$8004$6950$5uPkq
     (make-record-constructor-descriptor
       g$8003$6868$5uPkq
       g$7988$6862$5uPkq
       g$8005$6869$5uPkq))
   (g$8002$6871$5uPkq
     g$8002$6951$5uPkq
     (record-predicate g$8003$6868$5uPkq))
   (g$make-i/o-decoding-error$6872$5uPkq
     g$make-i/o-decoding-error$6952$5uPkq
     (record-constructor g$8004$6870$5uPkq))
   (g$i/o-decoding-error?$6873$5uPkq
     g$i/o-decoding-error?$6953$5uPkq
     (condition-predicate g$8003$6868$5uPkq))
   (g$8018$6874$5uPkq
     g$8018$6954$5uPkq
     (make-record-type-descriptor
       '&i/o-encoding
       g$7987$6860$5uPkq
       'g$8021$5uPkq
       '#f
       '#f
       '#((immutable char))))
   (g$8020$6875$5uPkq g$8020$6955$5uPkq '#f)
   (g$8019$6876$5uPkq
     g$8019$6956$5uPkq
     (make-record-constructor-descriptor
       g$8018$6874$5uPkq
       g$7988$6862$5uPkq
       g$8020$6875$5uPkq))
   (g$8017$6877$5uPkq
     g$8017$6957$5uPkq
     (record-predicate g$8018$6874$5uPkq))
   (g$make-i/o-encoding-error$6878$5uPkq
     g$make-i/o-encoding-error$6958$5uPkq
     (record-constructor g$8019$6876$5uPkq))
   (g$8016$6879$5uPkq
     g$8016$6959$5uPkq
     (record-accessor g$8018$6874$5uPkq '0))
   (g$i/o-encoding-error?$6880$5uPkq
     g$i/o-encoding-error?$6960$5uPkq
     (condition-predicate g$8018$6874$5uPkq))
   (g$i/o-encoding-error-char$6881$5uPkq
     g$i/o-encoding-error-char$6961$5uPkq
     (condition-accessor g$8018$6874$5uPkq g$8016$6879$5uPkq)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$6963$5uPkq
     g$using$6975$5uPkq
     (clr-using-internal 'ironscheme.runtime))
   (g$get-output-string$6964$5uPkq
     g$get-output-string$6976$5uPkq
     (case-lambda
       ((g$port$6969$5uPkq)
        (clr-call-internal 'stringwriter 'getbuffer g$port$6969$5uPkq))))
   (g$open-output-string$6965$5uPkq
     g$open-output-string$6977$5uPkq
     (case-lambda (() (clr-new-internal 'stringwriter))))
   (g$open-string-output-port$6966$5uPkq
     g$open-string-output-port$6978$5uPkq
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6970$5uPkq)
            (values
              g$p$6970$5uPkq
              (case-lambda
                (() (g$get-output-string$6964$5uPkq g$p$6970$5uPkq))))))
         (g$open-output-string$6965$5uPkq)))))
   (g$port?$6967$5uPkq
     g$port?$6979$5uPkq
     (case-lambda
       ((g$obj$6971$5uPkq)
        ((case-lambda
           ((g$t$6972$5uPkq)
            (if g$t$6972$5uPkq
              g$t$6972$5uPkq
              (begin '#f (binary-port? g$obj$6971$5uPkq)))))
         (textual-port? g$obj$6971$5uPkq)))))
   (g$call-with-string-output-port$6968$5uPkq
     g$call-with-string-output-port$6980$5uPkq
     (case-lambda
       ((g$proc$6973$5uPkq)
        ((case-lambda
           ((g$p$6974$5uPkq)
            (begin
              (call-with-port g$p$6974$5uPkq g$proc$6973$5uPkq)
              (g$get-output-string$6964$5uPkq g$p$6974$5uPkq))))
         (g$open-output-string$6965$5uPkq))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6987$5uPkq
     g$with-input-from-file$7013$5uPkq
     (case-lambda
       ((g$filename$6991$5uPkq g$thunk$6992$5uPkq)
        ((case-lambda
           ((g$current-input-port$6995$5uPkq g$t$6996$5uPkq)
            ((case-lambda
               ((g$swap$6997$5uPkq)
                (dynamic-wind
                  g$swap$6997$5uPkq
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6992$5uPkq)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6997$5uPkq)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6998$5uPkq)
                    (begin
                      (g$current-input-port$6995$5uPkq g$t$6996$5uPkq)
                      (set! g$t$6996$5uPkq g$t$6998$5uPkq))))
                 (g$current-input-port$6995$5uPkq)))))))
         current-input-port
         (open-input-file g$filename$6991$5uPkq)))))
   (g$with-output-to-file$6988$5uPkq
     g$with-output-to-file$7014$5uPkq
     (case-lambda
       ((g$filename$6999$5uPkq g$thunk$7000$5uPkq)
        ((case-lambda
           ((g$current-output-port$7003$5uPkq g$t$7004$5uPkq)
            ((case-lambda
               ((g$swap$7005$5uPkq)
                (dynamic-wind
                  g$swap$7005$5uPkq
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$7000$5uPkq)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$7005$5uPkq)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$7006$5uPkq)
                    (begin
                      (g$current-output-port$7003$5uPkq g$t$7004$5uPkq)
                      (set! g$t$7004$5uPkq g$t$7006$5uPkq))))
                 (g$current-output-port$7003$5uPkq)))))))
         current-output-port
         (open-output-file g$filename$6999$5uPkq)))))
   (g$call-with-input-file$6989$5uPkq
     g$call-with-input-file$7015$5uPkq
     (case-lambda
       ((g$filename$7007$5uPkq g$proc$7008$5uPkq)
        ((case-lambda
           ((g$p$7009$5uPkq)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$7008$5uPkq g$p$7009$5uPkq)))
              (case-lambda (() (close-input-port g$p$7009$5uPkq))))))
         (open-input-file g$filename$7007$5uPkq)))))
   (g$call-with-output-file$6990$5uPkq
     g$call-with-output-file$7016$5uPkq
     (case-lambda
       ((g$filename$7010$5uPkq g$proc$7011$5uPkq)
        ((case-lambda
           ((g$p$7012$5uPkq)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$7011$5uPkq g$p$7012$5uPkq)))
              (case-lambda (() (close-output-port g$p$7012$5uPkq))))))
         (open-output-file g$filename$7010$5uPkq))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8089$7017$5uPkq
     g$8089$7126$5uPkq
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8091$7018$5uPkq g$8091$7127$5uPkq '#f)
   (g$8090$7019$5uPkq
     g$8090$7128$5uPkq
     (make-record-constructor-descriptor
       g$8089$7017$5uPkq
       '#f
       g$8091$7018$5uPkq))
   (g$enum?$7020$5uPkq
     g$enum?$7129$5uPkq
     (record-predicate g$8089$7017$5uPkq))
   (g$make-enum$7021$5uPkq
     g$make-enum$7130$5uPkq
     (record-constructor g$8090$7019$5uPkq))
   (g$enum-value$7022$5uPkq
     g$enum-value$7131$5uPkq
     (record-accessor g$8089$7017$5uPkq '0))
   (g$enum-info$7023$5uPkq
     g$enum-info$7132$5uPkq
     (record-accessor g$8089$7017$5uPkq '1))
   (g$8102$7024$5uPkq
     g$8102$7133$5uPkq
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8104$7025$5uPkq g$8104$7134$5uPkq '#f)
   (g$8103$7026$5uPkq
     g$8103$7135$5uPkq
     (make-record-constructor-descriptor
       g$8102$7024$5uPkq
       '#f
       g$8104$7025$5uPkq))
   (g$enum-universe?$7027$5uPkq
     g$enum-universe?$7136$5uPkq
     (record-predicate g$8102$7024$5uPkq))
   (g$make-enum-universe$7028$5uPkq
     g$make-enum-universe$7137$5uPkq
     (record-constructor g$8103$7026$5uPkq))
   (g$enum-universe-id$7029$5uPkq
     g$enum-universe-id$7138$5uPkq
     (record-accessor g$8102$7024$5uPkq '0))
   (g$enum-universe-symbols$7030$5uPkq
     g$enum-universe-symbols$7139$5uPkq
     (record-accessor g$8102$7024$5uPkq '1))
   (g$enum-universe-mapping$7031$5uPkq
     g$enum-universe-mapping$7140$5uPkq
     (record-accessor g$8102$7024$5uPkq '2))
   (g$enum-universe-value$7032$5uPkq
     g$enum-universe-value$7141$5uPkq
     (record-accessor g$8102$7024$5uPkq '3))
   (g$enum-type=?$7033$5uPkq
     g$enum-type=?$7142$5uPkq
     (case-lambda
       ((g$enumset1$7055$5uPkq g$enumset2$7056$5uPkq)
        (eq? (g$enum-universe-id$7029$5uPkq
               (g$enum-info$7023$5uPkq g$enumset1$7055$5uPkq))
             (g$enum-universe-id$7029$5uPkq
               (g$enum-info$7023$5uPkq g$enumset2$7056$5uPkq))))))
   (g$get-symbols$7034$5uPkq
     g$get-symbols$7143$5uPkq
     (case-lambda
       ((g$enumset$7057$5uPkq)
        (g$enum-universe-symbols$7030$5uPkq
          (g$enum-info$7023$5uPkq g$enumset$7057$5uPkq)))))
   (g$get-value$7035$5uPkq
     g$get-value$7144$5uPkq
     (case-lambda
       ((g$enumset$7058$5uPkq g$s$7059$5uPkq)
        (g$hashtable-ref$6191$5uPkq
          (g$enum-universe-mapping$7031$5uPkq
            (g$enum-info$7023$5uPkq g$enumset$7058$5uPkq))
          g$s$7059$5uPkq
          '#f))))
   (g$assert-enum$7036$5uPkq
     g$assert-enum$7145$5uPkq
     (case-lambda
       ((g$who$7060$5uPkq g$enumset$7061$5uPkq)
        (if (not (g$enum?$7020$5uPkq g$enumset$7061$5uPkq))
          (assertion-violation
            g$who$7060$5uPkq
            '"not an enumeration"
            g$enumset$7061$5uPkq)
          (void)))))
   (g$make-info$7037$5uPkq
     g$make-info$7146$5uPkq
     (case-lambda
       ((g$symbols$7062$5uPkq)
        ((case-lambda
           ((g$ht$7063$5uPkq)
            ((letrec ((g$f$7064$5uPkq
                        (case-lambda
                          ((g$s$7065$5uPkq g$a$7066$5uPkq g$mask$7067$5uPkq)
                           (if (null? g$s$7065$5uPkq)
                             (values
                               (reverse! g$a$7066$5uPkq)
                               g$ht$7063$5uPkq
                               (- g$mask$7067$5uPkq '1))
                             ((case-lambda
                                ((g$n$7068$5uPkq)
                                 (if (symbol? g$n$7068$5uPkq)
                                   (if (g$hashtable-contains?$6194$5uPkq
                                         g$ht$7063$5uPkq
                                         g$n$7068$5uPkq)
                                     (g$f$7064$5uPkq
                                       (cdr g$s$7065$5uPkq)
                                       g$a$7066$5uPkq
                                       g$mask$7067$5uPkq)
                                     (begin
                                       (g$hashtable-set!$6192$5uPkq
                                         g$ht$7063$5uPkq
                                         g$n$7068$5uPkq
                                         g$mask$7067$5uPkq)
                                       (g$f$7064$5uPkq
                                         (cdr g$s$7065$5uPkq)
                                         (cons g$n$7068$5uPkq g$a$7066$5uPkq)
                                         (g$bitwise-arithmetic-shift-left$6716$5uPkq
                                           g$mask$7067$5uPkq
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$7068$5uPkq))))
                              (car g$s$7065$5uPkq)))))))
               g$f$7064$5uPkq)
             g$symbols$7062$5uPkq
             '()
             '1)))
         (g$make-eq-hashtable$6188$5uPkq)))))
   (g$make-name$7038$5uPkq
     g$make-name$7147$5uPkq
     (case-lambda
       ((g$symbols$7069$5uPkq)
        (string->symbol (g$format$7186$5uPkq '"~a" g$symbols$7069$5uPkq)))))
   (g$make-enumeration$7039$5uPkq
     g$make-enumeration$7148$5uPkq
     (case-lambda
       ((g$symbols$7070$5uPkq)
        (call-with-values
          (case-lambda (() (g$make-info$7037$5uPkq g$symbols$7070$5uPkq)))
          (case-lambda
            ((g$s$7074$5uPkq g$mapping$7075$5uPkq g$mask$7076$5uPkq)
             ((case-lambda
                ((g$mask$7077$5uPkq g$mapping$7078$5uPkq g$s$7079$5uPkq)
                 (g$make-enum$7021$5uPkq
                   g$mask$7077$5uPkq
                   (g$make-enum-universe$7028$5uPkq
                     (g$make-name$7038$5uPkq g$s$7079$5uPkq)
                     g$s$7079$5uPkq
                     g$mapping$7078$5uPkq
                     g$mask$7077$5uPkq))))
              g$mask$7076$5uPkq
              g$mapping$7075$5uPkq
              g$s$7074$5uPkq)))))))
   (g$enum-set-universe$7040$5uPkq
     g$enum-set-universe$7149$5uPkq
     (case-lambda
       ((g$enumset$7080$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set-universe g$enumset$7080$5uPkq)
          ((case-lambda
             ((g$ei$7081$5uPkq)
              (g$make-enum$7021$5uPkq
                (g$enum-universe-value$7032$5uPkq g$ei$7081$5uPkq)
                g$ei$7081$5uPkq)))
           (g$enum-info$7023$5uPkq g$enumset$7080$5uPkq))))))
   (g$enum-set-indexer$7041$5uPkq
     g$enum-set-indexer$7150$5uPkq
     (case-lambda
       ((g$enumset$7082$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set-indexer g$enumset$7082$5uPkq)
          (case-lambda
            ((g$symbol$7083$5uPkq)
             (begin
               (if (not (symbol? g$symbol$7083$5uPkq))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$7083$5uPkq)
                 (void))
               ((case-lambda
                  ((g$v$7084$5uPkq)
                   (if g$v$7084$5uPkq
                     (- (bitwise-length g$v$7084$5uPkq) '1)
                     '#f)))
                (g$get-value$7035$5uPkq
                  g$enumset$7082$5uPkq
                  g$symbol$7083$5uPkq)))))))))
   (g$enum-set-constructor$7042$5uPkq
     g$enum-set-constructor$7151$5uPkq
     (case-lambda
       ((g$enumset$7085$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set-constructor g$enumset$7085$5uPkq)
          (case-lambda
            ((g$symbols$7086$5uPkq)
             ((letrec ((g$f$7087$5uPkq
                         (case-lambda
                           ((g$v$7088$5uPkq g$s$7089$5uPkq)
                            (if (null? g$s$7089$5uPkq)
                              (g$make-enum$7021$5uPkq
                                g$v$7088$5uPkq
                                (g$enum-info$7023$5uPkq g$enumset$7085$5uPkq))
                              ((case-lambda
                                 ((g$n$7090$5uPkq)
                                  (if (symbol? g$n$7090$5uPkq)
                                    ((case-lambda
                                       ((g$v*$7091$5uPkq)
                                        (if g$v*$7091$5uPkq
                                          (g$f$7087$5uPkq
                                            (bitwise-ior
                                              g$v$7088$5uPkq
                                              g$v*$7091$5uPkq)
                                            (cdr g$s$7089$5uPkq))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$7090$5uPkq))))
                                     (g$get-value$7035$5uPkq
                                       g$enumset$7085$5uPkq
                                       g$n$7090$5uPkq))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$7090$5uPkq))))
                               (car g$s$7089$5uPkq)))))))
                g$f$7087$5uPkq)
              '0
              g$symbols$7086$5uPkq)))))))
   (g$enum-set->list$7043$5uPkq
     g$enum-set->list$7152$5uPkq
     (case-lambda
       ((g$enumset$7092$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set->list g$enumset$7092$5uPkq)
          ((case-lambda
             ((g$value$7093$5uPkq)
              ((letrec ((g$f$7094$5uPkq
                          (case-lambda
                            ((g$s$7095$5uPkq g$l$7096$5uPkq)
                             (if (null? g$s$7095$5uPkq)
                               (reverse! g$l$7096$5uPkq)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$7035$5uPkq
                                         g$enumset$7092$5uPkq
                                         (car g$s$7095$5uPkq))
                                       g$value$7093$5uPkq))
                                 (g$f$7094$5uPkq
                                   (cdr g$s$7095$5uPkq)
                                   g$l$7096$5uPkq)
                                 (g$f$7094$5uPkq
                                   (cdr g$s$7095$5uPkq)
                                   (cons
                                     (car g$s$7095$5uPkq)
                                     g$l$7096$5uPkq))))))))
                 g$f$7094$5uPkq)
               (g$get-symbols$7034$5uPkq g$enumset$7092$5uPkq)
               '())))
           (g$enum-value$7022$5uPkq g$enumset$7092$5uPkq))))))
   (g$enum-set-member?$7044$5uPkq
     g$enum-set-member?$7153$5uPkq
     (case-lambda
       ((g$symbol$7097$5uPkq g$enumset$7098$5uPkq)
        (begin
          (if (not (symbol? g$symbol$7097$5uPkq))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$7097$5uPkq)
            (void))
          (g$assert-enum$7036$5uPkq 'enum-set-member? g$enumset$7098$5uPkq)
          ((case-lambda
             ((g$v$7099$5uPkq)
              (if g$v$7099$5uPkq
                (not (zero?
                       (bitwise-and
                         g$v$7099$5uPkq
                         (g$enum-value$7022$5uPkq g$enumset$7098$5uPkq))))
                '#f)))
           (g$get-value$7035$5uPkq
             g$enumset$7098$5uPkq
             g$symbol$7097$5uPkq))))))
   (g$enum-set-subset?$7045$5uPkq
     g$enum-set-subset?$7154$5uPkq
     (case-lambda
       ((g$enumset1$7100$5uPkq g$enumset2$7101$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set-subset? g$enumset1$7100$5uPkq)
          (g$assert-enum$7036$5uPkq 'enum-set-subset? g$enumset2$7101$5uPkq)
          ((case-lambda
             ((g$v1$7102$5uPkq g$v2$7103$5uPkq)
              (if (g$enum-type=?$7033$5uPkq
                    g$enumset1$7100$5uPkq
                    g$enumset2$7101$5uPkq)
                (= (bitwise-and g$v1$7102$5uPkq g$v2$7103$5uPkq)
                   g$v1$7102$5uPkq)
                ((letrec ((g$f$7104$5uPkq
                            (case-lambda
                              ((g$s$7105$5uPkq)
                               (if (null? g$s$7105$5uPkq)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$7106$5uPkq g$v2*$7107$5uPkq)
                                     (if g$v2*$7107$5uPkq
                                       ((case-lambda
                                          ((g$has1$7108$5uPkq g$has2$7109$5uPkq)
                                           (if (if g$has1$7108$5uPkq
                                                 (begin
                                                   '#f
                                                   (not g$has2$7109$5uPkq))
                                                 '#f)
                                             '#f
                                             (g$f$7104$5uPkq
                                               (cdr g$s$7105$5uPkq)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$7102$5uPkq
                                                 g$v1*$7106$5uPkq)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$7103$5uPkq
                                                 g$v2*$7107$5uPkq))))
                                       '#f)))
                                  (g$get-value$7035$5uPkq
                                    g$enumset1$7100$5uPkq
                                    (car g$s$7105$5uPkq))
                                  (g$get-value$7035$5uPkq
                                    g$enumset2$7101$5uPkq
                                    (car g$s$7105$5uPkq))))))))
                   g$f$7104$5uPkq)
                 (g$get-symbols$7034$5uPkq g$enumset1$7100$5uPkq)))))
           (g$enum-value$7022$5uPkq g$enumset1$7100$5uPkq)
           (g$enum-value$7022$5uPkq g$enumset2$7101$5uPkq))))))
   (g$enum-set=?$7046$5uPkq
     g$enum-set=?$7155$5uPkq
     (case-lambda
       ((g$enumset1$7110$5uPkq g$enumset2$7111$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set=? g$enumset1$7110$5uPkq)
          (g$assert-enum$7036$5uPkq 'enum-set=? g$enumset2$7111$5uPkq)
          (if (g$enum-set-subset?$7045$5uPkq
                g$enumset1$7110$5uPkq
                g$enumset2$7111$5uPkq)
            (begin
              '#f
              (g$enum-set-subset?$7045$5uPkq
                g$enumset2$7111$5uPkq
                g$enumset1$7110$5uPkq))
            '#f)))))
   (g$enum-set-union$7047$5uPkq
     g$enum-set-union$7156$5uPkq
     (case-lambda
       ((g$enumset1$7112$5uPkq g$enumset2$7113$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set-union g$enumset1$7112$5uPkq)
          (g$assert-enum$7036$5uPkq 'enum-set-union g$enumset2$7113$5uPkq)
          (if (g$enum-type=?$7033$5uPkq
                g$enumset1$7112$5uPkq
                g$enumset2$7113$5uPkq)
            (g$make-enum$7021$5uPkq
              (bitwise-ior
                (g$enum-value$7022$5uPkq g$enumset1$7112$5uPkq)
                (g$enum-value$7022$5uPkq g$enumset2$7113$5uPkq))
              (g$enum-info$7023$5uPkq g$enumset1$7112$5uPkq))
            '#f)))))
   (g$enum-set-intersection$7048$5uPkq
     g$enum-set-intersection$7157$5uPkq
     (case-lambda
       ((g$enumset1$7114$5uPkq g$enumset2$7115$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq
            'enum-set-intersection
            g$enumset1$7114$5uPkq)
          (g$assert-enum$7036$5uPkq
            'enum-set-intersection
            g$enumset2$7115$5uPkq)
          (if (g$enum-type=?$7033$5uPkq
                g$enumset1$7114$5uPkq
                g$enumset2$7115$5uPkq)
            (g$make-enum$7021$5uPkq
              (bitwise-and
                (g$enum-value$7022$5uPkq g$enumset1$7114$5uPkq)
                (g$enum-value$7022$5uPkq g$enumset2$7115$5uPkq))
              (g$enum-info$7023$5uPkq g$enumset1$7114$5uPkq))
            '#f)))))
   (g$enum-set-difference$7049$5uPkq
     g$enum-set-difference$7158$5uPkq
     (case-lambda
       ((g$enumset1$7116$5uPkq g$enumset2$7117$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set-difference g$enumset1$7116$5uPkq)
          (g$assert-enum$7036$5uPkq 'enum-set-difference g$enumset2$7117$5uPkq)
          (if (g$enum-type=?$7033$5uPkq
                g$enumset1$7116$5uPkq
                g$enumset2$7117$5uPkq)
            (g$make-enum$7021$5uPkq
              (bitwise-and
                (g$enum-value$7022$5uPkq g$enumset1$7116$5uPkq)
                (bitwise-not (g$enum-value$7022$5uPkq g$enumset2$7117$5uPkq)))
              (g$enum-info$7023$5uPkq g$enumset1$7116$5uPkq))
            '#f)))))
   (g$enum-set-complement$7050$5uPkq
     g$enum-set-complement$7159$5uPkq
     (case-lambda
       ((g$enumset$7118$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set-complement g$enumset$7118$5uPkq)
          (g$make-enum$7021$5uPkq
            (bitwise-not (g$enum-value$7022$5uPkq g$enumset$7118$5uPkq))
            (g$enum-info$7023$5uPkq g$enumset$7118$5uPkq))))))
   (g$enum-set-projection$7051$5uPkq
     g$enum-set-projection$7160$5uPkq
     (case-lambda
       ((g$enumset1$7119$5uPkq g$enumset2$7120$5uPkq)
        (begin
          (g$assert-enum$7036$5uPkq 'enum-set-projection g$enumset1$7119$5uPkq)
          (g$assert-enum$7036$5uPkq 'enum-set-projection g$enumset2$7120$5uPkq)
          ((case-lambda
             ((g$v1$7121$5uPkq)
              ((letrec ((g$f$7122$5uPkq
                          (case-lambda
                            ((g$s$7123$5uPkq g$v$7124$5uPkq)
                             (if (null? g$s$7123$5uPkq)
                               (g$make-enum$7021$5uPkq
                                 g$v$7124$5uPkq
                                 (g$enum-info$7023$5uPkq g$enumset2$7120$5uPkq))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$7121$5uPkq
                                       (g$get-value$7035$5uPkq
                                         g$enumset1$7119$5uPkq
                                         (car g$s$7123$5uPkq))))
                                 (g$f$7122$5uPkq
                                   (cdr g$s$7123$5uPkq)
                                   g$v$7124$5uPkq)
                                 ((case-lambda
                                    ((g$v2$7125$5uPkq)
                                     (if g$v2$7125$5uPkq
                                       (g$f$7122$5uPkq
                                         (cdr g$s$7123$5uPkq)
                                         (bitwise-ior
                                           g$v$7124$5uPkq
                                           g$v2$7125$5uPkq))
                                       (g$f$7122$5uPkq
                                         (cdr g$s$7123$5uPkq)
                                         g$v$7124$5uPkq))))
                                  (g$get-value$7035$5uPkq
                                    g$enumset2$7120$5uPkq
                                    (car g$s$7123$5uPkq)))))))))
                 g$f$7122$5uPkq)
               (g$get-symbols$7034$5uPkq g$enumset1$7119$5uPkq)
               '0)))
           (g$enum-value$7022$5uPkq g$enumset1$7119$5uPkq)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$7052$5uPkq g$p$7053$5uPkq g$wr$7054$5uPkq)
       (g$fprintf$7185$5uPkq
         g$p$7053$5uPkq
         '"#[enum-set ~a]"
         (g$enum-set->list$7043$5uPkq g$x$7052$5uPkq))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$7161$5uPkq
     g$dofmt$7183$5uPkq
     (case-lambda
       ((g$p$7165$5uPkq g$cntl$7166$5uPkq g$args$7167$5uPkq)
        ((case-lambda
           ((g$nmax$7168$5uPkq)
            ((letrec ((g$loop$7169$5uPkq
                        (case-lambda
                          ((g$n$7170$5uPkq g$a$7171$5uPkq)
                           (if (fx<=? g$n$7170$5uPkq g$nmax$7168$5uPkq)
                             ((case-lambda
                                ((g$c$7172$5uPkq)
                                 (if (if (g$char=?$5957$5uPkq
                                           g$c$7172$5uPkq
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$7170$5uPkq
                                           g$nmax$7168$5uPkq))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$7173$5uPkq)
                                       (if (g$memv$5752$5uPkq
                                             g$t$7173$5uPkq
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$7171$5uPkq)
                                             g$p$7165$5uPkq)
                                           (g$loop$7169$5uPkq
                                             (fx+ g$n$7170$5uPkq '2)
                                             (cdr g$a$7171$5uPkq)))
                                         (if (g$memv$5752$5uPkq
                                               g$t$7173$5uPkq
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$7171$5uPkq)
                                               g$p$7165$5uPkq)
                                             (g$loop$7169$5uPkq
                                               (fx+ g$n$7170$5uPkq '2)
                                               (cdr g$a$7171$5uPkq)))
                                           (if (g$memv$5752$5uPkq
                                                 g$t$7173$5uPkq
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$7171$5uPkq)
                                                   '2)
                                                 g$p$7165$5uPkq)
                                               (g$loop$7169$5uPkq
                                                 (fx+ g$n$7170$5uPkq '2)
                                                 (cdr g$a$7171$5uPkq)))
                                             (if (g$memv$5752$5uPkq
                                                   g$t$7173$5uPkq
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$7171$5uPkq)
                                                     '8)
                                                   g$p$7165$5uPkq)
                                                 (g$loop$7169$5uPkq
                                                   (fx+ g$n$7170$5uPkq '2)
                                                   (cdr g$a$7171$5uPkq)))
                                               (if (g$memv$5752$5uPkq
                                                     g$t$7173$5uPkq
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$7171$5uPkq)
                                                       '16)
                                                     g$p$7165$5uPkq)
                                                   (g$loop$7169$5uPkq
                                                     (fx+ g$n$7170$5uPkq '2)
                                                     (cdr g$a$7171$5uPkq)))
                                                 (if (g$memv$5752$5uPkq
                                                       g$t$7173$5uPkq
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$7171$5uPkq)
                                                         '10)
                                                       g$p$7165$5uPkq)
                                                     (g$loop$7169$5uPkq
                                                       (fx+ g$n$7170$5uPkq '2)
                                                       (cdr g$a$7171$5uPkq)))
                                                   (if (g$memv$5752$5uPkq
                                                         g$t$7173$5uPkq
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$7165$5uPkq)
                                                       (g$loop$7169$5uPkq
                                                         (fx+ g$n$7170$5uPkq '2)
                                                         g$a$7171$5uPkq))
                                                     (begin
                                                       (write-char
                                                         g$c$7172$5uPkq
                                                         g$p$7165$5uPkq)
                                                       (g$loop$7169$5uPkq
                                                         (fx+ g$n$7170$5uPkq '1)
                                                         g$a$7171$5uPkq)))))))))))
                                    (string-ref
                                      g$cntl$7166$5uPkq
                                      (fx+ g$n$7170$5uPkq '1)))
                                   (begin
                                     (write-char g$c$7172$5uPkq g$p$7165$5uPkq)
                                     (g$loop$7169$5uPkq
                                       (fx+ g$n$7170$5uPkq '1)
                                       g$a$7171$5uPkq)))))
                              (string-ref g$cntl$7166$5uPkq g$n$7170$5uPkq))
                             (void))))))
               g$loop$7169$5uPkq)
             '0
             g$args$7167$5uPkq)))
         (fx- (string-length g$cntl$7166$5uPkq) '1)))))
   (g$printf$7162$5uPkq
     g$printf$7184$5uPkq
     (case-lambda
       ((g$control$7174$5uPkq . g$args$7175$5uPkq)
        (g$dofmt$7161$5uPkq
          (current-output-port)
          g$control$7174$5uPkq
          g$args$7175$5uPkq))))
   (g$fprintf$7163$5uPkq
     g$fprintf$7185$5uPkq
     (case-lambda
       ((g$p$7176$5uPkq g$control$7177$5uPkq . g$args$7178$5uPkq)
        (g$dofmt$7161$5uPkq
          g$p$7176$5uPkq
          g$control$7177$5uPkq
          g$args$7178$5uPkq))))
   (g$format$7164$5uPkq
     g$format$7186$5uPkq
     (case-lambda
       ((g$control$7179$5uPkq . g$args$7180$5uPkq)
        (call-with-values
          g$open-string-output-port$6978$5uPkq
          (case-lambda
            ((g$p$7181$5uPkq g$c$7182$5uPkq)
             (begin
               (g$dofmt$7161$5uPkq
                 g$p$7181$5uPkq
                 g$control$7179$5uPkq
                 g$args$7180$5uPkq)
               (g$c$7182$5uPkq)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$7187$5uPkq
     g$make-traced-macro$7190$5uPkq
     (case-lambda
       ((g$name$7188$5uPkq g$x$7189$5uPkq)
        (if (procedure? g$x$7189$5uPkq)
          (make-traced-procedure
            g$name$7188$5uPkq
            g$x$7189$5uPkq
            g$syntax->datum$11901$5uPkq)
          (if (g$variable-transformer?$11724$5uPkq g$x$7189$5uPkq)
            (g$make-variable-transformer$11723$5uPkq
              (make-traced-procedure
                g$name$7188$5uPkq
                (g$variable-transformer-procedure$11725$5uPkq g$x$7189$5uPkq)
                g$syntax->datum$11901$5uPkq))
            g$x$7189$5uPkq))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$7191$5uPkq
     g$library-version-mismatch-warning$7287$5uPkq
     (case-lambda
       ((g$name$7264$5uPkq g$depname$7265$5uPkq g$filename$7266$5uPkq)
        (g$fprintf$7185$5uPkq
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$7264$5uPkq
          g$depname$7265$5uPkq
          g$filename$7266$5uPkq))))
   (g$file-locator-resolution-error$7192$5uPkq
     g$file-locator-resolution-error$7288$5uPkq
     (case-lambda
       ((g$libname$7267$5uPkq g$failed-list$7268$5uPkq)
        (letrec* ((g$8334$7269$5uPkq
                    (make-record-type-descriptor
                      '&library-resolution
                      &condition-rtd
                      'g$8337$5uPkq
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8336$7270$5uPkq '#f)
                  (g$8335$7271$5uPkq
                    (make-record-constructor-descriptor
                      g$8334$7269$5uPkq
                      &condition-rcd
                      g$8336$7270$5uPkq))
                  (g$8333$7272$5uPkq (record-predicate g$8334$7269$5uPkq))
                  (g$make-library-resolution-condition$7273$5uPkq
                    (record-constructor g$8335$7271$5uPkq))
                  (g$8331$7274$5uPkq (record-accessor g$8334$7269$5uPkq '0))
                  (g$8332$7275$5uPkq (record-accessor g$8334$7269$5uPkq '1))
                  (g$library-resolution-condition?$7276$5uPkq
                    (condition-predicate g$8334$7269$5uPkq))
                  (g$condition-library$7277$5uPkq
                    (condition-accessor g$8334$7269$5uPkq g$8331$7274$5uPkq))
                  (g$condition-files$7278$5uPkq
                    (condition-accessor g$8334$7269$5uPkq g$8332$7275$5uPkq)))
          (raise
            (condition
              (g$make-error$6475$5uPkq)
              (g$make-who-condition$6501$5uPkq 'expander)
              (g$make-message-condition$6455$5uPkq
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$7273$5uPkq
                g$libname$7267$5uPkq
                g$failed-list$7268$5uPkq)))))))
   (g$read-library-source-file$7193$5uPkq
     g$read-library-source-file$7289$5uPkq
     (case-lambda
       ((g$file-name$7279$5uPkq)
        (g$with-input-from-file$7013$5uPkq
          g$file-name$7279$5uPkq
          read-annotated))))
   (g$make-parameter$7194$5uPkq
     g$make-parameter$7290$5uPkq
     (case-lambda
       ((g$x$7280$5uPkq)
        (g$make-parameter$7194$5uPkq
          g$x$7280$5uPkq
          (case-lambda ((g$x$7281$5uPkq) g$x$7281$5uPkq))))
       ((g$x$7282$5uPkq g$fender$7283$5uPkq)
        (begin
          (if (not (procedure? g$fender$7283$5uPkq))
            (g$assertion-error$11894$5uPkq
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(89,8) - (89,36)"))
            (void))
          ((case-lambda
             ((g$x$7284$5uPkq)
              (case-lambda
                (() g$x$7284$5uPkq)
                ((g$v$7285$5uPkq)
                 (set! g$x$7284$5uPkq (g$fender$7283$5uPkq g$v$7285$5uPkq))))))
           (g$fender$7283$5uPkq g$x$7282$5uPkq))))))
   (g$file-options-constructor$7262$5uPkq
     g$file-options-constructor$7291$5uPkq
     (g$make-parameter$7194$5uPkq '#f))
   (g$file-options-spec$7263$5uPkq
     g$file-options-spec$7292$5uPkq
     (case-lambda
       ((g$x$7286$5uPkq)
        ((g$file-options-constructor$7262$5uPkq) g$x$7286$5uPkq)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7488$5uPkq
     g$current-primitive-locations$7533$5uPkq
     (g$make-parameter$7290$5uPkq
       (case-lambda ((g$x$7494$5uPkq) '#f))
       (case-lambda
         ((g$p$7495$5uPkq)
          (begin
            (if (not (procedure? g$p$7495$5uPkq))
              (g$assertion-error$11894$5uPkq
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7495$5uPkq)))))
   (g$mutable?$7489$5uPkq
     g$mutable?$7534$5uPkq
     (case-lambda
       ((g$x$7496$5uPkq)
        (letrec* ((g$simple?$7497$5uPkq
                    (case-lambda
                      ((g$x$7498$5uPkq)
                       ((case-lambda
                          ((g$t$7499$5uPkq)
                           (if g$t$7499$5uPkq
                             g$t$7499$5uPkq
                             ((case-lambda
                                ((g$t$7500$5uPkq)
                                 (if g$t$7500$5uPkq
                                   g$t$7500$5uPkq
                                   ((case-lambda
                                      ((g$t$7501$5uPkq)
                                       (if g$t$7501$5uPkq
                                         g$t$7501$5uPkq
                                         ((case-lambda
                                            ((g$t$7502$5uPkq)
                                             (if g$t$7502$5uPkq
                                               g$t$7502$5uPkq
                                               ((case-lambda
                                                  ((g$t$7503$5uPkq)
                                                   (if g$t$7503$5uPkq
                                                     g$t$7503$5uPkq
                                                     ((case-lambda
                                                        ((g$t$7504$5uPkq)
                                                         (if g$t$7504$5uPkq
                                                           g$t$7504$5uPkq
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7498$5uPkq)))))
                                                      (bytevector?
                                                        g$x$7498$5uPkq)))))
                                                (string? g$x$7498$5uPkq)))))
                                          (boolean? g$x$7498$5uPkq)))))
                                    (symbol? g$x$7498$5uPkq)))))
                              (char? g$x$7498$5uPkq)))))
                        (null? g$x$7498$5uPkq))))))
          (not (g$simple?$7497$5uPkq g$x$7496$5uPkq))))))
   (g$rewriter$7490$5uPkq
     g$rewriter$7535$5uPkq
     (case-lambda
       ((g$quote-hack?$7505$5uPkq)
        (letrec* ((g$f$7506$5uPkq
                    (case-lambda
                      ((g$x$7507$5uPkq)
                       (if (pair? g$x$7507$5uPkq)
                         ((case-lambda
                            ((g$t$7508$5uPkq)
                             (if (g$memv$5752$5uPkq g$t$7508$5uPkq '(quote))
                               (if (if g$quote-hack?$7505$5uPkq
                                     (begin
                                       '#f
                                       (g$mutable?$7489$5uPkq
                                         (g$cadr$5923$5uPkq g$x$7507$5uPkq)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7509$5uPkq)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7509$5uPkq
                                         (g$cadr$5923$5uPkq g$x$7507$5uPkq))
                                       g$g$7509$5uPkq)))
                                  (gensym))
                                 g$x$7507$5uPkq)
                               (if (g$memv$5752$5uPkq
                                     g$t$7508$5uPkq
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (g$map$5759$5uPkq
                                     (case-lambda
                                       ((g$x$7510$5uPkq)
                                        (cons
                                          (car g$x$7510$5uPkq)
                                          (g$map$5759$5uPkq
                                            g$f$7506$5uPkq
                                            (cdr g$x$7510$5uPkq)))))
                                     (cdr g$x$7507$5uPkq)))
                                 (if (g$memv$5752$5uPkq
                                       g$t$7508$5uPkq
                                       '(lambda))
                                   (g$cons*$5761$5uPkq
                                     'lambda
                                     (g$cadr$5923$5uPkq g$x$7507$5uPkq)
                                     (g$map$5759$5uPkq
                                       g$f$7506$5uPkq
                                       (g$cddr$5925$5uPkq g$x$7507$5uPkq)))
                                   (if (g$memv$5752$5uPkq
                                         g$t$7508$5uPkq
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$7511$5uPkq
                                           g$body*$7512$5uPkq)
                                         ((case-lambda
                                            ((g$lhs*$7513$5uPkq
                                               g$rhs*$7514$5uPkq)
                                             (g$cons*$5761$5uPkq
                                               'letrec
                                               (g$map$5759$5uPkq
                                                 list
                                                 g$lhs*$7513$5uPkq
                                                 (g$map$5759$5uPkq
                                                   g$f$7506$5uPkq
                                                   g$rhs*$7514$5uPkq))
                                               (g$map$5759$5uPkq
                                                 g$f$7506$5uPkq
                                                 g$body*$7512$5uPkq))))
                                          (g$map$5759$5uPkq
                                            car
                                            g$bindings$7511$5uPkq)
                                          (g$map$5759$5uPkq
                                            g$cadr$5923$5uPkq
                                            g$bindings$7511$5uPkq))))
                                      (g$cadr$5923$5uPkq g$x$7507$5uPkq)
                                      (g$cddr$5925$5uPkq g$x$7507$5uPkq))
                                     (if (g$memv$5752$5uPkq
                                           g$t$7508$5uPkq
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$7515$5uPkq
                                             g$body*$7516$5uPkq)
                                           ((case-lambda
                                              ((g$lhs*$7517$5uPkq
                                                 g$rhs*$7518$5uPkq)
                                               (g$cons*$5761$5uPkq
                                                 'letrec*
                                                 (g$map$5759$5uPkq
                                                   list
                                                   g$lhs*$7517$5uPkq
                                                   (g$map$5759$5uPkq
                                                     g$f$7506$5uPkq
                                                     g$rhs*$7518$5uPkq))
                                                 (g$map$5759$5uPkq
                                                   g$f$7506$5uPkq
                                                   g$body*$7516$5uPkq))))
                                            (g$map$5759$5uPkq
                                              car
                                              g$bindings$7515$5uPkq)
                                            (g$map$5759$5uPkq
                                              g$cadr$5923$5uPkq
                                              g$bindings$7515$5uPkq))))
                                        (g$cadr$5923$5uPkq g$x$7507$5uPkq)
                                        (g$cddr$5925$5uPkq g$x$7507$5uPkq))
                                       (if (g$memv$5752$5uPkq
                                             g$t$7508$5uPkq
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$7519$5uPkq g$x$7520$5uPkq)
                                             ((case-lambda
                                                ((g$bindings$7521$5uPkq
                                                   g$body*$7522$5uPkq)
                                                 ((case-lambda
                                                    ((g$lhs*$7523$5uPkq
                                                       g$lhs**$7524$5uPkq
                                                       g$rhs*$7525$5uPkq)
                                                     (g$cons*$5761$5uPkq
                                                       'library-letrec*
                                                       g$name$7519$5uPkq
                                                       (g$map$5759$5uPkq
                                                         list
                                                         g$lhs*$7523$5uPkq
                                                         g$lhs**$7524$5uPkq
                                                         (g$map$5759$5uPkq
                                                           g$f$7506$5uPkq
                                                           g$rhs*$7525$5uPkq))
                                                       (g$map$5759$5uPkq
                                                         g$f$7506$5uPkq
                                                         g$body*$7522$5uPkq))))
                                                  (g$map$5759$5uPkq
                                                    car
                                                    g$bindings$7521$5uPkq)
                                                  (g$map$5759$5uPkq
                                                    g$cadr$5923$5uPkq
                                                    g$bindings$7521$5uPkq)
                                                  (g$map$5759$5uPkq
                                                    g$caddr$5929$5uPkq
                                                    g$bindings$7521$5uPkq))))
                                              (g$cadr$5923$5uPkq g$x$7520$5uPkq)
                                              (g$cddr$5925$5uPkq
                                                g$x$7520$5uPkq))))
                                          (g$cadr$5923$5uPkq g$x$7507$5uPkq)
                                          (cdr g$x$7507$5uPkq))
                                         (if (g$memv$5752$5uPkq
                                               g$t$7508$5uPkq
                                               '(begin))
                                           (cons
                                             'begin
                                             (g$map$5759$5uPkq
                                               g$f$7506$5uPkq
                                               (cdr g$x$7507$5uPkq)))
                                           (if (g$memv$5752$5uPkq
                                                 g$t$7508$5uPkq
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5923$5uPkq
                                                 g$x$7507$5uPkq)
                                               (g$f$7506$5uPkq
                                                 (g$caddr$5929$5uPkq
                                                   g$x$7507$5uPkq)))
                                             (if (g$memv$5752$5uPkq
                                                   g$t$7508$5uPkq
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$7526$5uPkq)
                                                   ((case-lambda
                                                      ((g$t$7527$5uPkq)
                                                       (if g$t$7527$5uPkq
                                                         ((case-lambda
                                                            ((g$loc$7528$5uPkq)
                                                             g$loc$7528$5uPkq))
                                                          g$t$7527$5uPkq)
                                                         g$op$7526$5uPkq)))
                                                    ((g$current-primitive-locations$7488$5uPkq)
                                                     g$op$7526$5uPkq))))
                                                (g$cadr$5923$5uPkq
                                                  g$x$7507$5uPkq))
                                               (if (g$memv$5752$5uPkq
                                                     g$t$7508$5uPkq
                                                     '(define))
                                                 g$x$7507$5uPkq
                                                 (if (list? g$x$7507$5uPkq)
                                                   (g$map$5759$5uPkq
                                                     g$f$7506$5uPkq
                                                     g$x$7507$5uPkq)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7507$5uPkq
                                                     (list?
                                                       g$x$7507$5uPkq)))))))))))))))
                          (car g$x$7507$5uPkq))
                         g$x$7507$5uPkq)))))
          g$f$7506$5uPkq))))
   (g$expanded->core$7491$5uPkq
     g$expanded->core$7536$5uPkq
     (case-lambda
       ((g$x$7529$5uPkq) ((g$rewriter$7490$5uPkq '#t) g$x$7529$5uPkq))))
   (g$compile-core-expr$7492$5uPkq
     g$compile-core-expr$7537$5uPkq
     (case-lambda
       ((g$x$7530$5uPkq) ((g$rewriter$7490$5uPkq '#f) g$x$7530$5uPkq))))
   (g$compile-core-expr-to-port$7493$5uPkq
     g$compile-core-expr-to-port$7538$5uPkq
     (case-lambda
       ((g$x$7531$5uPkq g$p$7532$5uPkq)
        (g$pretty-print$7487$5uPkq
          ((g$rewriter$7490$5uPkq '#f) g$x$7531$5uPkq)
          g$p$7532$5uPkq)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7577$5uPkq
     g$make-collection$7772$5uPkq
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7638$5uPkq)
            (letrec* ((g$set-cons$7639$5uPkq
                        (case-lambda
                          ((g$x$7641$5uPkq g$ls$7642$5uPkq)
                           (if (g$memq$5751$5uPkq
                                 g$x$7641$5uPkq
                                 g$ls$7642$5uPkq)
                             g$ls$7642$5uPkq
                             (cons g$x$7641$5uPkq g$ls$7642$5uPkq))))))
              (case-lambda
                (() g$set$7638$5uPkq)
                ((g$x$7640$5uPkq)
                 (set! g$set$7638$5uPkq
                   (g$set-cons$7639$5uPkq g$x$7640$5uPkq g$set$7638$5uPkq)))))))
         '()))))
   (g$current-library-collection$7578$5uPkq
     g$current-library-collection$7773$5uPkq
     (g$make-parameter$7290$5uPkq
       (g$make-collection$7577$5uPkq)
       (case-lambda
         ((g$x$7643$5uPkq)
          (begin
            (if (not (procedure? g$x$7643$5uPkq))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7643$5uPkq)
              (void))
            g$x$7643$5uPkq)))))
   (g$8650$7579$5uPkq
     g$8650$7774$5uPkq
     (make-record-type-descriptor
       'library
       '#f
       'g$8653$5uPkq
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8652$7580$5uPkq g$8652$7775$5uPkq '#f)
   (g$8651$7581$5uPkq
     g$8651$7776$5uPkq
     (make-record-constructor-descriptor
       g$8650$7579$5uPkq
       '#f
       g$8652$7580$5uPkq))
   (g$library?$7582$5uPkq
     g$library?$7777$5uPkq
     (record-predicate g$8650$7579$5uPkq))
   (g$make-library$7583$5uPkq
     g$make-library$7778$5uPkq
     (record-constructor g$8651$7581$5uPkq))
   (g$library-id$7584$5uPkq
     g$library-id$7779$5uPkq
     (record-accessor g$8650$7579$5uPkq '0))
   (g$library-name$7585$5uPkq
     g$library-name$7780$5uPkq
     (record-accessor g$8650$7579$5uPkq '1))
   (g$library-version$7586$5uPkq
     g$library-version$7781$5uPkq
     (record-accessor g$8650$7579$5uPkq '2))
   (g$library-imp*$7587$5uPkq
     g$library-imp*$7782$5uPkq
     (record-accessor g$8650$7579$5uPkq '3))
   (g$library-vis*$7588$5uPkq
     g$library-vis*$7783$5uPkq
     (record-accessor g$8650$7579$5uPkq '4))
   (g$library-inv*$7589$5uPkq
     g$library-inv*$7784$5uPkq
     (record-accessor g$8650$7579$5uPkq '5))
   (g$library-subst$7590$5uPkq
     g$library-subst$7785$5uPkq
     (record-accessor g$8650$7579$5uPkq '6))
   (g$library-env$7591$5uPkq
     g$library-env$7786$5uPkq
     (record-accessor g$8650$7579$5uPkq '7))
   (g$library-visit-state$7592$5uPkq
     g$library-visit-state$7787$5uPkq
     (record-accessor g$8650$7579$5uPkq '8))
   (g$library-invoke-state$7593$5uPkq
     g$library-invoke-state$7788$5uPkq
     (record-accessor g$8650$7579$5uPkq '9))
   (g$library-visit-code$7594$5uPkq
     g$library-visit-code$7789$5uPkq
     (record-accessor g$8650$7579$5uPkq '10))
   (g$library-invoke-code$7595$5uPkq
     g$library-invoke-code$7790$5uPkq
     (record-accessor g$8650$7579$5uPkq '11))
   (g$library-visible?$7596$5uPkq
     g$library-visible?$7791$5uPkq
     (record-accessor g$8650$7579$5uPkq '12))
   (g$library-source-file-name$7597$5uPkq
     g$library-source-file-name$7792$5uPkq
     (record-accessor g$8650$7579$5uPkq '13))
   (g$set-library-id!$7598$5uPkq
     g$set-library-id!$7793$5uPkq
     (record-mutator g$8650$7579$5uPkq '0))
   (g$set-library-name!$7599$5uPkq
     g$set-library-name!$7794$5uPkq
     (record-mutator g$8650$7579$5uPkq '1))
   (g$set-library-version!$7600$5uPkq
     g$set-library-version!$7795$5uPkq
     (record-mutator g$8650$7579$5uPkq '2))
   (g$set-library-imp*!$7601$5uPkq
     g$set-library-imp*!$7796$5uPkq
     (record-mutator g$8650$7579$5uPkq '3))
   (g$set-library-vis*!$7602$5uPkq
     g$set-library-vis*!$7797$5uPkq
     (record-mutator g$8650$7579$5uPkq '4))
   (g$set-library-inv*!$7603$5uPkq
     g$set-library-inv*!$7798$5uPkq
     (record-mutator g$8650$7579$5uPkq '5))
   (g$set-library-subst!$7604$5uPkq
     g$set-library-subst!$7799$5uPkq
     (record-mutator g$8650$7579$5uPkq '6))
   (g$set-library-env!$7605$5uPkq
     g$set-library-env!$7800$5uPkq
     (record-mutator g$8650$7579$5uPkq '7))
   (g$set-library-visit-state!$7606$5uPkq
     g$set-library-visit-state!$7801$5uPkq
     (record-mutator g$8650$7579$5uPkq '8))
   (g$set-library-invoke-state!$7607$5uPkq
     g$set-library-invoke-state!$7802$5uPkq
     (record-mutator g$8650$7579$5uPkq '9))
   (g$set-library-visit-code!$7608$5uPkq
     g$set-library-visit-code!$7803$5uPkq
     (record-mutator g$8650$7579$5uPkq '10))
   (g$set-library-invoke-code!$7609$5uPkq
     g$set-library-invoke-code!$7804$5uPkq
     (record-mutator g$8650$7579$5uPkq '11))
   (g$set-library-visible?!$7610$5uPkq
     g$set-library-visible?!$7805$5uPkq
     (record-mutator g$8650$7579$5uPkq '12))
   (g$set-library-source-file-name!$7611$5uPkq
     g$set-library-source-file-name!$7806$5uPkq
     (record-mutator g$8650$7579$5uPkq '13))
   (g$rp$7612$5uPkq
     g$rp$7807$5uPkq
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7644$5uPkq g$p$7645$5uPkq g$wr$7646$5uPkq)
          (begin
            (if (not (g$library?$7582$5uPkq g$x$7644$5uPkq))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$7186$5uPkq
                '"#<library ~s>"
                (if (null? (g$library-version$7586$5uPkq g$x$7644$5uPkq))
                  (g$library-name$7585$5uPkq g$x$7644$5uPkq)
                  (append
                    (g$library-name$7585$5uPkq g$x$7644$5uPkq)
                    (list (g$library-version$7586$5uPkq g$x$7644$5uPkq)))))
              g$p$7645$5uPkq))))))
   (g$find-dependencies$7613$5uPkq
     g$find-dependencies$7808$5uPkq
     (case-lambda
       ((g$ls$7647$5uPkq)
        (if (null? g$ls$7647$5uPkq)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7614$5uPkq
     g$find-library-by$7809$5uPkq
     (case-lambda
       ((g$pred$7648$5uPkq)
        ((letrec ((g$f$7649$5uPkq
                    (case-lambda
                      ((g$ls$7650$5uPkq)
                       (if (null? g$ls$7650$5uPkq)
                         '#f
                         (if (g$pred$7648$5uPkq (car g$ls$7650$5uPkq))
                           (car g$ls$7650$5uPkq)
                           (g$f$7649$5uPkq (cdr g$ls$7650$5uPkq))))))))
           g$f$7649$5uPkq)
         ((g$current-library-collection$7578$5uPkq))))))
   (g$library-path$7615$5uPkq
     g$library-path$7810$5uPkq
     (g$make-parameter$7290$5uPkq
       '(".")
       (case-lambda
         ((g$x$7651$5uPkq)
          (if (if (list? g$x$7651$5uPkq)
                (begin '#f (g$for-all$5757$5uPkq string? g$x$7651$5uPkq))
                '#f)
            (g$map$5759$5uPkq
              (case-lambda ((g$x$7652$5uPkq) g$x$7652$5uPkq))
              g$x$7651$5uPkq)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7651$5uPkq))))))
   (g$library-extensions$7616$5uPkq
     g$library-extensions$7811$5uPkq
     (g$make-parameter$7290$5uPkq
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7653$5uPkq)
          (if (if (list? g$x$7653$5uPkq)
                (begin '#f (g$for-all$5757$5uPkq string? g$x$7653$5uPkq))
                '#f)
            (g$map$5759$5uPkq
              (case-lambda ((g$x$7654$5uPkq) g$x$7654$5uPkq))
              g$x$7653$5uPkq)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7653$5uPkq))))))
   (g$library-name->file-name$7617$5uPkq
     g$library-name->file-name$7812$5uPkq
     (case-lambda
       ((g$x$7655$5uPkq)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6978$5uPkq)))
          (case-lambda
            ((g$p$7658$5uPkq g$extract$7659$5uPkq)
             ((case-lambda
                ((g$extract$7660$5uPkq g$p$7661$5uPkq)
                 (letrec* ((g$display-hex$7662$5uPkq
                             (case-lambda
                               ((g$n$7670$5uPkq)
                                (if (<= '0 g$n$7670$5uPkq '9)
                                  (display g$n$7670$5uPkq g$p$7661$5uPkq)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7670$5uPkq '10)))
                                    g$p$7661$5uPkq))))))
                   (begin
                     ((letrec ((g$f$7663$5uPkq
                                 (case-lambda
                                   ((g$ls$7664$5uPkq)
                                    (if (not (null? g$ls$7664$5uPkq))
                                      (begin
                                        (display '"/" g$p$7661$5uPkq)
                                        (g$for-each$5760$5uPkq
                                          (case-lambda
                                            ((g$c$7665$5uPkq)
                                             (if ((case-lambda
                                                    ((g$t$7666$5uPkq)
                                                     (if g$t$7666$5uPkq
                                                       g$t$7666$5uPkq
                                                       ((case-lambda
                                                          ((g$t$7667$5uPkq)
                                                           (if g$t$7667$5uPkq
                                                             g$t$7667$5uPkq
                                                             ((case-lambda
                                                                ((g$t$7668$5uPkq)
                                                                 (if g$t$7668$5uPkq
                                                                   g$t$7668$5uPkq
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5752$5uPkq
                                                                       g$c$7665$5uPkq
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5960$5uPkq
                                                                '#\0
                                                                g$c$7665$5uPkq
                                                                '#\9)))))
                                                        (g$char<=?$5960$5uPkq
                                                          '#\A
                                                          g$c$7665$5uPkq
                                                          '#\Z)))))
                                                  (g$char<=?$5960$5uPkq
                                                    '#\a
                                                    g$c$7665$5uPkq
                                                    '#\z))
                                               (display
                                                 g$c$7665$5uPkq
                                                 g$p$7661$5uPkq)
                                               (begin
                                                 (display '"%" g$p$7661$5uPkq)
                                                 ((case-lambda
                                                    ((g$n$7669$5uPkq)
                                                     (begin
                                                       (g$display-hex$7662$5uPkq
                                                         (g$quotient$6565$5uPkq
                                                           g$n$7669$5uPkq
                                                           '16))
                                                       (g$display-hex$7662$5uPkq
                                                         (g$remainder$6566$5uPkq
                                                           g$n$7669$5uPkq
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7665$5uPkq))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7664$5uPkq))))
                                        (g$f$7663$5uPkq (cdr g$ls$7664$5uPkq)))
                                      (void))))))
                        g$f$7663$5uPkq)
                      g$x$7655$5uPkq)
                     (g$extract$7660$5uPkq)))))
              g$extract$7659$5uPkq
              g$p$7658$5uPkq)))))))
   (g$file-locator$7618$5uPkq
     g$file-locator$7813$5uPkq
     (g$make-parameter$7290$5uPkq
       (case-lambda
         ((g$x$7671$5uPkq)
          ((case-lambda
             ((g$str$7672$5uPkq)
              ((letrec ((g$f$7673$5uPkq
                          (case-lambda
                            ((g$ls$7674$5uPkq
                               g$exts$7675$5uPkq
                               g$failed-list$7676$5uPkq)
                             (if (null? g$ls$7674$5uPkq)
                               (g$file-locator-resolution-error$7288$5uPkq
                                 g$x$7671$5uPkq
                                 (reverse g$failed-list$7676$5uPkq))
                               (if (null? g$exts$7675$5uPkq)
                                 (g$f$7673$5uPkq
                                   (cdr g$ls$7674$5uPkq)
                                   (g$library-extensions$7616$5uPkq)
                                   g$failed-list$7676$5uPkq)
                                 ((case-lambda
                                    ((g$name$7677$5uPkq)
                                     (if (g$file-exists?$6206$5uPkq
                                           g$name$7677$5uPkq)
                                       g$name$7677$5uPkq
                                       (g$f$7673$5uPkq
                                         g$ls$7674$5uPkq
                                         (cdr g$exts$7675$5uPkq)
                                         (cons
                                           g$name$7677$5uPkq
                                           g$failed-list$7676$5uPkq)))))
                                  (string-append
                                    (car g$ls$7674$5uPkq)
                                    g$str$7672$5uPkq
                                    (car g$exts$7675$5uPkq)))))))))
                 g$f$7673$5uPkq)
               (g$library-path$7615$5uPkq)
               (g$library-extensions$7616$5uPkq)
               '())))
           (g$library-name->file-name$7617$5uPkq g$x$7671$5uPkq))))
       (case-lambda
         ((g$f$7678$5uPkq)
          (if (procedure? g$f$7678$5uPkq)
            g$f$7678$5uPkq
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7678$5uPkq))))))
   (g$serialize-all$7619$5uPkq
     g$serialize-all$7814$5uPkq
     (case-lambda
       ((g$serialize$7679$5uPkq g$compile$7680$5uPkq)
        (letrec* ((g$library-desc$7681$5uPkq
                    (case-lambda
                      ((g$x$7683$5uPkq)
                       (list
                         (g$library-id$7584$5uPkq g$x$7683$5uPkq)
                         (g$library-name$7585$5uPkq g$x$7683$5uPkq))))))
          (g$for-each$5760$5uPkq
            (case-lambda
              ((g$x$7682$5uPkq)
               (if (g$library-source-file-name$7597$5uPkq g$x$7682$5uPkq)
                 (g$serialize$7679$5uPkq
                   (g$library-source-file-name$7597$5uPkq g$x$7682$5uPkq)
                   (list
                     (g$library-id$7584$5uPkq g$x$7682$5uPkq)
                     (g$library-name$7585$5uPkq g$x$7682$5uPkq)
                     (g$library-version$7586$5uPkq g$x$7682$5uPkq)
                     (g$map$5759$5uPkq
                       g$library-desc$7681$5uPkq
                       (g$library-imp*$7587$5uPkq g$x$7682$5uPkq))
                     (g$map$5759$5uPkq
                       g$library-desc$7681$5uPkq
                       (g$library-vis*$7588$5uPkq g$x$7682$5uPkq))
                     (g$map$5759$5uPkq
                       g$library-desc$7681$5uPkq
                       (g$library-inv*$7589$5uPkq g$x$7682$5uPkq))
                     (g$library-subst$7590$5uPkq g$x$7682$5uPkq)
                     (g$library-env$7591$5uPkq g$x$7682$5uPkq)
                     (g$compile$7680$5uPkq
                       (g$library-visit-code$7594$5uPkq g$x$7682$5uPkq))
                     (g$compile$7680$5uPkq
                       (g$library-invoke-code$7595$5uPkq g$x$7682$5uPkq))
                     (g$library-visible?$7596$5uPkq g$x$7682$5uPkq)))
                 (void))))
            ((g$current-library-collection$7578$5uPkq)))))))
   (g$current-precompiled-library-loader$7620$5uPkq
     g$current-precompiled-library-loader$7815$5uPkq
     (g$make-parameter$7290$5uPkq
       (case-lambda ((g$filename$7684$5uPkq g$sk$7685$5uPkq) '#f))))
   (g$try-load-from-file$7621$5uPkq
     g$try-load-from-file$7816$5uPkq
     (case-lambda
       ((g$filename$7686$5uPkq)
        ((g$current-precompiled-library-loader$7620$5uPkq)
         g$filename$7686$5uPkq
         (case-lambda
           ((g$id$7687$5uPkq
              g$name$7688$5uPkq
              g$ver$7689$5uPkq
              g$imp*$7690$5uPkq
              g$vis*$7691$5uPkq
              g$inv*$7692$5uPkq
              g$exp-subst$7693$5uPkq
              g$exp-env$7694$5uPkq
              g$visit-proc$7695$5uPkq
              g$invoke-proc$7696$5uPkq
              g$visible?$7697$5uPkq)
            ((letrec ((g$f$7698$5uPkq
                        (case-lambda
                          ((g$deps$7699$5uPkq)
                           (if (null? g$deps$7699$5uPkq)
                             (begin
                               (g$install-library$7631$5uPkq
                                 g$id$7687$5uPkq
                                 g$name$7688$5uPkq
                                 g$ver$7689$5uPkq
                                 g$imp*$7690$5uPkq
                                 g$vis*$7691$5uPkq
                                 g$inv*$7692$5uPkq
                                 g$exp-subst$7693$5uPkq
                                 g$exp-env$7694$5uPkq
                                 g$visit-proc$7695$5uPkq
                                 g$invoke-proc$7696$5uPkq
                                 '#f
                                 '#f
                                 g$visible?$7697$5uPkq
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7700$5uPkq)
                                 ((case-lambda
                                    ((g$label$7701$5uPkq g$dname$7702$5uPkq)
                                     ((case-lambda
                                        ((g$l$7703$5uPkq)
                                         (if (if (g$library?$7582$5uPkq
                                                   g$l$7703$5uPkq)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7701$5uPkq
                                                      (g$library-id$7584$5uPkq
                                                        g$l$7703$5uPkq)))
                                               '#f)
                                           (g$f$7698$5uPkq
                                             (cdr g$deps$7699$5uPkq))
                                           (begin
                                             (g$library-version-mismatch-warning$7287$5uPkq
                                               g$name$7688$5uPkq
                                               g$dname$7702$5uPkq
                                               g$filename$7686$5uPkq)
                                             '#f))))
                                      (g$find-library-by-name$7626$5uPkq
                                        g$dname$7702$5uPkq))))
                                  (car g$d$7700$5uPkq)
                                  (g$cadr$5923$5uPkq g$d$7700$5uPkq))))
                              (car g$deps$7699$5uPkq)))))))
               g$f$7698$5uPkq)
             (append g$imp*$7690$5uPkq g$vis*$7691$5uPkq g$inv*$7692$5uPkq)))
           (g$others$7704$5uPkq '#f))))))
   (g$library-loader$7622$5uPkq
     g$library-loader$7817$5uPkq
     (g$make-parameter$7290$5uPkq
       (case-lambda
         ((g$x$7705$5uPkq)
          ((case-lambda
             ((g$file-name$7706$5uPkq)
              (if (not g$file-name$7706$5uPkq)
                (assertion-violation '#f '"cannot file library" g$x$7705$5uPkq)
                ((case-lambda
                   ((g$t$7707$5uPkq)
                    (if g$t$7707$5uPkq
                      g$t$7707$5uPkq
                      (begin
                        '#f
                        ((g$current-library-expander$7623$5uPkq)
                         (g$read-library-source-file$7289$5uPkq
                           g$file-name$7706$5uPkq)
                         g$file-name$7706$5uPkq
                         (case-lambda
                           ((g$name$7708$5uPkq)
                            (if (not (equal? g$name$7708$5uPkq g$x$7705$5uPkq))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6978$5uPkq)))
                                  (case-lambda
                                    ((g$p$7711$5uPkq g$e$7712$5uPkq)
                                     ((case-lambda
                                        ((g$e$7713$5uPkq g$p$7714$5uPkq)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7714$5uPkq)
                                           (write g$x$7705$5uPkq g$p$7714$5uPkq)
                                           (display '" in file " g$p$7714$5uPkq)
                                           (display
                                             g$file-name$7706$5uPkq
                                             g$p$7714$5uPkq)
                                           (display '", found " g$p$7714$5uPkq)
                                           (write
                                             g$name$7708$5uPkq
                                             g$p$7714$5uPkq)
                                           (display '" instead" g$p$7714$5uPkq)
                                           (g$e$7713$5uPkq))))
                                      g$e$7712$5uPkq
                                      g$p$7711$5uPkq)))))
                              (void)))))))))
                 (g$try-load-from-file$7621$5uPkq g$file-name$7706$5uPkq)))))
           ((g$file-locator$7618$5uPkq) g$x$7705$5uPkq))))
       (case-lambda
         ((g$f$7715$5uPkq)
          (if (procedure? g$f$7715$5uPkq)
            g$f$7715$5uPkq
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7715$5uPkq))))))
   (g$current-library-expander$7623$5uPkq
     g$current-library-expander$7818$5uPkq
     (g$make-parameter$7290$5uPkq
       (case-lambda
         ((g$x$7716$5uPkq)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7717$5uPkq)
          (if (procedure? g$f$7717$5uPkq)
            g$f$7717$5uPkq
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7717$5uPkq))))))
   (g$external-pending-libraries$7624$5uPkq
     g$external-pending-libraries$7819$5uPkq
     (g$make-parameter$7290$5uPkq '()))
   (g$find-external-library$7625$5uPkq
     g$find-external-library$7820$5uPkq
     (case-lambda
       ((g$name$7718$5uPkq)
        (begin
          (if (g$member$5753$5uPkq
                g$name$7718$5uPkq
                (g$external-pending-libraries$7624$5uPkq))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7718$5uPkq)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7721$5uPkq
                g$external-pending-libraries$7722$5uPkq)
              ((case-lambda
                 ((g$swap$7723$5uPkq)
                  (dynamic-wind
                    g$swap$7723$5uPkq
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7622$5uPkq) g$name$7718$5uPkq)
                         ((case-lambda
                            ((g$t$7724$5uPkq)
                             (if g$t$7724$5uPkq
                               g$t$7724$5uPkq
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7718$5uPkq)))))
                          (g$find-library-by$7614$5uPkq
                            (case-lambda
                              ((g$x$7725$5uPkq)
                               (equal?
                                 (g$library-name$7585$5uPkq g$x$7725$5uPkq)
                                 g$name$7718$5uPkq))))))))
                    g$swap$7723$5uPkq)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7726$5uPkq)
                      (begin
                        (g$external-pending-libraries$7721$5uPkq
                          g$external-pending-libraries$7722$5uPkq)
                        (set! g$external-pending-libraries$7722$5uPkq
                          g$t$7726$5uPkq))))
                   (g$external-pending-libraries$7721$5uPkq)))))))
           g$external-pending-libraries$7624$5uPkq
           (cons
             g$name$7718$5uPkq
             (g$external-pending-libraries$7624$5uPkq)))))))
   (g$find-library-by-name$7626$5uPkq
     g$find-library-by-name$7821$5uPkq
     (case-lambda
       ((g$name$7727$5uPkq)
        ((case-lambda
           ((g$t$7728$5uPkq)
            (if g$t$7728$5uPkq
              g$t$7728$5uPkq
              (begin
                '#f
                (g$find-external-library$7625$5uPkq g$name$7727$5uPkq)))))
         (g$find-library-by$7614$5uPkq
           (case-lambda
             ((g$x$7729$5uPkq)
              (equal?
                (g$library-name$7585$5uPkq g$x$7729$5uPkq)
                g$name$7727$5uPkq))))))))
   (g$library-exists?$7627$5uPkq
     g$library-exists?$7822$5uPkq
     (case-lambda
       ((g$name$7730$5uPkq)
        (if (g$find-library-by$7614$5uPkq
              (case-lambda
                ((g$x$7731$5uPkq)
                 (equal?
                   (g$library-name$7585$5uPkq g$x$7731$5uPkq)
                   g$name$7730$5uPkq))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7628$5uPkq
     g$find-library-by-spec/die$7823$5uPkq
     (case-lambda
       ((g$spec$7732$5uPkq)
        ((case-lambda
           ((g$id$7733$5uPkq)
            ((case-lambda
               ((g$t$7734$5uPkq)
                (if g$t$7734$5uPkq
                  g$t$7734$5uPkq
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7732$5uPkq)))))
             (g$find-library-by$7614$5uPkq
               (case-lambda
                 ((g$x$7735$5uPkq)
                  (eq? g$id$7733$5uPkq
                       (g$library-id$7584$5uPkq g$x$7735$5uPkq))))))))
         (car g$spec$7732$5uPkq)))))
   (g$label->binding-table$7629$5uPkq
     g$label->binding-table$7824$5uPkq
     (g$make-eq-hashtable$6188$5uPkq))
   (g$install-library-record$7630$5uPkq
     g$install-library-record$7825$5uPkq
     (case-lambda
       ((g$lib$7736$5uPkq)
        (begin
          ((case-lambda
             ((g$exp-env$7737$5uPkq)
              (g$for-each$5760$5uPkq
                (case-lambda
                  ((g$x$7738$5uPkq)
                   ((case-lambda
                      ((g$label$7739$5uPkq g$binding$7740$5uPkq)
                       ((case-lambda
                          ((g$binding$7741$5uPkq)
                           (g$hashtable-set!$6192$5uPkq
                             g$label->binding-table$7629$5uPkq
                             g$label$7739$5uPkq
                             g$binding$7741$5uPkq)))
                        ((case-lambda
                           ((g$t$7742$5uPkq)
                            (if (g$memv$5752$5uPkq g$t$7742$5uPkq '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7736$5uPkq
                                  (cdr g$binding$7740$5uPkq)))
                              (if (g$memv$5752$5uPkq
                                    g$t$7742$5uPkq
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7736$5uPkq
                                    (cdr g$binding$7740$5uPkq)))
                                (if (g$memv$5752$5uPkq
                                      g$t$7742$5uPkq
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7736$5uPkq
                                      (cdr g$binding$7740$5uPkq)))
                                  g$binding$7740$5uPkq)))))
                         (car g$binding$7740$5uPkq)))))
                    (car g$x$7738$5uPkq)
                    (cdr g$x$7738$5uPkq))))
                g$exp-env$7737$5uPkq)))
           (g$library-env$7591$5uPkq g$lib$7736$5uPkq))
          ((g$current-library-collection$7578$5uPkq) g$lib$7736$5uPkq)))))
   (g$install-library$7631$5uPkq
     g$install-library$7826$5uPkq
     (case-lambda
       ((g$id$7743$5uPkq
          g$name$7744$5uPkq
          g$ver$7745$5uPkq
          g$imp*$7746$5uPkq
          g$vis*$7747$5uPkq
          g$inv*$7748$5uPkq
          g$exp-subst$7749$5uPkq
          g$exp-env$7750$5uPkq
          g$visit-proc$7751$5uPkq
          g$invoke-proc$7752$5uPkq
          g$visit-code$7753$5uPkq
          g$invoke-code$7754$5uPkq
          g$visible?$7755$5uPkq
          g$source-file-name$7756$5uPkq)
        ((case-lambda
           ((g$imp-lib*$7757$5uPkq g$vis-lib*$7758$5uPkq g$inv-lib*$7759$5uPkq)
            (begin
              (if (not (if (symbol? g$id$7743$5uPkq)
                         (if (list? g$name$7744$5uPkq)
                           (begin '#f (list? g$ver$7745$5uPkq))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7743$5uPkq
                  g$name$7744$5uPkq
                  g$ver$7745$5uPkq)
                (void))
              (if (g$library-exists?$7627$5uPkq g$name$7744$5uPkq)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7744$5uPkq)
                (void))
              ((case-lambda
                 ((g$lib$7760$5uPkq)
                  (g$install-library-record$7630$5uPkq g$lib$7760$5uPkq)))
               (g$make-library$7583$5uPkq
                 g$id$7743$5uPkq
                 g$name$7744$5uPkq
                 g$ver$7745$5uPkq
                 g$imp-lib*$7757$5uPkq
                 g$vis-lib*$7758$5uPkq
                 g$inv-lib*$7759$5uPkq
                 g$exp-subst$7749$5uPkq
                 g$exp-env$7750$5uPkq
                 g$visit-proc$7751$5uPkq
                 g$invoke-proc$7752$5uPkq
                 g$visit-code$7753$5uPkq
                 g$invoke-code$7754$5uPkq
                 g$visible?$7755$5uPkq
                 g$source-file-name$7756$5uPkq)))))
         (g$map$5759$5uPkq
           g$find-library-by-spec/die$7628$5uPkq
           g$imp*$7746$5uPkq)
         (g$map$5759$5uPkq
           g$find-library-by-spec/die$7628$5uPkq
           g$vis*$7747$5uPkq)
         (g$map$5759$5uPkq
           g$find-library-by-spec/die$7628$5uPkq
           g$inv*$7748$5uPkq)))))
   (g$imported-label->binding$7632$5uPkq
     g$imported-label->binding$7827$5uPkq
     (case-lambda
       ((g$lab$7761$5uPkq)
        (g$hashtable-ref$6191$5uPkq
          g$label->binding-table$7629$5uPkq
          g$lab$7761$5uPkq
          '#f))))
   (g$invoke-library$7633$5uPkq
     g$invoke-library$7828$5uPkq
     (case-lambda
       ((g$lib$7762$5uPkq)
        ((case-lambda
           ((g$invoke$7763$5uPkq)
            (if (procedure? g$invoke$7763$5uPkq)
              (begin
                (g$set-library-invoke-state!$7607$5uPkq
                  g$lib$7762$5uPkq
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7762$5uPkq))))
                (g$for-each$5760$5uPkq
                  g$invoke-library$7633$5uPkq
                  (g$library-inv*$7589$5uPkq g$lib$7762$5uPkq))
                (g$set-library-invoke-state!$7607$5uPkq
                  g$lib$7762$5uPkq
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7762$5uPkq))))
                (g$invoke$7763$5uPkq)
                (g$set-library-invoke-state!$7607$5uPkq g$lib$7762$5uPkq '#t))
              (void))))
         (g$library-invoke-state$7593$5uPkq g$lib$7762$5uPkq)))))
   (g$visit-library$7634$5uPkq
     g$visit-library$7829$5uPkq
     (case-lambda
       ((g$lib$7764$5uPkq)
        ((case-lambda
           ((g$visit$7765$5uPkq)
            (if (procedure? g$visit$7765$5uPkq)
              (begin
                (g$set-library-visit-state!$7606$5uPkq
                  g$lib$7764$5uPkq
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7764$5uPkq))))
                (g$for-each$5760$5uPkq
                  g$invoke-library$7633$5uPkq
                  (g$library-vis*$7588$5uPkq g$lib$7764$5uPkq))
                (g$set-library-visit-state!$7606$5uPkq
                  g$lib$7764$5uPkq
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7764$5uPkq))))
                (g$visit$7765$5uPkq)
                (g$set-library-visit-state!$7606$5uPkq g$lib$7764$5uPkq '#t))
              (void))))
         (g$library-visit-state$7592$5uPkq g$lib$7764$5uPkq)))))
   (g$invoke-library-by-spec$7635$5uPkq
     g$invoke-library-by-spec$7830$5uPkq
     (case-lambda
       ((g$spec$7766$5uPkq)
        (g$invoke-library$7633$5uPkq
          (g$find-library-by-spec/die$7628$5uPkq g$spec$7766$5uPkq)))))
   (g$installed-libraries$7636$5uPkq
     g$installed-libraries$7831$5uPkq
     (case-lambda
       ((g$all?$7767$5uPkq)
        ((letrec ((g$f$7768$5uPkq
                    (case-lambda
                      ((g$ls$7769$5uPkq)
                       (if (null? g$ls$7769$5uPkq)
                         '()
                         (if ((case-lambda
                                ((g$t$7770$5uPkq)
                                 (if g$t$7770$5uPkq
                                   g$t$7770$5uPkq
                                   (begin
                                     '#f
                                     (g$library-visible?$7596$5uPkq
                                       (car g$ls$7769$5uPkq))))))
                              g$all?$7767$5uPkq)
                           (cons
                             (car g$ls$7769$5uPkq)
                             (g$f$7768$5uPkq (cdr g$ls$7769$5uPkq)))
                           (g$f$7768$5uPkq (cdr g$ls$7769$5uPkq))))))))
           g$f$7768$5uPkq)
         ((g$current-library-collection$7578$5uPkq))))
       (() (g$installed-libraries$7636$5uPkq '#f))))
   (g$library-spec$7637$5uPkq
     g$library-spec$7832$5uPkq
     (case-lambda
       ((g$x$7771$5uPkq)
        (begin
          (if (not (g$library?$7582$5uPkq g$x$7771$5uPkq))
            (assertion-violation 'library-spec '"not a library" g$x$7771$5uPkq)
            (void))
          (list
            (g$library-id$7584$5uPkq g$x$7771$5uPkq)
            (g$library-name$7585$5uPkq g$x$7771$5uPkq)
            (g$library-version$7586$5uPkq g$x$7771$5uPkq)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7833$5uPkq
     g$build-global-define$7943$5uPkq
     (case-lambda ((g$x$7914$5uPkq) (g$build-void$7910$5uPkq))))
   (g$build-lambda$7882$5uPkq
     g$build-lambda$7944$5uPkq
     (case-lambda
       ((g$ae$7915$5uPkq g$vars$7916$5uPkq g$exp$7917$5uPkq)
        (list 'case-lambda (list g$vars$7916$5uPkq g$exp$7917$5uPkq)))))
   (g$build-case-lambda$7883$5uPkq
     g$build-case-lambda$7945$5uPkq
     (case-lambda
       ((g$ae$7918$5uPkq g$vars*$7919$5uPkq g$exp*$7920$5uPkq)
        (cons
          'case-lambda
          (g$map$5759$5uPkq list g$vars*$7919$5uPkq g$exp*$7920$5uPkq)))))
   (g$build-let$7884$5uPkq
     g$build-let$7946$5uPkq
     (case-lambda
       ((g$ae$7921$5uPkq g$lhs*$7922$5uPkq g$rhs*$7923$5uPkq g$body$7924$5uPkq)
        (cons
          (g$build-lambda$7882$5uPkq
            g$ae$7921$5uPkq
            g$lhs*$7922$5uPkq
            g$body$7924$5uPkq)
          g$rhs*$7923$5uPkq))))
   (g$build-sequence$7909$5uPkq
     g$build-sequence$7947$5uPkq
     (case-lambda
       ((g$ae$7925$5uPkq g$exps$7926$5uPkq)
        ((letrec ((g$loop$7927$5uPkq
                    (case-lambda
                      ((g$exps$7928$5uPkq)
                       (if (null? (cdr g$exps$7928$5uPkq))
                         (car g$exps$7928$5uPkq)
                         (if (equal?
                               (car g$exps$7928$5uPkq)
                               (g$build-void$7910$5uPkq))
                           (g$loop$7927$5uPkq (cdr g$exps$7928$5uPkq))
                           (cons 'begin g$exps$7928$5uPkq)))))))
           g$loop$7927$5uPkq)
         g$exps$7926$5uPkq))))
   (g$build-void$7910$5uPkq
     g$build-void$7948$5uPkq
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7911$5uPkq
     g$build-letrec$7949$5uPkq
     (case-lambda
       ((g$ae$7929$5uPkq
          g$vars$7930$5uPkq
          g$val-exps$7931$5uPkq
          g$body-exp$7932$5uPkq)
        (if (null? g$vars$7930$5uPkq)
          g$body-exp$7932$5uPkq
          (list
            'letrec
            (g$map$5759$5uPkq list g$vars$7930$5uPkq g$val-exps$7931$5uPkq)
            g$body-exp$7932$5uPkq)))))
   (g$build-letrec*$7912$5uPkq
     g$build-letrec*$7950$5uPkq
     (case-lambda
       ((g$ae$7933$5uPkq
          g$vars$7934$5uPkq
          g$val-exps$7935$5uPkq
          g$body-exp$7936$5uPkq)
        (if (null? g$vars$7934$5uPkq)
          g$body-exp$7936$5uPkq
          (list
            'letrec*
            (g$map$5759$5uPkq list g$vars$7934$5uPkq g$val-exps$7935$5uPkq)
            g$body-exp$7936$5uPkq)))))
   (g$build-library-letrec*$7913$5uPkq
     g$build-library-letrec*$7951$5uPkq
     (case-lambda
       ((g$ae$7937$5uPkq
          g$name$7938$5uPkq
          g$vars$7939$5uPkq
          g$locs$7940$5uPkq
          g$val-exps$7941$5uPkq
          g$body-exp$7942$5uPkq)
        (list
          'library-letrec*
          g$name$7938$5uPkq
          (g$map$5759$5uPkq
            list
            g$vars$7939$5uPkq
            g$locs$7940$5uPkq
            g$val-exps$7941$5uPkq)
          g$body-exp$7942$5uPkq)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7952$5uPkq
     g$set-cons$11636$5uPkq
     (case-lambda
       ((g$x$8415$5uPkq g$ls$8416$5uPkq)
        (if (g$memq$5751$5uPkq g$x$8415$5uPkq g$ls$8416$5uPkq)
          g$ls$8416$5uPkq
          (cons g$x$8415$5uPkq g$ls$8416$5uPkq)))))
   (g$set-union$7953$5uPkq
     g$set-union$11637$5uPkq
     (case-lambda
       ((g$ls1$8417$5uPkq g$ls2$8418$5uPkq)
        (if (null? g$ls1$8417$5uPkq)
          g$ls2$8418$5uPkq
          (if (g$memq$5751$5uPkq (car g$ls1$8417$5uPkq) g$ls2$8418$5uPkq)
            (g$set-union$7953$5uPkq (cdr g$ls1$8417$5uPkq) g$ls2$8418$5uPkq)
            (cons
              (car g$ls1$8417$5uPkq)
              (g$set-union$7953$5uPkq
                (cdr g$ls1$8417$5uPkq)
                g$ls2$8418$5uPkq)))))))
   (g$top-mark*$7955$5uPkq g$top-mark*$11638$5uPkq '(top))
   (g$top-marked?$7956$5uPkq
     g$top-marked?$11639$5uPkq
     (case-lambda
       ((g$m*$8419$5uPkq) (g$memq$5751$5uPkq 'top g$m*$8419$5uPkq))))
   (g$gen-lexical$7957$5uPkq
     g$gen-lexical$11640$5uPkq
     (case-lambda
       ((g$sym$8420$5uPkq)
        (if (symbol? g$sym$8420$5uPkq)
          (gensym g$sym$8420$5uPkq)
          (if (g$stx?$7990$5uPkq g$sym$8420$5uPkq)
            (g$gen-lexical$7957$5uPkq (g$id->sym$8019$5uPkq g$sym$8420$5uPkq))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8420$5uPkq))))))
   (g$gen-global$7958$5uPkq
     g$gen-global$11641$5uPkq
     (case-lambda
       ((g$x$8421$5uPkq) (g$gen-lexical$7957$5uPkq g$x$8421$5uPkq))))
   (g$gen-label$7959$5uPkq
     g$gen-label$11642$5uPkq
     (case-lambda ((g$_$8422$5uPkq) (gensym))))
   (g$gen-top-level-label$7960$5uPkq
     g$gen-top-level-label$11643$5uPkq
     (case-lambda
       ((g$id$8423$5uPkq g$rib$8424$5uPkq)
        (letrec* ((g$find$8425$5uPkq
                    (case-lambda
                      ((g$sym$8431$5uPkq
                         g$mark*$8432$5uPkq
                         g$sym*$8433$5uPkq
                         g$mark**$8434$5uPkq
                         g$label*$8435$5uPkq)
                       (if (pair? g$sym*$8433$5uPkq)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8431$5uPkq
                                        (car g$sym*$8433$5uPkq))
                                 (begin
                                   '#f
                                   (g$same-marks?$8020$5uPkq
                                     g$mark*$8432$5uPkq
                                     (car g$mark**$8434$5uPkq)))
                                 '#f)
                             (car g$label*$8435$5uPkq)
                             (g$find$8425$5uPkq
                               g$sym$8431$5uPkq
                               g$mark*$8432$5uPkq
                               (cdr g$sym*$8433$5uPkq)
                               (cdr g$mark**$8434$5uPkq)
                               (cdr g$label*$8435$5uPkq))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8426$5uPkq g$mark*$8427$5uPkq)
              ((case-lambda
                 ((g$sym*$8428$5uPkq)
                  ((case-lambda
                     ((g$t$8429$5uPkq)
                      (if g$t$8429$5uPkq
                        ((case-lambda
                           ((g$label$8430$5uPkq)
                            (if (g$imported-label->binding$7827$5uPkq
                                  g$label$8430$5uPkq)
                              (gensym)
                              g$label$8430$5uPkq)))
                         g$t$8429$5uPkq)
                        (gensym))))
                   (if (g$memq$5751$5uPkq
                         g$sym$8426$5uPkq
                         (g$rib-sym*$7968$5uPkq g$rib$8424$5uPkq))
                     (begin
                       '#f
                       (g$find$8425$5uPkq
                         g$sym$8426$5uPkq
                         g$mark*$8427$5uPkq
                         g$sym*$8428$5uPkq
                         (g$rib-mark**$7969$5uPkq g$rib$8424$5uPkq)
                         (g$rib-label*$7970$5uPkq g$rib$8424$5uPkq)))
                     '#f))))
               (g$rib-sym*$7968$5uPkq g$rib$8424$5uPkq))))
           (g$id->sym$8019$5uPkq g$id$8423$5uPkq)
           (g$stx-mark*$7993$5uPkq g$id$8423$5uPkq))))))
   (g$gen-define-label+loc$7961$5uPkq
     g$gen-define-label+loc$11644$5uPkq
     (case-lambda
       ((g$id$8436$5uPkq g$rib$8437$5uPkq)
        ((case-lambda
           ((g$t$8438$5uPkq)
            (if g$t$8438$5uPkq
              ((case-lambda
                 ((g$env$8439$5uPkq)
                  ((case-lambda
                     ((g$label$8440$5uPkq g$locs$8441$5uPkq)
                      (values
                        g$label$8440$5uPkq
                        ((case-lambda
                           ((g$t$8442$5uPkq)
                            (if g$t$8442$5uPkq
                              (cdr g$t$8442$5uPkq)
                              ((case-lambda
                                 ((g$loc$8443$5uPkq)
                                  (begin
                                    (g$set-interaction-env-locs!$8379$5uPkq
                                      g$env$8439$5uPkq
                                      (cons
                                        (cons
                                          g$label$8440$5uPkq
                                          g$loc$8443$5uPkq)
                                        g$locs$8441$5uPkq))
                                    g$loc$8443$5uPkq)))
                               (g$gen-lexical$7957$5uPkq g$id$8436$5uPkq)))))
                         (g$assq$5747$5uPkq
                           g$label$8440$5uPkq
                           g$locs$8441$5uPkq)))))
                   (g$gen-top-level-label$7960$5uPkq
                     g$id$8436$5uPkq
                     g$rib$8437$5uPkq)
                   (g$interaction-env-locs$8376$5uPkq g$env$8439$5uPkq))))
               g$t$8438$5uPkq)
              (values (gensym) (g$gen-lexical$7957$5uPkq g$id$8436$5uPkq)))))
         (g$top-level-context$8414$5uPkq)))))
   (g$gen-define-label$7962$5uPkq
     g$gen-define-label$11645$5uPkq
     (case-lambda
       ((g$id$8444$5uPkq g$rib$8445$5uPkq)
        (if (g$top-level-context$8414$5uPkq)
          (g$gen-top-level-label$7960$5uPkq g$id$8444$5uPkq g$rib$8445$5uPkq)
          (gensym)))))
   (g$9034$7963$5uPkq
     g$9034$11646$5uPkq
     (make-record-type-descriptor
       'rib
       '#f
       'g$9037$5uPkq
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9036$7964$5uPkq g$9036$11647$5uPkq '#f)
   (g$9035$7965$5uPkq
     g$9035$11648$5uPkq
     (make-record-constructor-descriptor
       g$9034$7963$5uPkq
       '#f
       g$9036$7964$5uPkq))
   (g$rib?$7966$5uPkq
     g$rib?$11649$5uPkq
     (record-predicate g$9034$7963$5uPkq))
   (g$make-rib$7967$5uPkq
     g$make-rib$11650$5uPkq
     (record-constructor g$9035$7965$5uPkq))
   (g$rib-sym*$7968$5uPkq
     g$rib-sym*$11651$5uPkq
     (record-accessor g$9034$7963$5uPkq '0))
   (g$rib-mark**$7969$5uPkq
     g$rib-mark**$11652$5uPkq
     (record-accessor g$9034$7963$5uPkq '1))
   (g$rib-label*$7970$5uPkq
     g$rib-label*$11653$5uPkq
     (record-accessor g$9034$7963$5uPkq '2))
   (g$rib-sealed/freq$7971$5uPkq
     g$rib-sealed/freq$11654$5uPkq
     (record-accessor g$9034$7963$5uPkq '3))
   (g$rib-cache$7972$5uPkq
     g$rib-cache$11655$5uPkq
     (record-accessor g$9034$7963$5uPkq '4))
   (g$set-rib-sym*!$7973$5uPkq
     g$set-rib-sym*!$11656$5uPkq
     (record-mutator g$9034$7963$5uPkq '0))
   (g$set-rib-mark**!$7974$5uPkq
     g$set-rib-mark**!$11657$5uPkq
     (record-mutator g$9034$7963$5uPkq '1))
   (g$set-rib-label*!$7975$5uPkq
     g$set-rib-label*!$11658$5uPkq
     (record-mutator g$9034$7963$5uPkq '2))
   (g$set-rib-sealed/freq!$7976$5uPkq
     g$set-rib-sealed/freq!$11659$5uPkq
     (record-mutator g$9034$7963$5uPkq '3))
   (g$set-rib-cache!$7977$5uPkq
     g$set-rib-cache!$11660$5uPkq
     (record-mutator g$9034$7963$5uPkq '4))
   (g$make-empty-rib$7978$5uPkq
     g$make-empty-rib$11661$5uPkq
     (case-lambda (() (g$make-rib$7967$5uPkq '() '() '() '#f '#f))))
   (g$make-cache-rib$7979$5uPkq
     g$make-cache-rib$11662$5uPkq
     (case-lambda
       (()
        (g$make-rib$7967$5uPkq
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$6188$5uPkq)))))
   (g$find-label$7980$5uPkq
     g$find-label$11663$5uPkq
     (case-lambda
       ((g$rib$8446$5uPkq g$sym$8447$5uPkq g$mark*$8448$5uPkq)
        ((case-lambda
           ((g$ht$8449$5uPkq)
            (if g$ht$8449$5uPkq
              (begin
                '#f
                ((case-lambda
                   ((g$cv$8450$5uPkq)
                    ((case-lambda
                       ((g$t$8451$5uPkq)
                        (if g$t$8451$5uPkq (cdr g$t$8451$5uPkq) '#f)))
                     (if g$cv$8450$5uPkq
                       (begin
                         '#f
                         (g$assp$5750$5uPkq
                           (case-lambda
                             ((g$m$8452$5uPkq)
                              (g$same-marks?$8020$5uPkq
                                g$mark*$8448$5uPkq
                                g$m$8452$5uPkq)))
                           g$cv$8450$5uPkq))
                       '#f))))
                 (g$hashtable-ref$6191$5uPkq
                   g$ht$8449$5uPkq
                   g$sym$8447$5uPkq
                   '#f)))
              '#f)))
         (g$rib-cache$7972$5uPkq g$rib$8446$5uPkq)))))
   (g$extend-rib!$7981$5uPkq
     g$extend-rib!$11664$5uPkq
     (case-lambda
       ((g$rib$8453$5uPkq g$id$8454$5uPkq g$label$8455$5uPkq)
        (letrec* ((g$find$8456$5uPkq
                    (case-lambda
                      ((g$sym$8465$5uPkq
                         g$mark*$8466$5uPkq
                         g$sym*$8467$5uPkq
                         g$mark**$8468$5uPkq
                         g$label*$8469$5uPkq)
                       (if (pair? g$sym*$8467$5uPkq)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8465$5uPkq
                                        (car g$sym*$8467$5uPkq))
                                 (begin
                                   '#f
                                   (g$same-marks?$8020$5uPkq
                                     g$mark*$8466$5uPkq
                                     (car g$mark**$8468$5uPkq)))
                                 '#f)
                             g$label*$8469$5uPkq
                             (g$find$8456$5uPkq
                               g$sym$8465$5uPkq
                               g$mark*$8466$5uPkq
                               (cdr g$sym*$8467$5uPkq)
                               (cdr g$mark**$8468$5uPkq)
                               (cdr g$label*$8469$5uPkq))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7971$5uPkq g$rib$8453$5uPkq)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8453$5uPkq)
              (void))
            ((case-lambda
               ((g$sym$8457$5uPkq g$mark*$8458$5uPkq)
                ((case-lambda
                   ((g$sym*$8459$5uPkq)
                    ((case-lambda
                       ((g$t$8460$5uPkq)
                        (if g$t$8460$5uPkq
                          ((case-lambda
                             ((g$p$8461$5uPkq)
                              (if (not (eq? g$label$8455$5uPkq g$p$8461$5uPkq))
                                (g$syntax-violation$8407$5uPkq
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$8454$5uPkq)
                                (void))))
                           g$t$8460$5uPkq)
                          ((case-lambda
                             ((g$t$8462$5uPkq)
                              (if g$t$8462$5uPkq
                                ((case-lambda
                                   ((g$p$8463$5uPkq)
                                    (if (not (eq? g$label$8455$5uPkq
                                                  (car g$p$8463$5uPkq)))
                                      (if (g$top-level-context$8414$5uPkq)
                                        (set-car!
                                          g$p$8463$5uPkq
                                          g$label$8455$5uPkq)
                                        (g$syntax-violation$8407$5uPkq
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$8454$5uPkq))
                                      (void))))
                                 g$t$8462$5uPkq)
                                (begin
                                  (if (g$rib-cache$7972$5uPkq g$rib$8453$5uPkq)
                                    (g$hashtable-update!$6195$5uPkq
                                      (g$rib-cache$7972$5uPkq g$rib$8453$5uPkq)
                                      g$sym$8457$5uPkq
                                      (case-lambda
                                        ((g$e$8464$5uPkq)
                                         (cons
                                           (cons
                                             g$mark*$8458$5uPkq
                                             g$label$8455$5uPkq)
                                           g$e$8464$5uPkq)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$7973$5uPkq
                                    g$rib$8453$5uPkq
                                    (cons g$sym$8457$5uPkq g$sym*$8459$5uPkq))
                                  (g$set-rib-mark**!$7974$5uPkq
                                    g$rib$8453$5uPkq
                                    (cons
                                      g$mark*$8458$5uPkq
                                      (g$rib-mark**$7969$5uPkq
                                        g$rib$8453$5uPkq)))
                                  (g$set-rib-label*!$7975$5uPkq
                                    g$rib$8453$5uPkq
                                    (cons
                                      g$label$8455$5uPkq
                                      (g$rib-label*$7970$5uPkq
                                        g$rib$8453$5uPkq)))))))
                           (if (g$memq$5751$5uPkq
                                 g$sym$8457$5uPkq
                                 (g$rib-sym*$7968$5uPkq g$rib$8453$5uPkq))
                             (begin
                               '#f
                               (g$find$8456$5uPkq
                                 g$sym$8457$5uPkq
                                 g$mark*$8458$5uPkq
                                 g$sym*$8459$5uPkq
                                 (g$rib-mark**$7969$5uPkq g$rib$8453$5uPkq)
                                 (g$rib-label*$7970$5uPkq g$rib$8453$5uPkq)))
                             '#f)))))
                     (g$find-label$7980$5uPkq
                       g$rib$8453$5uPkq
                       g$sym$8457$5uPkq
                       g$mark*$8458$5uPkq))))
                 (g$rib-sym*$7968$5uPkq g$rib$8453$5uPkq))))
             (g$id->sym$8019$5uPkq g$id$8454$5uPkq)
             (g$stx-mark*$7993$5uPkq g$id$8454$5uPkq)))))))
   (g$extend-rib/nc!$7982$5uPkq
     g$extend-rib/nc!$11665$5uPkq
     (case-lambda
       ((g$rib$8470$5uPkq g$id$8471$5uPkq g$label$8472$5uPkq)
        ((case-lambda
           ((g$sym$8473$5uPkq g$mark*$8474$5uPkq)
            ((case-lambda
               ((g$sym*$8475$5uPkq)
                (begin
                  (if (g$rib-cache$7972$5uPkq g$rib$8470$5uPkq)
                    (g$hashtable-update!$6195$5uPkq
                      (g$rib-cache$7972$5uPkq g$rib$8470$5uPkq)
                      g$sym$8473$5uPkq
                      (case-lambda
                        ((g$e$8476$5uPkq)
                         (cons
                           (cons g$mark*$8474$5uPkq g$label$8472$5uPkq)
                           g$e$8476$5uPkq)))
                      '())
                    (void))
                  (g$set-rib-sym*!$7973$5uPkq
                    g$rib$8470$5uPkq
                    (cons g$sym$8473$5uPkq g$sym*$8475$5uPkq))
                  (g$set-rib-mark**!$7974$5uPkq
                    g$rib$8470$5uPkq
                    (cons
                      g$mark*$8474$5uPkq
                      (g$rib-mark**$7969$5uPkq g$rib$8470$5uPkq)))
                  (g$set-rib-label*!$7975$5uPkq
                    g$rib$8470$5uPkq
                    (cons
                      g$label$8472$5uPkq
                      (g$rib-label*$7970$5uPkq g$rib$8470$5uPkq))))))
             (g$rib-sym*$7968$5uPkq g$rib$8470$5uPkq))))
         (g$id->sym$8019$5uPkq g$id$8471$5uPkq)
         (g$stx-mark*$7993$5uPkq g$id$8471$5uPkq)))))
   (g$make-rib-map$7983$5uPkq
     g$make-rib-map$11666$5uPkq
     (case-lambda
       ((g$sym*$8477$5uPkq)
        ((case-lambda
           ((g$ht$8478$5uPkq)
            ((letrec ((g$f$8479$5uPkq
                        (case-lambda
                          ((g$i$8480$5uPkq g$sym*$8481$5uPkq)
                           (if (null? g$sym*$8481$5uPkq)
                             g$ht$8478$5uPkq
                             (begin
                               (g$hashtable-update!$6195$5uPkq
                                 g$ht$8478$5uPkq
                                 (car g$sym*$8481$5uPkq)
                                 (case-lambda
                                   ((g$x$8482$5uPkq)
                                    (cons g$i$8480$5uPkq g$x$8482$5uPkq)))
                                 '())
                               (g$f$8479$5uPkq
                                 (+ g$i$8480$5uPkq '1)
                                 (cdr g$sym*$8481$5uPkq))))))))
               g$f$8479$5uPkq)
             '0
             g$sym*$8477$5uPkq)))
         (g$make-eq-hashtable$6188$5uPkq)))))
   (g$seal-rib!$7984$5uPkq
     g$seal-rib!$11667$5uPkq
     (case-lambda
       ((g$rib$8483$5uPkq)
        ((case-lambda
           ((g$sym*$8484$5uPkq)
            (if (not (null? g$sym*$8484$5uPkq))
              (begin
                (g$set-rib-sym*!$7973$5uPkq
                  g$rib$8483$5uPkq
                  (list->vector g$sym*$8484$5uPkq))
                (g$set-rib-mark**!$7974$5uPkq
                  g$rib$8483$5uPkq
                  (list->vector (g$rib-mark**$7969$5uPkq g$rib$8483$5uPkq)))
                (g$set-rib-label*!$7975$5uPkq
                  g$rib$8483$5uPkq
                  (list->vector (g$rib-label*$7970$5uPkq g$rib$8483$5uPkq)))
                (g$set-rib-sealed/freq!$7976$5uPkq
                  g$rib$8483$5uPkq
                  (g$make-rib-map$7983$5uPkq g$sym*$8484$5uPkq)))
              (void))))
         (g$rib-sym*$7968$5uPkq g$rib$8483$5uPkq)))))
   (g$unseal-rib!$7985$5uPkq
     g$unseal-rib!$11668$5uPkq
     (case-lambda
       ((g$rib$8485$5uPkq)
        (if (g$rib-sealed/freq$7971$5uPkq g$rib$8485$5uPkq)
          (begin
            (g$set-rib-sealed/freq!$7976$5uPkq g$rib$8485$5uPkq '#f)
            (g$set-rib-sym*!$7973$5uPkq
              g$rib$8485$5uPkq
              (vector->list (g$rib-sym*$7968$5uPkq g$rib$8485$5uPkq)))
            (g$set-rib-mark**!$7974$5uPkq
              g$rib$8485$5uPkq
              (vector->list (g$rib-mark**$7969$5uPkq g$rib$8485$5uPkq)))
            (g$set-rib-label*!$7975$5uPkq
              g$rib$8485$5uPkq
              (vector->list (g$rib-label*$7970$5uPkq g$rib$8485$5uPkq))))
          (void)))))
   (g$make-full-rib$7986$5uPkq
     g$make-full-rib$11669$5uPkq
     (case-lambda
       ((g$id*$8486$5uPkq g$label*$8487$5uPkq)
        ((case-lambda
           ((g$r$8488$5uPkq)
            (begin (g$seal-rib!$7984$5uPkq g$r$8488$5uPkq) g$r$8488$5uPkq)))
         (g$make-rib$7967$5uPkq
           (g$map$5759$5uPkq g$id->sym$8019$5uPkq g$id*$8486$5uPkq)
           (g$map$5759$5uPkq g$stx-mark*$7993$5uPkq g$id*$8486$5uPkq)
           g$label*$8487$5uPkq
           '#f
           '#f)))))
   (g$9065$7987$5uPkq
     g$9065$11670$5uPkq
     (make-record-type-descriptor
       'stx
       '#f
       'g$9068$5uPkq
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$9067$7988$5uPkq g$9067$11671$5uPkq '#f)
   (g$9066$7989$5uPkq
     g$9066$11672$5uPkq
     (make-record-constructor-descriptor
       g$9065$7987$5uPkq
       '#f
       g$9067$7988$5uPkq))
   (g$stx?$7990$5uPkq
     g$stx?$11673$5uPkq
     (record-predicate g$9065$7987$5uPkq))
   (g$make-stx$7991$5uPkq
     g$make-stx$11674$5uPkq
     (record-constructor g$9066$7989$5uPkq))
   (g$stx-expr$7992$5uPkq
     g$stx-expr$11675$5uPkq
     (record-accessor g$9065$7987$5uPkq '0))
   (g$stx-mark*$7993$5uPkq
     g$stx-mark*$11676$5uPkq
     (record-accessor g$9065$7987$5uPkq '1))
   (g$stx-subst*$7994$5uPkq
     g$stx-subst*$11677$5uPkq
     (record-accessor g$9065$7987$5uPkq '2))
   (g$stx-ae*$7995$5uPkq
     g$stx-ae*$11678$5uPkq
     (record-accessor g$9065$7987$5uPkq '3))
   (g$set-stx-expr!$7996$5uPkq
     g$set-stx-expr!$11679$5uPkq
     (record-mutator g$9065$7987$5uPkq '0))
   (g$set-stx-mark*!$7997$5uPkq
     g$set-stx-mark*!$11680$5uPkq
     (record-mutator g$9065$7987$5uPkq '1))
   (g$set-stx-subst*!$7998$5uPkq
     g$set-stx-subst*!$11681$5uPkq
     (record-mutator g$9065$7987$5uPkq '2))
   (g$set-stx-ae*!$7999$5uPkq
     g$set-stx-ae*!$11682$5uPkq
     (record-mutator g$9065$7987$5uPkq '3))
   (g$rp$8000$5uPkq
     g$rp$11683$5uPkq
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8489$5uPkq g$p$8490$5uPkq g$wr$8491$5uPkq)
          (begin
            (display '"#<syntax " g$p$8490$5uPkq)
            (write (g$stx->datum$8029$5uPkq g$x$8489$5uPkq) g$p$8490$5uPkq)
            ((case-lambda
               ((g$expr$8492$5uPkq)
                (if (annotation? g$expr$8492$5uPkq)
                  ((case-lambda
                     ((g$src$8493$5uPkq)
                      (if (pair? g$src$8493$5uPkq)
                        (begin
                          (display '" (" g$p$8490$5uPkq)
                          (display (cdr g$src$8493$5uPkq) g$p$8490$5uPkq)
                          (display '" of " g$p$8490$5uPkq)
                          (display (car g$src$8493$5uPkq) g$p$8490$5uPkq)
                          (display '")" g$p$8490$5uPkq))
                        (void))))
                   (annotation-source g$expr$8492$5uPkq))
                  (void))))
             (g$stx-expr$7992$5uPkq g$x$8489$5uPkq))
            (display '">" g$p$8490$5uPkq))))))
   (g$datum->stx$8001$5uPkq
     g$datum->stx$11684$5uPkq
     (case-lambda
       ((g$id$8494$5uPkq g$datum$8495$5uPkq)
        (g$make-stx$7991$5uPkq
          g$datum$8495$5uPkq
          (g$stx-mark*$7993$5uPkq g$id$8494$5uPkq)
          (g$stx-subst*$7994$5uPkq g$id$8494$5uPkq)
          (g$stx-ae*$7995$5uPkq g$id$8494$5uPkq)))))
   (g$gen-mark$8002$5uPkq
     g$gen-mark$11685$5uPkq
     (case-lambda (() (string '#\m))))
   (g$anti-mark$8003$5uPkq g$anti-mark$11686$5uPkq '#f)
   (g$anti-mark?$8004$5uPkq g$anti-mark?$11687$5uPkq not)
   (g$join-wraps$8005$5uPkq
     g$join-wraps$11688$5uPkq
     (case-lambda
       ((g$m1*$8496$5uPkq g$s1*$8497$5uPkq g$ae1*$8498$5uPkq g$e$8499$5uPkq)
        (letrec* ((g$cancel$8500$5uPkq
                    (case-lambda
                      ((g$ls1$8504$5uPkq g$ls2$8505$5uPkq)
                       ((letrec ((g$f$8506$5uPkq
                                   (case-lambda
                                     ((g$x$8507$5uPkq g$ls1$8508$5uPkq)
                                      (if (null? g$ls1$8508$5uPkq)
                                        (cdr g$ls2$8505$5uPkq)
                                        (cons
                                          g$x$8507$5uPkq
                                          (g$f$8506$5uPkq
                                            (car g$ls1$8508$5uPkq)
                                            (cdr g$ls1$8508$5uPkq))))))))
                          g$f$8506$5uPkq)
                        (car g$ls1$8504$5uPkq)
                        (cdr g$ls1$8504$5uPkq))))))
          ((case-lambda
             ((g$m2*$8501$5uPkq g$s2*$8502$5uPkq g$ae2*$8503$5uPkq)
              (if (if (not (null? g$m1*$8496$5uPkq))
                    (if (not (null? g$m2*$8501$5uPkq))
                      (begin
                        '#f
                        (g$anti-mark?$8004$5uPkq (car g$m2*$8501$5uPkq)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8500$5uPkq g$m1*$8496$5uPkq g$m2*$8501$5uPkq)
                  (g$cancel$8500$5uPkq g$s1*$8497$5uPkq g$s2*$8502$5uPkq)
                  (g$cancel$8500$5uPkq g$ae1*$8498$5uPkq g$ae2*$8503$5uPkq))
                (values
                  (append g$m1*$8496$5uPkq g$m2*$8501$5uPkq)
                  (append g$s1*$8497$5uPkq g$s2*$8502$5uPkq)
                  (append g$ae1*$8498$5uPkq g$ae2*$8503$5uPkq)))))
           (g$stx-mark*$7993$5uPkq g$e$8499$5uPkq)
           (g$stx-subst*$7994$5uPkq g$e$8499$5uPkq)
           (g$stx-ae*$7995$5uPkq g$e$8499$5uPkq))))))
   (g$mkstx$8006$5uPkq
     g$mkstx$11689$5uPkq
     (case-lambda
       ((g$e$8509$5uPkq g$m*$8510$5uPkq g$s*$8511$5uPkq g$ae*$8512$5uPkq)
        (if (if (g$stx?$7990$5uPkq g$e$8509$5uPkq)
              (begin '#f (not (g$top-marked?$7956$5uPkq g$m*$8510$5uPkq)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$8005$5uPkq
                 g$m*$8510$5uPkq
                 g$s*$8511$5uPkq
                 g$ae*$8512$5uPkq
                 g$e$8509$5uPkq)))
            (case-lambda
              ((g$m*$8516$5uPkq g$s*$8517$5uPkq g$ae*$8518$5uPkq)
               ((case-lambda
                  ((g$ae*$8519$5uPkq g$s*$8520$5uPkq g$m*$8521$5uPkq)
                   (g$make-stx$7991$5uPkq
                     (g$stx-expr$7992$5uPkq g$e$8509$5uPkq)
                     g$m*$8521$5uPkq
                     g$s*$8520$5uPkq
                     g$ae*$8519$5uPkq)))
                g$ae*$8518$5uPkq
                g$s*$8517$5uPkq
                g$m*$8516$5uPkq))))
          (g$make-stx$7991$5uPkq
            g$e$8509$5uPkq
            g$m*$8510$5uPkq
            g$s*$8511$5uPkq
            g$ae*$8512$5uPkq)))))
   (g$add-mark$8007$5uPkq
     g$add-mark$11690$5uPkq
     (case-lambda
       ((g$m$8522$5uPkq g$e$8523$5uPkq g$ae$8524$5uPkq)
        (g$mkstx$8006$5uPkq
          g$e$8523$5uPkq
          (list g$m$8522$5uPkq)
          '(shift)
          (list g$ae$8524$5uPkq)))))
   (g$add-subst$8008$5uPkq
     g$add-subst$11691$5uPkq
     (case-lambda
       ((g$subst$8525$5uPkq g$e$8526$5uPkq)
        (g$mkstx$8006$5uPkq g$e$8526$5uPkq '() (list g$subst$8525$5uPkq) '()))))
   (g$syntax-kind?$8009$5uPkq
     g$syntax-kind?$11692$5uPkq
     (case-lambda
       ((g$x$8527$5uPkq g$p?$8528$5uPkq)
        (if (g$stx?$7990$5uPkq g$x$8527$5uPkq)
          (g$syntax-kind?$8009$5uPkq
            (g$stx-expr$7992$5uPkq g$x$8527$5uPkq)
            g$p?$8528$5uPkq)
          (if (annotation? g$x$8527$5uPkq)
            (g$syntax-kind?$8009$5uPkq
              (annotation-expression g$x$8527$5uPkq)
              g$p?$8528$5uPkq)
            (g$p?$8528$5uPkq g$x$8527$5uPkq))))))
   (g$syntax-vector->list$8010$5uPkq
     g$syntax-vector->list$11693$5uPkq
     (case-lambda
       ((g$x$8529$5uPkq)
        (if (g$stx?$7990$5uPkq g$x$8529$5uPkq)
          ((case-lambda
             ((g$ls$8530$5uPkq g$m*$8531$5uPkq g$s*$8532$5uPkq g$ae*$8533$5uPkq)
              (g$map$5759$5uPkq
                (case-lambda
                  ((g$x$8534$5uPkq)
                   (g$mkstx$8006$5uPkq
                     g$x$8534$5uPkq
                     g$m*$8531$5uPkq
                     g$s*$8532$5uPkq
                     g$ae*$8533$5uPkq)))
                g$ls$8530$5uPkq)))
           (g$syntax-vector->list$8010$5uPkq
             (g$stx-expr$7992$5uPkq g$x$8529$5uPkq))
           (g$stx-mark*$7993$5uPkq g$x$8529$5uPkq)
           (g$stx-subst*$7994$5uPkq g$x$8529$5uPkq)
           (g$stx-ae*$7995$5uPkq g$x$8529$5uPkq))
          (if (annotation? g$x$8529$5uPkq)
            (g$syntax-vector->list$8010$5uPkq
              (annotation-expression g$x$8529$5uPkq))
            (if (vector? g$x$8529$5uPkq)
              (vector->list g$x$8529$5uPkq)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8529$5uPkq)))))))
   (g$syntax-pair?$8011$5uPkq
     g$syntax-pair?$11694$5uPkq
     (case-lambda
       ((g$x$8535$5uPkq) (g$syntax-kind?$8009$5uPkq g$x$8535$5uPkq pair?))))
   (g$syntax-vector?$8012$5uPkq
     g$syntax-vector?$11695$5uPkq
     (case-lambda
       ((g$x$8536$5uPkq) (g$syntax-kind?$8009$5uPkq g$x$8536$5uPkq vector?))))
   (g$syntax-null?$8013$5uPkq
     g$syntax-null?$11696$5uPkq
     (case-lambda
       ((g$x$8537$5uPkq) (g$syntax-kind?$8009$5uPkq g$x$8537$5uPkq null?))))
   (g$syntax-list?$8014$5uPkq
     g$syntax-list?$11697$5uPkq
     (case-lambda
       ((g$x$8538$5uPkq)
        ((case-lambda
           ((g$t$8539$5uPkq)
            (if g$t$8539$5uPkq
              g$t$8539$5uPkq
              (begin
                '#f
                (if (g$syntax-pair?$8011$5uPkq g$x$8538$5uPkq)
                  (begin
                    '#f
                    (g$syntax-list?$8014$5uPkq
                      (g$syntax-cdr$8016$5uPkq g$x$8538$5uPkq)))
                  '#f)))))
         (g$syntax-null?$8013$5uPkq g$x$8538$5uPkq)))))
   (g$syntax-car$8015$5uPkq
     g$syntax-car$11698$5uPkq
     (case-lambda
       ((g$x$8540$5uPkq)
        (if (g$stx?$7990$5uPkq g$x$8540$5uPkq)
          (g$mkstx$8006$5uPkq
            (g$syntax-car$8015$5uPkq (g$stx-expr$7992$5uPkq g$x$8540$5uPkq))
            (g$stx-mark*$7993$5uPkq g$x$8540$5uPkq)
            (g$stx-subst*$7994$5uPkq g$x$8540$5uPkq)
            (g$stx-ae*$7995$5uPkq g$x$8540$5uPkq))
          (if (annotation? g$x$8540$5uPkq)
            (g$syntax-car$8015$5uPkq (annotation-expression g$x$8540$5uPkq))
            (if (pair? g$x$8540$5uPkq)
              (car g$x$8540$5uPkq)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8540$5uPkq)))))))
   (g$syntax-cdr$8016$5uPkq
     g$syntax-cdr$11699$5uPkq
     (case-lambda
       ((g$x$8541$5uPkq)
        (if (g$stx?$7990$5uPkq g$x$8541$5uPkq)
          (g$mkstx$8006$5uPkq
            (g$syntax-cdr$8016$5uPkq (g$stx-expr$7992$5uPkq g$x$8541$5uPkq))
            (g$stx-mark*$7993$5uPkq g$x$8541$5uPkq)
            (g$stx-subst*$7994$5uPkq g$x$8541$5uPkq)
            (g$stx-ae*$7995$5uPkq g$x$8541$5uPkq))
          (if (annotation? g$x$8541$5uPkq)
            (g$syntax-cdr$8016$5uPkq (annotation-expression g$x$8541$5uPkq))
            (if (pair? g$x$8541$5uPkq)
              (cdr g$x$8541$5uPkq)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8541$5uPkq)))))))
   (g$syntax->list$8017$5uPkq
     g$syntax->list$11700$5uPkq
     (case-lambda
       ((g$x$8542$5uPkq)
        (if (g$syntax-pair?$8011$5uPkq g$x$8542$5uPkq)
          (cons
            (g$syntax-car$8015$5uPkq g$x$8542$5uPkq)
            (g$syntax->list$8017$5uPkq
              (g$syntax-cdr$8016$5uPkq g$x$8542$5uPkq)))
          (if (g$syntax-null?$8013$5uPkq g$x$8542$5uPkq)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8542$5uPkq))))))
   (g$id?$8018$5uPkq
     g$id?$11701$5uPkq
     (case-lambda
       ((g$x$8543$5uPkq)
        (if (g$stx?$7990$5uPkq g$x$8543$5uPkq)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8544$5uPkq)
                (symbol?
                  (if (annotation? g$expr$8544$5uPkq)
                    (annotation-stripped g$expr$8544$5uPkq)
                    g$expr$8544$5uPkq))))
             (g$stx-expr$7992$5uPkq g$x$8543$5uPkq)))
          '#f))))
   (g$id->sym$8019$5uPkq
     g$id->sym$11702$5uPkq
     (case-lambda
       ((g$x$8545$5uPkq)
        (begin
          (if (not (g$stx?$7990$5uPkq g$x$8545$5uPkq))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8545$5uPkq)
            (void))
          ((case-lambda
             ((g$expr$8546$5uPkq)
              ((case-lambda
                 ((g$sym$8547$5uPkq)
                  (if (symbol? g$sym$8547$5uPkq)
                    g$sym$8547$5uPkq
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8545$5uPkq))))
               (if (annotation? g$expr$8546$5uPkq)
                 (annotation-stripped g$expr$8546$5uPkq)
                 g$expr$8546$5uPkq))))
           (g$stx-expr$7992$5uPkq g$x$8545$5uPkq))))))
   (g$same-marks?$8020$5uPkq
     g$same-marks?$11703$5uPkq
     (case-lambda
       ((g$x$8548$5uPkq g$y$8549$5uPkq)
        ((case-lambda
           ((g$t$8550$5uPkq)
            (if g$t$8550$5uPkq
              g$t$8550$5uPkq
              (begin
                '#f
                (if (pair? g$x$8548$5uPkq)
                  (if (pair? g$y$8549$5uPkq)
                    (if (eq? (car g$x$8548$5uPkq) (car g$y$8549$5uPkq))
                      (begin
                        '#f
                        (g$same-marks?$8020$5uPkq
                          (cdr g$x$8548$5uPkq)
                          (cdr g$y$8549$5uPkq)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8548$5uPkq) (begin '#f (null? g$y$8549$5uPkq)) '#f)))))
   (g$bound-id=?$8021$5uPkq
     g$bound-id=?$11704$5uPkq
     (case-lambda
       ((g$x$8551$5uPkq g$y$8552$5uPkq)
        (if (eq? (g$id->sym$8019$5uPkq g$x$8551$5uPkq)
                 (g$id->sym$8019$5uPkq g$y$8552$5uPkq))
          (begin
            '#f
            (g$same-marks?$8020$5uPkq
              (g$stx-mark*$7993$5uPkq g$x$8551$5uPkq)
              (g$stx-mark*$7993$5uPkq g$y$8552$5uPkq)))
          '#f))))
   (g$free-id=?$8022$5uPkq
     g$free-id=?$11705$5uPkq
     (case-lambda
       ((g$i$8553$5uPkq g$j$8554$5uPkq)
        ((case-lambda
           ((g$t0$8555$5uPkq g$t1$8556$5uPkq)
            (if ((case-lambda
                   ((g$t$8557$5uPkq)
                    (if g$t$8557$5uPkq
                      g$t$8557$5uPkq
                      (begin '#f g$t1$8556$5uPkq))))
                 g$t0$8555$5uPkq)
              (eq? g$t0$8555$5uPkq g$t1$8556$5uPkq)
              (eq? (g$id->sym$8019$5uPkq g$i$8553$5uPkq)
                   (g$id->sym$8019$5uPkq g$j$8554$5uPkq)))))
         (g$id->real-label$8032$5uPkq g$i$8553$5uPkq)
         (g$id->real-label$8032$5uPkq g$j$8554$5uPkq)))))
   (g$valid-bound-ids?$8023$5uPkq
     g$valid-bound-ids?$11706$5uPkq
     (case-lambda
       ((g$id*$8558$5uPkq)
        (if (g$for-all$5757$5uPkq g$id?$8018$5uPkq g$id*$8558$5uPkq)
          (begin '#f (g$distinct-bound-ids?$8024$5uPkq g$id*$8558$5uPkq))
          '#f))))
   (g$distinct-bound-ids?$8024$5uPkq
     g$distinct-bound-ids?$11707$5uPkq
     (case-lambda
       ((g$id*$8559$5uPkq)
        ((case-lambda
           ((g$t$8560$5uPkq)
            (if g$t$8560$5uPkq
              g$t$8560$5uPkq
              (begin
                '#f
                (if (not (g$bound-id-member?$8025$5uPkq
                           (car g$id*$8559$5uPkq)
                           (cdr g$id*$8559$5uPkq)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$8024$5uPkq (cdr g$id*$8559$5uPkq)))
                  '#f)))))
         (null? g$id*$8559$5uPkq)))))
   (g$bound-id-member?$8025$5uPkq
     g$bound-id-member?$11708$5uPkq
     (case-lambda
       ((g$id$8561$5uPkq g$id*$8562$5uPkq)
        (if (pair? g$id*$8562$5uPkq)
          (begin
            '#f
            ((case-lambda
               ((g$t$8563$5uPkq)
                (if g$t$8563$5uPkq
                  g$t$8563$5uPkq
                  (begin
                    '#f
                    (g$bound-id-member?$8025$5uPkq
                      g$id$8561$5uPkq
                      (cdr g$id*$8562$5uPkq))))))
             (g$bound-id=?$8021$5uPkq g$id$8561$5uPkq (car g$id*$8562$5uPkq))))
          '#f))))
   (g$self-evaluating?$8026$5uPkq
     g$self-evaluating?$11709$5uPkq
     (case-lambda
       ((g$x$8564$5uPkq)
        ((case-lambda
           ((g$t$8565$5uPkq)
            (if g$t$8565$5uPkq
              g$t$8565$5uPkq
              ((case-lambda
                 ((g$t$8566$5uPkq)
                  (if g$t$8566$5uPkq
                    g$t$8566$5uPkq
                    ((case-lambda
                       ((g$t$8567$5uPkq)
                        (if g$t$8567$5uPkq
                          g$t$8567$5uPkq
                          ((case-lambda
                             ((g$t$8568$5uPkq)
                              (if g$t$8568$5uPkq
                                g$t$8568$5uPkq
                                (begin '#f (bytevector? g$x$8564$5uPkq)))))
                           (boolean? g$x$8564$5uPkq)))))
                     (char? g$x$8564$5uPkq)))))
               (string? g$x$8564$5uPkq)))))
         (number? g$x$8564$5uPkq)))))
   (g$strip-annotations$8027$5uPkq
     g$strip-annotations$11710$5uPkq
     (case-lambda
       ((g$x$8569$5uPkq)
        (if (pair? g$x$8569$5uPkq)
          (cons
            (g$strip-annotations$8027$5uPkq (car g$x$8569$5uPkq))
            (g$strip-annotations$8027$5uPkq (cdr g$x$8569$5uPkq)))
          (if (vector? g$x$8569$5uPkq)
            (vector-map g$strip-annotations$8027$5uPkq g$x$8569$5uPkq)
            (if (annotation? g$x$8569$5uPkq)
              (annotation-stripped g$x$8569$5uPkq)
              g$x$8569$5uPkq))))))
   (g$strip$8028$5uPkq
     g$strip$11711$5uPkq
     (case-lambda
       ((g$x$8570$5uPkq g$m*$8571$5uPkq)
        (if (g$top-marked?$7956$5uPkq g$m*$8571$5uPkq)
          (if ((case-lambda
                 ((g$t$8572$5uPkq)
                  (if g$t$8572$5uPkq
                    g$t$8572$5uPkq
                    ((case-lambda
                       ((g$t$8573$5uPkq)
                        (if g$t$8573$5uPkq
                          g$t$8573$5uPkq
                          (begin
                            '#f
                            (if (vector? g$x$8570$5uPkq)
                              (if (> (vector-length g$x$8570$5uPkq) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8570$5uPkq '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8570$5uPkq)
                       (begin '#f (annotation? (car g$x$8570$5uPkq)))
                       '#f)))))
               (annotation? g$x$8570$5uPkq))
            (g$strip-annotations$8027$5uPkq g$x$8570$5uPkq)
            g$x$8570$5uPkq)
          ((letrec ((g$f$8574$5uPkq
                      (case-lambda
                        ((g$x$8575$5uPkq)
                         (if (g$stx?$7990$5uPkq g$x$8575$5uPkq)
                           (g$strip$8028$5uPkq
                             (g$stx-expr$7992$5uPkq g$x$8575$5uPkq)
                             (g$stx-mark*$7993$5uPkq g$x$8575$5uPkq))
                           (if (annotation? g$x$8575$5uPkq)
                             (annotation-stripped g$x$8575$5uPkq)
                             (if (pair? g$x$8575$5uPkq)
                               ((case-lambda
                                  ((g$a$8576$5uPkq g$d$8577$5uPkq)
                                   (if (if (eq? g$a$8576$5uPkq
                                                (car g$x$8575$5uPkq))
                                         (begin
                                           '#f
                                           (eq? g$d$8577$5uPkq
                                                (cdr g$x$8575$5uPkq)))
                                         '#f)
                                     g$x$8575$5uPkq
                                     (cons g$a$8576$5uPkq g$d$8577$5uPkq))))
                                (g$f$8574$5uPkq (car g$x$8575$5uPkq))
                                (g$f$8574$5uPkq (cdr g$x$8575$5uPkq)))
                               (if (vector? g$x$8575$5uPkq)
                                 ((case-lambda
                                    ((g$old$8578$5uPkq)
                                     ((case-lambda
                                        ((g$new$8579$5uPkq)
                                         (if (g$for-all$5757$5uPkq
                                               eq?
                                               g$old$8578$5uPkq
                                               g$new$8579$5uPkq)
                                           g$x$8575$5uPkq
                                           (list->vector g$new$8579$5uPkq))))
                                      (g$map$5759$5uPkq
                                        g$f$8574$5uPkq
                                        g$old$8578$5uPkq))))
                                  (vector->list g$x$8575$5uPkq))
                                 g$x$8575$5uPkq))))))))
             g$f$8574$5uPkq)
           g$x$8570$5uPkq)))))
   (g$stx->datum$8029$5uPkq
     g$stx->datum$11712$5uPkq
     (case-lambda
       ((g$x$8580$5uPkq) (g$strip$8028$5uPkq g$x$8580$5uPkq '()))))
   (g$same-marks*?$8030$5uPkq
     g$same-marks*?$11713$5uPkq
     (case-lambda
       ((g$mark*$8581$5uPkq g$mark**$8582$5uPkq g$si$8583$5uPkq)
        (if (null? g$si$8583$5uPkq)
          '#f
          (if (g$same-marks?$8020$5uPkq
                g$mark*$8581$5uPkq
                (vector-ref g$mark**$8582$5uPkq (car g$si$8583$5uPkq)))
            (car g$si$8583$5uPkq)
            (g$same-marks*?$8030$5uPkq
              g$mark*$8581$5uPkq
              g$mark**$8582$5uPkq
              (cdr g$si$8583$5uPkq)))))))
   (g$id->label$8031$5uPkq
     g$id->label$11714$5uPkq
     (case-lambda
       ((g$id$8584$5uPkq)
        ((case-lambda
           ((g$t$8585$5uPkq)
            (if g$t$8585$5uPkq
              g$t$8585$5uPkq
              (begin
                '#f
                ((case-lambda
                   ((g$t$8586$5uPkq)
                    (if g$t$8586$5uPkq
                      ((case-lambda
                         ((g$env$8587$5uPkq)
                          ((case-lambda
                             ((g$rib$8588$5uPkq)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7961$5uPkq
                                     g$id$8584$5uPkq
                                     g$rib$8588$5uPkq)))
                                (case-lambda
                                  ((g$lab$8591$5uPkq g$loc_$8592$5uPkq)
                                   ((case-lambda
                                      ((g$loc_$8593$5uPkq g$lab$8594$5uPkq)
                                       (begin
                                         (g$extend-rib!$7981$5uPkq
                                           g$rib$8588$5uPkq
                                           g$id$8584$5uPkq
                                           g$lab$8594$5uPkq)
                                         g$lab$8594$5uPkq)))
                                    g$loc_$8592$5uPkq
                                    g$lab$8591$5uPkq))))))
                           (g$interaction-env-rib$8374$5uPkq
                             g$env$8587$5uPkq))))
                       g$t$8586$5uPkq)
                      '#f)))
                 (g$top-level-context$8414$5uPkq))))))
         (g$id->real-label$8032$5uPkq g$id$8584$5uPkq)))))
   (g$id->real-label$8032$5uPkq
     g$id->real-label$11715$5uPkq
     (case-lambda
       ((g$id$8595$5uPkq)
        ((case-lambda
           ((g$sym$8596$5uPkq)
            ((letrec ((g$search$8597$5uPkq
                        (case-lambda
                          ((g$subst*$8598$5uPkq g$mark*$8599$5uPkq)
                           (if (null? g$subst*$8598$5uPkq)
                             '#f
                             (if (eq? (car g$subst*$8598$5uPkq) 'shift)
                               (g$search$8597$5uPkq
                                 (cdr g$subst*$8598$5uPkq)
                                 (cdr g$mark*$8599$5uPkq))
                               ((case-lambda
                                  ((g$rib$8600$5uPkq)
                                   ((case-lambda
                                      ((g$t$8601$5uPkq)
                                       (if g$t$8601$5uPkq
                                         ((case-lambda
                                            ((g$ht$8602$5uPkq)
                                             ((case-lambda
                                                ((g$si$8603$5uPkq)
                                                 ((case-lambda
                                                    ((g$i$8604$5uPkq)
                                                     (if g$i$8604$5uPkq
                                                       (vector-ref
                                                         (g$rib-label*$7970$5uPkq
                                                           g$rib$8600$5uPkq)
                                                         g$i$8604$5uPkq)
                                                       (g$search$8597$5uPkq
                                                         (cdr g$subst*$8598$5uPkq)
                                                         g$mark*$8599$5uPkq))))
                                                  (if g$si$8603$5uPkq
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$8030$5uPkq
                                                        g$mark*$8599$5uPkq
                                                        (g$rib-mark**$7969$5uPkq
                                                          g$rib$8600$5uPkq)
                                                        (reverse
                                                          g$si$8603$5uPkq)))
                                                    '#f))))
                                              (g$hashtable-ref$6191$5uPkq
                                                g$ht$8602$5uPkq
                                                g$sym$8596$5uPkq
                                                '#f))))
                                          g$t$8601$5uPkq)
                                         ((case-lambda
                                            ((g$t$8605$5uPkq)
                                             (if g$t$8605$5uPkq
                                               g$t$8605$5uPkq
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$8606$5uPkq
                                                             (case-lambda
                                                               ((g$sym*$8607$5uPkq
                                                                  g$mark**$8608$5uPkq
                                                                  g$label*$8609$5uPkq)
                                                                (if (null?
                                                                      g$sym*$8607$5uPkq)
                                                                  (g$search$8597$5uPkq
                                                                    (cdr g$subst*$8598$5uPkq)
                                                                    g$mark*$8599$5uPkq)
                                                                  (if (if (eq? (car g$sym*$8607$5uPkq)
                                                                               g$sym$8596$5uPkq)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$8020$5uPkq
                                                                            (car g$mark**$8608$5uPkq)
                                                                            g$mark*$8599$5uPkq))
                                                                        '#f)
                                                                    (car g$label*$8609$5uPkq)
                                                                    (g$f$8606$5uPkq
                                                                      (cdr g$sym*$8607$5uPkq)
                                                                      (cdr g$mark**$8608$5uPkq)
                                                                      (cdr g$label*$8609$5uPkq))))))))
                                                    g$f$8606$5uPkq)
                                                  (g$rib-sym*$7968$5uPkq
                                                    g$rib$8600$5uPkq)
                                                  (g$rib-mark**$7969$5uPkq
                                                    g$rib$8600$5uPkq)
                                                  (g$rib-label*$7970$5uPkq
                                                    g$rib$8600$5uPkq))))))
                                          (g$find-label$7980$5uPkq
                                            g$rib$8600$5uPkq
                                            g$sym$8596$5uPkq
                                            g$mark*$8599$5uPkq)))))
                                    (g$rib-sealed/freq$7971$5uPkq
                                      g$rib$8600$5uPkq))))
                                (car g$subst*$8598$5uPkq))))))))
               g$search$8597$5uPkq)
             (g$stx-subst*$7994$5uPkq g$id$8595$5uPkq)
             (g$stx-mark*$7993$5uPkq g$id$8595$5uPkq))))
         (g$id->sym$8019$5uPkq g$id$8595$5uPkq)))))
   (g$label->binding$8033$5uPkq
     g$label->binding$11716$5uPkq
     (case-lambda
       ((g$x$8610$5uPkq g$r$8611$5uPkq)
        ((case-lambda
           ((g$t$8612$5uPkq)
            (if g$t$8612$5uPkq
              ((case-lambda
                 ((g$b$8613$5uPkq)
                  (if (if (pair? g$b$8613$5uPkq)
                        (begin '#f (eq? (car g$b$8613$5uPkq) '$core-rtd))
                        '#f)
                    (cons
                      '$rtd
                      (g$map$5759$5uPkq
                        g$bless$8259$5uPkq
                        (cdr g$b$8613$5uPkq)))
                    (if (if (pair? g$b$8613$5uPkq)
                          (begin '#f (eq? (car g$b$8613$5uPkq) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8614$5uPkq g$loc$8615$5uPkq)
                          (cons '$rtd (symbol-value g$loc$8615$5uPkq))))
                       (g$cadr$5923$5uPkq g$b$8613$5uPkq)
                       (g$cddr$5925$5uPkq g$b$8613$5uPkq))
                      g$b$8613$5uPkq))))
               g$t$8612$5uPkq)
              ((case-lambda
                 ((g$t$8616$5uPkq)
                  (if g$t$8616$5uPkq
                    (cdr g$t$8616$5uPkq)
                    ((case-lambda
                       ((g$t$8617$5uPkq)
                        (if g$t$8617$5uPkq
                          ((case-lambda
                             ((g$env$8618$5uPkq)
                              ((case-lambda
                                 ((g$t$8619$5uPkq)
                                  (if g$t$8619$5uPkq
                                    ((case-lambda
                                       ((g$p$8620$5uPkq)
                                        (g$cons*$5761$5uPkq
                                          'lexical
                                          (cdr g$p$8620$5uPkq)
                                          '#f)))
                                     g$t$8619$5uPkq)
                                    '(displaced-lexical . #f))))
                               (g$assq$5747$5uPkq
                                 g$x$8610$5uPkq
                                 (g$interaction-env-locs$8376$5uPkq
                                   g$env$8618$5uPkq)))))
                           g$t$8617$5uPkq)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$8414$5uPkq)))))
               (g$assq$5747$5uPkq g$x$8610$5uPkq g$r$8611$5uPkq)))))
         (g$imported-label->binding$7827$5uPkq g$x$8610$5uPkq)))))
   (g$make-binding$8034$5uPkq g$make-binding$11717$5uPkq cons)
   (g$binding-type$8035$5uPkq g$binding-type$11718$5uPkq car)
   (g$binding-value$8036$5uPkq g$binding-value$11719$5uPkq cdr)
   (g$raise-unbound-error$8037$5uPkq
     g$raise-unbound-error$11720$5uPkq
     (case-lambda
       ((g$id$8621$5uPkq)
        (g$syntax-violation*$8406$5uPkq
          '#f
          '"unbound identifier"
          g$id$8621$5uPkq
          (g$make-undefined-violation$6537$5uPkq)))))
   (g$syntax-type$8038$5uPkq
     g$syntax-type$11721$5uPkq
     (case-lambda
       ((g$e$8622$5uPkq g$r$8623$5uPkq)
        (if (g$id?$8018$5uPkq g$e$8622$5uPkq)
          ((case-lambda
             ((g$id$8624$5uPkq)
              ((case-lambda
                 ((g$label$8625$5uPkq)
                  ((case-lambda
                     ((g$b$8626$5uPkq)
                      ((case-lambda
                         ((g$type$8627$5uPkq)
                          (begin
                            (if (not g$label$8625$5uPkq)
                              (g$raise-unbound-error$8037$5uPkq g$id$8624$5uPkq)
                              (void))
                            ((case-lambda
                               ((g$t$8628$5uPkq)
                                (if (g$memv$5752$5uPkq
                                      g$t$8628$5uPkq
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable))
                                  (values
                                    g$type$8627$5uPkq
                                    (g$binding-value$8036$5uPkq g$b$8626$5uPkq)
                                    g$id$8624$5uPkq)
                                  (values 'other '#f '#f))))
                             g$type$8627$5uPkq))))
                       (g$binding-type$8035$5uPkq g$b$8626$5uPkq))))
                   (g$label->binding$8033$5uPkq
                     g$label$8625$5uPkq
                     g$r$8623$5uPkq))))
               (g$id->label$8031$5uPkq g$id$8624$5uPkq))))
           g$e$8622$5uPkq)
          (if (g$syntax-pair?$8011$5uPkq g$e$8622$5uPkq)
            ((case-lambda
               ((g$id$8629$5uPkq)
                (if (g$id?$8018$5uPkq g$id$8629$5uPkq)
                  ((case-lambda
                     ((g$label$8630$5uPkq)
                      ((case-lambda
                         ((g$b$8631$5uPkq)
                          ((case-lambda
                             ((g$type$8632$5uPkq)
                              (begin
                                (if (not g$label$8630$5uPkq)
                                  (g$raise-unbound-error$8037$5uPkq
                                    g$id$8629$5uPkq)
                                  (void))
                                ((case-lambda
                                   ((g$t$8633$5uPkq)
                                    (if (g$memv$5752$5uPkq
                                          g$t$8633$5uPkq
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd))
                                      (values
                                        g$type$8632$5uPkq
                                        (g$binding-value$8036$5uPkq
                                          g$b$8631$5uPkq)
                                        g$id$8629$5uPkq)
                                      (values 'call '#f '#f))))
                                 g$type$8632$5uPkq))))
                           (g$binding-type$8035$5uPkq g$b$8631$5uPkq))))
                       (g$label->binding$8033$5uPkq
                         g$label$8630$5uPkq
                         g$r$8623$5uPkq))))
                   (g$id->label$8031$5uPkq g$id$8629$5uPkq))
                  (values 'call '#f '#f))))
             (g$syntax-car$8015$5uPkq g$e$8622$5uPkq))
            ((case-lambda
               ((g$d$8634$5uPkq)
                (if (g$self-evaluating?$8026$5uPkq g$d$8634$5uPkq)
                  (values 'constant g$d$8634$5uPkq '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$8029$5uPkq g$e$8622$5uPkq)))))))
   (g$sanitize-binding$8046$5uPkq
     g$sanitize-binding$11722$5uPkq
     (case-lambda
       ((g$x$8635$5uPkq g$src$8636$5uPkq)
        (if (procedure? g$x$8635$5uPkq)
          (g$cons*$5761$5uPkq 'local-macro g$x$8635$5uPkq g$src$8636$5uPkq)
          (if (if (pair? g$x$8635$5uPkq)
                (if (eq? (car g$x$8635$5uPkq) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8635$5uPkq)))
                  '#f)
                '#f)
            (g$cons*$5761$5uPkq
              'local-macro!
              (cdr g$x$8635$5uPkq)
              g$src$8636$5uPkq)
            (if (if (pair? g$x$8635$5uPkq)
                  (begin '#f (eq? (car g$x$8635$5uPkq) '$rtd))
                  '#f)
              g$x$8635$5uPkq
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8635$5uPkq)))))))
   (g$make-variable-transformer$8047$5uPkq
     g$make-variable-transformer$11723$5uPkq
     (case-lambda
       ((g$x$8637$5uPkq)
        (if (procedure? g$x$8637$5uPkq)
          (cons 'macro! g$x$8637$5uPkq)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8637$5uPkq)))))
   (g$variable-transformer?$8048$5uPkq
     g$variable-transformer?$11724$5uPkq
     (case-lambda
       ((g$x$8638$5uPkq)
        (if (pair? g$x$8638$5uPkq)
          (if (eq? (car g$x$8638$5uPkq) 'macro!)
            (begin '#f (procedure? (cdr g$x$8638$5uPkq)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$8049$5uPkq
     g$variable-transformer-procedure$11725$5uPkq
     (case-lambda
       ((g$x$8639$5uPkq)
        (if (g$variable-transformer?$8048$5uPkq g$x$8639$5uPkq)
          (cdr g$x$8639$5uPkq)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8639$5uPkq)))))
   (g$make-eval-transformer$8050$5uPkq
     g$make-eval-transformer$11726$5uPkq
     (case-lambda
       ((g$x$8640$5uPkq)
        (g$sanitize-binding$8046$5uPkq
          (eval-core (g$expanded->core$7536$5uPkq g$x$8640$5uPkq))
          g$x$8640$5uPkq))))
   (g$parse-define$8236$5uPkq
     g$parse-define$11727$5uPkq
     (case-lambda
       ((g$x$8641$5uPkq)
        ((case-lambda
           ((g$t$8642$5uPkq)
            ((case-lambda
               ((g$ls/false$8643$5uPkq)
                (if (if g$ls/false$8643$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8644$5uPkq
                               g$fmls$8645$5uPkq
                               g$b$8646$5uPkq
                               g$b*$8647$5uPkq)
                             (g$id?$8018$5uPkq g$id$8644$5uPkq)))
                          g$ls/false$8643$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8648$5uPkq
                         g$fmls$8649$5uPkq
                         g$b$8650$5uPkq
                         g$b*$8651$5uPkq)
                       (begin
                         (g$verify-formals$8316$5uPkq
                           g$fmls$8649$5uPkq
                           g$x$8641$5uPkq)
                         (values
                           g$id$8648$5uPkq
                           (cons
                             'defun
                             (cons
                               g$fmls$8649$5uPkq
                               (cons g$b$8650$5uPkq g$b*$8651$5uPkq)))))))
                    g$ls/false$8643$5uPkq)
                  ((case-lambda
                     ((g$t$8652$5uPkq)
                      ((case-lambda
                         ((g$ls/false$8653$5uPkq)
                          (if (if g$ls/false$8653$5uPkq
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8654$5uPkq g$val$8655$5uPkq)
                                       (g$id?$8018$5uPkq g$id$8654$5uPkq)))
                                    g$ls/false$8653$5uPkq))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8656$5uPkq g$val$8657$5uPkq)
                                 (values
                                   g$id$8656$5uPkq
                                   (cons 'expr g$val$8657$5uPkq))))
                              g$ls/false$8653$5uPkq)
                            ((case-lambda
                               ((g$t$8658$5uPkq)
                                ((case-lambda
                                   ((g$ls/false$8659$5uPkq)
                                    (if (if g$ls/false$8659$5uPkq
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8660$5uPkq)
                                                 (g$id?$8018$5uPkq
                                                   g$id$8660$5uPkq)))
                                              g$ls/false$8659$5uPkq))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8661$5uPkq)
                                           (values
                                             g$id$8661$5uPkq
                                             (cons
                                               'expr
                                               (g$bless$8259$5uPkq '(void))))))
                                        g$ls/false$8659$5uPkq)
                                      (g$syntax-violation$8407$5uPkq
                                        '#f
                                        '"invalid syntax"
                                        g$t$8658$5uPkq))))
                                 (g$syntax-dispatch$8296$5uPkq
                                   g$t$8658$5uPkq
                                   '(_ any)))))
                             g$t$8652$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$8652$5uPkq
                         '(_ any any)))))
                   g$t$8642$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8642$5uPkq
               '(_ (any . any) any . each-any)))))
         g$x$8641$5uPkq))))
   (g$parse-define-syntax$8237$5uPkq
     g$parse-define-syntax$11728$5uPkq
     (case-lambda
       ((g$x$8662$5uPkq)
        ((case-lambda
           ((g$t$8663$5uPkq)
            ((case-lambda
               ((g$ls/false$8664$5uPkq)
                (if (if g$ls/false$8664$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8665$5uPkq g$val$8666$5uPkq)
                             (g$id?$8018$5uPkq g$id$8665$5uPkq)))
                          g$ls/false$8664$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8667$5uPkq g$val$8668$5uPkq)
                       (values g$id$8667$5uPkq g$val$8668$5uPkq)))
                    g$ls/false$8664$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8663$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$8663$5uPkq '(_ any any)))))
         g$x$8662$5uPkq))))
   (g$scheme-stx-hashtable$8238$5uPkq
     g$scheme-stx-hashtable$11729$5uPkq
     (g$make-eq-hashtable$6188$5uPkq))
   (g$scheme-stx$8239$5uPkq
     g$scheme-stx$11730$5uPkq
     (case-lambda
       ((g$sym$8669$5uPkq)
        ((case-lambda
           ((g$t$8670$5uPkq)
            (if g$t$8670$5uPkq
              g$t$8670$5uPkq
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8671$5uPkq)
                    ((case-lambda
                       ((g$stx$8672$5uPkq)
                        ((case-lambda
                           ((g$stx$8673$5uPkq)
                            (begin
                              (g$hashtable-set!$6192$5uPkq
                                g$scheme-stx-hashtable$8238$5uPkq
                                g$sym$8669$5uPkq
                                g$stx$8673$5uPkq)
                              g$stx$8673$5uPkq)))
                         ((case-lambda
                            ((g$t$8674$5uPkq)
                             (if g$t$8674$5uPkq
                               ((case-lambda
                                  ((g$x$8675$5uPkq)
                                   ((case-lambda
                                      ((g$name$8676$5uPkq g$label$8677$5uPkq)
                                       (g$add-subst$8008$5uPkq
                                         (g$make-rib$7967$5uPkq
                                           (list g$name$8676$5uPkq)
                                           (list g$top-mark*$7955$5uPkq)
                                           (list g$label$8677$5uPkq)
                                           '#f
                                           '#f)
                                         g$stx$8672$5uPkq)))
                                    (car g$x$8675$5uPkq)
                                    (cdr g$x$8675$5uPkq))))
                                g$t$8674$5uPkq)
                               g$stx$8672$5uPkq)))
                          (g$assq$5747$5uPkq
                            g$sym$8669$5uPkq
                            g$subst$8671$5uPkq)))))
                     (g$make-stx$7991$5uPkq
                       g$sym$8669$5uPkq
                       g$top-mark*$7955$5uPkq
                       '()
                       '()))))
                 (g$library-subst$7785$5uPkq
                   (g$find-library-by-name$7821$5uPkq
                     '(psyntax system $all))))))))
         (g$hashtable-ref$6191$5uPkq
           g$scheme-stx-hashtable$8238$5uPkq
           g$sym$8669$5uPkq
           '#f)))))
   (g$lexical-var$8240$5uPkq g$lexical-var$11731$5uPkq car)
   (g$lexical-mutable?$8241$5uPkq g$lexical-mutable?$11732$5uPkq cdr)
   (g$set-lexical-mutable!$8242$5uPkq
     g$set-lexical-mutable!$11733$5uPkq
     set-cdr!)
   (g$add-lexical$8243$5uPkq
     g$add-lexical$11734$5uPkq
     (case-lambda
       ((g$lab$8678$5uPkq g$lex$8679$5uPkq g$r$8680$5uPkq)
        (cons
          (g$cons*$5761$5uPkq g$lab$8678$5uPkq 'lexical g$lex$8679$5uPkq '#f)
          g$r$8680$5uPkq))))
   (g$add-lexicals$8244$5uPkq
     g$add-lexicals$11735$5uPkq
     (case-lambda
       ((g$lab*$8681$5uPkq g$lex*$8682$5uPkq g$r$8683$5uPkq)
        (if (null? g$lab*$8681$5uPkq)
          g$r$8683$5uPkq
          (g$add-lexicals$8244$5uPkq
            (cdr g$lab*$8681$5uPkq)
            (cdr g$lex*$8682$5uPkq)
            (g$add-lexical$8243$5uPkq
              (car g$lab*$8681$5uPkq)
              (car g$lex*$8682$5uPkq)
              g$r$8683$5uPkq))))))
   (g$letrec-helper$8245$5uPkq
     g$letrec-helper$11736$5uPkq
     (case-lambda
       ((g$e$8684$5uPkq g$r$8685$5uPkq g$mr$8686$5uPkq g$build$8687$5uPkq)
        ((case-lambda
           ((g$t$8688$5uPkq)
            ((case-lambda
               ((g$ls/false$8689$5uPkq)
                (if g$ls/false$8689$5uPkq
                  (apply
                    (case-lambda
                      ((g$lhs*$8690$5uPkq
                         g$rhs*$8691$5uPkq
                         g$b$8692$5uPkq
                         g$b*$8693$5uPkq)
                       (if (not (g$valid-bound-ids?$8023$5uPkq
                                  g$lhs*$8690$5uPkq))
                         (g$invalid-fmls-error$8261$5uPkq
                           g$e$8684$5uPkq
                           g$lhs*$8690$5uPkq)
                         ((case-lambda
                            ((g$lex*$8694$5uPkq g$lab*$8695$5uPkq)
                             ((case-lambda
                                ((g$rib$8696$5uPkq g$r$8697$5uPkq)
                                 ((case-lambda
                                    ((g$body$8698$5uPkq g$rhs*$8699$5uPkq)
                                     (g$build$8687$5uPkq
                                       '#f
                                       g$lex*$8694$5uPkq
                                       g$rhs*$8699$5uPkq
                                       g$body$8698$5uPkq)))
                                  (g$chi-internal$8325$5uPkq
                                    (g$add-subst$8008$5uPkq
                                      g$rib$8696$5uPkq
                                      (cons g$b$8692$5uPkq g$b*$8693$5uPkq))
                                    g$r$8697$5uPkq
                                    g$mr$8686$5uPkq)
                                  (g$chi-expr*$8312$5uPkq
                                    (g$map$5759$5uPkq
                                      (case-lambda
                                        ((g$x$8700$5uPkq)
                                         (g$add-subst$8008$5uPkq
                                           g$rib$8696$5uPkq
                                           g$x$8700$5uPkq)))
                                      g$rhs*$8691$5uPkq)
                                    g$r$8697$5uPkq
                                    g$mr$8686$5uPkq))))
                              (g$make-full-rib$7986$5uPkq
                                g$lhs*$8690$5uPkq
                                g$lab*$8695$5uPkq)
                              (g$add-lexicals$8244$5uPkq
                                g$lab*$8695$5uPkq
                                g$lex*$8694$5uPkq
                                g$r$8685$5uPkq))))
                          (g$map$5759$5uPkq
                            g$gen-lexical$7957$5uPkq
                            g$lhs*$8690$5uPkq)
                          (g$map$5759$5uPkq
                            g$gen-label$7959$5uPkq
                            g$lhs*$8690$5uPkq)))))
                    g$ls/false$8689$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8688$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8688$5uPkq
               '(_ #(each (any any)) any . each-any)))))
         g$e$8684$5uPkq))))
   (g$letrec-transformer$8246$5uPkq
     g$letrec-transformer$11737$5uPkq
     (case-lambda
       ((g$e$8701$5uPkq g$r$8702$5uPkq g$mr$8703$5uPkq)
        (g$letrec-helper$8245$5uPkq
          g$e$8701$5uPkq
          g$r$8702$5uPkq
          g$mr$8703$5uPkq
          g$build-letrec$7949$5uPkq))))
   (g$letrec*-transformer$8247$5uPkq
     g$letrec*-transformer$11738$5uPkq
     (case-lambda
       ((g$e$8704$5uPkq g$r$8705$5uPkq g$mr$8706$5uPkq)
        (g$letrec-helper$8245$5uPkq
          g$e$8704$5uPkq
          g$r$8705$5uPkq
          g$mr$8706$5uPkq
          g$build-letrec*$7950$5uPkq))))
   (g$fluid-let-syntax-transformer$8248$5uPkq
     g$fluid-let-syntax-transformer$11739$5uPkq
     (case-lambda
       ((g$e$8707$5uPkq g$r$8708$5uPkq g$mr$8709$5uPkq)
        (letrec* ((g$lookup$8710$5uPkq
                    (case-lambda
                      ((g$x$8720$5uPkq)
                       ((case-lambda
                          ((g$t$8721$5uPkq)
                           (if g$t$8721$5uPkq
                             g$t$8721$5uPkq
                             (begin
                               '#f
                               (g$syntax-violation$8407$5uPkq
                                 '#f
                                 '"unbound identifier"
                                 g$e$8707$5uPkq
                                 g$x$8720$5uPkq)))))
                        (g$id->label$8031$5uPkq g$x$8720$5uPkq))))))
          ((case-lambda
             ((g$t$8711$5uPkq)
              ((case-lambda
                 ((g$ls/false$8712$5uPkq)
                  (if g$ls/false$8712$5uPkq
                    (apply
                      (case-lambda
                        ((g$lhs*$8713$5uPkq
                           g$rhs*$8714$5uPkq
                           g$b$8715$5uPkq
                           g$b*$8716$5uPkq)
                         (if (not (g$valid-bound-ids?$8023$5uPkq
                                    g$lhs*$8713$5uPkq))
                           (g$invalid-fmls-error$8261$5uPkq
                             g$e$8707$5uPkq
                             g$lhs*$8713$5uPkq)
                           ((case-lambda
                              ((g$lab*$8717$5uPkq g$rhs*$8718$5uPkq)
                               (g$chi-internal$8325$5uPkq
                                 (cons g$b$8715$5uPkq g$b*$8716$5uPkq)
                                 (append
                                   (g$map$5759$5uPkq
                                     cons
                                     g$lab*$8717$5uPkq
                                     g$rhs*$8718$5uPkq)
                                   g$r$8708$5uPkq)
                                 (append
                                   (g$map$5759$5uPkq
                                     cons
                                     g$lab*$8717$5uPkq
                                     g$rhs*$8718$5uPkq)
                                   g$mr$8709$5uPkq))))
                            (g$map$5759$5uPkq
                              g$lookup$8710$5uPkq
                              g$lhs*$8713$5uPkq)
                            (g$map$5759$5uPkq
                              (case-lambda
                                ((g$x$8719$5uPkq)
                                 (g$make-eval-transformer$8050$5uPkq
                                   (g$expand-transformer$8341$5uPkq
                                     g$x$8719$5uPkq
                                     g$mr$8709$5uPkq))))
                              g$rhs*$8714$5uPkq)))))
                      g$ls/false$8712$5uPkq)
                    (g$syntax-violation$8407$5uPkq
                      '#f
                      '"invalid syntax"
                      g$t$8711$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq
                 g$t$8711$5uPkq
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8707$5uPkq)))))
   (g$type-descriptor-transformer$8249$5uPkq
     g$type-descriptor-transformer$11740$5uPkq
     (case-lambda
       ((g$e$8722$5uPkq g$r$8723$5uPkq g$mr$8724$5uPkq)
        ((case-lambda
           ((g$t$8725$5uPkq)
            ((case-lambda
               ((g$ls/false$8726$5uPkq)
                (if (if g$ls/false$8726$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8727$5uPkq)
                             (g$id?$8018$5uPkq g$id$8727$5uPkq)))
                          g$ls/false$8726$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8728$5uPkq)
                       ((case-lambda
                          ((g$lab$8729$5uPkq)
                           ((case-lambda
                              ((g$b$8730$5uPkq)
                               ((case-lambda
                                  ((g$type$8731$5uPkq)
                                   (begin
                                     (if (not g$lab$8729$5uPkq)
                                       (g$raise-unbound-error$8037$5uPkq
                                         g$id$8728$5uPkq)
                                       (void))
                                     (if (not (if (eq? g$type$8731$5uPkq '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$8036$5uPkq
                                                           g$b$8730$5uPkq))))
                                                '#f))
                                       (g$syntax-violation$8407$5uPkq
                                         '#f
                                         '"not a record type"
                                         g$e$8722$5uPkq)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$8036$5uPkq
                                         g$b$8730$5uPkq)))))
                                (g$binding-type$8035$5uPkq g$b$8730$5uPkq))))
                            (g$label->binding$8033$5uPkq
                              g$lab$8729$5uPkq
                              g$r$8723$5uPkq))))
                        (g$id->label$8031$5uPkq g$id$8728$5uPkq))))
                    g$ls/false$8726$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8725$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$8725$5uPkq '(_ any)))))
         g$e$8722$5uPkq))))
   (g$record-type-descriptor-transformer$8250$5uPkq
     g$record-type-descriptor-transformer$11741$5uPkq
     (case-lambda
       ((g$e$8732$5uPkq g$r$8733$5uPkq g$mr$8734$5uPkq)
        ((case-lambda
           ((g$t$8735$5uPkq)
            ((case-lambda
               ((g$ls/false$8736$5uPkq)
                (if (if g$ls/false$8736$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8737$5uPkq)
                             (g$id?$8018$5uPkq g$id$8737$5uPkq)))
                          g$ls/false$8736$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8738$5uPkq)
                       ((case-lambda
                          ((g$lab$8739$5uPkq)
                           ((case-lambda
                              ((g$b$8740$5uPkq)
                               ((case-lambda
                                  ((g$type$8741$5uPkq)
                                   (begin
                                     (if (not g$lab$8739$5uPkq)
                                       (g$raise-unbound-error$8037$5uPkq
                                         g$id$8738$5uPkq)
                                       (void))
                                     (if (not (if (eq? g$type$8741$5uPkq '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$8036$5uPkq
                                                      g$b$8740$5uPkq)))
                                                '#f))
                                       (g$syntax-violation$8407$5uPkq
                                         '#f
                                         '"not a record type"
                                         g$e$8732$5uPkq)
                                       (void))
                                     (g$chi-expr$8314$5uPkq
                                       (car (g$binding-value$8036$5uPkq
                                              g$b$8740$5uPkq))
                                       g$r$8733$5uPkq
                                       g$mr$8734$5uPkq))))
                                (g$binding-type$8035$5uPkq g$b$8740$5uPkq))))
                            (g$label->binding$8033$5uPkq
                              g$lab$8739$5uPkq
                              g$r$8733$5uPkq))))
                        (g$id->label$8031$5uPkq g$id$8738$5uPkq))))
                    g$ls/false$8736$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8735$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$8735$5uPkq '(_ any)))))
         g$e$8732$5uPkq))))
   (g$record-constructor-descriptor-transformer$8251$5uPkq
     g$record-constructor-descriptor-transformer$11742$5uPkq
     (case-lambda
       ((g$e$8742$5uPkq g$r$8743$5uPkq g$mr$8744$5uPkq)
        ((case-lambda
           ((g$t$8745$5uPkq)
            ((case-lambda
               ((g$ls/false$8746$5uPkq)
                (if (if g$ls/false$8746$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8747$5uPkq)
                             (g$id?$8018$5uPkq g$id$8747$5uPkq)))
                          g$ls/false$8746$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8748$5uPkq)
                       ((case-lambda
                          ((g$lab$8749$5uPkq)
                           ((case-lambda
                              ((g$b$8750$5uPkq)
                               ((case-lambda
                                  ((g$type$8751$5uPkq)
                                   (begin
                                     (if (not g$lab$8749$5uPkq)
                                       (g$raise-unbound-error$8037$5uPkq
                                         g$id$8748$5uPkq)
                                       (void))
                                     (if (not (if (eq? g$type$8751$5uPkq '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$8036$5uPkq
                                                      g$b$8750$5uPkq)))
                                                '#f))
                                       (g$syntax-violation$8407$5uPkq
                                         '#f
                                         '"invalid type"
                                         g$e$8742$5uPkq)
                                       (void))
                                     (g$chi-expr$8314$5uPkq
                                       (g$cadr$5923$5uPkq
                                         (g$binding-value$8036$5uPkq
                                           g$b$8750$5uPkq))
                                       g$r$8743$5uPkq
                                       g$mr$8744$5uPkq))))
                                (g$binding-type$8035$5uPkq g$b$8750$5uPkq))))
                            (g$label->binding$8033$5uPkq
                              g$lab$8749$5uPkq
                              g$r$8743$5uPkq))))
                        (g$id->label$8031$5uPkq g$id$8748$5uPkq))))
                    g$ls/false$8746$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8745$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$8745$5uPkq '(_ any)))))
         g$e$8742$5uPkq))))
   (g$when-macro$8252$5uPkq
     g$when-macro$11743$5uPkq
     (case-lambda
       ((g$e$8752$5uPkq)
        ((case-lambda
           ((g$t$8753$5uPkq)
            ((case-lambda
               ((g$ls/false$8754$5uPkq)
                (if g$ls/false$8754$5uPkq
                  (apply
                    (case-lambda
                      ((g$test$8755$5uPkq g$e$8756$5uPkq g$e*$8757$5uPkq)
                       (g$bless$8259$5uPkq
                         (list
                           'if
                           g$test$8755$5uPkq
                           (cons
                             'begin
                             (cons g$e$8756$5uPkq g$e*$8757$5uPkq))))))
                    g$ls/false$8754$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8753$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8753$5uPkq
               '(_ any any . each-any)))))
         g$e$8752$5uPkq))))
   (g$unless-macro$8253$5uPkq
     g$unless-macro$11744$5uPkq
     (case-lambda
       ((g$e$8758$5uPkq)
        ((case-lambda
           ((g$t$8759$5uPkq)
            ((case-lambda
               ((g$ls/false$8760$5uPkq)
                (if g$ls/false$8760$5uPkq
                  (apply
                    (case-lambda
                      ((g$test$8761$5uPkq g$e$8762$5uPkq g$e*$8763$5uPkq)
                       (g$bless$8259$5uPkq
                         (list
                           'if
                           (list 'not g$test$8761$5uPkq)
                           (cons
                             'begin
                             (cons g$e$8762$5uPkq g$e*$8763$5uPkq))))))
                    g$ls/false$8760$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8759$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8759$5uPkq
               '(_ any any . each-any)))))
         g$e$8758$5uPkq))))
   (g$if-transformer$8254$5uPkq
     g$if-transformer$11745$5uPkq
     (case-lambda
       ((g$e$8764$5uPkq g$r$8765$5uPkq g$mr$8766$5uPkq)
        ((case-lambda
           ((g$t$8767$5uPkq)
            ((case-lambda
               ((g$ls/false$8768$5uPkq)
                (if g$ls/false$8768$5uPkq
                  (apply
                    (case-lambda
                      ((g$e0$8769$5uPkq g$e1$8770$5uPkq g$e2$8771$5uPkq)
                       (list
                         'if
                         (g$chi-expr$8314$5uPkq
                           g$e0$8769$5uPkq
                           g$r$8765$5uPkq
                           g$mr$8766$5uPkq)
                         (g$chi-expr$8314$5uPkq
                           g$e1$8770$5uPkq
                           g$r$8765$5uPkq
                           g$mr$8766$5uPkq)
                         (g$chi-expr$8314$5uPkq
                           g$e2$8771$5uPkq
                           g$r$8765$5uPkq
                           g$mr$8766$5uPkq))))
                    g$ls/false$8768$5uPkq)
                  ((case-lambda
                     ((g$t$8772$5uPkq)
                      ((case-lambda
                         ((g$ls/false$8773$5uPkq)
                          (if g$ls/false$8773$5uPkq
                            (apply
                              (case-lambda
                                ((g$e0$8774$5uPkq g$e1$8775$5uPkq)
                                 (list
                                   'if
                                   (g$chi-expr$8314$5uPkq
                                     g$e0$8774$5uPkq
                                     g$r$8765$5uPkq
                                     g$mr$8766$5uPkq)
                                   (g$chi-expr$8314$5uPkq
                                     g$e1$8775$5uPkq
                                     g$r$8765$5uPkq
                                     g$mr$8766$5uPkq)
                                   (g$build-void$7948$5uPkq))))
                              g$ls/false$8773$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$8772$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$8772$5uPkq
                         '(_ any any)))))
                   g$t$8767$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$8767$5uPkq '(_ any any any)))))
         g$e$8764$5uPkq))))
   (g$case-macro$8255$5uPkq
     g$case-macro$11746$5uPkq
     (case-lambda
       ((g$e$8776$5uPkq)
        (letrec* ((g$build-last$8777$5uPkq
                    (case-lambda
                      ((g$cls$8797$5uPkq)
                       ((case-lambda
                          ((g$t$8798$5uPkq)
                           ((case-lambda
                              ((g$ls/false$8799$5uPkq)
                               (if g$ls/false$8799$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$e$8800$5uPkq g$e*$8801$5uPkq)
                                      (cons
                                        'begin
                                        (cons g$e$8800$5uPkq g$e*$8801$5uPkq))))
                                   g$ls/false$8799$5uPkq)
                                 ((case-lambda
                                    ((g$t$8802$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$8803$5uPkq)
                                         (if g$ls/false$8803$5uPkq
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8778$5uPkq
                                                  g$cls$8797$5uPkq
                                                  '(if #f #f))))
                                             g$ls/false$8803$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$t$8802$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$8802$5uPkq
                                        '_))))
                                  g$t$8798$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$8798$5uPkq
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8797$5uPkq))))
                  (g$build-one$8778$5uPkq
                    (case-lambda
                      ((g$cls$8790$5uPkq g$k$8791$5uPkq)
                       ((case-lambda
                          ((g$t$8792$5uPkq)
                           ((case-lambda
                              ((g$ls/false$8793$5uPkq)
                               (if g$ls/false$8793$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$d*$8794$5uPkq
                                        g$e$8795$5uPkq
                                        g$e*$8796$5uPkq)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8794$5uPkq))
                                        (cons
                                          'begin
                                          (cons g$e$8795$5uPkq g$e*$8796$5uPkq))
                                        g$k$8791$5uPkq)))
                                   g$ls/false$8793$5uPkq)
                                 (g$syntax-violation$8407$5uPkq
                                   '#f
                                   '"invalid syntax"
                                   g$t$8792$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$8792$5uPkq
                              '(each-any any . each-any)))))
                        g$cls$8790$5uPkq)))))
          ((case-lambda
             ((g$t$8779$5uPkq)
              ((case-lambda
                 ((g$ls/false$8780$5uPkq)
                  (if g$ls/false$8780$5uPkq
                    (apply
                      (case-lambda
                        ((g$expr$8781$5uPkq)
                         (g$bless$8259$5uPkq
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8781$5uPkq))
                               '((if #f #f)))))))
                      g$ls/false$8780$5uPkq)
                    ((case-lambda
                       ((g$t$8782$5uPkq)
                        ((case-lambda
                           ((g$ls/false$8783$5uPkq)
                            (if g$ls/false$8783$5uPkq
                              (apply
                                (case-lambda
                                  ((g$expr$8784$5uPkq
                                     g$cls$8785$5uPkq
                                     g$cls*$8786$5uPkq)
                                   (g$bless$8259$5uPkq
                                     (list
                                       'let
                                       (list (list 't g$expr$8784$5uPkq))
                                       ((letrec ((g$f$8787$5uPkq
                                                   (case-lambda
                                                     ((g$cls$8788$5uPkq
                                                        g$cls*$8789$5uPkq)
                                                      (if (null?
                                                            g$cls*$8789$5uPkq)
                                                        (g$build-last$8777$5uPkq
                                                          g$cls$8788$5uPkq)
                                                        (g$build-one$8778$5uPkq
                                                          g$cls$8788$5uPkq
                                                          (g$f$8787$5uPkq
                                                            (car g$cls*$8789$5uPkq)
                                                            (cdr g$cls*$8789$5uPkq))))))))
                                          g$f$8787$5uPkq)
                                        g$cls$8785$5uPkq
                                        g$cls*$8786$5uPkq)))))
                                g$ls/false$8783$5uPkq)
                              (g$syntax-violation$8407$5uPkq
                                '#f
                                '"invalid syntax"
                                g$t$8782$5uPkq))))
                         (g$syntax-dispatch$8296$5uPkq
                           g$t$8782$5uPkq
                           '(_ any any . each-any)))))
                     g$t$8779$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq g$t$8779$5uPkq '(_ any)))))
           g$e$8776$5uPkq)))))
   (g$quote-transformer$8256$5uPkq
     g$quote-transformer$11747$5uPkq
     (case-lambda
       ((g$e$8804$5uPkq g$r$8805$5uPkq g$mr$8806$5uPkq)
        ((case-lambda
           ((g$t$8807$5uPkq)
            ((case-lambda
               ((g$ls/false$8808$5uPkq)
                (if g$ls/false$8808$5uPkq
                  (apply
                    (case-lambda
                      ((g$datum$8809$5uPkq)
                       (list
                         'quote
                         (g$stx->datum$8029$5uPkq g$datum$8809$5uPkq))))
                    g$ls/false$8808$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8807$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$8807$5uPkq '(_ any)))))
         g$e$8804$5uPkq))))
   (g$case-lambda-transformer$8257$5uPkq
     g$case-lambda-transformer$11748$5uPkq
     (case-lambda
       ((g$e$8810$5uPkq g$r$8811$5uPkq g$mr$8812$5uPkq)
        ((case-lambda
           ((g$t$8813$5uPkq)
            ((case-lambda
               ((g$ls/false$8814$5uPkq)
                (if g$ls/false$8814$5uPkq
                  (apply
                    (case-lambda
                      ((g$fmls*$8815$5uPkq g$b*$8816$5uPkq g$b**$8817$5uPkq)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8318$5uPkq
                              g$e$8810$5uPkq
                              g$fmls*$8815$5uPkq
                              (g$map$5759$5uPkq
                                cons
                                g$b*$8816$5uPkq
                                g$b**$8817$5uPkq)
                              g$r$8811$5uPkq
                              g$mr$8812$5uPkq)))
                         (case-lambda
                           ((g$fmls*$8820$5uPkq g$body*$8821$5uPkq)
                            ((case-lambda
                               ((g$body*$8822$5uPkq g$fmls*$8823$5uPkq)
                                (g$build-case-lambda$7945$5uPkq
                                  '#f
                                  g$fmls*$8823$5uPkq
                                  g$body*$8822$5uPkq)))
                             g$body*$8821$5uPkq
                             g$fmls*$8820$5uPkq))))))
                    g$ls/false$8814$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8813$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8813$5uPkq
               '(_ . #(each (any any . each-any)))))))
         g$e$8810$5uPkq))))
   (g$lambda-transformer$8258$5uPkq
     g$lambda-transformer$11749$5uPkq
     (case-lambda
       ((g$e$8824$5uPkq g$r$8825$5uPkq g$mr$8826$5uPkq)
        ((case-lambda
           ((g$t$8827$5uPkq)
            ((case-lambda
               ((g$ls/false$8828$5uPkq)
                (if g$ls/false$8828$5uPkq
                  (apply
                    (case-lambda
                      ((g$fmls$8829$5uPkq g$b$8830$5uPkq g$b*$8831$5uPkq)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8317$5uPkq
                              g$e$8824$5uPkq
                              g$fmls$8829$5uPkq
                              (cons g$b$8830$5uPkq g$b*$8831$5uPkq)
                              g$r$8825$5uPkq
                              g$mr$8826$5uPkq)))
                         (case-lambda
                           ((g$fmls$8834$5uPkq g$body$8835$5uPkq)
                            ((case-lambda
                               ((g$body$8836$5uPkq g$fmls$8837$5uPkq)
                                (g$build-lambda$7944$5uPkq
                                  '#f
                                  g$fmls$8837$5uPkq
                                  g$body$8836$5uPkq)))
                             g$body$8835$5uPkq
                             g$fmls$8834$5uPkq))))))
                    g$ls/false$8828$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8827$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8827$5uPkq
               '(_ any any . each-any)))))
         g$e$8824$5uPkq))))
   (g$bless$8259$5uPkq
     g$bless$11750$5uPkq
     (case-lambda
       ((g$x$8838$5uPkq)
        (g$mkstx$8006$5uPkq
          ((letrec ((g$f$8839$5uPkq
                      (case-lambda
                        ((g$x$8840$5uPkq)
                         (if (g$stx?$7990$5uPkq g$x$8840$5uPkq)
                           g$x$8840$5uPkq
                           (if (pair? g$x$8840$5uPkq)
                             (cons
                               (g$f$8839$5uPkq (car g$x$8840$5uPkq))
                               (g$f$8839$5uPkq (cdr g$x$8840$5uPkq)))
                             (if (symbol? g$x$8840$5uPkq)
                               (g$scheme-stx$8239$5uPkq g$x$8840$5uPkq)
                               (if (vector? g$x$8840$5uPkq)
                                 (vector-map g$f$8839$5uPkq g$x$8840$5uPkq)
                                 g$x$8840$5uPkq))))))))
             g$f$8839$5uPkq)
           g$x$8838$5uPkq)
          '()
          '()
          '()))))
   (g$with-syntax-macro$8260$5uPkq
     g$with-syntax-macro$11751$5uPkq
     (case-lambda
       ((g$e$8841$5uPkq)
        ((case-lambda
           ((g$t$8842$5uPkq)
            ((case-lambda
               ((g$ls/false$8843$5uPkq)
                (if g$ls/false$8843$5uPkq
                  (apply
                    (case-lambda
                      ((g$pat*$8844$5uPkq
                         g$expr*$8845$5uPkq
                         g$b$8846$5uPkq
                         g$b*$8847$5uPkq)
                       ((case-lambda
                          ((g$idn*$8848$5uPkq)
                           (begin
                             (g$verify-formals$8316$5uPkq
                               (g$map$5759$5uPkq car g$idn*$8848$5uPkq)
                               g$e$8841$5uPkq)
                             ((case-lambda
                                ((g$t*$8849$5uPkq)
                                 (g$bless$8259$5uPkq
                                   (list
                                     'let
                                     (g$map$5759$5uPkq
                                       list
                                       g$t*$8849$5uPkq
                                       g$expr*$8845$5uPkq)
                                     ((letrec ((g$f$8850$5uPkq
                                                 (case-lambda
                                                   ((g$pat*$8851$5uPkq
                                                      g$t*$8852$5uPkq)
                                                    (if (null?
                                                          g$pat*$8851$5uPkq)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8846$5uPkq
                                                            g$b*$8847$5uPkq)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8852$5uPkq)
                                                        '()
                                                        (list
                                                          (car g$pat*$8851$5uPkq)
                                                          (g$f$8850$5uPkq
                                                            (cdr g$pat*$8851$5uPkq)
                                                            (cdr g$t*$8852$5uPkq)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8851$5uPkq))
                                                            (car g$t*$8852$5uPkq)))))))))
                                        g$f$8850$5uPkq)
                                      g$pat*$8844$5uPkq
                                      g$t*$8849$5uPkq)))))
                              (g$generate-temporaries$8397$5uPkq
                                g$expr*$8845$5uPkq)))))
                        ((letrec ((g$f$8853$5uPkq
                                    (case-lambda
                                      ((g$pat*$8854$5uPkq)
                                       (if (null? g$pat*$8854$5uPkq)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$8295$5uPkq
                                                (car g$pat*$8854$5uPkq)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8857$5uPkq
                                                g$idn*$8858$5uPkq)
                                              ((case-lambda
                                                 ((g$idn*$8859$5uPkq
                                                    g$pat$8860$5uPkq)
                                                  (append
                                                    g$idn*$8859$5uPkq
                                                    (g$f$8853$5uPkq
                                                      (cdr g$pat*$8854$5uPkq)))))
                                               g$idn*$8858$5uPkq
                                               g$pat$8857$5uPkq)))))))))
                           g$f$8853$5uPkq)
                         g$pat*$8844$5uPkq))))
                    g$ls/false$8843$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$8842$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8842$5uPkq
               '(_ #(each (any any)) any . each-any)))))
         g$e$8841$5uPkq))))
   (g$invalid-fmls-error$8261$5uPkq
     g$invalid-fmls-error$11752$5uPkq
     (case-lambda
       ((g$stx$8861$5uPkq g$fmls$8862$5uPkq)
        ((case-lambda
           ((g$t$8863$5uPkq)
            ((case-lambda
               ((g$ls/false$8864$5uPkq)
                (if g$ls/false$8864$5uPkq
                  (apply
                    (case-lambda
                      ((g$id*$8865$5uPkq g$last$8866$5uPkq)
                       ((letrec ((g$f$8867$5uPkq
                                   (case-lambda
                                     ((g$id*$8868$5uPkq)
                                      (if (null? g$id*$8868$5uPkq)
                                        (values)
                                        (if (not (g$id?$8018$5uPkq
                                                   (car g$id*$8868$5uPkq)))
                                          (g$syntax-violation$8407$5uPkq
                                            '#f
                                            '"not an identifier"
                                            g$stx$8861$5uPkq
                                            (car g$id*$8868$5uPkq))
                                          (begin
                                            (g$f$8867$5uPkq
                                              (cdr g$id*$8868$5uPkq))
                                            (if (g$bound-id-member?$8025$5uPkq
                                                  (car g$id*$8868$5uPkq)
                                                  (cdr g$id*$8868$5uPkq))
                                              (g$syntax-violation$8407$5uPkq
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8861$5uPkq
                                                (car g$id*$8868$5uPkq))
                                              (void)))))))))
                          g$f$8867$5uPkq)
                        (if (g$id?$8018$5uPkq g$last$8866$5uPkq)
                          (cons g$last$8866$5uPkq g$id*$8865$5uPkq)
                          (if (g$syntax-null?$8013$5uPkq g$last$8866$5uPkq)
                            g$id*$8865$5uPkq
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"not an identifier"
                              g$stx$8861$5uPkq
                              g$last$8866$5uPkq))))))
                    g$ls/false$8864$5uPkq)
                  ((case-lambda
                     ((g$t$8869$5uPkq)
                      ((case-lambda
                         ((g$ls/false$8870$5uPkq)
                          (if g$ls/false$8870$5uPkq
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8407$5uPkq
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8861$5uPkq
                                   g$fmls$8862$5uPkq)))
                              g$ls/false$8870$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$8869$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq g$t$8869$5uPkq '_))))
                   g$t$8863$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8863$5uPkq
               '#(each+ any () any)))))
         g$fmls$8862$5uPkq))))
   (g$let-macro$8262$5uPkq
     g$let-macro$11753$5uPkq
     (case-lambda
       ((g$stx$8871$5uPkq)
        ((case-lambda
           ((g$t$8872$5uPkq)
            ((case-lambda
               ((g$ls/false$8873$5uPkq)
                (if g$ls/false$8873$5uPkq
                  (apply
                    (case-lambda
                      ((g$lhs*$8874$5uPkq
                         g$rhs*$8875$5uPkq
                         g$b$8876$5uPkq
                         g$b*$8877$5uPkq)
                       (if (g$valid-bound-ids?$8023$5uPkq g$lhs*$8874$5uPkq)
                         (g$bless$8259$5uPkq
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8874$5uPkq
                                 (cons g$b$8876$5uPkq g$b*$8877$5uPkq)))
                             g$rhs*$8875$5uPkq))
                         (g$invalid-fmls-error$8261$5uPkq
                           g$stx$8871$5uPkq
                           g$lhs*$8874$5uPkq))))
                    g$ls/false$8873$5uPkq)
                  ((case-lambda
                     ((g$t$8878$5uPkq)
                      ((case-lambda
                         ((g$ls/false$8879$5uPkq)
                          (if (if g$ls/false$8879$5uPkq
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8880$5uPkq
                                         g$lhs*$8881$5uPkq
                                         g$rhs*$8882$5uPkq
                                         g$b$8883$5uPkq
                                         g$b*$8884$5uPkq)
                                       (g$id?$8018$5uPkq g$f$8880$5uPkq)))
                                    g$ls/false$8879$5uPkq))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8885$5uPkq
                                   g$lhs*$8886$5uPkq
                                   g$rhs*$8887$5uPkq
                                   g$b$8888$5uPkq
                                   g$b*$8889$5uPkq)
                                 (if (g$valid-bound-ids?$8023$5uPkq
                                       g$lhs*$8886$5uPkq)
                                   (g$bless$8259$5uPkq
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8885$5uPkq
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8886$5uPkq
                                                 (cons
                                                   g$b$8888$5uPkq
                                                   g$b*$8889$5uPkq)))))
                                         g$f$8885$5uPkq)
                                       g$rhs*$8887$5uPkq))
                                   (g$invalid-fmls-error$8261$5uPkq
                                     g$stx$8871$5uPkq
                                     g$lhs*$8886$5uPkq))))
                              g$ls/false$8879$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$8878$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$8878$5uPkq
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8872$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8872$5uPkq
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8871$5uPkq))))
   (g$let-values-macro$8263$5uPkq
     g$let-values-macro$11754$5uPkq
     (case-lambda
       ((g$stx$8890$5uPkq)
        (letrec* ((g$rename$8891$5uPkq
                    (case-lambda
                      ((g$x$8942$5uPkq g$old*$8943$5uPkq g$new*$8944$5uPkq)
                       (begin
                         (if (not (g$id?$8018$5uPkq g$x$8942$5uPkq))
                           (g$syntax-violation$8407$5uPkq
                             '#f
                             '"not an indentifier"
                             g$stx$8890$5uPkq
                             g$x$8942$5uPkq)
                           (void))
                         (if (g$bound-id-member?$8025$5uPkq
                               g$x$8942$5uPkq
                               g$old*$8943$5uPkq)
                           (g$syntax-violation$8407$5uPkq
                             '#f
                             '"duplicate binding"
                             g$stx$8890$5uPkq
                             g$x$8942$5uPkq)
                           (void))
                         ((case-lambda
                            ((g$y$8945$5uPkq)
                             (values
                               g$y$8945$5uPkq
                               (cons g$x$8942$5uPkq g$old*$8943$5uPkq)
                               (cons g$y$8945$5uPkq g$new*$8944$5uPkq))))
                          (gensym
                            (g$syntax->datum$8410$5uPkq g$x$8942$5uPkq)))))))
                  (g$rename*$8892$5uPkq
                    (case-lambda
                      ((g$x*$8933$5uPkq g$old*$8934$5uPkq g$new*$8935$5uPkq)
                       (if (null? g$x*$8933$5uPkq)
                         (values '() g$old*$8934$5uPkq g$new*$8935$5uPkq)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8891$5uPkq
                                (car g$x*$8933$5uPkq)
                                g$old*$8934$5uPkq
                                g$new*$8935$5uPkq)))
                           (case-lambda
                             ((g$x$8936$5uPkq
                                g$old*$8937$5uPkq
                                g$new*$8938$5uPkq)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8892$5uPkq
                                     (cdr g$x*$8933$5uPkq)
                                     g$old*$8937$5uPkq
                                     g$new*$8938$5uPkq)))
                                (case-lambda
                                  ((g$x*$8939$5uPkq
                                     g$old*$8940$5uPkq
                                     g$new*$8941$5uPkq)
                                   (values
                                     (cons g$x$8936$5uPkq g$x*$8939$5uPkq)
                                     g$old*$8940$5uPkq
                                     g$new*$8941$5uPkq))))))))))))
          ((case-lambda
             ((g$t$8893$5uPkq)
              ((case-lambda
                 ((g$ls/false$8894$5uPkq)
                  (if g$ls/false$8894$5uPkq
                    (apply
                      (case-lambda
                        ((g$b$8895$5uPkq g$b*$8896$5uPkq)
                         (g$cons*$5761$5uPkq
                           (g$bless$8259$5uPkq 'let)
                           '()
                           g$b$8895$5uPkq
                           g$b*$8896$5uPkq)))
                      g$ls/false$8894$5uPkq)
                    ((case-lambda
                       ((g$t$8897$5uPkq)
                        ((case-lambda
                           ((g$ls/false$8898$5uPkq)
                            (if g$ls/false$8898$5uPkq
                              (apply
                                (case-lambda
                                  ((g$lhs*$8899$5uPkq
                                     g$rhs*$8900$5uPkq
                                     g$b$8901$5uPkq
                                     g$b*$8902$5uPkq)
                                   (g$bless$8259$5uPkq
                                     ((letrec ((g$f$8903$5uPkq
                                                 (case-lambda
                                                   ((g$lhs*$8904$5uPkq
                                                      g$rhs*$8905$5uPkq
                                                      g$old*$8906$5uPkq
                                                      g$new*$8907$5uPkq)
                                                    (if (null?
                                                          g$lhs*$8904$5uPkq)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$5759$5uPkq
                                                            list
                                                            g$old*$8906$5uPkq
                                                            g$new*$8907$5uPkq)
                                                          (cons
                                                            g$b$8901$5uPkq
                                                            g$b*$8902$5uPkq)))
                                                      ((case-lambda
                                                         ((g$t$8908$5uPkq)
                                                          ((case-lambda
                                                             ((g$ls/false$8909$5uPkq)
                                                              (if g$ls/false$8909$5uPkq
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8910$5uPkq)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8892$5uPkq
                                                                            g$x*$8910$5uPkq
                                                                            g$old*$8906$5uPkq
                                                                            g$new*$8907$5uPkq)))
                                                                       (case-lambda
                                                                         ((g$y*$8914$5uPkq
                                                                            g$old*$8915$5uPkq
                                                                            g$new*$8916$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$new*$8917$5uPkq
                                                                                g$old*$8918$5uPkq
                                                                                g$y*$8919$5uPkq)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8905$5uPkq))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8919$5uPkq
                                                                                  (g$f$8903$5uPkq
                                                                                    (cdr g$lhs*$8904$5uPkq)
                                                                                    (cdr g$rhs*$8905$5uPkq)
                                                                                    g$old*$8918$5uPkq
                                                                                    g$new*$8917$5uPkq)))))
                                                                           g$new*$8916$5uPkq
                                                                           g$old*$8915$5uPkq
                                                                           g$y*$8914$5uPkq))))))
                                                                  g$ls/false$8909$5uPkq)
                                                                ((case-lambda
                                                                   ((g$t$8920$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8921$5uPkq)
                                                                        (if g$ls/false$8921$5uPkq
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8922$5uPkq
                                                                                 g$x$8923$5uPkq)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8891$5uPkq
                                                                                      g$x$8923$5uPkq
                                                                                      g$old*$8906$5uPkq
                                                                                      g$new*$8907$5uPkq)))
                                                                                 (case-lambda
                                                                                   ((g$y$8924$5uPkq
                                                                                      g$old*$8925$5uPkq
                                                                                      g$new*$8926$5uPkq)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8892$5uPkq
                                                                                           g$x*$8922$5uPkq
                                                                                           g$old*$8925$5uPkq
                                                                                           g$new*$8926$5uPkq)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8927$5uPkq
                                                                                           g$old*$8928$5uPkq
                                                                                           g$new*$8929$5uPkq)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8905$5uPkq))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8927$5uPkq
                                                                                               g$y$8924$5uPkq)
                                                                                             (g$f$8903$5uPkq
                                                                                               (cdr g$lhs*$8904$5uPkq)
                                                                                               (cdr g$rhs*$8905$5uPkq)
                                                                                               g$old*$8928$5uPkq
                                                                                               g$new*$8929$5uPkq)))))))))))
                                                                            g$ls/false$8921$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$t$8930$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8931$5uPkq)
                                                                                  (if g$ls/false$8931$5uPkq
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8932$5uPkq)
                                                                                         (g$syntax-violation$8407$5uPkq
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8890$5uPkq
                                                                                           g$others$8932$5uPkq)))
                                                                                      g$ls/false$8931$5uPkq)
                                                                                    (g$syntax-violation$8407$5uPkq
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8930$5uPkq))))
                                                                               (g$syntax-dispatch$8296$5uPkq
                                                                                 g$t$8930$5uPkq
                                                                                 'any))))
                                                                           g$t$8920$5uPkq))))
                                                                     (g$syntax-dispatch$8296$5uPkq
                                                                       g$t$8920$5uPkq
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8908$5uPkq))))
                                                           (g$syntax-dispatch$8296$5uPkq
                                                             g$t$8908$5uPkq
                                                             'each-any))))
                                                       (car g$lhs*$8904$5uPkq)))))))
                                        g$f$8903$5uPkq)
                                      g$lhs*$8899$5uPkq
                                      g$rhs*$8900$5uPkq
                                      '()
                                      '()))))
                                g$ls/false$8898$5uPkq)
                              (g$syntax-violation$8407$5uPkq
                                '#f
                                '"invalid syntax"
                                g$t$8897$5uPkq))))
                         (g$syntax-dispatch$8296$5uPkq
                           g$t$8897$5uPkq
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8893$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq
                 g$t$8893$5uPkq
                 '(_ () any . each-any)))))
           g$stx$8890$5uPkq)))))
   (g$let*-values-macro$8264$5uPkq
     g$let*-values-macro$11755$5uPkq
     (case-lambda
       ((g$stx$8946$5uPkq)
        (letrec* ((g$check$8947$5uPkq
                    (case-lambda
                      ((g$x*$8971$5uPkq)
                       (if (not (null? g$x*$8971$5uPkq))
                         ((case-lambda
                            ((g$x$8972$5uPkq)
                             (begin
                               (if (not (g$id?$8018$5uPkq g$x$8972$5uPkq))
                                 (g$syntax-violation$8407$5uPkq
                                   '#f
                                   '"not an identifier"
                                   g$stx$8946$5uPkq
                                   g$x$8972$5uPkq)
                                 (void))
                               (g$check$8947$5uPkq (cdr g$x*$8971$5uPkq))
                               (if (g$bound-id-member?$8025$5uPkq
                                     g$x$8972$5uPkq
                                     (cdr g$x*$8971$5uPkq))
                                 (g$syntax-violation$8407$5uPkq
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8946$5uPkq
                                   g$x$8972$5uPkq)
                                 (void)))))
                          (car g$x*$8971$5uPkq))
                         (void))))))
          ((case-lambda
             ((g$t$8948$5uPkq)
              ((case-lambda
                 ((g$ls/false$8949$5uPkq)
                  (if g$ls/false$8949$5uPkq
                    (apply
                      (case-lambda
                        ((g$b$8950$5uPkq g$b*$8951$5uPkq)
                         (g$cons*$5761$5uPkq
                           (g$bless$8259$5uPkq 'let)
                           '()
                           g$b$8950$5uPkq
                           g$b*$8951$5uPkq)))
                      g$ls/false$8949$5uPkq)
                    ((case-lambda
                       ((g$t$8952$5uPkq)
                        ((case-lambda
                           ((g$ls/false$8953$5uPkq)
                            (if g$ls/false$8953$5uPkq
                              (apply
                                (case-lambda
                                  ((g$lhs*$8954$5uPkq
                                     g$rhs*$8955$5uPkq
                                     g$b$8956$5uPkq
                                     g$b*$8957$5uPkq)
                                   (g$bless$8259$5uPkq
                                     ((letrec ((g$f$8958$5uPkq
                                                 (case-lambda
                                                   ((g$lhs*$8959$5uPkq
                                                      g$rhs*$8960$5uPkq)
                                                    (if (null?
                                                          g$lhs*$8959$5uPkq)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8956$5uPkq
                                                          g$b*$8957$5uPkq))
                                                      ((case-lambda
                                                         ((g$t$8961$5uPkq)
                                                          ((case-lambda
                                                             ((g$ls/false$8962$5uPkq)
                                                              (if g$ls/false$8962$5uPkq
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8963$5uPkq)
                                                                     (begin
                                                                       (g$check$8947$5uPkq
                                                                         g$x*$8963$5uPkq)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8960$5uPkq))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8963$5uPkq
                                                                           (g$f$8958$5uPkq
                                                                             (cdr g$lhs*$8959$5uPkq)
                                                                             (cdr g$rhs*$8960$5uPkq)))))))
                                                                  g$ls/false$8962$5uPkq)
                                                                ((case-lambda
                                                                   ((g$t$8964$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8965$5uPkq)
                                                                        (if g$ls/false$8965$5uPkq
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8966$5uPkq
                                                                                 g$x$8967$5uPkq)
                                                                               (begin
                                                                                 (g$check$8947$5uPkq
                                                                                   (cons
                                                                                     g$x$8967$5uPkq
                                                                                     g$x*$8966$5uPkq))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8960$5uPkq))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8966$5uPkq
                                                                                       g$x$8967$5uPkq)
                                                                                     (g$f$8958$5uPkq
                                                                                       (cdr g$lhs*$8959$5uPkq)
                                                                                       (cdr g$rhs*$8960$5uPkq)))))))
                                                                            g$ls/false$8965$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$t$8968$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8969$5uPkq)
                                                                                  (if g$ls/false$8969$5uPkq
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8970$5uPkq)
                                                                                         (g$syntax-violation$8407$5uPkq
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8946$5uPkq
                                                                                           g$others$8970$5uPkq)))
                                                                                      g$ls/false$8969$5uPkq)
                                                                                    (g$syntax-violation$8407$5uPkq
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8968$5uPkq))))
                                                                               (g$syntax-dispatch$8296$5uPkq
                                                                                 g$t$8968$5uPkq
                                                                                 'any))))
                                                                           g$t$8964$5uPkq))))
                                                                     (g$syntax-dispatch$8296$5uPkq
                                                                       g$t$8964$5uPkq
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8961$5uPkq))))
                                                           (g$syntax-dispatch$8296$5uPkq
                                                             g$t$8961$5uPkq
                                                             'each-any))))
                                                       (car g$lhs*$8959$5uPkq)))))))
                                        g$f$8958$5uPkq)
                                      g$lhs*$8954$5uPkq
                                      g$rhs*$8955$5uPkq))))
                                g$ls/false$8953$5uPkq)
                              (g$syntax-violation$8407$5uPkq
                                '#f
                                '"invalid syntax"
                                g$t$8952$5uPkq))))
                         (g$syntax-dispatch$8296$5uPkq
                           g$t$8952$5uPkq
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8948$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq
                 g$t$8948$5uPkq
                 '(_ () any . each-any)))))
           g$stx$8946$5uPkq)))))
   (g$trace-lambda-macro$8265$5uPkq
     g$trace-lambda-macro$11756$5uPkq
     (case-lambda
       ((g$stx$8973$5uPkq)
        ((case-lambda
           ((g$t$8974$5uPkq)
            ((case-lambda
               ((g$ls/false$8975$5uPkq)
                (if g$ls/false$8975$5uPkq
                  (apply
                    (case-lambda
                      ((g$who$8976$5uPkq
                         g$fmls$8977$5uPkq
                         g$b$8978$5uPkq
                         g$b*$8979$5uPkq)
                       (if (g$valid-bound-ids?$8023$5uPkq g$fmls$8977$5uPkq)
                         (g$bless$8259$5uPkq
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8976$5uPkq)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8977$5uPkq
                                 (cons g$b$8978$5uPkq g$b*$8979$5uPkq)))))
                         (g$invalid-fmls-error$8261$5uPkq
                           g$stx$8973$5uPkq
                           g$fmls$8977$5uPkq))))
                    g$ls/false$8975$5uPkq)
                  ((case-lambda
                     ((g$t$8980$5uPkq)
                      ((case-lambda
                         ((g$ls/false$8981$5uPkq)
                          (if g$ls/false$8981$5uPkq
                            (apply
                              (case-lambda
                                ((g$who$8982$5uPkq
                                   g$fmls$8983$5uPkq
                                   g$last$8984$5uPkq
                                   g$b$8985$5uPkq
                                   g$b*$8986$5uPkq)
                                 (if (g$valid-bound-ids?$8023$5uPkq
                                       (cons
                                         g$last$8984$5uPkq
                                         g$fmls$8983$5uPkq))
                                   (g$bless$8259$5uPkq
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8982$5uPkq)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8983$5uPkq
                                             g$last$8984$5uPkq)
                                           (cons
                                             g$b$8985$5uPkq
                                             g$b*$8986$5uPkq)))))
                                   (g$invalid-fmls-error$8261$5uPkq
                                     g$stx$8973$5uPkq
                                     (append
                                       g$fmls$8983$5uPkq
                                       g$last$8984$5uPkq)))))
                              g$ls/false$8981$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$8980$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$8980$5uPkq
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8974$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8974$5uPkq
               '(_ any each-any any . each-any)))))
         g$stx$8973$5uPkq))))
   (g$trace-define-macro$8266$5uPkq
     g$trace-define-macro$11757$5uPkq
     (case-lambda
       ((g$stx$8987$5uPkq)
        ((case-lambda
           ((g$t$8988$5uPkq)
            ((case-lambda
               ((g$ls/false$8989$5uPkq)
                (if g$ls/false$8989$5uPkq
                  (apply
                    (case-lambda
                      ((g$who$8990$5uPkq
                         g$fmls$8991$5uPkq
                         g$b$8992$5uPkq
                         g$b*$8993$5uPkq)
                       (if (g$valid-bound-ids?$8023$5uPkq g$fmls$8991$5uPkq)
                         (g$bless$8259$5uPkq
                           (list
                             'define
                             g$who$8990$5uPkq
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8990$5uPkq)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8991$5uPkq
                                   (cons g$b$8992$5uPkq g$b*$8993$5uPkq))))))
                         (g$invalid-fmls-error$8261$5uPkq
                           g$stx$8987$5uPkq
                           g$fmls$8991$5uPkq))))
                    g$ls/false$8989$5uPkq)
                  ((case-lambda
                     ((g$t$8994$5uPkq)
                      ((case-lambda
                         ((g$ls/false$8995$5uPkq)
                          (if g$ls/false$8995$5uPkq
                            (apply
                              (case-lambda
                                ((g$who$8996$5uPkq
                                   g$fmls$8997$5uPkq
                                   g$last$8998$5uPkq
                                   g$b$8999$5uPkq
                                   g$b*$9000$5uPkq)
                                 (if (g$valid-bound-ids?$8023$5uPkq
                                       (cons
                                         g$last$8998$5uPkq
                                         g$fmls$8997$5uPkq))
                                   (g$bless$8259$5uPkq
                                     (list
                                       'define
                                       g$who$8996$5uPkq
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8996$5uPkq)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8997$5uPkq
                                               g$last$8998$5uPkq)
                                             (cons
                                               g$b$8999$5uPkq
                                               g$b*$9000$5uPkq))))))
                                   (g$invalid-fmls-error$8261$5uPkq
                                     g$stx$8987$5uPkq
                                     (append
                                       g$fmls$8997$5uPkq
                                       g$last$8998$5uPkq)))))
                              g$ls/false$8995$5uPkq)
                            ((case-lambda
                               ((g$t$9001$5uPkq)
                                ((case-lambda
                                   ((g$ls/false$9002$5uPkq)
                                    (if g$ls/false$9002$5uPkq
                                      (apply
                                        (case-lambda
                                          ((g$who$9003$5uPkq g$expr$9004$5uPkq)
                                           (if (g$id?$8018$5uPkq
                                                 g$who$9003$5uPkq)
                                             (g$bless$8259$5uPkq
                                               (list
                                                 'define
                                                 g$who$9003$5uPkq
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$9004$5uPkq))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$9003$5uPkq)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8407$5uPkq
                                               '#f
                                               '"invalid name"
                                               g$stx$8987$5uPkq))))
                                        g$ls/false$9002$5uPkq)
                                      (g$syntax-violation$8407$5uPkq
                                        '#f
                                        '"invalid syntax"
                                        g$t$9001$5uPkq))))
                                 (g$syntax-dispatch$8296$5uPkq
                                   g$t$9001$5uPkq
                                   '(_ any any)))))
                             g$t$8994$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$8994$5uPkq
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8988$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$8988$5uPkq
               '(_ (any . each-any) any . each-any)))))
         g$stx$8987$5uPkq))))
   (g$trace-define-syntax-macro$8267$5uPkq
     g$trace-define-syntax-macro$11758$5uPkq
     (case-lambda
       ((g$stx$9005$5uPkq)
        ((case-lambda
           ((g$t$9006$5uPkq)
            ((case-lambda
               ((g$ls/false$9007$5uPkq)
                (if g$ls/false$9007$5uPkq
                  (apply
                    (case-lambda
                      ((g$who$9008$5uPkq g$expr$9009$5uPkq)
                       (if (g$id?$8018$5uPkq g$who$9008$5uPkq)
                         (g$bless$8259$5uPkq
                           (list
                             'define-syntax
                             g$who$9008$5uPkq
                             (list
                               'make-traced-macro
                               (list 'quote g$who$9008$5uPkq)
                               g$expr$9009$5uPkq)))
                         (g$syntax-violation$8407$5uPkq
                           '#f
                           '"invalid name"
                           g$stx$9005$5uPkq))))
                    g$ls/false$9007$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9006$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9006$5uPkq '(_ any any)))))
         g$stx$9005$5uPkq))))
   (g$trace-let/rec-syntax$8268$5uPkq
     g$trace-let/rec-syntax$11759$5uPkq
     (case-lambda
       ((g$who$9010$5uPkq)
        (case-lambda
          ((g$stx$9011$5uPkq)
           ((case-lambda
              ((g$t$9012$5uPkq)
               ((case-lambda
                  ((g$ls/false$9013$5uPkq)
                   (if g$ls/false$9013$5uPkq
                     (apply
                       (case-lambda
                         ((g$lhs*$9014$5uPkq
                            g$rhs*$9015$5uPkq
                            g$b$9016$5uPkq
                            g$b*$9017$5uPkq)
                          (if (g$valid-bound-ids?$8023$5uPkq g$lhs*$9014$5uPkq)
                            ((case-lambda
                               ((g$rhs*$9018$5uPkq)
                                (g$bless$8259$5uPkq
                                  (cons
                                    g$who$9010$5uPkq
                                    (cons
                                      (g$map$5759$5uPkq
                                        list
                                        g$lhs*$9014$5uPkq
                                        g$rhs*$9018$5uPkq)
                                      (cons g$b$9016$5uPkq g$b*$9017$5uPkq))))))
                             (g$map$5759$5uPkq
                               (case-lambda
                                 ((g$lhs$9019$5uPkq g$rhs$9020$5uPkq)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$9019$5uPkq)
                                    g$rhs$9020$5uPkq)))
                               g$lhs*$9014$5uPkq
                               g$rhs*$9015$5uPkq))
                            (g$invalid-fmls-error$8261$5uPkq
                              g$stx$9011$5uPkq
                              g$lhs*$9014$5uPkq))))
                       g$ls/false$9013$5uPkq)
                     (g$syntax-violation$8407$5uPkq
                       '#f
                       '"invalid syntax"
                       g$t$9012$5uPkq))))
                (g$syntax-dispatch$8296$5uPkq
                  g$t$9012$5uPkq
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$9011$5uPkq))))))
   (g$trace-let-syntax-macro$8269$5uPkq
     g$trace-let-syntax-macro$11760$5uPkq
     (g$trace-let/rec-syntax$8268$5uPkq 'let-syntax))
   (g$trace-letrec-syntax-macro$8270$5uPkq
     g$trace-letrec-syntax-macro$11761$5uPkq
     (g$trace-let/rec-syntax$8268$5uPkq 'letrec-syntax))
   (g$guard-macro$8271$5uPkq
     g$guard-macro$11762$5uPkq
     (case-lambda
       ((g$x$9021$5uPkq)
        (letrec* ((g$gen-clauses$9022$5uPkq
                    (case-lambda
                      ((g$con$9034$5uPkq
                         g$outerk$9035$5uPkq
                         g$clause*$9036$5uPkq)
                       (letrec* ((g$f$9037$5uPkq
                                   (case-lambda
                                     ((g$x$9065$5uPkq g$k$9066$5uPkq)
                                      ((case-lambda
                                         ((g$t$9067$5uPkq)
                                          ((case-lambda
                                             ((g$ls/false$9068$5uPkq)
                                              (if g$ls/false$9068$5uPkq
                                                (apply
                                                  (case-lambda
                                                    ((g$e$9069$5uPkq
                                                       g$p$9070$5uPkq)
                                                     ((case-lambda
                                                        ((g$t$9071$5uPkq)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$9071$5uPkq
                                                               g$e$9069$5uPkq))
                                                           (list
                                                             'if
                                                             g$t$9071$5uPkq
                                                             (list
                                                               g$p$9070$5uPkq
                                                               g$t$9071$5uPkq)
                                                             g$k$9066$5uPkq))))
                                                      (gensym))))
                                                  g$ls/false$9068$5uPkq)
                                                ((case-lambda
                                                   ((g$t$9072$5uPkq)
                                                    ((case-lambda
                                                       ((g$ls/false$9073$5uPkq)
                                                        (if g$ls/false$9073$5uPkq
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9074$5uPkq)
                                                               ((case-lambda
                                                                  ((g$t$9075$5uPkq)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$9075$5uPkq
                                                                         g$e$9074$5uPkq))
                                                                     (list
                                                                       'if
                                                                       g$t$9075$5uPkq
                                                                       g$t$9075$5uPkq
                                                                       g$k$9066$5uPkq))))
                                                                (gensym))))
                                                            g$ls/false$9073$5uPkq)
                                                          ((case-lambda
                                                             ((g$t$9076$5uPkq)
                                                              ((case-lambda
                                                                 ((g$ls/false$9077$5uPkq)
                                                                  (if g$ls/false$9077$5uPkq
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$9078$5uPkq
                                                                           g$v$9079$5uPkq
                                                                           g$v*$9080$5uPkq)
                                                                         (list
                                                                           'if
                                                                           g$e$9078$5uPkq
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$9079$5uPkq
                                                                               g$v*$9080$5uPkq))
                                                                           g$k$9066$5uPkq)))
                                                                      g$ls/false$9077$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$t$9081$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9082$5uPkq)
                                                                            (if g$ls/false$9082$5uPkq
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8407$5uPkq
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$9065$5uPkq)))
                                                                                g$ls/false$9082$5uPkq)
                                                                              (g$syntax-violation$8407$5uPkq
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9081$5uPkq))))
                                                                         (g$syntax-dispatch$8296$5uPkq
                                                                           g$t$9081$5uPkq
                                                                           '_))))
                                                                     g$t$9076$5uPkq))))
                                                               (g$syntax-dispatch$8296$5uPkq
                                                                 g$t$9076$5uPkq
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$9072$5uPkq))))
                                                     (g$syntax-dispatch$8296$5uPkq
                                                       g$t$9072$5uPkq
                                                       '(any)))))
                                                 g$t$9067$5uPkq))))
                                           (g$syntax-dispatch$8296$5uPkq
                                             g$t$9067$5uPkq
                                             '(any #(scheme-id =>) any)))))
                                       g$x$9065$5uPkq))))
                                 (g$f*$9038$5uPkq
                                   (case-lambda
                                     ((g$x*$9045$5uPkq)
                                      ((case-lambda
                                         ((g$t$9046$5uPkq)
                                          ((case-lambda
                                             ((g$ls/false$9047$5uPkq)
                                              (if g$ls/false$9047$5uPkq
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$9034$5uPkq)
                                                       '#t)))
                                                  g$ls/false$9047$5uPkq)
                                                ((case-lambda
                                                   ((g$t$9048$5uPkq)
                                                    ((case-lambda
                                                       ((g$ls/false$9049$5uPkq)
                                                        (if g$ls/false$9049$5uPkq
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9050$5uPkq
                                                                 g$e*$9051$5uPkq)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$9050$5uPkq
                                                                     g$e*$9051$5uPkq))
                                                                 '#f)))
                                                            g$ls/false$9049$5uPkq)
                                                          ((case-lambda
                                                             ((g$t$9052$5uPkq)
                                                              ((case-lambda
                                                                 ((g$ls/false$9053$5uPkq)
                                                                  (if g$ls/false$9053$5uPkq
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$9054$5uPkq
                                                                           g$cls*$9055$5uPkq)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$9038$5uPkq
                                                                                g$cls*$9055$5uPkq)))
                                                                           (case-lambda
                                                                             ((g$e$9058$5uPkq
                                                                                g$g$9059$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$g$9060$5uPkq
                                                                                    g$e$9061$5uPkq)
                                                                                  (values
                                                                                    (g$f$9037$5uPkq
                                                                                      g$cls$9054$5uPkq
                                                                                      g$e$9061$5uPkq)
                                                                                    g$g$9060$5uPkq)))
                                                                               g$g$9059$5uPkq
                                                                               g$e$9058$5uPkq))))))
                                                                      g$ls/false$9053$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$t$9062$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9063$5uPkq)
                                                                            (if g$ls/false$9063$5uPkq
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$9064$5uPkq)
                                                                                   (g$syntax-violation$8407$5uPkq
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$9064$5uPkq)))
                                                                                g$ls/false$9063$5uPkq)
                                                                              (g$syntax-violation$8407$5uPkq
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9062$5uPkq))))
                                                                         (g$syntax-dispatch$8296$5uPkq
                                                                           g$t$9062$5uPkq
                                                                           'any))))
                                                                     g$t$9052$5uPkq))))
                                                               (g$syntax-dispatch$8296$5uPkq
                                                                 g$t$9052$5uPkq
                                                                 '(any .
                                                                       any)))))
                                                           g$t$9048$5uPkq))))
                                                     (g$syntax-dispatch$8296$5uPkq
                                                       g$t$9048$5uPkq
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$9046$5uPkq))))
                                           (g$syntax-dispatch$8296$5uPkq
                                             g$t$9046$5uPkq
                                             '()))))
                                       g$x*$9045$5uPkq)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$9038$5uPkq g$clause*$9036$5uPkq)))
                           (case-lambda
                             ((g$code$9041$5uPkq g$raisek$9042$5uPkq)
                              ((case-lambda
                                 ((g$raisek$9043$5uPkq g$code$9044$5uPkq)
                                  (if g$raisek$9043$5uPkq
                                    (list g$outerk$9035$5uPkq g$code$9044$5uPkq)
                                    g$code$9044$5uPkq)))
                               g$raisek$9042$5uPkq
                               g$code$9041$5uPkq)))))))))
          ((case-lambda
             ((g$t$9023$5uPkq)
              ((case-lambda
                 ((g$ls/false$9024$5uPkq)
                  (if (if g$ls/false$9024$5uPkq
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$9025$5uPkq
                                 g$clause*$9026$5uPkq
                                 g$b$9027$5uPkq
                                 g$b*$9028$5uPkq)
                               (g$id?$8018$5uPkq g$con$9025$5uPkq)))
                            g$ls/false$9024$5uPkq))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$9029$5uPkq
                           g$clause*$9030$5uPkq
                           g$b$9031$5uPkq
                           g$b*$9032$5uPkq)
                         ((case-lambda
                            ((g$outerk$9033$5uPkq)
                             (g$bless$8259$5uPkq
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$9033$5uPkq)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$9029$5uPkq)
                                           (g$gen-clauses$9022$5uPkq
                                             g$con$9029$5uPkq
                                             g$outerk$9033$5uPkq
                                             g$clause*$9030$5uPkq))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$9031$5uPkq
                                                 g$b*$9032$5uPkq))))))))))))
                          (gensym))))
                      g$ls/false$9024$5uPkq)
                    (g$syntax-violation$8407$5uPkq
                      '#f
                      '"invalid syntax"
                      g$t$9023$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq
                 g$t$9023$5uPkq
                 '(_ (any . each-any) any . each-any)))))
           g$x$9021$5uPkq)))))
   (g$define-enumeration-macro$8272$5uPkq
     g$define-enumeration-macro$11763$5uPkq
     (case-lambda
       ((g$stx$9083$5uPkq)
        (letrec* ((g$set?$9084$5uPkq
                    (case-lambda
                      ((g$x$9097$5uPkq)
                       ((case-lambda
                          ((g$t$9098$5uPkq)
                           (if g$t$9098$5uPkq
                             g$t$9098$5uPkq
                             (begin
                               '#f
                               (if (not (g$memq$5751$5uPkq
                                          (car g$x$9097$5uPkq)
                                          (cdr g$x$9097$5uPkq)))
                                 (begin
                                   '#f
                                   (g$set?$9084$5uPkq (cdr g$x$9097$5uPkq)))
                                 '#f)))))
                        (null? g$x$9097$5uPkq)))))
                  (g$remove-dups$9085$5uPkq
                    (case-lambda
                      ((g$ls$9096$5uPkq)
                       (if (null? g$ls$9096$5uPkq)
                         '()
                         (cons
                           (car g$ls$9096$5uPkq)
                           (g$remove-dups$9085$5uPkq
                             (g$remq$5766$5uPkq
                               (car g$ls$9096$5uPkq)
                               (cdr g$ls$9096$5uPkq)))))))))
          ((case-lambda
             ((g$t$9086$5uPkq)
              ((case-lambda
                 ((g$ls/false$9087$5uPkq)
                  (if (if g$ls/false$9087$5uPkq
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$9088$5uPkq
                                 g$id*$9089$5uPkq
                                 g$maker$9090$5uPkq)
                               (if (g$id?$8018$5uPkq g$name$9088$5uPkq)
                                 (if (g$id?$8018$5uPkq g$maker$9090$5uPkq)
                                   (begin
                                     '#f
                                     (g$for-all$5757$5uPkq
                                       g$id?$8018$5uPkq
                                       g$id*$9089$5uPkq))
                                   '#f)
                                 '#f)))
                            g$ls/false$9087$5uPkq))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$9091$5uPkq g$id*$9092$5uPkq g$maker$9093$5uPkq)
                         ((case-lambda
                            ((g$name*$9094$5uPkq g$mk$9095$5uPkq)
                             (g$bless$8259$5uPkq
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$9095$5uPkq
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$9094$5uPkq))))
                                 (list
                                   'define-syntax
                                   g$name$9091$5uPkq
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$9094$5uPkq))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$9091$5uPkq)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$9093$5uPkq
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9093$5uPkq)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$9094$5uPkq))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9093$5uPkq)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$9095$5uPkq
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$9085$5uPkq
                            (g$syntax->datum$8410$5uPkq g$id*$9092$5uPkq))
                          (gensym))))
                      g$ls/false$9087$5uPkq)
                    (g$syntax-violation$8407$5uPkq
                      '#f
                      '"invalid syntax"
                      g$t$9086$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq
                 g$t$9086$5uPkq
                 '(_ any each-any any)))))
           g$stx$9083$5uPkq)))))
   (g$time-macro$8273$5uPkq
     g$time-macro$11764$5uPkq
     (case-lambda
       ((g$stx$9099$5uPkq)
        ((case-lambda
           ((g$t$9100$5uPkq)
            ((case-lambda
               ((g$ls/false$9101$5uPkq)
                (if g$ls/false$9101$5uPkq
                  (apply
                    (case-lambda
                      ((g$expr$9102$5uPkq)
                       ((case-lambda
                          ((g$str$9103$5uPkq)
                           (g$bless$8259$5uPkq
                             (list
                               'time-it
                               g$str$9103$5uPkq
                               (list 'lambda '() g$expr$9102$5uPkq)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6978$5uPkq)))
                          (case-lambda
                            ((g$p$9106$5uPkq g$e$9107$5uPkq)
                             ((case-lambda
                                ((g$e$9108$5uPkq g$p$9109$5uPkq)
                                 (begin
                                   (write
                                     (g$syntax->datum$8410$5uPkq
                                       g$expr$9102$5uPkq)
                                     g$p$9109$5uPkq)
                                   (g$e$9108$5uPkq))))
                              g$e$9107$5uPkq
                              g$p$9106$5uPkq)))))))
                    g$ls/false$9101$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9100$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9100$5uPkq '(_ any)))))
         g$stx$9099$5uPkq))))
   (g$delay-macro$8274$5uPkq
     g$delay-macro$11765$5uPkq
     (case-lambda
       ((g$stx$9110$5uPkq)
        ((case-lambda
           ((g$t$9111$5uPkq)
            ((case-lambda
               ((g$ls/false$9112$5uPkq)
                (if g$ls/false$9112$5uPkq
                  (apply
                    (case-lambda
                      ((g$expr$9113$5uPkq)
                       (g$bless$8259$5uPkq
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$9113$5uPkq)))))
                    g$ls/false$9112$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9111$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9111$5uPkq '(_ any)))))
         g$stx$9110$5uPkq))))
   (g$assert-macro$8275$5uPkq
     g$assert-macro$11766$5uPkq
     (case-lambda
       ((g$stx$9114$5uPkq)
        ((case-lambda
           ((g$t$9115$5uPkq)
            ((case-lambda
               ((g$ls/false$9116$5uPkq)
                (if g$ls/false$9116$5uPkq
                  (apply
                    (case-lambda
                      ((g$expr$9117$5uPkq)
                       ((case-lambda
                          ((g$pos$9118$5uPkq)
                           (g$bless$8259$5uPkq
                             (list
                               'unless
                               g$expr$9117$5uPkq
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$9117$5uPkq)
                                 (list 'quote g$pos$9118$5uPkq))))))
                        ((case-lambda
                           ((g$t$9119$5uPkq)
                            (if g$t$9119$5uPkq
                              g$t$9119$5uPkq
                              (begin
                                '#f
                                (g$expression-position$8402$5uPkq
                                  g$expr$9117$5uPkq)))))
                         (g$expression-position$8402$5uPkq g$stx$9114$5uPkq)))))
                    g$ls/false$9116$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9115$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9115$5uPkq '(_ any)))))
         g$stx$9114$5uPkq))))
   (g$endianness-macro$8276$5uPkq
     g$endianness-macro$11767$5uPkq
     (case-lambda
       ((g$stx$9120$5uPkq)
        ((case-lambda
           ((g$t$9121$5uPkq)
            ((case-lambda
               ((g$ls/false$9122$5uPkq)
                (if g$ls/false$9122$5uPkq
                  (apply
                    (case-lambda
                      ((g$e$9123$5uPkq)
                       ((case-lambda
                          ((g$t$9124$5uPkq)
                           (if (g$memv$5752$5uPkq g$t$9124$5uPkq '(little))
                             (g$bless$8259$5uPkq ''little)
                             (if (g$memv$5752$5uPkq g$t$9124$5uPkq '(big))
                               (g$bless$8259$5uPkq ''big)
                               (g$syntax-violation$8407$5uPkq
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$9120$5uPkq)))))
                        (g$syntax->datum$8410$5uPkq g$e$9123$5uPkq))))
                    g$ls/false$9122$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9121$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9121$5uPkq '(_ any)))))
         g$stx$9120$5uPkq))))
   (g$identifier-syntax-macro$8277$5uPkq
     g$identifier-syntax-macro$11768$5uPkq
     (case-lambda
       ((g$stx$9125$5uPkq)
        ((case-lambda
           ((g$t$9126$5uPkq)
            ((case-lambda
               ((g$ls/false$9127$5uPkq)
                (if g$ls/false$9127$5uPkq
                  (apply
                    (case-lambda
                      ((g$expr$9128$5uPkq)
                       (g$bless$8259$5uPkq
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$9128$5uPkq))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$9128$5uPkq)
                                   '(#'(e* ...))))))))))
                    g$ls/false$9127$5uPkq)
                  ((case-lambda
                     ((g$t$9129$5uPkq)
                      ((case-lambda
                         ((g$ls/false$9130$5uPkq)
                          (if (if g$ls/false$9130$5uPkq
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$9131$5uPkq
                                         g$expr1$9132$5uPkq
                                         g$id2$9133$5uPkq
                                         g$expr2$9134$5uPkq
                                         g$expr3$9135$5uPkq)
                                       (if (g$id?$8018$5uPkq g$id1$9131$5uPkq)
                                         (if (g$id?$8018$5uPkq g$id2$9133$5uPkq)
                                           (begin
                                             '#f
                                             (g$id?$8018$5uPkq
                                               g$expr2$9134$5uPkq))
                                           '#f)
                                         '#f)))
                                    g$ls/false$9130$5uPkq))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$9136$5uPkq
                                   g$expr1$9137$5uPkq
                                   g$id2$9138$5uPkq
                                   g$expr2$9139$5uPkq
                                   g$expr3$9140$5uPkq)
                                 (g$bless$8259$5uPkq
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$9137$5uPkq))
                                         (list
                                           (list 'set! 'id g$expr2$9139$5uPkq)
                                           (list 'syntax g$expr3$9140$5uPkq))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$9137$5uPkq
                                               '(e* ...))))))))))
                              g$ls/false$9130$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$9129$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$9129$5uPkq
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$9126$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9126$5uPkq '(_ any)))))
         g$stx$9125$5uPkq))))
   (g$do-macro$8278$5uPkq
     g$do-macro$11769$5uPkq
     (case-lambda
       ((g$stx$9141$5uPkq)
        (letrec* ((g$bind$9142$5uPkq
                    (case-lambda
                      ((g$x$9154$5uPkq)
                       ((case-lambda
                          ((g$t$9155$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9156$5uPkq)
                               (if g$ls/false$9156$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$x$9157$5uPkq g$init$9158$5uPkq)
                                      (list
                                        g$x$9157$5uPkq
                                        g$init$9158$5uPkq
                                        g$x$9157$5uPkq)))
                                   g$ls/false$9156$5uPkq)
                                 ((case-lambda
                                    ((g$t$9159$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9160$5uPkq)
                                         (if g$ls/false$9160$5uPkq
                                           (apply
                                             (case-lambda
                                               ((g$x$9161$5uPkq
                                                  g$init$9162$5uPkq
                                                  g$step$9163$5uPkq)
                                                (list
                                                  g$x$9161$5uPkq
                                                  g$init$9162$5uPkq
                                                  g$step$9163$5uPkq)))
                                             g$ls/false$9160$5uPkq)
                                           ((case-lambda
                                              ((g$t$9164$5uPkq)
                                               ((case-lambda
                                                  ((g$ls/false$9165$5uPkq)
                                                   (if g$ls/false$9165$5uPkq
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8407$5uPkq
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$9141$5uPkq)))
                                                       g$ls/false$9165$5uPkq)
                                                     (g$syntax-violation$8407$5uPkq
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9164$5uPkq))))
                                                (g$syntax-dispatch$8296$5uPkq
                                                  g$t$9164$5uPkq
                                                  '_))))
                                            g$t$9159$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9159$5uPkq
                                        '(any any any)))))
                                  g$t$9155$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$9155$5uPkq
                              '(any any)))))
                        g$x$9154$5uPkq)))))
          ((case-lambda
             ((g$t$9143$5uPkq)
              ((case-lambda
                 ((g$ls/false$9144$5uPkq)
                  (if g$ls/false$9144$5uPkq
                    (apply
                      (case-lambda
                        ((g$binding*$9145$5uPkq
                           g$test$9146$5uPkq
                           g$expr*$9147$5uPkq
                           g$command*$9148$5uPkq)
                         ((case-lambda
                            ((g$t$9149$5uPkq)
                             ((case-lambda
                                ((g$ls/false$9150$5uPkq)
                                 (if g$ls/false$9150$5uPkq
                                   (apply
                                     (case-lambda
                                       ((g$x*$9151$5uPkq
                                          g$init*$9152$5uPkq
                                          g$step*$9153$5uPkq)
                                        (if (g$valid-bound-ids?$8023$5uPkq
                                              g$x*$9151$5uPkq)
                                          (g$bless$8259$5uPkq
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$9151$5uPkq
                                                    (list
                                                      'if
                                                      g$test$9146$5uPkq
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$9147$5uPkq))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$9148$5uPkq
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$9153$5uPkq))))))))
                                              (cons 'loop g$init*$9152$5uPkq)))
                                          (g$syntax-violation$8407$5uPkq
                                            '#f
                                            '"invalid bindings"
                                            g$stx$9141$5uPkq))))
                                     g$ls/false$9150$5uPkq)
                                   (g$syntax-violation$8407$5uPkq
                                     '#f
                                     '"invalid syntax"
                                     g$t$9149$5uPkq))))
                              (g$syntax-dispatch$8296$5uPkq
                                g$t$9149$5uPkq
                                '#(each (any any any))))))
                          (g$map$5759$5uPkq
                            g$bind$9142$5uPkq
                            g$binding*$9145$5uPkq))))
                      g$ls/false$9144$5uPkq)
                    (g$syntax-violation$8407$5uPkq
                      '#f
                      '"invalid syntax"
                      g$t$9143$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq
                 g$t$9143$5uPkq
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$9141$5uPkq)))))
   (g$let*-macro$8279$5uPkq
     g$let*-macro$11770$5uPkq
     (case-lambda
       ((g$stx$9166$5uPkq)
        ((case-lambda
           ((g$t$9167$5uPkq)
            ((case-lambda
               ((g$ls/false$9168$5uPkq)
                (if (if g$ls/false$9168$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$9169$5uPkq
                               g$rhs*$9170$5uPkq
                               g$b$9171$5uPkq
                               g$b*$9172$5uPkq)
                             (g$for-all$5757$5uPkq
                               g$id?$8018$5uPkq
                               g$lhs*$9169$5uPkq)))
                          g$ls/false$9168$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$9173$5uPkq
                         g$rhs*$9174$5uPkq
                         g$b$9175$5uPkq
                         g$b*$9176$5uPkq)
                       (g$bless$8259$5uPkq
                         ((letrec ((g$f$9177$5uPkq
                                     (case-lambda
                                       ((g$x*$9178$5uPkq)
                                        (if (null? g$x*$9178$5uPkq)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$9175$5uPkq
                                                g$b*$9176$5uPkq)))
                                          (if (null? (cdr g$x*$9178$5uPkq))
                                            (cons
                                              'let
                                              (cons
                                                (list (car g$x*$9178$5uPkq))
                                                (cons
                                                  g$b$9175$5uPkq
                                                  g$b*$9176$5uPkq)))
                                            (list
                                              'let
                                              (list (car g$x*$9178$5uPkq))
                                              (g$f$9177$5uPkq
                                                (cdr g$x*$9178$5uPkq)))))))))
                            g$f$9177$5uPkq)
                          (g$map$5759$5uPkq
                            list
                            g$lhs*$9173$5uPkq
                            g$rhs*$9174$5uPkq)))))
                    g$ls/false$9168$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9167$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$9167$5uPkq
               '(_ #(each (any any)) any . each-any)))))
         g$stx$9166$5uPkq))))
   (g$or-macro$8280$5uPkq
     g$or-macro$11771$5uPkq
     (case-lambda
       ((g$stx$9179$5uPkq)
        ((case-lambda
           ((g$t$9180$5uPkq)
            ((case-lambda
               ((g$ls/false$9181$5uPkq)
                (if g$ls/false$9181$5uPkq
                  (apply (case-lambda (() '#f)) g$ls/false$9181$5uPkq)
                  ((case-lambda
                     ((g$t$9182$5uPkq)
                      ((case-lambda
                         ((g$ls/false$9183$5uPkq)
                          (if g$ls/false$9183$5uPkq
                            (apply
                              (case-lambda
                                ((g$e$9184$5uPkq g$e*$9185$5uPkq)
                                 (g$bless$8259$5uPkq
                                   ((letrec ((g$f$9186$5uPkq
                                               (case-lambda
                                                 ((g$e$9187$5uPkq
                                                    g$e*$9188$5uPkq)
                                                  (if (null? g$e*$9188$5uPkq)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9187$5uPkq)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$9187$5uPkq))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$9186$5uPkq
                                                          (car g$e*$9188$5uPkq)
                                                          (cdr g$e*$9188$5uPkq)))))))))
                                      g$f$9186$5uPkq)
                                    g$e$9184$5uPkq
                                    g$e*$9185$5uPkq))))
                              g$ls/false$9183$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$9182$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$9182$5uPkq
                         '(_ any . each-any)))))
                   g$t$9180$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9180$5uPkq '(_)))))
         g$stx$9179$5uPkq))))
   (g$and-macro$8281$5uPkq
     g$and-macro$11772$5uPkq
     (case-lambda
       ((g$stx$9189$5uPkq)
        ((case-lambda
           ((g$t$9190$5uPkq)
            ((case-lambda
               ((g$ls/false$9191$5uPkq)
                (if g$ls/false$9191$5uPkq
                  (apply (case-lambda (() '#t)) g$ls/false$9191$5uPkq)
                  ((case-lambda
                     ((g$t$9192$5uPkq)
                      ((case-lambda
                         ((g$ls/false$9193$5uPkq)
                          (if g$ls/false$9193$5uPkq
                            (apply
                              (case-lambda
                                ((g$e$9194$5uPkq g$e*$9195$5uPkq)
                                 (g$bless$8259$5uPkq
                                   ((letrec ((g$f$9196$5uPkq
                                               (case-lambda
                                                 ((g$e$9197$5uPkq
                                                    g$e*$9198$5uPkq)
                                                  (if (null? g$e*$9198$5uPkq)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9197$5uPkq)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$9197$5uPkq
                                                        (cons
                                                          (g$f$9196$5uPkq
                                                            (car g$e*$9198$5uPkq)
                                                            (cdr g$e*$9198$5uPkq))
                                                          '(#f)))))))))
                                      g$f$9196$5uPkq)
                                    g$e$9194$5uPkq
                                    g$e*$9195$5uPkq))))
                              g$ls/false$9193$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$9192$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$9192$5uPkq
                         '(_ any . each-any)))))
                   g$t$9190$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9190$5uPkq '(_)))))
         g$stx$9189$5uPkq))))
   (g$cond-macro$8282$5uPkq
     g$cond-macro$11773$5uPkq
     (case-lambda
       ((g$stx$9199$5uPkq)
        ((case-lambda
           ((g$t$9200$5uPkq)
            ((case-lambda
               ((g$ls/false$9201$5uPkq)
                (if g$ls/false$9201$5uPkq
                  (apply
                    (case-lambda
                      ((g$cls$9202$5uPkq g$cls*$9203$5uPkq)
                       (g$bless$8259$5uPkq
                         ((letrec ((g$f$9204$5uPkq
                                     (case-lambda
                                       ((g$cls$9205$5uPkq g$cls*$9206$5uPkq)
                                        (if (null? g$cls*$9206$5uPkq)
                                          ((case-lambda
                                             ((g$t$9207$5uPkq)
                                              ((case-lambda
                                                 ((g$ls/false$9208$5uPkq)
                                                  (if g$ls/false$9208$5uPkq
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9209$5uPkq
                                                           g$e*$9210$5uPkq)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$9209$5uPkq
                                                             g$e*$9210$5uPkq))))
                                                      g$ls/false$9208$5uPkq)
                                                    ((case-lambda
                                                       ((g$t$9211$5uPkq)
                                                        ((case-lambda
                                                           ((g$ls/false$9212$5uPkq)
                                                            (if g$ls/false$9212$5uPkq
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9213$5uPkq
                                                                     g$p$9214$5uPkq)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9213$5uPkq))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9214$5uPkq
                                                                         '(t))))))
                                                                g$ls/false$9212$5uPkq)
                                                              ((case-lambda
                                                                 ((g$t$9215$5uPkq)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9216$5uPkq)
                                                                      (if g$ls/false$9216$5uPkq
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9217$5uPkq)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$9217$5uPkq
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$9216$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$t$9218$5uPkq)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9219$5uPkq)
                                                                                (if g$ls/false$9219$5uPkq
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9220$5uPkq
                                                                                         g$e*$9221$5uPkq)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9220$5uPkq
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9221$5uPkq))))
                                                                                    g$ls/false$9219$5uPkq)
                                                                                  ((case-lambda
                                                                                     ((g$t$9222$5uPkq)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9223$5uPkq)
                                                                                          (if g$ls/false$9223$5uPkq
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8407$5uPkq
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9199$5uPkq)))
                                                                                              g$ls/false$9223$5uPkq)
                                                                                            (g$syntax-violation$8407$5uPkq
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9222$5uPkq))))
                                                                                       (g$syntax-dispatch$8296$5uPkq
                                                                                         g$t$9222$5uPkq
                                                                                         '_))))
                                                                                   g$t$9218$5uPkq))))
                                                                             (g$syntax-dispatch$8296$5uPkq
                                                                               g$t$9218$5uPkq
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9215$5uPkq))))
                                                                   (g$syntax-dispatch$8296$5uPkq
                                                                     g$t$9215$5uPkq
                                                                     '(any)))))
                                                               g$t$9211$5uPkq))))
                                                         (g$syntax-dispatch$8296$5uPkq
                                                           g$t$9211$5uPkq
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9207$5uPkq))))
                                               (g$syntax-dispatch$8296$5uPkq
                                                 g$t$9207$5uPkq
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9205$5uPkq)
                                          ((case-lambda
                                             ((g$t$9224$5uPkq)
                                              ((case-lambda
                                                 ((g$ls/false$9225$5uPkq)
                                                  (if g$ls/false$9225$5uPkq
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9226$5uPkq
                                                           g$e*$9227$5uPkq)
                                                         (g$syntax-violation$8407$5uPkq
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$9199$5uPkq)))
                                                      g$ls/false$9225$5uPkq)
                                                    ((case-lambda
                                                       ((g$t$9228$5uPkq)
                                                        ((case-lambda
                                                           ((g$ls/false$9229$5uPkq)
                                                            (if g$ls/false$9229$5uPkq
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9230$5uPkq
                                                                     g$p$9231$5uPkq)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9230$5uPkq))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9231$5uPkq
                                                                         '(t))
                                                                       (g$f$9204$5uPkq
                                                                         (car g$cls*$9206$5uPkq)
                                                                         (cdr g$cls*$9206$5uPkq))))))
                                                                g$ls/false$9229$5uPkq)
                                                              ((case-lambda
                                                                 ((g$t$9232$5uPkq)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9233$5uPkq)
                                                                      (if g$ls/false$9233$5uPkq
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9234$5uPkq)
                                                                             (list
                                                                               'or
                                                                               g$e$9234$5uPkq
                                                                               (g$f$9204$5uPkq
                                                                                 (car g$cls*$9206$5uPkq)
                                                                                 (cdr g$cls*$9206$5uPkq)))))
                                                                          g$ls/false$9233$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$t$9235$5uPkq)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9236$5uPkq)
                                                                                (if g$ls/false$9236$5uPkq
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9237$5uPkq
                                                                                         g$e*$9238$5uPkq)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9237$5uPkq
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9238$5uPkq)
                                                                                         (g$f$9204$5uPkq
                                                                                           (car g$cls*$9206$5uPkq)
                                                                                           (cdr g$cls*$9206$5uPkq)))))
                                                                                    g$ls/false$9236$5uPkq)
                                                                                  ((case-lambda
                                                                                     ((g$t$9239$5uPkq)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9240$5uPkq)
                                                                                          (if g$ls/false$9240$5uPkq
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8407$5uPkq
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9199$5uPkq)))
                                                                                              g$ls/false$9240$5uPkq)
                                                                                            (g$syntax-violation$8407$5uPkq
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9239$5uPkq))))
                                                                                       (g$syntax-dispatch$8296$5uPkq
                                                                                         g$t$9239$5uPkq
                                                                                         '_))))
                                                                                   g$t$9235$5uPkq))))
                                                                             (g$syntax-dispatch$8296$5uPkq
                                                                               g$t$9235$5uPkq
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9232$5uPkq))))
                                                                   (g$syntax-dispatch$8296$5uPkq
                                                                     g$t$9232$5uPkq
                                                                     '(any)))))
                                                               g$t$9228$5uPkq))))
                                                         (g$syntax-dispatch$8296$5uPkq
                                                           g$t$9228$5uPkq
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9224$5uPkq))))
                                               (g$syntax-dispatch$8296$5uPkq
                                                 g$t$9224$5uPkq
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9205$5uPkq))))))
                            g$f$9204$5uPkq)
                          g$cls$9202$5uPkq
                          g$cls*$9203$5uPkq))))
                    g$ls/false$9201$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9200$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$9200$5uPkq
               '(_ any . each-any)))))
         g$stx$9199$5uPkq))))
   (g$do-include$8283$5uPkq
     g$do-include$11774$5uPkq
     (case-lambda
       ((g$stx$9241$5uPkq g$id$9242$5uPkq g$filename$9243$5uPkq)
        ((case-lambda
           ((g$filename$9244$5uPkq)
            (begin
              (if (not (if (string? g$filename$9244$5uPkq)
                         (begin '#f (g$id?$8018$5uPkq g$id$9242$5uPkq))
                         '#f))
                (g$syntax-violation$8407$5uPkq
                  '#f
                  '"invalid syntax"
                  g$stx$9241$5uPkq)
                (void))
              (cons
                (g$bless$8259$5uPkq 'begin)
                (g$with-input-from-file$7013$5uPkq
                  g$filename$9244$5uPkq
                  (case-lambda
                    (()
                     ((letrec ((g$f$9245$5uPkq
                                 (case-lambda
                                   ((g$ls$9246$5uPkq)
                                    ((case-lambda
                                       ((g$x$9247$5uPkq)
                                        (if (eof-object? g$x$9247$5uPkq)
                                          (reverse g$ls$9246$5uPkq)
                                          (g$f$9245$5uPkq
                                            (cons
                                              (g$datum->stx$8001$5uPkq
                                                g$id$9242$5uPkq
                                                g$x$9247$5uPkq)
                                              g$ls$9246$5uPkq)))))
                                     (read-annotated))))))
                        g$f$9245$5uPkq)
                      '()))))))))
         (g$stx->datum$8029$5uPkq g$filename$9243$5uPkq)))))
   (g$include-macro$8284$5uPkq
     g$include-macro$11775$5uPkq
     (case-lambda
       ((g$e$9248$5uPkq)
        ((case-lambda
           ((g$t$9249$5uPkq)
            ((case-lambda
               ((g$ls/false$9250$5uPkq)
                (if g$ls/false$9250$5uPkq
                  (apply
                    (case-lambda
                      ((g$id$9251$5uPkq g$filename$9252$5uPkq)
                       (g$do-include$8283$5uPkq
                         g$e$9248$5uPkq
                         g$id$9251$5uPkq
                         g$filename$9252$5uPkq)))
                    g$ls/false$9250$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9249$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9249$5uPkq '(any any)))))
         g$e$9248$5uPkq))))
   (g$include-into-macro$8285$5uPkq
     g$include-into-macro$11776$5uPkq
     (case-lambda
       ((g$e$9253$5uPkq)
        ((case-lambda
           ((g$t$9254$5uPkq)
            ((case-lambda
               ((g$ls/false$9255$5uPkq)
                (if g$ls/false$9255$5uPkq
                  (apply
                    (case-lambda
                      ((g$id$9256$5uPkq g$filename$9257$5uPkq)
                       (g$do-include$8283$5uPkq
                         g$e$9253$5uPkq
                         g$id$9256$5uPkq
                         g$filename$9257$5uPkq)))
                    g$ls/false$9255$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9254$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$9254$5uPkq '(_ any any)))))
         g$e$9253$5uPkq))))
   (g$syntax-rules-macro$8286$5uPkq
     g$syntax-rules-macro$11777$5uPkq
     (case-lambda
       ((g$e$9258$5uPkq)
        ((case-lambda
           ((g$t$9259$5uPkq)
            ((case-lambda
               ((g$ls/false$9260$5uPkq)
                (if g$ls/false$9260$5uPkq
                  (apply
                    (case-lambda
                      ((g$lits$9261$5uPkq g$pat*$9262$5uPkq g$tmp*$9263$5uPkq)
                       (begin
                         (g$verify-literals$8299$5uPkq
                           g$lits$9261$5uPkq
                           g$e$9258$5uPkq)
                         (g$bless$8259$5uPkq
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$9261$5uPkq
                                   (g$map$5759$5uPkq
                                     (case-lambda
                                       ((g$pat$9264$5uPkq g$tmp$9265$5uPkq)
                                        ((case-lambda
                                           ((g$t$9266$5uPkq)
                                            ((case-lambda
                                               ((g$ls/false$9267$5uPkq)
                                                (if g$ls/false$9267$5uPkq
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$9268$5uPkq)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$9268$5uPkq)
                                                         (list
                                                           'syntax
                                                           g$tmp$9265$5uPkq))))
                                                    g$ls/false$9267$5uPkq)
                                                  ((case-lambda
                                                     ((g$t$9269$5uPkq)
                                                      ((case-lambda
                                                         ((g$ls/false$9270$5uPkq)
                                                          (if g$ls/false$9270$5uPkq
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$8407$5uPkq
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$9258$5uPkq
                                                                   g$pat$9264$5uPkq)))
                                                              g$ls/false$9270$5uPkq)
                                                            (g$syntax-violation$8407$5uPkq
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$9269$5uPkq))))
                                                       (g$syntax-dispatch$8296$5uPkq
                                                         g$t$9269$5uPkq
                                                         '_))))
                                                   g$t$9266$5uPkq))))
                                             (g$syntax-dispatch$8296$5uPkq
                                               g$t$9266$5uPkq
                                               '(_ . any)))))
                                         g$pat$9264$5uPkq)))
                                     g$pat*$9262$5uPkq
                                     g$tmp*$9263$5uPkq)))))))))
                    g$ls/false$9260$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9259$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$9259$5uPkq
               '(_ each-any . #(each (any any)))))))
         g$e$9258$5uPkq))))
   (g$quasiquote-macro$8287$5uPkq
     g$quasiquote-macro$11778$5uPkq
     ((case-lambda
        (()
         (letrec* ((g$datum$9271$5uPkq
                     (case-lambda
                       ((g$x$9402$5uPkq)
                        (list
                          (g$scheme-stx$8239$5uPkq 'quote)
                          (g$mkstx$8006$5uPkq g$x$9402$5uPkq '() '() '())))))
                   (g$quasicons*$9287$5uPkq
                     (case-lambda
                       ((g$x$9398$5uPkq g$y$9399$5uPkq)
                        ((letrec ((g$f$9400$5uPkq
                                    (case-lambda
                                      ((g$x$9401$5uPkq)
                                       (if (null? g$x$9401$5uPkq)
                                         g$y$9399$5uPkq
                                         (g$quasicons$9288$5uPkq
                                           (car g$x$9401$5uPkq)
                                           (g$f$9400$5uPkq
                                             (cdr g$x$9401$5uPkq))))))))
                           g$f$9400$5uPkq)
                         g$x$9398$5uPkq))))
                   (g$quasicons$9288$5uPkq
                     (case-lambda
                       ((g$x$9379$5uPkq g$y$9380$5uPkq)
                        ((case-lambda
                           ((g$t$9381$5uPkq)
                            ((case-lambda
                               ((g$ls/false$9382$5uPkq)
                                (if g$ls/false$9382$5uPkq
                                  (apply
                                    (case-lambda
                                      ((g$dy$9383$5uPkq)
                                       ((case-lambda
                                          ((g$t$9384$5uPkq)
                                           ((case-lambda
                                              ((g$ls/false$9385$5uPkq)
                                               (if g$ls/false$9385$5uPkq
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9386$5uPkq)
                                                      (list
                                                        (g$scheme-stx$8239$5uPkq
                                                          'quote)
                                                        (cons
                                                          g$dx$9386$5uPkq
                                                          g$dy$9383$5uPkq))))
                                                   g$ls/false$9385$5uPkq)
                                                 ((case-lambda
                                                    ((g$t$9387$5uPkq)
                                                     ((case-lambda
                                                        ((g$ls/false$9388$5uPkq)
                                                         (if g$ls/false$9388$5uPkq
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9389$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9390$5uPkq)
                                                                        (if g$ls/false$9390$5uPkq
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$8239$5uPkq
                                                                                   'list)
                                                                                 g$x$9379$5uPkq)))
                                                                            g$ls/false$9390$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$t$9391$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9392$5uPkq)
                                                                                  (if g$ls/false$9392$5uPkq
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$8239$5uPkq
                                                                                             'cons)
                                                                                           g$x$9379$5uPkq
                                                                                           g$y$9380$5uPkq)))
                                                                                      g$ls/false$9392$5uPkq)
                                                                                    (g$syntax-violation$8407$5uPkq
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9391$5uPkq))))
                                                                               (g$syntax-dispatch$8296$5uPkq
                                                                                 g$t$9391$5uPkq
                                                                                 '_))))
                                                                           g$t$9389$5uPkq))))
                                                                     (g$syntax-dispatch$8296$5uPkq
                                                                       g$t$9389$5uPkq
                                                                       '()))))
                                                                 g$dy$9383$5uPkq)))
                                                             g$ls/false$9388$5uPkq)
                                                           (g$syntax-violation$8407$5uPkq
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9387$5uPkq))))
                                                      (g$syntax-dispatch$8296$5uPkq
                                                        g$t$9387$5uPkq
                                                        '_))))
                                                  g$t$9384$5uPkq))))
                                            (g$syntax-dispatch$8296$5uPkq
                                              g$t$9384$5uPkq
                                              '(#(scheme-id quote) any)))))
                                        g$x$9379$5uPkq)))
                                    g$ls/false$9382$5uPkq)
                                  ((case-lambda
                                     ((g$t$9393$5uPkq)
                                      ((case-lambda
                                         ((g$ls/false$9394$5uPkq)
                                          (if g$ls/false$9394$5uPkq
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9395$5uPkq)
                                                 (g$cons*$5761$5uPkq
                                                   (g$scheme-stx$8239$5uPkq
                                                     'list)
                                                   g$x$9379$5uPkq
                                                   g$stuff$9395$5uPkq)))
                                              g$ls/false$9394$5uPkq)
                                            ((case-lambda
                                               ((g$t$9396$5uPkq)
                                                ((case-lambda
                                                   ((g$ls/false$9397$5uPkq)
                                                    (if g$ls/false$9397$5uPkq
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$8239$5uPkq
                                                               'cons)
                                                             g$x$9379$5uPkq
                                                             g$y$9380$5uPkq)))
                                                        g$ls/false$9397$5uPkq)
                                                      (g$syntax-violation$8407$5uPkq
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9396$5uPkq))))
                                                 (g$syntax-dispatch$8296$5uPkq
                                                   g$t$9396$5uPkq
                                                   '_))))
                                             g$t$9393$5uPkq))))
                                       (g$syntax-dispatch$8296$5uPkq
                                         g$t$9393$5uPkq
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9381$5uPkq))))
                             (g$syntax-dispatch$8296$5uPkq
                               g$t$9381$5uPkq
                               '(#(scheme-id quote) any)))))
                         g$y$9380$5uPkq))))
                   (g$quasiappend$9289$5uPkq
                     (case-lambda
                       ((g$x$9366$5uPkq g$y$9367$5uPkq)
                        ((case-lambda
                           ((g$ls$9368$5uPkq)
                            (if (null? g$ls$9368$5uPkq)
                              (list (g$scheme-stx$8239$5uPkq 'quote) '())
                              (if (null? (cdr g$ls$9368$5uPkq))
                                (car g$ls$9368$5uPkq)
                                (g$cons*$5761$5uPkq
                                  (g$scheme-stx$8239$5uPkq 'append)
                                  g$ls$9368$5uPkq)))))
                         ((letrec ((g$f$9369$5uPkq
                                     (case-lambda
                                       ((g$x$9370$5uPkq)
                                        (if (null? g$x$9370$5uPkq)
                                          ((case-lambda
                                             ((g$t$9371$5uPkq)
                                              ((case-lambda
                                                 ((g$ls/false$9372$5uPkq)
                                                  (if g$ls/false$9372$5uPkq
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9372$5uPkq)
                                                    ((case-lambda
                                                       ((g$t$9373$5uPkq)
                                                        ((case-lambda
                                                           ((g$ls/false$9374$5uPkq)
                                                            (if g$ls/false$9374$5uPkq
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9367$5uPkq)))
                                                                g$ls/false$9374$5uPkq)
                                                              (g$syntax-violation$8407$5uPkq
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9373$5uPkq))))
                                                         (g$syntax-dispatch$8296$5uPkq
                                                           g$t$9373$5uPkq
                                                           '_))))
                                                     g$t$9371$5uPkq))))
                                               (g$syntax-dispatch$8296$5uPkq
                                                 g$t$9371$5uPkq
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9367$5uPkq)
                                          ((case-lambda
                                             ((g$t$9375$5uPkq)
                                              ((case-lambda
                                                 ((g$ls/false$9376$5uPkq)
                                                  (if g$ls/false$9376$5uPkq
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9369$5uPkq
                                                           (cdr g$x$9370$5uPkq))))
                                                      g$ls/false$9376$5uPkq)
                                                    ((case-lambda
                                                       ((g$t$9377$5uPkq)
                                                        ((case-lambda
                                                           ((g$ls/false$9378$5uPkq)
                                                            (if g$ls/false$9378$5uPkq
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9370$5uPkq)
                                                                     (g$f$9369$5uPkq
                                                                       (cdr g$x$9370$5uPkq)))))
                                                                g$ls/false$9378$5uPkq)
                                                              (g$syntax-violation$8407$5uPkq
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9377$5uPkq))))
                                                         (g$syntax-dispatch$8296$5uPkq
                                                           g$t$9377$5uPkq
                                                           '_))))
                                                     g$t$9375$5uPkq))))
                                               (g$syntax-dispatch$8296$5uPkq
                                                 g$t$9375$5uPkq
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9370$5uPkq)))))))
                            g$f$9369$5uPkq)
                          g$x$9366$5uPkq)))))
                   (g$quasivector$9290$5uPkq
                     (case-lambda
                       ((g$x$9341$5uPkq)
                        ((case-lambda
                           ((g$pat-x$9342$5uPkq)
                            ((case-lambda
                               ((g$t$9343$5uPkq)
                                ((case-lambda
                                   ((g$ls/false$9344$5uPkq)
                                    (if g$ls/false$9344$5uPkq
                                      (apply
                                        (case-lambda
                                          ((g$x*$9345$5uPkq)
                                           (list
                                             (g$scheme-stx$8239$5uPkq 'quote)
                                             (list->vector g$x*$9345$5uPkq))))
                                        g$ls/false$9344$5uPkq)
                                      ((case-lambda
                                         ((g$t$9346$5uPkq)
                                          ((case-lambda
                                             ((g$ls/false$9347$5uPkq)
                                              (if g$ls/false$9347$5uPkq
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9348$5uPkq
                                                                 (case-lambda
                                                                   ((g$x$9349$5uPkq
                                                                      g$k$9350$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$t$9351$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9352$5uPkq)
                                                                            (if g$ls/false$9352$5uPkq
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9353$5uPkq)
                                                                                   (g$k$9350$5uPkq
                                                                                     (g$map$5759$5uPkq
                                                                                       (case-lambda
                                                                                         ((g$x$9354$5uPkq)
                                                                                          (list
                                                                                            (g$scheme-stx$8239$5uPkq
                                                                                              'quote)
                                                                                            g$x$9354$5uPkq)))
                                                                                       g$x*$9353$5uPkq))))
                                                                                g$ls/false$9352$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$t$9355$5uPkq)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9356$5uPkq)
                                                                                      (if g$ls/false$9356$5uPkq
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9357$5uPkq)
                                                                                             (g$k$9350$5uPkq
                                                                                               g$x*$9357$5uPkq)))
                                                                                          g$ls/false$9356$5uPkq)
                                                                                        ((case-lambda
                                                                                           ((g$t$9358$5uPkq)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9359$5uPkq)
                                                                                                (if g$ls/false$9359$5uPkq
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9360$5uPkq
                                                                                                         g$y$9361$5uPkq)
                                                                                                       (g$f$9348$5uPkq
                                                                                                         g$y$9361$5uPkq
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9362$5uPkq)
                                                                                                            (g$k$9350$5uPkq
                                                                                                              (cons
                                                                                                                g$x$9360$5uPkq
                                                                                                                g$ls$9362$5uPkq)))))))
                                                                                                    g$ls/false$9359$5uPkq)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9363$5uPkq)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9364$5uPkq)
                                                                                                          (if g$ls/false$9364$5uPkq
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$8239$5uPkq
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9342$5uPkq)))
                                                                                                              g$ls/false$9364$5uPkq)
                                                                                                            (g$syntax-violation$8407$5uPkq
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9363$5uPkq))))
                                                                                                       (g$syntax-dispatch$8296$5uPkq
                                                                                                         g$t$9363$5uPkq
                                                                                                         '_))))
                                                                                                   g$t$9358$5uPkq))))
                                                                                             (g$syntax-dispatch$8296$5uPkq
                                                                                               g$t$9358$5uPkq
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9355$5uPkq))))
                                                                                   (g$syntax-dispatch$8296$5uPkq
                                                                                     g$t$9355$5uPkq
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9351$5uPkq))))
                                                                         (g$syntax-dispatch$8296$5uPkq
                                                                           g$t$9351$5uPkq
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9349$5uPkq)))))
                                                        g$f$9348$5uPkq)
                                                      g$x$9341$5uPkq
                                                      (case-lambda
                                                        ((g$ls$9365$5uPkq)
                                                         (g$cons*$5761$5uPkq
                                                           (g$scheme-stx$8239$5uPkq
                                                             'vector)
                                                           g$ls$9365$5uPkq))))))
                                                  g$ls/false$9347$5uPkq)
                                                (g$syntax-violation$8407$5uPkq
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9346$5uPkq))))
                                           (g$syntax-dispatch$8296$5uPkq
                                             g$t$9346$5uPkq
                                             '_))))
                                       g$t$9343$5uPkq))))
                                 (g$syntax-dispatch$8296$5uPkq
                                   g$t$9343$5uPkq
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9342$5uPkq)))
                         g$x$9341$5uPkq))))
                   (g$vquasi$9291$5uPkq
                     (case-lambda
                       ((g$p$9324$5uPkq g$lev$9325$5uPkq)
                        ((case-lambda
                           ((g$t$9326$5uPkq)
                            ((case-lambda
                               ((g$ls/false$9327$5uPkq)
                                (if g$ls/false$9327$5uPkq
                                  (apply
                                    (case-lambda
                                      ((g$p$9328$5uPkq g$q$9329$5uPkq)
                                       ((case-lambda
                                          ((g$t$9330$5uPkq)
                                           ((case-lambda
                                              ((g$ls/false$9331$5uPkq)
                                               (if g$ls/false$9331$5uPkq
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9332$5uPkq)
                                                      (if (= g$lev$9325$5uPkq
                                                             '0)
                                                        (g$quasicons*$9287$5uPkq
                                                          g$p$9332$5uPkq
                                                          (g$vquasi$9291$5uPkq
                                                            g$q$9329$5uPkq
                                                            g$lev$9325$5uPkq))
                                                        (g$quasicons$9288$5uPkq
                                                          (g$quasicons$9288$5uPkq
                                                            (g$datum$9271$5uPkq
                                                              'unquote)
                                                            (g$quasi$9292$5uPkq
                                                              g$p$9332$5uPkq
                                                              (- g$lev$9325$5uPkq
                                                                 '1)))
                                                          (g$vquasi$9291$5uPkq
                                                            g$q$9329$5uPkq
                                                            g$lev$9325$5uPkq)))))
                                                   g$ls/false$9331$5uPkq)
                                                 ((case-lambda
                                                    ((g$t$9333$5uPkq)
                                                     ((case-lambda
                                                        ((g$ls/false$9334$5uPkq)
                                                         (if g$ls/false$9334$5uPkq
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9335$5uPkq)
                                                                (if (= g$lev$9325$5uPkq
                                                                       '0)
                                                                  (g$quasiappend$9289$5uPkq
                                                                    g$p$9335$5uPkq
                                                                    (g$vquasi$9291$5uPkq
                                                                      g$q$9329$5uPkq
                                                                      g$lev$9325$5uPkq))
                                                                  (g$quasicons$9288$5uPkq
                                                                    (g$quasicons$9288$5uPkq
                                                                      (g$datum$9271$5uPkq
                                                                        'unquote-splicing)
                                                                      (g$quasi$9292$5uPkq
                                                                        g$p$9335$5uPkq
                                                                        (- g$lev$9325$5uPkq
                                                                           '1)))
                                                                    (g$vquasi$9291$5uPkq
                                                                      g$q$9329$5uPkq
                                                                      g$lev$9325$5uPkq)))))
                                                             g$ls/false$9334$5uPkq)
                                                           ((case-lambda
                                                              ((g$t$9336$5uPkq)
                                                               ((case-lambda
                                                                  ((g$ls/false$9337$5uPkq)
                                                                   (if g$ls/false$9337$5uPkq
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9338$5uPkq)
                                                                          (g$quasicons$9288$5uPkq
                                                                            (g$quasi$9292$5uPkq
                                                                              g$p$9338$5uPkq
                                                                              g$lev$9325$5uPkq)
                                                                            (g$vquasi$9291$5uPkq
                                                                              g$q$9329$5uPkq
                                                                              g$lev$9325$5uPkq))))
                                                                       g$ls/false$9337$5uPkq)
                                                                     (g$syntax-violation$8407$5uPkq
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9336$5uPkq))))
                                                                (g$syntax-dispatch$8296$5uPkq
                                                                  g$t$9336$5uPkq
                                                                  'any))))
                                                            g$t$9333$5uPkq))))
                                                      (g$syntax-dispatch$8296$5uPkq
                                                        g$t$9333$5uPkq
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9330$5uPkq))))
                                            (g$syntax-dispatch$8296$5uPkq
                                              g$t$9330$5uPkq
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9328$5uPkq)))
                                    g$ls/false$9327$5uPkq)
                                  ((case-lambda
                                     ((g$t$9339$5uPkq)
                                      ((case-lambda
                                         ((g$ls/false$9340$5uPkq)
                                          (if g$ls/false$9340$5uPkq
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$8239$5uPkq
                                                     'quote)
                                                   '())))
                                              g$ls/false$9340$5uPkq)
                                            (g$syntax-violation$8407$5uPkq
                                              '#f
                                              '"invalid syntax"
                                              g$t$9339$5uPkq))))
                                       (g$syntax-dispatch$8296$5uPkq
                                         g$t$9339$5uPkq
                                         '()))))
                                   g$t$9326$5uPkq))))
                             (g$syntax-dispatch$8296$5uPkq
                               g$t$9326$5uPkq
                               '(any . any)))))
                         g$p$9324$5uPkq))))
                   (g$quasi$9292$5uPkq
                     (case-lambda
                       ((g$p$9297$5uPkq g$lev$9298$5uPkq)
                        ((case-lambda
                           ((g$t$9299$5uPkq)
                            ((case-lambda
                               ((g$ls/false$9300$5uPkq)
                                (if g$ls/false$9300$5uPkq
                                  (apply
                                    (case-lambda
                                      ((g$p$9301$5uPkq)
                                       (if (= g$lev$9298$5uPkq '0)
                                         g$p$9301$5uPkq
                                         (g$quasicons$9288$5uPkq
                                           (g$datum$9271$5uPkq 'unquote)
                                           (g$quasi$9292$5uPkq
                                             (list g$p$9301$5uPkq)
                                             (- g$lev$9298$5uPkq '1))))))
                                    g$ls/false$9300$5uPkq)
                                  ((case-lambda
                                     ((g$t$9302$5uPkq)
                                      ((case-lambda
                                         ((g$ls/false$9303$5uPkq)
                                          (if g$ls/false$9303$5uPkq
                                            (apply
                                              (case-lambda
                                                ((g$p$9304$5uPkq g$q$9305$5uPkq)
                                                 (if (= g$lev$9298$5uPkq '0)
                                                   (g$quasicons*$9287$5uPkq
                                                     g$p$9304$5uPkq
                                                     (g$quasi$9292$5uPkq
                                                       g$q$9305$5uPkq
                                                       g$lev$9298$5uPkq))
                                                   (g$quasicons$9288$5uPkq
                                                     (g$quasicons$9288$5uPkq
                                                       (g$datum$9271$5uPkq
                                                         'unquote)
                                                       (g$quasi$9292$5uPkq
                                                         g$p$9304$5uPkq
                                                         (- g$lev$9298$5uPkq
                                                            '1)))
                                                     (g$quasi$9292$5uPkq
                                                       g$q$9305$5uPkq
                                                       g$lev$9298$5uPkq)))))
                                              g$ls/false$9303$5uPkq)
                                            ((case-lambda
                                               ((g$t$9306$5uPkq)
                                                ((case-lambda
                                                   ((g$ls/false$9307$5uPkq)
                                                    (if g$ls/false$9307$5uPkq
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9308$5uPkq
                                                             g$q$9309$5uPkq)
                                                           (if (= g$lev$9298$5uPkq
                                                                  '0)
                                                             (g$quasiappend$9289$5uPkq
                                                               g$p$9308$5uPkq
                                                               (g$quasi$9292$5uPkq
                                                                 g$q$9309$5uPkq
                                                                 g$lev$9298$5uPkq))
                                                             (g$quasicons$9288$5uPkq
                                                               (g$quasicons$9288$5uPkq
                                                                 (g$datum$9271$5uPkq
                                                                   'unquote-splicing)
                                                                 (g$quasi$9292$5uPkq
                                                                   g$p$9308$5uPkq
                                                                   (- g$lev$9298$5uPkq
                                                                      '1)))
                                                               (g$quasi$9292$5uPkq
                                                                 g$q$9309$5uPkq
                                                                 g$lev$9298$5uPkq)))))
                                                        g$ls/false$9307$5uPkq)
                                                      ((case-lambda
                                                         ((g$t$9310$5uPkq)
                                                          ((case-lambda
                                                             ((g$ls/false$9311$5uPkq)
                                                              (if g$ls/false$9311$5uPkq
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9312$5uPkq)
                                                                     (g$quasicons$9288$5uPkq
                                                                       (g$datum$9271$5uPkq
                                                                         'quasiquote)
                                                                       (g$quasi$9292$5uPkq
                                                                         (list
                                                                           g$p$9312$5uPkq)
                                                                         (+ g$lev$9298$5uPkq
                                                                            '1)))))
                                                                  g$ls/false$9311$5uPkq)
                                                                ((case-lambda
                                                                   ((g$t$9313$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9314$5uPkq)
                                                                        (if g$ls/false$9314$5uPkq
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9315$5uPkq
                                                                                 g$q$9316$5uPkq)
                                                                               (g$quasicons$9288$5uPkq
                                                                                 (g$quasi$9292$5uPkq
                                                                                   g$p$9315$5uPkq
                                                                                   g$lev$9298$5uPkq)
                                                                                 (g$quasi$9292$5uPkq
                                                                                   g$q$9316$5uPkq
                                                                                   g$lev$9298$5uPkq))))
                                                                            g$ls/false$9314$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$t$9317$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9318$5uPkq)
                                                                                  (if (if g$ls/false$9318$5uPkq
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9319$5uPkq)
                                                                                               (not (g$stx?$7990$5uPkq
                                                                                                      g$x$9319$5uPkq))))
                                                                                            g$ls/false$9318$5uPkq))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9320$5uPkq)
                                                                                         (g$quasivector$9290$5uPkq
                                                                                           (g$vquasi$9291$5uPkq
                                                                                             g$x$9320$5uPkq
                                                                                             g$lev$9298$5uPkq))))
                                                                                      g$ls/false$9318$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$t$9321$5uPkq)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9322$5uPkq)
                                                                                            (if g$ls/false$9322$5uPkq
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9323$5uPkq)
                                                                                                   (list
                                                                                                     (g$scheme-stx$8239$5uPkq
                                                                                                       'quote)
                                                                                                     g$p$9323$5uPkq)))
                                                                                                g$ls/false$9322$5uPkq)
                                                                                              (g$syntax-violation$8407$5uPkq
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9321$5uPkq))))
                                                                                         (g$syntax-dispatch$8296$5uPkq
                                                                                           g$t$9321$5uPkq
                                                                                           'any))))
                                                                                     g$t$9317$5uPkq))))
                                                                               (g$syntax-dispatch$8296$5uPkq
                                                                                 g$t$9317$5uPkq
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9313$5uPkq))))
                                                                     (g$syntax-dispatch$8296$5uPkq
                                                                       g$t$9313$5uPkq
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9310$5uPkq))))
                                                           (g$syntax-dispatch$8296$5uPkq
                                                             g$t$9310$5uPkq
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$9306$5uPkq))))
                                                 (g$syntax-dispatch$8296$5uPkq
                                                   g$t$9306$5uPkq
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9302$5uPkq))))
                                       (g$syntax-dispatch$8296$5uPkq
                                         g$t$9302$5uPkq
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$9299$5uPkq))))
                             (g$syntax-dispatch$8296$5uPkq
                               g$t$9299$5uPkq
                               '(#(scheme-id unquote) any)))))
                         g$p$9297$5uPkq)))))
           (case-lambda
             ((g$x$9293$5uPkq)
              ((case-lambda
                 ((g$t$9294$5uPkq)
                  ((case-lambda
                     ((g$ls/false$9295$5uPkq)
                      (if g$ls/false$9295$5uPkq
                        (apply
                          (case-lambda
                            ((g$e$9296$5uPkq)
                             (g$quasi$9292$5uPkq g$e$9296$5uPkq '0)))
                          g$ls/false$9295$5uPkq)
                        (g$syntax-violation$8407$5uPkq
                          '#f
                          '"invalid syntax"
                          g$t$9294$5uPkq))))
                   (g$syntax-dispatch$8296$5uPkq g$t$9294$5uPkq '(_ any)))))
               g$x$9293$5uPkq))))))))
   (g$quasisyntax-macro$8288$5uPkq
     g$quasisyntax-macro$11779$5uPkq
     ((case-lambda
        (()
         (letrec* ((g$quasi$9403$5uPkq
                     (case-lambda
                       ((g$p$9417$5uPkq g$lev$9418$5uPkq)
                        ((case-lambda
                           ((g$t$9419$5uPkq)
                            ((case-lambda
                               ((g$ls/false$9420$5uPkq)
                                (if g$ls/false$9420$5uPkq
                                  (apply
                                    (case-lambda
                                      ((g$p$9421$5uPkq)
                                       (if (= g$lev$9418$5uPkq '0)
                                         ((case-lambda
                                            ((g$g$9422$5uPkq)
                                             (values
                                               (list g$g$9422$5uPkq)
                                               (list g$p$9421$5uPkq)
                                               g$g$9422$5uPkq)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9403$5uPkq
                                                g$p$9421$5uPkq
                                                (- g$lev$9418$5uPkq '1))))
                                           (case-lambda
                                             ((g$lhs*$9426$5uPkq
                                                g$rhs*$9427$5uPkq
                                                g$p$9428$5uPkq)
                                              ((case-lambda
                                                 ((g$p$9429$5uPkq
                                                    g$rhs*$9430$5uPkq
                                                    g$lhs*$9431$5uPkq)
                                                  (values
                                                    g$lhs*$9431$5uPkq
                                                    g$rhs*$9430$5uPkq
                                                    (list
                                                      'unsyntax
                                                      g$p$9429$5uPkq))))
                                               g$p$9428$5uPkq
                                               g$rhs*$9427$5uPkq
                                               g$lhs*$9426$5uPkq)))))))
                                    g$ls/false$9420$5uPkq)
                                  ((case-lambda
                                     ((g$t$9432$5uPkq)
                                      ((case-lambda
                                         ((g$ls/false$9433$5uPkq)
                                          (if (if g$ls/false$9433$5uPkq
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9418$5uPkq '0)))
                                                    g$ls/false$9433$5uPkq))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8407$5uPkq
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9417$5uPkq)))
                                              g$ls/false$9433$5uPkq)
                                            ((case-lambda
                                               ((g$t$9434$5uPkq)
                                                ((case-lambda
                                                   ((g$ls/false$9435$5uPkq)
                                                    (if g$ls/false$9435$5uPkq
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$9436$5uPkq
                                                             g$q$9437$5uPkq)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9403$5uPkq
                                                                  g$q$9437$5uPkq
                                                                  g$lev$9418$5uPkq)))
                                                             (case-lambda
                                                               ((g$lhs*$9441$5uPkq
                                                                  g$rhs*$9442$5uPkq
                                                                  g$q$9443$5uPkq)
                                                                ((case-lambda
                                                                   ((g$q$9444$5uPkq
                                                                      g$rhs*$9445$5uPkq
                                                                      g$lhs*$9446$5uPkq)
                                                                    (if (= g$lev$9418$5uPkq
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$9447$5uPkq)
                                                                          (values
                                                                            (append
                                                                              g$g*$9447$5uPkq
                                                                              g$lhs*$9446$5uPkq)
                                                                            (append
                                                                              g$p*$9436$5uPkq
                                                                              g$rhs*$9445$5uPkq)
                                                                            (append
                                                                              g$g*$9447$5uPkq
                                                                              g$q$9444$5uPkq))))
                                                                       (g$map$5759$5uPkq
                                                                         (case-lambda
                                                                           ((g$x$9448$5uPkq)
                                                                            (gensym)))
                                                                         g$p*$9436$5uPkq))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9403$5uPkq
                                                                             g$p*$9436$5uPkq
                                                                             (- g$lev$9418$5uPkq
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9452$5uPkq
                                                                             g$rhs2*$9453$5uPkq
                                                                             g$p*$9454$5uPkq)
                                                                           ((case-lambda
                                                                              ((g$p*$9455$5uPkq
                                                                                 g$rhs2*$9456$5uPkq
                                                                                 g$lhs2*$9457$5uPkq)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9457$5uPkq
                                                                                   g$lhs*$9446$5uPkq)
                                                                                 (append
                                                                                   g$rhs2*$9456$5uPkq
                                                                                   g$rhs*$9445$5uPkq)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$9455$5uPkq)
                                                                                   g$q$9444$5uPkq))))
                                                                            g$p*$9454$5uPkq
                                                                            g$rhs2*$9453$5uPkq
                                                                            g$lhs2*$9452$5uPkq)))))))
                                                                 g$q$9443$5uPkq
                                                                 g$rhs*$9442$5uPkq
                                                                 g$lhs*$9441$5uPkq))))))
                                                        g$ls/false$9435$5uPkq)
                                                      ((case-lambda
                                                         ((g$t$9458$5uPkq)
                                                          ((case-lambda
                                                             ((g$ls/false$9459$5uPkq)
                                                              (if g$ls/false$9459$5uPkq
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$9460$5uPkq
                                                                       g$q$9461$5uPkq)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$9403$5uPkq
                                                                            g$q$9461$5uPkq
                                                                            g$lev$9418$5uPkq)))
                                                                       (case-lambda
                                                                         ((g$lhs*$9465$5uPkq
                                                                            g$rhs*$9466$5uPkq
                                                                            g$q$9467$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$q$9468$5uPkq
                                                                                g$rhs*$9469$5uPkq
                                                                                g$lhs*$9470$5uPkq)
                                                                              (if (= g$lev$9418$5uPkq
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9471$5uPkq)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$5759$5uPkq
                                                                                          (case-lambda
                                                                                            ((g$g$9472$5uPkq)
                                                                                             (cons
                                                                                               g$g$9472$5uPkq
                                                                                               '(...))))
                                                                                          g$g*$9471$5uPkq)
                                                                                        g$lhs*$9470$5uPkq)
                                                                                      (append
                                                                                        g$p*$9460$5uPkq
                                                                                        g$rhs*$9469$5uPkq)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$5759$5uPkq
                                                                                            (case-lambda
                                                                                              ((g$g$9473$5uPkq)
                                                                                               (cons
                                                                                                 g$g$9473$5uPkq
                                                                                                 '(...))))
                                                                                            g$g*$9471$5uPkq))
                                                                                        g$q$9468$5uPkq))))
                                                                                 (g$map$5759$5uPkq
                                                                                   (case-lambda
                                                                                     ((g$x$9474$5uPkq)
                                                                                      (gensym)))
                                                                                   g$p*$9460$5uPkq))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$9403$5uPkq
                                                                                       g$p*$9460$5uPkq
                                                                                       (- g$lev$9418$5uPkq
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9478$5uPkq
                                                                                       g$rhs2*$9479$5uPkq
                                                                                       g$p*$9480$5uPkq)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9481$5uPkq
                                                                                           g$rhs2*$9482$5uPkq
                                                                                           g$lhs2*$9483$5uPkq)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9483$5uPkq
                                                                                             g$lhs*$9470$5uPkq)
                                                                                           (append
                                                                                             g$rhs2*$9482$5uPkq
                                                                                             g$rhs*$9469$5uPkq)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9481$5uPkq)
                                                                                             g$q$9468$5uPkq))))
                                                                                      g$p*$9480$5uPkq
                                                                                      g$rhs2*$9479$5uPkq
                                                                                      g$lhs2*$9478$5uPkq)))))))
                                                                           g$q$9467$5uPkq
                                                                           g$rhs*$9466$5uPkq
                                                                           g$lhs*$9465$5uPkq))))))
                                                                  g$ls/false$9459$5uPkq)
                                                                ((case-lambda
                                                                   ((g$t$9484$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9485$5uPkq)
                                                                        (if (if g$ls/false$9485$5uPkq
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$9418$5uPkq
                                                                                        '0)))
                                                                                  g$ls/false$9485$5uPkq))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$8407$5uPkq
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$9417$5uPkq)))
                                                                            g$ls/false$9485$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$t$9486$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9487$5uPkq)
                                                                                  (if g$ls/false$9487$5uPkq
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9488$5uPkq)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9403$5uPkq
                                                                                                g$p$9488$5uPkq
                                                                                                (+ g$lev$9418$5uPkq
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9492$5uPkq
                                                                                                g$rhs*$9493$5uPkq
                                                                                                g$p$9494$5uPkq)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9495$5uPkq
                                                                                                    g$rhs*$9496$5uPkq
                                                                                                    g$lhs*$9497$5uPkq)
                                                                                                  (values
                                                                                                    g$lhs*$9497$5uPkq
                                                                                                    g$rhs*$9496$5uPkq
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9495$5uPkq))))
                                                                                               g$p$9494$5uPkq
                                                                                               g$rhs*$9493$5uPkq
                                                                                               g$lhs*$9492$5uPkq))))))
                                                                                      g$ls/false$9487$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$t$9498$5uPkq)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9499$5uPkq)
                                                                                            (if g$ls/false$9499$5uPkq
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9500$5uPkq
                                                                                                     g$q$9501$5uPkq)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$9403$5uPkq
                                                                                                          g$p$9500$5uPkq
                                                                                                          g$lev$9418$5uPkq)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9508$5uPkq
                                                                                                          g$rhs*$9509$5uPkq
                                                                                                          g$p$9510$5uPkq)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$9403$5uPkq
                                                                                                               g$q$9501$5uPkq
                                                                                                               g$lev$9418$5uPkq)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$9511$5uPkq
                                                                                                               g$rhs2*$9512$5uPkq
                                                                                                               g$q$9513$5uPkq)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$9514$5uPkq
                                                                                                                   g$rhs2*$9515$5uPkq
                                                                                                                   g$lhs2*$9516$5uPkq
                                                                                                                   g$p$9517$5uPkq
                                                                                                                   g$rhs*$9518$5uPkq
                                                                                                                   g$lhs*$9519$5uPkq)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$9516$5uPkq
                                                                                                                     g$lhs*$9519$5uPkq)
                                                                                                                   (append
                                                                                                                     g$rhs2*$9515$5uPkq
                                                                                                                     g$rhs*$9518$5uPkq)
                                                                                                                   (cons
                                                                                                                     g$p$9517$5uPkq
                                                                                                                     g$q$9514$5uPkq))))
                                                                                                              g$q$9513$5uPkq
                                                                                                              g$rhs2*$9512$5uPkq
                                                                                                              g$lhs2*$9511$5uPkq
                                                                                                              g$p$9510$5uPkq
                                                                                                              g$rhs*$9509$5uPkq
                                                                                                              g$lhs*$9508$5uPkq)))))))))
                                                                                                g$ls/false$9499$5uPkq)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9520$5uPkq)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9521$5uPkq)
                                                                                                      (if g$ls/false$9521$5uPkq
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$9522$5uPkq)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$9403$5uPkq
                                                                                                                    g$x*$9522$5uPkq
                                                                                                                    g$lev$9418$5uPkq)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$9526$5uPkq
                                                                                                                    g$rhs*$9527$5uPkq
                                                                                                                    g$x*$9528$5uPkq)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$9529$5uPkq
                                                                                                                        g$rhs*$9530$5uPkq
                                                                                                                        g$lhs*$9531$5uPkq)
                                                                                                                      (values
                                                                                                                        g$lhs*$9531$5uPkq
                                                                                                                        g$rhs*$9530$5uPkq
                                                                                                                        (list->vector
                                                                                                                          g$x*$9529$5uPkq))))
                                                                                                                   g$x*$9528$5uPkq
                                                                                                                   g$rhs*$9527$5uPkq
                                                                                                                   g$lhs*$9526$5uPkq))))))
                                                                                                          g$ls/false$9521$5uPkq)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9532$5uPkq)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9533$5uPkq)
                                                                                                                (if g$ls/false$9533$5uPkq
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$9417$5uPkq)))
                                                                                                                    g$ls/false$9533$5uPkq)
                                                                                                                  (g$syntax-violation$8407$5uPkq
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9532$5uPkq))))
                                                                                                             (g$syntax-dispatch$8296$5uPkq
                                                                                                               g$t$9532$5uPkq
                                                                                                               '_))))
                                                                                                         g$t$9520$5uPkq))))
                                                                                                   (g$syntax-dispatch$8296$5uPkq
                                                                                                     g$t$9520$5uPkq
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$9498$5uPkq))))
                                                                                         (g$syntax-dispatch$8296$5uPkq
                                                                                           g$t$9498$5uPkq
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9486$5uPkq))))
                                                                               (g$syntax-dispatch$8296$5uPkq
                                                                                 g$t$9486$5uPkq
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9484$5uPkq))))
                                                                     (g$syntax-dispatch$8296$5uPkq
                                                                       g$t$9484$5uPkq
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$9458$5uPkq))))
                                                           (g$syntax-dispatch$8296$5uPkq
                                                             g$t$9458$5uPkq
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$9434$5uPkq))))
                                                 (g$syntax-dispatch$8296$5uPkq
                                                   g$t$9434$5uPkq
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9432$5uPkq))))
                                       (g$syntax-dispatch$8296$5uPkq
                                         g$t$9432$5uPkq
                                         '#(scheme-id unsyntax)))))
                                   g$t$9419$5uPkq))))
                             (g$syntax-dispatch$8296$5uPkq
                               g$t$9419$5uPkq
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9417$5uPkq)))))
           (case-lambda
             ((g$x$9404$5uPkq)
              ((case-lambda
                 ((g$t$9405$5uPkq)
                  ((case-lambda
                     ((g$ls/false$9406$5uPkq)
                      (if g$ls/false$9406$5uPkq
                        (apply
                          (case-lambda
                            ((g$e$9407$5uPkq)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9403$5uPkq g$e$9407$5uPkq '0)))
                               (case-lambda
                                 ((g$lhs*$9411$5uPkq
                                    g$rhs*$9412$5uPkq
                                    g$v$9413$5uPkq)
                                  ((case-lambda
                                     ((g$v$9414$5uPkq
                                        g$rhs*$9415$5uPkq
                                        g$lhs*$9416$5uPkq)
                                      (g$bless$8259$5uPkq
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9415$5uPkq)
                                          '()
                                          (list
                                            g$lhs*$9416$5uPkq
                                            (list 'syntax g$v$9414$5uPkq))))))
                                   g$v$9413$5uPkq
                                   g$rhs*$9412$5uPkq
                                   g$lhs*$9411$5uPkq))))))
                          g$ls/false$9406$5uPkq)
                        (g$syntax-violation$8407$5uPkq
                          '#f
                          '"invalid syntax"
                          g$t$9405$5uPkq))))
                   (g$syntax-dispatch$8296$5uPkq g$t$9405$5uPkq '(_ any)))))
               g$x$9404$5uPkq))))))))
   (g$define-struct-macro$8289$5uPkq
     g$define-struct-macro$11780$5uPkq
     (case-lambda
       ((g$stx$9534$5uPkq)
        (g$syntax-violation$8407$5uPkq
          '#f
          '"define-struct not supported"
          g$stx$9534$5uPkq))))
   (g$define-record-type-macro$8290$5uPkq
     g$define-record-type-macro$11781$5uPkq
     (case-lambda
       ((g$x$9535$5uPkq)
        (letrec* ((g$id$9536$5uPkq
                    (case-lambda
                      ((g$ctxt$9788$5uPkq . g$str*$9789$5uPkq)
                       (g$datum->syntax$8409$5uPkq
                         g$ctxt$9788$5uPkq
                         (string->symbol
                           (apply
                             string-append
                             (g$map$5759$5uPkq
                               (case-lambda
                                 ((g$x$9790$5uPkq)
                                  (if (symbol? g$x$9790$5uPkq)
                                    (symbol->string g$x$9790$5uPkq)
                                    (if (string? g$x$9790$5uPkq)
                                      g$x$9790$5uPkq
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$9789$5uPkq)))))))
                  (g$get-record-name$9537$5uPkq
                    (case-lambda
                      ((g$spec$9779$5uPkq)
                       ((case-lambda
                          ((g$t$9780$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9781$5uPkq)
                               (if g$ls/false$9781$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$foo$9782$5uPkq
                                        g$make-foo$9783$5uPkq
                                        g$foo?$9784$5uPkq)
                                      g$foo$9782$5uPkq))
                                   g$ls/false$9781$5uPkq)
                                 ((case-lambda
                                    ((g$t$9785$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9786$5uPkq)
                                         (if g$ls/false$9786$5uPkq
                                           (apply
                                             (case-lambda
                                               ((g$foo$9787$5uPkq)
                                                g$foo$9787$5uPkq))
                                             g$ls/false$9786$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$t$9785$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9785$5uPkq
                                        'any))))
                                  g$t$9780$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$9780$5uPkq
                              '(any any any)))))
                        g$spec$9779$5uPkq))))
                  (g$get-record-constructor-name$9538$5uPkq
                    (case-lambda
                      ((g$spec$9769$5uPkq)
                       ((case-lambda
                          ((g$t$9770$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9771$5uPkq)
                               (if g$ls/false$9771$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$foo$9772$5uPkq
                                        g$make-foo$9773$5uPkq
                                        g$foo?$9774$5uPkq)
                                      g$make-foo$9773$5uPkq))
                                   g$ls/false$9771$5uPkq)
                                 ((case-lambda
                                    ((g$t$9775$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9776$5uPkq)
                                         (if (if g$ls/false$9776$5uPkq
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9777$5uPkq)
                                                      (g$id?$8018$5uPkq
                                                        g$foo$9777$5uPkq)))
                                                   g$ls/false$9776$5uPkq))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9778$5uPkq)
                                                (g$id$9536$5uPkq
                                                  g$foo$9778$5uPkq
                                                  '"make-"
                                                  (g$stx->datum$8029$5uPkq
                                                    g$foo$9778$5uPkq))))
                                             g$ls/false$9776$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$t$9775$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9775$5uPkq
                                        'any))))
                                  g$t$9770$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$9770$5uPkq
                              '(any any any)))))
                        g$spec$9769$5uPkq))))
                  (g$get-record-predicate-name$9539$5uPkq
                    (case-lambda
                      ((g$spec$9759$5uPkq)
                       ((case-lambda
                          ((g$t$9760$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9761$5uPkq)
                               (if g$ls/false$9761$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$foo$9762$5uPkq
                                        g$make-foo$9763$5uPkq
                                        g$foo?$9764$5uPkq)
                                      g$foo?$9764$5uPkq))
                                   g$ls/false$9761$5uPkq)
                                 ((case-lambda
                                    ((g$t$9765$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9766$5uPkq)
                                         (if (if g$ls/false$9766$5uPkq
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9767$5uPkq)
                                                      (g$id?$8018$5uPkq
                                                        g$foo$9767$5uPkq)))
                                                   g$ls/false$9766$5uPkq))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9768$5uPkq)
                                                (g$id$9536$5uPkq
                                                  g$foo$9768$5uPkq
                                                  (g$stx->datum$8029$5uPkq
                                                    g$foo$9768$5uPkq)
                                                  '"?")))
                                             g$ls/false$9766$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$t$9765$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9765$5uPkq
                                        'any))))
                                  g$t$9760$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$9760$5uPkq
                              '(any any any)))))
                        g$spec$9759$5uPkq))))
                  (g$get-clause$9540$5uPkq
                    (case-lambda
                      ((g$id$9750$5uPkq g$ls$9751$5uPkq)
                       ((case-lambda
                          ((g$t$9752$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9753$5uPkq)
                               (if g$ls/false$9753$5uPkq
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9753$5uPkq)
                                 ((case-lambda
                                    ((g$t$9754$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9755$5uPkq)
                                         (if g$ls/false$9755$5uPkq
                                           (apply
                                             (case-lambda
                                               ((g$x$9756$5uPkq
                                                  g$rest$9757$5uPkq
                                                  g$ls$9758$5uPkq)
                                                (if (g$free-id=?$8022$5uPkq
                                                      (g$bless$8259$5uPkq
                                                        g$id$9750$5uPkq)
                                                      g$x$9756$5uPkq)
                                                  (cons
                                                    g$x$9756$5uPkq
                                                    g$rest$9757$5uPkq)
                                                  (g$get-clause$9540$5uPkq
                                                    g$id$9750$5uPkq
                                                    g$ls$9758$5uPkq))))
                                             g$ls/false$9755$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$t$9754$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9754$5uPkq
                                        '((any . any) . any)))))
                                  g$t$9752$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq g$t$9752$5uPkq '()))))
                        g$ls$9751$5uPkq))))
                  (g$foo-rtd-code$9541$5uPkq
                    (case-lambda
                      ((g$name$9709$5uPkq
                         g$clause*$9710$5uPkq
                         g$parent-rtd-code$9711$5uPkq)
                       (letrec* ((g$convert-field-spec*$9712$5uPkq
                                   (case-lambda
                                     ((g$ls$9737$5uPkq)
                                      (list->vector
                                        (g$map$5759$5uPkq
                                          (case-lambda
                                            ((g$x$9738$5uPkq)
                                             ((case-lambda
                                                ((g$t$9739$5uPkq)
                                                 ((case-lambda
                                                    ((g$ls/false$9740$5uPkq)
                                                     (if g$ls/false$9740$5uPkq
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$9741$5uPkq
                                                              g$rest$9742$5uPkq)
                                                            (list
                                                              'mutable
                                                              g$name$9741$5uPkq)))
                                                         g$ls/false$9740$5uPkq)
                                                       ((case-lambda
                                                          ((g$t$9743$5uPkq)
                                                           ((case-lambda
                                                              ((g$ls/false$9744$5uPkq)
                                                               (if g$ls/false$9744$5uPkq
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$9745$5uPkq
                                                                        g$rest$9746$5uPkq)
                                                                      (list
                                                                        'immutable
                                                                        g$name$9745$5uPkq)))
                                                                   g$ls/false$9744$5uPkq)
                                                                 ((case-lambda
                                                                    ((g$t$9747$5uPkq)
                                                                     ((case-lambda
                                                                        ((g$ls/false$9748$5uPkq)
                                                                         (if g$ls/false$9748$5uPkq
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$9749$5uPkq)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$9749$5uPkq)))
                                                                             g$ls/false$9748$5uPkq)
                                                                           (g$syntax-violation$8407$5uPkq
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$9747$5uPkq))))
                                                                      (g$syntax-dispatch$8296$5uPkq
                                                                        g$t$9747$5uPkq
                                                                        'any))))
                                                                  g$t$9743$5uPkq))))
                                                            (g$syntax-dispatch$8296$5uPkq
                                                              g$t$9743$5uPkq
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$9739$5uPkq))))
                                                  (g$syntax-dispatch$8296$5uPkq
                                                    g$t$9739$5uPkq
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$9738$5uPkq)))
                                          g$ls$9737$5uPkq))))))
                         ((case-lambda
                            ((g$uid-code$9713$5uPkq
                               g$sealed?$9714$5uPkq
                               g$opaque?$9715$5uPkq
                               g$fields$9716$5uPkq)
                             (g$bless$8259$5uPkq
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9709$5uPkq)
                                 g$parent-rtd-code$9711$5uPkq
                                 g$uid-code$9713$5uPkq
                                 g$sealed?$9714$5uPkq
                                 g$opaque?$9715$5uPkq
                                 g$fields$9716$5uPkq))))
                          ((case-lambda
                             ((g$t$9717$5uPkq)
                              ((case-lambda
                                 ((g$ls/false$9718$5uPkq)
                                  (if g$ls/false$9718$5uPkq
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9718$5uPkq)
                                    ((case-lambda
                                       ((g$t$9719$5uPkq)
                                        ((case-lambda
                                           ((g$ls/false$9720$5uPkq)
                                            (if g$ls/false$9720$5uPkq
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9721$5uPkq)
                                                   (list
                                                     'quote
                                                     g$uid$9721$5uPkq)))
                                                g$ls/false$9720$5uPkq)
                                              ((case-lambda
                                                 ((g$t$9722$5uPkq)
                                                  ((case-lambda
                                                     ((g$ls/false$9723$5uPkq)
                                                      (if g$ls/false$9723$5uPkq
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9723$5uPkq)
                                                        (g$syntax-violation$8407$5uPkq
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9722$5uPkq))))
                                                   (g$syntax-dispatch$8296$5uPkq
                                                     g$t$9722$5uPkq
                                                     '_))))
                                               g$t$9719$5uPkq))))
                                         (g$syntax-dispatch$8296$5uPkq
                                           g$t$9719$5uPkq
                                           '(_ any)))))
                                     g$t$9717$5uPkq))))
                               (g$syntax-dispatch$8296$5uPkq
                                 g$t$9717$5uPkq
                                 '(_)))))
                           (g$get-clause$9540$5uPkq
                             'nongenerative
                             g$clause*$9710$5uPkq))
                          ((case-lambda
                             ((g$t$9724$5uPkq)
                              ((case-lambda
                                 ((g$ls/false$9725$5uPkq)
                                  (if g$ls/false$9725$5uPkq
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9725$5uPkq)
                                    ((case-lambda
                                       ((g$t$9726$5uPkq)
                                        ((case-lambda
                                           ((g$ls/false$9727$5uPkq)
                                            (if g$ls/false$9727$5uPkq
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9727$5uPkq)
                                              (g$syntax-violation$8407$5uPkq
                                                '#f
                                                '"invalid syntax"
                                                g$t$9726$5uPkq))))
                                         (g$syntax-dispatch$8296$5uPkq
                                           g$t$9726$5uPkq
                                           '_))))
                                     g$t$9724$5uPkq))))
                               (g$syntax-dispatch$8296$5uPkq
                                 g$t$9724$5uPkq
                                 '(_ #(atom #t))))))
                           (g$get-clause$9540$5uPkq
                             'sealed
                             g$clause*$9710$5uPkq))
                          ((case-lambda
                             ((g$t$9728$5uPkq)
                              ((case-lambda
                                 ((g$ls/false$9729$5uPkq)
                                  (if g$ls/false$9729$5uPkq
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9729$5uPkq)
                                    ((case-lambda
                                       ((g$t$9730$5uPkq)
                                        ((case-lambda
                                           ((g$ls/false$9731$5uPkq)
                                            (if g$ls/false$9731$5uPkq
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9731$5uPkq)
                                              (g$syntax-violation$8407$5uPkq
                                                '#f
                                                '"invalid syntax"
                                                g$t$9730$5uPkq))))
                                         (g$syntax-dispatch$8296$5uPkq
                                           g$t$9730$5uPkq
                                           '_))))
                                     g$t$9728$5uPkq))))
                               (g$syntax-dispatch$8296$5uPkq
                                 g$t$9728$5uPkq
                                 '(_ #(atom #t))))))
                           (g$get-clause$9540$5uPkq
                             'opaque
                             g$clause*$9710$5uPkq))
                          ((case-lambda
                             ((g$t$9732$5uPkq)
                              ((case-lambda
                                 ((g$ls/false$9733$5uPkq)
                                  (if g$ls/false$9733$5uPkq
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9734$5uPkq)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9712$5uPkq
                                             g$field-spec*$9734$5uPkq))))
                                      g$ls/false$9733$5uPkq)
                                    ((case-lambda
                                       ((g$t$9735$5uPkq)
                                        ((case-lambda
                                           ((g$ls/false$9736$5uPkq)
                                            (if g$ls/false$9736$5uPkq
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9736$5uPkq)
                                              (g$syntax-violation$8407$5uPkq
                                                '#f
                                                '"invalid syntax"
                                                g$t$9735$5uPkq))))
                                         (g$syntax-dispatch$8296$5uPkq
                                           g$t$9735$5uPkq
                                           '_))))
                                     g$t$9732$5uPkq))))
                               (g$syntax-dispatch$8296$5uPkq
                                 g$t$9732$5uPkq
                                 '(_ . each-any)))))
                           (g$get-clause$9540$5uPkq
                             'fields
                             g$clause*$9710$5uPkq)))))))
                  (g$parent-rtd-code$9542$5uPkq
                    (case-lambda
                      ((g$clause*$9697$5uPkq)
                       ((case-lambda
                          ((g$t$9698$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9699$5uPkq)
                               (if g$ls/false$9699$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$name$9700$5uPkq)
                                      (list
                                        'record-type-descriptor
                                        g$name$9700$5uPkq)))
                                   g$ls/false$9699$5uPkq)
                                 ((case-lambda
                                    ((g$t$9701$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9702$5uPkq)
                                         (if g$ls/false$9702$5uPkq
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9703$5uPkq)
                                                    ((case-lambda
                                                       ((g$ls/false$9704$5uPkq)
                                                        (if g$ls/false$9704$5uPkq
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9705$5uPkq
                                                                 g$rcd$9706$5uPkq)
                                                               g$rtd$9705$5uPkq))
                                                            g$ls/false$9704$5uPkq)
                                                          ((case-lambda
                                                             ((g$t$9707$5uPkq)
                                                              ((case-lambda
                                                                 ((g$ls/false$9708$5uPkq)
                                                                  (if g$ls/false$9708$5uPkq
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9708$5uPkq)
                                                                    (g$syntax-violation$8407$5uPkq
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9707$5uPkq))))
                                                               (g$syntax-dispatch$8296$5uPkq
                                                                 g$t$9707$5uPkq
                                                                 '#(atom #f)))))
                                                           g$t$9703$5uPkq))))
                                                     (g$syntax-dispatch$8296$5uPkq
                                                       g$t$9703$5uPkq
                                                       '(_ any any)))))
                                                 (g$get-clause$9540$5uPkq
                                                   'parent-rtd
                                                   g$clause*$9697$5uPkq))))
                                             g$ls/false$9702$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$t$9701$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9701$5uPkq
                                        '#(atom #f)))))
                                  g$t$9698$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$9698$5uPkq
                              '(_ any)))))
                        (g$get-clause$9540$5uPkq
                          'parent
                          g$clause*$9697$5uPkq)))))
                  (g$parent-rcd-code$9543$5uPkq
                    (case-lambda
                      ((g$clause*$9685$5uPkq)
                       ((case-lambda
                          ((g$t$9686$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9687$5uPkq)
                               (if g$ls/false$9687$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$name$9688$5uPkq)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9688$5uPkq)))
                                   g$ls/false$9687$5uPkq)
                                 ((case-lambda
                                    ((g$t$9689$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9690$5uPkq)
                                         (if g$ls/false$9690$5uPkq
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9691$5uPkq)
                                                    ((case-lambda
                                                       ((g$ls/false$9692$5uPkq)
                                                        (if g$ls/false$9692$5uPkq
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9693$5uPkq
                                                                 g$rcd$9694$5uPkq)
                                                               g$rcd$9694$5uPkq))
                                                            g$ls/false$9692$5uPkq)
                                                          ((case-lambda
                                                             ((g$t$9695$5uPkq)
                                                              ((case-lambda
                                                                 ((g$ls/false$9696$5uPkq)
                                                                  (if g$ls/false$9696$5uPkq
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9696$5uPkq)
                                                                    (g$syntax-violation$8407$5uPkq
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9695$5uPkq))))
                                                               (g$syntax-dispatch$8296$5uPkq
                                                                 g$t$9695$5uPkq
                                                                 '#(atom #f)))))
                                                           g$t$9691$5uPkq))))
                                                     (g$syntax-dispatch$8296$5uPkq
                                                       g$t$9691$5uPkq
                                                       '(_ any any)))))
                                                 (g$get-clause$9540$5uPkq
                                                   'parent-rtd
                                                   g$clause*$9685$5uPkq))))
                                             g$ls/false$9690$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$t$9689$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9689$5uPkq
                                        '#(atom #f)))))
                                  g$t$9686$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$9686$5uPkq
                              '(_ any)))))
                        (g$get-clause$9540$5uPkq
                          'parent
                          g$clause*$9685$5uPkq)))))
                  (g$foo-rcd-code$9544$5uPkq
                    (case-lambda
                      ((g$clause*$9681$5uPkq
                         g$foo-rtd$9682$5uPkq
                         g$protocol$9683$5uPkq
                         g$parent-rcd-code$9684$5uPkq)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9682$5uPkq
                         g$parent-rcd-code$9684$5uPkq
                         g$protocol$9683$5uPkq))))
                  (g$get-protocol-code$9545$5uPkq
                    (case-lambda
                      ((g$clause*$9675$5uPkq)
                       ((case-lambda
                          ((g$t$9676$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9677$5uPkq)
                               (if g$ls/false$9677$5uPkq
                                 (apply
                                   (case-lambda
                                     ((g$expr$9678$5uPkq) g$expr$9678$5uPkq))
                                   g$ls/false$9677$5uPkq)
                                 ((case-lambda
                                    ((g$t$9679$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9680$5uPkq)
                                         (if g$ls/false$9680$5uPkq
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9680$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$t$9679$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9679$5uPkq
                                        '_))))
                                  g$t$9676$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$9676$5uPkq
                              '(_ any)))))
                        (g$get-clause$9540$5uPkq
                          'protocol
                          g$clause*$9675$5uPkq)))))
                  (g$get-fields$9546$5uPkq
                    (case-lambda
                      ((g$clause*$9666$5uPkq)
                       ((case-lambda
                          ((g$t$9667$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9668$5uPkq)
                               (if g$ls/false$9668$5uPkq
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9668$5uPkq)
                                 ((case-lambda
                                    ((g$t$9669$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9670$5uPkq)
                                         (if g$ls/false$9670$5uPkq
                                           (apply
                                             (case-lambda
                                               ((g$f*$9671$5uPkq)
                                                g$f*$9671$5uPkq))
                                             g$ls/false$9670$5uPkq)
                                           ((case-lambda
                                              ((g$t$9672$5uPkq)
                                               ((case-lambda
                                                  ((g$ls/false$9673$5uPkq)
                                                   (if g$ls/false$9673$5uPkq
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9674$5uPkq)
                                                          (g$get-fields$9546$5uPkq
                                                            g$rest$9674$5uPkq)))
                                                       g$ls/false$9673$5uPkq)
                                                     (g$syntax-violation$8407$5uPkq
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9672$5uPkq))))
                                                (g$syntax-dispatch$8296$5uPkq
                                                  g$t$9672$5uPkq
                                                  '(_ . any)))))
                                            g$t$9669$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9669$5uPkq
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9667$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq g$t$9667$5uPkq '()))))
                        g$clause*$9666$5uPkq))))
                  (g$get-mutator-indices$9547$5uPkq
                    (case-lambda
                      ((g$fields$9654$5uPkq)
                       ((letrec ((g$f$9655$5uPkq
                                   (case-lambda
                                     ((g$fields$9656$5uPkq g$i$9657$5uPkq)
                                      ((case-lambda
                                         ((g$t$9658$5uPkq)
                                          ((case-lambda
                                             ((g$ls/false$9659$5uPkq)
                                              (if g$ls/false$9659$5uPkq
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9659$5uPkq)
                                                ((case-lambda
                                                   ((g$t$9660$5uPkq)
                                                    ((case-lambda
                                                       ((g$ls/false$9661$5uPkq)
                                                        (if g$ls/false$9661$5uPkq
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9662$5uPkq)
                                                               (cons
                                                                 g$i$9657$5uPkq
                                                                 (g$f$9655$5uPkq
                                                                   g$rest$9662$5uPkq
                                                                   (+ g$i$9657$5uPkq
                                                                      '1)))))
                                                            g$ls/false$9661$5uPkq)
                                                          ((case-lambda
                                                             ((g$t$9663$5uPkq)
                                                              ((case-lambda
                                                                 ((g$ls/false$9664$5uPkq)
                                                                  (if g$ls/false$9664$5uPkq
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9665$5uPkq)
                                                                         (g$f$9655$5uPkq
                                                                           g$rest$9665$5uPkq
                                                                           (+ g$i$9657$5uPkq
                                                                              '1))))
                                                                      g$ls/false$9664$5uPkq)
                                                                    (g$syntax-violation$8407$5uPkq
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9663$5uPkq))))
                                                               (g$syntax-dispatch$8296$5uPkq
                                                                 g$t$9663$5uPkq
                                                                 '(_ . any)))))
                                                           g$t$9660$5uPkq))))
                                                     (g$syntax-dispatch$8296$5uPkq
                                                       g$t$9660$5uPkq
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9658$5uPkq))))
                                           (g$syntax-dispatch$8296$5uPkq
                                             g$t$9658$5uPkq
                                             '()))))
                                       g$fields$9656$5uPkq)))))
                          g$f$9655$5uPkq)
                        g$fields$9654$5uPkq
                        '0))))
                  (g$get-mutators$9548$5uPkq
                    (case-lambda
                      ((g$foo$9633$5uPkq g$fields$9634$5uPkq)
                       (letrec* ((g$gen-name$9635$5uPkq
                                   (case-lambda
                                     ((g$x$9653$5uPkq)
                                      (g$datum->syntax$8409$5uPkq
                                        g$foo$9633$5uPkq
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8410$5uPkq
                                                g$foo$9633$5uPkq))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8410$5uPkq
                                                g$x$9653$5uPkq))
                                            '"-set!")))))))
                         ((letrec ((g$f$9636$5uPkq
                                     (case-lambda
                                       ((g$fields$9637$5uPkq)
                                        ((case-lambda
                                           ((g$t$9638$5uPkq)
                                            ((case-lambda
                                               ((g$ls/false$9639$5uPkq)
                                                (if g$ls/false$9639$5uPkq
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9639$5uPkq)
                                                  ((case-lambda
                                                     ((g$t$9640$5uPkq)
                                                      ((case-lambda
                                                         ((g$ls/false$9641$5uPkq)
                                                          (if g$ls/false$9641$5uPkq
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9642$5uPkq
                                                                   g$accessor$9643$5uPkq
                                                                   g$mutator$9644$5uPkq
                                                                   g$rest$9645$5uPkq)
                                                                 (cons
                                                                   g$mutator$9644$5uPkq
                                                                   (g$f$9636$5uPkq
                                                                     g$rest$9645$5uPkq))))
                                                              g$ls/false$9641$5uPkq)
                                                            ((case-lambda
                                                               ((g$t$9646$5uPkq)
                                                                ((case-lambda
                                                                   ((g$ls/false$9647$5uPkq)
                                                                    (if g$ls/false$9647$5uPkq
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9648$5uPkq
                                                                             g$rest$9649$5uPkq)
                                                                           (cons
                                                                             (g$gen-name$9635$5uPkq
                                                                               g$name$9648$5uPkq)
                                                                             (g$f$9636$5uPkq
                                                                               g$rest$9649$5uPkq))))
                                                                        g$ls/false$9647$5uPkq)
                                                                      ((case-lambda
                                                                         ((g$t$9650$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9651$5uPkq)
                                                                              (if g$ls/false$9651$5uPkq
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9652$5uPkq)
                                                                                     (g$f$9636$5uPkq
                                                                                       g$rest$9652$5uPkq)))
                                                                                  g$ls/false$9651$5uPkq)
                                                                                (g$syntax-violation$8407$5uPkq
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9650$5uPkq))))
                                                                           (g$syntax-dispatch$8296$5uPkq
                                                                             g$t$9650$5uPkq
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9646$5uPkq))))
                                                                 (g$syntax-dispatch$8296$5uPkq
                                                                   g$t$9646$5uPkq
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9640$5uPkq))))
                                                       (g$syntax-dispatch$8296$5uPkq
                                                         g$t$9640$5uPkq
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9638$5uPkq))))
                                             (g$syntax-dispatch$8296$5uPkq
                                               g$t$9638$5uPkq
                                               '()))))
                                         g$fields$9637$5uPkq)))))
                            g$f$9636$5uPkq)
                          g$fields$9634$5uPkq)))))
                  (g$get-accessors$9549$5uPkq
                    (case-lambda
                      ((g$foo$9599$5uPkq g$fields$9600$5uPkq)
                       (letrec* ((g$gen-name$9601$5uPkq
                                   (case-lambda
                                     ((g$x$9632$5uPkq)
                                      (g$datum->syntax$8409$5uPkq
                                        g$foo$9599$5uPkq
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8410$5uPkq
                                                g$foo$9599$5uPkq))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8410$5uPkq
                                                g$x$9632$5uPkq)))))))))
                         (g$map$5759$5uPkq
                           (case-lambda
                             ((g$field$9602$5uPkq)
                              ((case-lambda
                                 ((g$t$9603$5uPkq)
                                  ((case-lambda
                                     ((g$ls/false$9604$5uPkq)
                                      (if (if g$ls/false$9604$5uPkq
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$9605$5uPkq
                                                     g$accessor$9606$5uPkq
                                                     g$mutator$9607$5uPkq)
                                                   (g$id?$8018$5uPkq
                                                     g$accessor$9606$5uPkq)))
                                                g$ls/false$9604$5uPkq))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$9608$5uPkq
                                               g$accessor$9609$5uPkq
                                               g$mutator$9610$5uPkq)
                                             g$accessor$9609$5uPkq))
                                          g$ls/false$9604$5uPkq)
                                        ((case-lambda
                                           ((g$t$9611$5uPkq)
                                            ((case-lambda
                                               ((g$ls/false$9612$5uPkq)
                                                (if (if g$ls/false$9612$5uPkq
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$9613$5uPkq
                                                               g$accessor$9614$5uPkq)
                                                             (g$id?$8018$5uPkq
                                                               g$accessor$9614$5uPkq)))
                                                          g$ls/false$9612$5uPkq))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$9615$5uPkq
                                                         g$accessor$9616$5uPkq)
                                                       g$accessor$9616$5uPkq))
                                                    g$ls/false$9612$5uPkq)
                                                  ((case-lambda
                                                     ((g$t$9617$5uPkq)
                                                      ((case-lambda
                                                         ((g$ls/false$9618$5uPkq)
                                                          (if (if g$ls/false$9618$5uPkq
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$9619$5uPkq)
                                                                       (g$id?$8018$5uPkq
                                                                         g$name$9619$5uPkq)))
                                                                    g$ls/false$9618$5uPkq))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9620$5uPkq)
                                                                 (g$gen-name$9601$5uPkq
                                                                   g$name$9620$5uPkq)))
                                                              g$ls/false$9618$5uPkq)
                                                            ((case-lambda
                                                               ((g$t$9621$5uPkq)
                                                                ((case-lambda
                                                                   ((g$ls/false$9622$5uPkq)
                                                                    (if (if g$ls/false$9622$5uPkq
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$9623$5uPkq)
                                                                                 (g$id?$8018$5uPkq
                                                                                   g$name$9623$5uPkq)))
                                                                              g$ls/false$9622$5uPkq))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9624$5uPkq)
                                                                           (g$gen-name$9601$5uPkq
                                                                             g$name$9624$5uPkq)))
                                                                        g$ls/false$9622$5uPkq)
                                                                      ((case-lambda
                                                                         ((g$t$9625$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9626$5uPkq)
                                                                              (if (if g$ls/false$9626$5uPkq
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$9627$5uPkq)
                                                                                           (g$id?$8018$5uPkq
                                                                                             g$name$9627$5uPkq)))
                                                                                        g$ls/false$9626$5uPkq))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$9628$5uPkq)
                                                                                     (g$gen-name$9601$5uPkq
                                                                                       g$name$9628$5uPkq)))
                                                                                  g$ls/false$9626$5uPkq)
                                                                                ((case-lambda
                                                                                   ((g$t$9629$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$9630$5uPkq)
                                                                                        (if g$ls/false$9630$5uPkq
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$9631$5uPkq)
                                                                                               (g$syntax-violation$8407$5uPkq
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$9602$5uPkq)))
                                                                                            g$ls/false$9630$5uPkq)
                                                                                          (g$syntax-violation$8407$5uPkq
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$9629$5uPkq))))
                                                                                     (g$syntax-dispatch$8296$5uPkq
                                                                                       g$t$9629$5uPkq
                                                                                       'any))))
                                                                                 g$t$9625$5uPkq))))
                                                                           (g$syntax-dispatch$8296$5uPkq
                                                                             g$t$9625$5uPkq
                                                                             'any))))
                                                                       g$t$9621$5uPkq))))
                                                                 (g$syntax-dispatch$8296$5uPkq
                                                                   g$t$9621$5uPkq
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$9617$5uPkq))))
                                                       (g$syntax-dispatch$8296$5uPkq
                                                         g$t$9617$5uPkq
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$9611$5uPkq))))
                                             (g$syntax-dispatch$8296$5uPkq
                                               g$t$9611$5uPkq
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$9603$5uPkq))))
                                   (g$syntax-dispatch$8296$5uPkq
                                     g$t$9603$5uPkq
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$9602$5uPkq)))
                           g$fields$9600$5uPkq)))))
                  (g$enumerate$9550$5uPkq
                    (case-lambda
                      ((g$ls$9595$5uPkq)
                       ((letrec ((g$f$9596$5uPkq
                                   (case-lambda
                                     ((g$ls$9597$5uPkq g$i$9598$5uPkq)
                                      (if (null? g$ls$9597$5uPkq)
                                        '()
                                        (cons
                                          g$i$9598$5uPkq
                                          (g$f$9596$5uPkq
                                            (cdr g$ls$9597$5uPkq)
                                            (+ g$i$9598$5uPkq '1))))))))
                          g$f$9596$5uPkq)
                        g$ls$9595$5uPkq
                        '0))))
                  (g$do-define-record$9551$5uPkq
                    (case-lambda
                      ((g$namespec$9575$5uPkq g$clause*$9576$5uPkq)
                       ((case-lambda
                          ((g$foo$9577$5uPkq)
                           ((case-lambda
                              ((g$foo-rtd$9578$5uPkq)
                               ((case-lambda
                                  ((g$foo-rcd$9579$5uPkq)
                                   ((case-lambda
                                      ((g$protocol$9580$5uPkq)
                                       ((case-lambda
                                          ((g$make-foo$9581$5uPkq)
                                           ((case-lambda
                                              ((g$fields$9582$5uPkq)
                                               ((case-lambda
                                                  ((g$idx*$9583$5uPkq)
                                                   ((case-lambda
                                                      ((g$foo-x*$9584$5uPkq)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9585$5uPkq)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9586$5uPkq)
                                                               ((case-lambda
                                                                  ((g$foo?$9587$5uPkq)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9588$5uPkq)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9589$5uPkq)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9590$5uPkq)
                                                                               (g$bless$8259$5uPkq
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$9578$5uPkq
                                                                                       g$foo-rtd-code$9588$5uPkq)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$9580$5uPkq
                                                                                         g$protocol-code$9590$5uPkq)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$9579$5uPkq
                                                                                           g$foo-rcd-code$9589$5uPkq)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$9577$5uPkq
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$9578$5uPkq)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$9579$5uPkq)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$9587$5uPkq
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$9578$5uPkq))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$9581$5uPkq
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$9579$5uPkq))
                                                                                               (append
                                                                                                 (g$map$5759$5uPkq
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$9591$5uPkq
                                                                                                        g$idx$9592$5uPkq)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$9591$5uPkq
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$9578$5uPkq
                                                                                                          g$idx$9592$5uPkq))))
                                                                                                   g$foo-x*$9584$5uPkq
                                                                                                   g$idx*$9583$5uPkq)
                                                                                                 (g$map$5759$5uPkq
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$9593$5uPkq
                                                                                                        g$idx$9594$5uPkq)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$9593$5uPkq
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$9578$5uPkq
                                                                                                          g$idx$9594$5uPkq))))
                                                                                                   g$set-foo-x!*$9585$5uPkq
                                                                                                   g$set-foo-idx*$9586$5uPkq))))))))))))
                                                                            (g$get-protocol-code$9545$5uPkq
                                                                              g$clause*$9576$5uPkq))))
                                                                        (g$foo-rcd-code$9544$5uPkq
                                                                          g$clause*$9576$5uPkq
                                                                          g$foo-rtd$9578$5uPkq
                                                                          g$protocol$9580$5uPkq
                                                                          (g$parent-rcd-code$9543$5uPkq
                                                                            g$clause*$9576$5uPkq)))))
                                                                    (g$foo-rtd-code$9541$5uPkq
                                                                      g$foo$9577$5uPkq
                                                                      g$clause*$9576$5uPkq
                                                                      (g$parent-rtd-code$9542$5uPkq
                                                                        g$clause*$9576$5uPkq)))))
                                                                (g$get-record-predicate-name$9539$5uPkq
                                                                  g$namespec$9575$5uPkq))))
                                                            (g$get-mutator-indices$9547$5uPkq
                                                              g$fields$9582$5uPkq))))
                                                        (g$get-mutators$9548$5uPkq
                                                          g$foo$9577$5uPkq
                                                          g$fields$9582$5uPkq))))
                                                    (g$get-accessors$9549$5uPkq
                                                      g$foo$9577$5uPkq
                                                      g$fields$9582$5uPkq))))
                                                (g$enumerate$9550$5uPkq
                                                  g$fields$9582$5uPkq))))
                                            (g$get-fields$9546$5uPkq
                                              g$clause*$9576$5uPkq))))
                                        (g$get-record-constructor-name$9538$5uPkq
                                          g$namespec$9575$5uPkq))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9537$5uPkq g$namespec$9575$5uPkq)))))
                  (g$verify-clauses$9552$5uPkq
                    (case-lambda
                      ((g$x$9557$5uPkq g$cls*$9558$5uPkq)
                       (letrec* ((g$valid-kwds$9559$5uPkq
                                   (g$map$5759$5uPkq
                                     g$bless$8259$5uPkq
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$9560$5uPkq
                                   (case-lambda
                                     ((g$x$9572$5uPkq g$ls$9573$5uPkq)
                                      (if (pair? g$ls$9573$5uPkq)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9574$5uPkq)
                                              (if g$t$9574$5uPkq
                                                g$t$9574$5uPkq
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9560$5uPkq
                                                    g$x$9572$5uPkq
                                                    (cdr g$ls$9573$5uPkq))))))
                                           (g$free-id=?$8022$5uPkq
                                             g$x$9572$5uPkq
                                             (car g$ls$9573$5uPkq))))
                                        '#f)))))
                         ((letrec ((g$f$9561$5uPkq
                                     (case-lambda
                                       ((g$cls*$9562$5uPkq g$seen*$9563$5uPkq)
                                        (if (not (null? g$cls*$9562$5uPkq))
                                          ((case-lambda
                                             ((g$t$9564$5uPkq)
                                              ((case-lambda
                                                 ((g$ls/false$9565$5uPkq)
                                                  (if g$ls/false$9565$5uPkq
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9566$5uPkq
                                                           g$rest$9567$5uPkq)
                                                         (if ((case-lambda
                                                                ((g$t$9568$5uPkq)
                                                                 (if g$t$9568$5uPkq
                                                                   g$t$9568$5uPkq
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9560$5uPkq
                                                                            g$kwd$9566$5uPkq
                                                                            g$valid-kwds$9559$5uPkq))))))
                                                              (not (g$id?$8018$5uPkq
                                                                     g$kwd$9566$5uPkq)))
                                                           (g$syntax-violation$8407$5uPkq
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9566$5uPkq)
                                                           (if (g$bound-id-member?$8025$5uPkq
                                                                 g$kwd$9566$5uPkq
                                                                 g$seen*$9563$5uPkq)
                                                             (g$syntax-violation$8407$5uPkq
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9557$5uPkq
                                                               g$kwd$9566$5uPkq)
                                                             (g$f$9561$5uPkq
                                                               (cdr g$cls*$9562$5uPkq)
                                                               (cons
                                                                 g$kwd$9566$5uPkq
                                                                 g$seen*$9563$5uPkq))))))
                                                      g$ls/false$9565$5uPkq)
                                                    ((case-lambda
                                                       ((g$t$9569$5uPkq)
                                                        ((case-lambda
                                                           ((g$ls/false$9570$5uPkq)
                                                            (if g$ls/false$9570$5uPkq
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9571$5uPkq)
                                                                   (g$syntax-violation$8407$5uPkq
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9571$5uPkq)))
                                                                g$ls/false$9570$5uPkq)
                                                              (g$syntax-violation$8407$5uPkq
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9569$5uPkq))))
                                                         (g$syntax-dispatch$8296$5uPkq
                                                           g$t$9569$5uPkq
                                                           'any))))
                                                     g$t$9564$5uPkq))))
                                               (g$syntax-dispatch$8296$5uPkq
                                                 g$t$9564$5uPkq
                                                 '(any . any)))))
                                           (car g$cls*$9562$5uPkq))
                                          (void))))))
                            g$f$9561$5uPkq)
                          g$cls*$9558$5uPkq
                          '()))))))
          ((case-lambda
             ((g$t$9553$5uPkq)
              ((case-lambda
                 ((g$ls/false$9554$5uPkq)
                  (if g$ls/false$9554$5uPkq
                    (apply
                      (case-lambda
                        ((g$namespec$9555$5uPkq g$clause*$9556$5uPkq)
                         (begin
                           (g$verify-clauses$9552$5uPkq
                             g$x$9535$5uPkq
                             g$clause*$9556$5uPkq)
                           (g$do-define-record$9551$5uPkq
                             g$namespec$9555$5uPkq
                             g$clause*$9556$5uPkq))))
                      g$ls/false$9554$5uPkq)
                    (g$syntax-violation$8407$5uPkq
                      '#f
                      '"invalid syntax"
                      g$t$9553$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq
                 g$t$9553$5uPkq
                 '(_ any . each-any)))))
           g$x$9535$5uPkq)))))
   (g$define-condition-type-macro$8291$5uPkq
     g$define-condition-type-macro$11782$5uPkq
     (case-lambda
       ((g$x$9791$5uPkq)
        (letrec* ((g$mkname$9792$5uPkq
                    (case-lambda
                      ((g$name$9815$5uPkq g$suffix$9816$5uPkq)
                       (g$datum->syntax$8409$5uPkq
                         g$name$9815$5uPkq
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8410$5uPkq g$name$9815$5uPkq))
                             g$suffix$9816$5uPkq)))))))
          ((case-lambda
             ((g$t$9793$5uPkq)
              ((case-lambda
                 ((g$ls/false$9794$5uPkq)
                  (if (if g$ls/false$9794$5uPkq
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9795$5uPkq
                                 g$name$9796$5uPkq
                                 g$super$9797$5uPkq
                                 g$constructor$9798$5uPkq
                                 g$predicate$9799$5uPkq
                                 g$field*$9800$5uPkq
                                 g$accessor*$9801$5uPkq)
                               (if (g$id?$8018$5uPkq g$name$9796$5uPkq)
                                 (if (g$id?$8018$5uPkq g$super$9797$5uPkq)
                                   (if (g$id?$8018$5uPkq
                                         g$constructor$9798$5uPkq)
                                     (if (g$id?$8018$5uPkq
                                           g$predicate$9799$5uPkq)
                                       (if (g$for-all$5757$5uPkq
                                             g$id?$8018$5uPkq
                                             g$field*$9800$5uPkq)
                                         (begin
                                           '#f
                                           (g$for-all$5757$5uPkq
                                             g$id?$8018$5uPkq
                                             g$accessor*$9801$5uPkq))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9794$5uPkq))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9802$5uPkq
                           g$name$9803$5uPkq
                           g$super$9804$5uPkq
                           g$constructor$9805$5uPkq
                           g$predicate$9806$5uPkq
                           g$field*$9807$5uPkq
                           g$accessor*$9808$5uPkq)
                         ((case-lambda
                            ((g$aux-accessor*$9809$5uPkq)
                             (g$bless$8259$5uPkq
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9803$5uPkq
                                         g$constructor$9805$5uPkq
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9804$5uPkq)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$5759$5uPkq
                                               (case-lambda
                                                 ((g$field$9810$5uPkq
                                                    g$aux$9811$5uPkq)
                                                  (list
                                                    'immutable
                                                    g$field$9810$5uPkq
                                                    g$aux$9811$5uPkq)))
                                               g$field*$9807$5uPkq
                                               g$aux-accessor*$9809$5uPkq))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9806$5uPkq
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9803$5uPkq)))
                                     (g$map$5759$5uPkq
                                       (case-lambda
                                         ((g$accessor$9812$5uPkq
                                            g$aux$9813$5uPkq)
                                          (list
                                            'define
                                            g$accessor$9812$5uPkq
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$9803$5uPkq)
                                              g$aux$9813$5uPkq))))
                                       g$accessor*$9808$5uPkq
                                       g$aux-accessor*$9809$5uPkq)))))))
                          (g$map$5759$5uPkq
                            (case-lambda ((g$x$9814$5uPkq) (gensym)))
                            g$accessor*$9808$5uPkq))))
                      g$ls/false$9794$5uPkq)
                    (g$syntax-violation$8407$5uPkq
                      '#f
                      '"invalid syntax"
                      g$t$9793$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq
                 g$t$9793$5uPkq
                 '(any any any any any . #(each (any any)))))))
           g$x$9791$5uPkq)))))
   (g$incorrect-usage-macro$8292$5uPkq
     g$incorrect-usage-macro$11783$5uPkq
     (case-lambda
       ((g$e$9817$5uPkq)
        (g$syntax-violation$8407$5uPkq
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9817$5uPkq))))
   (g$parameterize-macro$8293$5uPkq
     g$parameterize-macro$11784$5uPkq
     (case-lambda
       ((g$e$9818$5uPkq)
        ((case-lambda
           ((g$t$9819$5uPkq)
            ((case-lambda
               ((g$ls/false$9820$5uPkq)
                (if g$ls/false$9820$5uPkq
                  (apply
                    (case-lambda
                      ((g$b$9821$5uPkq g$b*$9822$5uPkq)
                       (g$bless$8259$5uPkq
                         (cons
                           'let
                           (cons '() (cons g$b$9821$5uPkq g$b*$9822$5uPkq))))))
                    g$ls/false$9820$5uPkq)
                  ((case-lambda
                     ((g$t$9823$5uPkq)
                      ((case-lambda
                         ((g$ls/false$9824$5uPkq)
                          (if g$ls/false$9824$5uPkq
                            (apply
                              (case-lambda
                                ((g$olhs*$9825$5uPkq
                                   g$orhs*$9826$5uPkq
                                   g$b$9827$5uPkq
                                   g$b*$9828$5uPkq)
                                 ((case-lambda
                                    ((g$lhs*$9829$5uPkq g$rhs*$9830$5uPkq)
                                     (g$bless$8259$5uPkq
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9829$5uPkq
                                             g$rhs*$9830$5uPkq)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$5759$5uPkq
                                                       (case-lambda
                                                         ((g$lhs$9831$5uPkq
                                                            g$rhs$9832$5uPkq)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$9831$5uPkq)))
                                                            (list
                                                              g$lhs$9831$5uPkq
                                                              g$rhs$9832$5uPkq)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$9832$5uPkq
                                                                '(t))))))
                                                       g$lhs*$9829$5uPkq
                                                       g$rhs*$9830$5uPkq)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9827$5uPkq
                                                         g$b*$9828$5uPkq)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9825$5uPkq
                                           g$orhs*$9826$5uPkq)))))
                                  (g$generate-temporaries$8397$5uPkq
                                    g$olhs*$9825$5uPkq)
                                  (g$generate-temporaries$8397$5uPkq
                                    g$orhs*$9826$5uPkq))))
                              g$ls/false$9824$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$9823$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$9823$5uPkq
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9819$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$9819$5uPkq
               '(_ () any . each-any)))))
         g$e$9818$5uPkq))))
   (g$foreign-call-transformer$8294$5uPkq
     g$foreign-call-transformer$11785$5uPkq
     (case-lambda
       ((g$e$9833$5uPkq g$r$9834$5uPkq g$mr$9835$5uPkq)
        ((case-lambda
           ((g$t$9836$5uPkq)
            ((case-lambda
               ((g$ls/false$9837$5uPkq)
                (if g$ls/false$9837$5uPkq
                  (apply
                    (case-lambda
                      ((g$name$9838$5uPkq g$arg*$9839$5uPkq)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$8314$5uPkq
                             g$name$9838$5uPkq
                             g$r$9834$5uPkq
                             g$mr$9835$5uPkq)
                           (g$chi-expr*$8312$5uPkq
                             g$arg*$9839$5uPkq
                             g$r$9834$5uPkq
                             g$mr$9835$5uPkq)))))
                    g$ls/false$9837$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$9836$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$9836$5uPkq
               '(_ any . each-any)))))
         g$e$9833$5uPkq))))
   (g$convert-pattern$8295$5uPkq
     g$convert-pattern$11786$5uPkq
     (case-lambda
       ((g$pattern$9840$5uPkq g$keys$9841$5uPkq)
        (letrec* ((g$cvt*$9842$5uPkq
                    (case-lambda
                      ((g$p*$9922$5uPkq g$n$9923$5uPkq g$ids$9924$5uPkq)
                       (if (null? g$p*$9922$5uPkq)
                         (values '() g$ids$9924$5uPkq)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9842$5uPkq
                                (cdr g$p*$9922$5uPkq)
                                g$n$9923$5uPkq
                                g$ids$9924$5uPkq)))
                           (case-lambda
                             ((g$y$9927$5uPkq g$ids$9928$5uPkq)
                              ((case-lambda
                                 ((g$ids$9929$5uPkq g$y$9930$5uPkq)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9843$5uPkq
                                         (car g$p*$9922$5uPkq)
                                         g$n$9923$5uPkq
                                         g$ids$9929$5uPkq)))
                                    (case-lambda
                                      ((g$x$9933$5uPkq g$ids$9934$5uPkq)
                                       ((case-lambda
                                          ((g$ids$9935$5uPkq g$x$9936$5uPkq)
                                           (values
                                             (cons
                                               g$x$9936$5uPkq
                                               g$y$9930$5uPkq)
                                             g$ids$9935$5uPkq)))
                                        g$ids$9934$5uPkq
                                        g$x$9933$5uPkq))))))
                               g$ids$9928$5uPkq
                               g$y$9927$5uPkq))))))))
                  (g$cvt$9843$5uPkq
                    (case-lambda
                      ((g$p$9844$5uPkq g$n$9845$5uPkq g$ids$9846$5uPkq)
                       ((case-lambda
                          ((g$t$9847$5uPkq)
                           ((case-lambda
                              ((g$ls/false$9848$5uPkq)
                               (if (if g$ls/false$9848$5uPkq
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9849$5uPkq)
                                            (g$id?$8018$5uPkq g$id$9849$5uPkq)))
                                         g$ls/false$9848$5uPkq))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9850$5uPkq)
                                      (if (g$bound-id-member?$8025$5uPkq
                                            g$p$9844$5uPkq
                                            g$keys$9841$5uPkq)
                                        (values
                                          (vector 'free-id g$p$9844$5uPkq)
                                          g$ids$9846$5uPkq)
                                        (if (g$free-id=?$8022$5uPkq
                                              g$p$9844$5uPkq
                                              (g$scheme-stx$8239$5uPkq '_))
                                          (values '_ g$ids$9846$5uPkq)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9844$5uPkq
                                                g$n$9845$5uPkq)
                                              g$ids$9846$5uPkq))))))
                                   g$ls/false$9848$5uPkq)
                                 ((case-lambda
                                    ((g$t$9851$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$9852$5uPkq)
                                         (if (if g$ls/false$9852$5uPkq
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9853$5uPkq
                                                        g$dots$9854$5uPkq)
                                                      (g$ellipsis?$8297$5uPkq
                                                        g$dots$9854$5uPkq)))
                                                   g$ls/false$9852$5uPkq))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9855$5uPkq
                                                  g$dots$9856$5uPkq)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9843$5uPkq
                                                       g$p$9855$5uPkq
                                                       (+ g$n$9845$5uPkq '1)
                                                       g$ids$9846$5uPkq)))
                                                  (case-lambda
                                                    ((g$p$9859$5uPkq
                                                       g$ids$9860$5uPkq)
                                                     ((case-lambda
                                                        ((g$ids$9861$5uPkq
                                                           g$p$9862$5uPkq)
                                                         (values
                                                           (if (eq? g$p$9862$5uPkq
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9862$5uPkq))
                                                           g$ids$9861$5uPkq)))
                                                      g$ids$9860$5uPkq
                                                      g$p$9859$5uPkq))))))
                                             g$ls/false$9852$5uPkq)
                                           ((case-lambda
                                              ((g$t$9863$5uPkq)
                                               ((case-lambda
                                                  ((g$ls/false$9864$5uPkq)
                                                   (if (if g$ls/false$9864$5uPkq
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9865$5uPkq
                                                                  g$dots$9866$5uPkq
                                                                  g$ys$9867$5uPkq
                                                                  g$z$9868$5uPkq)
                                                                (g$ellipsis?$8297$5uPkq
                                                                  g$dots$9866$5uPkq)))
                                                             g$ls/false$9864$5uPkq))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9869$5uPkq
                                                            g$dots$9870$5uPkq
                                                            g$ys$9871$5uPkq
                                                            g$z$9872$5uPkq)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9843$5uPkq
                                                                 g$z$9872$5uPkq
                                                                 g$n$9845$5uPkq
                                                                 g$ids$9846$5uPkq)))
                                                            (case-lambda
                                                              ((g$z$9875$5uPkq
                                                                 g$ids$9876$5uPkq)
                                                               ((case-lambda
                                                                  ((g$ids$9877$5uPkq
                                                                     g$z$9878$5uPkq)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9842$5uPkq
                                                                          g$ys$9871$5uPkq
                                                                          g$n$9845$5uPkq
                                                                          g$ids$9877$5uPkq)))
                                                                     (case-lambda
                                                                       ((g$ys$9881$5uPkq
                                                                          g$ids$9882$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$ids$9883$5uPkq
                                                                              g$ys$9884$5uPkq)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9843$5uPkq
                                                                                   g$x$9869$5uPkq
                                                                                   (+ g$n$9845$5uPkq
                                                                                      '1)
                                                                                   g$ids$9883$5uPkq)))
                                                                              (case-lambda
                                                                                ((g$x$9887$5uPkq
                                                                                   g$ids$9888$5uPkq)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9889$5uPkq
                                                                                       g$x$9890$5uPkq)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9890$5uPkq
                                                                                         (reverse
                                                                                           g$ys$9884$5uPkq)
                                                                                         g$z$9878$5uPkq)
                                                                                       g$ids$9889$5uPkq)))
                                                                                  g$ids$9888$5uPkq
                                                                                  g$x$9887$5uPkq))))))
                                                                         g$ids$9882$5uPkq
                                                                         g$ys$9881$5uPkq))))))
                                                                g$ids$9876$5uPkq
                                                                g$z$9875$5uPkq))))))
                                                       g$ls/false$9864$5uPkq)
                                                     ((case-lambda
                                                        ((g$t$9891$5uPkq)
                                                         ((case-lambda
                                                            ((g$ls/false$9892$5uPkq)
                                                             (if g$ls/false$9892$5uPkq
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9893$5uPkq
                                                                      g$y$9894$5uPkq)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9843$5uPkq
                                                                           g$y$9894$5uPkq
                                                                           g$n$9845$5uPkq
                                                                           g$ids$9846$5uPkq)))
                                                                      (case-lambda
                                                                        ((g$y$9897$5uPkq
                                                                           g$ids$9898$5uPkq)
                                                                         ((case-lambda
                                                                            ((g$ids$9899$5uPkq
                                                                               g$y$9900$5uPkq)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9843$5uPkq
                                                                                    g$x$9893$5uPkq
                                                                                    g$n$9845$5uPkq
                                                                                    g$ids$9899$5uPkq)))
                                                                               (case-lambda
                                                                                 ((g$x$9903$5uPkq
                                                                                    g$ids$9904$5uPkq)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9905$5uPkq
                                                                                        g$x$9906$5uPkq)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9906$5uPkq
                                                                                          g$y$9900$5uPkq)
                                                                                        g$ids$9905$5uPkq)))
                                                                                   g$ids$9904$5uPkq
                                                                                   g$x$9903$5uPkq))))))
                                                                          g$ids$9898$5uPkq
                                                                          g$y$9897$5uPkq))))))
                                                                 g$ls/false$9892$5uPkq)
                                                               ((case-lambda
                                                                  ((g$t$9907$5uPkq)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9908$5uPkq)
                                                                       (if g$ls/false$9908$5uPkq
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9846$5uPkq)))
                                                                           g$ls/false$9908$5uPkq)
                                                                         ((case-lambda
                                                                            ((g$t$9909$5uPkq)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9910$5uPkq)
                                                                                 (if (if g$ls/false$9910$5uPkq
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9911$5uPkq)
                                                                                              (not (g$stx?$7990$5uPkq
                                                                                                     g$p$9911$5uPkq))))
                                                                                           g$ls/false$9910$5uPkq))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9912$5uPkq)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9843$5uPkq
                                                                                               g$p$9912$5uPkq
                                                                                               g$n$9845$5uPkq
                                                                                               g$ids$9846$5uPkq)))
                                                                                          (case-lambda
                                                                                            ((g$p$9915$5uPkq
                                                                                               g$ids$9916$5uPkq)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9917$5uPkq
                                                                                                   g$p$9918$5uPkq)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9918$5uPkq)
                                                                                                   g$ids$9917$5uPkq)))
                                                                                              g$ids$9916$5uPkq
                                                                                              g$p$9915$5uPkq))))))
                                                                                     g$ls/false$9910$5uPkq)
                                                                                   ((case-lambda
                                                                                      ((g$t$9919$5uPkq)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9920$5uPkq)
                                                                                           (if g$ls/false$9920$5uPkq
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9921$5uPkq)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$8029$5uPkq
                                                                                                        g$datum$9921$5uPkq))
                                                                                                    g$ids$9846$5uPkq)))
                                                                                               g$ls/false$9920$5uPkq)
                                                                                             (g$syntax-violation$8407$5uPkq
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9919$5uPkq))))
                                                                                        (g$syntax-dispatch$8296$5uPkq
                                                                                          g$t$9919$5uPkq
                                                                                          'any))))
                                                                                    g$t$9909$5uPkq))))
                                                                              (g$syntax-dispatch$8296$5uPkq
                                                                                g$t$9909$5uPkq
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9907$5uPkq))))
                                                                    (g$syntax-dispatch$8296$5uPkq
                                                                      g$t$9907$5uPkq
                                                                      '()))))
                                                                g$t$9891$5uPkq))))
                                                          (g$syntax-dispatch$8296$5uPkq
                                                            g$t$9891$5uPkq
                                                            '(any . any)))))
                                                      g$t$9863$5uPkq))))
                                                (g$syntax-dispatch$8296$5uPkq
                                                  g$t$9863$5uPkq
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9851$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$9851$5uPkq
                                        '(any any)))))
                                  g$t$9847$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$9847$5uPkq
                              'any))))
                        g$p$9844$5uPkq)))))
          (g$cvt$9843$5uPkq g$pattern$9840$5uPkq '0 '())))))
   (g$syntax-dispatch$8296$5uPkq
     g$syntax-dispatch$11787$5uPkq
     ((case-lambda
        (()
         (letrec* ((g$stx^$9937$5uPkq
                     (case-lambda
                       ((g$e$10047$5uPkq
                          g$m*$10048$5uPkq
                          g$s*$10049$5uPkq
                          g$ae*$10050$5uPkq)
                        (if (if (null? g$m*$10048$5uPkq)
                              (if (null? g$s*$10049$5uPkq)
                                (begin '#f (null? g$ae*$10050$5uPkq))
                                '#f)
                              '#f)
                          g$e$10047$5uPkq
                          (g$mkstx$8006$5uPkq
                            g$e$10047$5uPkq
                            g$m*$10048$5uPkq
                            g$s*$10049$5uPkq
                            g$ae*$10050$5uPkq)))))
                   (g$match-each$9938$5uPkq
                     (case-lambda
                       ((g$e$10031$5uPkq
                          g$p$10032$5uPkq
                          g$m*$10033$5uPkq
                          g$s*$10034$5uPkq
                          g$ae*$10035$5uPkq)
                        (if (pair? g$e$10031$5uPkq)
                          ((case-lambda
                             ((g$first$10036$5uPkq)
                              (if g$first$10036$5uPkq
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$10037$5uPkq)
                                      (if g$rest$10037$5uPkq
                                        (begin
                                          '#f
                                          (cons
                                            g$first$10036$5uPkq
                                            g$rest$10037$5uPkq))
                                        '#f)))
                                   (g$match-each$9938$5uPkq
                                     (cdr g$e$10031$5uPkq)
                                     g$p$10032$5uPkq
                                     g$m*$10033$5uPkq
                                     g$s*$10034$5uPkq
                                     g$ae*$10035$5uPkq)))
                                '#f)))
                           (g$match$9944$5uPkq
                             (car g$e$10031$5uPkq)
                             g$p$10032$5uPkq
                             g$m*$10033$5uPkq
                             g$s*$10034$5uPkq
                             g$ae*$10035$5uPkq
                             '()))
                          (if (null? g$e$10031$5uPkq)
                            '()
                            (if (g$stx?$7990$5uPkq g$e$10031$5uPkq)
                              (if (not (g$top-marked?$7956$5uPkq
                                         g$m*$10033$5uPkq))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8005$5uPkq
                                         g$m*$10033$5uPkq
                                         g$s*$10034$5uPkq
                                         g$ae*$10035$5uPkq
                                         g$e$10031$5uPkq)))
                                    (case-lambda
                                      ((g$m*$10041$5uPkq
                                         g$s*$10042$5uPkq
                                         g$ae*$10043$5uPkq)
                                       ((case-lambda
                                          ((g$ae*$10044$5uPkq
                                             g$s*$10045$5uPkq
                                             g$m*$10046$5uPkq)
                                           (g$match-each$9938$5uPkq
                                             (g$stx-expr$7992$5uPkq
                                               g$e$10031$5uPkq)
                                             g$p$10032$5uPkq
                                             g$m*$10046$5uPkq
                                             g$s*$10045$5uPkq
                                             g$ae*$10044$5uPkq)))
                                        g$ae*$10043$5uPkq
                                        g$s*$10042$5uPkq
                                        g$m*$10041$5uPkq)))))
                                '#f)
                              (if (annotation? g$e$10031$5uPkq)
                                (g$match-each$9938$5uPkq
                                  (annotation-expression g$e$10031$5uPkq)
                                  g$p$10032$5uPkq
                                  g$m*$10033$5uPkq
                                  g$s*$10034$5uPkq
                                  g$ae*$10035$5uPkq)
                                '#f)))))))
                   (g$match-each+$9939$5uPkq
                     (case-lambda
                       ((g$e$9999$5uPkq
                          g$x-pat$10000$5uPkq
                          g$y-pat$10001$5uPkq
                          g$z-pat$10002$5uPkq
                          g$m*$10003$5uPkq
                          g$s*$10004$5uPkq
                          g$ae*$10005$5uPkq
                          g$r$10006$5uPkq)
                        ((letrec ((g$f$10007$5uPkq
                                    (case-lambda
                                      ((g$e$10008$5uPkq
                                         g$m*$10009$5uPkq
                                         g$s*$10010$5uPkq
                                         g$ae*$10011$5uPkq)
                                       (if (pair? g$e$10008$5uPkq)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$10007$5uPkq
                                                (cdr g$e$10008$5uPkq)
                                                g$m*$10009$5uPkq
                                                g$s*$10010$5uPkq
                                                g$ae*$10011$5uPkq)))
                                           (case-lambda
                                             ((g$xr*$10015$5uPkq
                                                g$y-pat$10016$5uPkq
                                                g$r$10017$5uPkq)
                                              ((case-lambda
                                                 ((g$r$10018$5uPkq
                                                    g$y-pat$10019$5uPkq
                                                    g$xr*$10020$5uPkq)
                                                  (if g$r$10018$5uPkq
                                                    (if (null?
                                                          g$y-pat$10019$5uPkq)
                                                      ((case-lambda
                                                         ((g$xr$10021$5uPkq)
                                                          (if g$xr$10021$5uPkq
                                                            (values
                                                              (cons
                                                                g$xr$10021$5uPkq
                                                                g$xr*$10020$5uPkq)
                                                              g$y-pat$10019$5uPkq
                                                              g$r$10018$5uPkq)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$9944$5uPkq
                                                         (car g$e$10008$5uPkq)
                                                         g$x-pat$10000$5uPkq
                                                         g$m*$10009$5uPkq
                                                         g$s*$10010$5uPkq
                                                         g$ae*$10011$5uPkq
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$10019$5uPkq)
                                                        (g$match$9944$5uPkq
                                                          (car g$e$10008$5uPkq)
                                                          (car g$y-pat$10019$5uPkq)
                                                          g$m*$10009$5uPkq
                                                          g$s*$10010$5uPkq
                                                          g$ae*$10011$5uPkq
                                                          g$r$10018$5uPkq)))
                                                    (values '#f '#f '#f))))
                                               g$r$10017$5uPkq
                                               g$y-pat$10016$5uPkq
                                               g$xr*$10015$5uPkq))))
                                         (if (g$stx?$7990$5uPkq g$e$10008$5uPkq)
                                           (if (g$top-marked?$7956$5uPkq
                                                 g$m*$10009$5uPkq)
                                             (values
                                               '()
                                               g$y-pat$10001$5uPkq
                                               (g$match$9944$5uPkq
                                                 g$e$10008$5uPkq
                                                 g$z-pat$10002$5uPkq
                                                 g$m*$10009$5uPkq
                                                 g$s*$10010$5uPkq
                                                 g$ae*$10011$5uPkq
                                                 g$r$10006$5uPkq))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$8005$5uPkq
                                                    g$m*$10009$5uPkq
                                                    g$s*$10010$5uPkq
                                                    g$ae*$10011$5uPkq
                                                    g$e$10008$5uPkq)))
                                               (case-lambda
                                                 ((g$m*$10025$5uPkq
                                                    g$s*$10026$5uPkq
                                                    g$ae*$10027$5uPkq)
                                                  ((case-lambda
                                                     ((g$ae*$10028$5uPkq
                                                        g$s*$10029$5uPkq
                                                        g$m*$10030$5uPkq)
                                                      (g$f$10007$5uPkq
                                                        (g$stx-expr$7992$5uPkq
                                                          g$e$10008$5uPkq)
                                                        g$m*$10030$5uPkq
                                                        g$s*$10029$5uPkq
                                                        g$ae*$10028$5uPkq)))
                                                   g$ae*$10027$5uPkq
                                                   g$s*$10026$5uPkq
                                                   g$m*$10025$5uPkq)))))
                                           (if (annotation? g$e$10008$5uPkq)
                                             (g$f$10007$5uPkq
                                               (annotation-expression
                                                 g$e$10008$5uPkq)
                                               g$m*$10009$5uPkq
                                               g$s*$10010$5uPkq
                                               g$ae*$10011$5uPkq)
                                             (values
                                               '()
                                               g$y-pat$10001$5uPkq
                                               (g$match$9944$5uPkq
                                                 g$e$10008$5uPkq
                                                 g$z-pat$10002$5uPkq
                                                 g$m*$10009$5uPkq
                                                 g$s*$10010$5uPkq
                                                 g$ae*$10011$5uPkq
                                                 g$r$10006$5uPkq)))))))))
                           g$f$10007$5uPkq)
                         g$e$9999$5uPkq
                         g$m*$10003$5uPkq
                         g$s*$10004$5uPkq
                         g$ae*$10005$5uPkq))))
                   (g$match-each-any$9940$5uPkq
                     (case-lambda
                       ((g$e$9985$5uPkq
                          g$m*$9986$5uPkq
                          g$s*$9987$5uPkq
                          g$ae*$9988$5uPkq)
                        (if (pair? g$e$9985$5uPkq)
                          ((case-lambda
                             ((g$l$9989$5uPkq)
                              (if g$l$9989$5uPkq
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$9937$5uPkq
                                      (car g$e$9985$5uPkq)
                                      g$m*$9986$5uPkq
                                      g$s*$9987$5uPkq
                                      g$ae*$9988$5uPkq)
                                    g$l$9989$5uPkq))
                                '#f)))
                           (g$match-each-any$9940$5uPkq
                             (cdr g$e$9985$5uPkq)
                             g$m*$9986$5uPkq
                             g$s*$9987$5uPkq
                             g$ae*$9988$5uPkq))
                          (if (null? g$e$9985$5uPkq)
                            '()
                            (if (g$stx?$7990$5uPkq g$e$9985$5uPkq)
                              (if (not (g$top-marked?$7956$5uPkq
                                         g$m*$9986$5uPkq))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8005$5uPkq
                                         g$m*$9986$5uPkq
                                         g$s*$9987$5uPkq
                                         g$ae*$9988$5uPkq
                                         g$e$9985$5uPkq)))
                                    (case-lambda
                                      ((g$m*$9993$5uPkq
                                         g$s*$9994$5uPkq
                                         g$ae*$9995$5uPkq)
                                       ((case-lambda
                                          ((g$ae*$9996$5uPkq
                                             g$s*$9997$5uPkq
                                             g$m*$9998$5uPkq)
                                           (g$match-each-any$9940$5uPkq
                                             (g$stx-expr$7992$5uPkq
                                               g$e$9985$5uPkq)
                                             g$m*$9998$5uPkq
                                             g$s*$9997$5uPkq
                                             g$ae*$9996$5uPkq)))
                                        g$ae*$9995$5uPkq
                                        g$s*$9994$5uPkq
                                        g$m*$9993$5uPkq)))))
                                '#f)
                              (if (annotation? g$e$9985$5uPkq)
                                (g$match-each-any$9940$5uPkq
                                  (annotation-expression g$e$9985$5uPkq)
                                  g$m*$9986$5uPkq
                                  g$s*$9987$5uPkq
                                  g$ae*$9988$5uPkq)
                                '#f)))))))
                   (g$match-empty$9941$5uPkq
                     (case-lambda
                       ((g$p$9982$5uPkq g$r$9983$5uPkq)
                        (if (null? g$p$9982$5uPkq)
                          g$r$9983$5uPkq
                          (if (eq? g$p$9982$5uPkq '_)
                            g$r$9983$5uPkq
                            (if (eq? g$p$9982$5uPkq 'any)
                              (cons '() g$r$9983$5uPkq)
                              (if (pair? g$p$9982$5uPkq)
                                (g$match-empty$9941$5uPkq
                                  (car g$p$9982$5uPkq)
                                  (g$match-empty$9941$5uPkq
                                    (cdr g$p$9982$5uPkq)
                                    g$r$9983$5uPkq))
                                (if (eq? g$p$9982$5uPkq 'each-any)
                                  (cons '() g$r$9983$5uPkq)
                                  ((case-lambda
                                     ((g$t$9984$5uPkq)
                                      (if (g$memv$5752$5uPkq
                                            g$t$9984$5uPkq
                                            '(each))
                                        (g$match-empty$9941$5uPkq
                                          (vector-ref g$p$9982$5uPkq '1)
                                          g$r$9983$5uPkq)
                                        (if (g$memv$5752$5uPkq
                                              g$t$9984$5uPkq
                                              '(each+))
                                          (g$match-empty$9941$5uPkq
                                            (vector-ref g$p$9982$5uPkq '1)
                                            (g$match-empty$9941$5uPkq
                                              (reverse
                                                (vector-ref g$p$9982$5uPkq '2))
                                              (g$match-empty$9941$5uPkq
                                                (vector-ref g$p$9982$5uPkq '3)
                                                g$r$9983$5uPkq)))
                                          (if (g$memv$5752$5uPkq
                                                g$t$9984$5uPkq
                                                '(free-id atom))
                                            g$r$9983$5uPkq
                                            (if (g$memv$5752$5uPkq
                                                  g$t$9984$5uPkq
                                                  '(scheme-id atom))
                                              g$r$9983$5uPkq
                                              (if (g$memv$5752$5uPkq
                                                    g$t$9984$5uPkq
                                                    '(vector))
                                                (g$match-empty$9941$5uPkq
                                                  (vector-ref g$p$9982$5uPkq '1)
                                                  g$r$9983$5uPkq)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$9982$5uPkq))))))))
                                   (vector-ref g$p$9982$5uPkq '0))))))))))
                   (g$combine$9942$5uPkq
                     (case-lambda
                       ((g$r*$9980$5uPkq g$r$9981$5uPkq)
                        (if (null? (car g$r*$9980$5uPkq))
                          g$r$9981$5uPkq
                          (cons
                            (g$map$5759$5uPkq car g$r*$9980$5uPkq)
                            (g$combine$9942$5uPkq
                              (g$map$5759$5uPkq cdr g$r*$9980$5uPkq)
                              g$r$9981$5uPkq))))))
                   (g$match*$9943$5uPkq
                     (case-lambda
                       ((g$e$9962$5uPkq
                          g$p$9963$5uPkq
                          g$m*$9964$5uPkq
                          g$s*$9965$5uPkq
                          g$ae*$9966$5uPkq
                          g$r$9967$5uPkq)
                        (if (null? g$p$9963$5uPkq)
                          (if (null? g$e$9962$5uPkq)
                            (begin '#f g$r$9967$5uPkq)
                            '#f)
                          (if (pair? g$p$9963$5uPkq)
                            (if (pair? g$e$9962$5uPkq)
                              (begin
                                '#f
                                (g$match$9944$5uPkq
                                  (car g$e$9962$5uPkq)
                                  (car g$p$9963$5uPkq)
                                  g$m*$9964$5uPkq
                                  g$s*$9965$5uPkq
                                  g$ae*$9966$5uPkq
                                  (g$match$9944$5uPkq
                                    (cdr g$e$9962$5uPkq)
                                    (cdr g$p$9963$5uPkq)
                                    g$m*$9964$5uPkq
                                    g$s*$9965$5uPkq
                                    g$ae*$9966$5uPkq
                                    g$r$9967$5uPkq)))
                              '#f)
                            (if (eq? g$p$9963$5uPkq 'each-any)
                              ((case-lambda
                                 ((g$l$9968$5uPkq)
                                  (if g$l$9968$5uPkq
                                    (begin
                                      '#f
                                      (cons g$l$9968$5uPkq g$r$9967$5uPkq))
                                    '#f)))
                               (g$match-each-any$9940$5uPkq
                                 g$e$9962$5uPkq
                                 g$m*$9964$5uPkq
                                 g$s*$9965$5uPkq
                                 g$ae*$9966$5uPkq))
                              ((case-lambda
                                 ((g$t$9969$5uPkq)
                                  (if (g$memv$5752$5uPkq g$t$9969$5uPkq '(each))
                                    (if (null? g$e$9962$5uPkq)
                                      (g$match-empty$9941$5uPkq
                                        (vector-ref g$p$9963$5uPkq '1)
                                        g$r$9967$5uPkq)
                                      ((case-lambda
                                         ((g$r*$9970$5uPkq)
                                          (if g$r*$9970$5uPkq
                                            (begin
                                              '#f
                                              (g$combine$9942$5uPkq
                                                g$r*$9970$5uPkq
                                                g$r$9967$5uPkq))
                                            '#f)))
                                       (g$match-each$9938$5uPkq
                                         g$e$9962$5uPkq
                                         (vector-ref g$p$9963$5uPkq '1)
                                         g$m*$9964$5uPkq
                                         g$s*$9965$5uPkq
                                         g$ae*$9966$5uPkq)))
                                    (if (g$memv$5752$5uPkq
                                          g$t$9969$5uPkq
                                          '(free-id))
                                      (if (symbol? g$e$9962$5uPkq)
                                        (if (g$top-marked?$7956$5uPkq
                                              g$m*$9964$5uPkq)
                                          (if (g$free-id=?$8022$5uPkq
                                                (g$stx^$9937$5uPkq
                                                  g$e$9962$5uPkq
                                                  g$m*$9964$5uPkq
                                                  g$s*$9965$5uPkq
                                                  g$ae*$9966$5uPkq)
                                                (vector-ref g$p$9963$5uPkq '1))
                                            (begin '#f g$r$9967$5uPkq)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$5752$5uPkq
                                            g$t$9969$5uPkq
                                            '(scheme-id))
                                        (if (symbol? g$e$9962$5uPkq)
                                          (if (g$top-marked?$7956$5uPkq
                                                g$m*$9964$5uPkq)
                                            (if (g$free-id=?$8022$5uPkq
                                                  (g$stx^$9937$5uPkq
                                                    g$e$9962$5uPkq
                                                    g$m*$9964$5uPkq
                                                    g$s*$9965$5uPkq
                                                    g$ae*$9966$5uPkq)
                                                  (g$scheme-stx$8239$5uPkq
                                                    (vector-ref
                                                      g$p$9963$5uPkq
                                                      '1)))
                                              (begin '#f g$r$9967$5uPkq)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$5752$5uPkq
                                              g$t$9969$5uPkq
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$9939$5uPkq
                                                 g$e$9962$5uPkq
                                                 (vector-ref g$p$9963$5uPkq '1)
                                                 (vector-ref g$p$9963$5uPkq '2)
                                                 (vector-ref g$p$9963$5uPkq '3)
                                                 g$m*$9964$5uPkq
                                                 g$s*$9965$5uPkq
                                                 g$ae*$9966$5uPkq
                                                 g$r$9967$5uPkq)))
                                            (case-lambda
                                              ((g$xr*$9974$5uPkq
                                                 g$y-pat$9975$5uPkq
                                                 g$r$9976$5uPkq)
                                               ((case-lambda
                                                  ((g$r$9977$5uPkq
                                                     g$y-pat$9978$5uPkq
                                                     g$xr*$9979$5uPkq)
                                                   (if g$r$9977$5uPkq
                                                     (if (null?
                                                           g$y-pat$9978$5uPkq)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$9979$5uPkq)
                                                           (g$match-empty$9941$5uPkq
                                                             (vector-ref
                                                               g$p$9963$5uPkq
                                                               '1)
                                                             g$r$9977$5uPkq)
                                                           (g$combine$9942$5uPkq
                                                             g$xr*$9979$5uPkq
                                                             g$r$9977$5uPkq)))
                                                       '#f)
                                                     '#f)))
                                                g$r$9976$5uPkq
                                                g$y-pat$9975$5uPkq
                                                g$xr*$9974$5uPkq))))
                                          (if (g$memv$5752$5uPkq
                                                g$t$9969$5uPkq
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref g$p$9963$5uPkq '1)
                                                  (g$strip$8028$5uPkq
                                                    g$e$9962$5uPkq
                                                    g$m*$9964$5uPkq))
                                              (begin '#f g$r$9967$5uPkq)
                                              '#f)
                                            (if (g$memv$5752$5uPkq
                                                  g$t$9969$5uPkq
                                                  '(vector))
                                              (if (vector? g$e$9962$5uPkq)
                                                (begin
                                                  '#f
                                                  (g$match$9944$5uPkq
                                                    (vector->list
                                                      g$e$9962$5uPkq)
                                                    (vector-ref
                                                      g$p$9963$5uPkq
                                                      '1)
                                                    g$m*$9964$5uPkq
                                                    g$s*$9965$5uPkq
                                                    g$ae*$9966$5uPkq
                                                    g$r$9967$5uPkq))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$9963$5uPkq)))))))))
                               (vector-ref g$p$9963$5uPkq '0))))))))
                   (g$match$9944$5uPkq
                     (case-lambda
                       ((g$e$9947$5uPkq
                          g$p$9948$5uPkq
                          g$m*$9949$5uPkq
                          g$s*$9950$5uPkq
                          g$ae*$9951$5uPkq
                          g$r$9952$5uPkq)
                        (if (not g$r$9952$5uPkq)
                          '#f
                          (if (eq? g$p$9948$5uPkq '_)
                            g$r$9952$5uPkq
                            (if (eq? g$p$9948$5uPkq 'any)
                              (cons
                                (g$stx^$9937$5uPkq
                                  g$e$9947$5uPkq
                                  g$m*$9949$5uPkq
                                  g$s*$9950$5uPkq
                                  g$ae*$9951$5uPkq)
                                g$r$9952$5uPkq)
                              (if (g$stx?$7990$5uPkq g$e$9947$5uPkq)
                                (if (not (g$top-marked?$7956$5uPkq
                                           g$m*$9949$5uPkq))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$8005$5uPkq
                                           g$m*$9949$5uPkq
                                           g$s*$9950$5uPkq
                                           g$ae*$9951$5uPkq
                                           g$e$9947$5uPkq)))
                                      (case-lambda
                                        ((g$m*$9956$5uPkq
                                           g$s*$9957$5uPkq
                                           g$ae*$9958$5uPkq)
                                         ((case-lambda
                                            ((g$ae*$9959$5uPkq
                                               g$s*$9960$5uPkq
                                               g$m*$9961$5uPkq)
                                             (g$match$9944$5uPkq
                                               (g$stx-expr$7992$5uPkq
                                                 g$e$9947$5uPkq)
                                               g$p$9948$5uPkq
                                               g$m*$9961$5uPkq
                                               g$s*$9960$5uPkq
                                               g$ae*$9959$5uPkq
                                               g$r$9952$5uPkq)))
                                          g$ae*$9958$5uPkq
                                          g$s*$9957$5uPkq
                                          g$m*$9956$5uPkq)))))
                                  '#f)
                                (if (annotation? g$e$9947$5uPkq)
                                  (g$match$9944$5uPkq
                                    (annotation-expression g$e$9947$5uPkq)
                                    g$p$9948$5uPkq
                                    g$m*$9949$5uPkq
                                    g$s*$9950$5uPkq
                                    g$ae*$9951$5uPkq
                                    g$r$9952$5uPkq)
                                  (g$match*$9943$5uPkq
                                    g$e$9947$5uPkq
                                    g$p$9948$5uPkq
                                    g$m*$9949$5uPkq
                                    g$s*$9950$5uPkq
                                    g$ae*$9951$5uPkq
                                    g$r$9952$5uPkq))))))))))
           (case-lambda
             ((g$e$9945$5uPkq g$p$9946$5uPkq)
              (g$match$9944$5uPkq
                g$e$9945$5uPkq
                g$p$9946$5uPkq
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$8297$5uPkq
     g$ellipsis?$11788$5uPkq
     (case-lambda
       ((g$x$10051$5uPkq)
        (if (g$id?$8018$5uPkq g$x$10051$5uPkq)
          (begin
            '#f
            (g$free-id=?$8022$5uPkq
              g$x$10051$5uPkq
              (g$scheme-stx$8239$5uPkq '...)))
          '#f))))
   (g$underscore?$8298$5uPkq
     g$underscore?$11789$5uPkq
     (case-lambda
       ((g$x$10052$5uPkq)
        (if (g$id?$8018$5uPkq g$x$10052$5uPkq)
          (begin
            '#f
            (g$free-id=?$8022$5uPkq
              g$x$10052$5uPkq
              (g$scheme-stx$8239$5uPkq '_)))
          '#f))))
   (g$verify-literals$8299$5uPkq
     g$verify-literals$11790$5uPkq
     (case-lambda
       ((g$lits$10053$5uPkq g$expr$10054$5uPkq)
        (g$for-each$5760$5uPkq
          (case-lambda
            ((g$x$10055$5uPkq)
             (if ((case-lambda
                    ((g$t$10056$5uPkq)
                     (if g$t$10056$5uPkq
                       g$t$10056$5uPkq
                       ((case-lambda
                          ((g$t$10057$5uPkq)
                           (if g$t$10057$5uPkq
                             g$t$10057$5uPkq
                             (begin
                               '#f
                               (g$underscore?$8298$5uPkq g$x$10055$5uPkq)))))
                        (g$ellipsis?$8297$5uPkq g$x$10055$5uPkq)))))
                  (not (g$id?$8018$5uPkq g$x$10055$5uPkq)))
               (g$syntax-violation$8407$5uPkq
                 '#f
                 '"invalid literal"
                 g$expr$10054$5uPkq
                 g$x$10055$5uPkq)
               (void))))
          g$lits$10053$5uPkq))))
   (g$syntax-case-transformer$8300$5uPkq
     g$syntax-case-transformer$11791$5uPkq
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$10058$5uPkq
                     (case-lambda
                       ((g$pvars$10115$5uPkq
                          g$expr$10116$5uPkq
                          g$y$10117$5uPkq
                          g$r$10118$5uPkq
                          g$mr$10119$5uPkq)
                        ((case-lambda
                           ((g$ids$10120$5uPkq g$levels$10121$5uPkq)
                            ((case-lambda
                               ((g$labels$10122$5uPkq g$new-vars$10123$5uPkq)
                                ((case-lambda
                                   ((g$body$10124$5uPkq)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7944$5uPkq
                                        '#f
                                        g$new-vars$10123$5uPkq
                                        g$body$10124$5uPkq)
                                      g$y$10117$5uPkq)))
                                 (g$chi-expr$8314$5uPkq
                                   (g$add-subst$8008$5uPkq
                                     (g$make-full-rib$7986$5uPkq
                                       g$ids$10120$5uPkq
                                       g$labels$10122$5uPkq)
                                     g$expr$10116$5uPkq)
                                   (append
                                     (g$map$5759$5uPkq
                                       (case-lambda
                                         ((g$label$10125$5uPkq
                                            g$var$10126$5uPkq
                                            g$level$10127$5uPkq)
                                          (cons
                                            g$label$10125$5uPkq
                                            (g$make-binding$8034$5uPkq
                                              'syntax
                                              (cons
                                                g$var$10126$5uPkq
                                                g$level$10127$5uPkq)))))
                                       g$labels$10122$5uPkq
                                       g$new-vars$10123$5uPkq
                                       (g$map$5759$5uPkq
                                         cdr
                                         g$pvars$10115$5uPkq))
                                     g$r$10118$5uPkq)
                                   g$mr$10119$5uPkq))))
                             (g$map$5759$5uPkq
                               g$gen-label$7959$5uPkq
                               g$ids$10120$5uPkq)
                             (g$map$5759$5uPkq
                               g$gen-lexical$7957$5uPkq
                               g$ids$10120$5uPkq))))
                         (g$map$5759$5uPkq car g$pvars$10115$5uPkq)
                         (g$map$5759$5uPkq cdr g$pvars$10115$5uPkq)))))
                   (g$invalid-ids-error$10059$5uPkq
                     (case-lambda
                       ((g$id*$10109$5uPkq g$e$10110$5uPkq g$class$10111$5uPkq)
                        ((letrec ((g$find$10112$5uPkq
                                    (case-lambda
                                      ((g$id*$10113$5uPkq g$ok*$10114$5uPkq)
                                       (if (null? g$id*$10113$5uPkq)
                                         (g$syntax-violation$8407$5uPkq
                                           '#f
                                           '"invalid syntax"
                                           g$e$10110$5uPkq)
                                         (if (g$id?$8018$5uPkq
                                               (car g$id*$10113$5uPkq))
                                           (if (g$bound-id-member?$8025$5uPkq
                                                 (car g$id*$10113$5uPkq)
                                                 g$ok*$10114$5uPkq)
                                             (g$syntax-error$8404$5uPkq
                                               (car g$id*$10113$5uPkq)
                                               '"duplicate "
                                               g$class$10111$5uPkq)
                                             (g$find$10112$5uPkq
                                               (cdr g$id*$10113$5uPkq)
                                               (cons
                                                 (car g$id*$10113$5uPkq)
                                                 g$ok*$10114$5uPkq)))
                                           (g$syntax-error$8404$5uPkq
                                             (car g$id*$10113$5uPkq)
                                             '"invalid "
                                             g$class$10111$5uPkq)))))))
                           g$find$10112$5uPkq)
                         g$id*$10109$5uPkq
                         '()))))
                   (g$gen-clause$10060$5uPkq
                     (case-lambda
                       ((g$x$10089$5uPkq
                          g$keys$10090$5uPkq
                          g$clauses$10091$5uPkq
                          g$r$10092$5uPkq
                          g$mr$10093$5uPkq
                          g$pat$10094$5uPkq
                          g$fender$10095$5uPkq
                          g$expr$10096$5uPkq)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$8295$5uPkq
                               g$pat$10094$5uPkq
                               g$keys$10090$5uPkq)))
                          (case-lambda
                            ((g$p$10099$5uPkq g$pvars$10100$5uPkq)
                             ((case-lambda
                                ((g$pvars$10101$5uPkq g$p$10102$5uPkq)
                                 (if (not (g$distinct-bound-ids?$8024$5uPkq
                                            (g$map$5759$5uPkq
                                              car
                                              g$pvars$10101$5uPkq)))
                                   (g$invalid-ids-error$10059$5uPkq
                                     (g$map$5759$5uPkq car g$pvars$10101$5uPkq)
                                     g$pat$10094$5uPkq
                                     '"pattern variable")
                                   (if (not (g$for-all$5757$5uPkq
                                              (case-lambda
                                                ((g$x$10103$5uPkq)
                                                 (not (g$ellipsis?$8297$5uPkq
                                                        (car g$x$10103$5uPkq)))))
                                              g$pvars$10101$5uPkq))
                                     (g$syntax-violation$8407$5uPkq
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$10094$5uPkq)
                                     ((case-lambda
                                        ((g$y$10104$5uPkq)
                                         ((case-lambda
                                            ((g$test$10105$5uPkq)
                                             ((case-lambda
                                                ((g$conseq$10106$5uPkq)
                                                 ((case-lambda
                                                    ((g$altern$10107$5uPkq)
                                                     (list
                                                       (g$build-lambda$7944$5uPkq
                                                         '#f
                                                         (list g$y$10104$5uPkq)
                                                         (list
                                                           'if
                                                           g$test$10105$5uPkq
                                                           g$conseq$10106$5uPkq
                                                           g$altern$10107$5uPkq))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$10089$5uPkq
                                                         (list
                                                           'quote
                                                           g$p$10102$5uPkq)))))
                                                  (g$gen-syntax-case$10061$5uPkq
                                                    g$x$10089$5uPkq
                                                    g$keys$10090$5uPkq
                                                    g$clauses$10091$5uPkq
                                                    g$r$10092$5uPkq
                                                    g$mr$10093$5uPkq))))
                                              (g$build-dispatch-call$10058$5uPkq
                                                g$pvars$10101$5uPkq
                                                g$expr$10096$5uPkq
                                                g$y$10104$5uPkq
                                                g$r$10092$5uPkq
                                                g$mr$10093$5uPkq))))
                                          (if (eq? g$fender$10095$5uPkq '#t)
                                            g$y$10104$5uPkq
                                            ((case-lambda
                                               ((g$call$10108$5uPkq)
                                                (list
                                                  'if
                                                  g$y$10104$5uPkq
                                                  g$call$10108$5uPkq
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$10058$5uPkq
                                               g$pvars$10101$5uPkq
                                               g$fender$10095$5uPkq
                                               g$y$10104$5uPkq
                                               g$r$10092$5uPkq
                                               g$mr$10093$5uPkq))))))
                                      (g$gen-lexical$7957$5uPkq 'tmp))))))
                              g$pvars$10100$5uPkq
                              g$p$10099$5uPkq)))))))
                   (g$gen-syntax-case$10061$5uPkq
                     (case-lambda
                       ((g$x$10072$5uPkq
                          g$keys$10073$5uPkq
                          g$clauses$10074$5uPkq
                          g$r$10075$5uPkq
                          g$mr$10076$5uPkq)
                        (if (null? g$clauses$10074$5uPkq)
                          (list '(primitive syntax-error) g$x$10072$5uPkq)
                          ((case-lambda
                             ((g$t$10077$5uPkq)
                              ((case-lambda
                                 ((g$ls/false$10078$5uPkq)
                                  (if g$ls/false$10078$5uPkq
                                    (apply
                                      (case-lambda
                                        ((g$pat$10079$5uPkq g$expr$10080$5uPkq)
                                         (if (if (g$id?$8018$5uPkq
                                                   g$pat$10079$5uPkq)
                                               (if (not (g$bound-id-member?$8025$5uPkq
                                                          g$pat$10079$5uPkq
                                                          g$keys$10073$5uPkq))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$8297$5uPkq
                                                          g$pat$10079$5uPkq)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$8022$5uPkq
                                                 g$pat$10079$5uPkq
                                                 (g$scheme-stx$8239$5uPkq '_))
                                             (g$chi-expr$8314$5uPkq
                                               g$expr$10080$5uPkq
                                               g$r$10075$5uPkq
                                               g$mr$10076$5uPkq)
                                             ((case-lambda
                                                ((g$lab$10081$5uPkq
                                                   g$lex$10082$5uPkq)
                                                 ((case-lambda
                                                    ((g$body$10083$5uPkq)
                                                     (list
                                                       (g$build-lambda$7944$5uPkq
                                                         '#f
                                                         (list
                                                           g$lex$10082$5uPkq)
                                                         g$body$10083$5uPkq)
                                                       g$x$10072$5uPkq)))
                                                  (g$chi-expr$8314$5uPkq
                                                    (g$add-subst$8008$5uPkq
                                                      (g$make-full-rib$7986$5uPkq
                                                        (list g$pat$10079$5uPkq)
                                                        (list
                                                          g$lab$10081$5uPkq))
                                                      g$expr$10080$5uPkq)
                                                    (cons
                                                      (cons
                                                        g$lab$10081$5uPkq
                                                        (g$make-binding$8034$5uPkq
                                                          'syntax
                                                          (cons
                                                            g$lex$10082$5uPkq
                                                            '0)))
                                                      g$r$10075$5uPkq)
                                                    g$mr$10076$5uPkq))))
                                              (g$gen-label$7959$5uPkq
                                                g$pat$10079$5uPkq)
                                              (g$gen-lexical$7957$5uPkq
                                                g$pat$10079$5uPkq)))
                                           (g$gen-clause$10060$5uPkq
                                             g$x$10072$5uPkq
                                             g$keys$10073$5uPkq
                                             (cdr g$clauses$10074$5uPkq)
                                             g$r$10075$5uPkq
                                             g$mr$10076$5uPkq
                                             g$pat$10079$5uPkq
                                             '#t
                                             g$expr$10080$5uPkq))))
                                      g$ls/false$10078$5uPkq)
                                    ((case-lambda
                                       ((g$t$10084$5uPkq)
                                        ((case-lambda
                                           ((g$ls/false$10085$5uPkq)
                                            (if g$ls/false$10085$5uPkq
                                              (apply
                                                (case-lambda
                                                  ((g$pat$10086$5uPkq
                                                     g$fender$10087$5uPkq
                                                     g$expr$10088$5uPkq)
                                                   (g$gen-clause$10060$5uPkq
                                                     g$x$10072$5uPkq
                                                     g$keys$10073$5uPkq
                                                     (cdr g$clauses$10074$5uPkq)
                                                     g$r$10075$5uPkq
                                                     g$mr$10076$5uPkq
                                                     g$pat$10086$5uPkq
                                                     g$fender$10087$5uPkq
                                                     g$expr$10088$5uPkq)))
                                                g$ls/false$10085$5uPkq)
                                              (g$syntax-violation$8407$5uPkq
                                                '#f
                                                '"invalid syntax"
                                                g$t$10084$5uPkq))))
                                         (g$syntax-dispatch$8296$5uPkq
                                           g$t$10084$5uPkq
                                           '(any any any)))))
                                     g$t$10077$5uPkq))))
                               (g$syntax-dispatch$8296$5uPkq
                                 g$t$10077$5uPkq
                                 '(any any)))))
                           (car g$clauses$10074$5uPkq)))))))
           (case-lambda
             ((g$e$10062$5uPkq g$r$10063$5uPkq g$mr$10064$5uPkq)
              ((case-lambda
                 ((g$t$10065$5uPkq)
                  ((case-lambda
                     ((g$ls/false$10066$5uPkq)
                      (if g$ls/false$10066$5uPkq
                        (apply
                          (case-lambda
                            ((g$expr$10067$5uPkq
                               g$keys$10068$5uPkq
                               g$clauses$10069$5uPkq)
                             (begin
                               (g$verify-literals$8299$5uPkq
                                 g$keys$10068$5uPkq
                                 g$e$10062$5uPkq)
                               ((case-lambda
                                  ((g$x$10070$5uPkq)
                                   ((case-lambda
                                      ((g$body$10071$5uPkq)
                                       (list
                                         (g$build-lambda$7944$5uPkq
                                           '#f
                                           (list g$x$10070$5uPkq)
                                           g$body$10071$5uPkq)
                                         (g$chi-expr$8314$5uPkq
                                           g$expr$10067$5uPkq
                                           g$r$10063$5uPkq
                                           g$mr$10064$5uPkq))))
                                    (g$gen-syntax-case$10061$5uPkq
                                      g$x$10070$5uPkq
                                      g$keys$10068$5uPkq
                                      g$clauses$10069$5uPkq
                                      g$r$10063$5uPkq
                                      g$mr$10064$5uPkq))))
                                (g$gen-lexical$7957$5uPkq 'tmp)))))
                          g$ls/false$10066$5uPkq)
                        (g$syntax-violation$8407$5uPkq
                          '#f
                          '"invalid syntax"
                          g$t$10065$5uPkq))))
                   (g$syntax-dispatch$8296$5uPkq
                     g$t$10065$5uPkq
                     '(_ any each-any . each-any)))))
               g$e$10062$5uPkq))))))))
   (g$ellipsis-map$8301$5uPkq
     g$ellipsis-map$11792$5uPkq
     (case-lambda
       ((g$proc$10128$5uPkq g$ls$10129$5uPkq . g$ls*$10130$5uPkq)
        (letrec* ((g$who$10131$5uPkq '...))
          (begin
            (if (not (list? g$ls$10129$5uPkq))
              (assertion-violation
                g$who$10131$5uPkq
                '"not a list"
                g$ls$10129$5uPkq)
              (void))
            (if (not (null? g$ls*$10130$5uPkq))
              ((case-lambda
                 ((g$n$10132$5uPkq)
                  (g$for-each$5760$5uPkq
                    (case-lambda
                      ((g$x$10133$5uPkq)
                       (begin
                         (if (not (list? g$x$10133$5uPkq))
                           (assertion-violation
                             g$who$10131$5uPkq
                             '"not a list"
                             g$x$10133$5uPkq)
                           (void))
                         (if (not (= (length g$x$10133$5uPkq) g$n$10132$5uPkq))
                           (assertion-violation
                             g$who$10131$5uPkq
                             '"length mismatch"
                             g$ls$10129$5uPkq
                             g$x$10133$5uPkq)
                           (void)))))
                    g$ls*$10130$5uPkq)))
               (length g$ls$10129$5uPkq))
              (void))
            (apply
              g$map$5759$5uPkq
              g$proc$10128$5uPkq
              g$ls$10129$5uPkq
              g$ls*$10130$5uPkq))))))
   (g$syntax-transformer$8302$5uPkq
     g$syntax-transformer$11793$5uPkq
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$10134$5uPkq
                     (case-lambda
                       ((g$src$10194$5uPkq
                          g$e$10195$5uPkq
                          g$r$10196$5uPkq
                          g$maps$10197$5uPkq
                          g$ellipsis?$10198$5uPkq
                          g$vec?$10199$5uPkq)
                        ((case-lambda
                           ((g$t$10200$5uPkq)
                            ((case-lambda
                               ((g$ls/false$10201$5uPkq)
                                (if (if g$ls/false$10201$5uPkq
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$10202$5uPkq)
                                             (g$ellipsis?$10198$5uPkq
                                               g$dots$10202$5uPkq)))
                                          g$ls/false$10201$5uPkq))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$10203$5uPkq)
                                       (g$syntax-violation$8407$5uPkq
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$10194$5uPkq)))
                                    g$ls/false$10201$5uPkq)
                                  ((case-lambda
                                     ((g$t$10204$5uPkq)
                                      ((case-lambda
                                         ((g$ls/false$10205$5uPkq)
                                          (if (if g$ls/false$10205$5uPkq
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$10206$5uPkq)
                                                       (g$id?$8018$5uPkq
                                                         g$id$10206$5uPkq)))
                                                    g$ls/false$10205$5uPkq))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$10207$5uPkq)
                                                 ((case-lambda
                                                    ((g$label$10208$5uPkq)
                                                     ((case-lambda
                                                        ((g$b$10209$5uPkq)
                                                         (if (eq? (g$binding-type$8035$5uPkq
                                                                    g$b$10209$5uPkq)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$10212$5uPkq)
                                                                    (g$gen-ref$10135$5uPkq
                                                                      g$src$10194$5uPkq
                                                                      (car g$var.lev$10212$5uPkq)
                                                                      (cdr g$var.lev$10212$5uPkq)
                                                                      g$maps$10197$5uPkq)))
                                                                 (g$binding-value$8036$5uPkq
                                                                   g$b$10209$5uPkq))))
                                                             (case-lambda
                                                               ((g$var$10213$5uPkq
                                                                  g$maps$10214$5uPkq)
                                                                ((case-lambda
                                                                   ((g$maps$10215$5uPkq
                                                                      g$var$10216$5uPkq)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$10216$5uPkq)
                                                                      g$maps$10215$5uPkq)))
                                                                 g$maps$10214$5uPkq
                                                                 g$var$10213$5uPkq))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$10195$5uPkq)
                                                             g$maps$10197$5uPkq))))
                                                      (g$label->binding$8033$5uPkq
                                                        g$label$10208$5uPkq
                                                        g$r$10196$5uPkq))))
                                                  (g$id->label$8031$5uPkq
                                                    g$e$10195$5uPkq))))
                                              g$ls/false$10205$5uPkq)
                                            ((case-lambda
                                               ((g$t$10217$5uPkq)
                                                ((case-lambda
                                                   ((g$ls/false$10218$5uPkq)
                                                    (if (if g$ls/false$10218$5uPkq
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$10219$5uPkq
                                                                   g$e$10220$5uPkq)
                                                                 (g$ellipsis?$10198$5uPkq
                                                                   g$dots$10219$5uPkq)))
                                                              g$ls/false$10218$5uPkq))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$10221$5uPkq
                                                             g$e$10222$5uPkq)
                                                           (if g$vec?$10199$5uPkq
                                                             (g$syntax-violation$8407$5uPkq
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$10194$5uPkq)
                                                             (g$gen-syntax$10134$5uPkq
                                                               g$src$10194$5uPkq
                                                               g$e$10222$5uPkq
                                                               g$r$10196$5uPkq
                                                               g$maps$10197$5uPkq
                                                               (case-lambda
                                                                 ((g$x$10223$5uPkq)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$10218$5uPkq)
                                                      ((case-lambda
                                                         ((g$t$10224$5uPkq)
                                                          ((case-lambda
                                                             ((g$ls/false$10225$5uPkq)
                                                              (if (if g$ls/false$10225$5uPkq
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$10226$5uPkq
                                                                             g$dots$10227$5uPkq
                                                                             g$y$10228$5uPkq)
                                                                           (g$ellipsis?$10198$5uPkq
                                                                             g$dots$10227$5uPkq)))
                                                                        g$ls/false$10225$5uPkq))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$10229$5uPkq
                                                                       g$dots$10230$5uPkq
                                                                       g$y$10231$5uPkq)
                                                                     ((letrec ((g$f$10232$5uPkq
                                                                                 (case-lambda
                                                                                   ((g$y$10233$5uPkq
                                                                                      g$k$10234$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$t$10235$5uPkq)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10236$5uPkq)
                                                                                            (if g$ls/false$10236$5uPkq
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$10234$5uPkq
                                                                                                     g$maps$10197$5uPkq)))
                                                                                                g$ls/false$10236$5uPkq)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10237$5uPkq)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10238$5uPkq)
                                                                                                      (if (if g$ls/false$10238$5uPkq
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$10239$5uPkq
                                                                                                                     g$y$10240$5uPkq)
                                                                                                                   (g$ellipsis?$10198$5uPkq
                                                                                                                     g$dots$10239$5uPkq)))
                                                                                                                g$ls/false$10238$5uPkq))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$10241$5uPkq
                                                                                                               g$y$10242$5uPkq)
                                                                                                             (g$f$10232$5uPkq
                                                                                                               g$y$10242$5uPkq
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$10243$5uPkq)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$10234$5uPkq
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$10243$5uPkq))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$10246$5uPkq
                                                                                                                         g$maps$10247$5uPkq)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$10248$5uPkq
                                                                                                                             g$x$10249$5uPkq)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$10248$5uPkq))
                                                                                                                             (g$syntax-violation$8407$5uPkq
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$10194$5uPkq)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$10137$5uPkq
                                                                                                                                 g$x$10249$5uPkq
                                                                                                                                 (car g$maps$10248$5uPkq))
                                                                                                                               (cdr g$maps$10248$5uPkq)))))
                                                                                                                        g$maps$10247$5uPkq
                                                                                                                        g$x$10246$5uPkq)))))))))
                                                                                                          g$ls/false$10238$5uPkq)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$10250$5uPkq)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$10251$5uPkq)
                                                                                                                (if g$ls/false$10251$5uPkq
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$10134$5uPkq
                                                                                                                              g$src$10194$5uPkq
                                                                                                                              g$y$10233$5uPkq
                                                                                                                              g$r$10196$5uPkq
                                                                                                                              g$maps$10197$5uPkq
                                                                                                                              g$ellipsis?$10198$5uPkq
                                                                                                                              g$vec?$10199$5uPkq)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$10254$5uPkq
                                                                                                                              g$maps$10255$5uPkq)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$10256$5uPkq
                                                                                                                                  g$y$10257$5uPkq)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$10234$5uPkq
                                                                                                                                       g$maps$10256$5uPkq)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$10260$5uPkq
                                                                                                                                       g$maps$10261$5uPkq)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$10262$5uPkq
                                                                                                                                           g$x$10263$5uPkq)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$10136$5uPkq
                                                                                                                                             g$x$10263$5uPkq
                                                                                                                                             g$y$10257$5uPkq)
                                                                                                                                           g$maps$10262$5uPkq)))
                                                                                                                                      g$maps$10261$5uPkq
                                                                                                                                      g$x$10260$5uPkq))))))
                                                                                                                             g$maps$10255$5uPkq
                                                                                                                             g$y$10254$5uPkq))))))
                                                                                                                    g$ls/false$10251$5uPkq)
                                                                                                                  (g$syntax-violation$8407$5uPkq
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$10250$5uPkq))))
                                                                                                             (g$syntax-dispatch$8296$5uPkq
                                                                                                               g$t$10250$5uPkq
                                                                                                               '_))))
                                                                                                         g$t$10237$5uPkq))))
                                                                                                   (g$syntax-dispatch$8296$5uPkq
                                                                                                     g$t$10237$5uPkq
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$10235$5uPkq))))
                                                                                         (g$syntax-dispatch$8296$5uPkq
                                                                                           g$t$10235$5uPkq
                                                                                           '()))))
                                                                                     g$y$10233$5uPkq)))))
                                                                        g$f$10232$5uPkq)
                                                                      g$y$10231$5uPkq
                                                                      (case-lambda
                                                                        ((g$maps$10264$5uPkq)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$10134$5uPkq
                                                                                g$src$10194$5uPkq
                                                                                g$x$10229$5uPkq
                                                                                g$r$10196$5uPkq
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$10264$5uPkq)
                                                                                g$ellipsis?$10198$5uPkq
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$10267$5uPkq
                                                                                g$maps$10268$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$maps$10269$5uPkq
                                                                                    g$x$10270$5uPkq)
                                                                                  (if (null?
                                                                                        (car g$maps$10269$5uPkq))
                                                                                    (g$syntax-violation$8407$5uPkq
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$10194$5uPkq)
                                                                                    (values
                                                                                      (g$gen-map$10138$5uPkq
                                                                                        g$x$10270$5uPkq
                                                                                        (car g$maps$10269$5uPkq))
                                                                                      (cdr g$maps$10269$5uPkq)))))
                                                                               g$maps$10268$5uPkq
                                                                               g$x$10267$5uPkq)))))))))
                                                                  g$ls/false$10225$5uPkq)
                                                                ((case-lambda
                                                                   ((g$t$10271$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10272$5uPkq)
                                                                        (if g$ls/false$10272$5uPkq
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$10273$5uPkq
                                                                                 g$y$10274$5uPkq)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$10134$5uPkq
                                                                                      g$src$10194$5uPkq
                                                                                      g$x$10273$5uPkq
                                                                                      g$r$10196$5uPkq
                                                                                      g$maps$10197$5uPkq
                                                                                      g$ellipsis?$10198$5uPkq
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$10277$5uPkq
                                                                                      g$maps$10278$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$maps$10279$5uPkq
                                                                                          g$xnew$10280$5uPkq)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$10134$5uPkq
                                                                                               g$src$10194$5uPkq
                                                                                               g$y$10274$5uPkq
                                                                                               g$r$10196$5uPkq
                                                                                               g$maps$10279$5uPkq
                                                                                               g$ellipsis?$10198$5uPkq
                                                                                               g$vec?$10199$5uPkq)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$10283$5uPkq
                                                                                               g$maps$10284$5uPkq)
                                                                                             ((case-lambda
                                                                                                ((g$maps$10285$5uPkq
                                                                                                   g$ynew$10286$5uPkq)
                                                                                                 (values
                                                                                                   (g$gen-cons$10139$5uPkq
                                                                                                     g$e$10195$5uPkq
                                                                                                     g$x$10273$5uPkq
                                                                                                     g$y$10274$5uPkq
                                                                                                     g$xnew$10280$5uPkq
                                                                                                     g$ynew$10286$5uPkq)
                                                                                                   g$maps$10285$5uPkq)))
                                                                                              g$maps$10284$5uPkq
                                                                                              g$ynew$10283$5uPkq))))))
                                                                                     g$maps$10278$5uPkq
                                                                                     g$xnew$10277$5uPkq))))))
                                                                            g$ls/false$10272$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$t$10287$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10288$5uPkq)
                                                                                  (if g$ls/false$10288$5uPkq
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$10289$5uPkq)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$10134$5uPkq
                                                                                                g$src$10194$5uPkq
                                                                                                g$ls$10289$5uPkq
                                                                                                g$r$10196$5uPkq
                                                                                                g$maps$10197$5uPkq
                                                                                                g$ellipsis?$10198$5uPkq
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$10292$5uPkq
                                                                                                g$maps$10293$5uPkq)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$10294$5uPkq
                                                                                                    g$lsnew$10295$5uPkq)
                                                                                                  (values
                                                                                                    (g$gen-vector$10140$5uPkq
                                                                                                      g$e$10195$5uPkq
                                                                                                      g$ls$10289$5uPkq
                                                                                                      g$lsnew$10295$5uPkq)
                                                                                                    g$maps$10294$5uPkq)))
                                                                                               g$maps$10293$5uPkq
                                                                                               g$lsnew$10292$5uPkq))))))
                                                                                      g$ls/false$10288$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$t$10296$5uPkq)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10297$5uPkq)
                                                                                            (if g$ls/false$10297$5uPkq
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$10195$5uPkq)
                                                                                                     g$maps$10197$5uPkq)))
                                                                                                g$ls/false$10297$5uPkq)
                                                                                              (g$syntax-violation$8407$5uPkq
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$10296$5uPkq))))
                                                                                         (g$syntax-dispatch$8296$5uPkq
                                                                                           g$t$10296$5uPkq
                                                                                           '_))))
                                                                                     g$t$10287$5uPkq))))
                                                                               (g$syntax-dispatch$8296$5uPkq
                                                                                 g$t$10287$5uPkq
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$10271$5uPkq))))
                                                                     (g$syntax-dispatch$8296$5uPkq
                                                                       g$t$10271$5uPkq
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$10224$5uPkq))))
                                                           (g$syntax-dispatch$8296$5uPkq
                                                             g$t$10224$5uPkq
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$10217$5uPkq))))
                                                 (g$syntax-dispatch$8296$5uPkq
                                                   g$t$10217$5uPkq
                                                   '(any any)))))
                                             g$t$10204$5uPkq))))
                                       (g$syntax-dispatch$8296$5uPkq
                                         g$t$10204$5uPkq
                                         'any))))
                                   g$t$10200$5uPkq))))
                             (g$syntax-dispatch$8296$5uPkq
                               g$t$10200$5uPkq
                               'any))))
                         g$e$10195$5uPkq))))
                   (g$gen-ref$10135$5uPkq
                     (case-lambda
                       ((g$src$10181$5uPkq
                          g$var$10182$5uPkq
                          g$level$10183$5uPkq
                          g$maps$10184$5uPkq)
                        (if (= g$level$10183$5uPkq '0)
                          (values g$var$10182$5uPkq g$maps$10184$5uPkq)
                          (if (null? g$maps$10184$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$10181$5uPkq)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$10135$5uPkq
                                   g$src$10181$5uPkq
                                   g$var$10182$5uPkq
                                   (- g$level$10183$5uPkq '1)
                                   (cdr g$maps$10184$5uPkq))))
                              (case-lambda
                                ((g$outer-var$10187$5uPkq
                                   g$outer-maps$10188$5uPkq)
                                 ((case-lambda
                                    ((g$outer-maps$10189$5uPkq
                                       g$outer-var$10190$5uPkq)
                                     ((case-lambda
                                        ((g$t$10191$5uPkq)
                                         (if g$t$10191$5uPkq
                                           ((case-lambda
                                              ((g$b$10192$5uPkq)
                                               (values
                                                 (cdr g$b$10192$5uPkq)
                                                 g$maps$10184$5uPkq)))
                                            g$t$10191$5uPkq)
                                           ((case-lambda
                                              ((g$inner-var$10193$5uPkq)
                                               (values
                                                 g$inner-var$10193$5uPkq
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$10190$5uPkq
                                                       g$inner-var$10193$5uPkq)
                                                     (car g$maps$10184$5uPkq))
                                                   g$outer-maps$10189$5uPkq))))
                                            (g$gen-lexical$7957$5uPkq 'tmp)))))
                                      (g$assq$5747$5uPkq
                                        g$outer-var$10190$5uPkq
                                        (car g$maps$10184$5uPkq)))))
                                  g$outer-maps$10188$5uPkq
                                  g$outer-var$10187$5uPkq)))))))))
                   (g$gen-append$10136$5uPkq
                     (case-lambda
                       ((g$x$10179$5uPkq g$y$10180$5uPkq)
                        (if (equal? g$y$10180$5uPkq ''())
                          g$x$10179$5uPkq
                          (list 'append g$x$10179$5uPkq g$y$10180$5uPkq)))))
                   (g$gen-mappend$10137$5uPkq
                     (case-lambda
                       ((g$e$10177$5uPkq g$map-env$10178$5uPkq)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$10138$5uPkq
                            g$e$10177$5uPkq
                            g$map-env$10178$5uPkq)))))
                   (g$gen-map$10138$5uPkq
                     (case-lambda
                       ((g$e$10168$5uPkq g$map-env$10169$5uPkq)
                        ((case-lambda
                           ((g$formals$10170$5uPkq g$actuals$10171$5uPkq)
                            (if (eq? (car g$e$10168$5uPkq) 'ref)
                              (car g$actuals$10171$5uPkq)
                              (if (g$for-all$5757$5uPkq
                                    (case-lambda
                                      ((g$x$10172$5uPkq)
                                       (if (eq? (car g$x$10172$5uPkq) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5751$5uPkq
                                             (g$cadr$5923$5uPkq g$x$10172$5uPkq)
                                             g$formals$10170$5uPkq))
                                         '#f)))
                                    (cdr g$e$10168$5uPkq))
                                ((case-lambda
                                   ((g$args$10173$5uPkq)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$10168$5uPkq))
                                        g$args$10173$5uPkq))))
                                 (g$map$5759$5uPkq
                                   ((case-lambda
                                      ((g$r$10174$5uPkq)
                                       (case-lambda
                                         ((g$x$10175$5uPkq)
                                          (cdr (g$assq$5747$5uPkq
                                                 (g$cadr$5923$5uPkq
                                                   g$x$10175$5uPkq)
                                                 g$r$10174$5uPkq))))))
                                    (g$map$5759$5uPkq
                                      cons
                                      g$formals$10170$5uPkq
                                      g$actuals$10171$5uPkq))
                                   (cdr g$e$10168$5uPkq)))
                                (g$cons*$5761$5uPkq
                                  'map
                                  (list
                                    'lambda
                                    g$formals$10170$5uPkq
                                    g$e$10168$5uPkq)
                                  g$actuals$10171$5uPkq)))))
                         (g$map$5759$5uPkq cdr g$map-env$10169$5uPkq)
                         (g$map$5759$5uPkq
                           (case-lambda
                             ((g$x$10176$5uPkq)
                              (list 'ref (car g$x$10176$5uPkq))))
                           g$map-env$10169$5uPkq)))))
                   (g$gen-cons$10139$5uPkq
                     (case-lambda
                       ((g$e$10160$5uPkq
                          g$x$10161$5uPkq
                          g$y$10162$5uPkq
                          g$xnew$10163$5uPkq
                          g$ynew$10164$5uPkq)
                        ((case-lambda
                           ((g$t$10165$5uPkq)
                            (if (g$memv$5752$5uPkq g$t$10165$5uPkq '(quote))
                              (if (eq? (car g$xnew$10163$5uPkq) 'quote)
                                ((case-lambda
                                   ((g$xnew$10166$5uPkq g$ynew$10167$5uPkq)
                                    (if (if (eq? g$xnew$10166$5uPkq
                                                 g$x$10161$5uPkq)
                                          (begin
                                            '#f
                                            (eq? g$ynew$10167$5uPkq
                                                 g$y$10162$5uPkq))
                                          '#f)
                                      (list 'quote g$e$10160$5uPkq)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$10166$5uPkq
                                          g$ynew$10167$5uPkq)))))
                                 (g$cadr$5923$5uPkq g$xnew$10163$5uPkq)
                                 (g$cadr$5923$5uPkq g$ynew$10164$5uPkq))
                                (if (null?
                                      (g$cadr$5923$5uPkq g$ynew$10164$5uPkq))
                                  (list 'list g$xnew$10163$5uPkq)
                                  (list
                                    'cons
                                    g$xnew$10163$5uPkq
                                    g$ynew$10164$5uPkq)))
                              (if (g$memv$5752$5uPkq g$t$10165$5uPkq '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$10163$5uPkq
                                    (cdr g$ynew$10164$5uPkq)))
                                (list
                                  'cons
                                  g$xnew$10163$5uPkq
                                  g$ynew$10164$5uPkq)))))
                         (car g$ynew$10164$5uPkq)))))
                   (g$gen-vector$10140$5uPkq
                     (case-lambda
                       ((g$e$10157$5uPkq g$ls$10158$5uPkq g$lsnew$10159$5uPkq)
                        (if (eq? (car g$lsnew$10159$5uPkq) 'quote)
                          (if (eq? (g$cadr$5923$5uPkq g$lsnew$10159$5uPkq)
                                   g$ls$10158$5uPkq)
                            (list 'quote g$e$10157$5uPkq)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5923$5uPkq g$lsnew$10159$5uPkq))))
                          (if (eq? (car g$lsnew$10159$5uPkq) 'list)
                            (cons 'vector (cdr g$lsnew$10159$5uPkq))
                            (list 'list->vector g$lsnew$10159$5uPkq))))))
                   (g$regen$10141$5uPkq
                     (case-lambda
                       ((g$x$10154$5uPkq)
                        ((case-lambda
                           ((g$t$10155$5uPkq)
                            (if (g$memv$5752$5uPkq g$t$10155$5uPkq '(ref))
                              (g$cadr$5923$5uPkq g$x$10154$5uPkq)
                              (if (g$memv$5752$5uPkq
                                    g$t$10155$5uPkq
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5923$5uPkq g$x$10154$5uPkq))
                                (if (g$memv$5752$5uPkq g$t$10155$5uPkq '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5923$5uPkq g$x$10154$5uPkq))
                                  (if (g$memv$5752$5uPkq
                                        g$t$10155$5uPkq
                                        '(lambda))
                                    (g$build-lambda$7944$5uPkq
                                      '#f
                                      (g$cadr$5923$5uPkq g$x$10154$5uPkq)
                                      (g$regen$10141$5uPkq
                                        (g$caddr$5929$5uPkq g$x$10154$5uPkq)))
                                    (if (g$memv$5752$5uPkq
                                          g$t$10155$5uPkq
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$10156$5uPkq)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$10156$5uPkq)))
                                       (g$map$5759$5uPkq
                                         g$regen$10141$5uPkq
                                         (cdr g$x$10154$5uPkq)))
                                      (cons
                                        (list 'primitive (car g$x$10154$5uPkq))
                                        (g$map$5759$5uPkq
                                          g$regen$10141$5uPkq
                                          (cdr g$x$10154$5uPkq))))))))))
                         (car g$x$10154$5uPkq))))))
           (case-lambda
             ((g$e$10142$5uPkq g$r$10143$5uPkq g$mr$10144$5uPkq)
              ((case-lambda
                 ((g$t$10145$5uPkq)
                  ((case-lambda
                     ((g$ls/false$10146$5uPkq)
                      (if g$ls/false$10146$5uPkq
                        (apply
                          (case-lambda
                            ((g$x$10147$5uPkq)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$10134$5uPkq
                                    g$e$10142$5uPkq
                                    g$x$10147$5uPkq
                                    g$r$10143$5uPkq
                                    '()
                                    g$ellipsis?$8297$5uPkq
                                    '#f)))
                               (case-lambda
                                 ((g$e$10150$5uPkq g$maps$10151$5uPkq)
                                  ((case-lambda
                                     ((g$maps$10152$5uPkq g$e$10153$5uPkq)
                                      (g$regen$10141$5uPkq g$e$10153$5uPkq)))
                                   g$maps$10151$5uPkq
                                   g$e$10150$5uPkq))))))
                          g$ls/false$10146$5uPkq)
                        (g$syntax-violation$8407$5uPkq
                          '#f
                          '"invalid syntax"
                          g$t$10145$5uPkq))))
                   (g$syntax-dispatch$8296$5uPkq g$t$10145$5uPkq '(_ any)))))
               g$e$10142$5uPkq))))))))
   (g$core-macro-transformer$8303$5uPkq
     g$core-macro-transformer$11794$5uPkq
     (case-lambda
       ((g$name$10298$5uPkq)
        ((case-lambda
           ((g$t$10299$5uPkq)
            (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(quote))
              g$quote-transformer$8256$5uPkq
              (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(lambda))
                g$lambda-transformer$8258$5uPkq
                (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(case-lambda))
                  g$case-lambda-transformer$8257$5uPkq
                  (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(letrec))
                    g$letrec-transformer$8246$5uPkq
                    (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(letrec*))
                      g$letrec*-transformer$8247$5uPkq
                      (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(if))
                        g$if-transformer$8254$5uPkq
                        (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(foreign-call))
                          g$foreign-call-transformer$8294$5uPkq
                          (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(syntax-case))
                            g$syntax-case-transformer$8300$5uPkq
                            (if (g$memv$5752$5uPkq g$t$10299$5uPkq '(syntax))
                              g$syntax-transformer$8302$5uPkq
                              (if (g$memv$5752$5uPkq
                                    g$t$10299$5uPkq
                                    '(type-descriptor))
                                g$type-descriptor-transformer$8249$5uPkq
                                (if (g$memv$5752$5uPkq
                                      g$t$10299$5uPkq
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$8250$5uPkq
                                  (if (g$memv$5752$5uPkq
                                        g$t$10299$5uPkq
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$8251$5uPkq
                                    (if (g$memv$5752$5uPkq
                                          g$t$10299$5uPkq
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$8248$5uPkq
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$10298$5uPkq))))))))))))))))
         g$name$10298$5uPkq))))
   (g$file-options-macro$8304$5uPkq
     g$file-options-macro$11795$5uPkq
     (case-lambda
       ((g$x$10300$5uPkq)
        (letrec* ((g$valid-option?$10301$5uPkq
                    (case-lambda
                      ((g$x$10306$5uPkq)
                       (if (g$id?$8018$5uPkq g$x$10306$5uPkq)
                         (begin
                           '#f
                           (g$memq$5751$5uPkq
                             (g$id->sym$8019$5uPkq g$x$10306$5uPkq)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$10302$5uPkq)
              ((case-lambda
                 ((g$ls/false$10303$5uPkq)
                  (if (if g$ls/false$10303$5uPkq
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$10304$5uPkq)
                               (if (g$for-all$5757$5uPkq
                                     g$valid-option?$10301$5uPkq
                                     g$opt*$10304$5uPkq)
                                 (begin
                                   '#f
                                   (g$file-options-spec$7292$5uPkq
                                     (g$map$5759$5uPkq
                                       g$id->sym$8019$5uPkq
                                       g$opt*$10304$5uPkq)))
                                 '#f)))
                            g$ls/false$10303$5uPkq))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$10305$5uPkq)
                         (g$bless$8259$5uPkq
                           (list
                             'quote
                             (g$file-options-spec$7292$5uPkq
                               (g$map$5759$5uPkq
                                 g$id->sym$8019$5uPkq
                                 g$opt*$10305$5uPkq))))))
                      g$ls/false$10303$5uPkq)
                    (g$syntax-violation$8407$5uPkq
                      '#f
                      '"invalid syntax"
                      g$t$10302$5uPkq))))
               (g$syntax-dispatch$8296$5uPkq g$t$10302$5uPkq '(_ . each-any)))))
           g$x$10300$5uPkq)))))
   (g$symbol-macro$8305$5uPkq
     g$symbol-macro$11796$5uPkq
     (case-lambda
       ((g$x$10307$5uPkq g$set$10308$5uPkq)
        ((case-lambda
           ((g$t$10309$5uPkq)
            ((case-lambda
               ((g$ls/false$10310$5uPkq)
                (if (if g$ls/false$10310$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10311$5uPkq)
                             (if (g$id?$8018$5uPkq g$name$10311$5uPkq)
                               (begin
                                 '#f
                                 (g$memq$5751$5uPkq
                                   (g$id->sym$8019$5uPkq g$name$10311$5uPkq)
                                   g$set$10308$5uPkq))
                               '#f)))
                          g$ls/false$10310$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10312$5uPkq)
                       (g$bless$8259$5uPkq (list 'quote g$name$10312$5uPkq))))
                    g$ls/false$10310$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$10309$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$10309$5uPkq '(_ any)))))
         g$x$10307$5uPkq))))
   (g$macro-transformer$8306$5uPkq
     g$macro-transformer$11797$5uPkq
     (case-lambda
       ((g$x$10313$5uPkq)
        (if (procedure? g$x$10313$5uPkq)
          g$x$10313$5uPkq
          (if (symbol? g$x$10313$5uPkq)
            ((case-lambda
               ((g$t$10314$5uPkq)
                (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(define-record-type))
                  g$define-record-type-macro$8290$5uPkq
                  (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(define-struct))
                    g$define-struct-macro$8289$5uPkq
                    (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(include))
                      g$include-macro$8284$5uPkq
                      (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(cond))
                        g$cond-macro$8282$5uPkq
                        (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(let))
                          g$let-macro$8262$5uPkq
                          (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(do))
                            g$do-macro$8278$5uPkq
                            (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(or))
                              g$or-macro$8280$5uPkq
                              (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(and))
                                g$and-macro$8281$5uPkq
                                (if (g$memv$5752$5uPkq g$t$10314$5uPkq '(let*))
                                  g$let*-macro$8279$5uPkq
                                  (if (g$memv$5752$5uPkq
                                        g$t$10314$5uPkq
                                        '(let-values))
                                    g$let-values-macro$8263$5uPkq
                                    (if (g$memv$5752$5uPkq
                                          g$t$10314$5uPkq
                                          '(let*-values))
                                      g$let*-values-macro$8264$5uPkq
                                      (if (g$memv$5752$5uPkq
                                            g$t$10314$5uPkq
                                            '(syntax-rules))
                                        g$syntax-rules-macro$8286$5uPkq
                                        (if (g$memv$5752$5uPkq
                                              g$t$10314$5uPkq
                                              '(quasiquote))
                                          g$quasiquote-macro$8287$5uPkq
                                          (if (g$memv$5752$5uPkq
                                                g$t$10314$5uPkq
                                                '(quasisyntax))
                                            g$quasisyntax-macro$8288$5uPkq
                                            (if (g$memv$5752$5uPkq
                                                  g$t$10314$5uPkq
                                                  '(with-syntax))
                                              g$with-syntax-macro$8260$5uPkq
                                              (if (g$memv$5752$5uPkq
                                                    g$t$10314$5uPkq
                                                    '(when))
                                                g$when-macro$8252$5uPkq
                                                (if (g$memv$5752$5uPkq
                                                      g$t$10314$5uPkq
                                                      '(unless))
                                                  g$unless-macro$8253$5uPkq
                                                  (if (g$memv$5752$5uPkq
                                                        g$t$10314$5uPkq
                                                        '(case))
                                                    g$case-macro$8255$5uPkq
                                                    (if (g$memv$5752$5uPkq
                                                          g$t$10314$5uPkq
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$8277$5uPkq
                                                      (if (g$memv$5752$5uPkq
                                                            g$t$10314$5uPkq
                                                            '(time))
                                                        g$time-macro$8273$5uPkq
                                                        (if (g$memv$5752$5uPkq
                                                              g$t$10314$5uPkq
                                                              '(delay))
                                                          g$delay-macro$8274$5uPkq
                                                          (if (g$memv$5752$5uPkq
                                                                g$t$10314$5uPkq
                                                                '(assert))
                                                            g$assert-macro$8275$5uPkq
                                                            (if (g$memv$5752$5uPkq
                                                                  g$t$10314$5uPkq
                                                                  '(endianness))
                                                              g$endianness-macro$8276$5uPkq
                                                              (if (g$memv$5752$5uPkq
                                                                    g$t$10314$5uPkq
                                                                    '(guard))
                                                                g$guard-macro$8271$5uPkq
                                                                (if (g$memv$5752$5uPkq
                                                                      g$t$10314$5uPkq
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$8272$5uPkq
                                                                  (if (g$memv$5752$5uPkq
                                                                        g$t$10314$5uPkq
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$8265$5uPkq
                                                                    (if (g$memv$5752$5uPkq
                                                                          g$t$10314$5uPkq
                                                                          '(trace-define))
                                                                      g$trace-define-macro$8266$5uPkq
                                                                      (if (g$memv$5752$5uPkq
                                                                            g$t$10314$5uPkq
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$8267$5uPkq
                                                                        (if (g$memv$5752$5uPkq
                                                                              g$t$10314$5uPkq
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$8269$5uPkq
                                                                          (if (g$memv$5752$5uPkq
                                                                                g$t$10314$5uPkq
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$8270$5uPkq
                                                                            (if (g$memv$5752$5uPkq
                                                                                  g$t$10314$5uPkq
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$8291$5uPkq
                                                                              (if (g$memv$5752$5uPkq
                                                                                    g$t$10314$5uPkq
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$8293$5uPkq
                                                                                (if (g$memv$5752$5uPkq
                                                                                      g$t$10314$5uPkq
                                                                                      '(include-into))
                                                                                  g$include-into-macro$8285$5uPkq
                                                                                  (if (g$memv$5752$5uPkq
                                                                                        g$t$10314$5uPkq
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$10315$5uPkq)
                                                                                       (g$symbol-macro$8305$5uPkq
                                                                                         g$x$10315$5uPkq
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$5752$5uPkq
                                                                                          g$t$10314$5uPkq
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$10316$5uPkq)
                                                                                         (g$symbol-macro$8305$5uPkq
                                                                                           g$x$10316$5uPkq
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$5752$5uPkq
                                                                                            g$t$10314$5uPkq
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$10317$5uPkq)
                                                                                           (g$symbol-macro$8305$5uPkq
                                                                                             g$x$10317$5uPkq
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$5752$5uPkq
                                                                                              g$t$10314$5uPkq
                                                                                              '(file-options))
                                                                                          g$file-options-macro$8304$5uPkq
                                                                                          (if (g$memv$5752$5uPkq
                                                                                                g$t$10314$5uPkq
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$8292$5uPkq
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$10313$5uPkq)))))))))))))))))))))))))))))))))))))))))
             g$x$10313$5uPkq)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10313$5uPkq))))))
   (g$local-macro-transformer$8307$5uPkq
     g$local-macro-transformer$11798$5uPkq
     (case-lambda ((g$x$10318$5uPkq) (car g$x$10318$5uPkq))))
   (g$do-macro-call$8308$5uPkq
     g$do-macro-call$11799$5uPkq
     (case-lambda
       ((g$transformer$10319$5uPkq g$expr$10320$5uPkq)
        ((case-lambda
           ((g$out$10321$5uPkq)
            (begin
              ((letrec ((g$f$10322$5uPkq
                          (case-lambda
                            ((g$x$10323$5uPkq)
                             (if (not (g$stx?$7990$5uPkq g$x$10323$5uPkq))
                               (if (pair? g$x$10323$5uPkq)
                                 (begin
                                   (g$f$10322$5uPkq (car g$x$10323$5uPkq))
                                   (g$f$10322$5uPkq (cdr g$x$10323$5uPkq)))
                                 (if (vector? g$x$10323$5uPkq)
                                   (vector-for-each
                                     g$f$10322$5uPkq
                                     g$x$10323$5uPkq)
                                   (if (symbol? g$x$10323$5uPkq)
                                     (g$syntax-violation$8407$5uPkq
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$10320$5uPkq
                                       g$x$10323$5uPkq)
                                     (void))))
                               (void))))))
                 g$f$10322$5uPkq)
               g$out$10321$5uPkq)
              (g$add-mark$8007$5uPkq
                (g$gen-mark$8002$5uPkq)
                g$out$10321$5uPkq
                g$expr$10320$5uPkq))))
         (g$transformer$10319$5uPkq
           (g$add-mark$8007$5uPkq
             g$anti-mark$8003$5uPkq
             g$expr$10320$5uPkq
             '#f))))))
   (g$chi-macro$8309$5uPkq
     g$chi-macro$11800$5uPkq
     (case-lambda
       ((g$p$10324$5uPkq g$e$10325$5uPkq)
        (g$do-macro-call$8308$5uPkq
          (g$macro-transformer$8306$5uPkq g$p$10324$5uPkq)
          g$e$10325$5uPkq))))
   (g$chi-local-macro$8310$5uPkq
     g$chi-local-macro$11801$5uPkq
     (case-lambda
       ((g$p$10326$5uPkq g$e$10327$5uPkq)
        (g$do-macro-call$8308$5uPkq
          (g$local-macro-transformer$8307$5uPkq g$p$10326$5uPkq)
          g$e$10327$5uPkq))))
   (g$chi-global-macro$8311$5uPkq
     g$chi-global-macro$11802$5uPkq
     (case-lambda
       ((g$p$10328$5uPkq g$e$10329$5uPkq)
        ((case-lambda
           ((g$lib$10330$5uPkq g$loc$10331$5uPkq)
            (begin
              (g$visit-library$7829$5uPkq g$lib$10330$5uPkq)
              ((case-lambda
                 ((g$x$10332$5uPkq)
                  ((case-lambda
                     ((g$transformer$10333$5uPkq)
                      (g$do-macro-call$8308$5uPkq
                        g$transformer$10333$5uPkq
                        g$e$10329$5uPkq)))
                   (if (procedure? g$x$10332$5uPkq)
                     g$x$10332$5uPkq
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10332$5uPkq)))))
               (symbol-value g$loc$10331$5uPkq)))))
         (car g$p$10328$5uPkq)
         (cdr g$p$10328$5uPkq)))))
   (g$chi-expr*$8312$5uPkq
     g$chi-expr*$11803$5uPkq
     (case-lambda
       ((g$e*$10334$5uPkq g$r$10335$5uPkq g$mr$10336$5uPkq)
        (if (null? g$e*$10334$5uPkq)
          '()
          ((case-lambda
             ((g$e$10337$5uPkq)
              (cons
                g$e$10337$5uPkq
                (g$chi-expr*$8312$5uPkq
                  (cdr g$e*$10334$5uPkq)
                  g$r$10335$5uPkq
                  g$mr$10336$5uPkq))))
           (g$chi-expr$8314$5uPkq
             (car g$e*$10334$5uPkq)
             g$r$10335$5uPkq
             g$mr$10336$5uPkq))))))
   (g$chi-application$8313$5uPkq
     g$chi-application$11804$5uPkq
     (case-lambda
       ((g$e$10338$5uPkq g$r$10339$5uPkq g$mr$10340$5uPkq)
        ((case-lambda
           ((g$t$10341$5uPkq)
            ((case-lambda
               ((g$ls/false$10342$5uPkq)
                (if g$ls/false$10342$5uPkq
                  (apply
                    (case-lambda
                      ((g$rator$10343$5uPkq g$rands$10344$5uPkq)
                       ((case-lambda
                          ((g$rator$10345$5uPkq)
                           (cons
                             g$rator$10345$5uPkq
                             (g$chi-expr*$8312$5uPkq
                               g$rands$10344$5uPkq
                               g$r$10339$5uPkq
                               g$mr$10340$5uPkq))))
                        (g$chi-expr$8314$5uPkq
                          g$rator$10343$5uPkq
                          g$r$10339$5uPkq
                          g$mr$10340$5uPkq))))
                    g$ls/false$10342$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$10341$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$10341$5uPkq '(any . each-any)))))
         g$e$10338$5uPkq))))
   (g$chi-expr$8314$5uPkq
     g$chi-expr$11805$5uPkq
     (case-lambda
       ((g$e$10346$5uPkq g$r$10347$5uPkq g$mr$10348$5uPkq)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$8038$5uPkq g$e$10346$5uPkq g$r$10347$5uPkq)))
          (case-lambda
            ((g$type$10352$5uPkq g$value$10353$5uPkq g$kwd$10354$5uPkq)
             ((case-lambda
                ((g$kwd$10355$5uPkq g$value$10356$5uPkq g$type$10357$5uPkq)
                 ((case-lambda
                    ((g$t$10358$5uPkq)
                     (if (g$memv$5752$5uPkq g$t$10358$5uPkq '(core-macro))
                       ((case-lambda
                          ((g$transformer$10359$5uPkq)
                           (g$transformer$10359$5uPkq
                             g$e$10346$5uPkq
                             g$r$10347$5uPkq
                             g$mr$10348$5uPkq)))
                        (g$core-macro-transformer$8303$5uPkq
                          g$value$10356$5uPkq))
                       (if (g$memv$5752$5uPkq g$t$10358$5uPkq '(global))
                         ((case-lambda
                            ((g$lib$10360$5uPkq)
                             ((case-lambda
                                ((g$loc$10361$5uPkq)
                                 (begin
                                   ((g$inv-collector$8348$5uPkq)
                                    g$lib$10360$5uPkq)
                                   g$loc$10361$5uPkq)))
                              (cdr g$value$10356$5uPkq))))
                          (car g$value$10356$5uPkq))
                         (if (g$memv$5752$5uPkq g$t$10358$5uPkq '(core-prim))
                           ((case-lambda
                              ((g$name$10362$5uPkq)
                               (list 'primitive g$name$10362$5uPkq)))
                            g$value$10356$5uPkq)
                           (if (g$memv$5752$5uPkq g$t$10358$5uPkq '(call))
                             (g$chi-application$8313$5uPkq
                               g$e$10346$5uPkq
                               g$r$10347$5uPkq
                               g$mr$10348$5uPkq)
                             (if (g$memv$5752$5uPkq g$t$10358$5uPkq '(lexical))
                               ((case-lambda
                                  ((g$lex$10363$5uPkq) g$lex$10363$5uPkq))
                                (g$lexical-var$8240$5uPkq g$value$10356$5uPkq))
                               (if (g$memv$5752$5uPkq
                                     g$t$10358$5uPkq
                                     '(global-macro global-macro!))
                                 (g$chi-expr$8314$5uPkq
                                   (g$chi-global-macro$8311$5uPkq
                                     g$value$10356$5uPkq
                                     g$e$10346$5uPkq)
                                   g$r$10347$5uPkq
                                   g$mr$10348$5uPkq)
                                 (if (g$memv$5752$5uPkq
                                       g$t$10358$5uPkq
                                       '(local-macro local-macro!))
                                   (g$chi-expr$8314$5uPkq
                                     (g$chi-local-macro$8310$5uPkq
                                       g$value$10356$5uPkq
                                       g$e$10346$5uPkq)
                                     g$r$10347$5uPkq
                                     g$mr$10348$5uPkq)
                                   (if (g$memv$5752$5uPkq
                                         g$t$10358$5uPkq
                                         '(macro macro!))
                                     (g$chi-expr$8314$5uPkq
                                       (g$chi-macro$8309$5uPkq
                                         g$value$10356$5uPkq
                                         g$e$10346$5uPkq)
                                       g$r$10347$5uPkq
                                       g$mr$10348$5uPkq)
                                     (if (g$memv$5752$5uPkq
                                           g$t$10358$5uPkq
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$10364$5uPkq)
                                           (list 'quote g$datum$10364$5uPkq)))
                                        g$value$10356$5uPkq)
                                       (if (g$memv$5752$5uPkq
                                             g$t$10358$5uPkq
                                             '(set!))
                                         (g$chi-set!$8315$5uPkq
                                           g$e$10346$5uPkq
                                           g$r$10347$5uPkq
                                           g$mr$10348$5uPkq)
                                         (if (g$memv$5752$5uPkq
                                               g$t$10358$5uPkq
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$10365$5uPkq)
                                               ((case-lambda
                                                  ((g$ls/false$10366$5uPkq)
                                                   (if g$ls/false$10366$5uPkq
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10367$5uPkq
                                                            g$x*$10368$5uPkq)
                                                          (g$build-sequence$7947$5uPkq
                                                            '#f
                                                            (g$chi-expr*$8312$5uPkq
                                                              (cons
                                                                g$x$10367$5uPkq
                                                                g$x*$10368$5uPkq)
                                                              g$r$10347$5uPkq
                                                              g$mr$10348$5uPkq))))
                                                       g$ls/false$10366$5uPkq)
                                                     (g$syntax-violation$8407$5uPkq
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10365$5uPkq))))
                                                (g$syntax-dispatch$8296$5uPkq
                                                  g$t$10365$5uPkq
                                                  '(_ any . each-any)))))
                                            g$e$10346$5uPkq)
                                           (if (g$memv$5752$5uPkq
                                                 g$t$10358$5uPkq
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10369$5uPkq)
                                                 ((case-lambda
                                                    ((g$ls/false$10370$5uPkq)
                                                     (if (if g$ls/false$10370$5uPkq
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10371$5uPkq
                                                                    g$xrhs*$10372$5uPkq
                                                                    g$xbody$10373$5uPkq
                                                                    g$xbody*$10374$5uPkq)
                                                                  (if (not (g$valid-bound-ids?$8023$5uPkq
                                                                             g$xlhs*$10371$5uPkq))
                                                                    (g$syntax-violation$8407$5uPkq
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10346$5uPkq)
                                                                    (void))))
                                                               g$ls/false$10370$5uPkq))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10375$5uPkq
                                                              g$xrhs*$10376$5uPkq
                                                              g$xbody$10377$5uPkq
                                                              g$xbody*$10378$5uPkq)
                                                            ((case-lambda
                                                               ((g$xlab*$10379$5uPkq)
                                                                ((case-lambda
                                                                   ((g$xrib$10380$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$xb*$10381$5uPkq)
                                                                        (g$build-sequence$7947$5uPkq
                                                                          '#f
                                                                          (g$chi-expr*$8312$5uPkq
                                                                            (g$map$5759$5uPkq
                                                                              (case-lambda
                                                                                ((g$x$10382$5uPkq)
                                                                                 (g$add-subst$8008$5uPkq
                                                                                   g$xrib$10380$5uPkq
                                                                                   g$x$10382$5uPkq)))
                                                                              (cons
                                                                                g$xbody$10377$5uPkq
                                                                                g$xbody*$10378$5uPkq))
                                                                            (append
                                                                              (g$map$5759$5uPkq
                                                                                cons
                                                                                g$xlab*$10379$5uPkq
                                                                                g$xb*$10381$5uPkq)
                                                                              g$r$10347$5uPkq)
                                                                            (append
                                                                              (g$map$5759$5uPkq
                                                                                cons
                                                                                g$xlab*$10379$5uPkq
                                                                                g$xb*$10381$5uPkq)
                                                                              g$mr$10348$5uPkq)))))
                                                                     (g$map$5759$5uPkq
                                                                       (case-lambda
                                                                         ((g$x$10383$5uPkq)
                                                                          (g$make-eval-transformer$8050$5uPkq
                                                                            (g$expand-transformer$8341$5uPkq
                                                                              (if (eq? g$type$10357$5uPkq
                                                                                       'let-syntax)
                                                                                g$x$10383$5uPkq
                                                                                (g$add-subst$8008$5uPkq
                                                                                  g$xrib$10380$5uPkq
                                                                                  g$x$10383$5uPkq))
                                                                              g$mr$10348$5uPkq))))
                                                                       g$xrhs*$10376$5uPkq))))
                                                                 (g$make-full-rib$7986$5uPkq
                                                                   g$xlhs*$10375$5uPkq
                                                                   g$xlab*$10379$5uPkq))))
                                                             (g$map$5759$5uPkq
                                                               g$gen-label$7959$5uPkq
                                                               g$xlhs*$10375$5uPkq))))
                                                         g$ls/false$10370$5uPkq)
                                                       (g$syntax-violation$8407$5uPkq
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10369$5uPkq))))
                                                  (g$syntax-dispatch$8296$5uPkq
                                                    g$t$10369$5uPkq
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10346$5uPkq)
                                             (if (g$memv$5752$5uPkq
                                                   g$t$10358$5uPkq
                                                   '(displaced-lexical))
                                               (g$syntax-violation$8407$5uPkq
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10346$5uPkq)
                                               (if (g$memv$5752$5uPkq
                                                     g$t$10358$5uPkq
                                                     '(syntax))
                                                 (g$syntax-violation$8407$5uPkq
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10346$5uPkq)
                                                 (if (g$memv$5752$5uPkq
                                                       g$t$10358$5uPkq
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8407$5uPkq
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10384$5uPkq)
                                                           (if (g$memv$5752$5uPkq
                                                                 g$t$10384$5uPkq
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$5752$5uPkq
                                                                   g$t$10384$5uPkq
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$5752$5uPkq
                                                                     g$t$10384$5uPkq
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$5752$5uPkq
                                                                       g$t$10384$5uPkq
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$5752$5uPkq
                                                                         g$t$10384$5uPkq
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$5752$5uPkq
                                                                           g$t$10384$5uPkq
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$10357$5uPkq)
                                                       '" was found where an expression was expected")
                                                     g$e$10346$5uPkq)
                                                   (if (g$memv$5752$5uPkq
                                                         g$t$10358$5uPkq
                                                         '(mutable))
                                                     (g$syntax-violation$8407$5uPkq
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10346$5uPkq)
                                                     (g$syntax-violation$8407$5uPkq
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10346$5uPkq)))))))))))))))))))
                  g$type$10357$5uPkq)))
              g$kwd$10354$5uPkq
              g$value$10353$5uPkq
              g$type$10352$5uPkq)))))))
   (g$chi-set!$8315$5uPkq
     g$chi-set!$11806$5uPkq
     (case-lambda
       ((g$e$10385$5uPkq g$r$10386$5uPkq g$mr$10387$5uPkq)
        ((case-lambda
           ((g$t$10388$5uPkq)
            ((case-lambda
               ((g$ls/false$10389$5uPkq)
                (if (if g$ls/false$10389$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10390$5uPkq g$v$10391$5uPkq)
                             (g$id?$8018$5uPkq g$x$10390$5uPkq)))
                          g$ls/false$10389$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10392$5uPkq g$v$10393$5uPkq)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$8038$5uPkq
                              g$x$10392$5uPkq
                              g$r$10386$5uPkq)))
                         (case-lambda
                           ((g$type$10397$5uPkq
                              g$value$10398$5uPkq
                              g$kwd$10399$5uPkq)
                            ((case-lambda
                               ((g$kwd$10400$5uPkq
                                  g$value$10401$5uPkq
                                  g$type$10402$5uPkq)
                                ((case-lambda
                                   ((g$t$10403$5uPkq)
                                    (if (g$memv$5752$5uPkq
                                          g$t$10403$5uPkq
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$8242$5uPkq
                                          g$value$10401$5uPkq
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$8240$5uPkq
                                            g$value$10401$5uPkq)
                                          (g$chi-expr$8314$5uPkq
                                            g$v$10393$5uPkq
                                            g$r$10386$5uPkq
                                            g$mr$10387$5uPkq)))
                                      (if (g$memv$5752$5uPkq
                                            g$t$10403$5uPkq
                                            '(core-prim))
                                        (g$syntax-violation$8407$5uPkq
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10385$5uPkq)
                                        (if (g$memv$5752$5uPkq
                                              g$t$10403$5uPkq
                                              '(global))
                                          (g$syntax-violation$8407$5uPkq
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10385$5uPkq)
                                          (if (g$memv$5752$5uPkq
                                                g$t$10403$5uPkq
                                                '(global-macro!))
                                            (g$chi-expr$8314$5uPkq
                                              (g$chi-global-macro$8311$5uPkq
                                                g$value$10401$5uPkq
                                                g$e$10385$5uPkq)
                                              g$r$10386$5uPkq
                                              g$mr$10387$5uPkq)
                                            (if (g$memv$5752$5uPkq
                                                  g$t$10403$5uPkq
                                                  '(local-macro!))
                                              (g$chi-expr$8314$5uPkq
                                                (g$chi-local-macro$8310$5uPkq
                                                  g$value$10401$5uPkq
                                                  g$e$10385$5uPkq)
                                                g$r$10386$5uPkq
                                                g$mr$10387$5uPkq)
                                              (if (g$memv$5752$5uPkq
                                                    g$t$10403$5uPkq
                                                    '(mutable))
                                                (g$syntax-violation$8407$5uPkq
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10385$5uPkq)
                                                (g$syntax-violation$8407$5uPkq
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10385$5uPkq)))))))))
                                 g$type$10402$5uPkq)))
                             g$kwd$10399$5uPkq
                             g$value$10398$5uPkq
                             g$type$10397$5uPkq))))))
                    g$ls/false$10389$5uPkq)
                  (g$syntax-violation$8407$5uPkq
                    '#f
                    '"invalid syntax"
                    g$t$10388$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$10388$5uPkq '(_ any any)))))
         g$e$10385$5uPkq))))
   (g$verify-formals$8316$5uPkq
     g$verify-formals$11807$5uPkq
     (case-lambda
       ((g$fmls$10404$5uPkq g$stx$10405$5uPkq)
        ((case-lambda
           ((g$t$10406$5uPkq)
            ((case-lambda
               ((g$ls/false$10407$5uPkq)
                (if g$ls/false$10407$5uPkq
                  (apply
                    (case-lambda
                      ((g$x*$10408$5uPkq)
                       (if (not (g$valid-bound-ids?$8023$5uPkq
                                  g$x*$10408$5uPkq))
                         (g$invalid-fmls-error$8261$5uPkq
                           g$stx$10405$5uPkq
                           g$fmls$10404$5uPkq)
                         (void))))
                    g$ls/false$10407$5uPkq)
                  ((case-lambda
                     ((g$t$10409$5uPkq)
                      ((case-lambda
                         ((g$ls/false$10410$5uPkq)
                          (if g$ls/false$10410$5uPkq
                            (apply
                              (case-lambda
                                ((g$x*$10411$5uPkq g$x$10412$5uPkq)
                                 (if (not (g$valid-bound-ids?$8023$5uPkq
                                            (cons
                                              g$x$10412$5uPkq
                                              g$x*$10411$5uPkq)))
                                   (g$invalid-fmls-error$8261$5uPkq
                                     g$stx$10405$5uPkq
                                     g$fmls$10404$5uPkq)
                                   (void))))
                              g$ls/false$10410$5uPkq)
                            ((case-lambda
                               ((g$t$10413$5uPkq)
                                ((case-lambda
                                   ((g$ls/false$10414$5uPkq)
                                    (if g$ls/false$10414$5uPkq
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10405$5uPkq)))
                                        g$ls/false$10414$5uPkq)
                                      (g$syntax-violation$8407$5uPkq
                                        '#f
                                        '"invalid syntax"
                                        g$t$10413$5uPkq))))
                                 (g$syntax-dispatch$8296$5uPkq
                                   g$t$10413$5uPkq
                                   '_))))
                             g$t$10409$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$10409$5uPkq
                         '#(each+ any () any)))))
                   g$t$10406$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$10406$5uPkq 'each-any))))
         g$fmls$10404$5uPkq))))
   (g$chi-lambda-clause$8317$5uPkq
     g$chi-lambda-clause$11808$5uPkq
     (case-lambda
       ((g$stx$10415$5uPkq
          g$fmls$10416$5uPkq
          g$body*$10417$5uPkq
          g$r$10418$5uPkq
          g$mr$10419$5uPkq)
        ((case-lambda
           ((g$t$10420$5uPkq)
            ((case-lambda
               ((g$ls/false$10421$5uPkq)
                (if g$ls/false$10421$5uPkq
                  (apply
                    (case-lambda
                      ((g$x*$10422$5uPkq)
                       (begin
                         (g$verify-formals$8316$5uPkq
                           g$fmls$10416$5uPkq
                           g$stx$10415$5uPkq)
                         ((case-lambda
                            ((g$lex*$10423$5uPkq g$lab*$10424$5uPkq)
                             (values
                               g$lex*$10423$5uPkq
                               (g$chi-internal$8325$5uPkq
                                 (g$add-subst$8008$5uPkq
                                   (g$make-full-rib$7986$5uPkq
                                     g$x*$10422$5uPkq
                                     g$lab*$10424$5uPkq)
                                   g$body*$10417$5uPkq)
                                 (g$add-lexicals$8244$5uPkq
                                   g$lab*$10424$5uPkq
                                   g$lex*$10423$5uPkq
                                   g$r$10418$5uPkq)
                                 g$mr$10419$5uPkq))))
                          (g$map$5759$5uPkq
                            g$gen-lexical$7957$5uPkq
                            g$x*$10422$5uPkq)
                          (g$map$5759$5uPkq
                            g$gen-label$7959$5uPkq
                            g$x*$10422$5uPkq)))))
                    g$ls/false$10421$5uPkq)
                  ((case-lambda
                     ((g$t$10425$5uPkq)
                      ((case-lambda
                         ((g$ls/false$10426$5uPkq)
                          (if g$ls/false$10426$5uPkq
                            (apply
                              (case-lambda
                                ((g$x*$10427$5uPkq g$x$10428$5uPkq)
                                 (begin
                                   (g$verify-formals$8316$5uPkq
                                     g$fmls$10416$5uPkq
                                     g$stx$10415$5uPkq)
                                   ((case-lambda
                                      ((g$lex*$10429$5uPkq
                                         g$lab*$10430$5uPkq
                                         g$lex$10431$5uPkq
                                         g$lab$10432$5uPkq)
                                       (values
                                         (append
                                           g$lex*$10429$5uPkq
                                           g$lex$10431$5uPkq)
                                         (g$chi-internal$8325$5uPkq
                                           (g$add-subst$8008$5uPkq
                                             (g$make-full-rib$7986$5uPkq
                                               (cons
                                                 g$x$10428$5uPkq
                                                 g$x*$10427$5uPkq)
                                               (cons
                                                 g$lab$10432$5uPkq
                                                 g$lab*$10430$5uPkq))
                                             g$body*$10417$5uPkq)
                                           (g$add-lexicals$8244$5uPkq
                                             (cons
                                               g$lab$10432$5uPkq
                                               g$lab*$10430$5uPkq)
                                             (cons
                                               g$lex$10431$5uPkq
                                               g$lex*$10429$5uPkq)
                                             g$r$10418$5uPkq)
                                           g$mr$10419$5uPkq))))
                                    (g$map$5759$5uPkq
                                      g$gen-lexical$7957$5uPkq
                                      g$x*$10427$5uPkq)
                                    (g$map$5759$5uPkq
                                      g$gen-label$7959$5uPkq
                                      g$x*$10427$5uPkq)
                                    (g$gen-lexical$7957$5uPkq g$x$10428$5uPkq)
                                    (g$gen-label$7959$5uPkq g$x$10428$5uPkq)))))
                              g$ls/false$10426$5uPkq)
                            ((case-lambda
                               ((g$t$10433$5uPkq)
                                ((case-lambda
                                   ((g$ls/false$10434$5uPkq)
                                    (if g$ls/false$10434$5uPkq
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8407$5uPkq
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10416$5uPkq)))
                                        g$ls/false$10434$5uPkq)
                                      (g$syntax-violation$8407$5uPkq
                                        '#f
                                        '"invalid syntax"
                                        g$t$10433$5uPkq))))
                                 (g$syntax-dispatch$8296$5uPkq
                                   g$t$10433$5uPkq
                                   '_))))
                             g$t$10425$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$10425$5uPkq
                         '#(each+ any () any)))))
                   g$t$10420$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$10420$5uPkq 'each-any))))
         g$fmls$10416$5uPkq))))
   (g$chi-lambda-clause*$8318$5uPkq
     g$chi-lambda-clause*$11809$5uPkq
     (case-lambda
       ((g$stx$10435$5uPkq
          g$fmls*$10436$5uPkq
          g$body**$10437$5uPkq
          g$r$10438$5uPkq
          g$mr$10439$5uPkq)
        (if (null? g$fmls*$10436$5uPkq)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8317$5uPkq
                 g$stx$10435$5uPkq
                 (car g$fmls*$10436$5uPkq)
                 (car g$body**$10437$5uPkq)
                 g$r$10438$5uPkq
                 g$mr$10439$5uPkq)))
            (case-lambda
              ((g$a$10442$5uPkq g$b$10443$5uPkq)
               ((case-lambda
                  ((g$b$10444$5uPkq g$a$10445$5uPkq)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8318$5uPkq
                          g$stx$10435$5uPkq
                          (cdr g$fmls*$10436$5uPkq)
                          (cdr g$body**$10437$5uPkq)
                          g$r$10438$5uPkq
                          g$mr$10439$5uPkq)))
                     (case-lambda
                       ((g$a*$10448$5uPkq g$b*$10449$5uPkq)
                        ((case-lambda
                           ((g$b*$10450$5uPkq g$a*$10451$5uPkq)
                            (values
                              (cons g$a$10445$5uPkq g$a*$10451$5uPkq)
                              (cons g$b$10444$5uPkq g$b*$10450$5uPkq))))
                         g$b*$10449$5uPkq
                         g$a*$10448$5uPkq))))))
                g$b$10443$5uPkq
                g$a$10442$5uPkq))))))))
   (g$chi-defun$8319$5uPkq
     g$chi-defun$11810$5uPkq
     (case-lambda
       ((g$x$10452$5uPkq g$r$10453$5uPkq g$mr$10454$5uPkq)
        ((case-lambda
           ((g$fmls$10455$5uPkq g$body*$10456$5uPkq)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8317$5uPkq
                   g$fmls$10455$5uPkq
                   g$fmls$10455$5uPkq
                   g$body*$10456$5uPkq
                   g$r$10453$5uPkq
                   g$mr$10454$5uPkq)))
              (case-lambda
                ((g$fmls$10459$5uPkq g$body$10460$5uPkq)
                 ((case-lambda
                    ((g$body$10461$5uPkq g$fmls$10462$5uPkq)
                     (g$build-lambda$7944$5uPkq
                       '#f
                       g$fmls$10462$5uPkq
                       g$body$10461$5uPkq)))
                  g$body$10460$5uPkq
                  g$fmls$10459$5uPkq))))))
         (car g$x$10452$5uPkq)
         (cdr g$x$10452$5uPkq)))))
   (g$chi-rhs$8320$5uPkq
     g$chi-rhs$11811$5uPkq
     (case-lambda
       ((g$rhs$10463$5uPkq g$r$10464$5uPkq g$mr$10465$5uPkq)
        ((case-lambda
           ((g$t$10466$5uPkq)
            (if (g$memv$5752$5uPkq g$t$10466$5uPkq '(defun))
              (g$chi-defun$8319$5uPkq
                (cdr g$rhs$10463$5uPkq)
                g$r$10464$5uPkq
                g$mr$10465$5uPkq)
              (if (g$memv$5752$5uPkq g$t$10466$5uPkq '(expr))
                ((case-lambda
                   ((g$expr$10467$5uPkq)
                    (g$chi-expr$8314$5uPkq
                      g$expr$10467$5uPkq
                      g$r$10464$5uPkq
                      g$mr$10465$5uPkq)))
                 (cdr g$rhs$10463$5uPkq))
                (if (g$memv$5752$5uPkq g$t$10466$5uPkq '(top-expr))
                  ((case-lambda
                     ((g$expr$10468$5uPkq)
                      (g$build-sequence$7947$5uPkq
                        '#f
                        (list
                          (g$chi-expr$8314$5uPkq
                            g$expr$10468$5uPkq
                            g$r$10464$5uPkq
                            g$mr$10465$5uPkq)
                          (g$build-void$7948$5uPkq)))))
                   (cdr g$rhs$10463$5uPkq))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10463$5uPkq))))))
         (car g$rhs$10463$5uPkq)))))
   (g$expand-interaction-rhs*/init*$8321$5uPkq
     g$expand-interaction-rhs*/init*$11812$5uPkq
     (case-lambda
       ((g$lhs*$10469$5uPkq
          g$rhs*$10470$5uPkq
          g$init*$10471$5uPkq
          g$r$10472$5uPkq
          g$mr$10473$5uPkq)
        ((letrec ((g$f$10474$5uPkq
                    (case-lambda
                      ((g$lhs*$10475$5uPkq g$rhs*$10476$5uPkq)
                       (if (null? g$lhs*$10475$5uPkq)
                         (g$map$5759$5uPkq
                           (case-lambda
                             ((g$x$10477$5uPkq)
                              (g$chi-expr$8314$5uPkq
                                g$x$10477$5uPkq
                                g$r$10472$5uPkq
                                g$mr$10473$5uPkq)))
                           g$init*$10471$5uPkq)
                         ((case-lambda
                            ((g$lhs$10478$5uPkq g$rhs$10479$5uPkq)
                             ((case-lambda
                                ((g$t$10480$5uPkq)
                                 (if (g$memv$5752$5uPkq
                                       g$t$10480$5uPkq
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$10481$5uPkq)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10478$5uPkq
                                           g$rhs$10481$5uPkq)
                                         (g$f$10474$5uPkq
                                           (cdr g$lhs*$10475$5uPkq)
                                           (cdr g$rhs*$10476$5uPkq)))))
                                    (g$chi-defun$8319$5uPkq
                                      (cdr g$rhs$10479$5uPkq)
                                      g$r$10472$5uPkq
                                      g$mr$10473$5uPkq))
                                   (if (g$memv$5752$5uPkq
                                         g$t$10480$5uPkq
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$10482$5uPkq)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10478$5uPkq
                                             g$rhs$10482$5uPkq)
                                           (g$f$10474$5uPkq
                                             (cdr g$lhs*$10475$5uPkq)
                                             (cdr g$rhs*$10476$5uPkq)))))
                                      (g$chi-expr$8314$5uPkq
                                        (cdr g$rhs$10479$5uPkq)
                                        g$r$10472$5uPkq
                                        g$mr$10473$5uPkq))
                                     (if (g$memv$5752$5uPkq
                                           g$t$10480$5uPkq
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$10483$5uPkq)
                                           (cons
                                             g$e$10483$5uPkq
                                             (g$f$10474$5uPkq
                                               (cdr g$lhs*$10475$5uPkq)
                                               (cdr g$rhs*$10476$5uPkq)))))
                                        (g$chi-expr$8314$5uPkq
                                          (cdr g$rhs$10479$5uPkq)
                                          g$r$10472$5uPkq
                                          g$mr$10473$5uPkq))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10479$5uPkq))))))
                              (car g$rhs$10479$5uPkq))))
                          (car g$lhs*$10475$5uPkq)
                          (car g$rhs*$10476$5uPkq)))))))
           g$f$10474$5uPkq)
         g$lhs*$10469$5uPkq
         g$rhs*$10470$5uPkq))))
   (g$chi-rhs*$8322$5uPkq
     g$chi-rhs*$11813$5uPkq
     (case-lambda
       ((g$rhs*$10484$5uPkq g$r$10485$5uPkq g$mr$10486$5uPkq)
        ((letrec ((g$f$10487$5uPkq
                    (case-lambda
                      ((g$ls$10488$5uPkq)
                       (if (null? g$ls$10488$5uPkq)
                         '()
                         ((case-lambda
                            ((g$a$10489$5uPkq)
                             (cons
                               g$a$10489$5uPkq
                               (g$f$10487$5uPkq (cdr g$ls$10488$5uPkq)))))
                          (g$chi-rhs$8320$5uPkq
                            (car g$ls$10488$5uPkq)
                            g$r$10485$5uPkq
                            g$mr$10486$5uPkq)))))))
           g$f$10487$5uPkq)
         g$rhs*$10484$5uPkq))))
   (g$find-bound=?$8323$5uPkq
     g$find-bound=?$11814$5uPkq
     (case-lambda
       ((g$x$10490$5uPkq g$lhs*$10491$5uPkq g$rhs*$10492$5uPkq)
        (if (null? g$lhs*$10491$5uPkq)
          '#f
          (if (g$bound-id=?$8021$5uPkq g$x$10490$5uPkq (car g$lhs*$10491$5uPkq))
            (car g$rhs*$10492$5uPkq)
            (g$find-bound=?$8323$5uPkq
              g$x$10490$5uPkq
              (cdr g$lhs*$10491$5uPkq)
              (cdr g$rhs*$10492$5uPkq)))))))
   (g$find-dups$8324$5uPkq
     g$find-dups$11815$5uPkq
     (case-lambda
       ((g$ls$10493$5uPkq)
        ((letrec ((g$f$10494$5uPkq
                    (case-lambda
                      ((g$ls$10495$5uPkq g$dups$10496$5uPkq)
                       (if (null? g$ls$10495$5uPkq)
                         g$dups$10496$5uPkq
                         ((case-lambda
                            ((g$t$10497$5uPkq)
                             (if g$t$10497$5uPkq
                               ((case-lambda
                                  ((g$x$10498$5uPkq)
                                   (g$f$10494$5uPkq
                                     (cdr g$ls$10495$5uPkq)
                                     (cons
                                       (list
                                         (car g$ls$10495$5uPkq)
                                         g$x$10498$5uPkq)
                                       g$dups$10496$5uPkq))))
                                g$t$10497$5uPkq)
                               (g$f$10494$5uPkq
                                 (cdr g$ls$10495$5uPkq)
                                 g$dups$10496$5uPkq))))
                          (g$find-bound=?$8323$5uPkq
                            (car g$ls$10495$5uPkq)
                            (cdr g$ls$10495$5uPkq)
                            (cdr g$ls$10495$5uPkq))))))))
           g$f$10494$5uPkq)
         g$ls$10493$5uPkq
         '()))))
   (g$chi-internal$8325$5uPkq
     g$chi-internal$11816$5uPkq
     (case-lambda
       ((g$e*$10499$5uPkq g$r$10500$5uPkq g$mr$10501$5uPkq)
        ((case-lambda
           ((g$rib$10502$5uPkq)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8340$5uPkq
                   (g$map$5759$5uPkq
                     (case-lambda
                       ((g$x$10511$5uPkq)
                        (g$add-subst$8008$5uPkq
                          g$rib$10502$5uPkq
                          g$x$10511$5uPkq)))
                     (g$syntax->list$8017$5uPkq g$e*$10499$5uPkq))
                   g$r$10500$5uPkq
                   g$mr$10501$5uPkq
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$10502$5uPkq
                   '#f)))
              (case-lambda
                ((g$e*$10512$5uPkq
                   g$r$10513$5uPkq
                   g$mr$10514$5uPkq
                   g$lex*$10515$5uPkq
                   g$rhs*$10516$5uPkq
                   g$mod**$10517$5uPkq
                   g$kwd*$10518$5uPkq
                   g$_exp*$10519$5uPkq)
                 ((case-lambda
                    ((g$_exp*$10520$5uPkq
                       g$kwd*$10521$5uPkq
                       g$mod**$10522$5uPkq
                       g$rhs*$10523$5uPkq
                       g$lex*$10524$5uPkq
                       g$mr$10525$5uPkq
                       g$r$10526$5uPkq
                       g$e*$10527$5uPkq)
                     (begin
                       (if (null? g$e*$10527$5uPkq)
                         (g$syntax-violation$8407$5uPkq
                           '#f
                           '"no expression in body"
                           g$e*$10527$5uPkq)
                         (void))
                       ((case-lambda
                          ((g$init*$10528$5uPkq)
                           ((case-lambda
                              ((g$rhs*$10529$5uPkq)
                               (g$build-letrec*$7950$5uPkq
                                 '#f
                                 (reverse g$lex*$10524$5uPkq)
                                 (reverse g$rhs*$10529$5uPkq)
                                 (g$build-sequence$7947$5uPkq
                                   '#f
                                   g$init*$10528$5uPkq))))
                            (g$chi-rhs*$8322$5uPkq
                              g$rhs*$10523$5uPkq
                              g$r$10526$5uPkq
                              g$mr$10525$5uPkq))))
                        (g$chi-expr*$8312$5uPkq
                          (append
                            (apply append (reverse g$mod**$10522$5uPkq))
                            g$e*$10527$5uPkq)
                          g$r$10526$5uPkq
                          g$mr$10525$5uPkq)))))
                  g$_exp*$10519$5uPkq
                  g$kwd*$10518$5uPkq
                  g$mod**$10517$5uPkq
                  g$rhs*$10516$5uPkq
                  g$lex*$10515$5uPkq
                  g$mr$10514$5uPkq
                  g$r$10513$5uPkq
                  g$e*$10512$5uPkq))))))
         (g$make-empty-rib$7978$5uPkq)))))
   (g$parse-module$8326$5uPkq
     g$parse-module$11817$5uPkq
     (case-lambda
       ((g$e$10530$5uPkq)
        ((case-lambda
           ((g$t$10531$5uPkq)
            ((case-lambda
               ((g$ls/false$10532$5uPkq)
                (if g$ls/false$10532$5uPkq
                  (apply
                    (case-lambda
                      ((g$export*$10533$5uPkq g$b*$10534$5uPkq)
                       (begin
                         (if (not (g$for-all$5757$5uPkq
                                    g$id?$8018$5uPkq
                                    g$export*$10533$5uPkq))
                           (g$syntax-violation$8407$5uPkq
                             '#f
                             '"module exports must be identifiers"
                             g$e$10530$5uPkq)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$10533$5uPkq)
                           g$b*$10534$5uPkq))))
                    g$ls/false$10532$5uPkq)
                  ((case-lambda
                     ((g$t$10535$5uPkq)
                      ((case-lambda
                         ((g$ls/false$10536$5uPkq)
                          (if g$ls/false$10536$5uPkq
                            (apply
                              (case-lambda
                                ((g$name$10537$5uPkq
                                   g$export*$10538$5uPkq
                                   g$b*$10539$5uPkq)
                                 (begin
                                   (if (not (g$id?$8018$5uPkq
                                              g$name$10537$5uPkq))
                                     (g$syntax-violation$8407$5uPkq
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10530$5uPkq)
                                     (void))
                                   (if (not (g$for-all$5757$5uPkq
                                              g$id?$8018$5uPkq
                                              g$export*$10538$5uPkq))
                                     (g$syntax-violation$8407$5uPkq
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10530$5uPkq)
                                     (void))
                                   (values
                                     g$name$10537$5uPkq
                                     (list->vector g$export*$10538$5uPkq)
                                     g$b*$10539$5uPkq))))
                              g$ls/false$10536$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$10535$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$10535$5uPkq
                         '(_ any each-any . each-any)))))
                   g$t$10531$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$10531$5uPkq
               '(_ each-any . each-any)))))
         g$e$10530$5uPkq))))
   (g$9435$8327$5uPkq
     g$9435$11818$5uPkq
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9438$5uPkq
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9437$8328$5uPkq g$9437$11819$5uPkq '#f)
   (g$9436$8329$5uPkq
     g$9436$11820$5uPkq
     (make-record-constructor-descriptor
       g$9435$8327$5uPkq
       '#f
       g$9437$8328$5uPkq))
   (g$module-interface?$8330$5uPkq
     g$module-interface?$11821$5uPkq
     (record-predicate g$9435$8327$5uPkq))
   (g$make-module-interface$8331$5uPkq
     g$make-module-interface$11822$5uPkq
     (record-constructor g$9436$8329$5uPkq))
   (g$module-interface-first-mark$8332$5uPkq
     g$module-interface-first-mark$11823$5uPkq
     (record-accessor g$9435$8327$5uPkq '0))
   (g$module-interface-exp-id-vec$8333$5uPkq
     g$module-interface-exp-id-vec$11824$5uPkq
     (record-accessor g$9435$8327$5uPkq '1))
   (g$module-interface-exp-lab-vec$8334$5uPkq
     g$module-interface-exp-lab-vec$11825$5uPkq
     (record-accessor g$9435$8327$5uPkq '2))
   (g$set-module-interface-first-mark!$8335$5uPkq
     g$set-module-interface-first-mark!$11826$5uPkq
     (record-mutator g$9435$8327$5uPkq '0))
   (g$set-module-interface-exp-id-vec!$8336$5uPkq
     g$set-module-interface-exp-id-vec!$11827$5uPkq
     (record-mutator g$9435$8327$5uPkq '1))
   (g$set-module-interface-exp-lab-vec!$8337$5uPkq
     g$set-module-interface-exp-lab-vec!$11828$5uPkq
     (record-mutator g$9435$8327$5uPkq '2))
   (g$module-interface-exp-id*$8338$5uPkq
     g$module-interface-exp-id*$11829$5uPkq
     (case-lambda
       ((g$iface$10540$5uPkq g$id$10541$5uPkq)
        (letrec* ((g$diff-marks$10542$5uPkq
                    (case-lambda
                      ((g$ls$10546$5uPkq g$x$10547$5uPkq)
                       (begin
                         (if (null? g$ls$10546$5uPkq)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10548$5uPkq)
                             (if (eq? g$a$10548$5uPkq g$x$10547$5uPkq)
                               '()
                               (cons
                                 g$a$10548$5uPkq
                                 (g$diff-marks$10542$5uPkq
                                   (cdr g$ls$10546$5uPkq)
                                   g$x$10547$5uPkq)))))
                          (car g$ls$10546$5uPkq)))))))
          ((case-lambda
             ((g$diff$10543$5uPkq g$id-vec$10544$5uPkq)
              (if (null? g$diff$10543$5uPkq)
                g$id-vec$10544$5uPkq
                (vector-map
                  (case-lambda
                    ((g$x$10545$5uPkq)
                     (g$make-stx$7991$5uPkq
                       (g$stx-expr$7992$5uPkq g$x$10545$5uPkq)
                       (append
                         g$diff$10543$5uPkq
                         (g$stx-mark*$7993$5uPkq g$x$10545$5uPkq))
                       '()
                       '())))
                  g$id-vec$10544$5uPkq))))
           (g$diff-marks$10542$5uPkq
             (g$stx-mark*$7993$5uPkq g$id$10541$5uPkq)
             (g$module-interface-first-mark$8332$5uPkq g$iface$10540$5uPkq))
           (g$module-interface-exp-id-vec$8333$5uPkq g$iface$10540$5uPkq))))))
   (g$chi-internal-module$8339$5uPkq
     g$chi-internal-module$11830$5uPkq
     (case-lambda
       ((g$e$10549$5uPkq
          g$r$10550$5uPkq
          g$mr$10551$5uPkq
          g$lex*$10552$5uPkq
          g$rhs*$10553$5uPkq
          g$mod**$10554$5uPkq
          g$kwd*$10555$5uPkq)
        (call-with-values
          (case-lambda (() (g$parse-module$8326$5uPkq g$e$10549$5uPkq)))
          (case-lambda
            ((g$name$10559$5uPkq g$exp-id*$10560$5uPkq g$e*$10561$5uPkq)
             ((case-lambda
                ((g$e*$10562$5uPkq g$exp-id*$10563$5uPkq g$name$10564$5uPkq)
                 ((case-lambda
                    ((g$rib$10565$5uPkq)
                     ((case-lambda
                        ((g$e*$10566$5uPkq)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$8340$5uPkq
                                g$e*$10566$5uPkq
                                g$r$10550$5uPkq
                                g$mr$10551$5uPkq
                                g$lex*$10552$5uPkq
                                g$rhs*$10553$5uPkq
                                g$mod**$10554$5uPkq
                                g$kwd*$10555$5uPkq
                                '()
                                g$rib$10565$5uPkq
                                '#f)))
                           (case-lambda
                             ((g$e*$10575$5uPkq
                                g$r$10576$5uPkq
                                g$mr$10577$5uPkq
                                g$lex*$10578$5uPkq
                                g$rhs*$10579$5uPkq
                                g$mod**$10580$5uPkq
                                g$kwd*$10581$5uPkq
                                g$_exp*$10582$5uPkq)
                              ((case-lambda
                                 ((g$_exp*$10583$5uPkq
                                    g$kwd*$10584$5uPkq
                                    g$mod**$10585$5uPkq
                                    g$rhs*$10586$5uPkq
                                    g$lex*$10587$5uPkq
                                    g$mr$10588$5uPkq
                                    g$r$10589$5uPkq
                                    g$e*$10590$5uPkq)
                                  ((case-lambda
                                     ((g$exp-lab*$10591$5uPkq
                                        g$mod**$10592$5uPkq)
                                      (if (not g$name$10564$5uPkq)
                                        (values
                                          g$lex*$10587$5uPkq
                                          g$rhs*$10586$5uPkq
                                          g$exp-id*$10563$5uPkq
                                          g$exp-lab*$10591$5uPkq
                                          g$r$10589$5uPkq
                                          g$mr$10588$5uPkq
                                          g$mod**$10592$5uPkq
                                          g$kwd*$10584$5uPkq)
                                        ((case-lambda
                                           ((g$lab$10593$5uPkq
                                              g$iface$10594$5uPkq)
                                            (values
                                              g$lex*$10587$5uPkq
                                              g$rhs*$10586$5uPkq
                                              (vector g$name$10564$5uPkq)
                                              (vector g$lab$10593$5uPkq)
                                              (cons
                                                (cons
                                                  g$lab$10593$5uPkq
                                                  (cons
                                                    '$module
                                                    g$iface$10594$5uPkq))
                                                g$r$10589$5uPkq)
                                              (cons
                                                (cons
                                                  g$lab$10593$5uPkq
                                                  (cons
                                                    '$module
                                                    g$iface$10594$5uPkq))
                                                g$mr$10588$5uPkq)
                                              g$mod**$10592$5uPkq
                                              g$kwd*$10584$5uPkq)))
                                         (g$gen-label$7959$5uPkq 'module)
                                         (g$make-module-interface$8331$5uPkq
                                           (car (g$stx-mark*$7993$5uPkq
                                                  g$name$10564$5uPkq))
                                           (vector-map
                                             (case-lambda
                                               ((g$x$10595$5uPkq)
                                                (g$make-stx$7991$5uPkq
                                                  (g$stx-expr$7992$5uPkq
                                                    g$x$10595$5uPkq)
                                                  (g$stx-mark*$7993$5uPkq
                                                    g$x$10595$5uPkq)
                                                  '()
                                                  '())))
                                             g$exp-id*$10563$5uPkq)
                                           g$exp-lab*$10591$5uPkq)))))
                                   (vector-map
                                     (case-lambda
                                       ((g$x$10596$5uPkq)
                                        ((case-lambda
                                           ((g$t$10597$5uPkq)
                                            (if g$t$10597$5uPkq
                                              g$t$10597$5uPkq
                                              (begin
                                                '#f
                                                (g$syntax-violation$8407$5uPkq
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$10596$5uPkq)))))
                                         (g$id->label$8031$5uPkq
                                           (g$make-stx$7991$5uPkq
                                             (g$id->sym$8019$5uPkq
                                               g$x$10596$5uPkq)
                                             (g$stx-mark*$7993$5uPkq
                                               g$x$10596$5uPkq)
                                             (list g$rib$10565$5uPkq)
                                             '())))))
                                     g$exp-id*$10563$5uPkq)
                                   (cons
                                     g$e*$10590$5uPkq
                                     g$mod**$10585$5uPkq))))
                               g$_exp*$10582$5uPkq
                               g$kwd*$10581$5uPkq
                               g$mod**$10580$5uPkq
                               g$rhs*$10579$5uPkq
                               g$lex*$10578$5uPkq
                               g$mr$10577$5uPkq
                               g$r$10576$5uPkq
                               g$e*$10575$5uPkq))))))
                      (g$map$5759$5uPkq
                        (case-lambda
                          ((g$x$10598$5uPkq)
                           (g$add-subst$8008$5uPkq
                             g$rib$10565$5uPkq
                             g$x$10598$5uPkq)))
                        (g$syntax->list$8017$5uPkq g$e*$10562$5uPkq)))))
                  (g$make-empty-rib$7978$5uPkq))))
              g$e*$10561$5uPkq
              g$exp-id*$10560$5uPkq
              g$name$10559$5uPkq)))))))
   (g$chi-body*$8340$5uPkq
     g$chi-body*$11831$5uPkq
     (case-lambda
       ((g$e*$10599$5uPkq
          g$r$10600$5uPkq
          g$mr$10601$5uPkq
          g$lex*$10602$5uPkq
          g$rhs*$10603$5uPkq
          g$mod**$10604$5uPkq
          g$kwd*$10605$5uPkq
          g$exp*$10606$5uPkq
          g$rib$10607$5uPkq
          g$top?$10608$5uPkq)
        (if (null? g$e*$10599$5uPkq)
          (values
            g$e*$10599$5uPkq
            g$r$10600$5uPkq
            g$mr$10601$5uPkq
            g$lex*$10602$5uPkq
            g$rhs*$10603$5uPkq
            g$mod**$10604$5uPkq
            g$kwd*$10605$5uPkq
            g$exp*$10606$5uPkq)
          ((case-lambda
             ((g$e$10609$5uPkq)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$8038$5uPkq g$e$10609$5uPkq g$r$10600$5uPkq)))
                (case-lambda
                  ((g$type$10613$5uPkq g$value$10614$5uPkq g$kwd$10615$5uPkq)
                   ((case-lambda
                      ((g$kwd$10616$5uPkq
                         g$value$10617$5uPkq
                         g$type$10618$5uPkq)
                       ((case-lambda
                          ((g$kwd*$10619$5uPkq)
                           ((case-lambda
                              ((g$t$10620$5uPkq)
                               (if (g$memv$5752$5uPkq g$t$10620$5uPkq '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$8236$5uPkq
                                        g$e$10609$5uPkq)))
                                   (case-lambda
                                     ((g$id$10623$5uPkq g$rhs$10624$5uPkq)
                                      ((case-lambda
                                         ((g$rhs$10625$5uPkq g$id$10626$5uPkq)
                                          (begin
                                            (if (g$bound-id-member?$8025$5uPkq
                                                  g$id$10626$5uPkq
                                                  g$kwd*$10619$5uPkq)
                                              (g$syntax-violation$8407$5uPkq
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10609$5uPkq)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7961$5uPkq
                                                   g$id$10626$5uPkq
                                                   g$rib$10607$5uPkq)))
                                              (case-lambda
                                                ((g$lab$10629$5uPkq
                                                   g$lex$10630$5uPkq)
                                                 ((case-lambda
                                                    ((g$lex$10631$5uPkq
                                                       g$lab$10632$5uPkq)
                                                     (begin
                                                       (g$extend-rib!$7981$5uPkq
                                                         g$rib$10607$5uPkq
                                                         g$id$10626$5uPkq
                                                         g$lab$10632$5uPkq)
                                                       (g$chi-body*$8340$5uPkq
                                                         (cdr g$e*$10599$5uPkq)
                                                         (g$add-lexical$8243$5uPkq
                                                           g$lab$10632$5uPkq
                                                           g$lex$10631$5uPkq
                                                           g$r$10600$5uPkq)
                                                         g$mr$10601$5uPkq
                                                         (cons
                                                           g$lex$10631$5uPkq
                                                           g$lex*$10602$5uPkq)
                                                         (cons
                                                           g$rhs$10625$5uPkq
                                                           g$rhs*$10603$5uPkq)
                                                         g$mod**$10604$5uPkq
                                                         g$kwd*$10619$5uPkq
                                                         g$exp*$10606$5uPkq
                                                         g$rib$10607$5uPkq
                                                         g$top?$10608$5uPkq))))
                                                  g$lex$10630$5uPkq
                                                  g$lab$10629$5uPkq)))))))
                                       g$rhs$10624$5uPkq
                                       g$id$10623$5uPkq))))
                                 (if (g$memv$5752$5uPkq
                                       g$t$10620$5uPkq
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$8237$5uPkq
                                          g$e$10609$5uPkq)))
                                     (case-lambda
                                       ((g$id$10635$5uPkq g$rhs$10636$5uPkq)
                                        ((case-lambda
                                           ((g$rhs$10637$5uPkq g$id$10638$5uPkq)
                                            (begin
                                              (if (g$bound-id-member?$8025$5uPkq
                                                    g$id$10638$5uPkq
                                                    g$kwd*$10619$5uPkq)
                                                (g$syntax-violation$8407$5uPkq
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10609$5uPkq)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10639$5uPkq
                                                    g$expanded-rhs$10640$5uPkq)
                                                  (begin
                                                    (g$extend-rib!$7981$5uPkq
                                                      g$rib$10607$5uPkq
                                                      g$id$10638$5uPkq
                                                      g$lab$10639$5uPkq)
                                                    ((case-lambda
                                                       ((g$b$10641$5uPkq)
                                                        (g$chi-body*$8340$5uPkq
                                                          (cdr g$e*$10599$5uPkq)
                                                          (cons
                                                            (cons
                                                              g$lab$10639$5uPkq
                                                              g$b$10641$5uPkq)
                                                            g$r$10600$5uPkq)
                                                          (cons
                                                            (cons
                                                              g$lab$10639$5uPkq
                                                              g$b$10641$5uPkq)
                                                            g$mr$10601$5uPkq)
                                                          g$lex*$10602$5uPkq
                                                          g$rhs*$10603$5uPkq
                                                          g$mod**$10604$5uPkq
                                                          g$kwd*$10619$5uPkq
                                                          g$exp*$10606$5uPkq
                                                          g$rib$10607$5uPkq
                                                          g$top?$10608$5uPkq)))
                                                     (g$make-eval-transformer$8050$5uPkq
                                                       g$expanded-rhs$10640$5uPkq)))))
                                               (g$gen-define-label$7962$5uPkq
                                                 g$id$10638$5uPkq
                                                 g$rib$10607$5uPkq)
                                               (g$expand-transformer$8341$5uPkq
                                                 g$rhs$10637$5uPkq
                                                 g$mr$10601$5uPkq)))))
                                         g$rhs$10636$5uPkq
                                         g$id$10635$5uPkq))))
                                   (if (g$memv$5752$5uPkq
                                         g$t$10620$5uPkq
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10642$5uPkq)
                                         ((case-lambda
                                            ((g$ls/false$10643$5uPkq)
                                             (if (if g$ls/false$10643$5uPkq
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10644$5uPkq
                                                            g$xrhs*$10645$5uPkq
                                                            g$xbody*$10646$5uPkq)
                                                          (if (not (g$valid-bound-ids?$8023$5uPkq
                                                                     g$xlhs*$10644$5uPkq))
                                                            (g$syntax-violation$8407$5uPkq
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10609$5uPkq)
                                                            (void))))
                                                       g$ls/false$10643$5uPkq))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10647$5uPkq
                                                      g$xrhs*$10648$5uPkq
                                                      g$xbody*$10649$5uPkq)
                                                    ((case-lambda
                                                       ((g$xlab*$10650$5uPkq)
                                                        ((case-lambda
                                                           ((g$xrib$10651$5uPkq)
                                                            ((case-lambda
                                                               ((g$xb*$10652$5uPkq)
                                                                (g$chi-body*$8340$5uPkq
                                                                  (append
                                                                    (g$map$5759$5uPkq
                                                                      (case-lambda
                                                                        ((g$x$10653$5uPkq)
                                                                         (g$add-subst$8008$5uPkq
                                                                           g$xrib$10651$5uPkq
                                                                           g$x$10653$5uPkq)))
                                                                      g$xbody*$10649$5uPkq)
                                                                    (cdr g$e*$10599$5uPkq))
                                                                  (append
                                                                    (g$map$5759$5uPkq
                                                                      cons
                                                                      g$xlab*$10650$5uPkq
                                                                      g$xb*$10652$5uPkq)
                                                                    g$r$10600$5uPkq)
                                                                  (append
                                                                    (g$map$5759$5uPkq
                                                                      cons
                                                                      g$xlab*$10650$5uPkq
                                                                      g$xb*$10652$5uPkq)
                                                                    g$mr$10601$5uPkq)
                                                                  g$lex*$10602$5uPkq
                                                                  g$rhs*$10603$5uPkq
                                                                  g$mod**$10604$5uPkq
                                                                  g$kwd*$10619$5uPkq
                                                                  g$exp*$10606$5uPkq
                                                                  g$rib$10607$5uPkq
                                                                  g$top?$10608$5uPkq)))
                                                             (g$map$5759$5uPkq
                                                               (case-lambda
                                                                 ((g$x$10654$5uPkq)
                                                                  (g$make-eval-transformer$8050$5uPkq
                                                                    (g$expand-transformer$8341$5uPkq
                                                                      (if (eq? g$type$10618$5uPkq
                                                                               'let-syntax)
                                                                        g$x$10654$5uPkq
                                                                        (g$add-subst$8008$5uPkq
                                                                          g$xrib$10651$5uPkq
                                                                          g$x$10654$5uPkq))
                                                                      g$mr$10601$5uPkq))))
                                                               g$xrhs*$10648$5uPkq))))
                                                         (g$make-full-rib$7986$5uPkq
                                                           g$xlhs*$10647$5uPkq
                                                           g$xlab*$10650$5uPkq))))
                                                     (g$map$5759$5uPkq
                                                       g$gen-label$7959$5uPkq
                                                       g$xlhs*$10647$5uPkq))))
                                                 g$ls/false$10643$5uPkq)
                                               (g$syntax-violation$8407$5uPkq
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10642$5uPkq))))
                                          (g$syntax-dispatch$8296$5uPkq
                                            g$t$10642$5uPkq
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10609$5uPkq)
                                     (if (g$memv$5752$5uPkq
                                           g$t$10620$5uPkq
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$10655$5uPkq)
                                           ((case-lambda
                                              ((g$ls/false$10656$5uPkq)
                                               (if g$ls/false$10656$5uPkq
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10657$5uPkq)
                                                      (g$chi-body*$8340$5uPkq
                                                        (append
                                                          g$x*$10657$5uPkq
                                                          (cdr g$e*$10599$5uPkq))
                                                        g$r$10600$5uPkq
                                                        g$mr$10601$5uPkq
                                                        g$lex*$10602$5uPkq
                                                        g$rhs*$10603$5uPkq
                                                        g$mod**$10604$5uPkq
                                                        g$kwd*$10619$5uPkq
                                                        g$exp*$10606$5uPkq
                                                        g$rib$10607$5uPkq
                                                        g$top?$10608$5uPkq)))
                                                   g$ls/false$10656$5uPkq)
                                                 (g$syntax-violation$8407$5uPkq
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10655$5uPkq))))
                                            (g$syntax-dispatch$8296$5uPkq
                                              g$t$10655$5uPkq
                                              '(_ . each-any)))))
                                        g$e$10609$5uPkq)
                                       (if (g$memv$5752$5uPkq
                                             g$t$10620$5uPkq
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8340$5uPkq
                                           (cons
                                             (g$add-subst$8008$5uPkq
                                               g$rib$10607$5uPkq
                                               (g$chi-global-macro$8311$5uPkq
                                                 g$value$10617$5uPkq
                                                 g$e$10609$5uPkq))
                                             (cdr g$e*$10599$5uPkq))
                                           g$r$10600$5uPkq
                                           g$mr$10601$5uPkq
                                           g$lex*$10602$5uPkq
                                           g$rhs*$10603$5uPkq
                                           g$mod**$10604$5uPkq
                                           g$kwd*$10619$5uPkq
                                           g$exp*$10606$5uPkq
                                           g$rib$10607$5uPkq
                                           g$top?$10608$5uPkq)
                                         (if (g$memv$5752$5uPkq
                                               g$t$10620$5uPkq
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8340$5uPkq
                                             (cons
                                               (g$add-subst$8008$5uPkq
                                                 g$rib$10607$5uPkq
                                                 (g$chi-local-macro$8310$5uPkq
                                                   g$value$10617$5uPkq
                                                   g$e$10609$5uPkq))
                                               (cdr g$e*$10599$5uPkq))
                                             g$r$10600$5uPkq
                                             g$mr$10601$5uPkq
                                             g$lex*$10602$5uPkq
                                             g$rhs*$10603$5uPkq
                                             g$mod**$10604$5uPkq
                                             g$kwd*$10619$5uPkq
                                             g$exp*$10606$5uPkq
                                             g$rib$10607$5uPkq
                                             g$top?$10608$5uPkq)
                                           (if (g$memv$5752$5uPkq
                                                 g$t$10620$5uPkq
                                                 '(macro macro!))
                                             (g$chi-body*$8340$5uPkq
                                               (cons
                                                 (g$add-subst$8008$5uPkq
                                                   g$rib$10607$5uPkq
                                                   (g$chi-macro$8309$5uPkq
                                                     g$value$10617$5uPkq
                                                     g$e$10609$5uPkq))
                                                 (cdr g$e*$10599$5uPkq))
                                               g$r$10600$5uPkq
                                               g$mr$10601$5uPkq
                                               g$lex*$10602$5uPkq
                                               g$rhs*$10603$5uPkq
                                               g$mod**$10604$5uPkq
                                               g$kwd*$10619$5uPkq
                                               g$exp*$10606$5uPkq
                                               g$rib$10607$5uPkq
                                               g$top?$10608$5uPkq)
                                             (if (g$memv$5752$5uPkq
                                                   g$t$10620$5uPkq
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8339$5uPkq
                                                      g$e$10609$5uPkq
                                                      g$r$10600$5uPkq
                                                      g$mr$10601$5uPkq
                                                      g$lex*$10602$5uPkq
                                                      g$rhs*$10603$5uPkq
                                                      g$mod**$10604$5uPkq
                                                      g$kwd*$10619$5uPkq)))
                                                 (case-lambda
                                                   ((g$lex*$10666$5uPkq
                                                      g$rhs*$10667$5uPkq
                                                      g$m-exp-id*$10668$5uPkq
                                                      g$m-exp-lab*$10669$5uPkq
                                                      g$r$10670$5uPkq
                                                      g$mr$10671$5uPkq
                                                      g$mod**$10672$5uPkq
                                                      g$kwd*$10673$5uPkq)
                                                    ((case-lambda
                                                       ((g$kwd*$10674$5uPkq
                                                          g$mod**$10675$5uPkq
                                                          g$mr$10676$5uPkq
                                                          g$r$10677$5uPkq
                                                          g$m-exp-lab*$10678$5uPkq
                                                          g$m-exp-id*$10679$5uPkq
                                                          g$rhs*$10680$5uPkq
                                                          g$lex*$10681$5uPkq)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10682$5uPkq
                                                                 g$lab$10683$5uPkq)
                                                               (g$extend-rib!$7981$5uPkq
                                                                 g$rib$10607$5uPkq
                                                                 g$id$10682$5uPkq
                                                                 g$lab$10683$5uPkq)))
                                                            g$m-exp-id*$10679$5uPkq
                                                            g$m-exp-lab*$10678$5uPkq)
                                                          (g$chi-body*$8340$5uPkq
                                                            (cdr g$e*$10599$5uPkq)
                                                            g$r$10677$5uPkq
                                                            g$mr$10676$5uPkq
                                                            g$lex*$10681$5uPkq
                                                            g$rhs*$10680$5uPkq
                                                            g$mod**$10675$5uPkq
                                                            g$kwd*$10674$5uPkq
                                                            g$exp*$10606$5uPkq
                                                            g$rib$10607$5uPkq
                                                            g$top?$10608$5uPkq))))
                                                     g$kwd*$10673$5uPkq
                                                     g$mod**$10672$5uPkq
                                                     g$mr$10671$5uPkq
                                                     g$r$10670$5uPkq
                                                     g$m-exp-lab*$10669$5uPkq
                                                     g$m-exp-id*$10668$5uPkq
                                                     g$rhs*$10667$5uPkq
                                                     g$lex*$10666$5uPkq))))
                                               (if (g$memv$5752$5uPkq
                                                     g$t$10620$5uPkq
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$8391$5uPkq
                                                     (g$stx->datum$8029$5uPkq
                                                       g$e$10609$5uPkq))
                                                   (g$chi-body*$8340$5uPkq
                                                     (cdr g$e*$10599$5uPkq)
                                                     g$r$10600$5uPkq
                                                     g$mr$10601$5uPkq
                                                     g$lex*$10602$5uPkq
                                                     g$rhs*$10603$5uPkq
                                                     g$mod**$10604$5uPkq
                                                     g$kwd*$10619$5uPkq
                                                     g$exp*$10606$5uPkq
                                                     g$rib$10607$5uPkq
                                                     g$top?$10608$5uPkq))
                                                 (if (g$memv$5752$5uPkq
                                                       g$t$10620$5uPkq
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$10684$5uPkq)
                                                       ((case-lambda
                                                          ((g$ls/false$10685$5uPkq)
                                                           (if g$ls/false$10685$5uPkq
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$10686$5uPkq)
                                                                  (g$chi-body*$8340$5uPkq
                                                                    (cdr g$e*$10599$5uPkq)
                                                                    g$r$10600$5uPkq
                                                                    g$mr$10601$5uPkq
                                                                    g$lex*$10602$5uPkq
                                                                    g$rhs*$10603$5uPkq
                                                                    g$mod**$10604$5uPkq
                                                                    g$kwd*$10619$5uPkq
                                                                    (append
                                                                      g$exp-decl*$10686$5uPkq
                                                                      g$exp*$10606$5uPkq)
                                                                    g$rib$10607$5uPkq
                                                                    g$top?$10608$5uPkq)))
                                                               g$ls/false$10685$5uPkq)
                                                             (g$syntax-violation$8407$5uPkq
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$10684$5uPkq))))
                                                        (g$syntax-dispatch$8296$5uPkq
                                                          g$t$10684$5uPkq
                                                          '(_ . each-any)))))
                                                    g$e$10609$5uPkq)
                                                   (if (g$memv$5752$5uPkq
                                                         g$t$10620$5uPkq
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10687$5uPkq
                                                                     (case-lambda
                                                                       ((g$e$10729$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$t$10730$5uPkq)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10731$5uPkq)
                                                                                (if (if g$ls/false$10731$5uPkq
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10732$5uPkq)
                                                                                             (g$id?$8018$5uPkq
                                                                                               g$id$10732$5uPkq)))
                                                                                          g$ls/false$10731$5uPkq))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10733$5uPkq)
                                                                                       '#t))
                                                                                    g$ls/false$10731$5uPkq)
                                                                                  ((case-lambda
                                                                                     ((g$t$10734$5uPkq)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10735$5uPkq)
                                                                                          (if g$ls/false$10735$5uPkq
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10736$5uPkq)
                                                                                                 '#f))
                                                                                              g$ls/false$10735$5uPkq)
                                                                                            ((case-lambda
                                                                                               ((g$t$10737$5uPkq)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10738$5uPkq)
                                                                                                    (if g$ls/false$10738$5uPkq
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8407$5uPkq
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10729$5uPkq)))
                                                                                                        g$ls/false$10738$5uPkq)
                                                                                                      (g$syntax-violation$8407$5uPkq
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10737$5uPkq))))
                                                                                                 (g$syntax-dispatch$8296$5uPkq
                                                                                                   g$t$10737$5uPkq
                                                                                                   '_))))
                                                                                             g$t$10734$5uPkq))))
                                                                                       (g$syntax-dispatch$8296$5uPkq
                                                                                         g$t$10734$5uPkq
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10730$5uPkq))))
                                                                             (g$syntax-dispatch$8296$5uPkq
                                                                               g$t$10730$5uPkq
                                                                               '(_ any)))))
                                                                         g$e$10729$5uPkq))))
                                                                   (g$module-import$10688$5uPkq
                                                                     (case-lambda
                                                                       ((g$e$10712$5uPkq
                                                                          g$r$10713$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$t$10714$5uPkq)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10715$5uPkq)
                                                                                (if (if g$ls/false$10715$5uPkq
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10716$5uPkq)
                                                                                             (g$id?$8018$5uPkq
                                                                                               g$id$10716$5uPkq)))
                                                                                          g$ls/false$10715$5uPkq))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10717$5uPkq)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$8038$5uPkq
                                                                                              g$id$10717$5uPkq
                                                                                              g$r$10713$5uPkq)))
                                                                                         (case-lambda
                                                                                           ((g$type$10721$5uPkq
                                                                                              g$value$10722$5uPkq
                                                                                              g$kwd$10723$5uPkq)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10724$5uPkq
                                                                                                  g$value$10725$5uPkq
                                                                                                  g$type$10726$5uPkq)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10727$5uPkq)
                                                                                                    (if (g$memv$5752$5uPkq
                                                                                                          g$t$10727$5uPkq
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10728$5uPkq)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8338$5uPkq
                                                                                                              g$iface$10728$5uPkq
                                                                                                              g$id$10717$5uPkq)
                                                                                                            (g$module-interface-exp-lab-vec$8334$5uPkq
                                                                                                              g$iface$10728$5uPkq))))
                                                                                                       g$value$10725$5uPkq)
                                                                                                      (g$syntax-violation$8407$5uPkq
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10712$5uPkq))))
                                                                                                 g$type$10726$5uPkq)))
                                                                                             g$kwd$10723$5uPkq
                                                                                             g$value$10722$5uPkq
                                                                                             g$type$10721$5uPkq))))))
                                                                                    g$ls/false$10715$5uPkq)
                                                                                  (g$syntax-violation$8407$5uPkq
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10714$5uPkq))))
                                                                             (g$syntax-dispatch$8296$5uPkq
                                                                               g$t$10714$5uPkq
                                                                               '(_ any)))))
                                                                         g$e$10712$5uPkq))))
                                                                   (g$library-import$10689$5uPkq
                                                                     (case-lambda
                                                                       ((g$e$10698$5uPkq)
                                                                        ((case-lambda
                                                                           ((g$t$10699$5uPkq)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10700$5uPkq)
                                                                                (if g$ls/false$10700$5uPkq
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10701$5uPkq
                                                                                         g$imp*$10702$5uPkq)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8345$5uPkq
                                                                                              (g$syntax->datum$8410$5uPkq
                                                                                                g$imp*$10702$5uPkq))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10705$5uPkq
                                                                                              g$subst-labels$10706$5uPkq)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10707$5uPkq
                                                                                                  g$subst-names$10708$5uPkq)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10709$5uPkq)
                                                                                                       (g$datum->stx$8001$5uPkq
                                                                                                         g$ctxt$10701$5uPkq
                                                                                                         g$name$10709$5uPkq)))
                                                                                                    g$subst-names$10708$5uPkq)
                                                                                                  g$subst-labels$10707$5uPkq)))
                                                                                             g$subst-labels$10706$5uPkq
                                                                                             g$subst-names$10705$5uPkq))))))
                                                                                    g$ls/false$10700$5uPkq)
                                                                                  ((case-lambda
                                                                                     ((g$t$10710$5uPkq)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10711$5uPkq)
                                                                                          (if g$ls/false$10711$5uPkq
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8407$5uPkq
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10698$5uPkq)))
                                                                                              g$ls/false$10711$5uPkq)
                                                                                            (g$syntax-violation$8407$5uPkq
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10710$5uPkq))))
                                                                                       (g$syntax-dispatch$8296$5uPkq
                                                                                         g$t$10710$5uPkq
                                                                                         '_))))
                                                                                   g$t$10699$5uPkq))))
                                                                             (g$syntax-dispatch$8296$5uPkq
                                                                               g$t$10699$5uPkq
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10698$5uPkq)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$10687$5uPkq
                                                                        g$e$10609$5uPkq)
                                                                    (g$module-import$10688$5uPkq
                                                                      g$e$10609$5uPkq
                                                                      g$r$10600$5uPkq)
                                                                    (g$library-import$10689$5uPkq
                                                                      g$e$10609$5uPkq))))
                                                               (case-lambda
                                                                 ((g$id*$10692$5uPkq
                                                                    g$lab*$10693$5uPkq)
                                                                  ((case-lambda
                                                                     ((g$lab*$10694$5uPkq
                                                                        g$id*$10695$5uPkq)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$10696$5uPkq
                                                                             g$lab$10697$5uPkq)
                                                                           (g$extend-rib!$7981$5uPkq
                                                                             g$rib$10607$5uPkq
                                                                             g$id$10696$5uPkq
                                                                             g$lab$10697$5uPkq)))
                                                                        g$id*$10695$5uPkq
                                                                        g$lab*$10694$5uPkq)))
                                                                   g$lab*$10693$5uPkq
                                                                   g$id*$10692$5uPkq))))
                                                             (g$chi-body*$8340$5uPkq
                                                               (cdr g$e*$10599$5uPkq)
                                                               g$r$10600$5uPkq
                                                               g$mr$10601$5uPkq
                                                               g$lex*$10602$5uPkq
                                                               g$rhs*$10603$5uPkq
                                                               g$mod**$10604$5uPkq
                                                               g$kwd*$10619$5uPkq
                                                               g$exp*$10606$5uPkq
                                                               g$rib$10607$5uPkq
                                                               g$top?$10608$5uPkq))))))
                                                     (if g$top?$10608$5uPkq
                                                       (g$chi-body*$8340$5uPkq
                                                         (cdr g$e*$10599$5uPkq)
                                                         g$r$10600$5uPkq
                                                         g$mr$10601$5uPkq
                                                         (cons
                                                           (g$gen-lexical$7957$5uPkq
                                                             'dummy)
                                                           g$lex*$10602$5uPkq)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$10609$5uPkq)
                                                           g$rhs*$10603$5uPkq)
                                                         g$mod**$10604$5uPkq
                                                         g$kwd*$10619$5uPkq
                                                         g$exp*$10606$5uPkq
                                                         g$rib$10607$5uPkq
                                                         g$top?$10608$5uPkq)
                                                       (values
                                                         g$e*$10599$5uPkq
                                                         g$r$10600$5uPkq
                                                         g$mr$10601$5uPkq
                                                         g$lex*$10602$5uPkq
                                                         g$rhs*$10603$5uPkq
                                                         g$mod**$10604$5uPkq
                                                         g$kwd*$10619$5uPkq
                                                         g$exp*$10606$5uPkq)))))))))))))))
                            g$type$10618$5uPkq)))
                        (if (g$id?$8018$5uPkq g$kwd$10616$5uPkq)
                          (cons g$kwd$10616$5uPkq g$kwd*$10605$5uPkq)
                          g$kwd*$10605$5uPkq))))
                    g$kwd$10615$5uPkq
                    g$value$10614$5uPkq
                    g$type$10613$5uPkq))))))
           (car g$e*$10599$5uPkq))))))
   (g$expand-transformer$8341$5uPkq
     g$expand-transformer$11832$5uPkq
     (case-lambda
       ((g$expr$10739$5uPkq g$r$10740$5uPkq)
        ((case-lambda
           ((g$rtc$10741$5uPkq)
            ((case-lambda
               ((g$expanded-rhs$10742$5uPkq)
                (begin
                  (g$for-each$5760$5uPkq
                    ((case-lambda
                       ((g$mark-visit$10743$5uPkq)
                        (case-lambda
                          ((g$x$10744$5uPkq)
                           (begin
                             (g$invoke-library$7828$5uPkq g$x$10744$5uPkq)
                             (g$mark-visit$10743$5uPkq g$x$10744$5uPkq))))))
                     (g$vis-collector$8349$5uPkq))
                    (g$rtc$10741$5uPkq))
                  g$expanded-rhs$10742$5uPkq)))
             ((case-lambda
                ((g$inv-collector$10749$5uPkq
                   g$vis-collector$10750$5uPkq
                   g$inv-collector$10751$5uPkq
                   g$vis-collector$10752$5uPkq)
                 ((case-lambda
                    ((g$swap$10753$5uPkq)
                     (dynamic-wind
                       g$swap$10753$5uPkq
                       (case-lambda
                         (()
                          (g$chi-expr$8314$5uPkq
                            g$expr$10739$5uPkq
                            g$r$10740$5uPkq
                            g$r$10740$5uPkq)))
                       g$swap$10753$5uPkq)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10754$5uPkq)
                           (begin
                             (g$inv-collector$10749$5uPkq
                               g$inv-collector$10751$5uPkq)
                             (set! g$inv-collector$10751$5uPkq
                               g$t$10754$5uPkq))))
                        (g$inv-collector$10749$5uPkq))
                       ((case-lambda
                          ((g$t$10755$5uPkq)
                           (begin
                             (g$vis-collector$10750$5uPkq
                               g$vis-collector$10752$5uPkq)
                             (set! g$vis-collector$10752$5uPkq
                               g$t$10755$5uPkq))))
                        (g$vis-collector$10750$5uPkq))))))))
              g$inv-collector$8348$5uPkq
              g$vis-collector$8349$5uPkq
              g$rtc$10741$5uPkq
              (case-lambda ((g$x$10756$5uPkq) (values)))))))
         (g$make-collector$8347$5uPkq)))))
   (g$parse-exports$8342$5uPkq
     g$parse-exports$11833$5uPkq
     (case-lambda
       ((g$exp*$10757$5uPkq)
        ((letrec ((g$f$10758$5uPkq
                    (case-lambda
                      ((g$exp*$10759$5uPkq
                         g$int*$10760$5uPkq
                         g$ext*$10761$5uPkq)
                       (if (null? g$exp*$10759$5uPkq)
                         (begin
                           (if (not (g$valid-bound-ids?$8023$5uPkq
                                      g$ext*$10761$5uPkq))
                             (g$syntax-violation$8407$5uPkq
                               'export
                               '"invalid exports"
                               (g$find-dups$8324$5uPkq g$ext*$10761$5uPkq))
                             (void))
                           (values
                             (g$map$5759$5uPkq
                               g$syntax->datum$8410$5uPkq
                               g$ext*$10761$5uPkq)
                             g$int*$10760$5uPkq))
                         ((case-lambda
                            ((g$t$10762$5uPkq)
                             ((case-lambda
                                ((g$ls/false$10763$5uPkq)
                                 (if g$ls/false$10763$5uPkq
                                   (apply
                                     (case-lambda
                                       ((g$rename$10764$5uPkq
                                          g$i*$10765$5uPkq
                                          g$e*$10766$5uPkq)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$8410$5uPkq
                                                              g$rename$10764$5uPkq)
                                                            'rename)
                                                     (if (g$for-all$5757$5uPkq
                                                           g$id?$8018$5uPkq
                                                           g$i*$10765$5uPkq)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5757$5uPkq
                                                           g$id?$8018$5uPkq
                                                           g$e*$10766$5uPkq))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$8407$5uPkq
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$10759$5uPkq))
                                            (void))
                                          (g$f$10758$5uPkq
                                            (cdr g$exp*$10759$5uPkq)
                                            (append
                                              g$i*$10765$5uPkq
                                              g$int*$10760$5uPkq)
                                            (append
                                              g$e*$10766$5uPkq
                                              g$ext*$10761$5uPkq)))))
                                     g$ls/false$10763$5uPkq)
                                   ((case-lambda
                                      ((g$t$10767$5uPkq)
                                       ((case-lambda
                                          ((g$ls/false$10768$5uPkq)
                                           (if g$ls/false$10768$5uPkq
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10769$5uPkq)
                                                  (begin
                                                    (if (not (g$id?$8018$5uPkq
                                                               g$ie$10769$5uPkq))
                                                      (g$syntax-violation$8407$5uPkq
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10769$5uPkq)
                                                      (void))
                                                    (g$f$10758$5uPkq
                                                      (cdr g$exp*$10759$5uPkq)
                                                      (cons
                                                        g$ie$10769$5uPkq
                                                        g$int*$10760$5uPkq)
                                                      (cons
                                                        g$ie$10769$5uPkq
                                                        g$ext*$10761$5uPkq)))))
                                               g$ls/false$10768$5uPkq)
                                             (g$syntax-violation$8407$5uPkq
                                               '#f
                                               '"invalid syntax"
                                               g$t$10767$5uPkq))))
                                        (g$syntax-dispatch$8296$5uPkq
                                          g$t$10767$5uPkq
                                          'any))))
                                    g$t$10762$5uPkq))))
                              (g$syntax-dispatch$8296$5uPkq
                                g$t$10762$5uPkq
                                '(any . #(each (any any)))))))
                          (car g$exp*$10759$5uPkq)))))))
           g$f$10758$5uPkq)
         g$exp*$10757$5uPkq
         '()
         '()))))
   (g$parse-library-name$8343$5uPkq
     g$parse-library-name$11834$5uPkq
     (case-lambda
       ((g$spec$10770$5uPkq)
        (letrec* ((g$parse$10771$5uPkq
                    (case-lambda
                      ((g$x$10778$5uPkq)
                       ((case-lambda
                          ((g$t$10779$5uPkq)
                           ((case-lambda
                              ((g$ls/false$10780$5uPkq)
                               (if (if g$ls/false$10780$5uPkq
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10781$5uPkq)
                                            (g$for-all$5757$5uPkq
                                              (case-lambda
                                                ((g$x$10782$5uPkq)
                                                 ((case-lambda
                                                    ((g$x$10783$5uPkq)
                                                     (if (integer?
                                                           g$x$10783$5uPkq)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10783$5uPkq))
                                                       '#f)))
                                                  (g$syntax->datum$8410$5uPkq
                                                    g$x$10782$5uPkq))))
                                              g$v*$10781$5uPkq)))
                                         g$ls/false$10780$5uPkq))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10784$5uPkq)
                                      (values
                                        '()
                                        (g$map$5759$5uPkq
                                          g$syntax->datum$8410$5uPkq
                                          g$v*$10784$5uPkq))))
                                   g$ls/false$10780$5uPkq)
                                 ((case-lambda
                                    ((g$t$10785$5uPkq)
                                     ((case-lambda
                                        ((g$ls/false$10786$5uPkq)
                                         (if (if g$ls/false$10786$5uPkq
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10787$5uPkq
                                                        g$rest$10788$5uPkq)
                                                      (symbol?
                                                        (g$syntax->datum$8410$5uPkq
                                                          g$x$10787$5uPkq))))
                                                   g$ls/false$10786$5uPkq))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10789$5uPkq
                                                  g$rest$10790$5uPkq)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10771$5uPkq
                                                       g$rest$10790$5uPkq)))
                                                  (case-lambda
                                                    ((g$x*$10793$5uPkq
                                                       g$v*$10794$5uPkq)
                                                     ((case-lambda
                                                        ((g$v*$10795$5uPkq
                                                           g$x*$10796$5uPkq)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8410$5uPkq
                                                               g$x$10789$5uPkq)
                                                             g$x*$10796$5uPkq)
                                                           g$v*$10795$5uPkq)))
                                                      g$v*$10794$5uPkq
                                                      g$x*$10793$5uPkq))))))
                                             g$ls/false$10786$5uPkq)
                                           ((case-lambda
                                              ((g$t$10797$5uPkq)
                                               ((case-lambda
                                                  ((g$ls/false$10798$5uPkq)
                                                   (if g$ls/false$10798$5uPkq
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10798$5uPkq)
                                                     ((case-lambda
                                                        ((g$t$10799$5uPkq)
                                                         ((case-lambda
                                                            ((g$ls/false$10800$5uPkq)
                                                             (if g$ls/false$10800$5uPkq
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8407$5uPkq
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10770$5uPkq)))
                                                                 g$ls/false$10800$5uPkq)
                                                               (g$syntax-violation$8407$5uPkq
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10799$5uPkq))))
                                                          (g$syntax-dispatch$8296$5uPkq
                                                            g$t$10799$5uPkq
                                                            '_))))
                                                      g$t$10797$5uPkq))))
                                                (g$syntax-dispatch$8296$5uPkq
                                                  g$t$10797$5uPkq
                                                  '()))))
                                            g$t$10785$5uPkq))))
                                      (g$syntax-dispatch$8296$5uPkq
                                        g$t$10785$5uPkq
                                        '(any . any)))))
                                  g$t$10779$5uPkq))))
                            (g$syntax-dispatch$8296$5uPkq
                              g$t$10779$5uPkq
                              '(each-any)))))
                        g$x$10778$5uPkq)))))
          (call-with-values
            (case-lambda (() (g$parse$10771$5uPkq g$spec$10770$5uPkq)))
            (case-lambda
              ((g$name*$10774$5uPkq g$ver*$10775$5uPkq)
               ((case-lambda
                  ((g$ver*$10776$5uPkq g$name*$10777$5uPkq)
                   (begin
                     (if (null? g$name*$10777$5uPkq)
                       (g$syntax-violation$8407$5uPkq
                         '#f
                         '"empty library name"
                         g$spec$10770$5uPkq)
                       (void))
                     (values g$name*$10777$5uPkq g$ver*$10776$5uPkq))))
                g$ver*$10775$5uPkq
                g$name*$10774$5uPkq))))))))
   (g$parse-library$8344$5uPkq
     g$parse-library$11835$5uPkq
     (case-lambda
       ((g$e$10801$5uPkq)
        ((case-lambda
           ((g$t$10802$5uPkq)
            ((case-lambda
               ((g$ls/false$10803$5uPkq)
                (if (if g$ls/false$10803$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10804$5uPkq
                               g$name*$10805$5uPkq
                               g$export$10806$5uPkq
                               g$exp*$10807$5uPkq
                               g$import$10808$5uPkq
                               g$imp*$10809$5uPkq
                               g$b*$10810$5uPkq)
                             (if (eq? (g$syntax->datum$8410$5uPkq
                                        g$export$10806$5uPkq)
                                      'export)
                               (if (eq? (g$syntax->datum$8410$5uPkq
                                          g$import$10808$5uPkq)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8410$5uPkq
                                          g$library$10804$5uPkq)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10803$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10811$5uPkq
                         g$name*$10812$5uPkq
                         g$export$10813$5uPkq
                         g$exp*$10814$5uPkq
                         g$import$10815$5uPkq
                         g$imp*$10816$5uPkq
                         g$b*$10817$5uPkq)
                       (values
                         g$name*$10812$5uPkq
                         g$exp*$10814$5uPkq
                         g$imp*$10816$5uPkq
                         g$b*$10817$5uPkq)))
                    g$ls/false$10803$5uPkq)
                  ((case-lambda
                     ((g$t$10818$5uPkq)
                      ((case-lambda
                         ((g$ls/false$10819$5uPkq)
                          (if g$ls/false$10819$5uPkq
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8407$5uPkq
                                   '#f
                                   '"malformed library"
                                   g$e$10801$5uPkq)))
                              g$ls/false$10819$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$10818$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq g$t$10818$5uPkq '_))))
                   g$t$10802$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$10802$5uPkq
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10801$5uPkq))))
   (g$parse-import-spec*$8345$5uPkq
     g$parse-import-spec*$11836$5uPkq
     ((case-lambda
        (()
         (letrec* ((g$idsyn?$10820$5uPkq
                     (case-lambda
                       ((g$x$11081$5uPkq)
                        (symbol?
                          (g$syntax->datum$8410$5uPkq g$x$11081$5uPkq)))))
                   (g$dup-error$10821$5uPkq
                     (case-lambda
                       ((g$name$11080$5uPkq)
                        (g$syntax-violation$8407$5uPkq
                          'import
                          '"two imports with different bindings"
                          g$name$11080$5uPkq))))
                   (g$merge-substs$10822$5uPkq
                     (case-lambda
                       ((g$s$11071$5uPkq g$subst$11072$5uPkq)
                        (letrec* ((g$insert-to-subst$11073$5uPkq
                                    (case-lambda
                                      ((g$a$11074$5uPkq g$subst$11075$5uPkq)
                                       ((case-lambda
                                          ((g$name$11076$5uPkq
                                             g$label$11077$5uPkq)
                                           ((case-lambda
                                              ((g$t$11078$5uPkq)
                                               (if g$t$11078$5uPkq
                                                 ((case-lambda
                                                    ((g$x$11079$5uPkq)
                                                     (if (eq? (cdr g$x$11079$5uPkq)
                                                              g$label$11077$5uPkq)
                                                       g$subst$11075$5uPkq
                                                       (g$dup-error$10821$5uPkq
                                                         g$name$11076$5uPkq))))
                                                  g$t$11078$5uPkq)
                                                 (cons
                                                   g$a$11074$5uPkq
                                                   g$subst$11075$5uPkq))))
                                            (g$assq$5747$5uPkq
                                              g$name$11076$5uPkq
                                              g$subst$11075$5uPkq))))
                                        (car g$a$11074$5uPkq)
                                        (cdr g$a$11074$5uPkq))))))
                          (if (null? g$s$11071$5uPkq)
                            g$subst$11072$5uPkq
                            (g$insert-to-subst$11073$5uPkq
                              (car g$s$11071$5uPkq)
                              (g$merge-substs$10822$5uPkq
                                (cdr g$s$11071$5uPkq)
                                g$subst$11072$5uPkq)))))))
                   (g$exclude*$10823$5uPkq
                     (case-lambda
                       ((g$sym*$11047$5uPkq g$subst$11048$5uPkq)
                        (letrec* ((g$exclude$11049$5uPkq
                                    (case-lambda
                                      ((g$sym$11062$5uPkq g$subst$11063$5uPkq)
                                       (if (null? g$subst$11063$5uPkq)
                                         (g$syntax-violation$8407$5uPkq
                                           'import
                                           '"cannot rename unbound identifier"
                                           g$sym$11062$5uPkq)
                                         (if (eq? g$sym$11062$5uPkq
                                                  (g$caar$5922$5uPkq
                                                    g$subst$11063$5uPkq))
                                           (values
                                             (g$cdar$5924$5uPkq
                                               g$subst$11063$5uPkq)
                                             (cdr g$subst$11063$5uPkq))
                                           ((case-lambda
                                              ((g$a$11064$5uPkq)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$exclude$11049$5uPkq
                                                      g$sym$11062$5uPkq
                                                      (cdr g$subst$11063$5uPkq))))
                                                 (case-lambda
                                                   ((g$old$11067$5uPkq
                                                      g$subst$11068$5uPkq)
                                                    ((case-lambda
                                                       ((g$subst$11069$5uPkq
                                                          g$old$11070$5uPkq)
                                                        (values
                                                          g$old$11070$5uPkq
                                                          (cons
                                                            g$a$11064$5uPkq
                                                            g$subst$11069$5uPkq))))
                                                     g$subst$11068$5uPkq
                                                     g$old$11067$5uPkq))))))
                                            (car g$subst$11063$5uPkq))))))))
                          (if (null? g$sym*$11047$5uPkq)
                            (values '() g$subst$11048$5uPkq)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$exclude$11049$5uPkq
                                   (car g$sym*$11047$5uPkq)
                                   g$subst$11048$5uPkq)))
                              (case-lambda
                                ((g$old$11052$5uPkq g$subst$11053$5uPkq)
                                 ((case-lambda
                                    ((g$subst$11054$5uPkq g$old$11055$5uPkq)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$exclude*$10823$5uPkq
                                            (cdr g$sym*$11047$5uPkq)
                                            g$subst$11054$5uPkq)))
                                       (case-lambda
                                         ((g$old*$11058$5uPkq
                                            g$subst$11059$5uPkq)
                                          ((case-lambda
                                             ((g$subst$11060$5uPkq
                                                g$old*$11061$5uPkq)
                                              (values
                                                (cons
                                                  g$old$11055$5uPkq
                                                  g$old*$11061$5uPkq)
                                                g$subst$11060$5uPkq)))
                                           g$subst$11059$5uPkq
                                           g$old*$11058$5uPkq))))))
                                  g$subst$11053$5uPkq
                                  g$old$11052$5uPkq)))))))))
                   (g$find*$10824$5uPkq
                     (case-lambda
                       ((g$sym*$11043$5uPkq g$subst$11044$5uPkq)
                        (g$map$5759$5uPkq
                          (case-lambda
                            ((g$x$11045$5uPkq)
                             ((case-lambda
                                ((g$t$11046$5uPkq)
                                 (if g$t$11046$5uPkq
                                   (cdr g$t$11046$5uPkq)
                                   (g$syntax-violation$8407$5uPkq
                                     'import
                                     '"cannot find identifier"
                                     g$x$11045$5uPkq))))
                              (g$assq$5747$5uPkq
                                g$x$11045$5uPkq
                                g$subst$11044$5uPkq))))
                          g$sym*$11043$5uPkq))))
                   (g$rem*$10825$5uPkq
                     (case-lambda
                       ((g$sym*$11039$5uPkq g$subst$11040$5uPkq)
                        ((letrec ((g$f$11041$5uPkq
                                    (case-lambda
                                      ((g$subst$11042$5uPkq)
                                       (if (null? g$subst$11042$5uPkq)
                                         '()
                                         (if (g$memq$5751$5uPkq
                                               (g$caar$5922$5uPkq
                                                 g$subst$11042$5uPkq)
                                               g$sym*$11039$5uPkq)
                                           (g$f$11041$5uPkq
                                             (cdr g$subst$11042$5uPkq))
                                           (cons
                                             (car g$subst$11042$5uPkq)
                                             (g$f$11041$5uPkq
                                               (cdr g$subst$11042$5uPkq)))))))))
                           g$f$11041$5uPkq)
                         g$subst$11040$5uPkq))))
                   (g$remove-dups$10826$5uPkq
                     (case-lambda
                       ((g$ls$11038$5uPkq)
                        (if (null? g$ls$11038$5uPkq)
                          '()
                          (if (g$memq$5751$5uPkq
                                (car g$ls$11038$5uPkq)
                                (cdr g$ls$11038$5uPkq))
                            (g$remove-dups$10826$5uPkq (cdr g$ls$11038$5uPkq))
                            (cons
                              (car g$ls$11038$5uPkq)
                              (g$remove-dups$10826$5uPkq
                                (cdr g$ls$11038$5uPkq))))))))
                   (g$parse-library-name$10827$5uPkq
                     (case-lambda
                       ((g$spec$10922$5uPkq)
                        (letrec* ((g$subversion?$10923$5uPkq
                                    (case-lambda
                                      ((g$x$11036$5uPkq)
                                       ((case-lambda
                                          ((g$x$11037$5uPkq)
                                           (if (integer? g$x$11037$5uPkq)
                                             (if (exact? g$x$11037$5uPkq)
                                               (begin
                                                 '#f
                                                 (>= g$x$11037$5uPkq '0))
                                               '#f)
                                             '#f)))
                                        (g$syntax->datum$8410$5uPkq
                                          g$x$11036$5uPkq)))))
                                  (g$subversion-pred$10924$5uPkq
                                    (case-lambda
                                      ((g$x*$10988$5uPkq)
                                       ((case-lambda
                                          ((g$t$10989$5uPkq)
                                           ((case-lambda
                                              ((g$ls/false$10990$5uPkq)
                                               (if (if g$ls/false$10990$5uPkq
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$n$10991$5uPkq)
                                                            (g$subversion?$10923$5uPkq
                                                              g$n$10991$5uPkq)))
                                                         g$ls/false$10990$5uPkq))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$n$10992$5uPkq)
                                                      (case-lambda
                                                        ((g$x$10993$5uPkq)
                                                         (= g$x$10993$5uPkq
                                                            (g$syntax->datum$8410$5uPkq
                                                              g$n$10992$5uPkq))))))
                                                   g$ls/false$10990$5uPkq)
                                                 ((case-lambda
                                                    ((g$t$10994$5uPkq)
                                                     ((case-lambda
                                                        ((g$ls/false$10995$5uPkq)
                                                         (if (if g$ls/false$10995$5uPkq
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$p?$10996$5uPkq
                                                                        g$sub*$10997$5uPkq)
                                                                      (eq? (g$syntax->datum$8410$5uPkq
                                                                             g$p?$10996$5uPkq)
                                                                           'and)))
                                                                   g$ls/false$10995$5uPkq))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$p?$10998$5uPkq
                                                                  g$sub*$10999$5uPkq)
                                                                ((case-lambda
                                                                   ((g$p*$11000$5uPkq)
                                                                    (case-lambda
                                                                      ((g$x$11001$5uPkq)
                                                                       (g$for-all$5757$5uPkq
                                                                         (case-lambda
                                                                           ((g$p$11002$5uPkq)
                                                                            (g$p$11002$5uPkq
                                                                              g$x$11001$5uPkq)))
                                                                         g$p*$11000$5uPkq)))))
                                                                 (g$map$5759$5uPkq
                                                                   g$subversion-pred$10924$5uPkq
                                                                   g$sub*$10999$5uPkq))))
                                                             g$ls/false$10995$5uPkq)
                                                           ((case-lambda
                                                              ((g$t$11003$5uPkq)
                                                               ((case-lambda
                                                                  ((g$ls/false$11004$5uPkq)
                                                                   (if (if g$ls/false$11004$5uPkq
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$p?$11005$5uPkq
                                                                                  g$sub*$11006$5uPkq)
                                                                                (eq? (g$syntax->datum$8410$5uPkq
                                                                                       g$p?$11005$5uPkq)
                                                                                     'or)))
                                                                             g$ls/false$11004$5uPkq))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p?$11007$5uPkq
                                                                            g$sub*$11008$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$p*$11009$5uPkq)
                                                                              (case-lambda
                                                                                ((g$x$11010$5uPkq)
                                                                                 (g$exists$5758$5uPkq
                                                                                   (case-lambda
                                                                                     ((g$p$11011$5uPkq)
                                                                                      (g$p$11011$5uPkq
                                                                                        g$x$11010$5uPkq)))
                                                                                   g$p*$11009$5uPkq)))))
                                                                           (g$map$5759$5uPkq
                                                                             g$subversion-pred$10924$5uPkq
                                                                             g$sub*$11008$5uPkq))))
                                                                       g$ls/false$11004$5uPkq)
                                                                     ((case-lambda
                                                                        ((g$t$11012$5uPkq)
                                                                         ((case-lambda
                                                                            ((g$ls/false$11013$5uPkq)
                                                                             (if (if g$ls/false$11013$5uPkq
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$p?$11014$5uPkq
                                                                                            g$sub$11015$5uPkq)
                                                                                          (eq? (g$syntax->datum$8410$5uPkq
                                                                                                 g$p?$11014$5uPkq)
                                                                                               'not)))
                                                                                       g$ls/false$11013$5uPkq))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$p?$11016$5uPkq
                                                                                      g$sub$11017$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$p$11018$5uPkq)
                                                                                        (case-lambda
                                                                                          ((g$x$11019$5uPkq)
                                                                                           (not (g$p$11018$5uPkq
                                                                                                  g$x$11019$5uPkq))))))
                                                                                     (g$subversion-pred$10924$5uPkq
                                                                                       g$sub$11017$5uPkq))))
                                                                                 g$ls/false$11013$5uPkq)
                                                                               ((case-lambda
                                                                                  ((g$t$11020$5uPkq)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$11021$5uPkq)
                                                                                       (if (if g$ls/false$11021$5uPkq
                                                                                             (begin
                                                                                               '#f
                                                                                               (apply
                                                                                                 (case-lambda
                                                                                                   ((g$p?$11022$5uPkq
                                                                                                      g$n$11023$5uPkq)
                                                                                                    (if (eq? (g$syntax->datum$8410$5uPkq
                                                                                                               g$p?$11022$5uPkq)
                                                                                                             '<=)
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (g$subversion?$10923$5uPkq
                                                                                                          g$n$11023$5uPkq))
                                                                                                      '#f)))
                                                                                                 g$ls/false$11021$5uPkq))
                                                                                             '#f)
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p?$11024$5uPkq
                                                                                                g$n$11025$5uPkq)
                                                                                              (case-lambda
                                                                                                ((g$x$11026$5uPkq)
                                                                                                 (<= g$x$11026$5uPkq
                                                                                                     (g$syntax->datum$8410$5uPkq
                                                                                                       g$n$11025$5uPkq))))))
                                                                                           g$ls/false$11021$5uPkq)
                                                                                         ((case-lambda
                                                                                            ((g$t$11027$5uPkq)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$11028$5uPkq)
                                                                                                 (if (if g$ls/false$11028$5uPkq
                                                                                                       (begin
                                                                                                         '#f
                                                                                                         (apply
                                                                                                           (case-lambda
                                                                                                             ((g$p?$11029$5uPkq
                                                                                                                g$n$11030$5uPkq)
                                                                                                              (if (eq? (g$syntax->datum$8410$5uPkq
                                                                                                                         g$p?$11029$5uPkq)
                                                                                                                       '>=)
                                                                                                                (begin
                                                                                                                  '#f
                                                                                                                  (g$subversion?$10923$5uPkq
                                                                                                                    g$n$11030$5uPkq))
                                                                                                                '#f)))
                                                                                                           g$ls/false$11028$5uPkq))
                                                                                                       '#f)
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$p?$11031$5uPkq
                                                                                                          g$n$11032$5uPkq)
                                                                                                        (case-lambda
                                                                                                          ((g$x$11033$5uPkq)
                                                                                                           (>= g$x$11033$5uPkq
                                                                                                               (g$syntax->datum$8410$5uPkq
                                                                                                                 g$n$11032$5uPkq))))))
                                                                                                     g$ls/false$11028$5uPkq)
                                                                                                   ((case-lambda
                                                                                                      ((g$t$11034$5uPkq)
                                                                                                       ((case-lambda
                                                                                                          ((g$ls/false$11035$5uPkq)
                                                                                                           (if g$ls/false$11035$5uPkq
                                                                                                             (apply
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$syntax-violation$8407$5uPkq
                                                                                                                    'import
                                                                                                                    '"invalid sub-version spec"
                                                                                                                    g$spec$10922$5uPkq
                                                                                                                    g$x*$10988$5uPkq)))
                                                                                                               g$ls/false$11035$5uPkq)
                                                                                                             (g$syntax-violation$8407$5uPkq
                                                                                                               '#f
                                                                                                               '"invalid syntax"
                                                                                                               g$t$11034$5uPkq))))
                                                                                                        (g$syntax-dispatch$8296$5uPkq
                                                                                                          g$t$11034$5uPkq
                                                                                                          '_))))
                                                                                                    g$t$11027$5uPkq))))
                                                                                              (g$syntax-dispatch$8296$5uPkq
                                                                                                g$t$11027$5uPkq
                                                                                                '(any any)))))
                                                                                          g$t$11020$5uPkq))))
                                                                                    (g$syntax-dispatch$8296$5uPkq
                                                                                      g$t$11020$5uPkq
                                                                                      '(any any)))))
                                                                                g$t$11012$5uPkq))))
                                                                          (g$syntax-dispatch$8296$5uPkq
                                                                            g$t$11012$5uPkq
                                                                            '(any any)))))
                                                                      g$t$11003$5uPkq))))
                                                                (g$syntax-dispatch$8296$5uPkq
                                                                  g$t$11003$5uPkq
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10994$5uPkq))))
                                                      (g$syntax-dispatch$8296$5uPkq
                                                        g$t$10994$5uPkq
                                                        '(any . each-any)))))
                                                  g$t$10989$5uPkq))))
                                            (g$syntax-dispatch$8296$5uPkq
                                              g$t$10989$5uPkq
                                              'any))))
                                        g$x*$10988$5uPkq))))
                                  (g$version-pred$10925$5uPkq
                                    (case-lambda
                                      ((g$x*$10948$5uPkq)
                                       ((case-lambda
                                          ((g$t$10949$5uPkq)
                                           ((case-lambda
                                              ((g$ls/false$10950$5uPkq)
                                               (if g$ls/false$10950$5uPkq
                                                 (apply
                                                   (case-lambda
                                                     (()
                                                      (case-lambda
                                                        ((g$x$10951$5uPkq)
                                                         '#t))))
                                                   g$ls/false$10950$5uPkq)
                                                 ((case-lambda
                                                    ((g$t$10952$5uPkq)
                                                     ((case-lambda
                                                        ((g$ls/false$10953$5uPkq)
                                                         (if (if g$ls/false$10953$5uPkq
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$c$10954$5uPkq
                                                                        g$ver*$10955$5uPkq)
                                                                      (eq? (g$syntax->datum$8410$5uPkq
                                                                             g$c$10954$5uPkq)
                                                                           'and)))
                                                                   g$ls/false$10953$5uPkq))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$c$10956$5uPkq
                                                                  g$ver*$10957$5uPkq)
                                                                ((case-lambda
                                                                   ((g$p*$10958$5uPkq)
                                                                    (case-lambda
                                                                      ((g$x$10959$5uPkq)
                                                                       (g$for-all$5757$5uPkq
                                                                         (case-lambda
                                                                           ((g$p$10960$5uPkq)
                                                                            (g$p$10960$5uPkq
                                                                              g$x$10959$5uPkq)))
                                                                         g$p*$10958$5uPkq)))))
                                                                 (g$map$5759$5uPkq
                                                                   g$version-pred$10925$5uPkq
                                                                   g$ver*$10957$5uPkq))))
                                                             g$ls/false$10953$5uPkq)
                                                           ((case-lambda
                                                              ((g$t$10961$5uPkq)
                                                               ((case-lambda
                                                                  ((g$ls/false$10962$5uPkq)
                                                                   (if (if g$ls/false$10962$5uPkq
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$c$10963$5uPkq
                                                                                  g$ver*$10964$5uPkq)
                                                                                (eq? (g$syntax->datum$8410$5uPkq
                                                                                       g$c$10963$5uPkq)
                                                                                     'or)))
                                                                             g$ls/false$10962$5uPkq))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$c$10965$5uPkq
                                                                            g$ver*$10966$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$p*$10967$5uPkq)
                                                                              (case-lambda
                                                                                ((g$x$10968$5uPkq)
                                                                                 (g$exists$5758$5uPkq
                                                                                   (case-lambda
                                                                                     ((g$p$10969$5uPkq)
                                                                                      (g$p$10969$5uPkq
                                                                                        g$x$10968$5uPkq)))
                                                                                   g$p*$10967$5uPkq)))))
                                                                           (g$map$5759$5uPkq
                                                                             g$version-pred$10925$5uPkq
                                                                             g$ver*$10966$5uPkq))))
                                                                       g$ls/false$10962$5uPkq)
                                                                     ((case-lambda
                                                                        ((g$t$10970$5uPkq)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10971$5uPkq)
                                                                             (if (if g$ls/false$10971$5uPkq
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$c$10972$5uPkq
                                                                                            g$ver$10973$5uPkq)
                                                                                          (eq? (g$syntax->datum$8410$5uPkq
                                                                                                 g$c$10972$5uPkq)
                                                                                               'not)))
                                                                                       g$ls/false$10971$5uPkq))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$c$10974$5uPkq
                                                                                      g$ver$10975$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$p$10976$5uPkq)
                                                                                        (case-lambda
                                                                                          ((g$x$10977$5uPkq)
                                                                                           (not (g$p$10976$5uPkq
                                                                                                  g$x$10977$5uPkq))))))
                                                                                     (g$version-pred$10925$5uPkq
                                                                                       g$ver$10975$5uPkq))))
                                                                                 g$ls/false$10971$5uPkq)
                                                                               ((case-lambda
                                                                                  ((g$t$10978$5uPkq)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10979$5uPkq)
                                                                                       (if g$ls/false$10979$5uPkq
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$sub*$10980$5uPkq)
                                                                                              ((case-lambda
                                                                                                 ((g$p*$10981$5uPkq)
                                                                                                  (case-lambda
                                                                                                    ((g$x$10982$5uPkq)
                                                                                                     ((letrec ((g$f$10983$5uPkq
                                                                                                                 (case-lambda
                                                                                                                   ((g$p*$10984$5uPkq
                                                                                                                      g$x$10985$5uPkq)
                                                                                                                    (if (null?
                                                                                                                          g$p*$10984$5uPkq)
                                                                                                                      '#t
                                                                                                                      (if (null?
                                                                                                                            g$x$10985$5uPkq)
                                                                                                                        '#f
                                                                                                                        (if ((car g$p*$10984$5uPkq)
                                                                                                                             (car g$x$10985$5uPkq))
                                                                                                                          (begin
                                                                                                                            '#f
                                                                                                                            (g$f$10983$5uPkq
                                                                                                                              (cdr g$p*$10984$5uPkq)
                                                                                                                              (cdr g$x$10985$5uPkq)))
                                                                                                                          '#f)))))))
                                                                                                        g$f$10983$5uPkq)
                                                                                                      g$p*$10981$5uPkq
                                                                                                      g$x$10982$5uPkq)))))
                                                                                               (g$map$5759$5uPkq
                                                                                                 g$subversion-pred$10924$5uPkq
                                                                                                 g$sub*$10980$5uPkq))))
                                                                                           g$ls/false$10979$5uPkq)
                                                                                         ((case-lambda
                                                                                            ((g$t$10986$5uPkq)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10987$5uPkq)
                                                                                                 (if g$ls/false$10987$5uPkq
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$syntax-violation$8407$5uPkq
                                                                                                          'import
                                                                                                          '"invalid version spec"
                                                                                                          g$spec$10922$5uPkq
                                                                                                          g$x*$10948$5uPkq)))
                                                                                                     g$ls/false$10987$5uPkq)
                                                                                                   (g$syntax-violation$8407$5uPkq
                                                                                                     '#f
                                                                                                     '"invalid syntax"
                                                                                                     g$t$10986$5uPkq))))
                                                                                              (g$syntax-dispatch$8296$5uPkq
                                                                                                g$t$10986$5uPkq
                                                                                                '_))))
                                                                                          g$t$10978$5uPkq))))
                                                                                    (g$syntax-dispatch$8296$5uPkq
                                                                                      g$t$10978$5uPkq
                                                                                      'each-any))))
                                                                                g$t$10970$5uPkq))))
                                                                          (g$syntax-dispatch$8296$5uPkq
                                                                            g$t$10970$5uPkq
                                                                            '(any any)))))
                                                                      g$t$10961$5uPkq))))
                                                                (g$syntax-dispatch$8296$5uPkq
                                                                  g$t$10961$5uPkq
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10952$5uPkq))))
                                                      (g$syntax-dispatch$8296$5uPkq
                                                        g$t$10952$5uPkq
                                                        '(any . each-any)))))
                                                  g$t$10949$5uPkq))))
                                            (g$syntax-dispatch$8296$5uPkq
                                              g$t$10949$5uPkq
                                              '()))))
                                        g$x*$10948$5uPkq)))))
                          ((letrec ((g$f$10926$5uPkq
                                      (case-lambda
                                        ((g$x$10927$5uPkq)
                                         ((case-lambda
                                            ((g$t$10928$5uPkq)
                                             ((case-lambda
                                                ((g$ls/false$10929$5uPkq)
                                                 (if g$ls/false$10929$5uPkq
                                                   (apply
                                                     (case-lambda
                                                       ((g$version-spec*$10930$5uPkq)
                                                        (values
                                                          '()
                                                          (g$version-pred$10925$5uPkq
                                                            g$version-spec*$10930$5uPkq))))
                                                     g$ls/false$10929$5uPkq)
                                                   ((case-lambda
                                                      ((g$t$10931$5uPkq)
                                                       ((case-lambda
                                                          ((g$ls/false$10932$5uPkq)
                                                           (if (if g$ls/false$10932$5uPkq
                                                                 (begin
                                                                   '#f
                                                                   (apply
                                                                     (case-lambda
                                                                       ((g$x$10933$5uPkq
                                                                          g$x*$10934$5uPkq)
                                                                        (g$idsyn?$10820$5uPkq
                                                                          g$x$10933$5uPkq)))
                                                                     g$ls/false$10932$5uPkq))
                                                                 '#f)
                                                             (apply
                                                               (case-lambda
                                                                 ((g$x$10935$5uPkq
                                                                    g$x*$10936$5uPkq)
                                                                  (call-with-values
                                                                    (case-lambda
                                                                      (()
                                                                       (g$f$10926$5uPkq
                                                                         g$x*$10936$5uPkq)))
                                                                    (case-lambda
                                                                      ((g$name$10939$5uPkq
                                                                         g$pred$10940$5uPkq)
                                                                       ((case-lambda
                                                                          ((g$pred$10941$5uPkq
                                                                             g$name$10942$5uPkq)
                                                                           (values
                                                                             (cons
                                                                               (g$syntax->datum$8410$5uPkq
                                                                                 g$x$10935$5uPkq)
                                                                               g$name$10942$5uPkq)
                                                                             g$pred$10941$5uPkq)))
                                                                        g$pred$10940$5uPkq
                                                                        g$name$10939$5uPkq))))))
                                                               g$ls/false$10932$5uPkq)
                                                             ((case-lambda
                                                                ((g$t$10943$5uPkq)
                                                                 ((case-lambda
                                                                    ((g$ls/false$10944$5uPkq)
                                                                     (if g$ls/false$10944$5uPkq
                                                                       (apply
                                                                         (case-lambda
                                                                           (()
                                                                            (values
                                                                              '()
                                                                              (case-lambda
                                                                                ((g$x$10945$5uPkq)
                                                                                 '#t)))))
                                                                         g$ls/false$10944$5uPkq)
                                                                       ((case-lambda
                                                                          ((g$t$10946$5uPkq)
                                                                           ((case-lambda
                                                                              ((g$ls/false$10947$5uPkq)
                                                                               (if g$ls/false$10947$5uPkq
                                                                                 (apply
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$syntax-violation$8407$5uPkq
                                                                                        '#f
                                                                                        '"invalid import spec"
                                                                                        g$spec$10922$5uPkq)))
                                                                                   g$ls/false$10947$5uPkq)
                                                                                 (g$syntax-violation$8407$5uPkq
                                                                                   '#f
                                                                                   '"invalid syntax"
                                                                                   g$t$10946$5uPkq))))
                                                                            (g$syntax-dispatch$8296$5uPkq
                                                                              g$t$10946$5uPkq
                                                                              '_))))
                                                                        g$t$10943$5uPkq))))
                                                                  (g$syntax-dispatch$8296$5uPkq
                                                                    g$t$10943$5uPkq
                                                                    '()))))
                                                              g$t$10931$5uPkq))))
                                                        (g$syntax-dispatch$8296$5uPkq
                                                          g$t$10931$5uPkq
                                                          '(any . any)))))
                                                    g$t$10928$5uPkq))))
                                              (g$syntax-dispatch$8296$5uPkq
                                                g$t$10928$5uPkq
                                                '(each-any)))))
                                          g$x$10927$5uPkq)))))
                             g$f$10926$5uPkq)
                           g$spec$10922$5uPkq)))))
                   (g$import-library$10828$5uPkq
                     (case-lambda
                       ((g$spec*$10914$5uPkq)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$parse-library-name$10827$5uPkq
                               g$spec*$10914$5uPkq)))
                          (case-lambda
                            ((g$name$10917$5uPkq g$pred$10918$5uPkq)
                             ((case-lambda
                                ((g$pred$10919$5uPkq g$name$10920$5uPkq)
                                 (begin
                                   (if (null? g$name$10920$5uPkq)
                                     (g$syntax-violation$8407$5uPkq
                                       'import
                                       '"empty library name"
                                       g$spec*$10914$5uPkq)
                                     (void))
                                   ((case-lambda
                                      ((g$lib$10921$5uPkq)
                                       (begin
                                         (if (not g$lib$10921$5uPkq)
                                           (g$syntax-violation$8407$5uPkq
                                             'import
                                             '"cannot find library with required name"
                                             g$name$10920$5uPkq)
                                           (void))
                                         (if (not (g$pred$10919$5uPkq
                                                    (g$library-version$7781$5uPkq
                                                      g$lib$10921$5uPkq)))
                                           (g$syntax-violation$8407$5uPkq
                                             'import
                                             '"library does not satisfy version specification"
                                             g$spec*$10914$5uPkq
                                             g$lib$10921$5uPkq)
                                           (void))
                                         ((g$imp-collector$8350$5uPkq)
                                          g$lib$10921$5uPkq)
                                         (g$library-subst$7785$5uPkq
                                           g$lib$10921$5uPkq))))
                                    (g$find-library-by-name$7821$5uPkq
                                      g$name$10920$5uPkq)))))
                              g$pred$10918$5uPkq
                              g$name$10917$5uPkq)))))))
                   (g$get-import$10829$5uPkq
                     (case-lambda
                       ((g$spec$10843$5uPkq)
                        ((case-lambda
                           ((g$t$10844$5uPkq)
                            ((case-lambda
                               ((g$ls/false$10845$5uPkq)
                                (if (if g$ls/false$10845$5uPkq
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$x$10846$5uPkq g$x*$10847$5uPkq)
                                             (not (g$memq$5751$5uPkq
                                                    (g$syntax->datum$8410$5uPkq
                                                      g$x$10846$5uPkq)
                                                    '(for rename
                                                          except
                                                          only
                                                          prefix
                                                          library)))))
                                          g$ls/false$10845$5uPkq))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$x$10848$5uPkq g$x*$10849$5uPkq)
                                       (g$import-library$10828$5uPkq
                                         (cons
                                           g$x$10848$5uPkq
                                           g$x*$10849$5uPkq))))
                                    g$ls/false$10845$5uPkq)
                                  ((case-lambda
                                     ((g$t$10850$5uPkq)
                                      ((case-lambda
                                         ((g$ls/false$10851$5uPkq)
                                          (if (if g$ls/false$10851$5uPkq
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$rename$10852$5uPkq
                                                         g$isp$10853$5uPkq
                                                         g$old*$10854$5uPkq
                                                         g$new*$10855$5uPkq)
                                                       (if (eq? (g$syntax->datum$8410$5uPkq
                                                                  g$rename$10852$5uPkq)
                                                                'rename)
                                                         (if (g$for-all$5757$5uPkq
                                                               g$idsyn?$10820$5uPkq
                                                               g$old*$10854$5uPkq)
                                                           (begin
                                                             '#f
                                                             (g$for-all$5757$5uPkq
                                                               g$idsyn?$10820$5uPkq
                                                               g$new*$10855$5uPkq))
                                                           '#f)
                                                         '#f)))
                                                    g$ls/false$10851$5uPkq))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$rename$10856$5uPkq
                                                   g$isp$10857$5uPkq
                                                   g$old*$10858$5uPkq
                                                   g$new*$10859$5uPkq)
                                                 ((case-lambda
                                                    ((g$subst$10860$5uPkq
                                                       g$old*$10861$5uPkq
                                                       g$new*$10862$5uPkq)
                                                     ((case-lambda
                                                        ((g$old-label*$10863$5uPkq)
                                                         ((case-lambda
                                                            ((g$subst$10864$5uPkq)
                                                             (g$merge-substs$10822$5uPkq
                                                               (g$map$5759$5uPkq
                                                                 cons
                                                                 g$new*$10862$5uPkq
                                                                 g$old-label*$10863$5uPkq)
                                                               g$subst$10864$5uPkq)))
                                                          (g$rem*$10825$5uPkq
                                                            g$old*$10861$5uPkq
                                                            g$subst$10860$5uPkq))))
                                                      (g$find*$10824$5uPkq
                                                        g$old*$10861$5uPkq
                                                        g$subst$10860$5uPkq))))
                                                  (g$get-import$10829$5uPkq
                                                    g$isp$10857$5uPkq)
                                                  (g$map$5759$5uPkq
                                                    g$syntax->datum$8410$5uPkq
                                                    g$old*$10858$5uPkq)
                                                  (g$map$5759$5uPkq
                                                    g$syntax->datum$8410$5uPkq
                                                    g$new*$10859$5uPkq))))
                                              g$ls/false$10851$5uPkq)
                                            ((case-lambda
                                               ((g$t$10865$5uPkq)
                                                ((case-lambda
                                                   ((g$ls/false$10866$5uPkq)
                                                    (if (if g$ls/false$10866$5uPkq
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$except$10867$5uPkq
                                                                   g$isp$10868$5uPkq
                                                                   g$sym*$10869$5uPkq)
                                                                 (if (eq? (g$syntax->datum$8410$5uPkq
                                                                            g$except$10867$5uPkq)
                                                                          'except)
                                                                   (begin
                                                                     '#f
                                                                     (g$for-all$5757$5uPkq
                                                                       g$idsyn?$10820$5uPkq
                                                                       g$sym*$10869$5uPkq))
                                                                   '#f)))
                                                              g$ls/false$10866$5uPkq))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$except$10870$5uPkq
                                                             g$isp$10871$5uPkq
                                                             g$sym*$10872$5uPkq)
                                                           ((case-lambda
                                                              ((g$subst$10873$5uPkq)
                                                               (g$rem*$10825$5uPkq
                                                                 (g$map$5759$5uPkq
                                                                   g$syntax->datum$8410$5uPkq
                                                                   g$sym*$10872$5uPkq)
                                                                 g$subst$10873$5uPkq)))
                                                            (g$get-import$10829$5uPkq
                                                              g$isp$10871$5uPkq))))
                                                        g$ls/false$10866$5uPkq)
                                                      ((case-lambda
                                                         ((g$t$10874$5uPkq)
                                                          ((case-lambda
                                                             ((g$ls/false$10875$5uPkq)
                                                              (if (if g$ls/false$10875$5uPkq
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$only$10876$5uPkq
                                                                             g$isp$10877$5uPkq
                                                                             g$sym*$10878$5uPkq)
                                                                           (if (eq? (g$syntax->datum$8410$5uPkq
                                                                                      g$only$10876$5uPkq)
                                                                                    'only)
                                                                             (begin
                                                                               '#f
                                                                               (g$for-all$5757$5uPkq
                                                                                 g$idsyn?$10820$5uPkq
                                                                                 g$sym*$10878$5uPkq))
                                                                             '#f)))
                                                                        g$ls/false$10875$5uPkq))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$only$10879$5uPkq
                                                                       g$isp$10880$5uPkq
                                                                       g$sym*$10881$5uPkq)
                                                                     ((case-lambda
                                                                        ((g$subst$10882$5uPkq
                                                                           g$sym*$10883$5uPkq)
                                                                         ((case-lambda
                                                                            ((g$sym*$10884$5uPkq)
                                                                             ((case-lambda
                                                                                ((g$lab*$10885$5uPkq)
                                                                                 (g$map$5759$5uPkq
                                                                                   cons
                                                                                   g$sym*$10884$5uPkq
                                                                                   g$lab*$10885$5uPkq)))
                                                                              (g$find*$10824$5uPkq
                                                                                g$sym*$10884$5uPkq
                                                                                g$subst$10882$5uPkq))))
                                                                          (g$remove-dups$10826$5uPkq
                                                                            g$sym*$10883$5uPkq))))
                                                                      (g$get-import$10829$5uPkq
                                                                        g$isp$10880$5uPkq)
                                                                      (g$map$5759$5uPkq
                                                                        g$syntax->datum$8410$5uPkq
                                                                        g$sym*$10881$5uPkq))))
                                                                  g$ls/false$10875$5uPkq)
                                                                ((case-lambda
                                                                   ((g$t$10886$5uPkq)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10887$5uPkq)
                                                                        (if (if g$ls/false$10887$5uPkq
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$prefix$10888$5uPkq
                                                                                       g$isp$10889$5uPkq
                                                                                       g$p$10890$5uPkq)
                                                                                     (if (eq? (g$syntax->datum$8410$5uPkq
                                                                                                g$prefix$10888$5uPkq)
                                                                                              'prefix)
                                                                                       (begin
                                                                                         '#f
                                                                                         (g$idsyn?$10820$5uPkq
                                                                                           g$p$10890$5uPkq))
                                                                                       '#f)))
                                                                                  g$ls/false$10887$5uPkq))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$prefix$10891$5uPkq
                                                                                 g$isp$10892$5uPkq
                                                                                 g$p$10893$5uPkq)
                                                                               ((case-lambda
                                                                                  ((g$subst$10894$5uPkq
                                                                                     g$prefix$10895$5uPkq)
                                                                                   (g$map$5759$5uPkq
                                                                                     (case-lambda
                                                                                       ((g$x$10896$5uPkq)
                                                                                        (cons
                                                                                          (string->symbol
                                                                                            (string-append
                                                                                              g$prefix$10895$5uPkq
                                                                                              (symbol->string
                                                                                                (car g$x$10896$5uPkq))))
                                                                                          (cdr g$x$10896$5uPkq))))
                                                                                     g$subst$10894$5uPkq)))
                                                                                (g$get-import$10829$5uPkq
                                                                                  g$isp$10892$5uPkq)
                                                                                (symbol->string
                                                                                  (g$syntax->datum$8410$5uPkq
                                                                                    g$p$10893$5uPkq)))))
                                                                            g$ls/false$10887$5uPkq)
                                                                          ((case-lambda
                                                                             ((g$t$10897$5uPkq)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10898$5uPkq)
                                                                                  (if (if g$ls/false$10898$5uPkq
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$library$10899$5uPkq
                                                                                                 g$spec*$10900$5uPkq)
                                                                                               (eq? (g$syntax->datum$8410$5uPkq
                                                                                                      g$library$10899$5uPkq)
                                                                                                    'library)))
                                                                                            g$ls/false$10898$5uPkq))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$library$10901$5uPkq
                                                                                           g$spec*$10902$5uPkq)
                                                                                         (g$import-library$10828$5uPkq
                                                                                           g$spec*$10902$5uPkq)))
                                                                                      g$ls/false$10898$5uPkq)
                                                                                    ((case-lambda
                                                                                       ((g$t$10903$5uPkq)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10904$5uPkq)
                                                                                            (if (if g$ls/false$10904$5uPkq
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$for$10905$5uPkq
                                                                                                           g$isp$10906$5uPkq
                                                                                                           g$rest$10907$5uPkq)
                                                                                                         (eq? (g$syntax->datum$8410$5uPkq
                                                                                                                g$for$10905$5uPkq)
                                                                                                              'for)))
                                                                                                      g$ls/false$10904$5uPkq))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$for$10908$5uPkq
                                                                                                     g$isp$10909$5uPkq
                                                                                                     g$rest$10910$5uPkq)
                                                                                                   (g$get-import$10829$5uPkq
                                                                                                     g$isp$10909$5uPkq)))
                                                                                                g$ls/false$10904$5uPkq)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10911$5uPkq)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10912$5uPkq)
                                                                                                      (if g$ls/false$10912$5uPkq
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$spec$10913$5uPkq)
                                                                                                             (g$syntax-violation$8407$5uPkq
                                                                                                               'import
                                                                                                               '"invalid import spec"
                                                                                                               g$spec$10913$5uPkq)))
                                                                                                          g$ls/false$10912$5uPkq)
                                                                                                        (g$syntax-violation$8407$5uPkq
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$10911$5uPkq))))
                                                                                                   (g$syntax-dispatch$8296$5uPkq
                                                                                                     g$t$10911$5uPkq
                                                                                                     'any))))
                                                                                               g$t$10903$5uPkq))))
                                                                                         (g$syntax-dispatch$8296$5uPkq
                                                                                           g$t$10903$5uPkq
                                                                                           '(any any
                                                                                                 .
                                                                                                 any)))))
                                                                                     g$t$10897$5uPkq))))
                                                                               (g$syntax-dispatch$8296$5uPkq
                                                                                 g$t$10897$5uPkq
                                                                                 '(any each-any)))))
                                                                           g$t$10886$5uPkq))))
                                                                     (g$syntax-dispatch$8296$5uPkq
                                                                       g$t$10886$5uPkq
                                                                       '(any any
                                                                             any)))))
                                                                 g$t$10874$5uPkq))))
                                                           (g$syntax-dispatch$8296$5uPkq
                                                             g$t$10874$5uPkq
                                                             '(any any
                                                                   .
                                                                   each-any)))))
                                                       g$t$10865$5uPkq))))
                                                 (g$syntax-dispatch$8296$5uPkq
                                                   g$t$10865$5uPkq
                                                   '(any any . each-any)))))
                                             g$t$10850$5uPkq))))
                                       (g$syntax-dispatch$8296$5uPkq
                                         g$t$10850$5uPkq
                                         '(any any . #(each (any any)))))))
                                   g$t$10844$5uPkq))))
                             (g$syntax-dispatch$8296$5uPkq
                               g$t$10844$5uPkq
                               '(any . each-any)))))
                         g$spec$10843$5uPkq))))
                   (g$add-imports!$10830$5uPkq
                     (case-lambda
                       ((g$imp$10835$5uPkq g$h$10836$5uPkq)
                        ((case-lambda
                           ((g$subst$10837$5uPkq)
                            (g$for-each$5760$5uPkq
                              (case-lambda
                                ((g$x$10838$5uPkq)
                                 ((case-lambda
                                    ((g$name$10839$5uPkq g$label$10840$5uPkq)
                                     ((case-lambda
                                        ((g$t$10841$5uPkq)
                                         (if g$t$10841$5uPkq
                                           ((case-lambda
                                              ((g$l$10842$5uPkq)
                                               (if (not (eq? g$l$10842$5uPkq
                                                             g$label$10840$5uPkq))
                                                 (g$dup-error$10821$5uPkq
                                                   g$name$10839$5uPkq)
                                                 (void))))
                                            g$t$10841$5uPkq)
                                           (g$hashtable-set!$6192$5uPkq
                                             g$h$10836$5uPkq
                                             g$name$10839$5uPkq
                                             g$label$10840$5uPkq))))
                                      (g$hashtable-ref$6191$5uPkq
                                        g$h$10836$5uPkq
                                        g$name$10839$5uPkq
                                        '#f))))
                                  (car g$x$10838$5uPkq)
                                  (cdr g$x$10838$5uPkq))))
                              g$subst$10837$5uPkq)))
                         (g$get-import$10829$5uPkq g$imp$10835$5uPkq))))))
           (case-lambda
             ((g$imp*$10831$5uPkq)
              ((letrec ((g$f$10832$5uPkq
                          (case-lambda
                            ((g$imp*$10833$5uPkq g$h$10834$5uPkq)
                             (if (null? g$imp*$10833$5uPkq)
                               (hashtable-entries g$h$10834$5uPkq)
                               (begin
                                 (g$add-imports!$10830$5uPkq
                                   (car g$imp*$10833$5uPkq)
                                   g$h$10834$5uPkq)
                                 (g$f$10832$5uPkq
                                   (cdr g$imp*$10833$5uPkq)
                                   g$h$10834$5uPkq)))))))
                 g$f$10832$5uPkq)
               g$imp*$10831$5uPkq
               (g$make-eq-hashtable$6188$5uPkq)))))))))
   (g$make-top-rib$8346$5uPkq
     g$make-top-rib$11837$5uPkq
     (case-lambda
       ((g$names$11082$5uPkq g$labels$11083$5uPkq)
        ((case-lambda
           ((g$rib$11084$5uPkq)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$11085$5uPkq g$label$11086$5uPkq)
                   (begin
                     (if (not (symbol? g$name$11085$5uPkq))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$11085$5uPkq)
                       (void))
                     (g$extend-rib/nc!$7982$5uPkq
                       g$rib$11084$5uPkq
                       (g$make-stx$7991$5uPkq
                         g$name$11085$5uPkq
                         g$top-mark*$7955$5uPkq
                         '()
                         '())
                       g$label$11086$5uPkq))))
                g$names$11082$5uPkq
                g$labels$11083$5uPkq)
              g$rib$11084$5uPkq)))
         (g$make-cache-rib$7979$5uPkq)))))
   (g$make-collector$8347$5uPkq
     g$make-collector$11838$5uPkq
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$11087$5uPkq)
            (case-lambda
              (() g$ls$11087$5uPkq)
              ((g$x$11088$5uPkq)
               (set! g$ls$11087$5uPkq
                 (g$set-cons$7952$5uPkq g$x$11088$5uPkq g$ls$11087$5uPkq))))))
         '()))))
   (g$inv-collector$8348$5uPkq
     g$inv-collector$11839$5uPkq
     (g$make-parameter$7290$5uPkq
       (case-lambda
         (g$args$11089$5uPkq
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11090$5uPkq)
          (begin
            (if (not (procedure? g$x$11090$5uPkq))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$11090$5uPkq)
              (void))
            g$x$11090$5uPkq)))))
   (g$vis-collector$8349$5uPkq
     g$vis-collector$11840$5uPkq
     (g$make-parameter$7290$5uPkq
       (case-lambda
         (g$args$11091$5uPkq
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11092$5uPkq)
          (begin
            (if (not (procedure? g$x$11092$5uPkq))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$11092$5uPkq)
              (void))
            g$x$11092$5uPkq)))))
   (g$imp-collector$8350$5uPkq
     g$imp-collector$11841$5uPkq
     (g$make-parameter$7290$5uPkq
       (case-lambda
         (g$args$11093$5uPkq
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11094$5uPkq)
          (begin
            (if (not (procedure? g$x$11094$5uPkq))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$11094$5uPkq)
              (void))
            g$x$11094$5uPkq)))))
   (g$chi-library-internal$8351$5uPkq
     g$chi-library-internal$11842$5uPkq
     (case-lambda
       ((g$e*$11095$5uPkq g$rib$11096$5uPkq g$top?$11097$5uPkq)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8340$5uPkq
               g$e*$11095$5uPkq
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$11096$5uPkq
               g$top?$11097$5uPkq)))
          (case-lambda
            ((g$e*$11106$5uPkq
               g$r$11107$5uPkq
               g$mr$11108$5uPkq
               g$lex*$11109$5uPkq
               g$rhs*$11110$5uPkq
               g$mod**$11111$5uPkq
               g$_kwd*$11112$5uPkq
               g$exp*$11113$5uPkq)
             ((case-lambda
                ((g$exp*$11114$5uPkq
                   g$_kwd*$11115$5uPkq
                   g$mod**$11116$5uPkq
                   g$rhs*$11117$5uPkq
                   g$lex*$11118$5uPkq
                   g$mr$11119$5uPkq
                   g$r$11120$5uPkq
                   g$e*$11121$5uPkq)
                 (values
                   (append
                     (apply append (reverse g$mod**$11116$5uPkq))
                     g$e*$11121$5uPkq)
                   g$r$11120$5uPkq
                   g$mr$11119$5uPkq
                   (reverse g$lex*$11118$5uPkq)
                   (reverse g$rhs*$11117$5uPkq)
                   g$exp*$11114$5uPkq)))
              g$exp*$11113$5uPkq
              g$_kwd*$11112$5uPkq
              g$mod**$11111$5uPkq
              g$rhs*$11110$5uPkq
              g$lex*$11109$5uPkq
              g$mr$11108$5uPkq
              g$r$11107$5uPkq
              g$e*$11106$5uPkq)))))))
   (g$chi-interaction-expr$8352$5uPkq
     g$chi-interaction-expr$11843$5uPkq
     (case-lambda
       ((g$e$11122$5uPkq g$rib$11123$5uPkq g$r$11124$5uPkq)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8340$5uPkq
               (list g$e$11122$5uPkq)
               g$r$11124$5uPkq
               g$r$11124$5uPkq
               '()
               '()
               '()
               '()
               '()
               g$rib$11123$5uPkq
               '#t)))
          (case-lambda
            ((g$e*$11133$5uPkq
               g$r$11134$5uPkq
               g$mr$11135$5uPkq
               g$lex*$11136$5uPkq
               g$rhs*$11137$5uPkq
               g$mod**$11138$5uPkq
               g$_kwd*$11139$5uPkq
               g$_exp*$11140$5uPkq)
             ((case-lambda
                ((g$_exp*$11141$5uPkq
                   g$_kwd*$11142$5uPkq
                   g$mod**$11143$5uPkq
                   g$rhs*$11144$5uPkq
                   g$lex*$11145$5uPkq
                   g$mr$11146$5uPkq
                   g$r$11147$5uPkq
                   g$e*$11148$5uPkq)
                 ((case-lambda
                    ((g$e*$11149$5uPkq)
                     ((case-lambda
                        ((g$e$11150$5uPkq)
                         (values g$e$11150$5uPkq g$r$11147$5uPkq)))
                      (if (null? g$e*$11149$5uPkq)
                        (g$build-void$7948$5uPkq)
                        (if (null? (cdr g$e*$11149$5uPkq))
                          (car g$e*$11149$5uPkq)
                          (g$build-sequence$7947$5uPkq
                            '#f
                            g$e*$11149$5uPkq))))))
                  (g$expand-interaction-rhs*/init*$8321$5uPkq
                    (reverse g$lex*$11145$5uPkq)
                    (reverse g$rhs*$11144$5uPkq)
                    (append
                      (apply append (reverse g$mod**$11143$5uPkq))
                      g$e*$11148$5uPkq)
                    g$r$11147$5uPkq
                    g$mr$11146$5uPkq))))
              g$_exp*$11140$5uPkq
              g$_kwd*$11139$5uPkq
              g$mod**$11138$5uPkq
              g$rhs*$11137$5uPkq
              g$lex*$11136$5uPkq
              g$mr$11135$5uPkq
              g$r$11134$5uPkq
              g$e*$11133$5uPkq)))))))
   (g$library-body-expander$8353$5uPkq
     g$library-body-expander$11844$5uPkq
     (case-lambda
       ((g$name$11151$5uPkq
          g$main-exp*$11152$5uPkq
          g$imp*$11153$5uPkq
          g$b*$11154$5uPkq
          g$top?$11155$5uPkq)
        (letrec* ((g$itc$11156$5uPkq (g$make-collector$8347$5uPkq)))
          ((case-lambda
             ((g$imp-collector$11161$5uPkq
                g$top-level-context$11162$5uPkq
                g$imp-collector$11163$5uPkq
                g$top-level-context$11164$5uPkq)
              ((case-lambda
                 ((g$swap$11165$5uPkq)
                  (dynamic-wind
                    g$swap$11165$5uPkq
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$8345$5uPkq
                              g$imp*$11153$5uPkq)))
                         (case-lambda
                           ((g$subst-names$11168$5uPkq
                              g$subst-labels$11169$5uPkq)
                            ((case-lambda
                               ((g$subst-labels$11170$5uPkq
                                  g$subst-names$11171$5uPkq)
                                ((case-lambda
                                   ((g$rib$11172$5uPkq)
                                    (letrec* ((g$wrap$11173$5uPkq
                                                (case-lambda
                                                  ((g$x$11235$5uPkq)
                                                   (g$make-stx$7991$5uPkq
                                                     g$x$11235$5uPkq
                                                     g$top-mark*$7955$5uPkq
                                                     (list g$rib$11172$5uPkq)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$11174$5uPkq
                                            g$main-exp*$11175$5uPkq
                                            g$rtc$11176$5uPkq
                                            g$vtc$11177$5uPkq)
                                          ((case-lambda
                                             ((g$inv-collector$11182$5uPkq
                                                g$vis-collector$11183$5uPkq
                                                g$inv-collector$11184$5uPkq
                                                g$vis-collector$11185$5uPkq)
                                              ((case-lambda
                                                 ((g$swap$11186$5uPkq)
                                                  (dynamic-wind
                                                    g$swap$11186$5uPkq
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$8351$5uPkq
                                                              g$b*$11174$5uPkq
                                                              g$rib$11172$5uPkq
                                                              g$top?$11155$5uPkq)))
                                                         (case-lambda
                                                           ((g$init*$11193$5uPkq
                                                              g$r$11194$5uPkq
                                                              g$mr$11195$5uPkq
                                                              g$lex*$11196$5uPkq
                                                              g$rhs*$11197$5uPkq
                                                              g$internal-exp*$11198$5uPkq)
                                                            ((case-lambda
                                                               ((g$internal-exp*$11199$5uPkq
                                                                  g$rhs*$11200$5uPkq
                                                                  g$lex*$11201$5uPkq
                                                                  g$mr$11202$5uPkq
                                                                  g$r$11203$5uPkq
                                                                  g$init*$11204$5uPkq)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$8342$5uPkq
                                                                       (append
                                                                         g$main-exp*$11175$5uPkq
                                                                         g$internal-exp*$11199$5uPkq))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$11207$5uPkq
                                                                       g$exp-id*$11208$5uPkq)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$11209$5uPkq
                                                                           g$exp-name*$11210$5uPkq)
                                                                         (begin
                                                                           (g$seal-rib!$7984$5uPkq
                                                                             g$rib$11172$5uPkq)
                                                                           ((case-lambda
                                                                              ((g$init*$11211$5uPkq)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$11212$5uPkq)
                                                                                   (begin
                                                                                     (g$unseal-rib!$7985$5uPkq
                                                                                       g$rib$11172$5uPkq)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$11213$5uPkq
                                                                                           g$export-subst$11214$5uPkq)
                                                                                         (letrec* ((g$errstr$11215$5uPkq
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$8396$5uPkq
                                                                                                  g$lex*$11201$5uPkq
                                                                                                  g$loc*$11213$5uPkq
                                                                                                  g$r$11203$5uPkq)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$11219$5uPkq
                                                                                                  g$global*$11220$5uPkq
                                                                                                  g$macro*$11221$5uPkq)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$11222$5uPkq
                                                                                                      g$global*$11223$5uPkq
                                                                                                      g$export-env$11224$5uPkq)
                                                                                                    (begin
                                                                                                      (g$for-each$5760$5uPkq
                                                                                                        (case-lambda
                                                                                                          ((g$s$11225$5uPkq)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$11226$5uPkq
                                                                                                                 g$label$11227$5uPkq)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$11228$5uPkq)
                                                                                                                   (if g$p$11228$5uPkq
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$11229$5uPkq)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$11230$5uPkq)
                                                                                                                             (if (eq? g$type$11230$5uPkq
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$8407$5uPkq
                                                                                                                                 'export
                                                                                                                                 g$errstr$11215$5uPkq
                                                                                                                                 g$name$11226$5uPkq)
                                                                                                                               (void))))
                                                                                                                          (car g$b$11229$5uPkq))))
                                                                                                                      (cdr g$p$11228$5uPkq))
                                                                                                                     (void))))
                                                                                                                (g$assq$5747$5uPkq
                                                                                                                  g$label$11227$5uPkq
                                                                                                                  g$export-env$11224$5uPkq))))
                                                                                                            (car g$s$11225$5uPkq)
                                                                                                            (cdr g$s$11225$5uPkq))))
                                                                                                        g$export-subst$11214$5uPkq)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$11231$5uPkq
                                                                                                            g$invoke-definitions$11232$5uPkq)
                                                                                                          (values
                                                                                                            (g$itc$11156$5uPkq)
                                                                                                            (g$rtc$11176$5uPkq)
                                                                                                            (g$vtc$11177$5uPkq)
                                                                                                            (g$build-sequence$7947$5uPkq
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$11232$5uPkq
                                                                                                                (list
                                                                                                                  g$invoke-body$11231$5uPkq)))
                                                                                                            g$macro*$11222$5uPkq
                                                                                                            g$export-subst$11214$5uPkq
                                                                                                            g$export-env$11224$5uPkq)))
                                                                                                       (g$build-library-letrec*$7951$5uPkq
                                                                                                         '#f
                                                                                                         g$name$11151$5uPkq
                                                                                                         g$lex*$11201$5uPkq
                                                                                                         g$loc*$11213$5uPkq
                                                                                                         g$rhs*$11212$5uPkq
                                                                                                         (if (null?
                                                                                                               g$init*$11211$5uPkq)
                                                                                                           (g$build-void$7948$5uPkq)
                                                                                                           (g$build-sequence$7947$5uPkq
                                                                                                             '#f
                                                                                                             g$init*$11211$5uPkq)))
                                                                                                       (g$map$5759$5uPkq
                                                                                                         g$build-global-define$7943$5uPkq
                                                                                                         (g$map$5759$5uPkq
                                                                                                           cdr
                                                                                                           g$global*$11223$5uPkq))))))
                                                                                                 g$macro*$11221$5uPkq
                                                                                                 g$global*$11220$5uPkq
                                                                                                 g$export-env$11219$5uPkq)))))))
                                                                                      (g$map$5759$5uPkq
                                                                                        g$gen-global$7958$5uPkq
                                                                                        g$lex*$11201$5uPkq)
                                                                                      (g$make-export-subst$8395$5uPkq
                                                                                        g$exp-name*$11210$5uPkq
                                                                                        g$exp-id*$11209$5uPkq)))))
                                                                                (g$chi-rhs*$8322$5uPkq
                                                                                  g$rhs*$11200$5uPkq
                                                                                  g$r$11203$5uPkq
                                                                                  g$mr$11202$5uPkq))))
                                                                            (g$chi-expr*$8312$5uPkq
                                                                              g$init*$11204$5uPkq
                                                                              g$r$11203$5uPkq
                                                                              g$mr$11202$5uPkq)))))
                                                                      g$exp-id*$11208$5uPkq
                                                                      g$exp-name*$11207$5uPkq))))))
                                                             g$internal-exp*$11198$5uPkq
                                                             g$rhs*$11197$5uPkq
                                                             g$lex*$11196$5uPkq
                                                             g$mr$11195$5uPkq
                                                             g$r$11194$5uPkq
                                                             g$init*$11193$5uPkq))))))
                                                    g$swap$11186$5uPkq)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$11233$5uPkq)
                                                        (begin
                                                          (g$inv-collector$11182$5uPkq
                                                            g$inv-collector$11184$5uPkq)
                                                          (set! g$inv-collector$11184$5uPkq
                                                            g$t$11233$5uPkq))))
                                                     (g$inv-collector$11182$5uPkq))
                                                    ((case-lambda
                                                       ((g$t$11234$5uPkq)
                                                        (begin
                                                          (g$vis-collector$11183$5uPkq
                                                            g$vis-collector$11185$5uPkq)
                                                          (set! g$vis-collector$11185$5uPkq
                                                            g$t$11234$5uPkq))))
                                                     (g$vis-collector$11183$5uPkq))))))))
                                           g$inv-collector$8348$5uPkq
                                           g$vis-collector$8349$5uPkq
                                           g$rtc$11176$5uPkq
                                           g$vtc$11177$5uPkq)))
                                       (g$map$5759$5uPkq
                                         g$wrap$11173$5uPkq
                                         g$b*$11154$5uPkq)
                                       (g$map$5759$5uPkq
                                         g$wrap$11173$5uPkq
                                         g$main-exp*$11152$5uPkq)
                                       (g$make-collector$8347$5uPkq)
                                       (g$make-collector$8347$5uPkq)))))
                                 (g$make-top-rib$8346$5uPkq
                                   g$subst-names$11171$5uPkq
                                   g$subst-labels$11170$5uPkq))))
                             g$subst-labels$11169$5uPkq
                             g$subst-names$11168$5uPkq))))))
                    g$swap$11165$5uPkq)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$11236$5uPkq)
                        (begin
                          (g$imp-collector$11161$5uPkq
                            g$imp-collector$11163$5uPkq)
                          (set! g$imp-collector$11163$5uPkq g$t$11236$5uPkq))))
                     (g$imp-collector$11161$5uPkq))
                    ((case-lambda
                       ((g$t$11237$5uPkq)
                        (begin
                          (g$top-level-context$11162$5uPkq
                            g$top-level-context$11164$5uPkq)
                          (set! g$top-level-context$11164$5uPkq
                            g$t$11237$5uPkq))))
                     (g$top-level-context$11162$5uPkq))))))))
           g$imp-collector$8350$5uPkq
           g$top-level-context$8414$5uPkq
           g$itc$11156$5uPkq
           '#f)))))
   (g$core-library-expander$8354$5uPkq
     g$core-library-expander$11845$5uPkq
     (case-lambda
       ((g$e$11238$5uPkq g$verify-name$11239$5uPkq)
        (call-with-values
          (case-lambda (() (g$parse-library$8344$5uPkq g$e$11238$5uPkq)))
          (case-lambda
            ((g$name*$11244$5uPkq
               g$exp*$11245$5uPkq
               g$imp*$11246$5uPkq
               g$b*$11247$5uPkq)
             ((case-lambda
                ((g$b*$11248$5uPkq
                   g$imp*$11249$5uPkq
                   g$exp*$11250$5uPkq
                   g$name*$11251$5uPkq)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$8343$5uPkq g$name*$11251$5uPkq)))
                   (case-lambda
                     ((g$name$11254$5uPkq g$ver$11255$5uPkq)
                      ((case-lambda
                         ((g$ver$11256$5uPkq g$name$11257$5uPkq)
                          (begin
                            (g$verify-name$11239$5uPkq g$name$11257$5uPkq)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8353$5uPkq
                                   g$name$11257$5uPkq
                                   g$exp*$11250$5uPkq
                                   g$imp*$11249$5uPkq
                                   g$b*$11248$5uPkq
                                   '#f)))
                              (case-lambda
                                ((g$imp*$11265$5uPkq
                                   g$invoke-req*$11266$5uPkq
                                   g$visit-req*$11267$5uPkq
                                   g$invoke-code$11268$5uPkq
                                   g$visit-code$11269$5uPkq
                                   g$export-subst$11270$5uPkq
                                   g$export-env$11271$5uPkq)
                                 ((case-lambda
                                    ((g$export-env$11272$5uPkq
                                       g$export-subst$11273$5uPkq
                                       g$visit-code$11274$5uPkq
                                       g$invoke-code$11275$5uPkq
                                       g$visit-req*$11276$5uPkq
                                       g$invoke-req*$11277$5uPkq
                                       g$imp*$11278$5uPkq)
                                     (values
                                       g$name$11257$5uPkq
                                       g$ver$11256$5uPkq
                                       g$imp*$11278$5uPkq
                                       g$invoke-req*$11277$5uPkq
                                       g$visit-req*$11276$5uPkq
                                       g$invoke-code$11275$5uPkq
                                       g$visit-code$11274$5uPkq
                                       g$export-subst$11273$5uPkq
                                       g$export-env$11272$5uPkq)))
                                  g$export-env$11271$5uPkq
                                  g$export-subst$11270$5uPkq
                                  g$visit-code$11269$5uPkq
                                  g$invoke-code$11268$5uPkq
                                  g$visit-req*$11267$5uPkq
                                  g$invoke-req*$11266$5uPkq
                                  g$imp*$11265$5uPkq)))))))
                       g$ver$11255$5uPkq
                       g$name$11254$5uPkq))))))
              g$b*$11247$5uPkq
              g$imp*$11246$5uPkq
              g$exp*$11245$5uPkq
              g$name*$11244$5uPkq)))))))
   (g$parse-top-level-program$8355$5uPkq
     g$parse-top-level-program$11846$5uPkq
     (case-lambda
       ((g$e*$11279$5uPkq)
        ((case-lambda
           ((g$t$11280$5uPkq)
            ((case-lambda
               ((g$ls/false$11281$5uPkq)
                (if (if g$ls/false$11281$5uPkq
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$11282$5uPkq
                               g$imp*$11283$5uPkq
                               g$b*$11284$5uPkq)
                             (eq? (g$syntax->datum$8410$5uPkq
                                    g$import$11282$5uPkq)
                                  'import)))
                          g$ls/false$11281$5uPkq))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$11285$5uPkq
                         g$imp*$11286$5uPkq
                         g$b*$11287$5uPkq)
                       (values g$imp*$11286$5uPkq g$b*$11287$5uPkq)))
                    g$ls/false$11281$5uPkq)
                  ((case-lambda
                     ((g$t$11288$5uPkq)
                      ((case-lambda
                         ((g$ls/false$11289$5uPkq)
                          (if (if g$ls/false$11289$5uPkq
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$11290$5uPkq
                                         g$x$11291$5uPkq
                                         g$y$11292$5uPkq)
                                       (eq? (g$syntax->datum$8410$5uPkq
                                              g$import$11290$5uPkq)
                                            'import)))
                                    g$ls/false$11289$5uPkq))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$11293$5uPkq
                                   g$x$11294$5uPkq
                                   g$y$11295$5uPkq)
                                 (g$syntax-violation$8407$5uPkq
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$8015$5uPkq g$e*$11279$5uPkq))))
                              g$ls/false$11289$5uPkq)
                            ((case-lambda
                               ((g$t$11296$5uPkq)
                                ((case-lambda
                                   ((g$ls/false$11297$5uPkq)
                                    (if g$ls/false$11297$5uPkq
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$11297$5uPkq)
                                      (g$syntax-violation$8407$5uPkq
                                        '#f
                                        '"invalid syntax"
                                        g$t$11296$5uPkq))))
                                 (g$syntax-dispatch$8296$5uPkq
                                   g$t$11296$5uPkq
                                   '_))))
                             g$t$11288$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq
                         g$t$11288$5uPkq
                         '((any . any) . any)))))
                   g$t$11280$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq
               g$t$11280$5uPkq
               '((any . each-any) . each-any)))))
         g$e*$11279$5uPkq))))
   (g$top-level-expander$8356$5uPkq
     g$top-level-expander$11847$5uPkq
     (case-lambda
       ((g$e*$11298$5uPkq)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8355$5uPkq g$e*$11298$5uPkq)))
          (case-lambda
            ((g$imp*$11301$5uPkq g$b*$11302$5uPkq)
             ((case-lambda
                ((g$b*$11303$5uPkq g$imp*$11304$5uPkq)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8353$5uPkq
                        '()
                        '()
                        g$imp*$11304$5uPkq
                        g$b*$11303$5uPkq
                        '#t)))
                   (case-lambda
                     ((g$imp*$11312$5uPkq
                        g$invoke-req*$11313$5uPkq
                        g$visit-req*$11314$5uPkq
                        g$invoke-code$11315$5uPkq
                        g$visit-code$11316$5uPkq
                        g$export-subst$11317$5uPkq
                        g$export-env$11318$5uPkq)
                      ((case-lambda
                         ((g$export-env$11319$5uPkq
                            g$export-subst$11320$5uPkq
                            g$visit-code$11321$5uPkq
                            g$invoke-code$11322$5uPkq
                            g$visit-req*$11323$5uPkq
                            g$invoke-req*$11324$5uPkq
                            g$imp*$11325$5uPkq)
                          (values
                            g$invoke-req*$11324$5uPkq
                            g$invoke-code$11322$5uPkq)))
                       g$export-env$11318$5uPkq
                       g$export-subst$11317$5uPkq
                       g$visit-code$11316$5uPkq
                       g$invoke-code$11315$5uPkq
                       g$visit-req*$11314$5uPkq
                       g$invoke-req*$11313$5uPkq
                       g$imp*$11312$5uPkq))))))
              g$b*$11302$5uPkq
              g$imp*$11301$5uPkq)))))))
   (g$9472$8357$5uPkq
     g$9472$11848$5uPkq
     (make-record-type-descriptor
       'env
       '#f
       'g$9475$5uPkq
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9474$8358$5uPkq g$9474$11849$5uPkq '#f)
   (g$9473$8359$5uPkq
     g$9473$11850$5uPkq
     (make-record-constructor-descriptor
       g$9472$8357$5uPkq
       '#f
       g$9474$8358$5uPkq))
   (g$env?$8360$5uPkq
     g$env?$11851$5uPkq
     (record-predicate g$9472$8357$5uPkq))
   (g$make-env$8361$5uPkq
     g$make-env$11852$5uPkq
     (record-constructor g$9473$8359$5uPkq))
   (g$env-names$8362$5uPkq
     g$env-names$11853$5uPkq
     (record-accessor g$9472$8357$5uPkq '0))
   (g$env-labels$8363$5uPkq
     g$env-labels$11854$5uPkq
     (record-accessor g$9472$8357$5uPkq '1))
   (g$env-itc$8364$5uPkq
     g$env-itc$11855$5uPkq
     (record-accessor g$9472$8357$5uPkq '2))
   (g$set-env-names!$8365$5uPkq
     g$set-env-names!$11856$5uPkq
     (record-mutator g$9472$8357$5uPkq '0))
   (g$set-env-labels!$8366$5uPkq
     g$set-env-labels!$11857$5uPkq
     (record-mutator g$9472$8357$5uPkq '1))
   (g$set-env-itc!$8367$5uPkq
     g$set-env-itc!$11858$5uPkq
     (record-mutator g$9472$8357$5uPkq '2))
   (g$rp$8368$5uPkq
     g$rp$11859$5uPkq
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11326$5uPkq g$p$11327$5uPkq g$wr$11328$5uPkq)
          (display '"#<environment>" g$p$11327$5uPkq)))))
   (g$9491$8369$5uPkq
     g$9491$11860$5uPkq
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9494$5uPkq
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9493$8370$5uPkq g$9493$11861$5uPkq '#f)
   (g$9492$8371$5uPkq
     g$9492$11862$5uPkq
     (make-record-constructor-descriptor
       g$9491$8369$5uPkq
       '#f
       g$9493$8370$5uPkq))
   (g$interaction-env?$8372$5uPkq
     g$interaction-env?$11863$5uPkq
     (record-predicate g$9491$8369$5uPkq))
   (g$make-interaction-env$8373$5uPkq
     g$make-interaction-env$11864$5uPkq
     (record-constructor g$9492$8371$5uPkq))
   (g$interaction-env-rib$8374$5uPkq
     g$interaction-env-rib$11865$5uPkq
     (record-accessor g$9491$8369$5uPkq '0))
   (g$interaction-env-r$8375$5uPkq
     g$interaction-env-r$11866$5uPkq
     (record-accessor g$9491$8369$5uPkq '1))
   (g$interaction-env-locs$8376$5uPkq
     g$interaction-env-locs$11867$5uPkq
     (record-accessor g$9491$8369$5uPkq '2))
   (g$set-interaction-env-rib!$8377$5uPkq
     g$set-interaction-env-rib!$11868$5uPkq
     (record-mutator g$9491$8369$5uPkq '0))
   (g$set-interaction-env-r!$8378$5uPkq
     g$set-interaction-env-r!$11869$5uPkq
     (record-mutator g$9491$8369$5uPkq '1))
   (g$set-interaction-env-locs!$8379$5uPkq
     g$set-interaction-env-locs!$11870$5uPkq
     (record-mutator g$9491$8369$5uPkq '2))
   (g$rp$8380$5uPkq
     g$rp$11871$5uPkq
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11329$5uPkq g$p$11330$5uPkq g$wr$11331$5uPkq)
          (display '"#<environment>" g$p$11330$5uPkq)))))
   (g$interaction-environment-symbols$8381$5uPkq
     g$interaction-environment-symbols$11872$5uPkq
     (case-lambda
       (()
        (g$environment-symbols$8385$5uPkq
          (g$interaction-environment$8413$5uPkq)))))
   (g$environment-bindings$8382$5uPkq
     g$environment-bindings$11873$5uPkq
     (case-lambda
       ((g$e$11332$5uPkq)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$11333$5uPkq g$label$11334$5uPkq)
               (g$parse-binding$8383$5uPkq
                 (cons
                   g$name$11333$5uPkq
                   (g$imported-label->binding$7827$5uPkq
                     g$label$11334$5uPkq)))))
            (g$env-names$8362$5uPkq g$e$11332$5uPkq)
            (g$env-labels$8363$5uPkq g$e$11332$5uPkq))))))
   (g$parse-binding$8383$5uPkq
     g$parse-binding$11874$5uPkq
     (case-lambda
       ((g$b$11335$5uPkq)
        (cons
          (car g$b$11335$5uPkq)
          ((case-lambda
             ((g$t$11336$5uPkq)
              (if (g$memv$5752$5uPkq g$t$11336$5uPkq '(core-prim global))
                'procedure
                (if (g$memv$5752$5uPkq
                      g$t$11336$5uPkq
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$5752$5uPkq g$t$11336$5uPkq '($core-rtd))
                    'record
                    (if (eq? (car g$b$11335$5uPkq)
                             (g$cadr$5923$5uPkq g$b$11335$5uPkq))
                      'syntax
                      'unknown))))))
           (g$cadr$5923$5uPkq g$b$11335$5uPkq))))))
   (g$environment?$8384$5uPkq
     g$environment?$11875$5uPkq
     (case-lambda
       ((g$x$11337$5uPkq)
        ((case-lambda
           ((g$t$11338$5uPkq)
            (if g$t$11338$5uPkq
              g$t$11338$5uPkq
              (begin '#f (g$interaction-env?$8372$5uPkq g$x$11337$5uPkq)))))
         (g$env?$8360$5uPkq g$x$11337$5uPkq)))))
   (g$environment-symbols$8385$5uPkq
     g$environment-symbols$11876$5uPkq
     (case-lambda
       ((g$x$11339$5uPkq)
        (if (g$env?$8360$5uPkq g$x$11339$5uPkq)
          (vector->list (g$env-names$8362$5uPkq g$x$11339$5uPkq))
          (if (g$interaction-env?$8372$5uPkq g$x$11339$5uPkq)
            (g$map$5759$5uPkq
              values
              (g$rib-sym*$7968$5uPkq
                (g$interaction-env-rib$8374$5uPkq g$x$11339$5uPkq)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$11339$5uPkq))))))
   (g$environment$8386$5uPkq
     g$environment$11877$5uPkq
     (case-lambda
       (g$imp*$11340$5uPkq
        ((case-lambda
           ((g$itc$11341$5uPkq)
            ((case-lambda
               ((g$imp-collector$11344$5uPkq g$imp-collector$11345$5uPkq)
                ((case-lambda
                   ((g$swap$11346$5uPkq)
                    (dynamic-wind
                      g$swap$11346$5uPkq
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8345$5uPkq
                                g$imp*$11340$5uPkq)))
                           (case-lambda
                             ((g$subst-names$11349$5uPkq
                                g$subst-labels$11350$5uPkq)
                              ((case-lambda
                                 ((g$subst-labels$11351$5uPkq
                                    g$subst-names$11352$5uPkq)
                                  (g$make-env$8361$5uPkq
                                    g$subst-names$11352$5uPkq
                                    g$subst-labels$11351$5uPkq
                                    g$itc$11341$5uPkq)))
                               g$subst-labels$11350$5uPkq
                               g$subst-names$11349$5uPkq))))))
                      g$swap$11346$5uPkq)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11353$5uPkq)
                        (begin
                          (g$imp-collector$11344$5uPkq
                            g$imp-collector$11345$5uPkq)
                          (set! g$imp-collector$11345$5uPkq g$t$11353$5uPkq))))
                     (g$imp-collector$11344$5uPkq)))))))
             g$imp-collector$8350$5uPkq
             g$itc$11341$5uPkq)))
         (g$make-collector$8347$5uPkq)))))
   (g$null-environment$8387$5uPkq
     g$null-environment$11878$5uPkq
     (case-lambda
       ((g$n$11354$5uPkq)
        (begin
          (if (not (eqv? g$n$11354$5uPkq '5))
            (assertion-violation 'null-environment '"not 5" g$n$11354$5uPkq)
            (void))
          (g$environment$8386$5uPkq '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8388$5uPkq
     g$scheme-report-environment$11879$5uPkq
     (case-lambda
       ((g$n$11355$5uPkq)
        (begin
          (if (not (eqv? g$n$11355$5uPkq '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11355$5uPkq)
            (void))
          (g$environment$8386$5uPkq '(psyntax scheme-report-environment-5))))))
   (g$expand$8389$5uPkq
     g$expand$11880$5uPkq
     (case-lambda
       ((g$x$11356$5uPkq g$env$11357$5uPkq)
        (if (g$env?$8360$5uPkq g$env$11357$5uPkq)
          ((case-lambda
             ((g$rib$11358$5uPkq)
              ((case-lambda
                 ((g$x$11359$5uPkq
                    g$itc$11360$5uPkq
                    g$rtc$11361$5uPkq
                    g$vtc$11362$5uPkq)
                  ((case-lambda
                     ((g$x$11363$5uPkq)
                      (begin
                        (g$seal-rib!$7984$5uPkq g$rib$11358$5uPkq)
                        (values g$x$11363$5uPkq (g$rtc$11361$5uPkq)))))
                   ((case-lambda
                      ((g$top-level-context$11372$5uPkq
                         g$inv-collector$11373$5uPkq
                         g$vis-collector$11374$5uPkq
                         g$imp-collector$11375$5uPkq
                         g$top-level-context$11376$5uPkq
                         g$inv-collector$11377$5uPkq
                         g$vis-collector$11378$5uPkq
                         g$imp-collector$11379$5uPkq)
                       ((case-lambda
                          ((g$swap$11380$5uPkq)
                           (dynamic-wind
                             g$swap$11380$5uPkq
                             (case-lambda
                               (()
                                (g$chi-expr$8314$5uPkq
                                  g$x$11359$5uPkq
                                  '()
                                  '())))
                             g$swap$11380$5uPkq)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11381$5uPkq)
                                 (begin
                                   (g$top-level-context$11372$5uPkq
                                     g$top-level-context$11376$5uPkq)
                                   (set! g$top-level-context$11376$5uPkq
                                     g$t$11381$5uPkq))))
                              (g$top-level-context$11372$5uPkq))
                             ((case-lambda
                                ((g$t$11382$5uPkq)
                                 (begin
                                   (g$inv-collector$11373$5uPkq
                                     g$inv-collector$11377$5uPkq)
                                   (set! g$inv-collector$11377$5uPkq
                                     g$t$11382$5uPkq))))
                              (g$inv-collector$11373$5uPkq))
                             ((case-lambda
                                ((g$t$11383$5uPkq)
                                 (begin
                                   (g$vis-collector$11374$5uPkq
                                     g$vis-collector$11378$5uPkq)
                                   (set! g$vis-collector$11378$5uPkq
                                     g$t$11383$5uPkq))))
                              (g$vis-collector$11374$5uPkq))
                             ((case-lambda
                                ((g$t$11384$5uPkq)
                                 (begin
                                   (g$imp-collector$11375$5uPkq
                                     g$imp-collector$11379$5uPkq)
                                   (set! g$imp-collector$11379$5uPkq
                                     g$t$11384$5uPkq))))
                              (g$imp-collector$11375$5uPkq))))))))
                    g$top-level-context$8414$5uPkq
                    g$inv-collector$8348$5uPkq
                    g$vis-collector$8349$5uPkq
                    g$imp-collector$8350$5uPkq
                    '#f
                    g$rtc$11361$5uPkq
                    g$vtc$11362$5uPkq
                    g$itc$11360$5uPkq))))
               (g$make-stx$7991$5uPkq
                 g$x$11356$5uPkq
                 g$top-mark*$7955$5uPkq
                 (list g$rib$11358$5uPkq)
                 '())
               (g$env-itc$8364$5uPkq g$env$11357$5uPkq)
               (g$make-collector$8347$5uPkq)
               (g$make-collector$8347$5uPkq))))
           (g$make-top-rib$8346$5uPkq
             (g$env-names$8362$5uPkq g$env$11357$5uPkq)
             (g$env-labels$8363$5uPkq g$env$11357$5uPkq)))
          (if (g$interaction-env?$8372$5uPkq g$env$11357$5uPkq)
            ((case-lambda
               ((g$rib$11385$5uPkq g$r$11386$5uPkq g$rtc$11387$5uPkq)
                ((case-lambda
                   ((g$x$11388$5uPkq)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11399$5uPkq
                               g$inv-collector$11400$5uPkq
                               g$vis-collector$11401$5uPkq
                               g$imp-collector$11402$5uPkq
                               g$top-level-context$11403$5uPkq
                               g$inv-collector$11404$5uPkq
                               g$vis-collector$11405$5uPkq
                               g$imp-collector$11406$5uPkq)
                             ((case-lambda
                                ((g$swap$11407$5uPkq)
                                 (dynamic-wind
                                   g$swap$11407$5uPkq
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8352$5uPkq
                                        g$x$11388$5uPkq
                                        g$rib$11385$5uPkq
                                        g$r$11386$5uPkq)))
                                   g$swap$11407$5uPkq)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11408$5uPkq)
                                       (begin
                                         (g$top-level-context$11399$5uPkq
                                           g$top-level-context$11403$5uPkq)
                                         (set! g$top-level-context$11403$5uPkq
                                           g$t$11408$5uPkq))))
                                    (g$top-level-context$11399$5uPkq))
                                   ((case-lambda
                                      ((g$t$11409$5uPkq)
                                       (begin
                                         (g$inv-collector$11400$5uPkq
                                           g$inv-collector$11404$5uPkq)
                                         (set! g$inv-collector$11404$5uPkq
                                           g$t$11409$5uPkq))))
                                    (g$inv-collector$11400$5uPkq))
                                   ((case-lambda
                                      ((g$t$11410$5uPkq)
                                       (begin
                                         (g$vis-collector$11401$5uPkq
                                           g$vis-collector$11405$5uPkq)
                                         (set! g$vis-collector$11405$5uPkq
                                           g$t$11410$5uPkq))))
                                    (g$vis-collector$11401$5uPkq))
                                   ((case-lambda
                                      ((g$t$11411$5uPkq)
                                       (begin
                                         (g$imp-collector$11402$5uPkq
                                           g$imp-collector$11406$5uPkq)
                                         (set! g$imp-collector$11406$5uPkq
                                           g$t$11411$5uPkq))))
                                    (g$imp-collector$11402$5uPkq))))))))
                          g$top-level-context$8414$5uPkq
                          g$inv-collector$8348$5uPkq
                          g$vis-collector$8349$5uPkq
                          g$imp-collector$8350$5uPkq
                          g$env$11357$5uPkq
                          g$rtc$11387$5uPkq
                          (g$make-collector$8347$5uPkq)
                          (g$make-collector$8347$5uPkq))))
                      (case-lambda
                        ((g$e$11412$5uPkq g$r^$11413$5uPkq)
                         ((case-lambda
                            ((g$r^$11414$5uPkq g$e$11415$5uPkq)
                             (begin
                               (g$set-interaction-env-r!$8378$5uPkq
                                 g$env$11357$5uPkq
                                 g$r^$11414$5uPkq)
                               (values g$e$11415$5uPkq (g$rtc$11387$5uPkq)))))
                          g$r^$11413$5uPkq
                          g$e$11412$5uPkq))))))
                 (g$make-stx$7991$5uPkq
                   g$x$11356$5uPkq
                   g$top-mark*$7955$5uPkq
                   (list g$rib$11385$5uPkq)
                   '()))))
             (g$interaction-env-rib$8374$5uPkq g$env$11357$5uPkq)
             (g$interaction-env-r$8375$5uPkq g$env$11357$5uPkq)
             (g$make-collector$8347$5uPkq))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11357$5uPkq))))))
   (g$eval$8390$5uPkq
     g$eval$11881$5uPkq
     (case-lambda
       ((g$x$11416$5uPkq g$env$11417$5uPkq)
        (begin
          (if (not (g$environment?$8384$5uPkq g$env$11417$5uPkq))
            (error 'eval '"not an environment" g$env$11417$5uPkq)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8389$5uPkq g$x$11416$5uPkq g$env$11417$5uPkq)))
            (case-lambda
              ((g$x$11420$5uPkq g$invoke-req*$11421$5uPkq)
               ((case-lambda
                  ((g$invoke-req*$11422$5uPkq g$x$11423$5uPkq)
                   (begin
                     (g$for-each$5760$5uPkq
                       g$invoke-library$7828$5uPkq
                       g$invoke-req*$11422$5uPkq)
                     (eval-core
                       (g$expanded->core$7536$5uPkq g$x$11423$5uPkq)))))
                g$invoke-req*$11421$5uPkq
                g$x$11420$5uPkq))))))))
   (g$library-expander$8391$5uPkq
     g$library-expander$11882$5uPkq
     (case-lambda
       ((g$x$11424$5uPkq g$filename$11425$5uPkq g$verify-name$11426$5uPkq)
        (letrec* ((g$build-visit-code$11427$5uPkq
                    (case-lambda
                      ((g$macro*$11470$5uPkq)
                       (if (null? g$macro*$11470$5uPkq)
                         (g$build-void$7948$5uPkq)
                         (g$build-sequence$7947$5uPkq
                           '#f
                           (g$map$5759$5uPkq
                             (case-lambda
                               ((g$x$11471$5uPkq)
                                ((case-lambda
                                   ((g$loc$11472$5uPkq g$src$11473$5uPkq)
                                    (list
                                      'set!
                                      g$loc$11472$5uPkq
                                      g$src$11473$5uPkq)))
                                 (car g$x$11471$5uPkq)
                                 (g$cddr$5925$5uPkq g$x$11471$5uPkq))))
                             g$macro*$11470$5uPkq))))))
                  (g$visit!$11428$5uPkq
                    (case-lambda
                      ((g$macro*$11466$5uPkq)
                       (g$for-each$5760$5uPkq
                         (case-lambda
                           ((g$x$11467$5uPkq)
                            ((case-lambda
                               ((g$loc$11468$5uPkq g$proc$11469$5uPkq)
                                (set-symbol-value!
                                  g$loc$11468$5uPkq
                                  g$proc$11469$5uPkq)))
                             (car g$x$11467$5uPkq)
                             (g$cadr$5923$5uPkq g$x$11467$5uPkq))))
                         g$macro*$11466$5uPkq)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8354$5uPkq
                 g$x$11424$5uPkq
                 g$verify-name$11426$5uPkq)))
            (case-lambda
              ((g$name$11438$5uPkq
                 g$ver$11439$5uPkq
                 g$imp*$11440$5uPkq
                 g$inv*$11441$5uPkq
                 g$vis*$11442$5uPkq
                 g$invoke-code$11443$5uPkq
                 g$macro*$11444$5uPkq
                 g$export-subst$11445$5uPkq
                 g$export-env$11446$5uPkq)
               ((case-lambda
                  ((g$export-env$11447$5uPkq
                     g$export-subst$11448$5uPkq
                     g$macro*$11449$5uPkq
                     g$invoke-code$11450$5uPkq
                     g$vis*$11451$5uPkq
                     g$inv*$11452$5uPkq
                     g$imp*$11453$5uPkq
                     g$ver$11454$5uPkq
                     g$name$11455$5uPkq)
                   ((case-lambda
                      ((g$id$11456$5uPkq
                         g$name$11457$5uPkq
                         g$ver$11458$5uPkq
                         g$imp*$11459$5uPkq
                         g$vis*$11460$5uPkq
                         g$inv*$11461$5uPkq
                         g$visit-proc$11462$5uPkq
                         g$invoke-proc$11463$5uPkq
                         g$visit-code$11464$5uPkq
                         g$invoke-code$11465$5uPkq)
                       (begin
                         (g$install-library$7826$5uPkq
                           g$id$11456$5uPkq
                           g$name$11457$5uPkq
                           g$ver$11458$5uPkq
                           g$imp*$11459$5uPkq
                           g$vis*$11460$5uPkq
                           g$inv*$11461$5uPkq
                           g$export-subst$11448$5uPkq
                           g$export-env$11447$5uPkq
                           g$visit-proc$11462$5uPkq
                           g$invoke-proc$11463$5uPkq
                           g$visit-code$11464$5uPkq
                           g$invoke-code$11465$5uPkq
                           '#t
                           g$filename$11425$5uPkq)
                         (values
                           g$id$11456$5uPkq
                           g$name$11457$5uPkq
                           g$ver$11458$5uPkq
                           g$imp*$11459$5uPkq
                           g$vis*$11460$5uPkq
                           g$inv*$11461$5uPkq
                           g$invoke-code$11465$5uPkq
                           g$visit-code$11464$5uPkq
                           g$export-subst$11448$5uPkq
                           g$export-env$11447$5uPkq))))
                    (gensym)
                    g$name$11455$5uPkq
                    g$ver$11454$5uPkq
                    (g$map$5759$5uPkq
                      g$library-spec$7832$5uPkq
                      g$imp*$11453$5uPkq)
                    (g$map$5759$5uPkq
                      g$library-spec$7832$5uPkq
                      g$vis*$11451$5uPkq)
                    (g$map$5759$5uPkq
                      g$library-spec$7832$5uPkq
                      g$inv*$11452$5uPkq)
                    (case-lambda
                      (() (g$visit!$11428$5uPkq g$macro*$11449$5uPkq)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7536$5uPkq
                           g$invoke-code$11450$5uPkq))))
                    (g$build-visit-code$11427$5uPkq g$macro*$11449$5uPkq)
                    g$invoke-code$11450$5uPkq)))
                g$export-env$11446$5uPkq
                g$export-subst$11445$5uPkq
                g$macro*$11444$5uPkq
                g$invoke-code$11443$5uPkq
                g$vis*$11442$5uPkq
                g$inv*$11441$5uPkq
                g$imp*$11440$5uPkq
                g$ver$11439$5uPkq
                g$name$11438$5uPkq))))))
       ((g$x$11474$5uPkq g$filename$11475$5uPkq)
        (g$library-expander$8391$5uPkq
          g$x$11474$5uPkq
          g$filename$11475$5uPkq
          (case-lambda ((g$x$11476$5uPkq) (values)))))
       ((g$x$11477$5uPkq)
        (g$library-expander$8391$5uPkq
          g$x$11477$5uPkq
          '#f
          (case-lambda ((g$x$11478$5uPkq) (values)))))))
   (g$boot-library-expand$8392$5uPkq
     g$boot-library-expand$11883$5uPkq
     (case-lambda
       ((g$x$11479$5uPkq)
        (call-with-values
          (case-lambda (() (g$library-expander$8391$5uPkq g$x$11479$5uPkq)))
          (case-lambda
            ((g$id$11490$5uPkq
               g$name$11491$5uPkq
               g$ver$11492$5uPkq
               g$imp*$11493$5uPkq
               g$vis*$11494$5uPkq
               g$inv*$11495$5uPkq
               g$invoke-code$11496$5uPkq
               g$visit-code$11497$5uPkq
               g$export-subst$11498$5uPkq
               g$export-env$11499$5uPkq)
             ((case-lambda
                ((g$export-env$11500$5uPkq
                   g$export-subst$11501$5uPkq
                   g$visit-code$11502$5uPkq
                   g$invoke-code$11503$5uPkq
                   g$inv*$11504$5uPkq
                   g$vis*$11505$5uPkq
                   g$imp*$11506$5uPkq
                   g$ver$11507$5uPkq
                   g$name$11508$5uPkq
                   g$id$11509$5uPkq)
                 (values
                   g$name$11508$5uPkq
                   g$invoke-code$11503$5uPkq
                   g$export-subst$11501$5uPkq
                   g$export-env$11500$5uPkq)))
              g$export-env$11499$5uPkq
              g$export-subst$11498$5uPkq
              g$visit-code$11497$5uPkq
              g$invoke-code$11496$5uPkq
              g$inv*$11495$5uPkq
              g$vis*$11494$5uPkq
              g$imp*$11493$5uPkq
              g$ver$11492$5uPkq
              g$name$11491$5uPkq
              g$id$11490$5uPkq)))))))
   (g$rev-map-append$8393$5uPkq
     g$rev-map-append$11884$5uPkq
     (case-lambda
       ((g$f$11510$5uPkq g$ls$11511$5uPkq g$ac$11512$5uPkq)
        (if (null? g$ls$11511$5uPkq)
          g$ac$11512$5uPkq
          (g$rev-map-append$8393$5uPkq
            g$f$11510$5uPkq
            (cdr g$ls$11511$5uPkq)
            (cons
              (g$f$11510$5uPkq (car g$ls$11511$5uPkq))
              g$ac$11512$5uPkq))))))
   (g$build-exports$8394$5uPkq
     g$build-exports$11885$5uPkq
     (case-lambda
       ((g$lex*+loc*$11513$5uPkq g$init*$11514$5uPkq)
        (g$build-sequence$7947$5uPkq
          '#f
          (cons
            (g$build-void$7948$5uPkq)
            (g$rev-map-append$8393$5uPkq
              (case-lambda
                ((g$x$11515$5uPkq)
                 (list 'set! (cdr g$x$11515$5uPkq) (car g$x$11515$5uPkq))))
              g$lex*+loc*$11513$5uPkq
              g$init*$11514$5uPkq))))))
   (g$make-export-subst$8395$5uPkq
     g$make-export-subst$11886$5uPkq
     (case-lambda
       ((g$name*$11516$5uPkq g$id*$11517$5uPkq)
        (g$map$5759$5uPkq
          (case-lambda
            ((g$name$11518$5uPkq g$id$11519$5uPkq)
             ((case-lambda
                ((g$label$11520$5uPkq)
                 (begin
                   (if (not g$label$11520$5uPkq)
                     (g$syntax-violation$8407$5uPkq
                       '#f
                       '"cannot export unbound identifier"
                       g$id$11519$5uPkq)
                     (void))
                   (cons g$name$11518$5uPkq g$label$11520$5uPkq))))
              (g$id->label$8031$5uPkq g$id$11519$5uPkq))))
          g$name*$11516$5uPkq
          g$id*$11517$5uPkq))))
   (g$make-export-env/macros$8396$5uPkq
     g$make-export-env/macros$11887$5uPkq
     (case-lambda
       ((g$lex*$11521$5uPkq g$loc*$11522$5uPkq g$r$11523$5uPkq)
        (letrec* ((g$lookup$11524$5uPkq
                    (case-lambda
                      ((g$x$11539$5uPkq)
                       ((letrec ((g$f$11540$5uPkq
                                   (case-lambda
                                     ((g$x$11541$5uPkq
                                        g$lex*$11542$5uPkq
                                        g$loc*$11543$5uPkq)
                                      (if (pair? g$lex*$11542$5uPkq)
                                        (if (eq? g$x$11541$5uPkq
                                                 (car g$lex*$11542$5uPkq))
                                          (car g$loc*$11543$5uPkq)
                                          (g$f$11540$5uPkq
                                            g$x$11541$5uPkq
                                            (cdr g$lex*$11542$5uPkq)
                                            (cdr g$loc*$11543$5uPkq)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11540$5uPkq)
                        g$x$11539$5uPkq
                        g$lex*$11521$5uPkq
                        g$loc*$11522$5uPkq)))))
          ((letrec ((g$f$11525$5uPkq
                      (case-lambda
                        ((g$r$11526$5uPkq
                           g$env$11527$5uPkq
                           g$global*$11528$5uPkq
                           g$macro*$11529$5uPkq)
                         (if (null? g$r$11526$5uPkq)
                           (values
                             g$env$11527$5uPkq
                             g$global*$11528$5uPkq
                             g$macro*$11529$5uPkq)
                           ((case-lambda
                              ((g$x$11530$5uPkq)
                               ((case-lambda
                                  ((g$label$11531$5uPkq g$b$11532$5uPkq)
                                   ((case-lambda
                                      ((g$t$11533$5uPkq)
                                       (if (g$memv$5752$5uPkq
                                             g$t$11533$5uPkq
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$11534$5uPkq)
                                             ((case-lambda
                                                ((g$loc$11535$5uPkq
                                                   g$type$11536$5uPkq)
                                                 (g$f$11525$5uPkq
                                                   (cdr g$r$11526$5uPkq)
                                                   (cons
                                                     (g$cons*$5761$5uPkq
                                                       g$label$11531$5uPkq
                                                       g$type$11536$5uPkq
                                                       g$loc$11535$5uPkq)
                                                     g$env$11527$5uPkq)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$8240$5uPkq
                                                         g$v$11534$5uPkq)
                                                       g$loc$11535$5uPkq)
                                                     g$global*$11528$5uPkq)
                                                   g$macro*$11529$5uPkq)))
                                              (g$lookup$11524$5uPkq
                                                (g$lexical-var$8240$5uPkq
                                                  g$v$11534$5uPkq))
                                              (if (g$lexical-mutable?$8241$5uPkq
                                                    g$v$11534$5uPkq)
                                                'mutable
                                                'global))))
                                          (g$binding-value$8036$5uPkq
                                            g$b$11532$5uPkq))
                                         (if (g$memv$5752$5uPkq
                                               g$t$11533$5uPkq
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$11537$5uPkq)
                                               (g$f$11525$5uPkq
                                                 (cdr g$r$11526$5uPkq)
                                                 (cons
                                                   (g$cons*$5761$5uPkq
                                                     g$label$11531$5uPkq
                                                     'global-macro
                                                     g$loc$11537$5uPkq)
                                                   g$env$11527$5uPkq)
                                                 g$global*$11528$5uPkq
                                                 (cons
                                                   (cons
                                                     g$loc$11537$5uPkq
                                                     (g$binding-value$8036$5uPkq
                                                       g$b$11532$5uPkq))
                                                   g$macro*$11529$5uPkq))))
                                            (gensym))
                                           (if (g$memv$5752$5uPkq
                                                 g$t$11533$5uPkq
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$11538$5uPkq)
                                                 (g$f$11525$5uPkq
                                                   (cdr g$r$11526$5uPkq)
                                                   (cons
                                                     (g$cons*$5761$5uPkq
                                                       g$label$11531$5uPkq
                                                       'global-macro!
                                                       g$loc$11538$5uPkq)
                                                     g$env$11527$5uPkq)
                                                   g$global*$11528$5uPkq
                                                   (cons
                                                     (cons
                                                       g$loc$11538$5uPkq
                                                       (g$binding-value$8036$5uPkq
                                                         g$b$11532$5uPkq))
                                                     g$macro*$11529$5uPkq))))
                                              (gensym))
                                             (if (g$memv$5752$5uPkq
                                                   g$t$11533$5uPkq
                                                   '($rtd $module))
                                               (g$f$11525$5uPkq
                                                 (cdr g$r$11526$5uPkq)
                                                 (cons
                                                   g$x$11530$5uPkq
                                                   g$env$11527$5uPkq)
                                                 g$global*$11528$5uPkq
                                                 g$macro*$11529$5uPkq)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$8035$5uPkq
                                                   g$b$11532$5uPkq)
                                                 (g$binding-value$8036$5uPkq
                                                   g$b$11532$5uPkq))))))))
                                    (g$binding-type$8035$5uPkq
                                      g$b$11532$5uPkq))))
                                (car g$x$11530$5uPkq)
                                (cdr g$x$11530$5uPkq))))
                            (car g$r$11526$5uPkq)))))))
             g$f$11525$5uPkq)
           g$r$11523$5uPkq
           '()
           '()
           '())))))
   (g$generate-temporaries$8397$5uPkq
     g$generate-temporaries$11888$5uPkq
     (case-lambda
       ((g$ls$11544$5uPkq)
        ((case-lambda
           ((g$t$11545$5uPkq)
            ((case-lambda
               ((g$ls/false$11546$5uPkq)
                (if g$ls/false$11546$5uPkq
                  (apply
                    (case-lambda
                      ((g$ls$11547$5uPkq)
                       (g$map$5759$5uPkq
                         (case-lambda
                           ((g$x$11548$5uPkq)
                            (g$make-stx$7991$5uPkq
                              ((case-lambda
                                 ((g$x$11549$5uPkq)
                                  (if ((case-lambda
                                         ((g$t$11550$5uPkq)
                                          (if g$t$11550$5uPkq
                                            g$t$11550$5uPkq
                                            (begin
                                              '#f
                                              (string? g$x$11549$5uPkq)))))
                                       (symbol? g$x$11549$5uPkq))
                                    (gensym g$x$11549$5uPkq)
                                    (gensym 't))))
                               (g$syntax->datum$8410$5uPkq g$x$11548$5uPkq))
                              g$top-mark*$7955$5uPkq
                              '()
                              '())))
                         g$ls$11547$5uPkq)))
                    g$ls/false$11546$5uPkq)
                  ((case-lambda
                     ((g$t$11551$5uPkq)
                      ((case-lambda
                         ((g$ls/false$11552$5uPkq)
                          (if g$ls/false$11552$5uPkq
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11552$5uPkq)
                            (g$syntax-violation$8407$5uPkq
                              '#f
                              '"invalid syntax"
                              g$t$11551$5uPkq))))
                       (g$syntax-dispatch$8296$5uPkq g$t$11551$5uPkq '_))))
                   g$t$11545$5uPkq))))
             (g$syntax-dispatch$8296$5uPkq g$t$11545$5uPkq 'each-any))))
         g$ls$11544$5uPkq))))
   (g$free-identifier=?$8398$5uPkq
     g$free-identifier=?$11889$5uPkq
     (case-lambda
       ((g$x$11553$5uPkq g$y$11554$5uPkq)
        (if (g$id?$8018$5uPkq g$x$11553$5uPkq)
          (if (g$id?$8018$5uPkq g$y$11554$5uPkq)
            (g$free-id=?$8022$5uPkq g$x$11553$5uPkq g$y$11554$5uPkq)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11554$5uPkq))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11553$5uPkq)))))
   (g$bound-identifier=?$8399$5uPkq
     g$bound-identifier=?$11890$5uPkq
     (case-lambda
       ((g$x$11555$5uPkq g$y$11556$5uPkq)
        (if (g$id?$8018$5uPkq g$x$11555$5uPkq)
          (if (g$id?$8018$5uPkq g$y$11556$5uPkq)
            (g$bound-id=?$8021$5uPkq g$x$11555$5uPkq g$y$11556$5uPkq)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11556$5uPkq))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11555$5uPkq)))))
   (g$make-source-condition$8400$5uPkq
     g$make-source-condition$11891$5uPkq
     (case-lambda
       ((g$x$11557$5uPkq)
        (letrec* ((g$12416$11558$5uPkq
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12419$5uPkq
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12418$11559$5uPkq '#f)
                  (g$12417$11560$5uPkq
                    (make-record-constructor-descriptor
                      g$12416$11558$5uPkq
                      &condition-rcd
                      g$12418$11559$5uPkq))
                  (g$12415$11561$5uPkq (record-predicate g$12416$11558$5uPkq))
                  (g$make-source-condition$11562$5uPkq
                    (record-constructor g$12417$11560$5uPkq))
                  (g$12413$11563$5uPkq (record-accessor g$12416$11558$5uPkq '0))
                  (g$12414$11564$5uPkq (record-accessor g$12416$11558$5uPkq '1))
                  (g$source-condition?$11565$5uPkq
                    (condition-predicate g$12416$11558$5uPkq))
                  (g$source-filename$11566$5uPkq
                    (condition-accessor
                      g$12416$11558$5uPkq
                      g$12413$11563$5uPkq))
                  (g$source-character$11567$5uPkq
                    (condition-accessor
                      g$12416$11558$5uPkq
                      g$12414$11564$5uPkq)))
          (if (pair? g$x$11557$5uPkq)
            (g$make-source-condition$11562$5uPkq
              (car g$x$11557$5uPkq)
              (cdr g$x$11557$5uPkq))
            (condition))))))
   (g$extract-position-condition$8401$5uPkq
     g$extract-position-condition$11892$5uPkq
     (case-lambda
       ((g$x$11568$5uPkq)
        (g$make-source-condition$8400$5uPkq
          (g$expression-position$8402$5uPkq g$x$11568$5uPkq)))))
   (g$expression-position$8402$5uPkq
     g$expression-position$11893$5uPkq
     (case-lambda
       ((g$x$11569$5uPkq)
        (if (g$stx?$7990$5uPkq g$x$11569$5uPkq)
          (begin
            '#f
            ((case-lambda
               ((g$x$11570$5uPkq)
                (if (annotation? g$x$11570$5uPkq)
                  (begin '#f (annotation-source g$x$11570$5uPkq))
                  '#f)))
             (g$stx-expr$7992$5uPkq g$x$11569$5uPkq)))
          '#f))))
   (g$assertion-error$8403$5uPkq
     g$assertion-error$11894$5uPkq
     (case-lambda
       ((g$expr$11571$5uPkq g$pos$11572$5uPkq)
        (raise
          (condition
            (g$make-assertion-violation$6487$5uPkq)
            (g$make-who-condition$6501$5uPkq 'assert)
            (g$make-message-condition$6455$5uPkq '"assertion failed")
            (g$make-irritants-condition$6493$5uPkq (list g$expr$11571$5uPkq))
            (g$make-source-condition$8400$5uPkq g$pos$11572$5uPkq))))))
   (g$syntax-error$8404$5uPkq
     g$syntax-error$11895$5uPkq
     (case-lambda
       ((g$x$11573$5uPkq . g$args$11574$5uPkq)
        (begin
          (if (not (g$for-all$5757$5uPkq string? g$args$11574$5uPkq))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11574$5uPkq)
            (void))
          (raise
            (condition
              (g$make-message-condition$6455$5uPkq
                (if (null? g$args$11574$5uPkq)
                  '"invalid syntax"
                  (apply string-append g$args$11574$5uPkq)))
              (g$make-syntax-violation$6527$5uPkq
                (g$syntax->datum$8410$5uPkq g$x$11573$5uPkq)
                '#f)
              (g$extract-position-condition$8401$5uPkq g$x$11573$5uPkq)
              (g$extract-trace$8405$5uPkq g$x$11573$5uPkq)))))))
   (g$extract-trace$8405$5uPkq
     g$extract-trace$11896$5uPkq
     (case-lambda
       ((g$x$11575$5uPkq)
        (letrec* ((g$12443$11576$5uPkq
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12446$5uPkq
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12445$11577$5uPkq '#f)
                  (g$12444$11578$5uPkq
                    (make-record-constructor-descriptor
                      g$12443$11576$5uPkq
                      &condition-rcd
                      g$12445$11577$5uPkq))
                  (g$12442$11579$5uPkq (record-predicate g$12443$11576$5uPkq))
                  (g$make-trace$11580$5uPkq
                    (record-constructor g$12444$11578$5uPkq))
                  (g$12441$11581$5uPkq (record-accessor g$12443$11576$5uPkq '0))
                  (g$trace?$11582$5uPkq
                    (condition-predicate g$12443$11576$5uPkq))
                  (g$trace-form$11583$5uPkq
                    (condition-accessor
                      g$12443$11576$5uPkq
                      g$12441$11581$5uPkq)))
          ((letrec ((g$f$11584$5uPkq
                      (case-lambda
                        ((g$x$11585$5uPkq)
                         (if (g$stx?$7990$5uPkq g$x$11585$5uPkq)
                           (apply
                             condition
                             (g$make-trace$11580$5uPkq g$x$11585$5uPkq)
                             (g$map$5759$5uPkq
                               g$f$11584$5uPkq
                               (g$stx-ae*$7995$5uPkq g$x$11585$5uPkq)))
                           (if (annotation? g$x$11585$5uPkq)
                             (g$make-trace$11580$5uPkq
                               (g$make-stx$7991$5uPkq
                                 g$x$11585$5uPkq
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11584$5uPkq)
           g$x$11575$5uPkq)))))
   (g$syntax-violation*$8406$5uPkq
     g$syntax-violation*$11897$5uPkq
     (case-lambda
       ((g$who$11586$5uPkq
          g$msg$11587$5uPkq
          g$form$11588$5uPkq
          g$condition-object$11589$5uPkq)
        (begin
          (if (not (string? g$msg$11587$5uPkq))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11587$5uPkq)
            (void))
          ((case-lambda
             ((g$who$11590$5uPkq)
              (raise
                (condition
                  (if g$who$11590$5uPkq
                    (g$make-who-condition$6501$5uPkq g$who$11590$5uPkq)
                    (condition))
                  (g$make-message-condition$6455$5uPkq g$msg$11587$5uPkq)
                  g$condition-object$11589$5uPkq
                  (g$extract-position-condition$8401$5uPkq g$form$11588$5uPkq)
                  (g$extract-trace$8405$5uPkq g$form$11588$5uPkq)))))
           (if ((case-lambda
                  ((g$t$11591$5uPkq)
                   (if g$t$11591$5uPkq
                     g$t$11591$5uPkq
                     (begin '#f (symbol? g$who$11586$5uPkq)))))
                (string? g$who$11586$5uPkq))
             g$who$11586$5uPkq
             (if (not g$who$11586$5uPkq)
               ((case-lambda
                  ((g$t$11592$5uPkq)
                   ((case-lambda
                      ((g$ls/false$11593$5uPkq)
                       (if (if g$ls/false$11593$5uPkq
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11594$5uPkq)
                                    (g$id?$8018$5uPkq g$id$11594$5uPkq)))
                                 g$ls/false$11593$5uPkq))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11595$5uPkq)
                              (g$syntax->datum$8410$5uPkq g$id$11595$5uPkq)))
                           g$ls/false$11593$5uPkq)
                         ((case-lambda
                            ((g$t$11596$5uPkq)
                             ((case-lambda
                                ((g$ls/false$11597$5uPkq)
                                 (if (if g$ls/false$11597$5uPkq
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11598$5uPkq
                                                g$rest$11599$5uPkq)
                                              (g$id?$8018$5uPkq
                                                g$id$11598$5uPkq)))
                                           g$ls/false$11597$5uPkq))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11600$5uPkq g$rest$11601$5uPkq)
                                        (g$syntax->datum$8410$5uPkq
                                          g$id$11600$5uPkq)))
                                     g$ls/false$11597$5uPkq)
                                   ((case-lambda
                                      ((g$t$11602$5uPkq)
                                       ((case-lambda
                                          ((g$ls/false$11603$5uPkq)
                                           (if g$ls/false$11603$5uPkq
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11603$5uPkq)
                                             (g$syntax-violation$8407$5uPkq
                                               '#f
                                               '"invalid syntax"
                                               g$t$11602$5uPkq))))
                                        (g$syntax-dispatch$8296$5uPkq
                                          g$t$11602$5uPkq
                                          '_))))
                                    g$t$11596$5uPkq))))
                              (g$syntax-dispatch$8296$5uPkq
                                g$t$11596$5uPkq
                                '(any . any)))))
                          g$t$11592$5uPkq))))
                    (g$syntax-dispatch$8296$5uPkq g$t$11592$5uPkq 'any))))
                g$form$11588$5uPkq)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11586$5uPkq))))))))
   (g$syntax-violation$8407$5uPkq
     g$syntax-violation$11898$5uPkq
     (case-lambda
       ((g$who$11604$5uPkq g$msg$11605$5uPkq g$form$11606$5uPkq)
        (g$syntax-violation$8407$5uPkq
          g$who$11604$5uPkq
          g$msg$11605$5uPkq
          g$form$11606$5uPkq
          '#f))
       ((g$who$11607$5uPkq
          g$msg$11608$5uPkq
          g$form$11609$5uPkq
          g$subform$11610$5uPkq)
        (g$syntax-violation*$8406$5uPkq
          g$who$11607$5uPkq
          g$msg$11608$5uPkq
          g$form$11609$5uPkq
          (g$make-syntax-violation$6527$5uPkq
            (g$syntax->datum$8410$5uPkq g$form$11609$5uPkq)
            (g$syntax->datum$8410$5uPkq g$subform$11610$5uPkq))))))
   (g$identifier?$8408$5uPkq
     g$identifier?$11899$5uPkq
     (case-lambda ((g$x$11611$5uPkq) (g$id?$8018$5uPkq g$x$11611$5uPkq))))
   (g$datum->syntax$8409$5uPkq
     g$datum->syntax$11900$5uPkq
     (case-lambda
       ((g$id$11612$5uPkq g$datum$11613$5uPkq)
        (if (g$id?$8018$5uPkq g$id$11612$5uPkq)
          (g$datum->stx$8001$5uPkq g$id$11612$5uPkq g$datum$11613$5uPkq)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11612$5uPkq)))))
   (g$syntax->datum$8410$5uPkq
     g$syntax->datum$11901$5uPkq
     (case-lambda
       ((g$x$11614$5uPkq) (g$stx->datum$8029$5uPkq g$x$11614$5uPkq))))
   (g$compile-r6rs-top-level$8411$5uPkq
     g$compile-r6rs-top-level$11902$5uPkq
     (case-lambda
       ((g$x*$11615$5uPkq)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8356$5uPkq g$x*$11615$5uPkq)))
          (case-lambda
            ((g$lib*$11618$5uPkq g$invoke-code$11619$5uPkq)
             ((case-lambda
                ((g$invoke-code$11620$5uPkq g$lib*$11621$5uPkq)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$5760$5uPkq
                        g$invoke-library$7828$5uPkq
                        g$lib*$11621$5uPkq)
                      (eval-core
                        (g$expanded->core$7536$5uPkq
                          g$invoke-code$11620$5uPkq)))))))
              g$invoke-code$11619$5uPkq
              g$lib*$11618$5uPkq)))))))
   (g$pre-compile-r6rs-top-level$8412$5uPkq
     g$pre-compile-r6rs-top-level$11903$5uPkq
     (case-lambda
       ((g$x*$11622$5uPkq)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8356$5uPkq g$x*$11622$5uPkq)))
          (case-lambda
            ((g$lib*$11625$5uPkq g$invoke-code$11626$5uPkq)
             ((case-lambda
                ((g$invoke-code$11627$5uPkq g$lib*$11628$5uPkq)
                 (begin
                   (g$for-each$5760$5uPkq
                     g$invoke-library$7828$5uPkq
                     g$lib*$11628$5uPkq)
                   (compile-core
                     (g$expanded->core$7536$5uPkq g$invoke-code$11627$5uPkq)))))
              g$invoke-code$11626$5uPkq
              g$lib*$11625$5uPkq)))))))
   (g$interaction-environment$8413$5uPkq
     g$interaction-environment$11904$5uPkq
     ((case-lambda
        ((g$the-env$11629$5uPkq)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11630$5uPkq)
                (if g$t$11630$5uPkq
                  g$t$11630$5uPkq
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$11631$5uPkq g$rib$11632$5uPkq)
                        (begin
                          ((case-lambda
                             ((g$subst$11633$5uPkq)
                              (begin
                                (g$set-rib-sym*!$7973$5uPkq
                                  g$rib$11632$5uPkq
                                  (g$map$5759$5uPkq car g$subst$11633$5uPkq))
                                (g$set-rib-mark**!$7974$5uPkq
                                  g$rib$11632$5uPkq
                                  (g$map$5759$5uPkq
                                    (case-lambda
                                      ((g$x$11634$5uPkq)
                                       g$top-mark*$7955$5uPkq))
                                    g$subst$11633$5uPkq))
                                (g$set-rib-label*!$7975$5uPkq
                                  g$rib$11632$5uPkq
                                  (g$map$5759$5uPkq cdr g$subst$11633$5uPkq)))))
                           (g$library-subst$7785$5uPkq g$lib$11631$5uPkq))
                          ((case-lambda
                             ((g$env$11635$5uPkq)
                              (begin
                                (set! g$the-env$11629$5uPkq g$env$11635$5uPkq)
                                g$env$11635$5uPkq)))
                           (g$make-interaction-env$8373$5uPkq
                             g$rib$11632$5uPkq
                             '()
                             '())))))
                     (g$find-library-by-name$7821$5uPkq '(ironscheme))
                     (g$make-cache-rib$7979$5uPkq))))))
             g$the-env$11629$5uPkq)))))
      '#f))
   (g$top-level-context$8414$5uPkq
     g$top-level-context$11905$5uPkq
     (g$make-parameter$7290$5uPkq '#f)))
  (g$current-library-expander$7818$5uPkq g$library-expander$8391$5uPkq))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7533$5uPkq
      (case-lambda
        ((g$x$11958$5uPkq)
         ((case-lambda
            ((g$t$11959$5uPkq) (if g$t$11959$5uPkq (cdr g$t$11959$5uPkq) '#f)))
          (g$assq$5747$5uPkq
            g$x$11958$5uPkq
            '((ellipsis-map . g$ellipsis-map$11792$5uPkq)
              (make-list . g$make-list$5742$5uPkq)
              (last-pair . g$last-pair$5741$5uPkq)
              (ironscheme-build . g$ironscheme-build$11951$5uPkq)
              (syntax-error . g$syntax-error$11895$5uPkq)
              (syntax-dispatch . g$syntax-dispatch$11787$5uPkq)
              (compile-system-libraries
                .
                g$compile-system-libraries$11953$5uPkq)
              (compile->closure . g$compile->closure$11955$5uPkq)
              (compile . g$compile$11954$5uPkq)
              (load . g$load$11950$5uPkq)
              (interaction-environment . g$interaction-environment$11904$5uPkq)
              (string-ci>? . g$string-ci>?$6673$5uPkq)
              (string-ci>=? . g$string-ci>=?$6675$5uPkq)
              (string-ci=? . g$string-ci=?$6671$5uPkq)
              (string-ci<? . g$string-ci<?$6672$5uPkq)
              (string-ci<=? . g$string-ci<=?$6674$5uPkq)
              (char-ci>? . g$char-ci>?$6678$5uPkq)
              (char-ci>=? . g$char-ci>=?$6680$5uPkq)
              (char-ci=? . g$char-ci=?$6676$5uPkq)
              (char-ci<? . g$char-ci<?$6677$5uPkq)
              (char-ci<=? . g$char-ci<=?$6679$5uPkq)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11725$5uPkq)
              (variable-transformer? . g$variable-transformer?$11724$5uPkq)
              (make-variable-transformer
                .
                g$make-variable-transformer$11723$5uPkq)
              (identifier? . g$identifier?$11899$5uPkq)
              (generate-temporaries . g$generate-temporaries$11888$5uPkq)
              (free-identifier=? . g$free-identifier=?$11889$5uPkq)
              (syntax->datum . g$syntax->datum$11901$5uPkq)
              (datum->syntax . g$datum->syntax$11900$5uPkq)
              (bound-identifier=? . g$bound-identifier=?$11890$5uPkq)
              (delete-file . g$delete-file$6207$5uPkq)
              (file-exists? . g$file-exists?$6206$5uPkq)
              (list-sort . g$list-sort$6598$5uPkq)
              (make-eqv-hashtable . g$make-eqv-hashtable$6189$5uPkq)
              (make-eq-hashtable . g$make-eq-hashtable$6188$5uPkq)
              (hashtable-update! . g$hashtable-update!$6195$5uPkq)
              (hashtable-size . g$hashtable-size$6190$5uPkq)
              (hashtable-set! . g$hashtable-set!$6192$5uPkq)
              (hashtable-ref . g$hashtable-ref$6191$5uPkq)
              (hashtable-delete! . g$hashtable-delete!$6193$5uPkq)
              (hashtable-contains? . g$hashtable-contains?$6194$5uPkq)
              (hashtable-clear! . g$hashtable-clear!$6196$5uPkq)
              (call-with-output-file . g$call-with-output-file$7016$5uPkq)
              (call-with-input-file . g$call-with-input-file$7015$5uPkq)
              (with-output-to-file . g$with-output-to-file$7014$5uPkq)
              (with-input-from-file . g$with-input-from-file$7013$5uPkq)
              (port? . g$port?$6979$5uPkq)
              (open-string-output-port . g$open-string-output-port$6978$5uPkq)
              (make-i/o-write-error . g$make-i/o-write-error$6898$5uPkq)
              (make-i/o-read-error . g$make-i/o-read-error$6892$5uPkq)
              (make-i/o-port-error . g$make-i/o-port-error$6944$5uPkq)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6904$5uPkq)
              (make-i/o-filename-error . g$make-i/o-filename-error$6912$5uPkq)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6920$5uPkq)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6926$5uPkq)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6938$5uPkq)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6932$5uPkq)
              (make-i/o-error . g$make-i/o-error$6886$5uPkq)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6958$5uPkq)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6952$5uPkq)
              (i/o-write-error? . g$i/o-write-error?$6899$5uPkq)
              (i/o-read-error? . g$i/o-read-error?$6893$5uPkq)
              (i/o-port-error? . g$i/o-port-error?$6946$5uPkq)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6906$5uPkq)
              (i/o-error-position . g$i/o-error-position$6907$5uPkq)
              (i/o-filename-error? . g$i/o-filename-error?$6914$5uPkq)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6921$5uPkq)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6927$5uPkq)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6939$5uPkq)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6933$5uPkq)
              (i/o-error? . g$i/o-error?$6887$5uPkq)
              (i/o-error-port . g$i/o-error-port$6947$5uPkq)
              (i/o-error-filename . g$i/o-error-filename$6915$5uPkq)
              (i/o-encoding-error? . g$i/o-encoding-error?$6960$5uPkq)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6961$5uPkq)
              (i/o-decoding-error? . g$i/o-decoding-error?$6953$5uPkq)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$6980$5uPkq)
              (scheme-report-environment
                .
                g$scheme-report-environment$11879$5uPkq)
              (quotient . g$quotient$6565$5uPkq)
              (null-environment . g$null-environment$11878$5uPkq)
              (remainder . g$remainder$6566$5uPkq)
              (modulo . g$modulo$6567$5uPkq)
              (force . g$force$6569$5uPkq)
              (command-line . g$command-line$11947$5uPkq)
              (remove . g$remove$5764$5uPkq)
              (remv . g$remv$5765$5uPkq)
              (remp . g$remp$5745$5uPkq)
              (remq . g$remq$5766$5uPkq)
              (partition . g$partition$5744$5uPkq)
              (memv . g$memv$5752$5uPkq)
              (memq . g$memq$5751$5uPkq)
              (memp . g$memp$5754$5uPkq)
              (member . g$member$5753$5uPkq)
              (exists . g$exists$5758$5uPkq)
              (for-all . g$for-all$5757$5uPkq)
              (fold-right . g$fold-right$5763$5uPkq)
              (fold-left . g$fold-left$5762$5uPkq)
              (find . g$find$5743$5uPkq)
              (filter . g$filter$5746$5uPkq)
              (cons* . g$cons*$5761$5uPkq)
              (assv . g$assv$5748$5uPkq)
              (assq . g$assq$5747$5uPkq)
              (assp . g$assp$5750$5uPkq)
              (assoc . g$assoc$5749$5uPkq)
              (eval . g$eval$11881$5uPkq)
              (environment . g$environment$11877$5uPkq)
              (make-enumeration . g$make-enumeration$7148$5uPkq)
              (enum-set=? . g$enum-set=?$7155$5uPkq)
              (enum-set-universe . g$enum-set-universe$7149$5uPkq)
              (enum-set-union . g$enum-set-union$7156$5uPkq)
              (enum-set-subset? . g$enum-set-subset?$7154$5uPkq)
              (enum-set-projection . g$enum-set-projection$7160$5uPkq)
              (enum-set-member? . g$enum-set-member?$7153$5uPkq)
              (enum-set-intersection . g$enum-set-intersection$7157$5uPkq)
              (enum-set-indexer . g$enum-set-indexer$7150$5uPkq)
              (enum-set-difference . g$enum-set-difference$7158$5uPkq)
              (enum-set-constructor . g$enum-set-constructor$7151$5uPkq)
              (enum-set-complement . g$enum-set-complement$7159$5uPkq)
              (enum-set->list . g$enum-set->list$7152$5uPkq)
              (who-condition? . g$who-condition?$6503$5uPkq)
              (warning? . g$warning?$6464$5uPkq)
              (violation? . g$violation?$6482$5uPkq)
              (undefined-violation? . g$undefined-violation?$6538$5uPkq)
              (syntax-violation? . g$syntax-violation?$6530$5uPkq)
              (syntax-violation-subform . g$syntax-violation-subform$6532$5uPkq)
              (syntax-violation-form . g$syntax-violation-form$6531$5uPkq)
              (syntax-violation . g$syntax-violation$11898$5uPkq)
              (serious-condition? . g$serious-condition?$6470$5uPkq)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6510$5uPkq)
              (message-condition? . g$message-condition?$6457$5uPkq)
              (make-who-condition . g$make-who-condition$6501$5uPkq)
              (make-warning . g$make-warning$6463$5uPkq)
              (make-violation . g$make-violation$6481$5uPkq)
              (make-undefined-violation . g$make-undefined-violation$6537$5uPkq)
              (make-syntax-violation . g$make-syntax-violation$6527$5uPkq)
              (make-serious-condition . g$make-serious-condition$6469$5uPkq)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6509$5uPkq)
              (make-message-condition . g$make-message-condition$6455$5uPkq)
              (make-lexical-violation . g$make-lexical-violation$6521$5uPkq)
              (make-irritants-condition . g$make-irritants-condition$6493$5uPkq)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6515$5uPkq)
              (make-error . g$make-error$6475$5uPkq)
              (make-assertion-violation . g$make-assertion-violation$6487$5uPkq)
              (lexical-violation? . g$lexical-violation?$6522$5uPkq)
              (irritants-condition? . g$irritants-condition?$6495$5uPkq)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6516$5uPkq)
              (error? . g$error?$6476$5uPkq)
              (condition-who . g$condition-who$6504$5uPkq)
              (condition-message . g$condition-message$6458$5uPkq)
              (condition-irritants . g$condition-irritants$6496$5uPkq)
              (assertion-violation? . g$assertion-violation?$6488$5uPkq)
              (native-endianness . g$native-endianness$6320$5uPkq)
              (bytevector-u64-set! . g$bytevector-u64-set!$6341$5uPkq)
              (bytevector-u64-ref . g$bytevector-u64-ref$6337$5uPkq)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6343$5uPkq)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6339$5uPkq)
              (bytevector-u32-set! . g$bytevector-u32-set!$6333$5uPkq)
              (bytevector-u32-ref . g$bytevector-u32-ref$6329$5uPkq)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6335$5uPkq)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6331$5uPkq)
              (bytevector-u16-set! . g$bytevector-u16-set!$6325$5uPkq)
              (bytevector-u16-ref . g$bytevector-u16-ref$6321$5uPkq)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6327$5uPkq)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6323$5uPkq)
              (bytevector-s64-set! . g$bytevector-s64-set!$6342$5uPkq)
              (bytevector-s64-ref . g$bytevector-s64-ref$6338$5uPkq)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6344$5uPkq)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6340$5uPkq)
              (bytevector-s32-set! . g$bytevector-s32-set!$6334$5uPkq)
              (bytevector-s32-ref . g$bytevector-s32-ref$6330$5uPkq)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6336$5uPkq)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6332$5uPkq)
              (bytevector-s16-set! . g$bytevector-s16-set!$6326$5uPkq)
              (bytevector-s16-ref . g$bytevector-s16-ref$6322$5uPkq)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6328$5uPkq)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6324$5uPkq)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6347$5uPkq)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6345$5uPkq)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6348$5uPkq)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6346$5uPkq)
              (no-nans-violation? . g$no-nans-violation?$6801$5uPkq)
              (no-infinities-violation? . g$no-infinities-violation?$6795$5uPkq)
              (make-no-nans-violation . g$make-no-nans-violation$6800$5uPkq)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6794$5uPkq)
              (fxrotate-bit-field . g$fxrotate-bit-field$6777$5uPkq)
              (fxif . g$fxif$6771$5uPkq)
              (fxcopy-bit-field . g$fxcopy-bit-field$6774$5uPkq)
              (fxcopy-bit . g$fxcopy-bit$6772$5uPkq)
              (fxbit-field . g$fxbit-field$6773$5uPkq)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6776$5uPkq)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6775$5uPkq)
              (fx-/carry . g$fx-/carry$6769$5uPkq)
              (fx+/carry . g$fx+/carry$6770$5uPkq)
              (fx*/carry . g$fx*/carry$6768$5uPkq)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6718$5uPkq)
              (bitwise-if . g$bitwise-if$6712$5uPkq)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6715$5uPkq)
              (bitwise-copy-bit . g$bitwise-copy-bit$6713$5uPkq)
              (bitwise-bit-field . g$bitwise-bit-field$6714$5uPkq)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6717$5uPkq)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6716$5uPkq)
              (symbol=? . g$symbol=?$5955$5uPkq)
              (string>? . g$string>?$5952$5uPkq)
              (string>=? . g$string>=?$5954$5uPkq)
              (string=? . g$string=?$5950$5uPkq)
              (string<? . g$string<?$5951$5uPkq)
              (string<=? . g$string<=?$5953$5uPkq)
              (rationalize . g$rationalize$5962$5uPkq)
              (map . g$map$5759$5uPkq)
              (list-tail . g$list-tail$5739$5uPkq)
              (list-ref . g$list-ref$5740$5uPkq)
              (for-each . g$for-each$5760$5uPkq)
              (char>? . g$char>?$5959$5uPkq)
              (char>=? . g$char>=?$5961$5uPkq)
              (char=? . g$char=?$5957$5uPkq)
              (char<? . g$char<?$5958$5uPkq)
              (char<=? . g$char<=?$5960$5uPkq)
              (cddddr . g$cddddr$5949$5uPkq)
              (cdddar . g$cdddar$5948$5uPkq)
              (cddadr . g$cddadr$5947$5uPkq)
              (cddaar . g$cddaar$5946$5uPkq)
              (cdaddr . g$cdaddr$5945$5uPkq)
              (cdadar . g$cdadar$5944$5uPkq)
              (cdaadr . g$cdaadr$5943$5uPkq)
              (cdaaar . g$cdaaar$5942$5uPkq)
              (cadddr . g$cadddr$5941$5uPkq)
              (caddar . g$caddar$5940$5uPkq)
              (cadadr . g$cadadr$5939$5uPkq)
              (cadaar . g$cadaar$5938$5uPkq)
              (caaddr . g$caaddr$5937$5uPkq)
              (caadar . g$caadar$5936$5uPkq)
              (caaadr . g$caaadr$5935$5uPkq)
              (caaaar . g$caaaar$5934$5uPkq)
              (cdddr . g$cdddr$5933$5uPkq)
              (cddar . g$cddar$5932$5uPkq)
              (cdadr . g$cdadr$5931$5uPkq)
              (cdaar . g$cdaar$5930$5uPkq)
              (caddr . g$caddr$5929$5uPkq)
              (cadar . g$cadar$5928$5uPkq)
              (caadr . g$caadr$5927$5uPkq)
              (caaar . g$caaar$5926$5uPkq)
              (cddr . g$cddr$5925$5uPkq)
              (cdar . g$cdar$5924$5uPkq)
              (cadr . g$cadr$5923$5uPkq)
              (caar . g$caar$5922$5uPkq)
              (boolean=? . g$boolean=?$5956$5uPkq)
              (enum-set? . g$enum?$7129$5uPkq)
              (make-promise . g$make-promise$6568$5uPkq)
              (load/args . g$load/args$11949$5uPkq)
              (printf . g$printf$7184$5uPkq)
              (fprintf . g$fprintf$7185$5uPkq)
              (format . g$format$7186$5uPkq)
              (trace-printer . g$trace-printer$11946$5uPkq)
              (make-traced-macro . g$make-traced-macro$7190$5uPkq)
              (assertion-error . g$assertion-error$11894$5uPkq)
              (make-parameter . g$make-parameter$7290$5uPkq)
              (environment-bindings . g$environment-bindings$11873$5uPkq)
              (environment-symbols . g$environment-symbols$11876$5uPkq)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11872$5uPkq)
              (library-path . g$library-path$7810$5uPkq)
              (expand . g$expand$11880$5uPkq)))))))
    (g$install-library$7826$5uPkq
      'g$13155$5uPkq
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$13092$5uPkq)
        (cosh . g$13091$5uPkq)
        (sinh . g$13090$5uPkq)
        (make-guid . g$13089$5uPkq)
        (unspecified? . g$13088$5uPkq)
        (make-trace . g$13087$5uPkq)
        (make-list . g$6547$5uPkq)
        (last-pair . g$6546$5uPkq)
        (load-r5rs . g$13086$5uPkq)
        (license . g$13085$5uPkq)
        (stacktrace . g$13084$5uPkq)
        (ironscheme-build . g$12515$5uPkq)
        (set-symbol-value! . g$13071$5uPkq)
        (symbol-value . g$13070$5uPkq)
        (ungensym . g$13069$5uPkq)
        (gensym . g$13068$5uPkq)
        (void . g$13067$5uPkq)
        (compile-system-libraries . g$12517$5uPkq)
        (compile->closure . g$12519$5uPkq)
        (compile . g$12518$5uPkq)
        (load . g$12514$5uPkq)
        (interaction-environment . g$9542$5uPkq)
        (string-upcase . g$13063$5uPkq)
        (string-titlecase . g$13062$5uPkq)
        (string-normalize-nfkd . g$13061$5uPkq)
        (string-normalize-nfkc . g$13060$5uPkq)
        (string-normalize-nfd . g$13059$5uPkq)
        (string-normalize-nfc . g$13058$5uPkq)
        (string-foldcase . g$13057$5uPkq)
        (string-downcase . g$13056$5uPkq)
        (string-ci>? . g$7647$5uPkq)
        (string-ci>=? . g$7649$5uPkq)
        (string-ci=? . g$7645$5uPkq)
        (string-ci<? . g$7646$5uPkq)
        (string-ci<=? . g$7648$5uPkq)
        (char-whitespace? . g$13055$5uPkq)
        (char-upper-case? . g$13054$5uPkq)
        (char-title-case? . g$13053$5uPkq)
        (char-numeric? . g$13052$5uPkq)
        (char-lower-case? . g$13051$5uPkq)
        (char-general-category . g$13050$5uPkq)
        (char-upcase . g$13049$5uPkq)
        (char-titlecase . g$13048$5uPkq)
        (char-foldcase . g$13047$5uPkq)
        (char-downcase . g$13046$5uPkq)
        (char-ci>? . g$7686$5uPkq)
        (char-ci>=? . g$7688$5uPkq)
        (char-ci=? . g$7684$5uPkq)
        (char-ci<? . g$7685$5uPkq)
        (char-ci<=? . g$7687$5uPkq)
        (char-alphabetic? . g$13045$5uPkq)
        (make-variable-transformer . g$9139$5uPkq)
        (identifier? . g$9537$5uPkq)
        (generate-temporaries . g$9526$5uPkq)
        (free-identifier=? . g$9527$5uPkq)
        (syntax->datum . g$9539$5uPkq)
        (datum->syntax . g$9538$5uPkq)
        (bound-identifier=? . g$9528$5uPkq)
        (record-type-descriptor? . g$13044$5uPkq)
        (record-predicate . g$13043$5uPkq)
        (record-mutator . g$13042$5uPkq)
        (record-constructor . g$13041$5uPkq)
        (record-accessor . g$13040$5uPkq)
        (make-record-type-descriptor . g$13039$5uPkq)
        (make-record-constructor-descriptor . g$13038$5uPkq)
        (record? . g$13037$5uPkq)
        (record-type-uid . g$13036$5uPkq)
        (record-type-sealed? . g$13035$5uPkq)
        (record-type-parent . g$13034$5uPkq)
        (record-type-opaque? . g$13033$5uPkq)
        (record-type-name . g$13032$5uPkq)
        (record-type-generative? . g$13031$5uPkq)
        (record-type-field-names . g$13030$5uPkq)
        (record-rtd . g$13029$5uPkq)
        (record-field-mutable? . g$13028$5uPkq)
        (delete-file . g$7223$5uPkq)
        (file-exists? . g$7222$5uPkq)
        (vector-sort! . g$13027$5uPkq)
        (vector-sort . g$13026$5uPkq)
        (list-sort . g$7587$5uPkq)
        (symbol-hash . g$13025$5uPkq)
        (string-ci-hash . g$13024$5uPkq)
        (string-hash . g$13023$5uPkq)
        (equal-hash . g$13022$5uPkq)
        (hashtable-equivalence-function . g$13021$5uPkq)
        (make-hashtable . g$13020$5uPkq)
        (hashtable-hash-function . g$13019$5uPkq)
        (make-eqv-hashtable . g$7191$5uPkq)
        (make-eq-hashtable . g$7190$5uPkq)
        (hashtable? . g$13018$5uPkq)
        (hashtable-update! . g$7197$5uPkq)
        (hashtable-size . g$7192$5uPkq)
        (hashtable-set! . g$7194$5uPkq)
        (hashtable-ref . g$7193$5uPkq)
        (hashtable-mutable? . g$13017$5uPkq)
        (hashtable-keys . g$13016$5uPkq)
        (hashtable-entries . g$13015$5uPkq)
        (hashtable-delete! . g$7195$5uPkq)
        (hashtable-copy . g$13014$5uPkq)
        (hashtable-contains? . g$7196$5uPkq)
        (hashtable-clear! . g$7198$5uPkq)
        (call-with-output-file . g$8065$5uPkq)
        (call-with-input-file . g$8064$5uPkq)
        (write-char . g$13013$5uPkq)
        (write . g$13012$5uPkq)
        (with-output-to-file . g$8063$5uPkq)
        (with-input-from-file . g$8062$5uPkq)
        (read-char . g$13011$5uPkq)
        (read . g$13010$5uPkq)
        (peek-char . g$13009$5uPkq)
        (open-output-file . g$13008$5uPkq)
        (open-input-file . g$13007$5uPkq)
        (newline . g$13006$5uPkq)
        (display . g$13005$5uPkq)
        (close-output-port . g$13004$5uPkq)
        (close-input-port . g$13003$5uPkq)
        (eof-object? . g$13002$5uPkq)
        (eof-object . g$13001$5uPkq)
        (current-error-port . g$13000$5uPkq)
        (current-output-port . g$12999$5uPkq)
        (current-input-port . g$12998$5uPkq)
        (output-port? . g$12997$5uPkq)
        (input-port? . g$12996$5uPkq)
        (utf-8-codec . g$12995$5uPkq)
        (utf-16-codec . g$12994$5uPkq)
        (transcoder-error-handling-mode . g$12993$5uPkq)
        (transcoder-eol-style . g$12992$5uPkq)
        (transcoder-codec . g$12991$5uPkq)
        (transcoded-port . g$12990$5uPkq)
        (textual-port? . g$12989$5uPkq)
        (string->bytevector . g$12988$5uPkq)
        (standard-output-port . g$12987$5uPkq)
        (standard-input-port . g$12986$5uPkq)
        (standard-error-port . g$12985$5uPkq)
        (set-port-position! . g$12984$5uPkq)
        (put-u8 . g$12983$5uPkq)
        (put-string . g$12982$5uPkq)
        (put-datum . g$12981$5uPkq)
        (put-char . g$12980$5uPkq)
        (put-bytevector . g$12979$5uPkq)
        (port? . g$8038$5uPkq)
        (port-transcoder . g$12978$5uPkq)
        (port-position . g$12977$5uPkq)
        (port-has-set-port-position!? . g$12976$5uPkq)
        (port-has-port-position? . g$12975$5uPkq)
        (port-eof? . g$12974$5uPkq)
        (output-port-buffer-mode . g$12973$5uPkq)
        (open-string-output-port . g$8037$5uPkq)
        (open-string-input-port . g$12972$5uPkq)
        (open-file-output-port . g$12971$5uPkq)
        (open-file-input/output-port . g$12970$5uPkq)
        (open-file-input-port . g$12969$5uPkq)
        (open-bytevector-output-port . g$12968$5uPkq)
        (open-bytevector-input-port . g$12967$5uPkq)
        (native-transcoder . g$12966$5uPkq)
        (native-eol-style . g$12965$5uPkq)
        (make-transcoder . g$12964$5uPkq)
        (latin-1-codec . g$12963$5uPkq)
        (make-i/o-write-error . g$7893$5uPkq)
        (make-i/o-read-error . g$7879$5uPkq)
        (make-i/o-port-error . g$7998$5uPkq)
        (make-i/o-invalid-position-error . g$7908$5uPkq)
        (make-i/o-filename-error . g$7925$5uPkq)
        (make-i/o-file-protection-error . g$7941$5uPkq)
        (make-i/o-file-is-read-only-error . g$7955$5uPkq)
        (make-i/o-file-does-not-exist-error . g$7983$5uPkq)
        (make-i/o-file-already-exists-error . g$7969$5uPkq)
        (make-i/o-error . g$7865$5uPkq)
        (make-i/o-encoding-error . g$8029$5uPkq)
        (make-i/o-decoding-error . g$8014$5uPkq)
        (make-custom-textual-output-port . g$12962$5uPkq)
        (make-custom-textual-input/output-port . g$12961$5uPkq)
        (make-custom-textual-input-port . g$12960$5uPkq)
        (make-custom-binary-output-port . g$12959$5uPkq)
        (make-custom-binary-input/output-port . g$12958$5uPkq)
        (make-custom-binary-input-port . g$12957$5uPkq)
        (make-bytevector . g$12956$5uPkq)
        (lookahead-u8 . g$12955$5uPkq)
        (lookahead-char . g$12954$5uPkq)
        (i/o-write-error? . g$7894$5uPkq)
        (i/o-read-error? . g$7880$5uPkq)
        (i/o-port-error? . g$8000$5uPkq)
        (i/o-invalid-position-error? . g$7910$5uPkq)
        (i/o-error-position . g$7911$5uPkq)
        (i/o-filename-error? . g$7927$5uPkq)
        (i/o-file-protection-error? . g$7942$5uPkq)
        (i/o-file-is-read-only-error? . g$7956$5uPkq)
        (i/o-file-does-not-exist-error? . g$7984$5uPkq)
        (i/o-file-already-exists-error? . g$7970$5uPkq)
        (i/o-error? . g$7866$5uPkq)
        (i/o-error-port . g$8001$5uPkq)
        (i/o-error-filename . g$7928$5uPkq)
        (i/o-encoding-error? . g$8031$5uPkq)
        (i/o-encoding-error-char . g$8032$5uPkq)
        (i/o-decoding-error? . g$8015$5uPkq)
        (get-u8 . g$12953$5uPkq)
        (get-string-n! . g$12952$5uPkq)
        (get-string-n . g$12951$5uPkq)
        (get-string-all . g$12950$5uPkq)
        (get-line . g$12949$5uPkq)
        (get-datum . g$12948$5uPkq)
        (get-char . g$12947$5uPkq)
        (get-bytevector-some . g$12946$5uPkq)
        (get-bytevector-n! . g$12945$5uPkq)
        (get-bytevector-n . g$12944$5uPkq)
        (get-bytevector-all . g$12943$5uPkq)
        (flush-output-port . g$12942$5uPkq)
        (close-port . g$12941$5uPkq)
        (call-with-string-output-port . g$8039$5uPkq)
        (call-with-port . g$12940$5uPkq)
        (call-with-bytevector-output-port . g$12939$5uPkq)
        (bytevector->string . g$12938$5uPkq)
        (buffer-mode? . g$12937$5uPkq)
        (binary-port? . g$12936$5uPkq)
        (scheme-report-environment . g$9517$5uPkq)
        (quotient . g$7566$5uPkq)
        (null-environment . g$9516$5uPkq)
        (remainder . g$7567$5uPkq)
        (modulo . g$7568$5uPkq)
        (inexact->exact . g$12935$5uPkq)
        (force . g$7570$5uPkq)
        (exact->inexact . g$12934$5uPkq)
        (exit . g$12933$5uPkq)
        (command-line . g$12511$5uPkq)
        (string-fill! . g$12932$5uPkq)
        (string-set! . g$12931$5uPkq)
        (set-cdr! . g$12930$5uPkq)
        (set-car! . g$12929$5uPkq)
        (remove . g$6569$5uPkq)
        (remv . g$6570$5uPkq)
        (remp . g$6550$5uPkq)
        (remq . g$6571$5uPkq)
        (partition . g$6549$5uPkq)
        (memv . g$6557$5uPkq)
        (memq . g$6556$5uPkq)
        (memp . g$6559$5uPkq)
        (member . g$6558$5uPkq)
        (exists . g$6563$5uPkq)
        (for-all . g$6562$5uPkq)
        (fold-right . g$6568$5uPkq)
        (fold-left . g$6567$5uPkq)
        (find . g$6548$5uPkq)
        (filter . g$6551$5uPkq)
        (cons* . g$6566$5uPkq)
        (assv . g$6553$5uPkq)
        (assq . g$6552$5uPkq)
        (assp . g$6555$5uPkq)
        (assoc . g$6554$5uPkq)
        (with-exception-handler . g$12928$5uPkq)
        (raise-continuable . g$12927$5uPkq)
        (raise . g$12926$5uPkq)
        (eval . g$9519$5uPkq)
        (environment . g$9515$5uPkq)
        (make-enumeration . g$8123$5uPkq)
        (enum-set=? . g$8130$5uPkq)
        (enum-set-universe . g$8124$5uPkq)
        (enum-set-union . g$8131$5uPkq)
        (enum-set-subset? . g$8129$5uPkq)
        (enum-set-projection . g$8135$5uPkq)
        (enum-set-member? . g$8128$5uPkq)
        (enum-set-intersection . g$8132$5uPkq)
        (enum-set-indexer . g$8125$5uPkq)
        (enum-set-difference . g$8133$5uPkq)
        (enum-set-constructor . g$8126$5uPkq)
        (enum-set-complement . g$8134$5uPkq)
        (enum-set->list . g$8127$5uPkq)
        (who-condition? . g$7477$5uPkq)
        (warning? . g$7388$5uPkq)
        (violation? . g$7430$5uPkq)
        (undefined-violation? . g$7554$5uPkq)
        (syntax-violation? . g$7538$5uPkq)
        (syntax-violation-subform . g$7540$5uPkq)
        (syntax-violation-form . g$7539$5uPkq)
        (syntax-violation . g$9536$5uPkq)
        (simple-conditions . g$12925$5uPkq)
        (serious-condition? . g$7402$5uPkq)
        (non-continuable-violation? . g$7492$5uPkq)
        (message-condition? . g$7373$5uPkq)
        (make-who-condition . g$7475$5uPkq)
        (make-warning . g$7387$5uPkq)
        (make-violation . g$7429$5uPkq)
        (make-undefined-violation . g$7553$5uPkq)
        (make-syntax-violation . g$7535$5uPkq)
        (make-serious-condition . g$7401$5uPkq)
        (make-non-continuable-violation . g$7491$5uPkq)
        (make-message-condition . g$7371$5uPkq)
        (make-lexical-violation . g$7519$5uPkq)
        (make-irritants-condition . g$7458$5uPkq)
        (make-implementation-restriction-violation . g$7505$5uPkq)
        (make-error . g$7415$5uPkq)
        (make-assertion-violation . g$7443$5uPkq)
        (lexical-violation? . g$7520$5uPkq)
        (irritants-condition? . g$7460$5uPkq)
        (implementation-restriction-violation? . g$7506$5uPkq)
        (error? . g$7416$5uPkq)
        (condition-who . g$7478$5uPkq)
        (condition-predicate . g$12924$5uPkq)
        (condition-message . g$7374$5uPkq)
        (condition-irritants . g$7461$5uPkq)
        (condition-accessor . g$12923$5uPkq)
        (condition . g$12922$5uPkq)
        (assertion-violation? . g$7444$5uPkq)
        (condition? . g$12921$5uPkq)
        (utf32->string . g$12920$5uPkq)
        (utf16->string . g$12919$5uPkq)
        (utf8->string . g$12918$5uPkq)
        (uint-list->bytevector . g$12917$5uPkq)
        (u8-list->bytevector . g$12916$5uPkq)
        (string->utf8 . g$12915$5uPkq)
        (string->utf32 . g$12914$5uPkq)
        (string->utf16 . g$12913$5uPkq)
        (sint-list->bytevector . g$12912$5uPkq)
        (native-endianness . g$7229$5uPkq)
        (bytevector? . g$12911$5uPkq)
        (bytevector=? . g$12910$5uPkq)
        (bytevector-uint-set! . g$12909$5uPkq)
        (bytevector-uint-ref . g$12908$5uPkq)
        (bytevector-u8-set! . g$12907$5uPkq)
        (bytevector-u8-ref . g$12906$5uPkq)
        (bytevector-u64-set! . g$7250$5uPkq)
        (bytevector-u64-ref . g$7246$5uPkq)
        (bytevector-u64-native-set! . g$7252$5uPkq)
        (bytevector-u64-native-ref . g$7248$5uPkq)
        (bytevector-u32-set! . g$7242$5uPkq)
        (bytevector-u32-ref . g$7238$5uPkq)
        (bytevector-u32-native-set! . g$7244$5uPkq)
        (bytevector-u32-native-ref . g$7240$5uPkq)
        (bytevector-u16-set! . g$7234$5uPkq)
        (bytevector-u16-ref . g$7230$5uPkq)
        (bytevector-u16-native-set! . g$7236$5uPkq)
        (bytevector-u16-native-ref . g$7232$5uPkq)
        (bytevector-sint-set! . g$12905$5uPkq)
        (bytevector-sint-ref . g$12904$5uPkq)
        (bytevector-s8-set! . g$12903$5uPkq)
        (bytevector-s8-ref . g$12902$5uPkq)
        (bytevector-s64-set! . g$7251$5uPkq)
        (bytevector-s64-ref . g$7247$5uPkq)
        (bytevector-s64-native-set! . g$7253$5uPkq)
        (bytevector-s64-native-ref . g$7249$5uPkq)
        (bytevector-s32-set! . g$7243$5uPkq)
        (bytevector-s32-ref . g$7239$5uPkq)
        (bytevector-s32-native-set! . g$7245$5uPkq)
        (bytevector-s32-native-ref . g$7241$5uPkq)
        (bytevector-s16-set! . g$7235$5uPkq)
        (bytevector-s16-ref . g$7231$5uPkq)
        (bytevector-s16-native-set! . g$7237$5uPkq)
        (bytevector-s16-native-ref . g$7233$5uPkq)
        (bytevector-length . g$12901$5uPkq)
        (bytevector-ieee-single-set! . g$12900$5uPkq)
        (bytevector-ieee-single-ref . g$12899$5uPkq)
        (bytevector-ieee-single-native-set! . g$7256$5uPkq)
        (bytevector-ieee-single-native-ref . g$7254$5uPkq)
        (bytevector-ieee-double-set! . g$12898$5uPkq)
        (bytevector-ieee-double-ref . g$12897$5uPkq)
        (bytevector-ieee-double-native-set! . g$7257$5uPkq)
        (bytevector-ieee-double-native-ref . g$7255$5uPkq)
        (bytevector-fill! . g$12896$5uPkq)
        (bytevector-copy! . g$12895$5uPkq)
        (bytevector-copy . g$12894$5uPkq)
        (bytevector->uint-list . g$12893$5uPkq)
        (bytevector->u8-list . g$12892$5uPkq)
        (bytevector->sint-list . g$12891$5uPkq)
        (no-nans-violation? . g$7851$5uPkq)
        (no-infinities-violation? . g$7837$5uPkq)
        (make-no-nans-violation . g$7850$5uPkq)
        (make-no-infinities-violation . g$7836$5uPkq)
        (real->flonum . g$12890$5uPkq)
        (flzero? . g$12889$5uPkq)
        (fltruncate . g$12888$5uPkq)
        (fltan . g$12887$5uPkq)
        (flsqrt . g$12886$5uPkq)
        (flsin . g$12885$5uPkq)
        (flround . g$12884$5uPkq)
        (flpositive? . g$12883$5uPkq)
        (flonum? . g$12882$5uPkq)
        (flodd? . g$12881$5uPkq)
        (flnumerator . g$12880$5uPkq)
        (flnegative? . g$12879$5uPkq)
        (flnan? . g$12878$5uPkq)
        (flmod0 . g$12877$5uPkq)
        (flmod . g$12876$5uPkq)
        (flmin . g$12875$5uPkq)
        (flmax . g$12874$5uPkq)
        (fllog . g$12873$5uPkq)
        (flinteger? . g$12872$5uPkq)
        (flinfinite? . g$12871$5uPkq)
        (flfloor . g$12870$5uPkq)
        (flfinite? . g$12869$5uPkq)
        (flexpt . g$12868$5uPkq)
        (flexp . g$12867$5uPkq)
        (fleven? . g$12866$5uPkq)
        (fldiv0-and-mod0 . g$12865$5uPkq)
        (fldiv0 . g$12864$5uPkq)
        (fldiv-and-mod . g$12863$5uPkq)
        (fldiv . g$12862$5uPkq)
        (fldenominator . g$12861$5uPkq)
        (flcos . g$12860$5uPkq)
        (flceiling . g$12859$5uPkq)
        (flatan . g$12858$5uPkq)
        (flasin . g$12857$5uPkq)
        (flacos . g$12856$5uPkq)
        (flabs . g$12855$5uPkq)
        (fl>? . g$12854$5uPkq)
        (fl>=? . g$12853$5uPkq)
        (fl=? . g$12852$5uPkq)
        (fl<? . g$12851$5uPkq)
        (fl<=? . g$12850$5uPkq)
        (fl/ . g$12849$5uPkq)
        (fl- . g$12848$5uPkq)
        (fl+ . g$12847$5uPkq)
        (fl* . g$12846$5uPkq)
        (fixnum->flonum . g$12845$5uPkq)
        (fxzero? . g$12844$5uPkq)
        (fxxor . g$12843$5uPkq)
        (fxrotate-bit-field . g$7783$5uPkq)
        (fxreverse-bit-field . g$12842$5uPkq)
        (fxpositive? . g$12841$5uPkq)
        (fxodd? . g$12840$5uPkq)
        (fxnot . g$12839$5uPkq)
        (fxnegative? . g$12838$5uPkq)
        (fxmod0 . g$12837$5uPkq)
        (fxmod . g$12836$5uPkq)
        (fxmin . g$12835$5uPkq)
        (fxmax . g$12834$5uPkq)
        (fxlength . g$12833$5uPkq)
        (fxior . g$12832$5uPkq)
        (fxif . g$7777$5uPkq)
        (fxfirst-bit-set . g$12831$5uPkq)
        (fxeven? . g$12830$5uPkq)
        (fxdiv0-and-mod0 . g$12829$5uPkq)
        (fxdiv0 . g$12828$5uPkq)
        (fxdiv-and-mod . g$12827$5uPkq)
        (fxdiv . g$12826$5uPkq)
        (fxcopy-bit-field . g$7780$5uPkq)
        (fxcopy-bit . g$7778$5uPkq)
        (fxbit-set? . g$12825$5uPkq)
        (fxbit-field . g$7779$5uPkq)
        (fxbit-count . g$12824$5uPkq)
        (fxarithmetic-shift-right . g$7782$5uPkq)
        (fxarithmetic-shift-left . g$7781$5uPkq)
        (fxarithmetic-shift . g$12823$5uPkq)
        (fxand . g$12822$5uPkq)
        (fx>? . g$12821$5uPkq)
        (fx>=? . g$12820$5uPkq)
        (fx=? . g$12819$5uPkq)
        (fx<? . g$12818$5uPkq)
        (fx<=? . g$12817$5uPkq)
        (fx-/carry . g$7775$5uPkq)
        (fx- . g$12816$5uPkq)
        (fx+/carry . g$7776$5uPkq)
        (fx+ . g$12815$5uPkq)
        (fx*/carry . g$7774$5uPkq)
        (fx* . g$12814$5uPkq)
        (greatest-fixnum . g$12813$5uPkq)
        (least-fixnum . g$12812$5uPkq)
        (fixnum-width . g$12811$5uPkq)
        (fixnum? . g$12810$5uPkq)
        (bitwise-rotate-bit-field . g$7748$5uPkq)
        (bitwise-reverse-bit-field . g$12809$5uPkq)
        (bitwise-length . g$12808$5uPkq)
        (bitwise-if . g$7742$5uPkq)
        (bitwise-first-bit-set . g$12807$5uPkq)
        (bitwise-copy-bit-field . g$7745$5uPkq)
        (bitwise-copy-bit . g$7743$5uPkq)
        (bitwise-bit-set? . g$12806$5uPkq)
        (bitwise-bit-field . g$7744$5uPkq)
        (bitwise-bit-count . g$12805$5uPkq)
        (bitwise-xor . g$12804$5uPkq)
        (bitwise-ior . g$12803$5uPkq)
        (bitwise-and . g$12802$5uPkq)
        (bitwise-not . g$12801$5uPkq)
        (bitwise-arithmetic-shift-right . g$7747$5uPkq)
        (bitwise-arithmetic-shift-left . g$7746$5uPkq)
        (bitwise-arithmetic-shift . g$12800$5uPkq)
        (zero? . g$12799$5uPkq)
        (vector? . g$12798$5uPkq)
        (vector-set! . g$12797$5uPkq)
        (vector-ref . g$12796$5uPkq)
        (vector-map . g$12795$5uPkq)
        (vector-length . g$12794$5uPkq)
        (vector-for-each . g$12793$5uPkq)
        (vector-fill! . g$12792$5uPkq)
        (vector->list . g$12791$5uPkq)
        (vector . g$12790$5uPkq)
        (values . g$12789$5uPkq)
        (truncate . g$12788$5uPkq)
        (tan . g$12787$5uPkq)
        (symbol? . g$12786$5uPkq)
        (symbol=? . g$6749$5uPkq)
        (symbol->string . g$12785$5uPkq)
        (substring . g$12784$5uPkq)
        (string? . g$12783$5uPkq)
        (string>? . g$6746$5uPkq)
        (string>=? . g$6748$5uPkq)
        (string=? . g$6744$5uPkq)
        (string<? . g$6745$5uPkq)
        (string<=? . g$6747$5uPkq)
        (string-ref . g$12782$5uPkq)
        (string-length . g$12781$5uPkq)
        (string-for-each . g$12780$5uPkq)
        (string-copy . g$12779$5uPkq)
        (string-append . g$12778$5uPkq)
        (string->symbol . g$12777$5uPkq)
        (string->number . g$12776$5uPkq)
        (string->list . g$12775$5uPkq)
        (string . g$12774$5uPkq)
        (sqrt . g$12773$5uPkq)
        (sin . g$12772$5uPkq)
        (round . g$12771$5uPkq)
        (reverse . g$12770$5uPkq)
        (real? . g$12769$5uPkq)
        (real-valued? . g$12768$5uPkq)
        (real-part . g$12767$5uPkq)
        (rationalize . g$6790$5uPkq)
        (rational? . g$12766$5uPkq)
        (rational-valued? . g$12765$5uPkq)
        (procedure? . g$12764$5uPkq)
        (positive? . g$12763$5uPkq)
        (pair? . g$12762$5uPkq)
        (odd? . g$12761$5uPkq)
        (numerator . g$12760$5uPkq)
        (number? . g$12759$5uPkq)
        (number->string . g$12758$5uPkq)
        (null? . g$12757$5uPkq)
        (not . g$12756$5uPkq)
        (negative? . g$12755$5uPkq)
        (nan? . g$12754$5uPkq)
        (min . g$12753$5uPkq)
        (max . g$12752$5uPkq)
        (map . g$6564$5uPkq)
        (make-vector . g$12751$5uPkq)
        (make-string . g$12750$5uPkq)
        (make-rectangular . g$12749$5uPkq)
        (make-polar . g$12748$5uPkq)
        (magnitude . g$12747$5uPkq)
        (log . g$12746$5uPkq)
        (list? . g$12745$5uPkq)
        (list-tail . g$6544$5uPkq)
        (list-ref . g$6545$5uPkq)
        (list->vector . g$12744$5uPkq)
        (list->string . g$12743$5uPkq)
        (list . g$12742$5uPkq)
        (length . g$12741$5uPkq)
        (lcm . g$12740$5uPkq)
        (integer? . g$12739$5uPkq)
        (integer-valued? . g$12738$5uPkq)
        (integer->char . g$12737$5uPkq)
        (infinite? . g$12736$5uPkq)
        (inexact? . g$12735$5uPkq)
        (inexact . g$12734$5uPkq)
        (imag-part . g$12733$5uPkq)
        (gcd . g$12732$5uPkq)
        (for-each . g$6565$5uPkq)
        (floor . g$12731$5uPkq)
        (finite? . g$12730$5uPkq)
        (expt . g$12729$5uPkq)
        (exp . g$12728$5uPkq)
        (exact? . g$12727$5uPkq)
        (exact-integer-sqrt . g$12726$5uPkq)
        (exact . g$12725$5uPkq)
        (even? . g$12724$5uPkq)
        (error . g$12723$5uPkq)
        (eqv? . g$12722$5uPkq)
        (equal? . g$12721$5uPkq)
        (eq? . g$12720$5uPkq)
        (dynamic-wind . g$12719$5uPkq)
        (div0-and-mod0 . g$12718$5uPkq)
        (mod0 . g$12717$5uPkq)
        (div0 . g$12716$5uPkq)
        (div-and-mod . g$12715$5uPkq)
        (mod . g$12714$5uPkq)
        (div . g$12713$5uPkq)
        (denominator . g$12712$5uPkq)
        (cos . g$12711$5uPkq)
        (cons . g$12710$5uPkq)
        (complex? . g$12709$5uPkq)
        (char? . g$12708$5uPkq)
        (char>? . g$6787$5uPkq)
        (char>=? . g$6789$5uPkq)
        (char=? . g$6785$5uPkq)
        (char<? . g$6786$5uPkq)
        (char<=? . g$6788$5uPkq)
        (char->integer . g$12707$5uPkq)
        (ceiling . g$12706$5uPkq)
        (call-with-values . g$12705$5uPkq)
        (call/cc . g$12704$5uPkq)
        (call-with-current-continuation . g$12703$5uPkq)
        (cddddr . g$6709$5uPkq)
        (cdddar . g$6708$5uPkq)
        (cddadr . g$6707$5uPkq)
        (cddaar . g$6706$5uPkq)
        (cdaddr . g$6705$5uPkq)
        (cdadar . g$6704$5uPkq)
        (cdaadr . g$6703$5uPkq)
        (cdaaar . g$6702$5uPkq)
        (cadddr . g$6701$5uPkq)
        (caddar . g$6700$5uPkq)
        (cadadr . g$6699$5uPkq)
        (cadaar . g$6698$5uPkq)
        (caaddr . g$6697$5uPkq)
        (caadar . g$6696$5uPkq)
        (caaadr . g$6695$5uPkq)
        (caaaar . g$6694$5uPkq)
        (cdddr . g$6693$5uPkq)
        (cddar . g$6692$5uPkq)
        (cdadr . g$6691$5uPkq)
        (cdaar . g$6690$5uPkq)
        (caddr . g$6689$5uPkq)
        (cadar . g$6688$5uPkq)
        (caadr . g$6687$5uPkq)
        (caaar . g$6686$5uPkq)
        (cddr . g$6685$5uPkq)
        (cdar . g$6684$5uPkq)
        (cadr . g$6683$5uPkq)
        (caar . g$6682$5uPkq)
        (cdr . g$12702$5uPkq)
        (car . g$12701$5uPkq)
        (boolean? . g$12700$5uPkq)
        (boolean=? . g$6750$5uPkq)
        (atan . g$12699$5uPkq)
        (assertion-violation . g$12698$5uPkq)
        (asin . g$12697$5uPkq)
        (apply . g$12696$5uPkq)
        (append . g$12695$5uPkq)
        (angle . g$12694$5uPkq)
        (acos . g$12693$5uPkq)
        (abs . g$12692$5uPkq)
        (/ . g$12691$5uPkq)
        (* . g$12690$5uPkq)
        (- . g$12689$5uPkq)
        (+ . g$12688$5uPkq)
        (>= . g$12687$5uPkq)
        (> . g$12686$5uPkq)
        (= . g$12685$5uPkq)
        (<= . g$12684$5uPkq)
        (< . g$12683$5uPkq)
        (deserialize-port . g$12679$5uPkq)
        (serialize-port . g$12678$5uPkq)
        (enum-set? . g$8098$5uPkq)
        (load/args . g$12513$5uPkq)
        (printf . g$8209$5uPkq)
        (fprintf . g$8210$5uPkq)
        (format . g$8211$5uPkq)
        (procedure-form . g$12677$5uPkq)
        (procedure-environment . g$12676$5uPkq)
        (procedure-name . g$12675$5uPkq)
        (procedure-arity . g$12674$5uPkq)
        (gc-collect . g$12673$5uPkq)
        (clr-type? . g$12672$5uPkq)
        (get-clr-type . g$12671$5uPkq)
        (vector-append . g$12669$5uPkq)
        (vector-filter . g$12668$5uPkq)
        (vector-reverse! . g$12667$5uPkq)
        (vector-contains? . g$12666$5uPkq)
        (vector-index-of . g$12665$5uPkq)
        (vector-copy . g$12664$5uPkq)
        (vector-binary-search . g$12663$5uPkq)
        (string-ci-compare . g$12662$5uPkq)
        (string-compare . g$12661$5uPkq)
        (string-format . g$12660$5uPkq)
        (trace-printer . g$12510$5uPkq)
        (time-it . g$12658$5uPkq)
        (make-parameter . g$8238$5uPkq)
        (open-tcp-input/output-port . g$12655$5uPkq)
        (hashtable-for-each . g$12654$5uPkq)
        (hashtable-map . g$12653$5uPkq)
        (environment-bindings . g$9511$5uPkq)
        (environment-symbols . g$9514$5uPkq)
        (interaction-environment-symbols . g$9510$5uPkq)
        (optimization-level . g$12652$5uPkq)
        (library-path . g$8693$5uPkq)
        (expand . g$9518$5uPkq)
        (&no-nans . g$12651$5uPkq)
        (&no-infinities . g$12650$5uPkq)
        (&i/o-encoding . g$12649$5uPkq)
        (&i/o-decoding . g$12648$5uPkq)
        (&i/o-port . g$12647$5uPkq)
        (&i/o-file-does-not-exist . g$12646$5uPkq)
        (&i/o-file-already-exists . g$12645$5uPkq)
        (&i/o-file-is-read-only . g$12644$5uPkq)
        (&i/o-file-protection . g$12643$5uPkq)
        (&i/o-filename . g$12642$5uPkq)
        (&i/o-invalid-position . g$12641$5uPkq)
        (&i/o-write . g$12640$5uPkq)
        (&i/o-read . g$12639$5uPkq)
        (&i/o . g$12638$5uPkq)
        (&non-continuable . g$12637$5uPkq)
        (&undefined . g$12636$5uPkq)
        (&syntax . g$12635$5uPkq)
        (&lexical . g$12634$5uPkq)
        (&implementation-restriction . g$12633$5uPkq)
        (&who . g$12632$5uPkq)
        (&irritants . g$12631$5uPkq)
        (&assertion . g$12630$5uPkq)
        (&violation . g$12629$5uPkq)
        (&error . g$12628$5uPkq)
        (&serious . g$12627$5uPkq)
        (&warning . g$12626$5uPkq)
        (&message . g$12625$5uPkq)
        (&condition . g$12624$5uPkq)
        (define-condition-type . g$12623$5uPkq)
        (define-enumeration . g$12622$5uPkq)
        (define-record-type . g$12621$5uPkq)
        (parent-rtd . g$12620$5uPkq)
        (nongenerative . g$12619$5uPkq)
        (opaque . g$12618$5uPkq)
        (sealed . g$12617$5uPkq)
        (protocol . g$12616$5uPkq)
        (parent . g$12615$5uPkq)
        (immutable . g$12614$5uPkq)
        (mutable . g$12613$5uPkq)
        (fields . g$12612$5uPkq)
        (error-handling-mode . g$12611$5uPkq)
        (file-options . g$12610$5uPkq)
        (buffer-mode . g$12609$5uPkq)
        (eol-style . g$12608$5uPkq)
        (guard . g$12607$5uPkq)
        (trace-letrec-syntax . g$12606$5uPkq)
        (trace-let-syntax . g$12605$5uPkq)
        (trace-define-syntax . g$12604$5uPkq)
        (trace-define . g$12603$5uPkq)
        (trace-lambda . g$12602$5uPkq)
        (unsyntax-splicing . g$12601$5uPkq)
        (unsyntax . g$12600$5uPkq)
        (unquote-splicing . g$12599$5uPkq)
        (unquote . g$12598$5uPkq)
        (_ . g$12597$5uPkq)
        (else . g$12596$5uPkq)
        (=> . g$12595$5uPkq)
        (... . g$12594$5uPkq)
        (assert . g$12593$5uPkq)
        (endianness . g$12592$5uPkq)
        (delay . g$12591$5uPkq)
        (time . g$12590$5uPkq)
        (or . g$12589$5uPkq)
        (and . g$12588$5uPkq)
        (do . g$12587$5uPkq)
        (cond . g$12586$5uPkq)
        (let* . g$12585$5uPkq)
        (let . g$12584$5uPkq)
        (identifier-syntax . g$12583$5uPkq)
        (with-syntax . g$12582$5uPkq)
        (quasisyntax . g$12581$5uPkq)
        (quasiquote . g$12580$5uPkq)
        (syntax-rules . g$12579$5uPkq)
        (include-into . g$12578$5uPkq)
        (include . g$12577$5uPkq)
        (let-values . g$12575$5uPkq)
        (let*-values . g$12574$5uPkq)
        (record-constructor-descriptor . g$12573$5uPkq)
        (record-type-descriptor . g$12572$5uPkq)
        (fluid-let-syntax . g$12571$5uPkq)
        (case . g$12570$5uPkq)
        (parameterize . g$12569$5uPkq)
        (unless . g$12568$5uPkq)
        (when . g$12567$5uPkq)
        (if . g$12566$5uPkq)
        (letrec* . g$12565$5uPkq)
        (letrec . g$12564$5uPkq)
        (case-lambda . g$12562$5uPkq)
        (lambda . g$12561$5uPkq)
        (syntax . g$12560$5uPkq)
        (syntax-case . g$12559$5uPkq)
        (quote . g$12558$5uPkq)
        (letrec-syntax . g$12556$5uPkq)
        (let-syntax . g$12555$5uPkq)
        (set! . g$12554$5uPkq)
        (export . g$12553$5uPkq)
        (import . g$12552$5uPkq)
        (library . g$12551$5uPkq)
        (begin . g$12550$5uPkq)
        (module . g$12549$5uPkq)
        (define-syntax . g$12548$5uPkq)
        (define . g$12547$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13156$5uPkq
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12656$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7826$5uPkq
      'g$13157$5uPkq
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13097$5uPkq)
        (annotation-source . g$13096$5uPkq)
        (annotation-expression . g$13095$5uPkq)
        (annotation? . g$13094$5uPkq)
        (read-annotated . g$13093$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7826$5uPkq
      'g$13158$5uPkq
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13066$5uPkq)
        (serialize-library . g$13065$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7826$5uPkq
      'g$13159$5uPkq
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$9141$5uPkq)
        (variable-transformer? . g$9140$5uPkq)
        (eqv-hash . g$12681$5uPkq)
        (reverse! . g$12680$5uPkq)
        (make-promise . g$7569$5uPkq)
        (format . g$8211$5uPkq)
        (get-command-line . g$12670$5uPkq)
        (make-traced-procedure . g$12659$5uPkq)
        (make-traced-macro . g$8231$5uPkq)
        (assertion-error . g$9532$5uPkq)
        (library-locator . g$12657$5uPkq)
        (get-library-paths . g$12656$5uPkq)
        (library-path . g$8693$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7826$5uPkq
      'g$13160$5uPkq
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12682$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13161$5uPkq
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$13083$5uPkq)
        (clr-field-set!-internal . g$13082$5uPkq)
        (clr-field-get-internal . g$13081$5uPkq)
        (clr-cast-internal . g$13080$5uPkq)
        (clr-call-internal . g$13079$5uPkq)
        (clr-new-internal . g$13078$5uPkq)
        (clr-new-array-internal . g$13077$5uPkq)
        (clr-is-internal . g$13076$5uPkq)
        (clr-reference-internal . g$13075$5uPkq)
        (clr-using-internal . g$13074$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13162$5uPkq
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12599$5uPkq)
        (unquote . g$12598$5uPkq)
        (else . g$12596$5uPkq)
        (=> . g$12595$5uPkq)
        (delay . g$12591$5uPkq)
        (or . g$12589$5uPkq)
        (and . g$12588$5uPkq)
        (do . g$12587$5uPkq)
        (cond . g$12586$5uPkq)
        (let* . g$12585$5uPkq)
        (let . g$12584$5uPkq)
        (quasiquote . g$12580$5uPkq)
        (syntax-rules . g$12579$5uPkq)
        (case . g$12570$5uPkq)
        (if . g$12566$5uPkq)
        (letrec . g$12564$5uPkq)
        (lambda . g$12561$5uPkq)
        (quote . g$12558$5uPkq)
        (letrec-syntax . g$12556$5uPkq)
        (let-syntax . g$12555$5uPkq)
        (set! . g$12554$5uPkq)
        (begin . g$12550$5uPkq)
        (define-syntax . g$12548$5uPkq)
        (define . g$12547$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7826$5uPkq
      'g$13163$5uPkq
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$9542$5uPkq)
        (char-ready? . g$13064$5uPkq)
        (string-ci>? . g$7647$5uPkq)
        (string-ci>=? . g$7649$5uPkq)
        (string-ci=? . g$7645$5uPkq)
        (string-ci<? . g$7646$5uPkq)
        (string-ci<=? . g$7648$5uPkq)
        (char-whitespace? . g$13055$5uPkq)
        (char-upper-case? . g$13054$5uPkq)
        (char-numeric? . g$13052$5uPkq)
        (char-lower-case? . g$13051$5uPkq)
        (char-upcase . g$13049$5uPkq)
        (char-downcase . g$13046$5uPkq)
        (char-ci>? . g$7686$5uPkq)
        (char-ci>=? . g$7688$5uPkq)
        (char-ci=? . g$7684$5uPkq)
        (char-ci<? . g$7685$5uPkq)
        (char-ci<=? . g$7687$5uPkq)
        (char-alphabetic? . g$13045$5uPkq)
        (call-with-output-file . g$8065$5uPkq)
        (call-with-input-file . g$8064$5uPkq)
        (write-char . g$13013$5uPkq)
        (write . g$13012$5uPkq)
        (with-output-to-file . g$8063$5uPkq)
        (with-input-from-file . g$8062$5uPkq)
        (read-char . g$13011$5uPkq)
        (read . g$13010$5uPkq)
        (peek-char . g$13009$5uPkq)
        (open-output-file . g$13008$5uPkq)
        (open-input-file . g$13007$5uPkq)
        (newline . g$13006$5uPkq)
        (display . g$13005$5uPkq)
        (close-output-port . g$13004$5uPkq)
        (close-input-port . g$13003$5uPkq)
        (eof-object? . g$13002$5uPkq)
        (eof-object . g$13001$5uPkq)
        (current-error-port . g$13000$5uPkq)
        (current-output-port . g$12999$5uPkq)
        (current-input-port . g$12998$5uPkq)
        (output-port? . g$12997$5uPkq)
        (input-port? . g$12996$5uPkq)
        (scheme-report-environment . g$9517$5uPkq)
        (quotient . g$7566$5uPkq)
        (null-environment . g$9516$5uPkq)
        (remainder . g$7567$5uPkq)
        (modulo . g$7568$5uPkq)
        (inexact->exact . g$12935$5uPkq)
        (force . g$7570$5uPkq)
        (exact->inexact . g$12934$5uPkq)
        (string-fill! . g$12932$5uPkq)
        (string-set! . g$12931$5uPkq)
        (set-cdr! . g$12930$5uPkq)
        (set-car! . g$12929$5uPkq)
        (memv . g$6557$5uPkq)
        (memq . g$6556$5uPkq)
        (member . g$6558$5uPkq)
        (assv . g$6553$5uPkq)
        (assq . g$6552$5uPkq)
        (assoc . g$6554$5uPkq)
        (eval . g$9519$5uPkq)
        (zero? . g$12799$5uPkq)
        (vector? . g$12798$5uPkq)
        (vector-set! . g$12797$5uPkq)
        (vector-ref . g$12796$5uPkq)
        (vector-length . g$12794$5uPkq)
        (vector-fill! . g$12792$5uPkq)
        (vector->list . g$12791$5uPkq)
        (vector . g$12790$5uPkq)
        (values . g$12789$5uPkq)
        (truncate . g$12788$5uPkq)
        (tan . g$12787$5uPkq)
        (symbol? . g$12786$5uPkq)
        (symbol->string . g$12785$5uPkq)
        (substring . g$12784$5uPkq)
        (string? . g$12783$5uPkq)
        (string>? . g$6746$5uPkq)
        (string>=? . g$6748$5uPkq)
        (string=? . g$6744$5uPkq)
        (string<? . g$6745$5uPkq)
        (string<=? . g$6747$5uPkq)
        (string-ref . g$12782$5uPkq)
        (string-length . g$12781$5uPkq)
        (string-copy . g$12779$5uPkq)
        (string-append . g$12778$5uPkq)
        (string->symbol . g$12777$5uPkq)
        (string->number . g$12776$5uPkq)
        (string->list . g$12775$5uPkq)
        (string . g$12774$5uPkq)
        (sqrt . g$12773$5uPkq)
        (sin . g$12772$5uPkq)
        (round . g$12771$5uPkq)
        (reverse . g$12770$5uPkq)
        (real? . g$12769$5uPkq)
        (real-part . g$12767$5uPkq)
        (rationalize . g$6790$5uPkq)
        (rational? . g$12766$5uPkq)
        (procedure? . g$12764$5uPkq)
        (positive? . g$12763$5uPkq)
        (pair? . g$12762$5uPkq)
        (odd? . g$12761$5uPkq)
        (numerator . g$12760$5uPkq)
        (number? . g$12759$5uPkq)
        (number->string . g$12758$5uPkq)
        (null? . g$12757$5uPkq)
        (not . g$12756$5uPkq)
        (negative? . g$12755$5uPkq)
        (min . g$12753$5uPkq)
        (max . g$12752$5uPkq)
        (map . g$6564$5uPkq)
        (make-vector . g$12751$5uPkq)
        (make-string . g$12750$5uPkq)
        (make-rectangular . g$12749$5uPkq)
        (make-polar . g$12748$5uPkq)
        (magnitude . g$12747$5uPkq)
        (log . g$12746$5uPkq)
        (list? . g$12745$5uPkq)
        (list-tail . g$6544$5uPkq)
        (list-ref . g$6545$5uPkq)
        (list->vector . g$12744$5uPkq)
        (list->string . g$12743$5uPkq)
        (list . g$12742$5uPkq)
        (length . g$12741$5uPkq)
        (lcm . g$12740$5uPkq)
        (integer? . g$12739$5uPkq)
        (integer->char . g$12737$5uPkq)
        (inexact? . g$12735$5uPkq)
        (imag-part . g$12733$5uPkq)
        (gcd . g$12732$5uPkq)
        (for-each . g$6565$5uPkq)
        (floor . g$12731$5uPkq)
        (expt . g$12729$5uPkq)
        (exp . g$12728$5uPkq)
        (exact? . g$12727$5uPkq)
        (even? . g$12724$5uPkq)
        (eqv? . g$12722$5uPkq)
        (equal? . g$12721$5uPkq)
        (eq? . g$12720$5uPkq)
        (dynamic-wind . g$12719$5uPkq)
        (denominator . g$12712$5uPkq)
        (cos . g$12711$5uPkq)
        (cons . g$12710$5uPkq)
        (complex? . g$12709$5uPkq)
        (char? . g$12708$5uPkq)
        (char>? . g$6787$5uPkq)
        (char>=? . g$6789$5uPkq)
        (char=? . g$6785$5uPkq)
        (char<? . g$6786$5uPkq)
        (char<=? . g$6788$5uPkq)
        (char->integer . g$12707$5uPkq)
        (ceiling . g$12706$5uPkq)
        (call-with-values . g$12705$5uPkq)
        (call-with-current-continuation . g$12703$5uPkq)
        (cddddr . g$6709$5uPkq)
        (cdddar . g$6708$5uPkq)
        (cddadr . g$6707$5uPkq)
        (cddaar . g$6706$5uPkq)
        (cdaddr . g$6705$5uPkq)
        (cdadar . g$6704$5uPkq)
        (cdaadr . g$6703$5uPkq)
        (cdaaar . g$6702$5uPkq)
        (cadddr . g$6701$5uPkq)
        (caddar . g$6700$5uPkq)
        (cadadr . g$6699$5uPkq)
        (cadaar . g$6698$5uPkq)
        (caaddr . g$6697$5uPkq)
        (caadar . g$6696$5uPkq)
        (caaadr . g$6695$5uPkq)
        (caaaar . g$6694$5uPkq)
        (cdddr . g$6693$5uPkq)
        (cddar . g$6692$5uPkq)
        (cdadr . g$6691$5uPkq)
        (cdaar . g$6690$5uPkq)
        (caddr . g$6689$5uPkq)
        (cadar . g$6688$5uPkq)
        (caadr . g$6687$5uPkq)
        (caaar . g$6686$5uPkq)
        (cddr . g$6685$5uPkq)
        (cdar . g$6684$5uPkq)
        (cadr . g$6683$5uPkq)
        (caar . g$6682$5uPkq)
        (cdr . g$12702$5uPkq)
        (car . g$12701$5uPkq)
        (boolean? . g$12700$5uPkq)
        (atan . g$12699$5uPkq)
        (asin . g$12697$5uPkq)
        (apply . g$12696$5uPkq)
        (append . g$12695$5uPkq)
        (angle . g$12694$5uPkq)
        (acos . g$12693$5uPkq)
        (abs . g$12692$5uPkq)
        (/ . g$12691$5uPkq)
        (* . g$12690$5uPkq)
        (- . g$12689$5uPkq)
        (+ . g$12688$5uPkq)
        (>= . g$12687$5uPkq)
        (> . g$12686$5uPkq)
        (= . g$12685$5uPkq)
        (<= . g$12684$5uPkq)
        (< . g$12683$5uPkq)
        (unquote-splicing . g$12599$5uPkq)
        (unquote . g$12598$5uPkq)
        (else . g$12596$5uPkq)
        (=> . g$12595$5uPkq)
        (... . g$12594$5uPkq)
        (delay . g$12591$5uPkq)
        (or . g$12589$5uPkq)
        (and . g$12588$5uPkq)
        (do . g$12587$5uPkq)
        (cond . g$12586$5uPkq)
        (let* . g$12585$5uPkq)
        (let . g$12584$5uPkq)
        (quasiquote . g$12580$5uPkq)
        (syntax-rules . g$12579$5uPkq)
        (case . g$12570$5uPkq)
        (if . g$12566$5uPkq)
        (letrec . g$12564$5uPkq)
        (lambda . g$12561$5uPkq)
        (quote . g$12558$5uPkq)
        (letrec-syntax . g$12556$5uPkq)
        (let-syntax . g$12555$5uPkq)
        (set! . g$12554$5uPkq)
        (begin . g$12550$5uPkq)
        (define-syntax . g$12548$5uPkq)
        (define . g$12547$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7826$5uPkq
      'g$13164$5uPkq
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13063$5uPkq)
        (string-titlecase . g$13062$5uPkq)
        (string-normalize-nfkd . g$13061$5uPkq)
        (string-normalize-nfkc . g$13060$5uPkq)
        (string-normalize-nfd . g$13059$5uPkq)
        (string-normalize-nfc . g$13058$5uPkq)
        (string-foldcase . g$13057$5uPkq)
        (string-downcase . g$13056$5uPkq)
        (string-ci>? . g$7647$5uPkq)
        (string-ci>=? . g$7649$5uPkq)
        (string-ci=? . g$7645$5uPkq)
        (string-ci<? . g$7646$5uPkq)
        (string-ci<=? . g$7648$5uPkq)
        (char-whitespace? . g$13055$5uPkq)
        (char-upper-case? . g$13054$5uPkq)
        (char-title-case? . g$13053$5uPkq)
        (char-numeric? . g$13052$5uPkq)
        (char-lower-case? . g$13051$5uPkq)
        (char-general-category . g$13050$5uPkq)
        (char-upcase . g$13049$5uPkq)
        (char-titlecase . g$13048$5uPkq)
        (char-foldcase . g$13047$5uPkq)
        (char-downcase . g$13046$5uPkq)
        (char-ci>? . g$7686$5uPkq)
        (char-ci>=? . g$7688$5uPkq)
        (char-ci=? . g$7684$5uPkq)
        (char-ci<? . g$7685$5uPkq)
        (char-ci<=? . g$7687$5uPkq)
        (char-alphabetic? . g$13045$5uPkq)
        (make-variable-transformer . g$9139$5uPkq)
        (identifier? . g$9537$5uPkq)
        (generate-temporaries . g$9526$5uPkq)
        (free-identifier=? . g$9527$5uPkq)
        (syntax->datum . g$9539$5uPkq)
        (datum->syntax . g$9538$5uPkq)
        (bound-identifier=? . g$9528$5uPkq)
        (record-type-descriptor? . g$13044$5uPkq)
        (record-predicate . g$13043$5uPkq)
        (record-mutator . g$13042$5uPkq)
        (record-constructor . g$13041$5uPkq)
        (record-accessor . g$13040$5uPkq)
        (make-record-type-descriptor . g$13039$5uPkq)
        (make-record-constructor-descriptor . g$13038$5uPkq)
        (record? . g$13037$5uPkq)
        (record-type-uid . g$13036$5uPkq)
        (record-type-sealed? . g$13035$5uPkq)
        (record-type-parent . g$13034$5uPkq)
        (record-type-opaque? . g$13033$5uPkq)
        (record-type-name . g$13032$5uPkq)
        (record-type-generative? . g$13031$5uPkq)
        (record-type-field-names . g$13030$5uPkq)
        (record-rtd . g$13029$5uPkq)
        (record-field-mutable? . g$13028$5uPkq)
        (delete-file . g$7223$5uPkq)
        (file-exists? . g$7222$5uPkq)
        (vector-sort! . g$13027$5uPkq)
        (vector-sort . g$13026$5uPkq)
        (list-sort . g$7587$5uPkq)
        (symbol-hash . g$13025$5uPkq)
        (string-ci-hash . g$13024$5uPkq)
        (string-hash . g$13023$5uPkq)
        (equal-hash . g$13022$5uPkq)
        (hashtable-equivalence-function . g$13021$5uPkq)
        (make-hashtable . g$13020$5uPkq)
        (hashtable-hash-function . g$13019$5uPkq)
        (make-eqv-hashtable . g$7191$5uPkq)
        (make-eq-hashtable . g$7190$5uPkq)
        (hashtable? . g$13018$5uPkq)
        (hashtable-update! . g$7197$5uPkq)
        (hashtable-size . g$7192$5uPkq)
        (hashtable-set! . g$7194$5uPkq)
        (hashtable-ref . g$7193$5uPkq)
        (hashtable-mutable? . g$13017$5uPkq)
        (hashtable-keys . g$13016$5uPkq)
        (hashtable-entries . g$13015$5uPkq)
        (hashtable-delete! . g$7195$5uPkq)
        (hashtable-copy . g$13014$5uPkq)
        (hashtable-contains? . g$7196$5uPkq)
        (hashtable-clear! . g$7198$5uPkq)
        (call-with-output-file . g$8065$5uPkq)
        (call-with-input-file . g$8064$5uPkq)
        (write-char . g$13013$5uPkq)
        (write . g$13012$5uPkq)
        (with-output-to-file . g$8063$5uPkq)
        (with-input-from-file . g$8062$5uPkq)
        (read-char . g$13011$5uPkq)
        (read . g$13010$5uPkq)
        (peek-char . g$13009$5uPkq)
        (open-output-file . g$13008$5uPkq)
        (open-input-file . g$13007$5uPkq)
        (newline . g$13006$5uPkq)
        (display . g$13005$5uPkq)
        (close-output-port . g$13004$5uPkq)
        (close-input-port . g$13003$5uPkq)
        (eof-object? . g$13002$5uPkq)
        (eof-object . g$13001$5uPkq)
        (current-error-port . g$13000$5uPkq)
        (current-output-port . g$12999$5uPkq)
        (current-input-port . g$12998$5uPkq)
        (output-port? . g$12997$5uPkq)
        (input-port? . g$12996$5uPkq)
        (utf-8-codec . g$12995$5uPkq)
        (utf-16-codec . g$12994$5uPkq)
        (transcoder-error-handling-mode . g$12993$5uPkq)
        (transcoder-eol-style . g$12992$5uPkq)
        (transcoder-codec . g$12991$5uPkq)
        (transcoded-port . g$12990$5uPkq)
        (textual-port? . g$12989$5uPkq)
        (string->bytevector . g$12988$5uPkq)
        (standard-output-port . g$12987$5uPkq)
        (standard-input-port . g$12986$5uPkq)
        (standard-error-port . g$12985$5uPkq)
        (set-port-position! . g$12984$5uPkq)
        (put-u8 . g$12983$5uPkq)
        (put-string . g$12982$5uPkq)
        (put-datum . g$12981$5uPkq)
        (put-char . g$12980$5uPkq)
        (put-bytevector . g$12979$5uPkq)
        (port? . g$8038$5uPkq)
        (port-transcoder . g$12978$5uPkq)
        (port-position . g$12977$5uPkq)
        (port-has-set-port-position!? . g$12976$5uPkq)
        (port-has-port-position? . g$12975$5uPkq)
        (port-eof? . g$12974$5uPkq)
        (output-port-buffer-mode . g$12973$5uPkq)
        (open-string-output-port . g$8037$5uPkq)
        (open-string-input-port . g$12972$5uPkq)
        (open-file-output-port . g$12971$5uPkq)
        (open-file-input/output-port . g$12970$5uPkq)
        (open-file-input-port . g$12969$5uPkq)
        (open-bytevector-output-port . g$12968$5uPkq)
        (open-bytevector-input-port . g$12967$5uPkq)
        (native-transcoder . g$12966$5uPkq)
        (native-eol-style . g$12965$5uPkq)
        (make-transcoder . g$12964$5uPkq)
        (latin-1-codec . g$12963$5uPkq)
        (make-i/o-write-error . g$7893$5uPkq)
        (make-i/o-read-error . g$7879$5uPkq)
        (make-i/o-port-error . g$7998$5uPkq)
        (make-i/o-invalid-position-error . g$7908$5uPkq)
        (make-i/o-filename-error . g$7925$5uPkq)
        (make-i/o-file-protection-error . g$7941$5uPkq)
        (make-i/o-file-is-read-only-error . g$7955$5uPkq)
        (make-i/o-file-does-not-exist-error . g$7983$5uPkq)
        (make-i/o-file-already-exists-error . g$7969$5uPkq)
        (make-i/o-error . g$7865$5uPkq)
        (make-i/o-encoding-error . g$8029$5uPkq)
        (make-i/o-decoding-error . g$8014$5uPkq)
        (make-custom-textual-output-port . g$12962$5uPkq)
        (make-custom-textual-input/output-port . g$12961$5uPkq)
        (make-custom-textual-input-port . g$12960$5uPkq)
        (make-custom-binary-output-port . g$12959$5uPkq)
        (make-custom-binary-input/output-port . g$12958$5uPkq)
        (make-custom-binary-input-port . g$12957$5uPkq)
        (make-bytevector . g$12956$5uPkq)
        (lookahead-u8 . g$12955$5uPkq)
        (lookahead-char . g$12954$5uPkq)
        (i/o-write-error? . g$7894$5uPkq)
        (i/o-read-error? . g$7880$5uPkq)
        (i/o-port-error? . g$8000$5uPkq)
        (i/o-invalid-position-error? . g$7910$5uPkq)
        (i/o-error-position . g$7911$5uPkq)
        (i/o-filename-error? . g$7927$5uPkq)
        (i/o-file-protection-error? . g$7942$5uPkq)
        (i/o-file-is-read-only-error? . g$7956$5uPkq)
        (i/o-file-does-not-exist-error? . g$7984$5uPkq)
        (i/o-file-already-exists-error? . g$7970$5uPkq)
        (i/o-error? . g$7866$5uPkq)
        (i/o-error-port . g$8001$5uPkq)
        (i/o-error-filename . g$7928$5uPkq)
        (i/o-encoding-error? . g$8031$5uPkq)
        (i/o-encoding-error-char . g$8032$5uPkq)
        (i/o-decoding-error? . g$8015$5uPkq)
        (get-u8 . g$12953$5uPkq)
        (get-string-n! . g$12952$5uPkq)
        (get-string-n . g$12951$5uPkq)
        (get-string-all . g$12950$5uPkq)
        (get-line . g$12949$5uPkq)
        (get-datum . g$12948$5uPkq)
        (get-char . g$12947$5uPkq)
        (get-bytevector-some . g$12946$5uPkq)
        (get-bytevector-n! . g$12945$5uPkq)
        (get-bytevector-n . g$12944$5uPkq)
        (get-bytevector-all . g$12943$5uPkq)
        (flush-output-port . g$12942$5uPkq)
        (close-port . g$12941$5uPkq)
        (call-with-string-output-port . g$8039$5uPkq)
        (call-with-port . g$12940$5uPkq)
        (call-with-bytevector-output-port . g$12939$5uPkq)
        (bytevector->string . g$12938$5uPkq)
        (buffer-mode? . g$12937$5uPkq)
        (binary-port? . g$12936$5uPkq)
        (exit . g$12933$5uPkq)
        (command-line . g$12511$5uPkq)
        (remove . g$6569$5uPkq)
        (remv . g$6570$5uPkq)
        (remp . g$6550$5uPkq)
        (remq . g$6571$5uPkq)
        (partition . g$6549$5uPkq)
        (memv . g$6557$5uPkq)
        (memq . g$6556$5uPkq)
        (memp . g$6559$5uPkq)
        (member . g$6558$5uPkq)
        (exists . g$6563$5uPkq)
        (for-all . g$6562$5uPkq)
        (fold-right . g$6568$5uPkq)
        (fold-left . g$6567$5uPkq)
        (find . g$6548$5uPkq)
        (filter . g$6551$5uPkq)
        (cons* . g$6566$5uPkq)
        (assv . g$6553$5uPkq)
        (assq . g$6552$5uPkq)
        (assp . g$6555$5uPkq)
        (assoc . g$6554$5uPkq)
        (with-exception-handler . g$12928$5uPkq)
        (raise-continuable . g$12927$5uPkq)
        (raise . g$12926$5uPkq)
        (make-enumeration . g$8123$5uPkq)
        (enum-set=? . g$8130$5uPkq)
        (enum-set-universe . g$8124$5uPkq)
        (enum-set-union . g$8131$5uPkq)
        (enum-set-subset? . g$8129$5uPkq)
        (enum-set-projection . g$8135$5uPkq)
        (enum-set-member? . g$8128$5uPkq)
        (enum-set-intersection . g$8132$5uPkq)
        (enum-set-indexer . g$8125$5uPkq)
        (enum-set-difference . g$8133$5uPkq)
        (enum-set-constructor . g$8126$5uPkq)
        (enum-set-complement . g$8134$5uPkq)
        (enum-set->list . g$8127$5uPkq)
        (who-condition? . g$7477$5uPkq)
        (warning? . g$7388$5uPkq)
        (violation? . g$7430$5uPkq)
        (undefined-violation? . g$7554$5uPkq)
        (syntax-violation? . g$7538$5uPkq)
        (syntax-violation-subform . g$7540$5uPkq)
        (syntax-violation-form . g$7539$5uPkq)
        (syntax-violation . g$9536$5uPkq)
        (simple-conditions . g$12925$5uPkq)
        (serious-condition? . g$7402$5uPkq)
        (non-continuable-violation? . g$7492$5uPkq)
        (message-condition? . g$7373$5uPkq)
        (make-who-condition . g$7475$5uPkq)
        (make-warning . g$7387$5uPkq)
        (make-violation . g$7429$5uPkq)
        (make-undefined-violation . g$7553$5uPkq)
        (make-syntax-violation . g$7535$5uPkq)
        (make-serious-condition . g$7401$5uPkq)
        (make-non-continuable-violation . g$7491$5uPkq)
        (make-message-condition . g$7371$5uPkq)
        (make-lexical-violation . g$7519$5uPkq)
        (make-irritants-condition . g$7458$5uPkq)
        (make-implementation-restriction-violation . g$7505$5uPkq)
        (make-error . g$7415$5uPkq)
        (make-assertion-violation . g$7443$5uPkq)
        (lexical-violation? . g$7520$5uPkq)
        (irritants-condition? . g$7460$5uPkq)
        (implementation-restriction-violation? . g$7506$5uPkq)
        (error? . g$7416$5uPkq)
        (condition-who . g$7478$5uPkq)
        (condition-predicate . g$12924$5uPkq)
        (condition-message . g$7374$5uPkq)
        (condition-irritants . g$7461$5uPkq)
        (condition-accessor . g$12923$5uPkq)
        (condition . g$12922$5uPkq)
        (assertion-violation? . g$7444$5uPkq)
        (condition? . g$12921$5uPkq)
        (utf32->string . g$12920$5uPkq)
        (utf16->string . g$12919$5uPkq)
        (utf8->string . g$12918$5uPkq)
        (uint-list->bytevector . g$12917$5uPkq)
        (u8-list->bytevector . g$12916$5uPkq)
        (string->utf8 . g$12915$5uPkq)
        (string->utf32 . g$12914$5uPkq)
        (string->utf16 . g$12913$5uPkq)
        (sint-list->bytevector . g$12912$5uPkq)
        (native-endianness . g$7229$5uPkq)
        (bytevector? . g$12911$5uPkq)
        (bytevector=? . g$12910$5uPkq)
        (bytevector-uint-set! . g$12909$5uPkq)
        (bytevector-uint-ref . g$12908$5uPkq)
        (bytevector-u8-set! . g$12907$5uPkq)
        (bytevector-u8-ref . g$12906$5uPkq)
        (bytevector-u64-set! . g$7250$5uPkq)
        (bytevector-u64-ref . g$7246$5uPkq)
        (bytevector-u64-native-set! . g$7252$5uPkq)
        (bytevector-u64-native-ref . g$7248$5uPkq)
        (bytevector-u32-set! . g$7242$5uPkq)
        (bytevector-u32-ref . g$7238$5uPkq)
        (bytevector-u32-native-set! . g$7244$5uPkq)
        (bytevector-u32-native-ref . g$7240$5uPkq)
        (bytevector-u16-set! . g$7234$5uPkq)
        (bytevector-u16-ref . g$7230$5uPkq)
        (bytevector-u16-native-set! . g$7236$5uPkq)
        (bytevector-u16-native-ref . g$7232$5uPkq)
        (bytevector-sint-set! . g$12905$5uPkq)
        (bytevector-sint-ref . g$12904$5uPkq)
        (bytevector-s8-set! . g$12903$5uPkq)
        (bytevector-s8-ref . g$12902$5uPkq)
        (bytevector-s64-set! . g$7251$5uPkq)
        (bytevector-s64-ref . g$7247$5uPkq)
        (bytevector-s64-native-set! . g$7253$5uPkq)
        (bytevector-s64-native-ref . g$7249$5uPkq)
        (bytevector-s32-set! . g$7243$5uPkq)
        (bytevector-s32-ref . g$7239$5uPkq)
        (bytevector-s32-native-set! . g$7245$5uPkq)
        (bytevector-s32-native-ref . g$7241$5uPkq)
        (bytevector-s16-set! . g$7235$5uPkq)
        (bytevector-s16-ref . g$7231$5uPkq)
        (bytevector-s16-native-set! . g$7237$5uPkq)
        (bytevector-s16-native-ref . g$7233$5uPkq)
        (bytevector-length . g$12901$5uPkq)
        (bytevector-ieee-single-set! . g$12900$5uPkq)
        (bytevector-ieee-single-ref . g$12899$5uPkq)
        (bytevector-ieee-single-native-set! . g$7256$5uPkq)
        (bytevector-ieee-single-native-ref . g$7254$5uPkq)
        (bytevector-ieee-double-set! . g$12898$5uPkq)
        (bytevector-ieee-double-ref . g$12897$5uPkq)
        (bytevector-ieee-double-native-set! . g$7257$5uPkq)
        (bytevector-ieee-double-native-ref . g$7255$5uPkq)
        (bytevector-fill! . g$12896$5uPkq)
        (bytevector-copy! . g$12895$5uPkq)
        (bytevector-copy . g$12894$5uPkq)
        (bytevector->uint-list . g$12893$5uPkq)
        (bytevector->u8-list . g$12892$5uPkq)
        (bytevector->sint-list . g$12891$5uPkq)
        (no-nans-violation? . g$7851$5uPkq)
        (no-infinities-violation? . g$7837$5uPkq)
        (make-no-nans-violation . g$7850$5uPkq)
        (make-no-infinities-violation . g$7836$5uPkq)
        (real->flonum . g$12890$5uPkq)
        (flzero? . g$12889$5uPkq)
        (fltruncate . g$12888$5uPkq)
        (fltan . g$12887$5uPkq)
        (flsqrt . g$12886$5uPkq)
        (flsin . g$12885$5uPkq)
        (flround . g$12884$5uPkq)
        (flpositive? . g$12883$5uPkq)
        (flonum? . g$12882$5uPkq)
        (flodd? . g$12881$5uPkq)
        (flnumerator . g$12880$5uPkq)
        (flnegative? . g$12879$5uPkq)
        (flnan? . g$12878$5uPkq)
        (flmod0 . g$12877$5uPkq)
        (flmod . g$12876$5uPkq)
        (flmin . g$12875$5uPkq)
        (flmax . g$12874$5uPkq)
        (fllog . g$12873$5uPkq)
        (flinteger? . g$12872$5uPkq)
        (flinfinite? . g$12871$5uPkq)
        (flfloor . g$12870$5uPkq)
        (flfinite? . g$12869$5uPkq)
        (flexpt . g$12868$5uPkq)
        (flexp . g$12867$5uPkq)
        (fleven? . g$12866$5uPkq)
        (fldiv0-and-mod0 . g$12865$5uPkq)
        (fldiv0 . g$12864$5uPkq)
        (fldiv-and-mod . g$12863$5uPkq)
        (fldiv . g$12862$5uPkq)
        (fldenominator . g$12861$5uPkq)
        (flcos . g$12860$5uPkq)
        (flceiling . g$12859$5uPkq)
        (flatan . g$12858$5uPkq)
        (flasin . g$12857$5uPkq)
        (flacos . g$12856$5uPkq)
        (flabs . g$12855$5uPkq)
        (fl>? . g$12854$5uPkq)
        (fl>=? . g$12853$5uPkq)
        (fl=? . g$12852$5uPkq)
        (fl<? . g$12851$5uPkq)
        (fl<=? . g$12850$5uPkq)
        (fl/ . g$12849$5uPkq)
        (fl- . g$12848$5uPkq)
        (fl+ . g$12847$5uPkq)
        (fl* . g$12846$5uPkq)
        (fixnum->flonum . g$12845$5uPkq)
        (fxzero? . g$12844$5uPkq)
        (fxxor . g$12843$5uPkq)
        (fxrotate-bit-field . g$7783$5uPkq)
        (fxreverse-bit-field . g$12842$5uPkq)
        (fxpositive? . g$12841$5uPkq)
        (fxodd? . g$12840$5uPkq)
        (fxnot . g$12839$5uPkq)
        (fxnegative? . g$12838$5uPkq)
        (fxmod0 . g$12837$5uPkq)
        (fxmod . g$12836$5uPkq)
        (fxmin . g$12835$5uPkq)
        (fxmax . g$12834$5uPkq)
        (fxlength . g$12833$5uPkq)
        (fxior . g$12832$5uPkq)
        (fxif . g$7777$5uPkq)
        (fxfirst-bit-set . g$12831$5uPkq)
        (fxeven? . g$12830$5uPkq)
        (fxdiv0-and-mod0 . g$12829$5uPkq)
        (fxdiv0 . g$12828$5uPkq)
        (fxdiv-and-mod . g$12827$5uPkq)
        (fxdiv . g$12826$5uPkq)
        (fxcopy-bit-field . g$7780$5uPkq)
        (fxcopy-bit . g$7778$5uPkq)
        (fxbit-set? . g$12825$5uPkq)
        (fxbit-field . g$7779$5uPkq)
        (fxbit-count . g$12824$5uPkq)
        (fxarithmetic-shift-right . g$7782$5uPkq)
        (fxarithmetic-shift-left . g$7781$5uPkq)
        (fxarithmetic-shift . g$12823$5uPkq)
        (fxand . g$12822$5uPkq)
        (fx>? . g$12821$5uPkq)
        (fx>=? . g$12820$5uPkq)
        (fx=? . g$12819$5uPkq)
        (fx<? . g$12818$5uPkq)
        (fx<=? . g$12817$5uPkq)
        (fx-/carry . g$7775$5uPkq)
        (fx- . g$12816$5uPkq)
        (fx+/carry . g$7776$5uPkq)
        (fx+ . g$12815$5uPkq)
        (fx*/carry . g$7774$5uPkq)
        (fx* . g$12814$5uPkq)
        (greatest-fixnum . g$12813$5uPkq)
        (least-fixnum . g$12812$5uPkq)
        (fixnum-width . g$12811$5uPkq)
        (fixnum? . g$12810$5uPkq)
        (bitwise-rotate-bit-field . g$7748$5uPkq)
        (bitwise-reverse-bit-field . g$12809$5uPkq)
        (bitwise-length . g$12808$5uPkq)
        (bitwise-if . g$7742$5uPkq)
        (bitwise-first-bit-set . g$12807$5uPkq)
        (bitwise-copy-bit-field . g$7745$5uPkq)
        (bitwise-copy-bit . g$7743$5uPkq)
        (bitwise-bit-set? . g$12806$5uPkq)
        (bitwise-bit-field . g$7744$5uPkq)
        (bitwise-bit-count . g$12805$5uPkq)
        (bitwise-xor . g$12804$5uPkq)
        (bitwise-ior . g$12803$5uPkq)
        (bitwise-and . g$12802$5uPkq)
        (bitwise-not . g$12801$5uPkq)
        (bitwise-arithmetic-shift-right . g$7747$5uPkq)
        (bitwise-arithmetic-shift-left . g$7746$5uPkq)
        (bitwise-arithmetic-shift . g$12800$5uPkq)
        (zero? . g$12799$5uPkq)
        (vector? . g$12798$5uPkq)
        (vector-set! . g$12797$5uPkq)
        (vector-ref . g$12796$5uPkq)
        (vector-map . g$12795$5uPkq)
        (vector-length . g$12794$5uPkq)
        (vector-for-each . g$12793$5uPkq)
        (vector-fill! . g$12792$5uPkq)
        (vector->list . g$12791$5uPkq)
        (vector . g$12790$5uPkq)
        (values . g$12789$5uPkq)
        (truncate . g$12788$5uPkq)
        (tan . g$12787$5uPkq)
        (symbol? . g$12786$5uPkq)
        (symbol=? . g$6749$5uPkq)
        (symbol->string . g$12785$5uPkq)
        (substring . g$12784$5uPkq)
        (string? . g$12783$5uPkq)
        (string>? . g$6746$5uPkq)
        (string>=? . g$6748$5uPkq)
        (string=? . g$6744$5uPkq)
        (string<? . g$6745$5uPkq)
        (string<=? . g$6747$5uPkq)
        (string-ref . g$12782$5uPkq)
        (string-length . g$12781$5uPkq)
        (string-for-each . g$12780$5uPkq)
        (string-copy . g$12779$5uPkq)
        (string-append . g$12778$5uPkq)
        (string->symbol . g$12777$5uPkq)
        (string->number . g$12776$5uPkq)
        (string->list . g$12775$5uPkq)
        (string . g$12774$5uPkq)
        (sqrt . g$12773$5uPkq)
        (sin . g$12772$5uPkq)
        (round . g$12771$5uPkq)
        (reverse . g$12770$5uPkq)
        (real? . g$12769$5uPkq)
        (real-valued? . g$12768$5uPkq)
        (real-part . g$12767$5uPkq)
        (rationalize . g$6790$5uPkq)
        (rational? . g$12766$5uPkq)
        (rational-valued? . g$12765$5uPkq)
        (procedure? . g$12764$5uPkq)
        (positive? . g$12763$5uPkq)
        (pair? . g$12762$5uPkq)
        (odd? . g$12761$5uPkq)
        (numerator . g$12760$5uPkq)
        (number? . g$12759$5uPkq)
        (number->string . g$12758$5uPkq)
        (null? . g$12757$5uPkq)
        (not . g$12756$5uPkq)
        (negative? . g$12755$5uPkq)
        (nan? . g$12754$5uPkq)
        (min . g$12753$5uPkq)
        (max . g$12752$5uPkq)
        (map . g$6564$5uPkq)
        (make-vector . g$12751$5uPkq)
        (make-string . g$12750$5uPkq)
        (make-rectangular . g$12749$5uPkq)
        (make-polar . g$12748$5uPkq)
        (magnitude . g$12747$5uPkq)
        (log . g$12746$5uPkq)
        (list? . g$12745$5uPkq)
        (list-tail . g$6544$5uPkq)
        (list-ref . g$6545$5uPkq)
        (list->vector . g$12744$5uPkq)
        (list->string . g$12743$5uPkq)
        (list . g$12742$5uPkq)
        (length . g$12741$5uPkq)
        (lcm . g$12740$5uPkq)
        (integer? . g$12739$5uPkq)
        (integer-valued? . g$12738$5uPkq)
        (integer->char . g$12737$5uPkq)
        (infinite? . g$12736$5uPkq)
        (inexact? . g$12735$5uPkq)
        (inexact . g$12734$5uPkq)
        (imag-part . g$12733$5uPkq)
        (gcd . g$12732$5uPkq)
        (for-each . g$6565$5uPkq)
        (floor . g$12731$5uPkq)
        (finite? . g$12730$5uPkq)
        (expt . g$12729$5uPkq)
        (exp . g$12728$5uPkq)
        (exact? . g$12727$5uPkq)
        (exact-integer-sqrt . g$12726$5uPkq)
        (exact . g$12725$5uPkq)
        (even? . g$12724$5uPkq)
        (error . g$12723$5uPkq)
        (eqv? . g$12722$5uPkq)
        (equal? . g$12721$5uPkq)
        (eq? . g$12720$5uPkq)
        (dynamic-wind . g$12719$5uPkq)
        (div0-and-mod0 . g$12718$5uPkq)
        (mod0 . g$12717$5uPkq)
        (div0 . g$12716$5uPkq)
        (div-and-mod . g$12715$5uPkq)
        (mod . g$12714$5uPkq)
        (div . g$12713$5uPkq)
        (denominator . g$12712$5uPkq)
        (cos . g$12711$5uPkq)
        (cons . g$12710$5uPkq)
        (complex? . g$12709$5uPkq)
        (char? . g$12708$5uPkq)
        (char>? . g$6787$5uPkq)
        (char>=? . g$6789$5uPkq)
        (char=? . g$6785$5uPkq)
        (char<? . g$6786$5uPkq)
        (char<=? . g$6788$5uPkq)
        (char->integer . g$12707$5uPkq)
        (ceiling . g$12706$5uPkq)
        (call-with-values . g$12705$5uPkq)
        (call/cc . g$12704$5uPkq)
        (call-with-current-continuation . g$12703$5uPkq)
        (cddddr . g$6709$5uPkq)
        (cdddar . g$6708$5uPkq)
        (cddadr . g$6707$5uPkq)
        (cddaar . g$6706$5uPkq)
        (cdaddr . g$6705$5uPkq)
        (cdadar . g$6704$5uPkq)
        (cdaadr . g$6703$5uPkq)
        (cdaaar . g$6702$5uPkq)
        (cadddr . g$6701$5uPkq)
        (caddar . g$6700$5uPkq)
        (cadadr . g$6699$5uPkq)
        (cadaar . g$6698$5uPkq)
        (caaddr . g$6697$5uPkq)
        (caadar . g$6696$5uPkq)
        (caaadr . g$6695$5uPkq)
        (caaaar . g$6694$5uPkq)
        (cdddr . g$6693$5uPkq)
        (cddar . g$6692$5uPkq)
        (cdadr . g$6691$5uPkq)
        (cdaar . g$6690$5uPkq)
        (caddr . g$6689$5uPkq)
        (cadar . g$6688$5uPkq)
        (caadr . g$6687$5uPkq)
        (caaar . g$6686$5uPkq)
        (cddr . g$6685$5uPkq)
        (cdar . g$6684$5uPkq)
        (cadr . g$6683$5uPkq)
        (caar . g$6682$5uPkq)
        (cdr . g$12702$5uPkq)
        (car . g$12701$5uPkq)
        (boolean? . g$12700$5uPkq)
        (boolean=? . g$6750$5uPkq)
        (atan . g$12699$5uPkq)
        (assertion-violation . g$12698$5uPkq)
        (asin . g$12697$5uPkq)
        (apply . g$12696$5uPkq)
        (append . g$12695$5uPkq)
        (angle . g$12694$5uPkq)
        (acos . g$12693$5uPkq)
        (abs . g$12692$5uPkq)
        (/ . g$12691$5uPkq)
        (* . g$12690$5uPkq)
        (- . g$12689$5uPkq)
        (+ . g$12688$5uPkq)
        (>= . g$12687$5uPkq)
        (> . g$12686$5uPkq)
        (= . g$12685$5uPkq)
        (<= . g$12684$5uPkq)
        (< . g$12683$5uPkq)
        (&no-nans . g$12651$5uPkq)
        (&no-infinities . g$12650$5uPkq)
        (&i/o-encoding . g$12649$5uPkq)
        (&i/o-decoding . g$12648$5uPkq)
        (&i/o-port . g$12647$5uPkq)
        (&i/o-file-does-not-exist . g$12646$5uPkq)
        (&i/o-file-already-exists . g$12645$5uPkq)
        (&i/o-file-is-read-only . g$12644$5uPkq)
        (&i/o-file-protection . g$12643$5uPkq)
        (&i/o-filename . g$12642$5uPkq)
        (&i/o-invalid-position . g$12641$5uPkq)
        (&i/o-write . g$12640$5uPkq)
        (&i/o-read . g$12639$5uPkq)
        (&i/o . g$12638$5uPkq)
        (&non-continuable . g$12637$5uPkq)
        (&undefined . g$12636$5uPkq)
        (&syntax . g$12635$5uPkq)
        (&lexical . g$12634$5uPkq)
        (&implementation-restriction . g$12633$5uPkq)
        (&who . g$12632$5uPkq)
        (&irritants . g$12631$5uPkq)
        (&assertion . g$12630$5uPkq)
        (&violation . g$12629$5uPkq)
        (&error . g$12628$5uPkq)
        (&serious . g$12627$5uPkq)
        (&warning . g$12626$5uPkq)
        (&message . g$12625$5uPkq)
        (&condition . g$12624$5uPkq)
        (define-condition-type . g$12623$5uPkq)
        (define-enumeration . g$12622$5uPkq)
        (define-record-type . g$12621$5uPkq)
        (parent-rtd . g$12620$5uPkq)
        (nongenerative . g$12619$5uPkq)
        (opaque . g$12618$5uPkq)
        (sealed . g$12617$5uPkq)
        (protocol . g$12616$5uPkq)
        (parent . g$12615$5uPkq)
        (immutable . g$12614$5uPkq)
        (mutable . g$12613$5uPkq)
        (fields . g$12612$5uPkq)
        (error-handling-mode . g$12611$5uPkq)
        (file-options . g$12610$5uPkq)
        (buffer-mode . g$12609$5uPkq)
        (eol-style . g$12608$5uPkq)
        (guard . g$12607$5uPkq)
        (unsyntax-splicing . g$12601$5uPkq)
        (unsyntax . g$12600$5uPkq)
        (unquote-splicing . g$12599$5uPkq)
        (unquote . g$12598$5uPkq)
        (_ . g$12597$5uPkq)
        (else . g$12596$5uPkq)
        (=> . g$12595$5uPkq)
        (... . g$12594$5uPkq)
        (assert . g$12593$5uPkq)
        (endianness . g$12592$5uPkq)
        (or . g$12589$5uPkq)
        (and . g$12588$5uPkq)
        (do . g$12587$5uPkq)
        (cond . g$12586$5uPkq)
        (let* . g$12585$5uPkq)
        (let . g$12584$5uPkq)
        (identifier-syntax . g$12583$5uPkq)
        (with-syntax . g$12582$5uPkq)
        (quasisyntax . g$12581$5uPkq)
        (quasiquote . g$12580$5uPkq)
        (syntax-rules . g$12579$5uPkq)
        (let-values . g$12575$5uPkq)
        (let*-values . g$12574$5uPkq)
        (record-constructor-descriptor . g$12573$5uPkq)
        (record-type-descriptor . g$12572$5uPkq)
        (case . g$12570$5uPkq)
        (unless . g$12568$5uPkq)
        (when . g$12567$5uPkq)
        (if . g$12566$5uPkq)
        (letrec* . g$12565$5uPkq)
        (letrec . g$12564$5uPkq)
        (case-lambda . g$12562$5uPkq)
        (lambda . g$12561$5uPkq)
        (syntax . g$12560$5uPkq)
        (syntax-case . g$12559$5uPkq)
        (quote . g$12558$5uPkq)
        (letrec-syntax . g$12556$5uPkq)
        (let-syntax . g$12555$5uPkq)
        (set! . g$12554$5uPkq)
        (begin . g$12550$5uPkq)
        (define-syntax . g$12548$5uPkq)
        (define . g$12547$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13165$5uPkq
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$9542$5uPkq)
        (scheme-report-environment . g$9517$5uPkq)
        (quotient . g$7566$5uPkq)
        (null-environment . g$9516$5uPkq)
        (remainder . g$7567$5uPkq)
        (modulo . g$7568$5uPkq)
        (inexact->exact . g$12935$5uPkq)
        (force . g$7570$5uPkq)
        (exact->inexact . g$12934$5uPkq)
        (delay . g$12591$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13166$5uPkq
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12587$5uPkq)
        (unless . g$12568$5uPkq)
        (when . g$12567$5uPkq)
        (case-lambda . g$12562$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13167$5uPkq
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9519$5uPkq) (environment . g$9515$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13168$5uPkq
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12930$5uPkq) (set-car! . g$12929$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13169$5uPkq
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12932$5uPkq) (string-set! . g$12931$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13170$5uPkq
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12933$5uPkq) (command-line . g$12511$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13171$5uPkq
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9139$5uPkq)
        (identifier? . g$9537$5uPkq)
        (generate-temporaries . g$9526$5uPkq)
        (free-identifier=? . g$9527$5uPkq)
        (syntax->datum . g$9539$5uPkq)
        (datum->syntax . g$9538$5uPkq)
        (bound-identifier=? . g$9528$5uPkq)
        (syntax-violation . g$9536$5uPkq)
        (unsyntax-splicing . g$12601$5uPkq)
        (unsyntax . g$12600$5uPkq)
        (_ . g$12597$5uPkq)
        (... . g$12594$5uPkq)
        (with-syntax . g$12582$5uPkq)
        (quasisyntax . g$12581$5uPkq)
        (syntax . g$12560$5uPkq)
        (syntax-case . g$12559$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13172$5uPkq
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$7223$5uPkq)
        (file-exists? . g$7222$5uPkq)
        (make-i/o-write-error . g$7893$5uPkq)
        (make-i/o-read-error . g$7879$5uPkq)
        (make-i/o-port-error . g$7998$5uPkq)
        (make-i/o-invalid-position-error . g$7908$5uPkq)
        (make-i/o-filename-error . g$7925$5uPkq)
        (make-i/o-file-protection-error . g$7941$5uPkq)
        (make-i/o-file-is-read-only-error . g$7955$5uPkq)
        (make-i/o-file-does-not-exist-error . g$7983$5uPkq)
        (make-i/o-file-already-exists-error . g$7969$5uPkq)
        (make-i/o-error . g$7865$5uPkq)
        (i/o-write-error? . g$7894$5uPkq)
        (i/o-read-error? . g$7880$5uPkq)
        (i/o-port-error? . g$8000$5uPkq)
        (i/o-invalid-position-error? . g$7910$5uPkq)
        (i/o-error-position . g$7911$5uPkq)
        (i/o-filename-error? . g$7927$5uPkq)
        (i/o-file-protection-error? . g$7942$5uPkq)
        (i/o-file-is-read-only-error? . g$7956$5uPkq)
        (i/o-file-does-not-exist-error? . g$7984$5uPkq)
        (i/o-file-already-exists-error? . g$7970$5uPkq)
        (i/o-error? . g$7866$5uPkq)
        (i/o-error-port . g$8001$5uPkq)
        (i/o-error-filename . g$7928$5uPkq)
        (&i/o-port . g$12647$5uPkq)
        (&i/o-file-does-not-exist . g$12646$5uPkq)
        (&i/o-file-already-exists . g$12645$5uPkq)
        (&i/o-file-is-read-only . g$12644$5uPkq)
        (&i/o-file-protection . g$12643$5uPkq)
        (&i/o-filename . g$12642$5uPkq)
        (&i/o-invalid-position . g$12641$5uPkq)
        (&i/o-write . g$12640$5uPkq)
        (&i/o-read . g$12639$5uPkq)
        (&i/o . g$12638$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13173$5uPkq
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13027$5uPkq)
        (vector-sort . g$13026$5uPkq)
        (list-sort . g$7587$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13174$5uPkq
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12799$5uPkq)
        (vector? . g$12798$5uPkq)
        (vector-set! . g$12797$5uPkq)
        (vector-ref . g$12796$5uPkq)
        (vector-map . g$12795$5uPkq)
        (vector-length . g$12794$5uPkq)
        (vector-for-each . g$12793$5uPkq)
        (vector-fill! . g$12792$5uPkq)
        (vector->list . g$12791$5uPkq)
        (vector . g$12790$5uPkq)
        (values . g$12789$5uPkq)
        (truncate . g$12788$5uPkq)
        (tan . g$12787$5uPkq)
        (symbol? . g$12786$5uPkq)
        (symbol=? . g$6749$5uPkq)
        (symbol->string . g$12785$5uPkq)
        (substring . g$12784$5uPkq)
        (string? . g$12783$5uPkq)
        (string>? . g$6746$5uPkq)
        (string>=? . g$6748$5uPkq)
        (string=? . g$6744$5uPkq)
        (string<? . g$6745$5uPkq)
        (string<=? . g$6747$5uPkq)
        (string-ref . g$12782$5uPkq)
        (string-length . g$12781$5uPkq)
        (string-for-each . g$12780$5uPkq)
        (string-copy . g$12779$5uPkq)
        (string-append . g$12778$5uPkq)
        (string->symbol . g$12777$5uPkq)
        (string->number . g$12776$5uPkq)
        (string->list . g$12775$5uPkq)
        (string . g$12774$5uPkq)
        (sqrt . g$12773$5uPkq)
        (sin . g$12772$5uPkq)
        (round . g$12771$5uPkq)
        (reverse . g$12770$5uPkq)
        (real? . g$12769$5uPkq)
        (real-valued? . g$12768$5uPkq)
        (real-part . g$12767$5uPkq)
        (rationalize . g$6790$5uPkq)
        (rational? . g$12766$5uPkq)
        (rational-valued? . g$12765$5uPkq)
        (procedure? . g$12764$5uPkq)
        (positive? . g$12763$5uPkq)
        (pair? . g$12762$5uPkq)
        (odd? . g$12761$5uPkq)
        (numerator . g$12760$5uPkq)
        (number? . g$12759$5uPkq)
        (number->string . g$12758$5uPkq)
        (null? . g$12757$5uPkq)
        (not . g$12756$5uPkq)
        (negative? . g$12755$5uPkq)
        (nan? . g$12754$5uPkq)
        (min . g$12753$5uPkq)
        (max . g$12752$5uPkq)
        (map . g$6564$5uPkq)
        (make-vector . g$12751$5uPkq)
        (make-string . g$12750$5uPkq)
        (make-rectangular . g$12749$5uPkq)
        (make-polar . g$12748$5uPkq)
        (magnitude . g$12747$5uPkq)
        (log . g$12746$5uPkq)
        (list? . g$12745$5uPkq)
        (list-tail . g$6544$5uPkq)
        (list-ref . g$6545$5uPkq)
        (list->vector . g$12744$5uPkq)
        (list->string . g$12743$5uPkq)
        (list . g$12742$5uPkq)
        (length . g$12741$5uPkq)
        (lcm . g$12740$5uPkq)
        (integer? . g$12739$5uPkq)
        (integer-valued? . g$12738$5uPkq)
        (integer->char . g$12737$5uPkq)
        (infinite? . g$12736$5uPkq)
        (inexact? . g$12735$5uPkq)
        (inexact . g$12734$5uPkq)
        (imag-part . g$12733$5uPkq)
        (gcd . g$12732$5uPkq)
        (for-each . g$6565$5uPkq)
        (floor . g$12731$5uPkq)
        (finite? . g$12730$5uPkq)
        (expt . g$12729$5uPkq)
        (exp . g$12728$5uPkq)
        (exact? . g$12727$5uPkq)
        (exact-integer-sqrt . g$12726$5uPkq)
        (exact . g$12725$5uPkq)
        (even? . g$12724$5uPkq)
        (error . g$12723$5uPkq)
        (eqv? . g$12722$5uPkq)
        (equal? . g$12721$5uPkq)
        (eq? . g$12720$5uPkq)
        (dynamic-wind . g$12719$5uPkq)
        (div0-and-mod0 . g$12718$5uPkq)
        (mod0 . g$12717$5uPkq)
        (div0 . g$12716$5uPkq)
        (div-and-mod . g$12715$5uPkq)
        (mod . g$12714$5uPkq)
        (div . g$12713$5uPkq)
        (denominator . g$12712$5uPkq)
        (cos . g$12711$5uPkq)
        (cons . g$12710$5uPkq)
        (complex? . g$12709$5uPkq)
        (char? . g$12708$5uPkq)
        (char>? . g$6787$5uPkq)
        (char>=? . g$6789$5uPkq)
        (char=? . g$6785$5uPkq)
        (char<? . g$6786$5uPkq)
        (char<=? . g$6788$5uPkq)
        (char->integer . g$12707$5uPkq)
        (ceiling . g$12706$5uPkq)
        (call-with-values . g$12705$5uPkq)
        (call/cc . g$12704$5uPkq)
        (call-with-current-continuation . g$12703$5uPkq)
        (cddddr . g$6709$5uPkq)
        (cdddar . g$6708$5uPkq)
        (cddadr . g$6707$5uPkq)
        (cddaar . g$6706$5uPkq)
        (cdaddr . g$6705$5uPkq)
        (cdadar . g$6704$5uPkq)
        (cdaadr . g$6703$5uPkq)
        (cdaaar . g$6702$5uPkq)
        (cadddr . g$6701$5uPkq)
        (caddar . g$6700$5uPkq)
        (cadadr . g$6699$5uPkq)
        (cadaar . g$6698$5uPkq)
        (caaddr . g$6697$5uPkq)
        (caadar . g$6696$5uPkq)
        (caaadr . g$6695$5uPkq)
        (caaaar . g$6694$5uPkq)
        (cdddr . g$6693$5uPkq)
        (cddar . g$6692$5uPkq)
        (cdadr . g$6691$5uPkq)
        (cdaar . g$6690$5uPkq)
        (caddr . g$6689$5uPkq)
        (cadar . g$6688$5uPkq)
        (caadr . g$6687$5uPkq)
        (caaar . g$6686$5uPkq)
        (cddr . g$6685$5uPkq)
        (cdar . g$6684$5uPkq)
        (cadr . g$6683$5uPkq)
        (caar . g$6682$5uPkq)
        (cdr . g$12702$5uPkq)
        (car . g$12701$5uPkq)
        (boolean? . g$12700$5uPkq)
        (boolean=? . g$6750$5uPkq)
        (atan . g$12699$5uPkq)
        (assertion-violation . g$12698$5uPkq)
        (asin . g$12697$5uPkq)
        (apply . g$12696$5uPkq)
        (append . g$12695$5uPkq)
        (angle . g$12694$5uPkq)
        (acos . g$12693$5uPkq)
        (abs . g$12692$5uPkq)
        (/ . g$12691$5uPkq)
        (* . g$12690$5uPkq)
        (- . g$12689$5uPkq)
        (+ . g$12688$5uPkq)
        (>= . g$12687$5uPkq)
        (> . g$12686$5uPkq)
        (= . g$12685$5uPkq)
        (<= . g$12684$5uPkq)
        (< . g$12683$5uPkq)
        (unquote-splicing . g$12599$5uPkq)
        (unquote . g$12598$5uPkq)
        (_ . g$12597$5uPkq)
        (else . g$12596$5uPkq)
        (=> . g$12595$5uPkq)
        (... . g$12594$5uPkq)
        (assert . g$12593$5uPkq)
        (or . g$12589$5uPkq)
        (and . g$12588$5uPkq)
        (cond . g$12586$5uPkq)
        (let* . g$12585$5uPkq)
        (let . g$12584$5uPkq)
        (identifier-syntax . g$12583$5uPkq)
        (quasiquote . g$12580$5uPkq)
        (syntax-rules . g$12579$5uPkq)
        (let-values . g$12575$5uPkq)
        (let*-values . g$12574$5uPkq)
        (case . g$12570$5uPkq)
        (if . g$12566$5uPkq)
        (letrec* . g$12565$5uPkq)
        (letrec . g$12564$5uPkq)
        (lambda . g$12561$5uPkq)
        (quote . g$12558$5uPkq)
        (letrec-syntax . g$12556$5uPkq)
        (let-syntax . g$12555$5uPkq)
        (set! . g$12554$5uPkq)
        (begin . g$12550$5uPkq)
        (define-syntax . g$12548$5uPkq)
        (define . g$12547$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13175$5uPkq
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6569$5uPkq)
        (remv . g$6570$5uPkq)
        (remp . g$6550$5uPkq)
        (remq . g$6571$5uPkq)
        (partition . g$6549$5uPkq)
        (memv . g$6557$5uPkq)
        (memq . g$6556$5uPkq)
        (memp . g$6559$5uPkq)
        (member . g$6558$5uPkq)
        (exists . g$6563$5uPkq)
        (for-all . g$6562$5uPkq)
        (fold-right . g$6568$5uPkq)
        (fold-left . g$6567$5uPkq)
        (find . g$6548$5uPkq)
        (filter . g$6551$5uPkq)
        (cons* . g$6566$5uPkq)
        (assv . g$6553$5uPkq)
        (assq . g$6552$5uPkq)
        (assp . g$6555$5uPkq)
        (assoc . g$6554$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13176$5uPkq
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8065$5uPkq)
        (call-with-input-file . g$8064$5uPkq)
        (write-char . g$13013$5uPkq)
        (write . g$13012$5uPkq)
        (with-output-to-file . g$8063$5uPkq)
        (with-input-from-file . g$8062$5uPkq)
        (read-char . g$13011$5uPkq)
        (read . g$13010$5uPkq)
        (peek-char . g$13009$5uPkq)
        (open-output-file . g$13008$5uPkq)
        (open-input-file . g$13007$5uPkq)
        (newline . g$13006$5uPkq)
        (display . g$13005$5uPkq)
        (close-output-port . g$13004$5uPkq)
        (close-input-port . g$13003$5uPkq)
        (eof-object? . g$13002$5uPkq)
        (eof-object . g$13001$5uPkq)
        (current-error-port . g$13000$5uPkq)
        (current-output-port . g$12999$5uPkq)
        (current-input-port . g$12998$5uPkq)
        (output-port? . g$12997$5uPkq)
        (input-port? . g$12996$5uPkq)
        (make-i/o-write-error . g$7893$5uPkq)
        (make-i/o-read-error . g$7879$5uPkq)
        (make-i/o-port-error . g$7998$5uPkq)
        (make-i/o-invalid-position-error . g$7908$5uPkq)
        (make-i/o-filename-error . g$7925$5uPkq)
        (make-i/o-file-protection-error . g$7941$5uPkq)
        (make-i/o-file-is-read-only-error . g$7955$5uPkq)
        (make-i/o-file-does-not-exist-error . g$7983$5uPkq)
        (make-i/o-file-already-exists-error . g$7969$5uPkq)
        (make-i/o-error . g$7865$5uPkq)
        (i/o-write-error? . g$7894$5uPkq)
        (i/o-read-error? . g$7880$5uPkq)
        (i/o-port-error? . g$8000$5uPkq)
        (i/o-invalid-position-error? . g$7910$5uPkq)
        (i/o-error-position . g$7911$5uPkq)
        (i/o-filename-error? . g$7927$5uPkq)
        (i/o-file-protection-error? . g$7942$5uPkq)
        (i/o-file-is-read-only-error? . g$7956$5uPkq)
        (i/o-file-does-not-exist-error? . g$7984$5uPkq)
        (i/o-file-already-exists-error? . g$7970$5uPkq)
        (i/o-error? . g$7866$5uPkq)
        (i/o-error-port . g$8001$5uPkq)
        (i/o-error-filename . g$7928$5uPkq)
        (&i/o-port . g$12647$5uPkq)
        (&i/o-file-does-not-exist . g$12646$5uPkq)
        (&i/o-file-already-exists . g$12645$5uPkq)
        (&i/o-file-is-read-only . g$12644$5uPkq)
        (&i/o-file-protection . g$12643$5uPkq)
        (&i/o-filename . g$12642$5uPkq)
        (&i/o-invalid-position . g$12641$5uPkq)
        (&i/o-write . g$12640$5uPkq)
        (&i/o-read . g$12639$5uPkq)
        (&i/o . g$12638$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13177$5uPkq
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12956$5uPkq)
        (utf32->string . g$12920$5uPkq)
        (utf16->string . g$12919$5uPkq)
        (utf8->string . g$12918$5uPkq)
        (uint-list->bytevector . g$12917$5uPkq)
        (u8-list->bytevector . g$12916$5uPkq)
        (string->utf8 . g$12915$5uPkq)
        (string->utf32 . g$12914$5uPkq)
        (string->utf16 . g$12913$5uPkq)
        (sint-list->bytevector . g$12912$5uPkq)
        (native-endianness . g$7229$5uPkq)
        (bytevector? . g$12911$5uPkq)
        (bytevector=? . g$12910$5uPkq)
        (bytevector-uint-set! . g$12909$5uPkq)
        (bytevector-uint-ref . g$12908$5uPkq)
        (bytevector-u8-set! . g$12907$5uPkq)
        (bytevector-u8-ref . g$12906$5uPkq)
        (bytevector-u64-set! . g$7250$5uPkq)
        (bytevector-u64-ref . g$7246$5uPkq)
        (bytevector-u64-native-set! . g$7252$5uPkq)
        (bytevector-u64-native-ref . g$7248$5uPkq)
        (bytevector-u32-set! . g$7242$5uPkq)
        (bytevector-u32-ref . g$7238$5uPkq)
        (bytevector-u32-native-set! . g$7244$5uPkq)
        (bytevector-u32-native-ref . g$7240$5uPkq)
        (bytevector-u16-set! . g$7234$5uPkq)
        (bytevector-u16-ref . g$7230$5uPkq)
        (bytevector-u16-native-set! . g$7236$5uPkq)
        (bytevector-u16-native-ref . g$7232$5uPkq)
        (bytevector-sint-set! . g$12905$5uPkq)
        (bytevector-sint-ref . g$12904$5uPkq)
        (bytevector-s8-set! . g$12903$5uPkq)
        (bytevector-s8-ref . g$12902$5uPkq)
        (bytevector-s64-set! . g$7251$5uPkq)
        (bytevector-s64-ref . g$7247$5uPkq)
        (bytevector-s64-native-set! . g$7253$5uPkq)
        (bytevector-s64-native-ref . g$7249$5uPkq)
        (bytevector-s32-set! . g$7243$5uPkq)
        (bytevector-s32-ref . g$7239$5uPkq)
        (bytevector-s32-native-set! . g$7245$5uPkq)
        (bytevector-s32-native-ref . g$7241$5uPkq)
        (bytevector-s16-set! . g$7235$5uPkq)
        (bytevector-s16-ref . g$7231$5uPkq)
        (bytevector-s16-native-set! . g$7237$5uPkq)
        (bytevector-s16-native-ref . g$7233$5uPkq)
        (bytevector-length . g$12901$5uPkq)
        (bytevector-ieee-single-set! . g$12900$5uPkq)
        (bytevector-ieee-single-ref . g$12899$5uPkq)
        (bytevector-ieee-single-native-set! . g$7256$5uPkq)
        (bytevector-ieee-single-native-ref . g$7254$5uPkq)
        (bytevector-ieee-double-set! . g$12898$5uPkq)
        (bytevector-ieee-double-ref . g$12897$5uPkq)
        (bytevector-ieee-double-native-set! . g$7257$5uPkq)
        (bytevector-ieee-double-native-ref . g$7255$5uPkq)
        (bytevector-fill! . g$12896$5uPkq)
        (bytevector-copy! . g$12895$5uPkq)
        (bytevector-copy . g$12894$5uPkq)
        (bytevector->uint-list . g$12893$5uPkq)
        (bytevector->u8-list . g$12892$5uPkq)
        (bytevector->sint-list . g$12891$5uPkq)
        (endianness . g$12592$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13178$5uPkq
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13063$5uPkq)
        (string-titlecase . g$13062$5uPkq)
        (string-normalize-nfkd . g$13061$5uPkq)
        (string-normalize-nfkc . g$13060$5uPkq)
        (string-normalize-nfd . g$13059$5uPkq)
        (string-normalize-nfc . g$13058$5uPkq)
        (string-foldcase . g$13057$5uPkq)
        (string-downcase . g$13056$5uPkq)
        (string-ci>? . g$7647$5uPkq)
        (string-ci>=? . g$7649$5uPkq)
        (string-ci=? . g$7645$5uPkq)
        (string-ci<? . g$7646$5uPkq)
        (string-ci<=? . g$7648$5uPkq)
        (char-whitespace? . g$13055$5uPkq)
        (char-upper-case? . g$13054$5uPkq)
        (char-title-case? . g$13053$5uPkq)
        (char-numeric? . g$13052$5uPkq)
        (char-lower-case? . g$13051$5uPkq)
        (char-general-category . g$13050$5uPkq)
        (char-upcase . g$13049$5uPkq)
        (char-titlecase . g$13048$5uPkq)
        (char-foldcase . g$13047$5uPkq)
        (char-downcase . g$13046$5uPkq)
        (char-ci>? . g$7686$5uPkq)
        (char-ci>=? . g$7688$5uPkq)
        (char-ci=? . g$7684$5uPkq)
        (char-ci<? . g$7685$5uPkq)
        (char-ci<=? . g$7687$5uPkq)
        (char-alphabetic? . g$13045$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13179$5uPkq
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12928$5uPkq)
        (raise-continuable . g$12927$5uPkq)
        (raise . g$12926$5uPkq)
        (guard . g$12607$5uPkq)
        (else . g$12596$5uPkq)
        (=> . g$12595$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13180$5uPkq
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7748$5uPkq)
        (bitwise-reverse-bit-field . g$12809$5uPkq)
        (bitwise-length . g$12808$5uPkq)
        (bitwise-if . g$7742$5uPkq)
        (bitwise-first-bit-set . g$12807$5uPkq)
        (bitwise-copy-bit-field . g$7745$5uPkq)
        (bitwise-copy-bit . g$7743$5uPkq)
        (bitwise-bit-set? . g$12806$5uPkq)
        (bitwise-bit-field . g$7744$5uPkq)
        (bitwise-bit-count . g$12805$5uPkq)
        (bitwise-xor . g$12804$5uPkq)
        (bitwise-ior . g$12803$5uPkq)
        (bitwise-and . g$12802$5uPkq)
        (bitwise-not . g$12801$5uPkq)
        (bitwise-arithmetic-shift-right . g$7747$5uPkq)
        (bitwise-arithmetic-shift-left . g$7746$5uPkq)
        (bitwise-arithmetic-shift . g$12800$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13181$5uPkq
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12844$5uPkq)
        (fxxor . g$12843$5uPkq)
        (fxrotate-bit-field . g$7783$5uPkq)
        (fxreverse-bit-field . g$12842$5uPkq)
        (fxpositive? . g$12841$5uPkq)
        (fxodd? . g$12840$5uPkq)
        (fxnot . g$12839$5uPkq)
        (fxnegative? . g$12838$5uPkq)
        (fxmod0 . g$12837$5uPkq)
        (fxmod . g$12836$5uPkq)
        (fxmin . g$12835$5uPkq)
        (fxmax . g$12834$5uPkq)
        (fxlength . g$12833$5uPkq)
        (fxior . g$12832$5uPkq)
        (fxif . g$7777$5uPkq)
        (fxfirst-bit-set . g$12831$5uPkq)
        (fxeven? . g$12830$5uPkq)
        (fxdiv0-and-mod0 . g$12829$5uPkq)
        (fxdiv0 . g$12828$5uPkq)
        (fxdiv-and-mod . g$12827$5uPkq)
        (fxdiv . g$12826$5uPkq)
        (fxcopy-bit-field . g$7780$5uPkq)
        (fxcopy-bit . g$7778$5uPkq)
        (fxbit-set? . g$12825$5uPkq)
        (fxbit-field . g$7779$5uPkq)
        (fxbit-count . g$12824$5uPkq)
        (fxarithmetic-shift-right . g$7782$5uPkq)
        (fxarithmetic-shift-left . g$7781$5uPkq)
        (fxarithmetic-shift . g$12823$5uPkq)
        (fxand . g$12822$5uPkq)
        (fx>? . g$12821$5uPkq)
        (fx>=? . g$12820$5uPkq)
        (fx=? . g$12819$5uPkq)
        (fx<? . g$12818$5uPkq)
        (fx<=? . g$12817$5uPkq)
        (fx-/carry . g$7775$5uPkq)
        (fx- . g$12816$5uPkq)
        (fx+/carry . g$7776$5uPkq)
        (fx+ . g$12815$5uPkq)
        (fx*/carry . g$7774$5uPkq)
        (fx* . g$12814$5uPkq)
        (greatest-fixnum . g$12813$5uPkq)
        (least-fixnum . g$12812$5uPkq)
        (fixnum-width . g$12811$5uPkq)
        (fixnum? . g$12810$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13182$5uPkq
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7851$5uPkq)
        (no-infinities-violation? . g$7837$5uPkq)
        (make-no-nans-violation . g$7850$5uPkq)
        (make-no-infinities-violation . g$7836$5uPkq)
        (real->flonum . g$12890$5uPkq)
        (flzero? . g$12889$5uPkq)
        (fltruncate . g$12888$5uPkq)
        (fltan . g$12887$5uPkq)
        (flsqrt . g$12886$5uPkq)
        (flsin . g$12885$5uPkq)
        (flround . g$12884$5uPkq)
        (flpositive? . g$12883$5uPkq)
        (flonum? . g$12882$5uPkq)
        (flodd? . g$12881$5uPkq)
        (flnumerator . g$12880$5uPkq)
        (flnegative? . g$12879$5uPkq)
        (flnan? . g$12878$5uPkq)
        (flmod0 . g$12877$5uPkq)
        (flmod . g$12876$5uPkq)
        (flmin . g$12875$5uPkq)
        (flmax . g$12874$5uPkq)
        (fllog . g$12873$5uPkq)
        (flinteger? . g$12872$5uPkq)
        (flinfinite? . g$12871$5uPkq)
        (flfloor . g$12870$5uPkq)
        (flfinite? . g$12869$5uPkq)
        (flexpt . g$12868$5uPkq)
        (flexp . g$12867$5uPkq)
        (fleven? . g$12866$5uPkq)
        (fldiv0-and-mod0 . g$12865$5uPkq)
        (fldiv0 . g$12864$5uPkq)
        (fldiv-and-mod . g$12863$5uPkq)
        (fldiv . g$12862$5uPkq)
        (fldenominator . g$12861$5uPkq)
        (flcos . g$12860$5uPkq)
        (flceiling . g$12859$5uPkq)
        (flatan . g$12858$5uPkq)
        (flasin . g$12857$5uPkq)
        (flacos . g$12856$5uPkq)
        (flabs . g$12855$5uPkq)
        (fl>? . g$12854$5uPkq)
        (fl>=? . g$12853$5uPkq)
        (fl=? . g$12852$5uPkq)
        (fl<? . g$12851$5uPkq)
        (fl<=? . g$12850$5uPkq)
        (fl/ . g$12849$5uPkq)
        (fl- . g$12848$5uPkq)
        (fl+ . g$12847$5uPkq)
        (fl* . g$12846$5uPkq)
        (fixnum->flonum . g$12845$5uPkq)
        (&no-nans . g$12651$5uPkq)
        (&no-infinities . g$12650$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13183$5uPkq
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13025$5uPkq)
        (string-ci-hash . g$13024$5uPkq)
        (string-hash . g$13023$5uPkq)
        (equal-hash . g$13022$5uPkq)
        (hashtable-equivalence-function . g$13021$5uPkq)
        (make-hashtable . g$13020$5uPkq)
        (hashtable-hash-function . g$13019$5uPkq)
        (make-eqv-hashtable . g$7191$5uPkq)
        (make-eq-hashtable . g$7190$5uPkq)
        (hashtable? . g$13018$5uPkq)
        (hashtable-update! . g$7197$5uPkq)
        (hashtable-size . g$7192$5uPkq)
        (hashtable-set! . g$7194$5uPkq)
        (hashtable-ref . g$7193$5uPkq)
        (hashtable-mutable? . g$13017$5uPkq)
        (hashtable-keys . g$13016$5uPkq)
        (hashtable-entries . g$13015$5uPkq)
        (hashtable-delete! . g$7195$5uPkq)
        (hashtable-copy . g$13014$5uPkq)
        (hashtable-contains? . g$7196$5uPkq)
        (hashtable-clear! . g$7198$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13184$5uPkq
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13002$5uPkq)
        (eof-object . g$13001$5uPkq)
        (current-error-port . g$13000$5uPkq)
        (current-output-port . g$12999$5uPkq)
        (current-input-port . g$12998$5uPkq)
        (output-port? . g$12997$5uPkq)
        (input-port? . g$12996$5uPkq)
        (utf-8-codec . g$12995$5uPkq)
        (utf-16-codec . g$12994$5uPkq)
        (transcoder-error-handling-mode . g$12993$5uPkq)
        (transcoder-eol-style . g$12992$5uPkq)
        (transcoder-codec . g$12991$5uPkq)
        (transcoded-port . g$12990$5uPkq)
        (textual-port? . g$12989$5uPkq)
        (string->bytevector . g$12988$5uPkq)
        (standard-output-port . g$12987$5uPkq)
        (standard-input-port . g$12986$5uPkq)
        (standard-error-port . g$12985$5uPkq)
        (set-port-position! . g$12984$5uPkq)
        (put-u8 . g$12983$5uPkq)
        (put-string . g$12982$5uPkq)
        (put-datum . g$12981$5uPkq)
        (put-char . g$12980$5uPkq)
        (put-bytevector . g$12979$5uPkq)
        (port? . g$8038$5uPkq)
        (port-transcoder . g$12978$5uPkq)
        (port-position . g$12977$5uPkq)
        (port-has-set-port-position!? . g$12976$5uPkq)
        (port-has-port-position? . g$12975$5uPkq)
        (port-eof? . g$12974$5uPkq)
        (output-port-buffer-mode . g$12973$5uPkq)
        (open-string-output-port . g$8037$5uPkq)
        (open-string-input-port . g$12972$5uPkq)
        (open-file-output-port . g$12971$5uPkq)
        (open-file-input/output-port . g$12970$5uPkq)
        (open-file-input-port . g$12969$5uPkq)
        (open-bytevector-output-port . g$12968$5uPkq)
        (open-bytevector-input-port . g$12967$5uPkq)
        (native-transcoder . g$12966$5uPkq)
        (native-eol-style . g$12965$5uPkq)
        (make-transcoder . g$12964$5uPkq)
        (latin-1-codec . g$12963$5uPkq)
        (make-i/o-write-error . g$7893$5uPkq)
        (make-i/o-read-error . g$7879$5uPkq)
        (make-i/o-port-error . g$7998$5uPkq)
        (make-i/o-invalid-position-error . g$7908$5uPkq)
        (make-i/o-filename-error . g$7925$5uPkq)
        (make-i/o-file-protection-error . g$7941$5uPkq)
        (make-i/o-file-is-read-only-error . g$7955$5uPkq)
        (make-i/o-file-does-not-exist-error . g$7983$5uPkq)
        (make-i/o-file-already-exists-error . g$7969$5uPkq)
        (make-i/o-error . g$7865$5uPkq)
        (make-i/o-encoding-error . g$8029$5uPkq)
        (make-i/o-decoding-error . g$8014$5uPkq)
        (make-custom-textual-output-port . g$12962$5uPkq)
        (make-custom-textual-input/output-port . g$12961$5uPkq)
        (make-custom-textual-input-port . g$12960$5uPkq)
        (make-custom-binary-output-port . g$12959$5uPkq)
        (make-custom-binary-input/output-port . g$12958$5uPkq)
        (make-custom-binary-input-port . g$12957$5uPkq)
        (lookahead-u8 . g$12955$5uPkq)
        (lookahead-char . g$12954$5uPkq)
        (i/o-write-error? . g$7894$5uPkq)
        (i/o-read-error? . g$7880$5uPkq)
        (i/o-port-error? . g$8000$5uPkq)
        (i/o-invalid-position-error? . g$7910$5uPkq)
        (i/o-error-position . g$7911$5uPkq)
        (i/o-filename-error? . g$7927$5uPkq)
        (i/o-file-protection-error? . g$7942$5uPkq)
        (i/o-file-is-read-only-error? . g$7956$5uPkq)
        (i/o-file-does-not-exist-error? . g$7984$5uPkq)
        (i/o-file-already-exists-error? . g$7970$5uPkq)
        (i/o-error? . g$7866$5uPkq)
        (i/o-error-port . g$8001$5uPkq)
        (i/o-error-filename . g$7928$5uPkq)
        (i/o-encoding-error? . g$8031$5uPkq)
        (i/o-encoding-error-char . g$8032$5uPkq)
        (i/o-decoding-error? . g$8015$5uPkq)
        (get-u8 . g$12953$5uPkq)
        (get-string-n! . g$12952$5uPkq)
        (get-string-n . g$12951$5uPkq)
        (get-string-all . g$12950$5uPkq)
        (get-line . g$12949$5uPkq)
        (get-datum . g$12948$5uPkq)
        (get-char . g$12947$5uPkq)
        (get-bytevector-some . g$12946$5uPkq)
        (get-bytevector-n! . g$12945$5uPkq)
        (get-bytevector-n . g$12944$5uPkq)
        (get-bytevector-all . g$12943$5uPkq)
        (flush-output-port . g$12942$5uPkq)
        (close-port . g$12941$5uPkq)
        (call-with-string-output-port . g$8039$5uPkq)
        (call-with-port . g$12940$5uPkq)
        (call-with-bytevector-output-port . g$12939$5uPkq)
        (bytevector->string . g$12938$5uPkq)
        (buffer-mode? . g$12937$5uPkq)
        (binary-port? . g$12936$5uPkq)
        (&i/o-encoding . g$12649$5uPkq)
        (&i/o-decoding . g$12648$5uPkq)
        (&i/o-port . g$12647$5uPkq)
        (&i/o-file-does-not-exist . g$12646$5uPkq)
        (&i/o-file-already-exists . g$12645$5uPkq)
        (&i/o-file-is-read-only . g$12644$5uPkq)
        (&i/o-file-protection . g$12643$5uPkq)
        (&i/o-filename . g$12642$5uPkq)
        (&i/o-invalid-position . g$12641$5uPkq)
        (&i/o-write . g$12640$5uPkq)
        (&i/o-read . g$12639$5uPkq)
        (&i/o . g$12638$5uPkq)
        (error-handling-mode . g$12611$5uPkq)
        (file-options . g$12610$5uPkq)
        (buffer-mode . g$12609$5uPkq)
        (eol-style . g$12608$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13185$5uPkq
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8123$5uPkq)
        (enum-set=? . g$8130$5uPkq)
        (enum-set-universe . g$8124$5uPkq)
        (enum-set-union . g$8131$5uPkq)
        (enum-set-subset? . g$8129$5uPkq)
        (enum-set-projection . g$8135$5uPkq)
        (enum-set-member? . g$8128$5uPkq)
        (enum-set-intersection . g$8132$5uPkq)
        (enum-set-indexer . g$8125$5uPkq)
        (enum-set-difference . g$8133$5uPkq)
        (enum-set-constructor . g$8126$5uPkq)
        (enum-set-complement . g$8134$5uPkq)
        (enum-set->list . g$8127$5uPkq)
        (define-enumeration . g$12622$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13186$5uPkq
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7477$5uPkq)
        (warning? . g$7388$5uPkq)
        (violation? . g$7430$5uPkq)
        (undefined-violation? . g$7554$5uPkq)
        (syntax-violation? . g$7538$5uPkq)
        (syntax-violation-subform . g$7540$5uPkq)
        (syntax-violation-form . g$7539$5uPkq)
        (syntax-violation . g$9536$5uPkq)
        (simple-conditions . g$12925$5uPkq)
        (serious-condition? . g$7402$5uPkq)
        (non-continuable-violation? . g$7492$5uPkq)
        (message-condition? . g$7373$5uPkq)
        (make-who-condition . g$7475$5uPkq)
        (make-warning . g$7387$5uPkq)
        (make-violation . g$7429$5uPkq)
        (make-undefined-violation . g$7553$5uPkq)
        (make-syntax-violation . g$7535$5uPkq)
        (make-serious-condition . g$7401$5uPkq)
        (make-non-continuable-violation . g$7491$5uPkq)
        (make-message-condition . g$7371$5uPkq)
        (make-lexical-violation . g$7519$5uPkq)
        (make-irritants-condition . g$7458$5uPkq)
        (make-implementation-restriction-violation . g$7505$5uPkq)
        (make-error . g$7415$5uPkq)
        (make-assertion-violation . g$7443$5uPkq)
        (lexical-violation? . g$7520$5uPkq)
        (irritants-condition? . g$7460$5uPkq)
        (implementation-restriction-violation? . g$7506$5uPkq)
        (error? . g$7416$5uPkq)
        (condition-who . g$7478$5uPkq)
        (condition-predicate . g$12924$5uPkq)
        (condition-message . g$7374$5uPkq)
        (condition-irritants . g$7461$5uPkq)
        (condition-accessor . g$12923$5uPkq)
        (condition . g$12922$5uPkq)
        (assertion-violation? . g$7444$5uPkq)
        (condition? . g$12921$5uPkq)
        (&non-continuable . g$12637$5uPkq)
        (&undefined . g$12636$5uPkq)
        (&syntax . g$12635$5uPkq)
        (&lexical . g$12634$5uPkq)
        (&implementation-restriction . g$12633$5uPkq)
        (&who . g$12632$5uPkq)
        (&irritants . g$12631$5uPkq)
        (&assertion . g$12630$5uPkq)
        (&violation . g$12629$5uPkq)
        (&error . g$12628$5uPkq)
        (&serious . g$12627$5uPkq)
        (&warning . g$12626$5uPkq)
        (&message . g$12625$5uPkq)
        (&condition . g$12624$5uPkq)
        (define-condition-type . g$12623$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13187$5uPkq
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13037$5uPkq)
        (record-type-uid . g$13036$5uPkq)
        (record-type-sealed? . g$13035$5uPkq)
        (record-type-parent . g$13034$5uPkq)
        (record-type-opaque? . g$13033$5uPkq)
        (record-type-name . g$13032$5uPkq)
        (record-type-generative? . g$13031$5uPkq)
        (record-type-field-names . g$13030$5uPkq)
        (record-rtd . g$13029$5uPkq)
        (record-field-mutable? . g$13028$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13188$5uPkq
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13044$5uPkq)
        (record-predicate . g$13043$5uPkq)
        (record-mutator . g$13042$5uPkq)
        (record-constructor . g$13041$5uPkq)
        (record-accessor . g$13040$5uPkq)
        (make-record-type-descriptor . g$13039$5uPkq)
        (make-record-constructor-descriptor . g$13038$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13189$5uPkq
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12621$5uPkq)
        (parent-rtd . g$12620$5uPkq)
        (nongenerative . g$12619$5uPkq)
        (opaque . g$12618$5uPkq)
        (sealed . g$12617$5uPkq)
        (protocol . g$12616$5uPkq)
        (parent . g$12615$5uPkq)
        (immutable . g$12614$5uPkq)
        (mutable . g$12613$5uPkq)
        (fields . g$12612$5uPkq)
        (record-constructor-descriptor . g$12573$5uPkq)
        (record-type-descriptor . g$12572$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7826$5uPkq
      'g$13190$5uPkq
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9409$5uPkq)
        (&no-nans-rcd . g$13154$5uPkq)
        (&no-nans-rtd . g$13153$5uPkq)
        (&no-infinities-rcd . g$13152$5uPkq)
        (&no-infinities-rtd . g$13151$5uPkq)
        (&i/o-encoding-rcd . g$13150$5uPkq)
        (&i/o-encoding-rtd . g$13149$5uPkq)
        (&i/o-decoding-rcd . g$13148$5uPkq)
        (&i/o-decoding-rtd . g$13147$5uPkq)
        (&i/o-port-rcd . g$13146$5uPkq)
        (&i/o-port-rtd . g$13145$5uPkq)
        (&i/o-file-does-not-exist-rcd . g$13144$5uPkq)
        (&i/o-file-does-not-exist-rtd . g$13143$5uPkq)
        (&i/o-file-already-exists-rcd . g$13142$5uPkq)
        (&i/o-file-already-exists-rtd . g$13141$5uPkq)
        (&i/o-file-is-read-only-rcd . g$13140$5uPkq)
        (&i/o-file-is-read-only-rtd . g$13139$5uPkq)
        (&i/o-file-protection-rcd . g$13138$5uPkq)
        (&i/o-file-protection-rtd . g$13137$5uPkq)
        (&i/o-filename-rcd . g$13136$5uPkq)
        (&i/o-filename-rtd . g$13135$5uPkq)
        (&i/o-invalid-position-rcd . g$13134$5uPkq)
        (&i/o-invalid-position-rtd . g$13133$5uPkq)
        (&i/o-write-rcd . g$13132$5uPkq)
        (&i/o-write-rtd . g$13131$5uPkq)
        (&i/o-read-rcd . g$13130$5uPkq)
        (&i/o-read-rtd . g$13129$5uPkq)
        (&i/o-rcd . g$13128$5uPkq)
        (&i/o-rtd . g$13127$5uPkq)
        (&undefined-rcd . g$13126$5uPkq)
        (&undefined-rtd . g$13125$5uPkq)
        (&syntax-rcd . g$13124$5uPkq)
        (&syntax-rtd . g$13123$5uPkq)
        (&lexical-rcd . g$13122$5uPkq)
        (&lexical-rtd . g$13121$5uPkq)
        (&implementation-restriction-rcd . g$13120$5uPkq)
        (&implementation-restriction-rtd . g$13119$5uPkq)
        (&non-continuable-rcd . g$13118$5uPkq)
        (&non-continuable-rtd . g$13117$5uPkq)
        (&who-rcd . g$13116$5uPkq)
        (&who-rtd . g$13115$5uPkq)
        (&irritants-rcd . g$13114$5uPkq)
        (&irritants-rtd . g$13113$5uPkq)
        (&assertion-rcd . g$13112$5uPkq)
        (&assertion-rtd . g$13111$5uPkq)
        (&violation-rcd . g$13110$5uPkq)
        (&violation-rtd . g$13109$5uPkq)
        (&error-rcd . g$13108$5uPkq)
        (&error-rtd . g$13107$5uPkq)
        (&serious-rcd . g$13106$5uPkq)
        (&serious-rtd . g$13105$5uPkq)
        (&warning-rcd . g$13104$5uPkq)
        (&warning-rtd . g$13103$5uPkq)
        (&message-rcd . g$13102$5uPkq)
        (&message-rtd . g$13101$5uPkq)
        (&condition-rcd . g$13100$5uPkq)
        (&condition-rtd . g$13099$5uPkq)
        (library-letrec* . g$13098$5uPkq)
        (annotation-stripped . g$13097$5uPkq)
        (annotation-source . g$13096$5uPkq)
        (annotation-expression . g$13095$5uPkq)
        (annotation? . g$13094$5uPkq)
        (read-annotated . g$13093$5uPkq)
        (tanh . g$13092$5uPkq)
        (cosh . g$13091$5uPkq)
        (sinh . g$13090$5uPkq)
        (make-guid . g$13089$5uPkq)
        (unspecified? . g$13088$5uPkq)
        (make-trace . g$13087$5uPkq)
        (make-list . g$6547$5uPkq)
        (last-pair . g$6546$5uPkq)
        (load-r5rs . g$13086$5uPkq)
        (license . g$13085$5uPkq)
        (stacktrace . g$13084$5uPkq)
        (ironscheme-build . g$12515$5uPkq)
        (define-clr-class-internal . g$13083$5uPkq)
        (clr-field-set!-internal . g$13082$5uPkq)
        (clr-field-get-internal . g$13081$5uPkq)
        (clr-cast-internal . g$13080$5uPkq)
        (clr-call-internal . g$13079$5uPkq)
        (clr-new-internal . g$13078$5uPkq)
        (clr-new-array-internal . g$13077$5uPkq)
        (clr-is-internal . g$13076$5uPkq)
        (clr-reference-internal . g$13075$5uPkq)
        (clr-using-internal . g$13074$5uPkq)
        (syntax-error . g$9533$5uPkq)
        (syntax-dispatch . g$9404$5uPkq)
        (compile-core . g$13073$5uPkq)
        (eval-core . g$13072$5uPkq)
        (set-symbol-value! . g$13071$5uPkq)
        (symbol-value . g$13070$5uPkq)
        (ungensym . g$13069$5uPkq)
        (gensym . g$13068$5uPkq)
        (void . g$13067$5uPkq)
        (load-serialized-library . g$13066$5uPkq)
        (serialize-library . g$13065$5uPkq)
        (compile-system-libraries . g$12517$5uPkq)
        (compile->closure . g$12519$5uPkq)
        (compile . g$12518$5uPkq)
        (load . g$12514$5uPkq)
        (interaction-environment . g$9542$5uPkq)
        (char-ready? . g$13064$5uPkq)
        (string-upcase . g$13063$5uPkq)
        (string-titlecase . g$13062$5uPkq)
        (string-normalize-nfkd . g$13061$5uPkq)
        (string-normalize-nfkc . g$13060$5uPkq)
        (string-normalize-nfd . g$13059$5uPkq)
        (string-normalize-nfc . g$13058$5uPkq)
        (string-foldcase . g$13057$5uPkq)
        (string-downcase . g$13056$5uPkq)
        (string-ci>? . g$7647$5uPkq)
        (string-ci>=? . g$7649$5uPkq)
        (string-ci=? . g$7645$5uPkq)
        (string-ci<? . g$7646$5uPkq)
        (string-ci<=? . g$7648$5uPkq)
        (char-whitespace? . g$13055$5uPkq)
        (char-upper-case? . g$13054$5uPkq)
        (char-title-case? . g$13053$5uPkq)
        (char-numeric? . g$13052$5uPkq)
        (char-lower-case? . g$13051$5uPkq)
        (char-general-category . g$13050$5uPkq)
        (char-upcase . g$13049$5uPkq)
        (char-titlecase . g$13048$5uPkq)
        (char-foldcase . g$13047$5uPkq)
        (char-downcase . g$13046$5uPkq)
        (char-ci>? . g$7686$5uPkq)
        (char-ci>=? . g$7688$5uPkq)
        (char-ci=? . g$7684$5uPkq)
        (char-ci<? . g$7685$5uPkq)
        (char-ci<=? . g$7687$5uPkq)
        (char-alphabetic? . g$13045$5uPkq)
        (variable-transformer-procedure . g$9141$5uPkq)
        (variable-transformer? . g$9140$5uPkq)
        (make-variable-transformer . g$9139$5uPkq)
        (identifier? . g$9537$5uPkq)
        (generate-temporaries . g$9526$5uPkq)
        (free-identifier=? . g$9527$5uPkq)
        (syntax->datum . g$9539$5uPkq)
        (datum->syntax . g$9538$5uPkq)
        (bound-identifier=? . g$9528$5uPkq)
        (record-type-descriptor? . g$13044$5uPkq)
        (record-predicate . g$13043$5uPkq)
        (record-mutator . g$13042$5uPkq)
        (record-constructor . g$13041$5uPkq)
        (record-accessor . g$13040$5uPkq)
        (make-record-type-descriptor . g$13039$5uPkq)
        (make-record-constructor-descriptor . g$13038$5uPkq)
        (record? . g$13037$5uPkq)
        (record-type-uid . g$13036$5uPkq)
        (record-type-sealed? . g$13035$5uPkq)
        (record-type-parent . g$13034$5uPkq)
        (record-type-opaque? . g$13033$5uPkq)
        (record-type-name . g$13032$5uPkq)
        (record-type-generative? . g$13031$5uPkq)
        (record-type-field-names . g$13030$5uPkq)
        (record-rtd . g$13029$5uPkq)
        (record-field-mutable? . g$13028$5uPkq)
        (delete-file . g$7223$5uPkq)
        (file-exists? . g$7222$5uPkq)
        (vector-sort! . g$13027$5uPkq)
        (vector-sort . g$13026$5uPkq)
        (list-sort . g$7587$5uPkq)
        (symbol-hash . g$13025$5uPkq)
        (string-ci-hash . g$13024$5uPkq)
        (string-hash . g$13023$5uPkq)
        (equal-hash . g$13022$5uPkq)
        (hashtable-equivalence-function . g$13021$5uPkq)
        (make-hashtable . g$13020$5uPkq)
        (hashtable-hash-function . g$13019$5uPkq)
        (make-eqv-hashtable . g$7191$5uPkq)
        (make-eq-hashtable . g$7190$5uPkq)
        (hashtable? . g$13018$5uPkq)
        (hashtable-update! . g$7197$5uPkq)
        (hashtable-size . g$7192$5uPkq)
        (hashtable-set! . g$7194$5uPkq)
        (hashtable-ref . g$7193$5uPkq)
        (hashtable-mutable? . g$13017$5uPkq)
        (hashtable-keys . g$13016$5uPkq)
        (hashtable-entries . g$13015$5uPkq)
        (hashtable-delete! . g$7195$5uPkq)
        (hashtable-copy . g$13014$5uPkq)
        (hashtable-contains? . g$7196$5uPkq)
        (hashtable-clear! . g$7198$5uPkq)
        (call-with-output-file . g$8065$5uPkq)
        (call-with-input-file . g$8064$5uPkq)
        (write-char . g$13013$5uPkq)
        (write . g$13012$5uPkq)
        (with-output-to-file . g$8063$5uPkq)
        (with-input-from-file . g$8062$5uPkq)
        (read-char . g$13011$5uPkq)
        (read . g$13010$5uPkq)
        (peek-char . g$13009$5uPkq)
        (open-output-file . g$13008$5uPkq)
        (open-input-file . g$13007$5uPkq)
        (newline . g$13006$5uPkq)
        (display . g$13005$5uPkq)
        (close-output-port . g$13004$5uPkq)
        (close-input-port . g$13003$5uPkq)
        (eof-object? . g$13002$5uPkq)
        (eof-object . g$13001$5uPkq)
        (current-error-port . g$13000$5uPkq)
        (current-output-port . g$12999$5uPkq)
        (current-input-port . g$12998$5uPkq)
        (output-port? . g$12997$5uPkq)
        (input-port? . g$12996$5uPkq)
        (utf-8-codec . g$12995$5uPkq)
        (utf-16-codec . g$12994$5uPkq)
        (transcoder-error-handling-mode . g$12993$5uPkq)
        (transcoder-eol-style . g$12992$5uPkq)
        (transcoder-codec . g$12991$5uPkq)
        (transcoded-port . g$12990$5uPkq)
        (textual-port? . g$12989$5uPkq)
        (string->bytevector . g$12988$5uPkq)
        (standard-output-port . g$12987$5uPkq)
        (standard-input-port . g$12986$5uPkq)
        (standard-error-port . g$12985$5uPkq)
        (set-port-position! . g$12984$5uPkq)
        (put-u8 . g$12983$5uPkq)
        (put-string . g$12982$5uPkq)
        (put-datum . g$12981$5uPkq)
        (put-char . g$12980$5uPkq)
        (put-bytevector . g$12979$5uPkq)
        (port? . g$8038$5uPkq)
        (port-transcoder . g$12978$5uPkq)
        (port-position . g$12977$5uPkq)
        (port-has-set-port-position!? . g$12976$5uPkq)
        (port-has-port-position? . g$12975$5uPkq)
        (port-eof? . g$12974$5uPkq)
        (output-port-buffer-mode . g$12973$5uPkq)
        (open-string-output-port . g$8037$5uPkq)
        (open-string-input-port . g$12972$5uPkq)
        (open-file-output-port . g$12971$5uPkq)
        (open-file-input/output-port . g$12970$5uPkq)
        (open-file-input-port . g$12969$5uPkq)
        (open-bytevector-output-port . g$12968$5uPkq)
        (open-bytevector-input-port . g$12967$5uPkq)
        (native-transcoder . g$12966$5uPkq)
        (native-eol-style . g$12965$5uPkq)
        (make-transcoder . g$12964$5uPkq)
        (latin-1-codec . g$12963$5uPkq)
        (make-i/o-write-error . g$7893$5uPkq)
        (make-i/o-read-error . g$7879$5uPkq)
        (make-i/o-port-error . g$7998$5uPkq)
        (make-i/o-invalid-position-error . g$7908$5uPkq)
        (make-i/o-filename-error . g$7925$5uPkq)
        (make-i/o-file-protection-error . g$7941$5uPkq)
        (make-i/o-file-is-read-only-error . g$7955$5uPkq)
        (make-i/o-file-does-not-exist-error . g$7983$5uPkq)
        (make-i/o-file-already-exists-error . g$7969$5uPkq)
        (make-i/o-error . g$7865$5uPkq)
        (make-i/o-encoding-error . g$8029$5uPkq)
        (make-i/o-decoding-error . g$8014$5uPkq)
        (make-custom-textual-output-port . g$12962$5uPkq)
        (make-custom-textual-input/output-port . g$12961$5uPkq)
        (make-custom-textual-input-port . g$12960$5uPkq)
        (make-custom-binary-output-port . g$12959$5uPkq)
        (make-custom-binary-input/output-port . g$12958$5uPkq)
        (make-custom-binary-input-port . g$12957$5uPkq)
        (make-bytevector . g$12956$5uPkq)
        (lookahead-u8 . g$12955$5uPkq)
        (lookahead-char . g$12954$5uPkq)
        (i/o-write-error? . g$7894$5uPkq)
        (i/o-read-error? . g$7880$5uPkq)
        (i/o-port-error? . g$8000$5uPkq)
        (i/o-invalid-position-error? . g$7910$5uPkq)
        (i/o-error-position . g$7911$5uPkq)
        (i/o-filename-error? . g$7927$5uPkq)
        (i/o-file-protection-error? . g$7942$5uPkq)
        (i/o-file-is-read-only-error? . g$7956$5uPkq)
        (i/o-file-does-not-exist-error? . g$7984$5uPkq)
        (i/o-file-already-exists-error? . g$7970$5uPkq)
        (i/o-error? . g$7866$5uPkq)
        (i/o-error-port . g$8001$5uPkq)
        (i/o-error-filename . g$7928$5uPkq)
        (i/o-encoding-error? . g$8031$5uPkq)
        (i/o-encoding-error-char . g$8032$5uPkq)
        (i/o-decoding-error? . g$8015$5uPkq)
        (get-u8 . g$12953$5uPkq)
        (get-string-n! . g$12952$5uPkq)
        (get-string-n . g$12951$5uPkq)
        (get-string-all . g$12950$5uPkq)
        (get-line . g$12949$5uPkq)
        (get-datum . g$12948$5uPkq)
        (get-char . g$12947$5uPkq)
        (get-bytevector-some . g$12946$5uPkq)
        (get-bytevector-n! . g$12945$5uPkq)
        (get-bytevector-n . g$12944$5uPkq)
        (get-bytevector-all . g$12943$5uPkq)
        (flush-output-port . g$12942$5uPkq)
        (close-port . g$12941$5uPkq)
        (call-with-string-output-port . g$8039$5uPkq)
        (call-with-port . g$12940$5uPkq)
        (call-with-bytevector-output-port . g$12939$5uPkq)
        (bytevector->string . g$12938$5uPkq)
        (buffer-mode? . g$12937$5uPkq)
        (binary-port? . g$12936$5uPkq)
        (scheme-report-environment . g$9517$5uPkq)
        (quotient . g$7566$5uPkq)
        (null-environment . g$9516$5uPkq)
        (remainder . g$7567$5uPkq)
        (modulo . g$7568$5uPkq)
        (inexact->exact . g$12935$5uPkq)
        (force . g$7570$5uPkq)
        (exact->inexact . g$12934$5uPkq)
        (exit . g$12933$5uPkq)
        (command-line . g$12511$5uPkq)
        (string-fill! . g$12932$5uPkq)
        (string-set! . g$12931$5uPkq)
        (set-cdr! . g$12930$5uPkq)
        (set-car! . g$12929$5uPkq)
        (remove . g$6569$5uPkq)
        (remv . g$6570$5uPkq)
        (remp . g$6550$5uPkq)
        (remq . g$6571$5uPkq)
        (partition . g$6549$5uPkq)
        (memv . g$6557$5uPkq)
        (memq . g$6556$5uPkq)
        (memp . g$6559$5uPkq)
        (member . g$6558$5uPkq)
        (exists . g$6563$5uPkq)
        (for-all . g$6562$5uPkq)
        (fold-right . g$6568$5uPkq)
        (fold-left . g$6567$5uPkq)
        (find . g$6548$5uPkq)
        (filter . g$6551$5uPkq)
        (cons* . g$6566$5uPkq)
        (assv . g$6553$5uPkq)
        (assq . g$6552$5uPkq)
        (assp . g$6555$5uPkq)
        (assoc . g$6554$5uPkq)
        (with-exception-handler . g$12928$5uPkq)
        (raise-continuable . g$12927$5uPkq)
        (raise . g$12926$5uPkq)
        (eval . g$9519$5uPkq)
        (environment . g$9515$5uPkq)
        (make-enumeration . g$8123$5uPkq)
        (enum-set=? . g$8130$5uPkq)
        (enum-set-universe . g$8124$5uPkq)
        (enum-set-union . g$8131$5uPkq)
        (enum-set-subset? . g$8129$5uPkq)
        (enum-set-projection . g$8135$5uPkq)
        (enum-set-member? . g$8128$5uPkq)
        (enum-set-intersection . g$8132$5uPkq)
        (enum-set-indexer . g$8125$5uPkq)
        (enum-set-difference . g$8133$5uPkq)
        (enum-set-constructor . g$8126$5uPkq)
        (enum-set-complement . g$8134$5uPkq)
        (enum-set->list . g$8127$5uPkq)
        (who-condition? . g$7477$5uPkq)
        (warning? . g$7388$5uPkq)
        (violation? . g$7430$5uPkq)
        (undefined-violation? . g$7554$5uPkq)
        (syntax-violation? . g$7538$5uPkq)
        (syntax-violation-subform . g$7540$5uPkq)
        (syntax-violation-form . g$7539$5uPkq)
        (syntax-violation . g$9536$5uPkq)
        (simple-conditions . g$12925$5uPkq)
        (serious-condition? . g$7402$5uPkq)
        (non-continuable-violation? . g$7492$5uPkq)
        (message-condition? . g$7373$5uPkq)
        (make-who-condition . g$7475$5uPkq)
        (make-warning . g$7387$5uPkq)
        (make-violation . g$7429$5uPkq)
        (make-undefined-violation . g$7553$5uPkq)
        (make-syntax-violation . g$7535$5uPkq)
        (make-serious-condition . g$7401$5uPkq)
        (make-non-continuable-violation . g$7491$5uPkq)
        (make-message-condition . g$7371$5uPkq)
        (make-lexical-violation . g$7519$5uPkq)
        (make-irritants-condition . g$7458$5uPkq)
        (make-implementation-restriction-violation . g$7505$5uPkq)
        (make-error . g$7415$5uPkq)
        (make-assertion-violation . g$7443$5uPkq)
        (lexical-violation? . g$7520$5uPkq)
        (irritants-condition? . g$7460$5uPkq)
        (implementation-restriction-violation? . g$7506$5uPkq)
        (error? . g$7416$5uPkq)
        (condition-who . g$7478$5uPkq)
        (condition-predicate . g$12924$5uPkq)
        (condition-message . g$7374$5uPkq)
        (condition-irritants . g$7461$5uPkq)
        (condition-accessor . g$12923$5uPkq)
        (condition . g$12922$5uPkq)
        (assertion-violation? . g$7444$5uPkq)
        (condition? . g$12921$5uPkq)
        (utf32->string . g$12920$5uPkq)
        (utf16->string . g$12919$5uPkq)
        (utf8->string . g$12918$5uPkq)
        (uint-list->bytevector . g$12917$5uPkq)
        (u8-list->bytevector . g$12916$5uPkq)
        (string->utf8 . g$12915$5uPkq)
        (string->utf32 . g$12914$5uPkq)
        (string->utf16 . g$12913$5uPkq)
        (sint-list->bytevector . g$12912$5uPkq)
        (native-endianness . g$7229$5uPkq)
        (bytevector? . g$12911$5uPkq)
        (bytevector=? . g$12910$5uPkq)
        (bytevector-uint-set! . g$12909$5uPkq)
        (bytevector-uint-ref . g$12908$5uPkq)
        (bytevector-u8-set! . g$12907$5uPkq)
        (bytevector-u8-ref . g$12906$5uPkq)
        (bytevector-u64-set! . g$7250$5uPkq)
        (bytevector-u64-ref . g$7246$5uPkq)
        (bytevector-u64-native-set! . g$7252$5uPkq)
        (bytevector-u64-native-ref . g$7248$5uPkq)
        (bytevector-u32-set! . g$7242$5uPkq)
        (bytevector-u32-ref . g$7238$5uPkq)
        (bytevector-u32-native-set! . g$7244$5uPkq)
        (bytevector-u32-native-ref . g$7240$5uPkq)
        (bytevector-u16-set! . g$7234$5uPkq)
        (bytevector-u16-ref . g$7230$5uPkq)
        (bytevector-u16-native-set! . g$7236$5uPkq)
        (bytevector-u16-native-ref . g$7232$5uPkq)
        (bytevector-sint-set! . g$12905$5uPkq)
        (bytevector-sint-ref . g$12904$5uPkq)
        (bytevector-s8-set! . g$12903$5uPkq)
        (bytevector-s8-ref . g$12902$5uPkq)
        (bytevector-s64-set! . g$7251$5uPkq)
        (bytevector-s64-ref . g$7247$5uPkq)
        (bytevector-s64-native-set! . g$7253$5uPkq)
        (bytevector-s64-native-ref . g$7249$5uPkq)
        (bytevector-s32-set! . g$7243$5uPkq)
        (bytevector-s32-ref . g$7239$5uPkq)
        (bytevector-s32-native-set! . g$7245$5uPkq)
        (bytevector-s32-native-ref . g$7241$5uPkq)
        (bytevector-s16-set! . g$7235$5uPkq)
        (bytevector-s16-ref . g$7231$5uPkq)
        (bytevector-s16-native-set! . g$7237$5uPkq)
        (bytevector-s16-native-ref . g$7233$5uPkq)
        (bytevector-length . g$12901$5uPkq)
        (bytevector-ieee-single-set! . g$12900$5uPkq)
        (bytevector-ieee-single-ref . g$12899$5uPkq)
        (bytevector-ieee-single-native-set! . g$7256$5uPkq)
        (bytevector-ieee-single-native-ref . g$7254$5uPkq)
        (bytevector-ieee-double-set! . g$12898$5uPkq)
        (bytevector-ieee-double-ref . g$12897$5uPkq)
        (bytevector-ieee-double-native-set! . g$7257$5uPkq)
        (bytevector-ieee-double-native-ref . g$7255$5uPkq)
        (bytevector-fill! . g$12896$5uPkq)
        (bytevector-copy! . g$12895$5uPkq)
        (bytevector-copy . g$12894$5uPkq)
        (bytevector->uint-list . g$12893$5uPkq)
        (bytevector->u8-list . g$12892$5uPkq)
        (bytevector->sint-list . g$12891$5uPkq)
        (no-nans-violation? . g$7851$5uPkq)
        (no-infinities-violation? . g$7837$5uPkq)
        (make-no-nans-violation . g$7850$5uPkq)
        (make-no-infinities-violation . g$7836$5uPkq)
        (real->flonum . g$12890$5uPkq)
        (flzero? . g$12889$5uPkq)
        (fltruncate . g$12888$5uPkq)
        (fltan . g$12887$5uPkq)
        (flsqrt . g$12886$5uPkq)
        (flsin . g$12885$5uPkq)
        (flround . g$12884$5uPkq)
        (flpositive? . g$12883$5uPkq)
        (flonum? . g$12882$5uPkq)
        (flodd? . g$12881$5uPkq)
        (flnumerator . g$12880$5uPkq)
        (flnegative? . g$12879$5uPkq)
        (flnan? . g$12878$5uPkq)
        (flmod0 . g$12877$5uPkq)
        (flmod . g$12876$5uPkq)
        (flmin . g$12875$5uPkq)
        (flmax . g$12874$5uPkq)
        (fllog . g$12873$5uPkq)
        (flinteger? . g$12872$5uPkq)
        (flinfinite? . g$12871$5uPkq)
        (flfloor . g$12870$5uPkq)
        (flfinite? . g$12869$5uPkq)
        (flexpt . g$12868$5uPkq)
        (flexp . g$12867$5uPkq)
        (fleven? . g$12866$5uPkq)
        (fldiv0-and-mod0 . g$12865$5uPkq)
        (fldiv0 . g$12864$5uPkq)
        (fldiv-and-mod . g$12863$5uPkq)
        (fldiv . g$12862$5uPkq)
        (fldenominator . g$12861$5uPkq)
        (flcos . g$12860$5uPkq)
        (flceiling . g$12859$5uPkq)
        (flatan . g$12858$5uPkq)
        (flasin . g$12857$5uPkq)
        (flacos . g$12856$5uPkq)
        (flabs . g$12855$5uPkq)
        (fl>? . g$12854$5uPkq)
        (fl>=? . g$12853$5uPkq)
        (fl=? . g$12852$5uPkq)
        (fl<? . g$12851$5uPkq)
        (fl<=? . g$12850$5uPkq)
        (fl/ . g$12849$5uPkq)
        (fl- . g$12848$5uPkq)
        (fl+ . g$12847$5uPkq)
        (fl* . g$12846$5uPkq)
        (fixnum->flonum . g$12845$5uPkq)
        (fxzero? . g$12844$5uPkq)
        (fxxor . g$12843$5uPkq)
        (fxrotate-bit-field . g$7783$5uPkq)
        (fxreverse-bit-field . g$12842$5uPkq)
        (fxpositive? . g$12841$5uPkq)
        (fxodd? . g$12840$5uPkq)
        (fxnot . g$12839$5uPkq)
        (fxnegative? . g$12838$5uPkq)
        (fxmod0 . g$12837$5uPkq)
        (fxmod . g$12836$5uPkq)
        (fxmin . g$12835$5uPkq)
        (fxmax . g$12834$5uPkq)
        (fxlength . g$12833$5uPkq)
        (fxior . g$12832$5uPkq)
        (fxif . g$7777$5uPkq)
        (fxfirst-bit-set . g$12831$5uPkq)
        (fxeven? . g$12830$5uPkq)
        (fxdiv0-and-mod0 . g$12829$5uPkq)
        (fxdiv0 . g$12828$5uPkq)
        (fxdiv-and-mod . g$12827$5uPkq)
        (fxdiv . g$12826$5uPkq)
        (fxcopy-bit-field . g$7780$5uPkq)
        (fxcopy-bit . g$7778$5uPkq)
        (fxbit-set? . g$12825$5uPkq)
        (fxbit-field . g$7779$5uPkq)
        (fxbit-count . g$12824$5uPkq)
        (fxarithmetic-shift-right . g$7782$5uPkq)
        (fxarithmetic-shift-left . g$7781$5uPkq)
        (fxarithmetic-shift . g$12823$5uPkq)
        (fxand . g$12822$5uPkq)
        (fx>? . g$12821$5uPkq)
        (fx>=? . g$12820$5uPkq)
        (fx=? . g$12819$5uPkq)
        (fx<? . g$12818$5uPkq)
        (fx<=? . g$12817$5uPkq)
        (fx-/carry . g$7775$5uPkq)
        (fx- . g$12816$5uPkq)
        (fx+/carry . g$7776$5uPkq)
        (fx+ . g$12815$5uPkq)
        (fx*/carry . g$7774$5uPkq)
        (fx* . g$12814$5uPkq)
        (greatest-fixnum . g$12813$5uPkq)
        (least-fixnum . g$12812$5uPkq)
        (fixnum-width . g$12811$5uPkq)
        (fixnum? . g$12810$5uPkq)
        (bitwise-rotate-bit-field . g$7748$5uPkq)
        (bitwise-reverse-bit-field . g$12809$5uPkq)
        (bitwise-length . g$12808$5uPkq)
        (bitwise-if . g$7742$5uPkq)
        (bitwise-first-bit-set . g$12807$5uPkq)
        (bitwise-copy-bit-field . g$7745$5uPkq)
        (bitwise-copy-bit . g$7743$5uPkq)
        (bitwise-bit-set? . g$12806$5uPkq)
        (bitwise-bit-field . g$7744$5uPkq)
        (bitwise-bit-count . g$12805$5uPkq)
        (bitwise-xor . g$12804$5uPkq)
        (bitwise-ior . g$12803$5uPkq)
        (bitwise-and . g$12802$5uPkq)
        (bitwise-not . g$12801$5uPkq)
        (bitwise-arithmetic-shift-right . g$7747$5uPkq)
        (bitwise-arithmetic-shift-left . g$7746$5uPkq)
        (bitwise-arithmetic-shift . g$12800$5uPkq)
        (zero? . g$12799$5uPkq)
        (vector? . g$12798$5uPkq)
        (vector-set! . g$12797$5uPkq)
        (vector-ref . g$12796$5uPkq)
        (vector-map . g$12795$5uPkq)
        (vector-length . g$12794$5uPkq)
        (vector-for-each . g$12793$5uPkq)
        (vector-fill! . g$12792$5uPkq)
        (vector->list . g$12791$5uPkq)
        (vector . g$12790$5uPkq)
        (values . g$12789$5uPkq)
        (truncate . g$12788$5uPkq)
        (tan . g$12787$5uPkq)
        (symbol? . g$12786$5uPkq)
        (symbol=? . g$6749$5uPkq)
        (symbol->string . g$12785$5uPkq)
        (substring . g$12784$5uPkq)
        (string? . g$12783$5uPkq)
        (string>? . g$6746$5uPkq)
        (string>=? . g$6748$5uPkq)
        (string=? . g$6744$5uPkq)
        (string<? . g$6745$5uPkq)
        (string<=? . g$6747$5uPkq)
        (string-ref . g$12782$5uPkq)
        (string-length . g$12781$5uPkq)
        (string-for-each . g$12780$5uPkq)
        (string-copy . g$12779$5uPkq)
        (string-append . g$12778$5uPkq)
        (string->symbol . g$12777$5uPkq)
        (string->number . g$12776$5uPkq)
        (string->list . g$12775$5uPkq)
        (string . g$12774$5uPkq)
        (sqrt . g$12773$5uPkq)
        (sin . g$12772$5uPkq)
        (round . g$12771$5uPkq)
        (reverse . g$12770$5uPkq)
        (real? . g$12769$5uPkq)
        (real-valued? . g$12768$5uPkq)
        (real-part . g$12767$5uPkq)
        (rationalize . g$6790$5uPkq)
        (rational? . g$12766$5uPkq)
        (rational-valued? . g$12765$5uPkq)
        (procedure? . g$12764$5uPkq)
        (positive? . g$12763$5uPkq)
        (pair? . g$12762$5uPkq)
        (odd? . g$12761$5uPkq)
        (numerator . g$12760$5uPkq)
        (number? . g$12759$5uPkq)
        (number->string . g$12758$5uPkq)
        (null? . g$12757$5uPkq)
        (not . g$12756$5uPkq)
        (negative? . g$12755$5uPkq)
        (nan? . g$12754$5uPkq)
        (min . g$12753$5uPkq)
        (max . g$12752$5uPkq)
        (map . g$6564$5uPkq)
        (make-vector . g$12751$5uPkq)
        (make-string . g$12750$5uPkq)
        (make-rectangular . g$12749$5uPkq)
        (make-polar . g$12748$5uPkq)
        (magnitude . g$12747$5uPkq)
        (log . g$12746$5uPkq)
        (list? . g$12745$5uPkq)
        (list-tail . g$6544$5uPkq)
        (list-ref . g$6545$5uPkq)
        (list->vector . g$12744$5uPkq)
        (list->string . g$12743$5uPkq)
        (list . g$12742$5uPkq)
        (length . g$12741$5uPkq)
        (lcm . g$12740$5uPkq)
        (integer? . g$12739$5uPkq)
        (integer-valued? . g$12738$5uPkq)
        (integer->char . g$12737$5uPkq)
        (infinite? . g$12736$5uPkq)
        (inexact? . g$12735$5uPkq)
        (inexact . g$12734$5uPkq)
        (imag-part . g$12733$5uPkq)
        (gcd . g$12732$5uPkq)
        (for-each . g$6565$5uPkq)
        (floor . g$12731$5uPkq)
        (finite? . g$12730$5uPkq)
        (expt . g$12729$5uPkq)
        (exp . g$12728$5uPkq)
        (exact? . g$12727$5uPkq)
        (exact-integer-sqrt . g$12726$5uPkq)
        (exact . g$12725$5uPkq)
        (even? . g$12724$5uPkq)
        (error . g$12723$5uPkq)
        (eqv? . g$12722$5uPkq)
        (equal? . g$12721$5uPkq)
        (eq? . g$12720$5uPkq)
        (dynamic-wind . g$12719$5uPkq)
        (div0-and-mod0 . g$12718$5uPkq)
        (mod0 . g$12717$5uPkq)
        (div0 . g$12716$5uPkq)
        (div-and-mod . g$12715$5uPkq)
        (mod . g$12714$5uPkq)
        (div . g$12713$5uPkq)
        (denominator . g$12712$5uPkq)
        (cos . g$12711$5uPkq)
        (cons . g$12710$5uPkq)
        (complex? . g$12709$5uPkq)
        (char? . g$12708$5uPkq)
        (char>? . g$6787$5uPkq)
        (char>=? . g$6789$5uPkq)
        (char=? . g$6785$5uPkq)
        (char<? . g$6786$5uPkq)
        (char<=? . g$6788$5uPkq)
        (char->integer . g$12707$5uPkq)
        (ceiling . g$12706$5uPkq)
        (call-with-values . g$12705$5uPkq)
        (call/cc . g$12704$5uPkq)
        (call-with-current-continuation . g$12703$5uPkq)
        (cddddr . g$6709$5uPkq)
        (cdddar . g$6708$5uPkq)
        (cddadr . g$6707$5uPkq)
        (cddaar . g$6706$5uPkq)
        (cdaddr . g$6705$5uPkq)
        (cdadar . g$6704$5uPkq)
        (cdaadr . g$6703$5uPkq)
        (cdaaar . g$6702$5uPkq)
        (cadddr . g$6701$5uPkq)
        (caddar . g$6700$5uPkq)
        (cadadr . g$6699$5uPkq)
        (cadaar . g$6698$5uPkq)
        (caaddr . g$6697$5uPkq)
        (caadar . g$6696$5uPkq)
        (caaadr . g$6695$5uPkq)
        (caaaar . g$6694$5uPkq)
        (cdddr . g$6693$5uPkq)
        (cddar . g$6692$5uPkq)
        (cdadr . g$6691$5uPkq)
        (cdaar . g$6690$5uPkq)
        (caddr . g$6689$5uPkq)
        (cadar . g$6688$5uPkq)
        (caadr . g$6687$5uPkq)
        (caaar . g$6686$5uPkq)
        (cddr . g$6685$5uPkq)
        (cdar . g$6684$5uPkq)
        (cadr . g$6683$5uPkq)
        (caar . g$6682$5uPkq)
        (cdr . g$12702$5uPkq)
        (car . g$12701$5uPkq)
        (boolean? . g$12700$5uPkq)
        (boolean=? . g$6750$5uPkq)
        (atan . g$12699$5uPkq)
        (assertion-violation . g$12698$5uPkq)
        (asin . g$12697$5uPkq)
        (apply . g$12696$5uPkq)
        (append . g$12695$5uPkq)
        (angle . g$12694$5uPkq)
        (acos . g$12693$5uPkq)
        (abs . g$12692$5uPkq)
        (/ . g$12691$5uPkq)
        (* . g$12690$5uPkq)
        (- . g$12689$5uPkq)
        (+ . g$12688$5uPkq)
        (>= . g$12687$5uPkq)
        (> . g$12686$5uPkq)
        (= . g$12685$5uPkq)
        (<= . g$12684$5uPkq)
        (< . g$12683$5uPkq)
        (make-record-printer . g$12682$5uPkq)
        (eqv-hash . g$12681$5uPkq)
        (reverse! . g$12680$5uPkq)
        (deserialize-port . g$12679$5uPkq)
        (serialize-port . g$12678$5uPkq)
        (enum-set? . g$8098$5uPkq)
        (make-promise . g$7569$5uPkq)
        (load/args . g$12513$5uPkq)
        (printf . g$8209$5uPkq)
        (fprintf . g$8210$5uPkq)
        (format . g$8211$5uPkq)
        (procedure-form . g$12677$5uPkq)
        (procedure-environment . g$12676$5uPkq)
        (procedure-name . g$12675$5uPkq)
        (procedure-arity . g$12674$5uPkq)
        (gc-collect . g$12673$5uPkq)
        (clr-type? . g$12672$5uPkq)
        (get-clr-type . g$12671$5uPkq)
        (get-command-line . g$12670$5uPkq)
        (vector-append . g$12669$5uPkq)
        (vector-filter . g$12668$5uPkq)
        (vector-reverse! . g$12667$5uPkq)
        (vector-contains? . g$12666$5uPkq)
        (vector-index-of . g$12665$5uPkq)
        (vector-copy . g$12664$5uPkq)
        (vector-binary-search . g$12663$5uPkq)
        (string-ci-compare . g$12662$5uPkq)
        (string-compare . g$12661$5uPkq)
        (string-format . g$12660$5uPkq)
        (trace-printer . g$12510$5uPkq)
        (make-traced-procedure . g$12659$5uPkq)
        (make-traced-macro . g$8231$5uPkq)
        (assertion-error . g$9532$5uPkq)
        (time-it . g$12658$5uPkq)
        (make-parameter . g$8238$5uPkq)
        (library-locator . g$12657$5uPkq)
        (get-library-paths . g$12656$5uPkq)
        (open-tcp-input/output-port . g$12655$5uPkq)
        (hashtable-for-each . g$12654$5uPkq)
        (hashtable-map . g$12653$5uPkq)
        (environment-bindings . g$9511$5uPkq)
        (environment-symbols . g$9514$5uPkq)
        (interaction-environment-symbols . g$9510$5uPkq)
        (optimization-level . g$12652$5uPkq)
        (library-path . g$8693$5uPkq)
        (expand . g$9518$5uPkq)
        (&no-nans . g$12651$5uPkq)
        (&no-infinities . g$12650$5uPkq)
        (&i/o-encoding . g$12649$5uPkq)
        (&i/o-decoding . g$12648$5uPkq)
        (&i/o-port . g$12647$5uPkq)
        (&i/o-file-does-not-exist . g$12646$5uPkq)
        (&i/o-file-already-exists . g$12645$5uPkq)
        (&i/o-file-is-read-only . g$12644$5uPkq)
        (&i/o-file-protection . g$12643$5uPkq)
        (&i/o-filename . g$12642$5uPkq)
        (&i/o-invalid-position . g$12641$5uPkq)
        (&i/o-write . g$12640$5uPkq)
        (&i/o-read . g$12639$5uPkq)
        (&i/o . g$12638$5uPkq)
        (&non-continuable . g$12637$5uPkq)
        (&undefined . g$12636$5uPkq)
        (&syntax . g$12635$5uPkq)
        (&lexical . g$12634$5uPkq)
        (&implementation-restriction . g$12633$5uPkq)
        (&who . g$12632$5uPkq)
        (&irritants . g$12631$5uPkq)
        (&assertion . g$12630$5uPkq)
        (&violation . g$12629$5uPkq)
        (&error . g$12628$5uPkq)
        (&serious . g$12627$5uPkq)
        (&warning . g$12626$5uPkq)
        (&message . g$12625$5uPkq)
        (&condition . g$12624$5uPkq)
        (define-condition-type . g$12623$5uPkq)
        (define-enumeration . g$12622$5uPkq)
        (define-record-type . g$12621$5uPkq)
        (parent-rtd . g$12620$5uPkq)
        (nongenerative . g$12619$5uPkq)
        (opaque . g$12618$5uPkq)
        (sealed . g$12617$5uPkq)
        (protocol . g$12616$5uPkq)
        (parent . g$12615$5uPkq)
        (immutable . g$12614$5uPkq)
        (mutable . g$12613$5uPkq)
        (fields . g$12612$5uPkq)
        (error-handling-mode . g$12611$5uPkq)
        (file-options . g$12610$5uPkq)
        (buffer-mode . g$12609$5uPkq)
        (eol-style . g$12608$5uPkq)
        (guard . g$12607$5uPkq)
        (trace-letrec-syntax . g$12606$5uPkq)
        (trace-let-syntax . g$12605$5uPkq)
        (trace-define-syntax . g$12604$5uPkq)
        (trace-define . g$12603$5uPkq)
        (trace-lambda . g$12602$5uPkq)
        (unsyntax-splicing . g$12601$5uPkq)
        (unsyntax . g$12600$5uPkq)
        (unquote-splicing . g$12599$5uPkq)
        (unquote . g$12598$5uPkq)
        (_ . g$12597$5uPkq)
        (else . g$12596$5uPkq)
        (=> . g$12595$5uPkq)
        (... . g$12594$5uPkq)
        (assert . g$12593$5uPkq)
        (endianness . g$12592$5uPkq)
        (delay . g$12591$5uPkq)
        (time . g$12590$5uPkq)
        (or . g$12589$5uPkq)
        (and . g$12588$5uPkq)
        (do . g$12587$5uPkq)
        (cond . g$12586$5uPkq)
        (let* . g$12585$5uPkq)
        (let . g$12584$5uPkq)
        (identifier-syntax . g$12583$5uPkq)
        (with-syntax . g$12582$5uPkq)
        (quasisyntax . g$12581$5uPkq)
        (quasiquote . g$12580$5uPkq)
        (syntax-rules . g$12579$5uPkq)
        (include-into . g$12578$5uPkq)
        (include . g$12577$5uPkq)
        (define-struct . g$12576$5uPkq)
        (let-values . g$12575$5uPkq)
        (let*-values . g$12574$5uPkq)
        (record-constructor-descriptor . g$12573$5uPkq)
        (record-type-descriptor . g$12572$5uPkq)
        (fluid-let-syntax . g$12571$5uPkq)
        (case . g$12570$5uPkq)
        (parameterize . g$12569$5uPkq)
        (unless . g$12568$5uPkq)
        (when . g$12567$5uPkq)
        (if . g$12566$5uPkq)
        (letrec* . g$12565$5uPkq)
        (letrec . g$12564$5uPkq)
        (type-descriptor . g$12563$5uPkq)
        (case-lambda . g$12562$5uPkq)
        (lambda . g$12561$5uPkq)
        (syntax . g$12560$5uPkq)
        (syntax-case . g$12559$5uPkq)
        (quote . g$12558$5uPkq)
        (foreign-call . g$12557$5uPkq)
        (letrec-syntax . g$12556$5uPkq)
        (let-syntax . g$12555$5uPkq)
        (set! . g$12554$5uPkq)
        (export . g$12553$5uPkq)
        (import . g$12552$5uPkq)
        (library . g$12551$5uPkq)
        (begin . g$12550$5uPkq)
        (module . g$12549$5uPkq)
        (define-syntax . g$12548$5uPkq)
        (define . g$12547$5uPkq))
      '((g$9409$5uPkq core-prim . ellipsis-map)
        (g$13154$5uPkq core-prim . &no-nans-rcd)
        (g$13153$5uPkq core-prim . &no-nans-rtd)
        (g$13152$5uPkq core-prim . &no-infinities-rcd)
        (g$13151$5uPkq core-prim . &no-infinities-rtd)
        (g$13150$5uPkq core-prim . &i/o-encoding-rcd)
        (g$13149$5uPkq core-prim . &i/o-encoding-rtd)
        (g$13148$5uPkq core-prim . &i/o-decoding-rcd)
        (g$13147$5uPkq core-prim . &i/o-decoding-rtd)
        (g$13146$5uPkq core-prim . &i/o-port-rcd)
        (g$13145$5uPkq core-prim . &i/o-port-rtd)
        (g$13144$5uPkq core-prim . &i/o-file-does-not-exist-rcd)
        (g$13143$5uPkq core-prim . &i/o-file-does-not-exist-rtd)
        (g$13142$5uPkq core-prim . &i/o-file-already-exists-rcd)
        (g$13141$5uPkq core-prim . &i/o-file-already-exists-rtd)
        (g$13140$5uPkq core-prim . &i/o-file-is-read-only-rcd)
        (g$13139$5uPkq core-prim . &i/o-file-is-read-only-rtd)
        (g$13138$5uPkq core-prim . &i/o-file-protection-rcd)
        (g$13137$5uPkq core-prim . &i/o-file-protection-rtd)
        (g$13136$5uPkq core-prim . &i/o-filename-rcd)
        (g$13135$5uPkq core-prim . &i/o-filename-rtd)
        (g$13134$5uPkq core-prim . &i/o-invalid-position-rcd)
        (g$13133$5uPkq core-prim . &i/o-invalid-position-rtd)
        (g$13132$5uPkq core-prim . &i/o-write-rcd)
        (g$13131$5uPkq core-prim . &i/o-write-rtd)
        (g$13130$5uPkq core-prim . &i/o-read-rcd)
        (g$13129$5uPkq core-prim . &i/o-read-rtd)
        (g$13128$5uPkq core-prim . &i/o-rcd)
        (g$13127$5uPkq core-prim . &i/o-rtd)
        (g$13126$5uPkq core-prim . &undefined-rcd)
        (g$13125$5uPkq core-prim . &undefined-rtd)
        (g$13124$5uPkq core-prim . &syntax-rcd)
        (g$13123$5uPkq core-prim . &syntax-rtd)
        (g$13122$5uPkq core-prim . &lexical-rcd)
        (g$13121$5uPkq core-prim . &lexical-rtd)
        (g$13120$5uPkq core-prim . &implementation-restriction-rcd)
        (g$13119$5uPkq core-prim . &implementation-restriction-rtd)
        (g$13118$5uPkq core-prim . &non-continuable-rcd)
        (g$13117$5uPkq core-prim . &non-continuable-rtd)
        (g$13116$5uPkq core-prim . &who-rcd)
        (g$13115$5uPkq core-prim . &who-rtd)
        (g$13114$5uPkq core-prim . &irritants-rcd)
        (g$13113$5uPkq core-prim . &irritants-rtd)
        (g$13112$5uPkq core-prim . &assertion-rcd)
        (g$13111$5uPkq core-prim . &assertion-rtd)
        (g$13110$5uPkq core-prim . &violation-rcd)
        (g$13109$5uPkq core-prim . &violation-rtd)
        (g$13108$5uPkq core-prim . &error-rcd)
        (g$13107$5uPkq core-prim . &error-rtd)
        (g$13106$5uPkq core-prim . &serious-rcd)
        (g$13105$5uPkq core-prim . &serious-rtd)
        (g$13104$5uPkq core-prim . &warning-rcd)
        (g$13103$5uPkq core-prim . &warning-rtd)
        (g$13102$5uPkq core-prim . &message-rcd)
        (g$13101$5uPkq core-prim . &message-rtd)
        (g$13100$5uPkq core-prim . &condition-rcd)
        (g$13099$5uPkq core-prim . &condition-rtd)
        (g$13098$5uPkq core-prim . library-letrec*)
        (g$13097$5uPkq core-prim . annotation-stripped)
        (g$13096$5uPkq core-prim . annotation-source)
        (g$13095$5uPkq core-prim . annotation-expression)
        (g$13094$5uPkq core-prim . annotation?)
        (g$13093$5uPkq core-prim . read-annotated)
        (g$13092$5uPkq core-prim . tanh)
        (g$13091$5uPkq core-prim . cosh)
        (g$13090$5uPkq core-prim . sinh)
        (g$13089$5uPkq core-prim . make-guid)
        (g$13088$5uPkq core-prim . unspecified?)
        (g$13087$5uPkq core-prim . make-trace)
        (g$6547$5uPkq core-prim . make-list)
        (g$6546$5uPkq core-prim . last-pair)
        (g$13086$5uPkq core-prim . load-r5rs)
        (g$13085$5uPkq core-prim . license)
        (g$13084$5uPkq core-prim . stacktrace)
        (g$12515$5uPkq core-prim . ironscheme-build)
        (g$13083$5uPkq core-prim . define-clr-class-internal)
        (g$13082$5uPkq core-prim . clr-field-set!-internal)
        (g$13081$5uPkq core-prim . clr-field-get-internal)
        (g$13080$5uPkq core-prim . clr-cast-internal)
        (g$13079$5uPkq core-prim . clr-call-internal)
        (g$13078$5uPkq core-prim . clr-new-internal)
        (g$13077$5uPkq core-prim . clr-new-array-internal)
        (g$13076$5uPkq core-prim . clr-is-internal)
        (g$13075$5uPkq core-prim . clr-reference-internal)
        (g$13074$5uPkq core-prim . clr-using-internal)
        (g$9533$5uPkq core-prim . syntax-error)
        (g$9404$5uPkq core-prim . syntax-dispatch)
        (g$13073$5uPkq core-prim . compile-core)
        (g$13072$5uPkq core-prim . eval-core)
        (g$13071$5uPkq core-prim . set-symbol-value!)
        (g$13070$5uPkq core-prim . symbol-value)
        (g$13069$5uPkq core-prim . ungensym)
        (g$13068$5uPkq core-prim . gensym)
        (g$13067$5uPkq core-prim . void)
        (g$13066$5uPkq core-prim . load-serialized-library)
        (g$13065$5uPkq core-prim . serialize-library)
        (g$12517$5uPkq core-prim . compile-system-libraries)
        (g$12519$5uPkq core-prim . compile->closure)
        (g$12518$5uPkq core-prim . compile)
        (g$12514$5uPkq core-prim . load)
        (g$9542$5uPkq core-prim . interaction-environment)
        (g$13064$5uPkq core-prim . char-ready?)
        (g$13063$5uPkq core-prim . string-upcase)
        (g$13062$5uPkq core-prim . string-titlecase)
        (g$13061$5uPkq core-prim . string-normalize-nfkd)
        (g$13060$5uPkq core-prim . string-normalize-nfkc)
        (g$13059$5uPkq core-prim . string-normalize-nfd)
        (g$13058$5uPkq core-prim . string-normalize-nfc)
        (g$13057$5uPkq core-prim . string-foldcase)
        (g$13056$5uPkq core-prim . string-downcase)
        (g$7647$5uPkq core-prim . string-ci>?)
        (g$7649$5uPkq core-prim . string-ci>=?)
        (g$7645$5uPkq core-prim . string-ci=?)
        (g$7646$5uPkq core-prim . string-ci<?)
        (g$7648$5uPkq core-prim . string-ci<=?)
        (g$13055$5uPkq core-prim . char-whitespace?)
        (g$13054$5uPkq core-prim . char-upper-case?)
        (g$13053$5uPkq core-prim . char-title-case?)
        (g$13052$5uPkq core-prim . char-numeric?)
        (g$13051$5uPkq core-prim . char-lower-case?)
        (g$13050$5uPkq core-prim . char-general-category)
        (g$13049$5uPkq core-prim . char-upcase)
        (g$13048$5uPkq core-prim . char-titlecase)
        (g$13047$5uPkq core-prim . char-foldcase)
        (g$13046$5uPkq core-prim . char-downcase)
        (g$7686$5uPkq core-prim . char-ci>?)
        (g$7688$5uPkq core-prim . char-ci>=?)
        (g$7684$5uPkq core-prim . char-ci=?)
        (g$7685$5uPkq core-prim . char-ci<?)
        (g$7687$5uPkq core-prim . char-ci<=?)
        (g$13045$5uPkq core-prim . char-alphabetic?)
        (g$9141$5uPkq core-prim . variable-transformer-procedure)
        (g$9140$5uPkq core-prim . variable-transformer?)
        (g$9139$5uPkq core-prim . make-variable-transformer)
        (g$9537$5uPkq core-prim . identifier?)
        (g$9526$5uPkq core-prim . generate-temporaries)
        (g$9527$5uPkq core-prim . free-identifier=?)
        (g$9539$5uPkq core-prim . syntax->datum)
        (g$9538$5uPkq core-prim . datum->syntax)
        (g$9528$5uPkq core-prim . bound-identifier=?)
        (g$13044$5uPkq core-prim . record-type-descriptor?)
        (g$13043$5uPkq core-prim . record-predicate)
        (g$13042$5uPkq core-prim . record-mutator)
        (g$13041$5uPkq core-prim . record-constructor)
        (g$13040$5uPkq core-prim . record-accessor)
        (g$13039$5uPkq core-prim . make-record-type-descriptor)
        (g$13038$5uPkq core-prim . make-record-constructor-descriptor)
        (g$13037$5uPkq core-prim . record?)
        (g$13036$5uPkq core-prim . record-type-uid)
        (g$13035$5uPkq core-prim . record-type-sealed?)
        (g$13034$5uPkq core-prim . record-type-parent)
        (g$13033$5uPkq core-prim . record-type-opaque?)
        (g$13032$5uPkq core-prim . record-type-name)
        (g$13031$5uPkq core-prim . record-type-generative?)
        (g$13030$5uPkq core-prim . record-type-field-names)
        (g$13029$5uPkq core-prim . record-rtd)
        (g$13028$5uPkq core-prim . record-field-mutable?)
        (g$7223$5uPkq core-prim . delete-file)
        (g$7222$5uPkq core-prim . file-exists?)
        (g$13027$5uPkq core-prim . vector-sort!)
        (g$13026$5uPkq core-prim . vector-sort)
        (g$7587$5uPkq core-prim . list-sort)
        (g$13025$5uPkq core-prim . symbol-hash)
        (g$13024$5uPkq core-prim . string-ci-hash)
        (g$13023$5uPkq core-prim . string-hash)
        (g$13022$5uPkq core-prim . equal-hash)
        (g$13021$5uPkq core-prim . hashtable-equivalence-function)
        (g$13020$5uPkq core-prim . make-hashtable)
        (g$13019$5uPkq core-prim . hashtable-hash-function)
        (g$7191$5uPkq core-prim . make-eqv-hashtable)
        (g$7190$5uPkq core-prim . make-eq-hashtable)
        (g$13018$5uPkq core-prim . hashtable?)
        (g$7197$5uPkq core-prim . hashtable-update!)
        (g$7192$5uPkq core-prim . hashtable-size)
        (g$7194$5uPkq core-prim . hashtable-set!)
        (g$7193$5uPkq core-prim . hashtable-ref)
        (g$13017$5uPkq core-prim . hashtable-mutable?)
        (g$13016$5uPkq core-prim . hashtable-keys)
        (g$13015$5uPkq core-prim . hashtable-entries)
        (g$7195$5uPkq core-prim . hashtable-delete!)
        (g$13014$5uPkq core-prim . hashtable-copy)
        (g$7196$5uPkq core-prim . hashtable-contains?)
        (g$7198$5uPkq core-prim . hashtable-clear!)
        (g$8065$5uPkq core-prim . call-with-output-file)
        (g$8064$5uPkq core-prim . call-with-input-file)
        (g$13013$5uPkq core-prim . write-char)
        (g$13012$5uPkq core-prim . write)
        (g$8063$5uPkq core-prim . with-output-to-file)
        (g$8062$5uPkq core-prim . with-input-from-file)
        (g$13011$5uPkq core-prim . read-char)
        (g$13010$5uPkq core-prim . read)
        (g$13009$5uPkq core-prim . peek-char)
        (g$13008$5uPkq core-prim . open-output-file)
        (g$13007$5uPkq core-prim . open-input-file)
        (g$13006$5uPkq core-prim . newline)
        (g$13005$5uPkq core-prim . display)
        (g$13004$5uPkq core-prim . close-output-port)
        (g$13003$5uPkq core-prim . close-input-port)
        (g$13002$5uPkq core-prim . eof-object?)
        (g$13001$5uPkq core-prim . eof-object)
        (g$13000$5uPkq core-prim . current-error-port)
        (g$12999$5uPkq core-prim . current-output-port)
        (g$12998$5uPkq core-prim . current-input-port)
        (g$12997$5uPkq core-prim . output-port?)
        (g$12996$5uPkq core-prim . input-port?)
        (g$12995$5uPkq core-prim . utf-8-codec)
        (g$12994$5uPkq core-prim . utf-16-codec)
        (g$12993$5uPkq core-prim . transcoder-error-handling-mode)
        (g$12992$5uPkq core-prim . transcoder-eol-style)
        (g$12991$5uPkq core-prim . transcoder-codec)
        (g$12990$5uPkq core-prim . transcoded-port)
        (g$12989$5uPkq core-prim . textual-port?)
        (g$12988$5uPkq core-prim . string->bytevector)
        (g$12987$5uPkq core-prim . standard-output-port)
        (g$12986$5uPkq core-prim . standard-input-port)
        (g$12985$5uPkq core-prim . standard-error-port)
        (g$12984$5uPkq core-prim . set-port-position!)
        (g$12983$5uPkq core-prim . put-u8)
        (g$12982$5uPkq core-prim . put-string)
        (g$12981$5uPkq core-prim . put-datum)
        (g$12980$5uPkq core-prim . put-char)
        (g$12979$5uPkq core-prim . put-bytevector)
        (g$8038$5uPkq core-prim . port?)
        (g$12978$5uPkq core-prim . port-transcoder)
        (g$12977$5uPkq core-prim . port-position)
        (g$12976$5uPkq core-prim . port-has-set-port-position!?)
        (g$12975$5uPkq core-prim . port-has-port-position?)
        (g$12974$5uPkq core-prim . port-eof?)
        (g$12973$5uPkq core-prim . output-port-buffer-mode)
        (g$8037$5uPkq core-prim . open-string-output-port)
        (g$12972$5uPkq core-prim . open-string-input-port)
        (g$12971$5uPkq core-prim . open-file-output-port)
        (g$12970$5uPkq core-prim . open-file-input/output-port)
        (g$12969$5uPkq core-prim . open-file-input-port)
        (g$12968$5uPkq core-prim . open-bytevector-output-port)
        (g$12967$5uPkq core-prim . open-bytevector-input-port)
        (g$12966$5uPkq core-prim . native-transcoder)
        (g$12965$5uPkq core-prim . native-eol-style)
        (g$12964$5uPkq core-prim . make-transcoder)
        (g$12963$5uPkq core-prim . latin-1-codec)
        (g$7893$5uPkq core-prim . make-i/o-write-error)
        (g$7879$5uPkq core-prim . make-i/o-read-error)
        (g$7998$5uPkq core-prim . make-i/o-port-error)
        (g$7908$5uPkq core-prim . make-i/o-invalid-position-error)
        (g$7925$5uPkq core-prim . make-i/o-filename-error)
        (g$7941$5uPkq core-prim . make-i/o-file-protection-error)
        (g$7955$5uPkq core-prim . make-i/o-file-is-read-only-error)
        (g$7983$5uPkq core-prim . make-i/o-file-does-not-exist-error)
        (g$7969$5uPkq core-prim . make-i/o-file-already-exists-error)
        (g$7865$5uPkq core-prim . make-i/o-error)
        (g$8029$5uPkq core-prim . make-i/o-encoding-error)
        (g$8014$5uPkq core-prim . make-i/o-decoding-error)
        (g$12962$5uPkq core-prim . make-custom-textual-output-port)
        (g$12961$5uPkq core-prim . make-custom-textual-input/output-port)
        (g$12960$5uPkq core-prim . make-custom-textual-input-port)
        (g$12959$5uPkq core-prim . make-custom-binary-output-port)
        (g$12958$5uPkq core-prim . make-custom-binary-input/output-port)
        (g$12957$5uPkq core-prim . make-custom-binary-input-port)
        (g$12956$5uPkq core-prim . make-bytevector)
        (g$12955$5uPkq core-prim . lookahead-u8)
        (g$12954$5uPkq core-prim . lookahead-char)
        (g$7894$5uPkq core-prim . i/o-write-error?)
        (g$7880$5uPkq core-prim . i/o-read-error?)
        (g$8000$5uPkq core-prim . i/o-port-error?)
        (g$7910$5uPkq core-prim . i/o-invalid-position-error?)
        (g$7911$5uPkq core-prim . i/o-error-position)
        (g$7927$5uPkq core-prim . i/o-filename-error?)
        (g$7942$5uPkq core-prim . i/o-file-protection-error?)
        (g$7956$5uPkq core-prim . i/o-file-is-read-only-error?)
        (g$7984$5uPkq core-prim . i/o-file-does-not-exist-error?)
        (g$7970$5uPkq core-prim . i/o-file-already-exists-error?)
        (g$7866$5uPkq core-prim . i/o-error?)
        (g$8001$5uPkq core-prim . i/o-error-port)
        (g$7928$5uPkq core-prim . i/o-error-filename)
        (g$8031$5uPkq core-prim . i/o-encoding-error?)
        (g$8032$5uPkq core-prim . i/o-encoding-error-char)
        (g$8015$5uPkq core-prim . i/o-decoding-error?)
        (g$12953$5uPkq core-prim . get-u8)
        (g$12952$5uPkq core-prim . get-string-n!)
        (g$12951$5uPkq core-prim . get-string-n)
        (g$12950$5uPkq core-prim . get-string-all)
        (g$12949$5uPkq core-prim . get-line)
        (g$12948$5uPkq core-prim . get-datum)
        (g$12947$5uPkq core-prim . get-char)
        (g$12946$5uPkq core-prim . get-bytevector-some)
        (g$12945$5uPkq core-prim . get-bytevector-n!)
        (g$12944$5uPkq core-prim . get-bytevector-n)
        (g$12943$5uPkq core-prim . get-bytevector-all)
        (g$12942$5uPkq core-prim . flush-output-port)
        (g$12941$5uPkq core-prim . close-port)
        (g$8039$5uPkq core-prim . call-with-string-output-port)
        (g$12940$5uPkq core-prim . call-with-port)
        (g$12939$5uPkq core-prim . call-with-bytevector-output-port)
        (g$12938$5uPkq core-prim . bytevector->string)
        (g$12937$5uPkq core-prim . buffer-mode?)
        (g$12936$5uPkq core-prim . binary-port?)
        (g$9517$5uPkq core-prim . scheme-report-environment)
        (g$7566$5uPkq core-prim . quotient)
        (g$9516$5uPkq core-prim . null-environment)
        (g$7567$5uPkq core-prim . remainder)
        (g$7568$5uPkq core-prim . modulo)
        (g$12935$5uPkq core-prim . inexact->exact)
        (g$7570$5uPkq core-prim . force)
        (g$12934$5uPkq core-prim . exact->inexact)
        (g$12933$5uPkq core-prim . exit)
        (g$12511$5uPkq core-prim . command-line)
        (g$12932$5uPkq core-prim . string-fill!)
        (g$12931$5uPkq core-prim . string-set!)
        (g$12930$5uPkq core-prim . set-cdr!)
        (g$12929$5uPkq core-prim . set-car!)
        (g$6569$5uPkq core-prim . remove)
        (g$6570$5uPkq core-prim . remv)
        (g$6550$5uPkq core-prim . remp)
        (g$6571$5uPkq core-prim . remq)
        (g$6549$5uPkq core-prim . partition)
        (g$6557$5uPkq core-prim . memv)
        (g$6556$5uPkq core-prim . memq)
        (g$6559$5uPkq core-prim . memp)
        (g$6558$5uPkq core-prim . member)
        (g$6563$5uPkq core-prim . exists)
        (g$6562$5uPkq core-prim . for-all)
        (g$6568$5uPkq core-prim . fold-right)
        (g$6567$5uPkq core-prim . fold-left)
        (g$6548$5uPkq core-prim . find)
        (g$6551$5uPkq core-prim . filter)
        (g$6566$5uPkq core-prim . cons*)
        (g$6553$5uPkq core-prim . assv)
        (g$6552$5uPkq core-prim . assq)
        (g$6555$5uPkq core-prim . assp)
        (g$6554$5uPkq core-prim . assoc)
        (g$12928$5uPkq core-prim . with-exception-handler)
        (g$12927$5uPkq core-prim . raise-continuable)
        (g$12926$5uPkq core-prim . raise)
        (g$9519$5uPkq core-prim . eval)
        (g$9515$5uPkq core-prim . environment)
        (g$8123$5uPkq core-prim . make-enumeration)
        (g$8130$5uPkq core-prim . enum-set=?)
        (g$8124$5uPkq core-prim . enum-set-universe)
        (g$8131$5uPkq core-prim . enum-set-union)
        (g$8129$5uPkq core-prim . enum-set-subset?)
        (g$8135$5uPkq core-prim . enum-set-projection)
        (g$8128$5uPkq core-prim . enum-set-member?)
        (g$8132$5uPkq core-prim . enum-set-intersection)
        (g$8125$5uPkq core-prim . enum-set-indexer)
        (g$8133$5uPkq core-prim . enum-set-difference)
        (g$8126$5uPkq core-prim . enum-set-constructor)
        (g$8134$5uPkq core-prim . enum-set-complement)
        (g$8127$5uPkq core-prim . enum-set->list)
        (g$7477$5uPkq core-prim . who-condition?)
        (g$7388$5uPkq core-prim . warning?)
        (g$7430$5uPkq core-prim . violation?)
        (g$7554$5uPkq core-prim . undefined-violation?)
        (g$7538$5uPkq core-prim . syntax-violation?)
        (g$7540$5uPkq core-prim . syntax-violation-subform)
        (g$7539$5uPkq core-prim . syntax-violation-form)
        (g$9536$5uPkq core-prim . syntax-violation)
        (g$12925$5uPkq core-prim . simple-conditions)
        (g$7402$5uPkq core-prim . serious-condition?)
        (g$7492$5uPkq core-prim . non-continuable-violation?)
        (g$7373$5uPkq core-prim . message-condition?)
        (g$7475$5uPkq core-prim . make-who-condition)
        (g$7387$5uPkq core-prim . make-warning)
        (g$7429$5uPkq core-prim . make-violation)
        (g$7553$5uPkq core-prim . make-undefined-violation)
        (g$7535$5uPkq core-prim . make-syntax-violation)
        (g$7401$5uPkq core-prim . make-serious-condition)
        (g$7491$5uPkq core-prim . make-non-continuable-violation)
        (g$7371$5uPkq core-prim . make-message-condition)
        (g$7519$5uPkq core-prim . make-lexical-violation)
        (g$7458$5uPkq core-prim . make-irritants-condition)
        (g$7505$5uPkq core-prim . make-implementation-restriction-violation)
        (g$7415$5uPkq core-prim . make-error)
        (g$7443$5uPkq core-prim . make-assertion-violation)
        (g$7520$5uPkq core-prim . lexical-violation?)
        (g$7460$5uPkq core-prim . irritants-condition?)
        (g$7506$5uPkq core-prim . implementation-restriction-violation?)
        (g$7416$5uPkq core-prim . error?)
        (g$7478$5uPkq core-prim . condition-who)
        (g$12924$5uPkq core-prim . condition-predicate)
        (g$7374$5uPkq core-prim . condition-message)
        (g$7461$5uPkq core-prim . condition-irritants)
        (g$12923$5uPkq core-prim . condition-accessor)
        (g$12922$5uPkq core-prim . condition)
        (g$7444$5uPkq core-prim . assertion-violation?)
        (g$12921$5uPkq core-prim . condition?)
        (g$12920$5uPkq core-prim . utf32->string)
        (g$12919$5uPkq core-prim . utf16->string)
        (g$12918$5uPkq core-prim . utf8->string)
        (g$12917$5uPkq core-prim . uint-list->bytevector)
        (g$12916$5uPkq core-prim . u8-list->bytevector)
        (g$12915$5uPkq core-prim . string->utf8)
        (g$12914$5uPkq core-prim . string->utf32)
        (g$12913$5uPkq core-prim . string->utf16)
        (g$12912$5uPkq core-prim . sint-list->bytevector)
        (g$7229$5uPkq core-prim . native-endianness)
        (g$12911$5uPkq core-prim . bytevector?)
        (g$12910$5uPkq core-prim . bytevector=?)
        (g$12909$5uPkq core-prim . bytevector-uint-set!)
        (g$12908$5uPkq core-prim . bytevector-uint-ref)
        (g$12907$5uPkq core-prim . bytevector-u8-set!)
        (g$12906$5uPkq core-prim . bytevector-u8-ref)
        (g$7250$5uPkq core-prim . bytevector-u64-set!)
        (g$7246$5uPkq core-prim . bytevector-u64-ref)
        (g$7252$5uPkq core-prim . bytevector-u64-native-set!)
        (g$7248$5uPkq core-prim . bytevector-u64-native-ref)
        (g$7242$5uPkq core-prim . bytevector-u32-set!)
        (g$7238$5uPkq core-prim . bytevector-u32-ref)
        (g$7244$5uPkq core-prim . bytevector-u32-native-set!)
        (g$7240$5uPkq core-prim . bytevector-u32-native-ref)
        (g$7234$5uPkq core-prim . bytevector-u16-set!)
        (g$7230$5uPkq core-prim . bytevector-u16-ref)
        (g$7236$5uPkq core-prim . bytevector-u16-native-set!)
        (g$7232$5uPkq core-prim . bytevector-u16-native-ref)
        (g$12905$5uPkq core-prim . bytevector-sint-set!)
        (g$12904$5uPkq core-prim . bytevector-sint-ref)
        (g$12903$5uPkq core-prim . bytevector-s8-set!)
        (g$12902$5uPkq core-prim . bytevector-s8-ref)
        (g$7251$5uPkq core-prim . bytevector-s64-set!)
        (g$7247$5uPkq core-prim . bytevector-s64-ref)
        (g$7253$5uPkq core-prim . bytevector-s64-native-set!)
        (g$7249$5uPkq core-prim . bytevector-s64-native-ref)
        (g$7243$5uPkq core-prim . bytevector-s32-set!)
        (g$7239$5uPkq core-prim . bytevector-s32-ref)
        (g$7245$5uPkq core-prim . bytevector-s32-native-set!)
        (g$7241$5uPkq core-prim . bytevector-s32-native-ref)
        (g$7235$5uPkq core-prim . bytevector-s16-set!)
        (g$7231$5uPkq core-prim . bytevector-s16-ref)
        (g$7237$5uPkq core-prim . bytevector-s16-native-set!)
        (g$7233$5uPkq core-prim . bytevector-s16-native-ref)
        (g$12901$5uPkq core-prim . bytevector-length)
        (g$12900$5uPkq core-prim . bytevector-ieee-single-set!)
        (g$12899$5uPkq core-prim . bytevector-ieee-single-ref)
        (g$7256$5uPkq core-prim . bytevector-ieee-single-native-set!)
        (g$7254$5uPkq core-prim . bytevector-ieee-single-native-ref)
        (g$12898$5uPkq core-prim . bytevector-ieee-double-set!)
        (g$12897$5uPkq core-prim . bytevector-ieee-double-ref)
        (g$7257$5uPkq core-prim . bytevector-ieee-double-native-set!)
        (g$7255$5uPkq core-prim . bytevector-ieee-double-native-ref)
        (g$12896$5uPkq core-prim . bytevector-fill!)
        (g$12895$5uPkq core-prim . bytevector-copy!)
        (g$12894$5uPkq core-prim . bytevector-copy)
        (g$12893$5uPkq core-prim . bytevector->uint-list)
        (g$12892$5uPkq core-prim . bytevector->u8-list)
        (g$12891$5uPkq core-prim . bytevector->sint-list)
        (g$7851$5uPkq core-prim . no-nans-violation?)
        (g$7837$5uPkq core-prim . no-infinities-violation?)
        (g$7850$5uPkq core-prim . make-no-nans-violation)
        (g$7836$5uPkq core-prim . make-no-infinities-violation)
        (g$12890$5uPkq core-prim . real->flonum)
        (g$12889$5uPkq core-prim . flzero?)
        (g$12888$5uPkq core-prim . fltruncate)
        (g$12887$5uPkq core-prim . fltan)
        (g$12886$5uPkq core-prim . flsqrt)
        (g$12885$5uPkq core-prim . flsin)
        (g$12884$5uPkq core-prim . flround)
        (g$12883$5uPkq core-prim . flpositive?)
        (g$12882$5uPkq core-prim . flonum?)
        (g$12881$5uPkq core-prim . flodd?)
        (g$12880$5uPkq core-prim . flnumerator)
        (g$12879$5uPkq core-prim . flnegative?)
        (g$12878$5uPkq core-prim . flnan?)
        (g$12877$5uPkq core-prim . flmod0)
        (g$12876$5uPkq core-prim . flmod)
        (g$12875$5uPkq core-prim . flmin)
        (g$12874$5uPkq core-prim . flmax)
        (g$12873$5uPkq core-prim . fllog)
        (g$12872$5uPkq core-prim . flinteger?)
        (g$12871$5uPkq core-prim . flinfinite?)
        (g$12870$5uPkq core-prim . flfloor)
        (g$12869$5uPkq core-prim . flfinite?)
        (g$12868$5uPkq core-prim . flexpt)
        (g$12867$5uPkq core-prim . flexp)
        (g$12866$5uPkq core-prim . fleven?)
        (g$12865$5uPkq core-prim . fldiv0-and-mod0)
        (g$12864$5uPkq core-prim . fldiv0)
        (g$12863$5uPkq core-prim . fldiv-and-mod)
        (g$12862$5uPkq core-prim . fldiv)
        (g$12861$5uPkq core-prim . fldenominator)
        (g$12860$5uPkq core-prim . flcos)
        (g$12859$5uPkq core-prim . flceiling)
        (g$12858$5uPkq core-prim . flatan)
        (g$12857$5uPkq core-prim . flasin)
        (g$12856$5uPkq core-prim . flacos)
        (g$12855$5uPkq core-prim . flabs)
        (g$12854$5uPkq core-prim . fl>?)
        (g$12853$5uPkq core-prim . fl>=?)
        (g$12852$5uPkq core-prim . fl=?)
        (g$12851$5uPkq core-prim . fl<?)
        (g$12850$5uPkq core-prim . fl<=?)
        (g$12849$5uPkq core-prim . fl/)
        (g$12848$5uPkq core-prim . fl-)
        (g$12847$5uPkq core-prim . fl+)
        (g$12846$5uPkq core-prim . fl*)
        (g$12845$5uPkq core-prim . fixnum->flonum)
        (g$12844$5uPkq core-prim . fxzero?)
        (g$12843$5uPkq core-prim . fxxor)
        (g$7783$5uPkq core-prim . fxrotate-bit-field)
        (g$12842$5uPkq core-prim . fxreverse-bit-field)
        (g$12841$5uPkq core-prim . fxpositive?)
        (g$12840$5uPkq core-prim . fxodd?)
        (g$12839$5uPkq core-prim . fxnot)
        (g$12838$5uPkq core-prim . fxnegative?)
        (g$12837$5uPkq core-prim . fxmod0)
        (g$12836$5uPkq core-prim . fxmod)
        (g$12835$5uPkq core-prim . fxmin)
        (g$12834$5uPkq core-prim . fxmax)
        (g$12833$5uPkq core-prim . fxlength)
        (g$12832$5uPkq core-prim . fxior)
        (g$7777$5uPkq core-prim . fxif)
        (g$12831$5uPkq core-prim . fxfirst-bit-set)
        (g$12830$5uPkq core-prim . fxeven?)
        (g$12829$5uPkq core-prim . fxdiv0-and-mod0)
        (g$12828$5uPkq core-prim . fxdiv0)
        (g$12827$5uPkq core-prim . fxdiv-and-mod)
        (g$12826$5uPkq core-prim . fxdiv)
        (g$7780$5uPkq core-prim . fxcopy-bit-field)
        (g$7778$5uPkq core-prim . fxcopy-bit)
        (g$12825$5uPkq core-prim . fxbit-set?)
        (g$7779$5uPkq core-prim . fxbit-field)
        (g$12824$5uPkq core-prim . fxbit-count)
        (g$7782$5uPkq core-prim . fxarithmetic-shift-right)
        (g$7781$5uPkq core-prim . fxarithmetic-shift-left)
        (g$12823$5uPkq core-prim . fxarithmetic-shift)
        (g$12822$5uPkq core-prim . fxand)
        (g$12821$5uPkq core-prim . fx>?)
        (g$12820$5uPkq core-prim . fx>=?)
        (g$12819$5uPkq core-prim . fx=?)
        (g$12818$5uPkq core-prim . fx<?)
        (g$12817$5uPkq core-prim . fx<=?)
        (g$7775$5uPkq core-prim . fx-/carry)
        (g$12816$5uPkq core-prim . fx-)
        (g$7776$5uPkq core-prim . fx+/carry)
        (g$12815$5uPkq core-prim . fx+)
        (g$7774$5uPkq core-prim . fx*/carry)
        (g$12814$5uPkq core-prim . fx*)
        (g$12813$5uPkq core-prim . greatest-fixnum)
        (g$12812$5uPkq core-prim . least-fixnum)
        (g$12811$5uPkq core-prim . fixnum-width)
        (g$12810$5uPkq core-prim . fixnum?)
        (g$7748$5uPkq core-prim . bitwise-rotate-bit-field)
        (g$12809$5uPkq core-prim . bitwise-reverse-bit-field)
        (g$12808$5uPkq core-prim . bitwise-length)
        (g$7742$5uPkq core-prim . bitwise-if)
        (g$12807$5uPkq core-prim . bitwise-first-bit-set)
        (g$7745$5uPkq core-prim . bitwise-copy-bit-field)
        (g$7743$5uPkq core-prim . bitwise-copy-bit)
        (g$12806$5uPkq core-prim . bitwise-bit-set?)
        (g$7744$5uPkq core-prim . bitwise-bit-field)
        (g$12805$5uPkq core-prim . bitwise-bit-count)
        (g$12804$5uPkq core-prim . bitwise-xor)
        (g$12803$5uPkq core-prim . bitwise-ior)
        (g$12802$5uPkq core-prim . bitwise-and)
        (g$12801$5uPkq core-prim . bitwise-not)
        (g$7747$5uPkq core-prim . bitwise-arithmetic-shift-right)
        (g$7746$5uPkq core-prim . bitwise-arithmetic-shift-left)
        (g$12800$5uPkq core-prim . bitwise-arithmetic-shift)
        (g$12799$5uPkq core-prim . zero?)
        (g$12798$5uPkq core-prim . vector?)
        (g$12797$5uPkq core-prim . vector-set!)
        (g$12796$5uPkq core-prim . vector-ref)
        (g$12795$5uPkq core-prim . vector-map)
        (g$12794$5uPkq core-prim . vector-length)
        (g$12793$5uPkq core-prim . vector-for-each)
        (g$12792$5uPkq core-prim . vector-fill!)
        (g$12791$5uPkq core-prim . vector->list)
        (g$12790$5uPkq core-prim . vector)
        (g$12789$5uPkq core-prim . values)
        (g$12788$5uPkq core-prim . truncate)
        (g$12787$5uPkq core-prim . tan)
        (g$12786$5uPkq core-prim . symbol?)
        (g$6749$5uPkq core-prim . symbol=?)
        (g$12785$5uPkq core-prim . symbol->string)
        (g$12784$5uPkq core-prim . substring)
        (g$12783$5uPkq core-prim . string?)
        (g$6746$5uPkq core-prim . string>?)
        (g$6748$5uPkq core-prim . string>=?)
        (g$6744$5uPkq core-prim . string=?)
        (g$6745$5uPkq core-prim . string<?)
        (g$6747$5uPkq core-prim . string<=?)
        (g$12782$5uPkq core-prim . string-ref)
        (g$12781$5uPkq core-prim . string-length)
        (g$12780$5uPkq core-prim . string-for-each)
        (g$12779$5uPkq core-prim . string-copy)
        (g$12778$5uPkq core-prim . string-append)
        (g$12777$5uPkq core-prim . string->symbol)
        (g$12776$5uPkq core-prim . string->number)
        (g$12775$5uPkq core-prim . string->list)
        (g$12774$5uPkq core-prim . string)
        (g$12773$5uPkq core-prim . sqrt)
        (g$12772$5uPkq core-prim . sin)
        (g$12771$5uPkq core-prim . round)
        (g$12770$5uPkq core-prim . reverse)
        (g$12769$5uPkq core-prim . real?)
        (g$12768$5uPkq core-prim . real-valued?)
        (g$12767$5uPkq core-prim . real-part)
        (g$6790$5uPkq core-prim . rationalize)
        (g$12766$5uPkq core-prim . rational?)
        (g$12765$5uPkq core-prim . rational-valued?)
        (g$12764$5uPkq core-prim . procedure?)
        (g$12763$5uPkq core-prim . positive?)
        (g$12762$5uPkq core-prim . pair?)
        (g$12761$5uPkq core-prim . odd?)
        (g$12760$5uPkq core-prim . numerator)
        (g$12759$5uPkq core-prim . number?)
        (g$12758$5uPkq core-prim . number->string)
        (g$12757$5uPkq core-prim . null?)
        (g$12756$5uPkq core-prim . not)
        (g$12755$5uPkq core-prim . negative?)
        (g$12754$5uPkq core-prim . nan?)
        (g$12753$5uPkq core-prim . min)
        (g$12752$5uPkq core-prim . max)
        (g$6564$5uPkq core-prim . map)
        (g$12751$5uPkq core-prim . make-vector)
        (g$12750$5uPkq core-prim . make-string)
        (g$12749$5uPkq core-prim . make-rectangular)
        (g$12748$5uPkq core-prim . make-polar)
        (g$12747$5uPkq core-prim . magnitude)
        (g$12746$5uPkq core-prim . log)
        (g$12745$5uPkq core-prim . list?)
        (g$6544$5uPkq core-prim . list-tail)
        (g$6545$5uPkq core-prim . list-ref)
        (g$12744$5uPkq core-prim . list->vector)
        (g$12743$5uPkq core-prim . list->string)
        (g$12742$5uPkq core-prim . list)
        (g$12741$5uPkq core-prim . length)
        (g$12740$5uPkq core-prim . lcm)
        (g$12739$5uPkq core-prim . integer?)
        (g$12738$5uPkq core-prim . integer-valued?)
        (g$12737$5uPkq core-prim . integer->char)
        (g$12736$5uPkq core-prim . infinite?)
        (g$12735$5uPkq core-prim . inexact?)
        (g$12734$5uPkq core-prim . inexact)
        (g$12733$5uPkq core-prim . imag-part)
        (g$12732$5uPkq core-prim . gcd)
        (g$6565$5uPkq core-prim . for-each)
        (g$12731$5uPkq core-prim . floor)
        (g$12730$5uPkq core-prim . finite?)
        (g$12729$5uPkq core-prim . expt)
        (g$12728$5uPkq core-prim . exp)
        (g$12727$5uPkq core-prim . exact?)
        (g$12726$5uPkq core-prim . exact-integer-sqrt)
        (g$12725$5uPkq core-prim . exact)
        (g$12724$5uPkq core-prim . even?)
        (g$12723$5uPkq core-prim . error)
        (g$12722$5uPkq core-prim . eqv?)
        (g$12721$5uPkq core-prim . equal?)
        (g$12720$5uPkq core-prim . eq?)
        (g$12719$5uPkq core-prim . dynamic-wind)
        (g$12718$5uPkq core-prim . div0-and-mod0)
        (g$12717$5uPkq core-prim . mod0)
        (g$12716$5uPkq core-prim . div0)
        (g$12715$5uPkq core-prim . div-and-mod)
        (g$12714$5uPkq core-prim . mod)
        (g$12713$5uPkq core-prim . div)
        (g$12712$5uPkq core-prim . denominator)
        (g$12711$5uPkq core-prim . cos)
        (g$12710$5uPkq core-prim . cons)
        (g$12709$5uPkq core-prim . complex?)
        (g$12708$5uPkq core-prim . char?)
        (g$6787$5uPkq core-prim . char>?)
        (g$6789$5uPkq core-prim . char>=?)
        (g$6785$5uPkq core-prim . char=?)
        (g$6786$5uPkq core-prim . char<?)
        (g$6788$5uPkq core-prim . char<=?)
        (g$12707$5uPkq core-prim . char->integer)
        (g$12706$5uPkq core-prim . ceiling)
        (g$12705$5uPkq core-prim . call-with-values)
        (g$12704$5uPkq core-prim . call/cc)
        (g$12703$5uPkq core-prim . call-with-current-continuation)
        (g$6709$5uPkq core-prim . cddddr)
        (g$6708$5uPkq core-prim . cdddar)
        (g$6707$5uPkq core-prim . cddadr)
        (g$6706$5uPkq core-prim . cddaar)
        (g$6705$5uPkq core-prim . cdaddr)
        (g$6704$5uPkq core-prim . cdadar)
        (g$6703$5uPkq core-prim . cdaadr)
        (g$6702$5uPkq core-prim . cdaaar)
        (g$6701$5uPkq core-prim . cadddr)
        (g$6700$5uPkq core-prim . caddar)
        (g$6699$5uPkq core-prim . cadadr)
        (g$6698$5uPkq core-prim . cadaar)
        (g$6697$5uPkq core-prim . caaddr)
        (g$6696$5uPkq core-prim . caadar)
        (g$6695$5uPkq core-prim . caaadr)
        (g$6694$5uPkq core-prim . caaaar)
        (g$6693$5uPkq core-prim . cdddr)
        (g$6692$5uPkq core-prim . cddar)
        (g$6691$5uPkq core-prim . cdadr)
        (g$6690$5uPkq core-prim . cdaar)
        (g$6689$5uPkq core-prim . caddr)
        (g$6688$5uPkq core-prim . cadar)
        (g$6687$5uPkq core-prim . caadr)
        (g$6686$5uPkq core-prim . caaar)
        (g$6685$5uPkq core-prim . cddr)
        (g$6684$5uPkq core-prim . cdar)
        (g$6683$5uPkq core-prim . cadr)
        (g$6682$5uPkq core-prim . caar)
        (g$12702$5uPkq core-prim . cdr)
        (g$12701$5uPkq core-prim . car)
        (g$12700$5uPkq core-prim . boolean?)
        (g$6750$5uPkq core-prim . boolean=?)
        (g$12699$5uPkq core-prim . atan)
        (g$12698$5uPkq core-prim . assertion-violation)
        (g$12697$5uPkq core-prim . asin)
        (g$12696$5uPkq core-prim . apply)
        (g$12695$5uPkq core-prim . append)
        (g$12694$5uPkq core-prim . angle)
        (g$12693$5uPkq core-prim . acos)
        (g$12692$5uPkq core-prim . abs)
        (g$12691$5uPkq core-prim . /)
        (g$12690$5uPkq core-prim . *)
        (g$12689$5uPkq core-prim . -)
        (g$12688$5uPkq core-prim . +)
        (g$12687$5uPkq core-prim . >=)
        (g$12686$5uPkq core-prim . >)
        (g$12685$5uPkq core-prim . =)
        (g$12684$5uPkq core-prim . <=)
        (g$12683$5uPkq core-prim . <)
        (g$12682$5uPkq core-prim . make-record-printer)
        (g$12681$5uPkq core-prim . eqv-hash)
        (g$12680$5uPkq core-prim . reverse!)
        (g$12679$5uPkq core-prim . deserialize-port)
        (g$12678$5uPkq core-prim . serialize-port)
        (g$8098$5uPkq core-prim . enum-set?)
        (g$7569$5uPkq core-prim . make-promise)
        (g$12513$5uPkq core-prim . load/args)
        (g$8209$5uPkq core-prim . printf)
        (g$8210$5uPkq core-prim . fprintf)
        (g$8211$5uPkq core-prim . format)
        (g$12677$5uPkq core-prim . procedure-form)
        (g$12676$5uPkq core-prim . procedure-environment)
        (g$12675$5uPkq core-prim . procedure-name)
        (g$12674$5uPkq core-prim . procedure-arity)
        (g$12673$5uPkq core-prim . gc-collect)
        (g$12672$5uPkq core-prim . clr-type?)
        (g$12671$5uPkq core-prim . get-clr-type)
        (g$12670$5uPkq core-prim . get-command-line)
        (g$12669$5uPkq core-prim . vector-append)
        (g$12668$5uPkq core-prim . vector-filter)
        (g$12667$5uPkq core-prim . vector-reverse!)
        (g$12666$5uPkq core-prim . vector-contains?)
        (g$12665$5uPkq core-prim . vector-index-of)
        (g$12664$5uPkq core-prim . vector-copy)
        (g$12663$5uPkq core-prim . vector-binary-search)
        (g$12662$5uPkq core-prim . string-ci-compare)
        (g$12661$5uPkq core-prim . string-compare)
        (g$12660$5uPkq core-prim . string-format)
        (g$12510$5uPkq core-prim . trace-printer)
        (g$12659$5uPkq core-prim . make-traced-procedure)
        (g$8231$5uPkq core-prim . make-traced-macro)
        (g$9532$5uPkq core-prim . assertion-error)
        (g$12658$5uPkq core-prim . time-it)
        (g$8238$5uPkq core-prim . make-parameter)
        (g$12657$5uPkq core-prim . library-locator)
        (g$12656$5uPkq core-prim . get-library-paths)
        (g$12655$5uPkq core-prim . open-tcp-input/output-port)
        (g$12654$5uPkq core-prim . hashtable-for-each)
        (g$12653$5uPkq core-prim . hashtable-map)
        (g$9511$5uPkq core-prim . environment-bindings)
        (g$9514$5uPkq core-prim . environment-symbols)
        (g$9510$5uPkq core-prim . interaction-environment-symbols)
        (g$12652$5uPkq core-prim . optimization-level)
        (g$8693$5uPkq core-prim . library-path)
        (g$9518$5uPkq core-prim . expand)
        (g$12651$5uPkq $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12650$5uPkq $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12649$5uPkq $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12648$5uPkq $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12647$5uPkq $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12646$5uPkq
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12645$5uPkq
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12644$5uPkq
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12643$5uPkq
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12642$5uPkq $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12641$5uPkq
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12640$5uPkq $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12639$5uPkq $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12638$5uPkq $core-rtd &i/o-rtd &i/o-rcd)
        (g$12637$5uPkq $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12636$5uPkq $core-rtd &undefined-rtd &undefined-rcd)
        (g$12635$5uPkq $core-rtd &syntax-rtd &syntax-rcd)
        (g$12634$5uPkq $core-rtd &lexical-rtd &lexical-rcd)
        (g$12633$5uPkq
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12632$5uPkq $core-rtd &who-rtd &who-rcd)
        (g$12631$5uPkq $core-rtd &irritants-rtd &irritants-rcd)
        (g$12630$5uPkq $core-rtd &assertion-rtd &assertion-rcd)
        (g$12629$5uPkq $core-rtd &violation-rtd &violation-rcd)
        (g$12628$5uPkq $core-rtd &error-rtd &error-rcd)
        (g$12627$5uPkq $core-rtd &serious-rtd &serious-rcd)
        (g$12626$5uPkq $core-rtd &warning-rtd &warning-rcd)
        (g$12625$5uPkq $core-rtd &message-rtd &message-rcd)
        (g$12624$5uPkq $core-rtd &condition-rtd &condition-rcd)
        (g$12623$5uPkq macro . define-condition-type)
        (g$12622$5uPkq macro . define-enumeration)
        (g$12621$5uPkq macro . define-record-type)
        (g$12620$5uPkq macro . parent-rtd)
        (g$12619$5uPkq macro . nongenerative)
        (g$12618$5uPkq macro . opaque)
        (g$12617$5uPkq macro . sealed)
        (g$12616$5uPkq macro . protocol)
        (g$12615$5uPkq macro . parent)
        (g$12614$5uPkq macro . immutable)
        (g$12613$5uPkq macro . mutable)
        (g$12612$5uPkq macro . fields)
        (g$12611$5uPkq macro . error-handling-mode)
        (g$12610$5uPkq macro . file-options)
        (g$12609$5uPkq macro . buffer-mode)
        (g$12608$5uPkq macro . eol-style)
        (g$12607$5uPkq macro . guard)
        (g$12606$5uPkq macro . trace-letrec-syntax)
        (g$12605$5uPkq macro . trace-let-syntax)
        (g$12604$5uPkq macro . trace-define-syntax)
        (g$12603$5uPkq macro . trace-define)
        (g$12602$5uPkq macro . trace-lambda)
        (g$12601$5uPkq macro . unsyntax-splicing)
        (g$12600$5uPkq macro . unsyntax)
        (g$12599$5uPkq macro . unquote-splicing)
        (g$12598$5uPkq macro . unquote)
        (g$12597$5uPkq macro . _)
        (g$12596$5uPkq macro . else)
        (g$12595$5uPkq macro . =>)
        (g$12594$5uPkq macro . ...)
        (g$12593$5uPkq macro . assert)
        (g$12592$5uPkq macro . endianness)
        (g$12591$5uPkq macro . delay)
        (g$12590$5uPkq macro . time)
        (g$12589$5uPkq macro . or)
        (g$12588$5uPkq macro . and)
        (g$12587$5uPkq macro . do)
        (g$12586$5uPkq macro . cond)
        (g$12585$5uPkq macro . let*)
        (g$12584$5uPkq macro . let)
        (g$12583$5uPkq macro . identifier-syntax)
        (g$12582$5uPkq macro . with-syntax)
        (g$12581$5uPkq macro . quasisyntax)
        (g$12580$5uPkq macro . quasiquote)
        (g$12579$5uPkq macro . syntax-rules)
        (g$12578$5uPkq macro . include-into)
        (g$12577$5uPkq macro . include)
        (g$12576$5uPkq macro . define-struct)
        (g$12575$5uPkq macro . let-values)
        (g$12574$5uPkq macro . let*-values)
        (g$12573$5uPkq core-macro . record-constructor-descriptor)
        (g$12572$5uPkq core-macro . record-type-descriptor)
        (g$12571$5uPkq core-macro . fluid-let-syntax)
        (g$12570$5uPkq macro . case)
        (g$12569$5uPkq macro . parameterize)
        (g$12568$5uPkq macro . unless)
        (g$12567$5uPkq macro . when)
        (g$12566$5uPkq core-macro . if)
        (g$12565$5uPkq core-macro . letrec*)
        (g$12564$5uPkq core-macro . letrec)
        (g$12563$5uPkq core-macro . type-descriptor)
        (g$12562$5uPkq core-macro . case-lambda)
        (g$12561$5uPkq core-macro . lambda)
        (g$12560$5uPkq core-macro . syntax)
        (g$12559$5uPkq core-macro . syntax-case)
        (g$12558$5uPkq core-macro . quote)
        (g$12557$5uPkq core-macro . foreign-call)
        (g$12556$5uPkq letrec-syntax)
        (g$12555$5uPkq let-syntax)
        (g$12554$5uPkq set!)
        (g$12553$5uPkq export)
        (g$12552$5uPkq import)
        (g$12551$5uPkq library)
        (g$12550$5uPkq begin)
        (g$12549$5uPkq module)
        (g$12548$5uPkq define-syntax)
        (g$12547$5uPkq define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7826$5uPkq
      'g$13191$5uPkq
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13073$5uPkq)
        (eval-core . g$13072$5uPkq)
        (set-symbol-value! . g$13071$5uPkq)
        (symbol-value . g$13070$5uPkq)
        (gensym . g$13068$5uPkq)
        (void . g$13067$5uPkq))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11906$5uPkq
     g$trace-printer$11946$5uPkq
     (g$make-parameter$7290$5uPkq write))
   (g$command-line$11907$5uPkq
     g$command-line$11947$5uPkq
     (g$make-parameter$7290$5uPkq (get-command-line)))
   (g$local-library-path$11908$5uPkq
     g$local-library-path$11948$5uPkq
     (case-lambda
       ((g$filename$11919$5uPkq)
        (cons
          (g$get-directory-name$6208$5uPkq g$filename$11919$5uPkq)
          (g$library-path$7810$5uPkq)))))
   (g$load/args$11909$5uPkq
     g$load/args$11949$5uPkq
     (case-lambda
       ((g$filename$11920$5uPkq . g$args$11921$5uPkq)
        (begin
          (apply
            g$load-r6rs-top-level$11916$5uPkq
            g$filename$11920$5uPkq
            'load
            g$args$11921$5uPkq)
          (void)))))
   (g$load$11910$5uPkq
     g$load$11950$5uPkq
     (case-lambda
       ((g$filename$11922$5uPkq)
        (begin
          (apply
            g$load-r6rs-top-level$11916$5uPkq
            g$filename$11922$5uPkq
            'load
            (cdr (g$command-line$11907$5uPkq)))
          (void)))))
   (g$ironscheme-build$11911$5uPkq
     g$ironscheme-build$11951$5uPkq
     (case-lambda (() (g$load$11910$5uPkq '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11912$5uPkq
     g$eval-top-level$11952$5uPkq
     (case-lambda
       ((g$x$11923$5uPkq)
        (g$eval$11881$5uPkq
          g$x$11923$5uPkq
          (g$interaction-environment$11904$5uPkq)))))
   (g$compile-system-libraries$11913$5uPkq
     g$compile-system-libraries$11953$5uPkq
     (case-lambda
       (()
        (g$eval-top-level$11912$5uPkq
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11914$5uPkq
     g$compile$11954$5uPkq
     (case-lambda
       ((g$filename$11924$5uPkq)
        (g$load-r6rs-top-level$11916$5uPkq g$filename$11924$5uPkq 'compile))))
   (g$compile->closure$11915$5uPkq
     g$compile->closure$11955$5uPkq
     (case-lambda
       ((g$filename$11925$5uPkq)
        (g$load-r6rs-top-level$11916$5uPkq g$filename$11925$5uPkq 'closure))))
   (g$load-r6rs-top-level$11916$5uPkq
     g$load-r6rs-top-level$11956$5uPkq
     (case-lambda
       ((g$filename$11926$5uPkq g$how$11927$5uPkq . g$args$11928$5uPkq)
        ((case-lambda
           ((g$library-path$11931$5uPkq g$library-path$11932$5uPkq)
            ((case-lambda
               ((g$swap$11933$5uPkq)
                (dynamic-wind
                  g$swap$11933$5uPkq
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11934$5uPkq)
                         ((case-lambda
                            ((g$t$11935$5uPkq)
                             (if (g$memv$5752$5uPkq g$t$11935$5uPkq '(closure))
                               (g$pre-compile-r6rs-top-level$11903$5uPkq
                                 g$x*$11934$5uPkq)
                               (if (g$memv$5752$5uPkq g$t$11935$5uPkq '(load))
                                 ((case-lambda
                                    ((g$command-line$11938$5uPkq
                                       g$command-line$11939$5uPkq)
                                     ((case-lambda
                                        ((g$swap$11940$5uPkq)
                                         (dynamic-wind
                                           g$swap$11940$5uPkq
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11902$5uPkq
                                                 g$x*$11934$5uPkq))))
                                           g$swap$11940$5uPkq)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11941$5uPkq)
                                             (begin
                                               (g$command-line$11938$5uPkq
                                                 g$command-line$11939$5uPkq)
                                               (set! g$command-line$11939$5uPkq
                                                 g$t$11941$5uPkq))))
                                          (g$command-line$11938$5uPkq)))))))
                                  g$command-line$11907$5uPkq
                                  (cons
                                    g$filename$11926$5uPkq
                                    (g$map$5759$5uPkq
                                      (case-lambda
                                        ((g$x$11942$5uPkq)
                                         (g$format$7186$5uPkq
                                           '"~a"
                                           g$x$11942$5uPkq)))
                                      g$args$11928$5uPkq)))
                                 (if (g$memv$5752$5uPkq
                                       g$t$11935$5uPkq
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11902$5uPkq
                                       g$x*$11934$5uPkq)
                                     (g$serialize-all$7814$5uPkq
                                       serialize-library
                                       g$compile-core-expr$7537$5uPkq))
                                   (if '#f '#f (void)))))))
                          g$how$11927$5uPkq)))
                      (g$with-input-from-file$7013$5uPkq
                        g$filename$11926$5uPkq
                        (case-lambda
                          (()
                           ((letrec ((g$f$11943$5uPkq
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11944$5uPkq)
                                              (if (eof-object? g$x$11944$5uPkq)
                                                '()
                                                (cons
                                                  g$x$11944$5uPkq
                                                  (g$f$11943$5uPkq)))))
                                           (read-annotated))))))
                              g$f$11943$5uPkq))))))))
                  g$swap$11933$5uPkq)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11945$5uPkq)
                    (begin
                      (g$library-path$11931$5uPkq g$library-path$11932$5uPkq)
                      (set! g$library-path$11932$5uPkq g$t$11945$5uPkq))))
                 (g$library-path$11931$5uPkq)))))))
         g$library-path$7810$5uPkq
         (g$local-library-path$11908$5uPkq g$filename$11926$5uPkq)))))
   (g$fo$11917$5uPkq
     g$fo$11957$5uPkq
     (g$make-enumeration$7148$5uPkq '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7815$5uPkq
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11918$5uPkq)
         (if (g$serious-condition?$6470$5uPkq g$ex$11918$5uPkq)
           (raise g$ex$11918$5uPkq)
           (begin (display g$ex$11918$5uPkq) (newline))))))
    (set-symbol-value! 'load g$load$11910$5uPkq)
    (set-symbol-value! 'compile g$compile$11914$5uPkq)
    (set-symbol-value! 'compile->closure g$compile->closure$11915$5uPkq)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11912$5uPkq)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11872$5uPkq)
    (set-symbol-value! 'expanded2core g$expanded->core$7536$5uPkq)
    (set-symbol-value! 'trace-printer g$trace-printer$11906$5uPkq)
    (g$file-options-constructor$7291$5uPkq
      (g$enum-set-constructor$7151$5uPkq g$fo$11917$5uPkq))
    (g$library-path$7810$5uPkq (get-library-paths))))

