;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$5023$1nosrN
     g$caar$5216$1nosrN
     (case-lambda ((g$x$5078$1nosrN) (car (car g$x$5078$1nosrN)))))
   (g$cadr$5024$1nosrN
     g$cadr$5217$1nosrN
     (case-lambda ((g$x$5079$1nosrN) (car (cdr g$x$5079$1nosrN)))))
   (g$cdar$5025$1nosrN
     g$cdar$5218$1nosrN
     (case-lambda ((g$x$5080$1nosrN) (cdr (car g$x$5080$1nosrN)))))
   (g$cddr$5026$1nosrN
     g$cddr$5219$1nosrN
     (case-lambda ((g$x$5081$1nosrN) (cdr (cdr g$x$5081$1nosrN)))))
   (g$caaar$5027$1nosrN
     g$caaar$5220$1nosrN
     (case-lambda
       ((g$x$5082$1nosrN) (g$caar$5023$1nosrN (car g$x$5082$1nosrN)))))
   (g$caadr$5028$1nosrN
     g$caadr$5221$1nosrN
     (case-lambda
       ((g$x$5083$1nosrN) (g$caar$5023$1nosrN (cdr g$x$5083$1nosrN)))))
   (g$cadar$5029$1nosrN
     g$cadar$5222$1nosrN
     (case-lambda
       ((g$x$5084$1nosrN) (g$cadr$5024$1nosrN (car g$x$5084$1nosrN)))))
   (g$caddr$5030$1nosrN
     g$caddr$5223$1nosrN
     (case-lambda
       ((g$x$5085$1nosrN) (g$cadr$5024$1nosrN (cdr g$x$5085$1nosrN)))))
   (g$cdaar$5031$1nosrN
     g$cdaar$5224$1nosrN
     (case-lambda
       ((g$x$5086$1nosrN) (g$cdar$5025$1nosrN (car g$x$5086$1nosrN)))))
   (g$cdadr$5032$1nosrN
     g$cdadr$5225$1nosrN
     (case-lambda
       ((g$x$5087$1nosrN) (g$cdar$5025$1nosrN (cdr g$x$5087$1nosrN)))))
   (g$cddar$5033$1nosrN
     g$cddar$5226$1nosrN
     (case-lambda
       ((g$x$5088$1nosrN) (g$cddr$5026$1nosrN (car g$x$5088$1nosrN)))))
   (g$cdddr$5034$1nosrN
     g$cdddr$5227$1nosrN
     (case-lambda
       ((g$x$5089$1nosrN) (g$cddr$5026$1nosrN (cdr g$x$5089$1nosrN)))))
   (g$caaaar$5035$1nosrN
     g$caaaar$5228$1nosrN
     (case-lambda
       ((g$x$5090$1nosrN) (g$caaar$5027$1nosrN (car g$x$5090$1nosrN)))))
   (g$caaadr$5036$1nosrN
     g$caaadr$5229$1nosrN
     (case-lambda
       ((g$x$5091$1nosrN) (g$caaar$5027$1nosrN (cdr g$x$5091$1nosrN)))))
   (g$caadar$5037$1nosrN
     g$caadar$5230$1nosrN
     (case-lambda
       ((g$x$5092$1nosrN) (g$caadr$5028$1nosrN (car g$x$5092$1nosrN)))))
   (g$caaddr$5038$1nosrN
     g$caaddr$5231$1nosrN
     (case-lambda
       ((g$x$5093$1nosrN) (g$caadr$5028$1nosrN (cdr g$x$5093$1nosrN)))))
   (g$cadaar$5039$1nosrN
     g$cadaar$5232$1nosrN
     (case-lambda
       ((g$x$5094$1nosrN) (g$cadar$5029$1nosrN (car g$x$5094$1nosrN)))))
   (g$cadadr$5040$1nosrN
     g$cadadr$5233$1nosrN
     (case-lambda
       ((g$x$5095$1nosrN) (g$cadar$5029$1nosrN (cdr g$x$5095$1nosrN)))))
   (g$caddar$5041$1nosrN
     g$caddar$5234$1nosrN
     (case-lambda
       ((g$x$5096$1nosrN) (g$caddr$5030$1nosrN (car g$x$5096$1nosrN)))))
   (g$cadddr$5042$1nosrN
     g$cadddr$5235$1nosrN
     (case-lambda
       ((g$x$5097$1nosrN) (g$caddr$5030$1nosrN (cdr g$x$5097$1nosrN)))))
   (g$cdaaar$5043$1nosrN
     g$cdaaar$5236$1nosrN
     (case-lambda
       ((g$x$5098$1nosrN) (g$cdaar$5031$1nosrN (car g$x$5098$1nosrN)))))
   (g$cdaadr$5044$1nosrN
     g$cdaadr$5237$1nosrN
     (case-lambda
       ((g$x$5099$1nosrN) (g$cdaar$5031$1nosrN (cdr g$x$5099$1nosrN)))))
   (g$cdadar$5045$1nosrN
     g$cdadar$5238$1nosrN
     (case-lambda
       ((g$x$5100$1nosrN) (g$cdadr$5032$1nosrN (car g$x$5100$1nosrN)))))
   (g$cdaddr$5046$1nosrN
     g$cdaddr$5239$1nosrN
     (case-lambda
       ((g$x$5101$1nosrN) (g$cdadr$5032$1nosrN (cdr g$x$5101$1nosrN)))))
   (g$cddaar$5047$1nosrN
     g$cddaar$5240$1nosrN
     (case-lambda
       ((g$x$5102$1nosrN) (g$cddar$5033$1nosrN (car g$x$5102$1nosrN)))))
   (g$cddadr$5048$1nosrN
     g$cddadr$5241$1nosrN
     (case-lambda
       ((g$x$5103$1nosrN) (g$cddar$5033$1nosrN (cdr g$x$5103$1nosrN)))))
   (g$cdddar$5049$1nosrN
     g$cdddar$5242$1nosrN
     (case-lambda
       ((g$x$5104$1nosrN) (g$cdddr$5034$1nosrN (car g$x$5104$1nosrN)))))
   (g$cddddr$5050$1nosrN
     g$cddddr$5243$1nosrN
     (case-lambda
       ((g$x$5105$1nosrN) (g$cdddr$5034$1nosrN (cdr g$x$5105$1nosrN)))))
   (g$string=?$5057$1nosrN
     g$string=?$5244$1nosrN
     (case-lambda
       ((g$a$5106$1nosrN g$b$5107$1nosrN . g$rest$5108$1nosrN)
        (begin
          (if (not (string? g$a$5106$1nosrN))
            (assertion-violation 'string=? '"not a string" g$a$5106$1nosrN)
            (void))
          (if (not (string? g$b$5107$1nosrN))
            (assertion-violation 'string=? '"not a string" g$b$5107$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5109$1nosrN)
               (if (not (string? g$x$5109$1nosrN))
                 (assertion-violation 'string=? '"not a string" g$x$5109$1nosrN)
                 (void))))
            g$rest$5108$1nosrN)
          ((letrec ((g$f$5110$1nosrN
                      (case-lambda
                        ((g$a$5111$1nosrN g$b$5112$1nosrN g$rest$5113$1nosrN)
                         (if (null? g$rest$5113$1nosrN)
                           (= (string-compare g$a$5111$1nosrN g$b$5112$1nosrN)
                              '0)
                           (if (= (string-compare
                                    g$a$5111$1nosrN
                                    g$b$5112$1nosrN)
                                  '0)
                             (begin
                               '#f
                               (g$f$5110$1nosrN
                                 g$b$5112$1nosrN
                                 (car g$rest$5113$1nosrN)
                                 (cdr g$rest$5113$1nosrN)))
                             '#f))))))
             g$f$5110$1nosrN)
           g$a$5106$1nosrN
           g$b$5107$1nosrN
           g$rest$5108$1nosrN)))))
   (g$string<?$5058$1nosrN
     g$string<?$5245$1nosrN
     (case-lambda
       ((g$a$5114$1nosrN g$b$5115$1nosrN . g$rest$5116$1nosrN)
        (begin
          (if (not (string? g$a$5114$1nosrN))
            (assertion-violation 'string<? '"not a string" g$a$5114$1nosrN)
            (void))
          (if (not (string? g$b$5115$1nosrN))
            (assertion-violation 'string<? '"not a string" g$b$5115$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5117$1nosrN)
               (if (not (string? g$x$5117$1nosrN))
                 (assertion-violation 'string<? '"not a string" g$x$5117$1nosrN)
                 (void))))
            g$rest$5116$1nosrN)
          ((letrec ((g$f$5118$1nosrN
                      (case-lambda
                        ((g$a$5119$1nosrN g$b$5120$1nosrN g$rest$5121$1nosrN)
                         (if (null? g$rest$5121$1nosrN)
                           (< (string-compare g$a$5119$1nosrN g$b$5120$1nosrN)
                              '0)
                           (if (< (string-compare
                                    g$a$5119$1nosrN
                                    g$b$5120$1nosrN)
                                  '0)
                             (begin
                               '#f
                               (g$f$5118$1nosrN
                                 g$b$5120$1nosrN
                                 (car g$rest$5121$1nosrN)
                                 (cdr g$rest$5121$1nosrN)))
                             '#f))))))
             g$f$5118$1nosrN)
           g$a$5114$1nosrN
           g$b$5115$1nosrN
           g$rest$5116$1nosrN)))))
   (g$string>?$5059$1nosrN
     g$string>?$5246$1nosrN
     (case-lambda
       ((g$a$5122$1nosrN g$b$5123$1nosrN . g$rest$5124$1nosrN)
        (begin
          (if (not (string? g$a$5122$1nosrN))
            (assertion-violation 'string>? '"not a string" g$a$5122$1nosrN)
            (void))
          (if (not (string? g$b$5123$1nosrN))
            (assertion-violation 'string>? '"not a string" g$b$5123$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5125$1nosrN)
               (if (not (string? g$x$5125$1nosrN))
                 (assertion-violation 'string>? '"not a string" g$x$5125$1nosrN)
                 (void))))
            g$rest$5124$1nosrN)
          ((letrec ((g$f$5126$1nosrN
                      (case-lambda
                        ((g$a$5127$1nosrN g$b$5128$1nosrN g$rest$5129$1nosrN)
                         (if (null? g$rest$5129$1nosrN)
                           (> (string-compare g$a$5127$1nosrN g$b$5128$1nosrN)
                              '0)
                           (if (> (string-compare
                                    g$a$5127$1nosrN
                                    g$b$5128$1nosrN)
                                  '0)
                             (begin
                               '#f
                               (g$f$5126$1nosrN
                                 g$b$5128$1nosrN
                                 (car g$rest$5129$1nosrN)
                                 (cdr g$rest$5129$1nosrN)))
                             '#f))))))
             g$f$5126$1nosrN)
           g$a$5122$1nosrN
           g$b$5123$1nosrN
           g$rest$5124$1nosrN)))))
   (g$string<=?$5060$1nosrN
     g$string<=?$5247$1nosrN
     (case-lambda
       ((g$a$5130$1nosrN g$b$5131$1nosrN . g$rest$5132$1nosrN)
        (begin
          (if (not (string? g$a$5130$1nosrN))
            (assertion-violation 'string<=? '"not a string" g$a$5130$1nosrN)
            (void))
          (if (not (string? g$b$5131$1nosrN))
            (assertion-violation 'string<=? '"not a string" g$b$5131$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5133$1nosrN)
               (if (not (string? g$x$5133$1nosrN))
                 (assertion-violation
                   'string<=?
                   '"not a string"
                   g$x$5133$1nosrN)
                 (void))))
            g$rest$5132$1nosrN)
          ((letrec ((g$f$5134$1nosrN
                      (case-lambda
                        ((g$a$5135$1nosrN g$b$5136$1nosrN g$rest$5137$1nosrN)
                         (if (null? g$rest$5137$1nosrN)
                           (<= (string-compare g$a$5135$1nosrN g$b$5136$1nosrN)
                               '0)
                           (if (<= (string-compare
                                     g$a$5135$1nosrN
                                     g$b$5136$1nosrN)
                                   '0)
                             (begin
                               '#f
                               (g$f$5134$1nosrN
                                 g$b$5136$1nosrN
                                 (car g$rest$5137$1nosrN)
                                 (cdr g$rest$5137$1nosrN)))
                             '#f))))))
             g$f$5134$1nosrN)
           g$a$5130$1nosrN
           g$b$5131$1nosrN
           g$rest$5132$1nosrN)))))
   (g$string>=?$5061$1nosrN
     g$string>=?$5248$1nosrN
     (case-lambda
       ((g$a$5138$1nosrN g$b$5139$1nosrN . g$rest$5140$1nosrN)
        (begin
          (if (not (string? g$a$5138$1nosrN))
            (assertion-violation 'string>=? '"not a string" g$a$5138$1nosrN)
            (void))
          (if (not (string? g$b$5139$1nosrN))
            (assertion-violation 'string>=? '"not a string" g$b$5139$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5141$1nosrN)
               (if (not (string? g$x$5141$1nosrN))
                 (assertion-violation
                   'string>=?
                   '"not a string"
                   g$x$5141$1nosrN)
                 (void))))
            g$rest$5140$1nosrN)
          ((letrec ((g$f$5142$1nosrN
                      (case-lambda
                        ((g$a$5143$1nosrN g$b$5144$1nosrN g$rest$5145$1nosrN)
                         (if (null? g$rest$5145$1nosrN)
                           (>= (string-compare g$a$5143$1nosrN g$b$5144$1nosrN)
                               '0)
                           (if (>= (string-compare
                                     g$a$5143$1nosrN
                                     g$b$5144$1nosrN)
                                   '0)
                             (begin
                               '#f
                               (g$f$5142$1nosrN
                                 g$b$5144$1nosrN
                                 (car g$rest$5145$1nosrN)
                                 (cdr g$rest$5145$1nosrN)))
                             '#f))))))
             g$f$5142$1nosrN)
           g$a$5138$1nosrN
           g$b$5139$1nosrN
           g$rest$5140$1nosrN)))))
   (g$symbol=?$5062$1nosrN
     g$symbol=?$5249$1nosrN
     (case-lambda
       ((g$a$5146$1nosrN g$b$5147$1nosrN . g$rest$5148$1nosrN)
        (begin
          (if (not (symbol? g$a$5146$1nosrN))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5146$1nosrN)
            (void))
          (if (not (symbol? g$b$5147$1nosrN))
            (assertion-violation 'symbol=? '"not a symbol" g$b$5147$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5149$1nosrN)
               (if (not (symbol? g$x$5149$1nosrN))
                 (assertion-violation 'symbol=? '"not a symbol" g$x$5149$1nosrN)
                 (void))))
            g$rest$5148$1nosrN)
          ((letrec ((g$f$5150$1nosrN
                      (case-lambda
                        ((g$a$5151$1nosrN g$b$5152$1nosrN g$rest$5153$1nosrN)
                         (if (null? g$rest$5153$1nosrN)
                           (eq? g$a$5151$1nosrN g$b$5152$1nosrN)
                           (if (eq? g$a$5151$1nosrN g$b$5152$1nosrN)
                             (begin
                               '#f
                               (g$f$5150$1nosrN
                                 g$b$5152$1nosrN
                                 (car g$rest$5153$1nosrN)
                                 (cdr g$rest$5153$1nosrN)))
                             '#f))))))
             g$f$5150$1nosrN)
           g$a$5146$1nosrN
           g$b$5147$1nosrN
           g$rest$5148$1nosrN)))))
   (g$boolean=?$5063$1nosrN
     g$boolean=?$5250$1nosrN
     (case-lambda
       ((g$a$5154$1nosrN g$b$5155$1nosrN . g$rest$5156$1nosrN)
        (begin
          (if (not (boolean? g$a$5154$1nosrN))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5154$1nosrN)
            (void))
          (if (not (boolean? g$b$5155$1nosrN))
            (assertion-violation 'boolean=? '"not a boolean" g$b$5155$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5157$1nosrN)
               (if (not (boolean? g$x$5157$1nosrN))
                 (assertion-violation
                   'boolean=?
                   '"not a boolean"
                   g$x$5157$1nosrN)
                 (void))))
            g$rest$5156$1nosrN)
          ((letrec ((g$f$5158$1nosrN
                      (case-lambda
                        ((g$a$5159$1nosrN g$b$5160$1nosrN g$rest$5161$1nosrN)
                         (if (null? g$rest$5161$1nosrN)
                           (eq? g$a$5159$1nosrN g$b$5160$1nosrN)
                           (if (eq? g$a$5159$1nosrN g$b$5160$1nosrN)
                             (begin
                               '#f
                               (g$f$5158$1nosrN
                                 g$b$5160$1nosrN
                                 (car g$rest$5161$1nosrN)
                                 (cdr g$rest$5161$1nosrN)))
                             '#f))))))
             g$f$5158$1nosrN)
           g$a$5154$1nosrN
           g$b$5155$1nosrN
           g$rest$5156$1nosrN)))))
   (g$char=?$5070$1nosrN
     g$char=?$5251$1nosrN
     (case-lambda
       ((g$a$5162$1nosrN g$b$5163$1nosrN . g$rest$5164$1nosrN)
        (begin
          (if (not (char? g$a$5162$1nosrN))
            (assertion-violation 'char=? '"not a char" g$a$5162$1nosrN)
            (void))
          (if (not (char? g$b$5163$1nosrN))
            (assertion-violation 'char=? '"not a char" g$b$5163$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5165$1nosrN)
               (if (not (char? g$x$5165$1nosrN))
                 (assertion-violation 'char=? '"not a char" g$x$5165$1nosrN)
                 (void))))
            g$rest$5164$1nosrN)
          ((letrec ((g$f$5166$1nosrN
                      (case-lambda
                        ((g$a$5167$1nosrN g$b$5168$1nosrN g$rest$5169$1nosrN)
                         (if (null? g$rest$5169$1nosrN)
                           (= (char->integer g$a$5167$1nosrN)
                              (char->integer g$b$5168$1nosrN))
                           (if (= (char->integer g$a$5167$1nosrN)
                                  (char->integer g$b$5168$1nosrN))
                             (begin
                               '#f
                               (g$f$5166$1nosrN
                                 g$b$5168$1nosrN
                                 (car g$rest$5169$1nosrN)
                                 (cdr g$rest$5169$1nosrN)))
                             '#f))))))
             g$f$5166$1nosrN)
           g$a$5162$1nosrN
           g$b$5163$1nosrN
           g$rest$5164$1nosrN)))))
   (g$char<?$5071$1nosrN
     g$char<?$5252$1nosrN
     (case-lambda
       ((g$a$5170$1nosrN g$b$5171$1nosrN . g$rest$5172$1nosrN)
        (begin
          (if (not (char? g$a$5170$1nosrN))
            (assertion-violation 'char<? '"not a char" g$a$5170$1nosrN)
            (void))
          (if (not (char? g$b$5171$1nosrN))
            (assertion-violation 'char<? '"not a char" g$b$5171$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5173$1nosrN)
               (if (not (char? g$x$5173$1nosrN))
                 (assertion-violation 'char<? '"not a char" g$x$5173$1nosrN)
                 (void))))
            g$rest$5172$1nosrN)
          ((letrec ((g$f$5174$1nosrN
                      (case-lambda
                        ((g$a$5175$1nosrN g$b$5176$1nosrN g$rest$5177$1nosrN)
                         (if (null? g$rest$5177$1nosrN)
                           (< (char->integer g$a$5175$1nosrN)
                              (char->integer g$b$5176$1nosrN))
                           (if (< (char->integer g$a$5175$1nosrN)
                                  (char->integer g$b$5176$1nosrN))
                             (begin
                               '#f
                               (g$f$5174$1nosrN
                                 g$b$5176$1nosrN
                                 (car g$rest$5177$1nosrN)
                                 (cdr g$rest$5177$1nosrN)))
                             '#f))))))
             g$f$5174$1nosrN)
           g$a$5170$1nosrN
           g$b$5171$1nosrN
           g$rest$5172$1nosrN)))))
   (g$char>?$5072$1nosrN
     g$char>?$5253$1nosrN
     (case-lambda
       ((g$a$5178$1nosrN g$b$5179$1nosrN . g$rest$5180$1nosrN)
        (begin
          (if (not (char? g$a$5178$1nosrN))
            (assertion-violation 'char>? '"not a char" g$a$5178$1nosrN)
            (void))
          (if (not (char? g$b$5179$1nosrN))
            (assertion-violation 'char>? '"not a char" g$b$5179$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5181$1nosrN)
               (if (not (char? g$x$5181$1nosrN))
                 (assertion-violation 'char>? '"not a char" g$x$5181$1nosrN)
                 (void))))
            g$rest$5180$1nosrN)
          ((letrec ((g$f$5182$1nosrN
                      (case-lambda
                        ((g$a$5183$1nosrN g$b$5184$1nosrN g$rest$5185$1nosrN)
                         (if (null? g$rest$5185$1nosrN)
                           (> (char->integer g$a$5183$1nosrN)
                              (char->integer g$b$5184$1nosrN))
                           (if (> (char->integer g$a$5183$1nosrN)
                                  (char->integer g$b$5184$1nosrN))
                             (begin
                               '#f
                               (g$f$5182$1nosrN
                                 g$b$5184$1nosrN
                                 (car g$rest$5185$1nosrN)
                                 (cdr g$rest$5185$1nosrN)))
                             '#f))))))
             g$f$5182$1nosrN)
           g$a$5178$1nosrN
           g$b$5179$1nosrN
           g$rest$5180$1nosrN)))))
   (g$char<=?$5073$1nosrN
     g$char<=?$5254$1nosrN
     (case-lambda
       ((g$a$5186$1nosrN g$b$5187$1nosrN . g$rest$5188$1nosrN)
        (begin
          (if (not (char? g$a$5186$1nosrN))
            (assertion-violation 'char<=? '"not a char" g$a$5186$1nosrN)
            (void))
          (if (not (char? g$b$5187$1nosrN))
            (assertion-violation 'char<=? '"not a char" g$b$5187$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5189$1nosrN)
               (if (not (char? g$x$5189$1nosrN))
                 (assertion-violation 'char<=? '"not a char" g$x$5189$1nosrN)
                 (void))))
            g$rest$5188$1nosrN)
          ((letrec ((g$f$5190$1nosrN
                      (case-lambda
                        ((g$a$5191$1nosrN g$b$5192$1nosrN g$rest$5193$1nosrN)
                         (if (null? g$rest$5193$1nosrN)
                           (<= (char->integer g$a$5191$1nosrN)
                               (char->integer g$b$5192$1nosrN))
                           (if (<= (char->integer g$a$5191$1nosrN)
                                   (char->integer g$b$5192$1nosrN))
                             (begin
                               '#f
                               (g$f$5190$1nosrN
                                 g$b$5192$1nosrN
                                 (car g$rest$5193$1nosrN)
                                 (cdr g$rest$5193$1nosrN)))
                             '#f))))))
             g$f$5190$1nosrN)
           g$a$5186$1nosrN
           g$b$5187$1nosrN
           g$rest$5188$1nosrN)))))
   (g$char>=?$5074$1nosrN
     g$char>=?$5255$1nosrN
     (case-lambda
       ((g$a$5194$1nosrN g$b$5195$1nosrN . g$rest$5196$1nosrN)
        (begin
          (if (not (char? g$a$5194$1nosrN))
            (assertion-violation 'char>=? '"not a char" g$a$5194$1nosrN)
            (void))
          (if (not (char? g$b$5195$1nosrN))
            (assertion-violation 'char>=? '"not a char" g$b$5195$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$5197$1nosrN)
               (if (not (char? g$x$5197$1nosrN))
                 (assertion-violation 'char>=? '"not a char" g$x$5197$1nosrN)
                 (void))))
            g$rest$5196$1nosrN)
          ((letrec ((g$f$5198$1nosrN
                      (case-lambda
                        ((g$a$5199$1nosrN g$b$5200$1nosrN g$rest$5201$1nosrN)
                         (if (null? g$rest$5201$1nosrN)
                           (>= (char->integer g$a$5199$1nosrN)
                               (char->integer g$b$5200$1nosrN))
                           (if (>= (char->integer g$a$5199$1nosrN)
                                   (char->integer g$b$5200$1nosrN))
                             (begin
                               '#f
                               (g$f$5198$1nosrN
                                 g$b$5200$1nosrN
                                 (car g$rest$5201$1nosrN)
                                 (cdr g$rest$5201$1nosrN)))
                             '#f))))))
             g$f$5198$1nosrN)
           g$a$5194$1nosrN
           g$b$5195$1nosrN
           g$rest$5196$1nosrN)))))
   (g$rationalize$5075$1nosrN
     g$rationalize$5256$1nosrN
     (case-lambda
       ((g$x$5202$1nosrN g$e$5203$1nosrN)
        (if (if (infinite? g$x$5202$1nosrN)
              (begin '#f (infinite? g$e$5203$1nosrN))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5204$1nosrN)
              (if (if (exact? g$x$5202$1nosrN)
                    (begin '#f (exact? g$e$5203$1nosrN))
                    '#f)
                g$r$5204$1nosrN
                (inexact g$r$5204$1nosrN))))
           (apply
             /
             (g$find-ratio$5076$1nosrN g$x$5202$1nosrN g$e$5203$1nosrN)))))))
   (g$find-ratio$5076$1nosrN
     g$find-ratio$5257$1nosrN
     (case-lambda
       ((g$x$5205$1nosrN g$e$5206$1nosrN)
        (g$find-ratio-between$5077$1nosrN
          (- g$x$5205$1nosrN g$e$5206$1nosrN)
          (+ g$x$5205$1nosrN g$e$5206$1nosrN)))))
   (g$find-ratio-between$5077$1nosrN
     g$find-ratio-between$5258$1nosrN
     (case-lambda
       ((g$x$5207$1nosrN g$y$5208$1nosrN)
        (letrec* ((g$sr$5209$1nosrN
                    (case-lambda
                      ((g$x$5211$1nosrN g$y$5212$1nosrN)
                       ((case-lambda
                          ((g$fx$5213$1nosrN g$fy$5214$1nosrN)
                           (if (>= g$fx$5213$1nosrN g$x$5211$1nosrN)
                             (list g$fx$5213$1nosrN '1)
                             (if (= g$fx$5213$1nosrN g$fy$5214$1nosrN)
                               ((case-lambda
                                  ((g$rat$5215$1nosrN)
                                   (list
                                     (+ (g$cadr$5024$1nosrN g$rat$5215$1nosrN)
                                        (* g$fx$5213$1nosrN
                                           (car g$rat$5215$1nosrN)))
                                     (car g$rat$5215$1nosrN))))
                                (g$sr$5209$1nosrN
                                  (/ (- g$y$5212$1nosrN g$fy$5214$1nosrN))
                                  (/ (- g$x$5211$1nosrN g$fx$5213$1nosrN))))
                               (list (+ '1 g$fx$5213$1nosrN) '1)))))
                        (exact (floor g$x$5211$1nosrN))
                        (exact (floor g$y$5212$1nosrN)))))))
          (if (< g$y$5208$1nosrN g$x$5207$1nosrN)
            (g$find-ratio-between$5077$1nosrN g$y$5208$1nosrN g$x$5207$1nosrN)
            (if (>= g$x$5207$1nosrN g$y$5208$1nosrN)
              (list g$x$5207$1nosrN '1)
              (if (positive? g$x$5207$1nosrN)
                (g$sr$5209$1nosrN g$x$5207$1nosrN g$y$5208$1nosrN)
                (if (negative? g$y$5208$1nosrN)
                  ((case-lambda
                     ((g$rat$5210$1nosrN)
                      (list
                        (- (car g$rat$5210$1nosrN))
                        (g$cadr$5024$1nosrN g$rat$5210$1nosrN))))
                   (g$sr$5209$1nosrN (- g$y$5208$1nosrN) (- g$x$5207$1nosrN)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5454$1nosrN g$using$5489$1nosrN (clr-using-internal 'system))
   (g$using$5456$1nosrN
     g$using$5490$1nosrN
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5457$1nosrN
     g$make-eq-hashtable$5491$1nosrN
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5468$1nosrN)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5468$1nosrN)))))
   (g$make-eqv-hashtable$5458$1nosrN
     g$make-eqv-hashtable$5492$1nosrN
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5469$1nosrN) (make-hashtable eqv-hash eqv? g$k$5469$1nosrN))))
   (g$hashtable-size$5459$1nosrN
     g$hashtable-size$5493$1nosrN
     (case-lambda
       ((g$ht$5470$1nosrN)
        (clr-call-internal 'hashtable 'get_count g$ht$5470$1nosrN))))
   (g$hashtable-ref$5460$1nosrN
     g$hashtable-ref$5494$1nosrN
     (case-lambda
       ((g$ht$5471$1nosrN g$key$5472$1nosrN g$default$5473$1nosrN)
        (letrec* ((g$r$5474$1nosrN
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5471$1nosrN
                      g$key$5472$1nosrN)))
          (if (not (null? g$r$5474$1nosrN))
            g$r$5474$1nosrN
            g$default$5473$1nosrN)))))
   (g$hashtable-set!$5461$1nosrN
     g$hashtable-set!$5495$1nosrN
     (case-lambda
       ((g$ht$5475$1nosrN g$key$5476$1nosrN g$obj$5477$1nosrN)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5475$1nosrN
          g$key$5476$1nosrN
          g$obj$5477$1nosrN))))
   (g$hashtable-delete!$5462$1nosrN
     g$hashtable-delete!$5496$1nosrN
     (case-lambda
       ((g$ht$5478$1nosrN g$key$5479$1nosrN)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5478$1nosrN
          g$key$5479$1nosrN))))
   (g$hashtable-contains?$5463$1nosrN
     g$hashtable-contains?$5497$1nosrN
     (case-lambda
       ((g$ht$5480$1nosrN g$key$5481$1nosrN)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5480$1nosrN
          g$key$5481$1nosrN))))
   (g$hashtable-update!$5464$1nosrN
     g$hashtable-update!$5498$1nosrN
     (case-lambda
       ((g$ht$5482$1nosrN
          g$key$5483$1nosrN
          g$proc$5484$1nosrN
          g$default$5485$1nosrN)
        (g$hashtable-set!$5461$1nosrN
          g$ht$5482$1nosrN
          g$key$5483$1nosrN
          (g$proc$5484$1nosrN
            (g$hashtable-ref$5460$1nosrN
              g$ht$5482$1nosrN
              g$key$5483$1nosrN
              g$default$5485$1nosrN))))))
   (g$hashtable-clear!$5465$1nosrN
     g$hashtable-clear!$5499$1nosrN
     (case-lambda
       ((g$ht$5486$1nosrN)
        (clr-call-internal 'hashtable 'clear g$ht$5486$1nosrN))
       ((g$ht$5487$1nosrN g$k$5488$1nosrN)
        (clr-call-internal 'hashtable 'clear g$ht$5487$1nosrN))))
   (g$clear-usings$5467$1nosrN
     g$clear-usings$5500$1nosrN
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5502$1nosrN
     g$using$5568$1nosrN
     (clr-using-internal 'system.io))
   (g$file-exists?$5503$1nosrN
     g$file-exists?$5569$1nosrN
     (case-lambda
       ((g$fn$5531$1nosrN)
        (clr-call-internal 'file 'exists '() g$fn$5531$1nosrN))))
   (g$delete-file$5504$1nosrN
     g$delete-file$5570$1nosrN
     (case-lambda
       ((g$fn$5532$1nosrN)
        (clr-call-internal 'file 'delete '() g$fn$5532$1nosrN))))
   (g$file-copy$5505$1nosrN
     g$file-copy$5571$1nosrN
     (case-lambda
       ((g$from$5533$1nosrN g$to$5534$1nosrN)
        (g$file-copy$5505$1nosrN g$from$5533$1nosrN g$to$5534$1nosrN '#f))
       ((g$from$5535$1nosrN g$to$5536$1nosrN g$overwrite?$5537$1nosrN)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5535$1nosrN
          g$to$5536$1nosrN
          g$overwrite?$5537$1nosrN))))
   (g$file-move$5506$1nosrN
     g$file-move$5572$1nosrN
     (case-lambda
       ((g$from$5538$1nosrN g$to$5539$1nosrN)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5538$1nosrN
          g$to$5539$1nosrN))))
   (g$file-create-time$5507$1nosrN
     g$file-create-time$5573$1nosrN
     (case-lambda
       ((g$fn$5540$1nosrN)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5540$1nosrN))))
   (g$file-access-time$5508$1nosrN
     g$file-access-time$5574$1nosrN
     (case-lambda
       ((g$fn$5541$1nosrN)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5541$1nosrN))))
   (g$file-modified-time$5509$1nosrN
     g$file-modified-time$5575$1nosrN
     (case-lambda
       ((g$fn$5542$1nosrN)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5542$1nosrN))))
   (g$directory-exists?$5510$1nosrN
     g$directory-exists?$5576$1nosrN
     (case-lambda
       ((g$fn$5543$1nosrN)
        (clr-call-internal 'directory 'exists '() g$fn$5543$1nosrN))))
   (g$delete-directory$5511$1nosrN
     g$delete-directory$5577$1nosrN
     (case-lambda
       ((g$dir$5544$1nosrN)
        (g$delete-directory$5511$1nosrN g$dir$5544$1nosrN '#f))
       ((g$dir$5545$1nosrN g$recursive?$5546$1nosrN)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5545$1nosrN
          g$recursive?$5546$1nosrN))))
   (g$directory-move$5512$1nosrN
     g$directory-move$5578$1nosrN
     (case-lambda
       ((g$from$5547$1nosrN g$to$5548$1nosrN)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5547$1nosrN
          g$to$5548$1nosrN))))
   (g$create-directory$5513$1nosrN
     g$create-directory$5579$1nosrN
     (case-lambda
       ((g$name$5549$1nosrN)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5549$1nosrN))))
   (g$get-files$5514$1nosrN
     g$get-files$5580$1nosrN
     (case-lambda
       ((g$dir$5550$1nosrN) (g$get-files$5514$1nosrN g$dir$5550$1nosrN '"*"))
       ((g$dir$5551$1nosrN g$pattern$5552$1nosrN)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5551$1nosrN
          g$pattern$5552$1nosrN))))
   (g$get-directories$5515$1nosrN
     g$get-directories$5581$1nosrN
     (case-lambda
       ((g$dir$5553$1nosrN)
        (g$get-directories$5515$1nosrN g$dir$5553$1nosrN '"*"))
       ((g$dir$5554$1nosrN g$pattern$5555$1nosrN)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5554$1nosrN
          g$pattern$5555$1nosrN))))
   (g$change-extension$5516$1nosrN
     g$change-extension$5582$1nosrN
     (case-lambda
       ((g$path$5556$1nosrN g$extension$5557$1nosrN)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5556$1nosrN
          g$extension$5557$1nosrN))))
   (g$path-combine$5517$1nosrN
     g$path-combine$5583$1nosrN
     (case-lambda
       ((g$path1$5558$1nosrN g$path2$5559$1nosrN)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5558$1nosrN
          g$path2$5559$1nosrN))))
   (g$get-directory-name$5518$1nosrN
     g$get-directory-name$5584$1nosrN
     (case-lambda
       ((g$path$5560$1nosrN)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5560$1nosrN))))
   (g$get-extension$5519$1nosrN
     g$get-extension$5585$1nosrN
     (case-lambda
       ((g$path$5561$1nosrN)
        (clr-call-internal 'path 'getextension '() g$path$5561$1nosrN))))
   (g$get-filename$5520$1nosrN
     g$get-filename$5586$1nosrN
     (case-lambda
       ((g$path$5562$1nosrN)
        (clr-call-internal 'path 'getfilename '() g$path$5562$1nosrN))))
   (g$get-filename-without-extension$5521$1nosrN
     g$get-filename-without-extension$5587$1nosrN
     (case-lambda
       ((g$path$5563$1nosrN)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5563$1nosrN))))
   (g$get-full-path$5522$1nosrN
     g$get-full-path$5588$1nosrN
     (case-lambda
       ((g$path$5564$1nosrN)
        (clr-call-internal 'path 'getfullpath '() g$path$5564$1nosrN))))
   (g$get-path-root$5523$1nosrN
     g$get-path-root$5589$1nosrN
     (case-lambda
       ((g$path$5565$1nosrN)
        (clr-call-internal 'path 'getpathroot '() g$path$5565$1nosrN))))
   (g$get-random-filename$5524$1nosrN
     g$get-random-filename$5590$1nosrN
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5525$1nosrN
     g$get-temp-filename$5591$1nosrN
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5526$1nosrN
     g$get-temp-path$5592$1nosrN
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5527$1nosrN
     g$path-rooted?$5593$1nosrN
     (case-lambda
       ((g$path$5566$1nosrN)
        (clr-call-internal 'path 'ispathrooted '() g$path$5566$1nosrN))))
   (g$path-has-extension?$5528$1nosrN
     g$path-has-extension?$5594$1nosrN
     (case-lambda
       ((g$path$5567$1nosrN)
        (clr-call-internal 'path 'hasextension '() g$path$5567$1nosrN))))
   (g$clear-usings$5530$1nosrN
     g$clear-usings$5595$1nosrN
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5596$1nosrN
     g$find$5687$1nosrN
     (case-lambda
       ((g$proc$5615$1nosrN g$l$5616$1nosrN)
        (if (null? g$l$5616$1nosrN)
          '#f
          ((case-lambda
             ((g$e$5617$1nosrN)
              (if (g$proc$5615$1nosrN g$e$5617$1nosrN)
                g$e$5617$1nosrN
                (g$find$5596$1nosrN g$proc$5615$1nosrN (cdr g$l$5616$1nosrN)))))
           (car g$l$5616$1nosrN))))))
   (g$partition$5597$1nosrN
     g$partition$5688$1nosrN
     (case-lambda
       ((g$proc$5618$1nosrN g$l$5619$1nosrN)
        ((letrec ((g$f$5620$1nosrN
                    (case-lambda
                      ((g$l$5621$1nosrN g$a$5622$1nosrN g$b$5623$1nosrN)
                       (if (null? g$l$5621$1nosrN)
                         (values
                           (reverse! g$a$5622$1nosrN)
                           (reverse! g$b$5623$1nosrN))
                         ((case-lambda
                            ((g$e$5624$1nosrN)
                             (if (g$proc$5618$1nosrN g$e$5624$1nosrN)
                               (g$f$5620$1nosrN
                                 (cdr g$l$5621$1nosrN)
                                 (cons g$e$5624$1nosrN g$a$5622$1nosrN)
                                 g$b$5623$1nosrN)
                               (g$f$5620$1nosrN
                                 (cdr g$l$5621$1nosrN)
                                 g$a$5622$1nosrN
                                 (cons g$e$5624$1nosrN g$b$5623$1nosrN)))))
                          (car g$l$5621$1nosrN)))))))
           g$f$5620$1nosrN)
         g$l$5619$1nosrN
         '()
         '()))))
   (g$remp$5598$1nosrN
     g$remp$5689$1nosrN
     (case-lambda
       ((g$proc$5625$1nosrN g$l$5626$1nosrN)
        ((letrec ((g$f$5627$1nosrN
                    (case-lambda
                      ((g$l$5628$1nosrN g$a$5629$1nosrN)
                       (if (null? g$l$5628$1nosrN)
                         (reverse! g$a$5629$1nosrN)
                         ((case-lambda
                            ((g$e$5630$1nosrN)
                             (if (g$proc$5625$1nosrN g$e$5630$1nosrN)
                               (g$f$5627$1nosrN
                                 (cdr g$l$5628$1nosrN)
                                 g$a$5629$1nosrN)
                               (g$f$5627$1nosrN
                                 (cdr g$l$5628$1nosrN)
                                 (cons g$e$5630$1nosrN g$a$5629$1nosrN)))))
                          (car g$l$5628$1nosrN)))))))
           g$f$5627$1nosrN)
         g$l$5626$1nosrN
         '()))))
   (g$filter$5599$1nosrN
     g$filter$5690$1nosrN
     (case-lambda
       ((g$proc$5631$1nosrN g$l$5632$1nosrN)
        ((letrec ((g$f$5633$1nosrN
                    (case-lambda
                      ((g$l$5634$1nosrN g$a$5635$1nosrN)
                       (if (null? g$l$5634$1nosrN)
                         (reverse! g$a$5635$1nosrN)
                         ((case-lambda
                            ((g$e$5636$1nosrN)
                             (if (g$proc$5631$1nosrN g$e$5636$1nosrN)
                               (g$f$5633$1nosrN
                                 (cdr g$l$5634$1nosrN)
                                 (cons g$e$5636$1nosrN g$a$5635$1nosrN))
                               (g$f$5633$1nosrN
                                 (cdr g$l$5634$1nosrN)
                                 g$a$5635$1nosrN))))
                          (car g$l$5634$1nosrN)))))))
           g$f$5633$1nosrN)
         g$l$5632$1nosrN
         '()))))
   (g$assv$5600$1nosrN
     g$assv$5691$1nosrN
     (case-lambda
       ((g$obj$5637$1nosrN g$lst$5638$1nosrN)
        (if (null? g$lst$5638$1nosrN)
          '#f
          ((case-lambda
             ((g$c$5639$1nosrN)
              (if (eqv? g$obj$5637$1nosrN (car g$c$5639$1nosrN))
                g$c$5639$1nosrN
                (g$assv$5600$1nosrN
                  g$obj$5637$1nosrN
                  (cdr g$lst$5638$1nosrN)))))
           (car g$lst$5638$1nosrN))))))
   (g$assoc$5601$1nosrN
     g$assoc$5692$1nosrN
     (case-lambda
       ((g$obj$5640$1nosrN g$lst$5641$1nosrN)
        (if (null? g$lst$5641$1nosrN)
          '#f
          ((case-lambda
             ((g$c$5642$1nosrN)
              (if (equal? g$obj$5640$1nosrN (car g$c$5642$1nosrN))
                g$c$5642$1nosrN
                (g$assoc$5601$1nosrN
                  g$obj$5640$1nosrN
                  (cdr g$lst$5641$1nosrN)))))
           (car g$lst$5641$1nosrN))))))
   (g$assp$5602$1nosrN
     g$assp$5693$1nosrN
     (case-lambda
       ((g$p?$5643$1nosrN g$lst$5644$1nosrN)
        (if (null? g$lst$5644$1nosrN)
          '#f
          ((case-lambda
             ((g$c$5645$1nosrN)
              (if (g$p?$5643$1nosrN (car g$c$5645$1nosrN))
                g$c$5645$1nosrN
                (g$assp$5602$1nosrN g$p?$5643$1nosrN (cdr g$lst$5644$1nosrN)))))
           (car g$lst$5644$1nosrN))))))
   (g$member$5603$1nosrN
     g$member$5694$1nosrN
     (case-lambda
       ((g$obj$5646$1nosrN g$lst$5647$1nosrN)
        (if (null? g$lst$5647$1nosrN)
          '#f
          (if (equal? g$obj$5646$1nosrN (car g$lst$5647$1nosrN))
            g$lst$5647$1nosrN
            (g$member$5603$1nosrN
              g$obj$5646$1nosrN
              (cdr g$lst$5647$1nosrN)))))))
   (g$memp$5604$1nosrN
     g$memp$5695$1nosrN
     (case-lambda
       ((g$p?$5648$1nosrN g$lst$5649$1nosrN)
        (if (null? g$lst$5649$1nosrN)
          '#f
          (if (g$p?$5648$1nosrN (car g$lst$5649$1nosrN))
            g$lst$5649$1nosrN
            (g$memp$5604$1nosrN g$p?$5648$1nosrN (cdr g$lst$5649$1nosrN)))))))
   (g$all-empty?$5605$1nosrN
     g$all-empty?$5696$1nosrN
     (case-lambda
       ((g$ls$5650$1nosrN)
        ((case-lambda
           ((g$t$5651$1nosrN)
            (if g$t$5651$1nosrN
              g$t$5651$1nosrN
              (begin
                '#f
                (if (null? (car g$ls$5650$1nosrN))
                  (begin '#f (g$all-empty?$5605$1nosrN (cdr g$ls$5650$1nosrN)))
                  '#f)))))
         (null? g$ls$5650$1nosrN)))))
   (g$split$5606$1nosrN
     g$split$5697$1nosrN
     (case-lambda
       ((g$ls$5652$1nosrN)
        (if (null? g$ls$5652$1nosrN)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5606$1nosrN (cdr g$ls$5652$1nosrN))))
            (case-lambda
              ((g$cars$5653$1nosrN g$cdrs$5654$1nosrN)
               ((case-lambda
                  ((g$a$5655$1nosrN)
                   (values
                     (cons (car g$a$5655$1nosrN) g$cars$5653$1nosrN)
                     (cons (cdr g$a$5655$1nosrN) g$cdrs$5654$1nosrN))))
                (car g$ls$5652$1nosrN)))))))))
   (g$for-all$5607$1nosrN
     g$for-all$5698$1nosrN
     (case-lambda
       ((g$f$5656$1nosrN . g$args$5657$1nosrN)
        (if (g$all-empty?$5605$1nosrN g$args$5657$1nosrN)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5606$1nosrN g$args$5657$1nosrN)))
            (case-lambda
              ((g$cars$5658$1nosrN g$cdrs$5659$1nosrN)
               (if (g$all-empty?$5605$1nosrN g$cdrs$5659$1nosrN)
                 (apply g$f$5656$1nosrN g$cars$5658$1nosrN)
                 (if (apply g$f$5656$1nosrN g$cars$5658$1nosrN)
                   (begin
                     '#f
                     (apply
                       g$for-all$5607$1nosrN
                       g$f$5656$1nosrN
                       g$cdrs$5659$1nosrN))
                   '#f)))))))))
   (g$exists$5608$1nosrN
     g$exists$5699$1nosrN
     (case-lambda
       ((g$f$5660$1nosrN . g$args$5661$1nosrN)
        (if (g$all-empty?$5605$1nosrN g$args$5661$1nosrN)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5606$1nosrN g$args$5661$1nosrN)))
            (case-lambda
              ((g$cars$5662$1nosrN g$cdrs$5663$1nosrN)
               ((case-lambda
                  ((g$t$5664$1nosrN)
                   (if g$t$5664$1nosrN
                     g$t$5664$1nosrN
                     (begin
                       '#f
                       (apply
                         g$exists$5608$1nosrN
                         g$f$5660$1nosrN
                         g$cdrs$5663$1nosrN)))))
                (apply g$f$5660$1nosrN g$cars$5662$1nosrN)))))))))
   (g$cons*$5609$1nosrN
     g$cons*$5700$1nosrN
     (case-lambda
       ((g$a$5665$1nosrN . g$rest$5666$1nosrN)
        ((letrec ((g$f$5667$1nosrN
                    (case-lambda
                      ((g$a$5668$1nosrN g$rest$5669$1nosrN)
                       (if (null? g$rest$5669$1nosrN)
                         g$a$5668$1nosrN
                         (cons
                           g$a$5668$1nosrN
                           (g$f$5667$1nosrN
                             (car g$rest$5669$1nosrN)
                             (cdr g$rest$5669$1nosrN))))))))
           g$f$5667$1nosrN)
         g$a$5665$1nosrN
         g$rest$5666$1nosrN))))
   (g$fold-left$5610$1nosrN
     g$fold-left$5701$1nosrN
     (case-lambda
       ((g$combine$5670$1nosrN
          g$nil$5671$1nosrN
          g$list1$5672$1nosrN
          .
          g$lists$5673$1nosrN)
        (if (null? g$list1$5672$1nosrN)
          g$nil$5671$1nosrN
          (apply
            g$fold-left$5610$1nosrN
            (g$cons*$5609$1nosrN
              g$combine$5670$1nosrN
              (apply
                g$combine$5670$1nosrN
                (g$cons*$5609$1nosrN
                  g$nil$5671$1nosrN
                  (car g$list1$5672$1nosrN)
                  (map car g$lists$5673$1nosrN)))
              (cdr g$list1$5672$1nosrN)
              (map cdr g$lists$5673$1nosrN)))))))
   (g$fold-right$5611$1nosrN
     g$fold-right$5702$1nosrN
     (case-lambda
       ((g$combine$5674$1nosrN
          g$nil$5675$1nosrN
          g$list1$5676$1nosrN
          .
          g$lists$5677$1nosrN)
        (if (null? g$list1$5676$1nosrN)
          g$nil$5675$1nosrN
          (apply
            g$combine$5674$1nosrN
            (append
              (list (car g$list1$5676$1nosrN))
              (map car g$lists$5677$1nosrN)
              (list
                (apply
                  g$fold-right$5611$1nosrN
                  (g$cons*$5609$1nosrN
                    g$combine$5674$1nosrN
                    g$nil$5675$1nosrN
                    (cdr g$list1$5676$1nosrN)
                    (map cdr g$lists$5677$1nosrN))))))))))
   (g$remove$5612$1nosrN
     g$remove$5703$1nosrN
     (case-lambda
       ((g$obj$5678$1nosrN g$list$5679$1nosrN)
        (g$remp$5598$1nosrN
          (case-lambda
            ((g$x$5680$1nosrN) (equal? g$obj$5678$1nosrN g$x$5680$1nosrN)))
          g$list$5679$1nosrN))))
   (g$remv$5613$1nosrN
     g$remv$5704$1nosrN
     (case-lambda
       ((g$obj$5681$1nosrN g$list$5682$1nosrN)
        (g$remp$5598$1nosrN
          (case-lambda
            ((g$x$5683$1nosrN) (eqv? g$obj$5681$1nosrN g$x$5683$1nosrN)))
          g$list$5682$1nosrN))))
   (g$remq$5614$1nosrN
     g$remq$5705$1nosrN
     (case-lambda
       ((g$obj$5684$1nosrN g$list$5685$1nosrN)
        (g$remp$5598$1nosrN
          (case-lambda
            ((g$x$5686$1nosrN) (eq? g$obj$5684$1nosrN g$x$5686$1nosrN)))
          g$list$5685$1nosrN)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5706$1nosrN
     g$native-endianness$5817$1nosrN
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5707$1nosrN
     g$bytevector-u16-ref$5818$1nosrN
     (case-lambda
       ((g$bytevector$5735$1nosrN g$k$5736$1nosrN g$endianness$5737$1nosrN)
        (bytevector-uint-ref
          g$bytevector$5735$1nosrN
          g$k$5736$1nosrN
          g$endianness$5737$1nosrN
          '2))))
   (g$bytevector-s16-ref$5708$1nosrN
     g$bytevector-s16-ref$5819$1nosrN
     (case-lambda
       ((g$bytevector$5738$1nosrN g$k$5739$1nosrN g$endianness$5740$1nosrN)
        (bytevector-sint-ref
          g$bytevector$5738$1nosrN
          g$k$5739$1nosrN
          g$endianness$5740$1nosrN
          '2))))
   (g$bytevector-u16-native-ref$5709$1nosrN
     g$bytevector-u16-native-ref$5820$1nosrN
     (case-lambda
       ((g$bytevector$5741$1nosrN g$k$5742$1nosrN)
        (bytevector-uint-ref
          g$bytevector$5741$1nosrN
          g$k$5742$1nosrN
          (g$native-endianness$5706$1nosrN)
          '2))))
   (g$bytevector-s16-native-ref$5710$1nosrN
     g$bytevector-s16-native-ref$5821$1nosrN
     (case-lambda
       ((g$bytevector$5743$1nosrN g$k$5744$1nosrN)
        (bytevector-sint-ref
          g$bytevector$5743$1nosrN
          g$k$5744$1nosrN
          (g$native-endianness$5706$1nosrN)
          '2))))
   (g$bytevector-u16-set!$5711$1nosrN
     g$bytevector-u16-set!$5822$1nosrN
     (case-lambda
       ((g$bytevector$5745$1nosrN
          g$k$5746$1nosrN
          g$n$5747$1nosrN
          g$endianness$5748$1nosrN)
        (bytevector-uint-set!
          g$bytevector$5745$1nosrN
          g$k$5746$1nosrN
          g$n$5747$1nosrN
          g$endianness$5748$1nosrN
          '2))))
   (g$bytevector-s16-set!$5712$1nosrN
     g$bytevector-s16-set!$5823$1nosrN
     (case-lambda
       ((g$bytevector$5749$1nosrN
          g$k$5750$1nosrN
          g$n$5751$1nosrN
          g$endianness$5752$1nosrN)
        (bytevector-sint-set!
          g$bytevector$5749$1nosrN
          g$k$5750$1nosrN
          g$n$5751$1nosrN
          g$endianness$5752$1nosrN
          '2))))
   (g$bytevector-u16-native-set!$5713$1nosrN
     g$bytevector-u16-native-set!$5824$1nosrN
     (case-lambda
       ((g$bytevector$5753$1nosrN g$k$5754$1nosrN g$n$5755$1nosrN)
        (bytevector-uint-set!
          g$bytevector$5753$1nosrN
          g$k$5754$1nosrN
          g$n$5755$1nosrN
          (g$native-endianness$5706$1nosrN)
          '2))))
   (g$bytevector-s16-native-set!$5714$1nosrN
     g$bytevector-s16-native-set!$5825$1nosrN
     (case-lambda
       ((g$bytevector$5756$1nosrN g$k$5757$1nosrN g$n$5758$1nosrN)
        (bytevector-sint-set!
          g$bytevector$5756$1nosrN
          g$k$5757$1nosrN
          g$n$5758$1nosrN
          (g$native-endianness$5706$1nosrN)
          '2))))
   (g$bytevector-u32-ref$5715$1nosrN
     g$bytevector-u32-ref$5826$1nosrN
     (case-lambda
       ((g$bytevector$5759$1nosrN g$k$5760$1nosrN g$endianness$5761$1nosrN)
        (bytevector-uint-ref
          g$bytevector$5759$1nosrN
          g$k$5760$1nosrN
          g$endianness$5761$1nosrN
          '4))))
   (g$bytevector-s32-ref$5716$1nosrN
     g$bytevector-s32-ref$5827$1nosrN
     (case-lambda
       ((g$bytevector$5762$1nosrN g$k$5763$1nosrN g$endianness$5764$1nosrN)
        (bytevector-sint-ref
          g$bytevector$5762$1nosrN
          g$k$5763$1nosrN
          g$endianness$5764$1nosrN
          '4))))
   (g$bytevector-u32-native-ref$5717$1nosrN
     g$bytevector-u32-native-ref$5828$1nosrN
     (case-lambda
       ((g$bytevector$5765$1nosrN g$k$5766$1nosrN)
        (bytevector-uint-ref
          g$bytevector$5765$1nosrN
          g$k$5766$1nosrN
          (g$native-endianness$5706$1nosrN)
          '4))))
   (g$bytevector-s32-native-ref$5718$1nosrN
     g$bytevector-s32-native-ref$5829$1nosrN
     (case-lambda
       ((g$bytevector$5767$1nosrN g$k$5768$1nosrN)
        (bytevector-sint-ref
          g$bytevector$5767$1nosrN
          g$k$5768$1nosrN
          (g$native-endianness$5706$1nosrN)
          '4))))
   (g$bytevector-u32-set!$5719$1nosrN
     g$bytevector-u32-set!$5830$1nosrN
     (case-lambda
       ((g$bytevector$5769$1nosrN
          g$k$5770$1nosrN
          g$n$5771$1nosrN
          g$endianness$5772$1nosrN)
        (bytevector-uint-set!
          g$bytevector$5769$1nosrN
          g$k$5770$1nosrN
          g$n$5771$1nosrN
          g$endianness$5772$1nosrN
          '4))))
   (g$bytevector-s32-set!$5720$1nosrN
     g$bytevector-s32-set!$5831$1nosrN
     (case-lambda
       ((g$bytevector$5773$1nosrN
          g$k$5774$1nosrN
          g$n$5775$1nosrN
          g$endianness$5776$1nosrN)
        (bytevector-sint-set!
          g$bytevector$5773$1nosrN
          g$k$5774$1nosrN
          g$n$5775$1nosrN
          g$endianness$5776$1nosrN
          '4))))
   (g$bytevector-u32-native-set!$5721$1nosrN
     g$bytevector-u32-native-set!$5832$1nosrN
     (case-lambda
       ((g$bytevector$5777$1nosrN g$k$5778$1nosrN g$n$5779$1nosrN)
        (bytevector-uint-set!
          g$bytevector$5777$1nosrN
          g$k$5778$1nosrN
          g$n$5779$1nosrN
          (g$native-endianness$5706$1nosrN)
          '4))))
   (g$bytevector-s32-native-set!$5722$1nosrN
     g$bytevector-s32-native-set!$5833$1nosrN
     (case-lambda
       ((g$bytevector$5780$1nosrN g$k$5781$1nosrN g$n$5782$1nosrN)
        (bytevector-sint-set!
          g$bytevector$5780$1nosrN
          g$k$5781$1nosrN
          g$n$5782$1nosrN
          (g$native-endianness$5706$1nosrN)
          '4))))
   (g$bytevector-u64-ref$5723$1nosrN
     g$bytevector-u64-ref$5834$1nosrN
     (case-lambda
       ((g$bytevector$5783$1nosrN g$k$5784$1nosrN g$endianness$5785$1nosrN)
        (bytevector-uint-ref
          g$bytevector$5783$1nosrN
          g$k$5784$1nosrN
          g$endianness$5785$1nosrN
          '8))))
   (g$bytevector-s64-ref$5724$1nosrN
     g$bytevector-s64-ref$5835$1nosrN
     (case-lambda
       ((g$bytevector$5786$1nosrN g$k$5787$1nosrN g$endianness$5788$1nosrN)
        (bytevector-sint-ref
          g$bytevector$5786$1nosrN
          g$k$5787$1nosrN
          g$endianness$5788$1nosrN
          '8))))
   (g$bytevector-u64-native-ref$5725$1nosrN
     g$bytevector-u64-native-ref$5836$1nosrN
     (case-lambda
       ((g$bytevector$5789$1nosrN g$k$5790$1nosrN)
        (bytevector-uint-ref
          g$bytevector$5789$1nosrN
          g$k$5790$1nosrN
          (g$native-endianness$5706$1nosrN)
          '8))))
   (g$bytevector-s64-native-ref$5726$1nosrN
     g$bytevector-s64-native-ref$5837$1nosrN
     (case-lambda
       ((g$bytevector$5791$1nosrN g$k$5792$1nosrN)
        (bytevector-sint-ref
          g$bytevector$5791$1nosrN
          g$k$5792$1nosrN
          (g$native-endianness$5706$1nosrN)
          '8))))
   (g$bytevector-u64-set!$5727$1nosrN
     g$bytevector-u64-set!$5838$1nosrN
     (case-lambda
       ((g$bytevector$5793$1nosrN
          g$k$5794$1nosrN
          g$n$5795$1nosrN
          g$endianness$5796$1nosrN)
        (bytevector-uint-set!
          g$bytevector$5793$1nosrN
          g$k$5794$1nosrN
          g$n$5795$1nosrN
          g$endianness$5796$1nosrN
          '8))))
   (g$bytevector-s64-set!$5728$1nosrN
     g$bytevector-s64-set!$5839$1nosrN
     (case-lambda
       ((g$bytevector$5797$1nosrN
          g$k$5798$1nosrN
          g$n$5799$1nosrN
          g$endianness$5800$1nosrN)
        (bytevector-sint-set!
          g$bytevector$5797$1nosrN
          g$k$5798$1nosrN
          g$n$5799$1nosrN
          g$endianness$5800$1nosrN
          '8))))
   (g$bytevector-u64-native-set!$5729$1nosrN
     g$bytevector-u64-native-set!$5840$1nosrN
     (case-lambda
       ((g$bytevector$5801$1nosrN g$k$5802$1nosrN g$n$5803$1nosrN)
        (bytevector-uint-set!
          g$bytevector$5801$1nosrN
          g$k$5802$1nosrN
          g$n$5803$1nosrN
          (g$native-endianness$5706$1nosrN)
          '8))))
   (g$bytevector-s64-native-set!$5730$1nosrN
     g$bytevector-s64-native-set!$5841$1nosrN
     (case-lambda
       ((g$bytevector$5804$1nosrN g$k$5805$1nosrN g$n$5806$1nosrN)
        (bytevector-sint-set!
          g$bytevector$5804$1nosrN
          g$k$5805$1nosrN
          g$n$5806$1nosrN
          (g$native-endianness$5706$1nosrN)
          '8))))
   (g$bytevector-ieee-single-native-ref$5731$1nosrN
     g$bytevector-ieee-single-native-ref$5842$1nosrN
     (case-lambda
       ((g$bytevector$5807$1nosrN g$k$5808$1nosrN)
        (if (not (zero? (mod g$k$5808$1nosrN '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5808$1nosrN)
          (bytevector-ieee-single-ref
            g$bytevector$5807$1nosrN
            g$k$5808$1nosrN
            (g$native-endianness$5706$1nosrN))))))
   (g$bytevector-ieee-double-native-ref$5732$1nosrN
     g$bytevector-ieee-double-native-ref$5843$1nosrN
     (case-lambda
       ((g$bytevector$5809$1nosrN g$k$5810$1nosrN)
        (if (not (zero? (mod g$k$5810$1nosrN '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5810$1nosrN)
          (bytevector-ieee-double-ref
            g$bytevector$5809$1nosrN
            g$k$5810$1nosrN
            (g$native-endianness$5706$1nosrN))))))
   (g$bytevector-ieee-single-native-set!$5733$1nosrN
     g$bytevector-ieee-single-native-set!$5844$1nosrN
     (case-lambda
       ((g$bytevector$5811$1nosrN g$k$5812$1nosrN g$x$5813$1nosrN)
        (if (not (zero? (mod g$k$5812$1nosrN '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5812$1nosrN)
          (bytevector-ieee-single-set!
            g$bytevector$5811$1nosrN
            g$k$5812$1nosrN
            g$x$5813$1nosrN
            (g$native-endianness$5706$1nosrN))))))
   (g$bytevector-ieee-double-native-set!$5734$1nosrN
     g$bytevector-ieee-double-native-set!$5845$1nosrN
     (case-lambda
       ((g$bytevector$5814$1nosrN g$k$5815$1nosrN g$x$5816$1nosrN)
        (if (not (zero? (mod g$k$5815$1nosrN '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5815$1nosrN)
          (bytevector-ieee-double-set!
            g$bytevector$5814$1nosrN
            g$k$5815$1nosrN
            g$x$5816$1nosrN
            (g$native-endianness$5706$1nosrN)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6866$5846$1nosrN
     g$6866$5941$1nosrN
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6869$1nosrN
       '#f
       '#f
       '#()))
   (g$6868$5847$1nosrN g$6868$5942$1nosrN '#f)
   (g$6867$5848$1nosrN
     g$6867$5943$1nosrN
     (make-record-constructor-descriptor
       g$6866$5846$1nosrN
       '#f
       g$6868$5847$1nosrN))
   (g$&condition?$5849$1nosrN
     g$&condition?$5944$1nosrN
     (record-predicate g$6866$5846$1nosrN))
   (g$make-&condition$5850$1nosrN
     g$make-&condition$5945$1nosrN
     (record-constructor g$6867$5848$1nosrN))
   (g$&condition-rtd$5851$1nosrN
     g$&condition-rtd$5946$1nosrN
     g$6866$5846$1nosrN)
   (g$&condition-rcd$5852$1nosrN
     g$&condition-rcd$5947$1nosrN
     g$6867$5848$1nosrN)
   (g$6882$5853$1nosrN
     g$6882$5948$1nosrN
     (make-record-type-descriptor
       '&message
       g$6866$5846$1nosrN
       'g$6885$1nosrN
       '#f
       '#f
       '#((immutable message))))
   (g$6884$5854$1nosrN g$6884$5949$1nosrN '#f)
   (g$6883$5855$1nosrN
     g$6883$5950$1nosrN
     (make-record-constructor-descriptor
       g$6882$5853$1nosrN
       g$6867$5848$1nosrN
       g$6884$5854$1nosrN))
   (g$6881$5856$1nosrN
     g$6881$5951$1nosrN
     (record-predicate g$6882$5853$1nosrN))
   (g$make-message-condition$5857$1nosrN
     g$make-message-condition$5952$1nosrN
     (record-constructor g$6883$5855$1nosrN))
   (g$6880$5858$1nosrN
     g$6880$5953$1nosrN
     (record-accessor g$6882$5853$1nosrN '0))
   (g$message-condition?$5859$1nosrN
     g$message-condition?$5954$1nosrN
     (condition-predicate g$6882$5853$1nosrN))
   (g$condition-message$5860$1nosrN
     g$condition-message$5955$1nosrN
     (condition-accessor g$6882$5853$1nosrN g$6880$5858$1nosrN))
   (g$6898$5861$1nosrN
     g$6898$5956$1nosrN
     (make-record-type-descriptor
       '&warning
       g$6866$5846$1nosrN
       'g$6901$1nosrN
       '#f
       '#f
       '#()))
   (g$6900$5862$1nosrN g$6900$5957$1nosrN '#f)
   (g$6899$5863$1nosrN
     g$6899$5958$1nosrN
     (make-record-constructor-descriptor
       g$6898$5861$1nosrN
       g$6867$5848$1nosrN
       g$6900$5862$1nosrN))
   (g$6897$5864$1nosrN
     g$6897$5959$1nosrN
     (record-predicate g$6898$5861$1nosrN))
   (g$make-warning$5865$1nosrN
     g$make-warning$5960$1nosrN
     (record-constructor g$6899$5863$1nosrN))
   (g$warning?$5866$1nosrN
     g$warning?$5961$1nosrN
     (condition-predicate g$6898$5861$1nosrN))
   (g$6912$5867$1nosrN
     g$6912$5962$1nosrN
     (make-record-type-descriptor
       '&serious
       g$6866$5846$1nosrN
       'g$6915$1nosrN
       '#f
       '#f
       '#()))
   (g$6914$5868$1nosrN g$6914$5963$1nosrN '#f)
   (g$6913$5869$1nosrN
     g$6913$5964$1nosrN
     (make-record-constructor-descriptor
       g$6912$5867$1nosrN
       g$6867$5848$1nosrN
       g$6914$5868$1nosrN))
   (g$6911$5870$1nosrN
     g$6911$5965$1nosrN
     (record-predicate g$6912$5867$1nosrN))
   (g$make-serious-condition$5871$1nosrN
     g$make-serious-condition$5966$1nosrN
     (record-constructor g$6913$5869$1nosrN))
   (g$serious-condition?$5872$1nosrN
     g$serious-condition?$5967$1nosrN
     (condition-predicate g$6912$5867$1nosrN))
   (g$6926$5873$1nosrN
     g$6926$5968$1nosrN
     (make-record-type-descriptor
       '&error
       g$6912$5867$1nosrN
       'g$6929$1nosrN
       '#f
       '#f
       '#()))
   (g$6928$5874$1nosrN g$6928$5969$1nosrN '#f)
   (g$6927$5875$1nosrN
     g$6927$5970$1nosrN
     (make-record-constructor-descriptor
       g$6926$5873$1nosrN
       g$6913$5869$1nosrN
       g$6928$5874$1nosrN))
   (g$6925$5876$1nosrN
     g$6925$5971$1nosrN
     (record-predicate g$6926$5873$1nosrN))
   (g$make-error$5877$1nosrN
     g$make-error$5972$1nosrN
     (record-constructor g$6927$5875$1nosrN))
   (g$error?$5878$1nosrN
     g$error?$5973$1nosrN
     (condition-predicate g$6926$5873$1nosrN))
   (g$6940$5879$1nosrN
     g$6940$5974$1nosrN
     (make-record-type-descriptor
       '&violation
       g$6912$5867$1nosrN
       'g$6943$1nosrN
       '#f
       '#f
       '#()))
   (g$6942$5880$1nosrN g$6942$5975$1nosrN '#f)
   (g$6941$5881$1nosrN
     g$6941$5976$1nosrN
     (make-record-constructor-descriptor
       g$6940$5879$1nosrN
       g$6913$5869$1nosrN
       g$6942$5880$1nosrN))
   (g$6939$5882$1nosrN
     g$6939$5977$1nosrN
     (record-predicate g$6940$5879$1nosrN))
   (g$make-violation$5883$1nosrN
     g$make-violation$5978$1nosrN
     (record-constructor g$6941$5881$1nosrN))
   (g$violation?$5884$1nosrN
     g$violation?$5979$1nosrN
     (condition-predicate g$6940$5879$1nosrN))
   (g$6954$5885$1nosrN
     g$6954$5980$1nosrN
     (make-record-type-descriptor
       '&assertion
       g$6940$5879$1nosrN
       'g$6957$1nosrN
       '#f
       '#f
       '#()))
   (g$6956$5886$1nosrN g$6956$5981$1nosrN '#f)
   (g$6955$5887$1nosrN
     g$6955$5982$1nosrN
     (make-record-constructor-descriptor
       g$6954$5885$1nosrN
       g$6941$5881$1nosrN
       g$6956$5886$1nosrN))
   (g$6953$5888$1nosrN
     g$6953$5983$1nosrN
     (record-predicate g$6954$5885$1nosrN))
   (g$make-assertion-violation$5889$1nosrN
     g$make-assertion-violation$5984$1nosrN
     (record-constructor g$6955$5887$1nosrN))
   (g$assertion-violation?$5890$1nosrN
     g$assertion-violation?$5985$1nosrN
     (condition-predicate g$6954$5885$1nosrN))
   (g$6969$5891$1nosrN
     g$6969$5986$1nosrN
     (make-record-type-descriptor
       '&irritants
       g$6866$5846$1nosrN
       'g$6972$1nosrN
       '#f
       '#f
       '#((immutable irritants))))
   (g$6971$5892$1nosrN g$6971$5987$1nosrN '#f)
   (g$6970$5893$1nosrN
     g$6970$5988$1nosrN
     (make-record-constructor-descriptor
       g$6969$5891$1nosrN
       g$6867$5848$1nosrN
       g$6971$5892$1nosrN))
   (g$6968$5894$1nosrN
     g$6968$5989$1nosrN
     (record-predicate g$6969$5891$1nosrN))
   (g$make-irritants-condition$5895$1nosrN
     g$make-irritants-condition$5990$1nosrN
     (record-constructor g$6970$5893$1nosrN))
   (g$6967$5896$1nosrN
     g$6967$5991$1nosrN
     (record-accessor g$6969$5891$1nosrN '0))
   (g$irritants-condition?$5897$1nosrN
     g$irritants-condition?$5992$1nosrN
     (condition-predicate g$6969$5891$1nosrN))
   (g$condition-irritants$5898$1nosrN
     g$condition-irritants$5993$1nosrN
     (condition-accessor g$6969$5891$1nosrN g$6967$5896$1nosrN))
   (g$6986$5899$1nosrN
     g$6986$5994$1nosrN
     (make-record-type-descriptor
       '&who
       g$6866$5846$1nosrN
       'g$6989$1nosrN
       '#f
       '#f
       '#((immutable who))))
   (g$6988$5900$1nosrN g$6988$5995$1nosrN '#f)
   (g$6987$5901$1nosrN
     g$6987$5996$1nosrN
     (make-record-constructor-descriptor
       g$6986$5899$1nosrN
       g$6867$5848$1nosrN
       g$6988$5900$1nosrN))
   (g$6985$5902$1nosrN
     g$6985$5997$1nosrN
     (record-predicate g$6986$5899$1nosrN))
   (g$make-who-condition$5903$1nosrN
     g$make-who-condition$5998$1nosrN
     (record-constructor g$6987$5901$1nosrN))
   (g$6984$5904$1nosrN
     g$6984$5999$1nosrN
     (record-accessor g$6986$5899$1nosrN '0))
   (g$who-condition?$5905$1nosrN
     g$who-condition?$6000$1nosrN
     (condition-predicate g$6986$5899$1nosrN))
   (g$condition-who$5906$1nosrN
     g$condition-who$6001$1nosrN
     (condition-accessor g$6986$5899$1nosrN g$6984$5904$1nosrN))
   (g$7002$5907$1nosrN
     g$7002$6002$1nosrN
     (make-record-type-descriptor
       '&non-continuable
       g$6940$5879$1nosrN
       'g$7005$1nosrN
       '#f
       '#f
       '#()))
   (g$7004$5908$1nosrN g$7004$6003$1nosrN '#f)
   (g$7003$5909$1nosrN
     g$7003$6004$1nosrN
     (make-record-constructor-descriptor
       g$7002$5907$1nosrN
       g$6941$5881$1nosrN
       g$7004$5908$1nosrN))
   (g$7001$5910$1nosrN
     g$7001$6005$1nosrN
     (record-predicate g$7002$5907$1nosrN))
   (g$make-non-continuable-violation$5911$1nosrN
     g$make-non-continuable-violation$6006$1nosrN
     (record-constructor g$7003$5909$1nosrN))
   (g$non-continuable-violation?$5912$1nosrN
     g$non-continuable-violation?$6007$1nosrN
     (condition-predicate g$7002$5907$1nosrN))
   (g$7016$5913$1nosrN
     g$7016$6008$1nosrN
     (make-record-type-descriptor
       '&implementation-restriction
       g$6940$5879$1nosrN
       'g$7019$1nosrN
       '#f
       '#f
       '#()))
   (g$7018$5914$1nosrN g$7018$6009$1nosrN '#f)
   (g$7017$5915$1nosrN
     g$7017$6010$1nosrN
     (make-record-constructor-descriptor
       g$7016$5913$1nosrN
       g$6941$5881$1nosrN
       g$7018$5914$1nosrN))
   (g$7015$5916$1nosrN
     g$7015$6011$1nosrN
     (record-predicate g$7016$5913$1nosrN))
   (g$make-implementation-restriction-violation$5917$1nosrN
     g$make-implementation-restriction-violation$6012$1nosrN
     (record-constructor g$7017$5915$1nosrN))
   (g$implementation-restriction-violation?$5918$1nosrN
     g$implementation-restriction-violation?$6013$1nosrN
     (condition-predicate g$7016$5913$1nosrN))
   (g$7030$5919$1nosrN
     g$7030$6014$1nosrN
     (make-record-type-descriptor
       '&lexical
       g$6940$5879$1nosrN
       'g$7033$1nosrN
       '#f
       '#f
       '#()))
   (g$7032$5920$1nosrN g$7032$6015$1nosrN '#f)
   (g$7031$5921$1nosrN
     g$7031$6016$1nosrN
     (make-record-constructor-descriptor
       g$7030$5919$1nosrN
       g$6941$5881$1nosrN
       g$7032$5920$1nosrN))
   (g$7029$5922$1nosrN
     g$7029$6017$1nosrN
     (record-predicate g$7030$5919$1nosrN))
   (g$make-lexical-violation$5923$1nosrN
     g$make-lexical-violation$6018$1nosrN
     (record-constructor g$7031$5921$1nosrN))
   (g$lexical-violation?$5924$1nosrN
     g$lexical-violation?$6019$1nosrN
     (condition-predicate g$7030$5919$1nosrN))
   (g$7046$5925$1nosrN
     g$7046$6020$1nosrN
     (make-record-type-descriptor
       '&syntax
       g$6940$5879$1nosrN
       'g$7049$1nosrN
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7048$5926$1nosrN g$7048$6021$1nosrN '#f)
   (g$7047$5927$1nosrN
     g$7047$6022$1nosrN
     (make-record-constructor-descriptor
       g$7046$5925$1nosrN
       g$6941$5881$1nosrN
       g$7048$5926$1nosrN))
   (g$7045$5928$1nosrN
     g$7045$6023$1nosrN
     (record-predicate g$7046$5925$1nosrN))
   (g$make-syntax-violation$5929$1nosrN
     g$make-syntax-violation$6024$1nosrN
     (record-constructor g$7047$5927$1nosrN))
   (g$7043$5930$1nosrN
     g$7043$6025$1nosrN
     (record-accessor g$7046$5925$1nosrN '0))
   (g$7044$5931$1nosrN
     g$7044$6026$1nosrN
     (record-accessor g$7046$5925$1nosrN '1))
   (g$syntax-violation?$5932$1nosrN
     g$syntax-violation?$6027$1nosrN
     (condition-predicate g$7046$5925$1nosrN))
   (g$syntax-violation-form$5933$1nosrN
     g$syntax-violation-form$6028$1nosrN
     (condition-accessor g$7046$5925$1nosrN g$7043$5930$1nosrN))
   (g$syntax-violation-subform$5934$1nosrN
     g$syntax-violation-subform$6029$1nosrN
     (condition-accessor g$7046$5925$1nosrN g$7044$5931$1nosrN))
   (g$7064$5935$1nosrN
     g$7064$6030$1nosrN
     (make-record-type-descriptor
       '&undefined
       g$6940$5879$1nosrN
       'g$7067$1nosrN
       '#f
       '#f
       '#()))
   (g$7066$5936$1nosrN g$7066$6031$1nosrN '#f)
   (g$7065$5937$1nosrN
     g$7065$6032$1nosrN
     (make-record-constructor-descriptor
       g$7064$5935$1nosrN
       g$6941$5881$1nosrN
       g$7066$5936$1nosrN))
   (g$7063$5938$1nosrN
     g$7063$6033$1nosrN
     (record-predicate g$7064$5935$1nosrN))
   (g$make-undefined-violation$5939$1nosrN
     g$make-undefined-violation$6034$1nosrN
     (record-constructor g$7065$5937$1nosrN))
   (g$undefined-violation?$5940$1nosrN
     g$undefined-violation?$6035$1nosrN
     (condition-predicate g$7064$5935$1nosrN)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6036$1nosrN
     g$append!$6042$1nosrN
     (case-lambda
       ((g$a$6037$1nosrN . g$b$6038$1nosrN)
        (if (null? g$a$6037$1nosrN)
          g$b$6038$1nosrN
          (if (null? g$b$6038$1nosrN)
            g$a$6037$1nosrN
            (begin
              ((letrec ((g$f$6039$1nosrN
                          (case-lambda
                            ((g$a$6040$1nosrN)
                             ((case-lambda
                                ((g$n$6041$1nosrN)
                                 (if (null? g$n$6041$1nosrN)
                                   (set-cdr! g$a$6040$1nosrN g$b$6038$1nosrN)
                                   (g$f$6039$1nosrN g$n$6041$1nosrN))))
                              (cdr g$a$6040$1nosrN))))))
                 g$f$6039$1nosrN)
               g$a$6037$1nosrN)
              g$a$6037$1nosrN)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6043$1nosrN
     g$sign$6061$1nosrN
     (case-lambda
       ((g$n$6049$1nosrN)
        (if (> g$n$6049$1nosrN '0) '1 (if (< g$n$6049$1nosrN '0) '-1 '0)))))
   (g$quotient$6044$1nosrN
     g$quotient$6062$1nosrN
     (case-lambda
       ((g$n1$6050$1nosrN g$n2$6051$1nosrN)
        (begin
          (if (not (integer-valued? g$n1$6050$1nosrN))
            (assertion-violation 'quotient '"not an integer" g$n1$6050$1nosrN)
            (void))
          (if (not (integer-valued? g$n2$6051$1nosrN))
            (assertion-violation 'quotient '"not an integer" g$n2$6051$1nosrN)
            (void))
          (* (g$sign$6043$1nosrN g$n1$6050$1nosrN)
             (g$sign$6043$1nosrN g$n2$6051$1nosrN)
             (div (abs g$n1$6050$1nosrN) (abs g$n2$6051$1nosrN)))))))
   (g$remainder$6045$1nosrN
     g$remainder$6063$1nosrN
     (case-lambda
       ((g$n1$6052$1nosrN g$n2$6053$1nosrN)
        (begin
          (if (not (integer-valued? g$n1$6052$1nosrN))
            (assertion-violation 'remainder '"not an integer" g$n1$6052$1nosrN)
            (void))
          (if (not (integer-valued? g$n2$6053$1nosrN))
            (assertion-violation 'remainder '"not an integer" g$n2$6053$1nosrN)
            (void))
          (* (g$sign$6043$1nosrN g$n1$6052$1nosrN)
             (mod (abs g$n1$6052$1nosrN) (abs g$n2$6053$1nosrN)))))))
   (g$modulo$6046$1nosrN
     g$modulo$6064$1nosrN
     (case-lambda
       ((g$n1$6054$1nosrN g$n2$6055$1nosrN)
        (begin
          (if (not (integer-valued? g$n1$6054$1nosrN))
            (assertion-violation 'modulo '"not an integer" g$n1$6054$1nosrN)
            (void))
          (if (not (integer-valued? g$n2$6055$1nosrN))
            (assertion-violation 'modulo '"not an integer" g$n2$6055$1nosrN)
            (void))
          (* (g$sign$6043$1nosrN g$n2$6055$1nosrN)
             (mod (* (g$sign$6043$1nosrN g$n2$6055$1nosrN) g$n1$6054$1nosrN)
                  (abs g$n2$6055$1nosrN)))))))
   (g$make-promise$6047$1nosrN
     g$make-promise$6065$1nosrN
     (case-lambda
       ((g$proc$6056$1nosrN)
        ((case-lambda
           ((g$result-ready?$6057$1nosrN g$result$6058$1nosrN)
            (case-lambda
              (()
               (if g$result-ready?$6057$1nosrN
                 g$result$6058$1nosrN
                 ((case-lambda
                    ((g$x$6059$1nosrN)
                     (if g$result-ready?$6057$1nosrN
                       g$result$6058$1nosrN
                       (begin
                         (set! g$result-ready?$6057$1nosrN '#t)
                         (set! g$result$6058$1nosrN g$x$6059$1nosrN)
                         g$result$6058$1nosrN))))
                  (g$proc$6056$1nosrN)))))))
         '#f
         '#f))))
   (g$force$6048$1nosrN
     g$force$6066$1nosrN
     (case-lambda ((g$object$6060$1nosrN) (g$object$6060$1nosrN)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6067$1nosrN
     g$split$6093$1nosrN
     (case-lambda
       ((g$ls$6070$1nosrN)
        ((letrec ((g$loop$6071$1nosrN
                    (case-lambda
                      ((g$rest$6072$1nosrN
                         g$left$6073$1nosrN
                         g$right$6074$1nosrN)
                       (if (null? g$rest$6072$1nosrN)
                         (cons g$left$6073$1nosrN g$right$6074$1nosrN)
                         (if (null? (cdr g$rest$6072$1nosrN))
                           (cons
                             (cons (car g$rest$6072$1nosrN) g$left$6073$1nosrN)
                             g$right$6074$1nosrN)
                           (g$loop$6071$1nosrN
                             (g$cddr$5219$1nosrN g$rest$6072$1nosrN)
                             (cons (car g$rest$6072$1nosrN) g$left$6073$1nosrN)
                             (cons
                               (g$cadr$5217$1nosrN g$rest$6072$1nosrN)
                               g$right$6074$1nosrN))))))))
           g$loop$6071$1nosrN)
         g$ls$6070$1nosrN
         '()
         '()))))
   (g$reverse-it$6068$1nosrN
     g$reverse-it$6094$1nosrN
     (case-lambda
       ((g$head$6075$1nosrN g$tail$6076$1nosrN)
        (if (null? g$head$6075$1nosrN)
          g$tail$6076$1nosrN
          ((case-lambda
             ((g$hd$6077$1nosrN g$tl$6078$1nosrN)
              (g$reverse-it$6068$1nosrN
                g$tl$6078$1nosrN
                (cons g$hd$6077$1nosrN g$tail$6076$1nosrN))))
           (car g$head$6075$1nosrN)
           (cdr g$head$6075$1nosrN))))))
   (g$list-sort$6069$1nosrN
     g$list-sort$6095$1nosrN
     (case-lambda
       ((g$precedes?$6079$1nosrN g$ls$6080$1nosrN)
        ((case-lambda
           ((g$merge$6081$1nosrN)
            ((case-lambda
               (()
                (if (null? g$ls$6080$1nosrN)
                  '()
                  ((letrec ((g$helper$6082$1nosrN
                              (case-lambda
                                ((g$piece$6083$1nosrN)
                                 (if (null? (cdr g$piece$6083$1nosrN))
                                   g$piece$6083$1nosrN
                                   ((case-lambda
                                      ((g$parts$6084$1nosrN)
                                       (g$merge$6081$1nosrN
                                         (g$helper$6082$1nosrN
                                           (car g$parts$6084$1nosrN))
                                         (g$helper$6082$1nosrN
                                           (cdr g$parts$6084$1nosrN)))))
                                    (g$split$6067$1nosrN
                                      g$piece$6083$1nosrN)))))))
                     g$helper$6082$1nosrN)
                   g$ls$6080$1nosrN)))))))
         (case-lambda
           ((g$list-1$6085$1nosrN g$list-2$6086$1nosrN)
            ((letrec ((g$loop$6087$1nosrN
                        (case-lambda
                          ((g$source-1$6088$1nosrN
                             g$source-2$6089$1nosrN
                             g$so-far$6090$1nosrN)
                           (if (null? g$source-1$6088$1nosrN)
                             (g$reverse-it$6068$1nosrN
                               g$so-far$6090$1nosrN
                               g$source-2$6089$1nosrN)
                             (if (null? g$source-2$6089$1nosrN)
                               (g$reverse-it$6068$1nosrN
                                 g$so-far$6090$1nosrN
                                 g$source-1$6088$1nosrN)
                               ((case-lambda
                                  ((g$car-1$6091$1nosrN g$car-2$6092$1nosrN)
                                   (if (g$precedes?$6079$1nosrN
                                         g$car-2$6092$1nosrN
                                         g$car-1$6091$1nosrN)
                                     (g$loop$6087$1nosrN
                                       g$source-1$6088$1nosrN
                                       (cdr g$source-2$6089$1nosrN)
                                       (cons
                                         g$car-2$6092$1nosrN
                                         g$so-far$6090$1nosrN))
                                     (g$loop$6087$1nosrN
                                       g$source-2$6089$1nosrN
                                       (cdr g$source-1$6088$1nosrN)
                                       (cons
                                         g$car-1$6091$1nosrN
                                         g$so-far$6090$1nosrN)))))
                                (car g$source-1$6088$1nosrN)
                                (car g$source-2$6089$1nosrN))))))))
               g$loop$6087$1nosrN)
             g$list-1$6085$1nosrN
             g$list-2$6086$1nosrN
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$6139$1nosrN
     g$string-ci=?$6235$1nosrN
     (case-lambda
       ((g$a$6155$1nosrN g$b$6156$1nosrN . g$rest$6157$1nosrN)
        (begin
          (if (not (string? g$a$6155$1nosrN))
            (assertion-violation 'string-ci=? '"not a string" g$a$6155$1nosrN)
            (void))
          (if (not (string? g$b$6156$1nosrN))
            (assertion-violation 'string-ci=? '"not a string" g$b$6156$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6158$1nosrN)
               (if (not (string? g$x$6158$1nosrN))
                 (assertion-violation
                   'string-ci=?
                   '"not a string"
                   g$x$6158$1nosrN)
                 (void))))
            g$rest$6157$1nosrN)
          ((letrec ((g$f$6159$1nosrN
                      (case-lambda
                        ((g$a$6160$1nosrN g$b$6161$1nosrN g$rest$6162$1nosrN)
                         (if (null? g$rest$6162$1nosrN)
                           (= (string-ci-compare
                                g$a$6160$1nosrN
                                g$b$6161$1nosrN)
                              '0)
                           (if (= (string-compare
                                    g$a$6160$1nosrN
                                    g$b$6161$1nosrN)
                                  '0)
                             (begin
                               '#f
                               (g$f$6159$1nosrN
                                 g$b$6161$1nosrN
                                 (car g$rest$6162$1nosrN)
                                 (cdr g$rest$6162$1nosrN)))
                             '#f))))))
             g$f$6159$1nosrN)
           g$a$6155$1nosrN
           g$b$6156$1nosrN
           g$rest$6157$1nosrN)))))
   (g$string-ci<?$6140$1nosrN
     g$string-ci<?$6236$1nosrN
     (case-lambda
       ((g$a$6163$1nosrN g$b$6164$1nosrN . g$rest$6165$1nosrN)
        (begin
          (if (not (string? g$a$6163$1nosrN))
            (assertion-violation 'string-ci<? '"not a string" g$a$6163$1nosrN)
            (void))
          (if (not (string? g$b$6164$1nosrN))
            (assertion-violation 'string-ci<? '"not a string" g$b$6164$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6166$1nosrN)
               (if (not (string? g$x$6166$1nosrN))
                 (assertion-violation
                   'string-ci<?
                   '"not a string"
                   g$x$6166$1nosrN)
                 (void))))
            g$rest$6165$1nosrN)
          ((letrec ((g$f$6167$1nosrN
                      (case-lambda
                        ((g$a$6168$1nosrN g$b$6169$1nosrN g$rest$6170$1nosrN)
                         (if (null? g$rest$6170$1nosrN)
                           (< (string-ci-compare
                                g$a$6168$1nosrN
                                g$b$6169$1nosrN)
                              '0)
                           (if (< (string-compare
                                    g$a$6168$1nosrN
                                    g$b$6169$1nosrN)
                                  '0)
                             (begin
                               '#f
                               (g$f$6167$1nosrN
                                 g$b$6169$1nosrN
                                 (car g$rest$6170$1nosrN)
                                 (cdr g$rest$6170$1nosrN)))
                             '#f))))))
             g$f$6167$1nosrN)
           g$a$6163$1nosrN
           g$b$6164$1nosrN
           g$rest$6165$1nosrN)))))
   (g$string-ci>?$6141$1nosrN
     g$string-ci>?$6237$1nosrN
     (case-lambda
       ((g$a$6171$1nosrN g$b$6172$1nosrN . g$rest$6173$1nosrN)
        (begin
          (if (not (string? g$a$6171$1nosrN))
            (assertion-violation 'string-ci>? '"not a string" g$a$6171$1nosrN)
            (void))
          (if (not (string? g$b$6172$1nosrN))
            (assertion-violation 'string-ci>? '"not a string" g$b$6172$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6174$1nosrN)
               (if (not (string? g$x$6174$1nosrN))
                 (assertion-violation
                   'string-ci>?
                   '"not a string"
                   g$x$6174$1nosrN)
                 (void))))
            g$rest$6173$1nosrN)
          ((letrec ((g$f$6175$1nosrN
                      (case-lambda
                        ((g$a$6176$1nosrN g$b$6177$1nosrN g$rest$6178$1nosrN)
                         (if (null? g$rest$6178$1nosrN)
                           (> (string-ci-compare
                                g$a$6176$1nosrN
                                g$b$6177$1nosrN)
                              '0)
                           (if (> (string-compare
                                    g$a$6176$1nosrN
                                    g$b$6177$1nosrN)
                                  '0)
                             (begin
                               '#f
                               (g$f$6175$1nosrN
                                 g$b$6177$1nosrN
                                 (car g$rest$6178$1nosrN)
                                 (cdr g$rest$6178$1nosrN)))
                             '#f))))))
             g$f$6175$1nosrN)
           g$a$6171$1nosrN
           g$b$6172$1nosrN
           g$rest$6173$1nosrN)))))
   (g$string-ci<=?$6142$1nosrN
     g$string-ci<=?$6238$1nosrN
     (case-lambda
       ((g$a$6179$1nosrN g$b$6180$1nosrN . g$rest$6181$1nosrN)
        (begin
          (if (not (string? g$a$6179$1nosrN))
            (assertion-violation 'string-ci<=? '"not a string" g$a$6179$1nosrN)
            (void))
          (if (not (string? g$b$6180$1nosrN))
            (assertion-violation 'string-ci<=? '"not a string" g$b$6180$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6182$1nosrN)
               (if (not (string? g$x$6182$1nosrN))
                 (assertion-violation
                   'string-ci<=?
                   '"not a string"
                   g$x$6182$1nosrN)
                 (void))))
            g$rest$6181$1nosrN)
          ((letrec ((g$f$6183$1nosrN
                      (case-lambda
                        ((g$a$6184$1nosrN g$b$6185$1nosrN g$rest$6186$1nosrN)
                         (if (null? g$rest$6186$1nosrN)
                           (<= (string-ci-compare
                                 g$a$6184$1nosrN
                                 g$b$6185$1nosrN)
                               '0)
                           (if (<= (string-compare
                                     g$a$6184$1nosrN
                                     g$b$6185$1nosrN)
                                   '0)
                             (begin
                               '#f
                               (g$f$6183$1nosrN
                                 g$b$6185$1nosrN
                                 (car g$rest$6186$1nosrN)
                                 (cdr g$rest$6186$1nosrN)))
                             '#f))))))
             g$f$6183$1nosrN)
           g$a$6179$1nosrN
           g$b$6180$1nosrN
           g$rest$6181$1nosrN)))))
   (g$string-ci>=?$6143$1nosrN
     g$string-ci>=?$6239$1nosrN
     (case-lambda
       ((g$a$6187$1nosrN g$b$6188$1nosrN . g$rest$6189$1nosrN)
        (begin
          (if (not (string? g$a$6187$1nosrN))
            (assertion-violation 'string-ci>=? '"not a string" g$a$6187$1nosrN)
            (void))
          (if (not (string? g$b$6188$1nosrN))
            (assertion-violation 'string-ci>=? '"not a string" g$b$6188$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6190$1nosrN)
               (if (not (string? g$x$6190$1nosrN))
                 (assertion-violation
                   'string-ci>=?
                   '"not a string"
                   g$x$6190$1nosrN)
                 (void))))
            g$rest$6189$1nosrN)
          ((letrec ((g$f$6191$1nosrN
                      (case-lambda
                        ((g$a$6192$1nosrN g$b$6193$1nosrN g$rest$6194$1nosrN)
                         (if (null? g$rest$6194$1nosrN)
                           (>= (string-ci-compare
                                 g$a$6192$1nosrN
                                 g$b$6193$1nosrN)
                               '0)
                           (if (>= (string-compare
                                     g$a$6192$1nosrN
                                     g$b$6193$1nosrN)
                                   '0)
                             (begin
                               '#f
                               (g$f$6191$1nosrN
                                 g$b$6193$1nosrN
                                 (car g$rest$6194$1nosrN)
                                 (cdr g$rest$6194$1nosrN)))
                             '#f))))))
             g$f$6191$1nosrN)
           g$a$6187$1nosrN
           g$b$6188$1nosrN
           g$rest$6189$1nosrN)))))
   (g$char-ci=?$6150$1nosrN
     g$char-ci=?$6240$1nosrN
     (case-lambda
       ((g$a$6195$1nosrN g$b$6196$1nosrN . g$rest$6197$1nosrN)
        (begin
          (if (not (char? g$a$6195$1nosrN))
            (assertion-violation 'char-ci=? '"not a char" g$a$6195$1nosrN)
            (void))
          (if (not (char? g$b$6196$1nosrN))
            (assertion-violation 'char-ci=? '"not a char" g$b$6196$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6198$1nosrN)
               (if (not (char? g$x$6198$1nosrN))
                 (assertion-violation 'char-ci=? '"not a char" g$x$6198$1nosrN)
                 (void))))
            g$rest$6197$1nosrN)
          ((letrec ((g$f$6199$1nosrN
                      (case-lambda
                        ((g$a$6200$1nosrN g$b$6201$1nosrN g$rest$6202$1nosrN)
                         (if (null? g$rest$6202$1nosrN)
                           (= (char->integer (char-upcase g$a$6200$1nosrN))
                              (char->integer (char-upcase g$b$6201$1nosrN)))
                           (if (= (char->integer (char-upcase g$a$6200$1nosrN))
                                  (char->integer (char-upcase g$b$6201$1nosrN)))
                             (begin
                               '#f
                               (g$f$6199$1nosrN
                                 g$b$6201$1nosrN
                                 (car g$rest$6202$1nosrN)
                                 (cdr g$rest$6202$1nosrN)))
                             '#f))))))
             g$f$6199$1nosrN)
           g$a$6195$1nosrN
           g$b$6196$1nosrN
           g$rest$6197$1nosrN)))))
   (g$char-ci<?$6151$1nosrN
     g$char-ci<?$6241$1nosrN
     (case-lambda
       ((g$a$6203$1nosrN g$b$6204$1nosrN . g$rest$6205$1nosrN)
        (begin
          (if (not (char? g$a$6203$1nosrN))
            (assertion-violation 'char-ci<? '"not a char" g$a$6203$1nosrN)
            (void))
          (if (not (char? g$b$6204$1nosrN))
            (assertion-violation 'char-ci<? '"not a char" g$b$6204$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6206$1nosrN)
               (if (not (char? g$x$6206$1nosrN))
                 (assertion-violation 'char-ci<? '"not a char" g$x$6206$1nosrN)
                 (void))))
            g$rest$6205$1nosrN)
          ((letrec ((g$f$6207$1nosrN
                      (case-lambda
                        ((g$a$6208$1nosrN g$b$6209$1nosrN g$rest$6210$1nosrN)
                         (if (null? g$rest$6210$1nosrN)
                           (< (char->integer (char-upcase g$a$6208$1nosrN))
                              (char->integer (char-upcase g$b$6209$1nosrN)))
                           (if (< (char->integer (char-upcase g$a$6208$1nosrN))
                                  (char->integer (char-upcase g$b$6209$1nosrN)))
                             (begin
                               '#f
                               (g$f$6207$1nosrN
                                 g$b$6209$1nosrN
                                 (car g$rest$6210$1nosrN)
                                 (cdr g$rest$6210$1nosrN)))
                             '#f))))))
             g$f$6207$1nosrN)
           g$a$6203$1nosrN
           g$b$6204$1nosrN
           g$rest$6205$1nosrN)))))
   (g$char-ci>?$6152$1nosrN
     g$char-ci>?$6242$1nosrN
     (case-lambda
       ((g$a$6211$1nosrN g$b$6212$1nosrN . g$rest$6213$1nosrN)
        (begin
          (if (not (char? g$a$6211$1nosrN))
            (assertion-violation 'char-ci>? '"not a char" g$a$6211$1nosrN)
            (void))
          (if (not (char? g$b$6212$1nosrN))
            (assertion-violation 'char-ci>? '"not a char" g$b$6212$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6214$1nosrN)
               (if (not (char? g$x$6214$1nosrN))
                 (assertion-violation 'char-ci>? '"not a char" g$x$6214$1nosrN)
                 (void))))
            g$rest$6213$1nosrN)
          ((letrec ((g$f$6215$1nosrN
                      (case-lambda
                        ((g$a$6216$1nosrN g$b$6217$1nosrN g$rest$6218$1nosrN)
                         (if (null? g$rest$6218$1nosrN)
                           (> (char->integer (char-upcase g$a$6216$1nosrN))
                              (char->integer (char-upcase g$b$6217$1nosrN)))
                           (if (> (char->integer (char-upcase g$a$6216$1nosrN))
                                  (char->integer (char-upcase g$b$6217$1nosrN)))
                             (begin
                               '#f
                               (g$f$6215$1nosrN
                                 g$b$6217$1nosrN
                                 (car g$rest$6218$1nosrN)
                                 (cdr g$rest$6218$1nosrN)))
                             '#f))))))
             g$f$6215$1nosrN)
           g$a$6211$1nosrN
           g$b$6212$1nosrN
           g$rest$6213$1nosrN)))))
   (g$char-ci<=?$6153$1nosrN
     g$char-ci<=?$6243$1nosrN
     (case-lambda
       ((g$a$6219$1nosrN g$b$6220$1nosrN . g$rest$6221$1nosrN)
        (begin
          (if (not (char? g$a$6219$1nosrN))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6219$1nosrN)
            (void))
          (if (not (char? g$b$6220$1nosrN))
            (assertion-violation 'char-ci<=? '"not a char" g$b$6220$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6222$1nosrN)
               (if (not (char? g$x$6222$1nosrN))
                 (assertion-violation 'char-ci<=? '"not a char" g$x$6222$1nosrN)
                 (void))))
            g$rest$6221$1nosrN)
          ((letrec ((g$f$6223$1nosrN
                      (case-lambda
                        ((g$a$6224$1nosrN g$b$6225$1nosrN g$rest$6226$1nosrN)
                         (if (null? g$rest$6226$1nosrN)
                           (<= (char->integer (char-upcase g$a$6224$1nosrN))
                               (char->integer (char-upcase g$b$6225$1nosrN)))
                           (if (<= (char->integer (char-upcase g$a$6224$1nosrN))
                                   (char->integer
                                     (char-upcase g$b$6225$1nosrN)))
                             (begin
                               '#f
                               (g$f$6223$1nosrN
                                 g$b$6225$1nosrN
                                 (car g$rest$6226$1nosrN)
                                 (cdr g$rest$6226$1nosrN)))
                             '#f))))))
             g$f$6223$1nosrN)
           g$a$6219$1nosrN
           g$b$6220$1nosrN
           g$rest$6221$1nosrN)))))
   (g$char-ci>=?$6154$1nosrN
     g$char-ci>=?$6244$1nosrN
     (case-lambda
       ((g$a$6227$1nosrN g$b$6228$1nosrN . g$rest$6229$1nosrN)
        (begin
          (if (not (char? g$a$6227$1nosrN))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6227$1nosrN)
            (void))
          (if (not (char? g$b$6228$1nosrN))
            (assertion-violation 'char-ci>=? '"not a char" g$b$6228$1nosrN)
            (void))
          (for-each
            (case-lambda
              ((g$x$6230$1nosrN)
               (if (not (char? g$x$6230$1nosrN))
                 (assertion-violation 'char-ci>=? '"not a char" g$x$6230$1nosrN)
                 (void))))
            g$rest$6229$1nosrN)
          ((letrec ((g$f$6231$1nosrN
                      (case-lambda
                        ((g$a$6232$1nosrN g$b$6233$1nosrN g$rest$6234$1nosrN)
                         (if (null? g$rest$6234$1nosrN)
                           (>= (char->integer (char-upcase g$a$6232$1nosrN))
                               (char->integer (char-upcase g$b$6233$1nosrN)))
                           (if (>= (char->integer (char-upcase g$a$6232$1nosrN))
                                   (char->integer
                                     (char-upcase g$b$6233$1nosrN)))
                             (begin
                               '#f
                               (g$f$6231$1nosrN
                                 g$b$6233$1nosrN
                                 (car g$rest$6234$1nosrN)
                                 (cdr g$rest$6234$1nosrN)))
                             '#f))))))
             g$f$6231$1nosrN)
           g$a$6227$1nosrN
           g$b$6228$1nosrN
           g$rest$6229$1nosrN))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6245$1nosrN
     g$bitwise-if$6292$1nosrN
     (case-lambda
       ((g$ei1$6252$1nosrN g$ei2$6253$1nosrN g$ei3$6254$1nosrN)
        (bitwise-ior
          (bitwise-and g$ei1$6252$1nosrN g$ei2$6253$1nosrN)
          (bitwise-and (bitwise-not g$ei1$6252$1nosrN) g$ei3$6254$1nosrN)))))
   (g$bitwise-copy-bit$6246$1nosrN
     g$bitwise-copy-bit$6293$1nosrN
     (case-lambda
       ((g$ei1$6255$1nosrN g$ei2$6256$1nosrN g$ei3$6257$1nosrN)
        ((case-lambda
           ((g$mask$6258$1nosrN)
            ((case-lambda
               (()
                (g$bitwise-if$6245$1nosrN
                  g$mask$6258$1nosrN
                  (g$bitwise-arithmetic-shift-left$6249$1nosrN
                    g$ei3$6257$1nosrN
                    g$ei2$6256$1nosrN)
                  g$ei1$6255$1nosrN))))))
         (g$bitwise-arithmetic-shift-left$6249$1nosrN '1 g$ei2$6256$1nosrN)))))
   (g$bitwise-bit-field$6247$1nosrN
     g$bitwise-bit-field$6294$1nosrN
     (case-lambda
       ((g$ei1$6259$1nosrN g$ei2$6260$1nosrN g$ei3$6261$1nosrN)
        ((case-lambda
           ((g$mask$6262$1nosrN)
            (g$bitwise-arithmetic-shift-right$6250$1nosrN
              (bitwise-and g$ei1$6259$1nosrN g$mask$6262$1nosrN)
              g$ei2$6260$1nosrN)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6249$1nosrN
             '-1
             g$ei3$6261$1nosrN))))))
   (g$bitwise-copy-bit-field$6248$1nosrN
     g$bitwise-copy-bit-field$6295$1nosrN
     (case-lambda
       ((g$ei1$6263$1nosrN
          g$ei2$6264$1nosrN
          g$ei3$6265$1nosrN
          g$ei4$6266$1nosrN)
        ((case-lambda
           ((g$to$6267$1nosrN)
            ((case-lambda
               ((g$start$6268$1nosrN)
                ((case-lambda
                   ((g$end$6269$1nosrN)
                    ((case-lambda
                       ((g$from$6270$1nosrN)
                        ((case-lambda
                           ((g$mask1$6271$1nosrN)
                            ((case-lambda
                               ((g$mask2$6272$1nosrN)
                                ((case-lambda
                                   ((g$mask$6273$1nosrN)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6245$1nosrN
                                          g$mask$6273$1nosrN
                                          (g$bitwise-arithmetic-shift-left$6249$1nosrN
                                            g$from$6270$1nosrN
                                            g$start$6268$1nosrN)
                                          g$to$6267$1nosrN))))))
                                 (bitwise-and
                                   g$mask1$6271$1nosrN
                                   g$mask2$6272$1nosrN))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6249$1nosrN
                                 '-1
                                 g$end$6269$1nosrN)))))
                         (g$bitwise-arithmetic-shift-left$6249$1nosrN
                           '-1
                           g$start$6268$1nosrN))))
                     g$ei4$6266$1nosrN)))
                 g$ei3$6265$1nosrN)))
             g$ei2$6264$1nosrN)))
         g$ei1$6263$1nosrN))))
   (g$bitwise-arithmetic-shift-left$6249$1nosrN
     g$bitwise-arithmetic-shift-left$6296$1nosrN
     (case-lambda
       ((g$ei1$6274$1nosrN g$ei2$6275$1nosrN)
        (bitwise-arithmetic-shift g$ei1$6274$1nosrN g$ei2$6275$1nosrN))))
   (g$bitwise-arithmetic-shift-right$6250$1nosrN
     g$bitwise-arithmetic-shift-right$6297$1nosrN
     (case-lambda
       ((g$ei1$6276$1nosrN g$ei2$6277$1nosrN)
        (bitwise-arithmetic-shift g$ei1$6276$1nosrN (- g$ei2$6277$1nosrN)))))
   (g$bitwise-rotate-bit-field$6251$1nosrN
     g$bitwise-rotate-bit-field$6298$1nosrN
     (case-lambda
       ((g$ei1$6278$1nosrN
          g$ei2$6279$1nosrN
          g$ei3$6280$1nosrN
          g$ei4$6281$1nosrN)
        ((case-lambda
           ((g$n$6282$1nosrN)
            ((case-lambda
               ((g$start$6283$1nosrN)
                ((case-lambda
                   ((g$end$6284$1nosrN)
                    ((case-lambda
                       ((g$count$6285$1nosrN)
                        ((case-lambda
                           ((g$width$6286$1nosrN)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6286$1nosrN)
                                  ((case-lambda
                                     ((g$count$6287$1nosrN)
                                      ((case-lambda
                                         ((g$field0$6288$1nosrN)
                                          ((case-lambda
                                             ((g$field1$6289$1nosrN)
                                              ((case-lambda
                                                 ((g$field2$6290$1nosrN)
                                                  ((case-lambda
                                                     ((g$field$6291$1nosrN)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6248$1nosrN
                                                            g$n$6282$1nosrN
                                                            g$start$6283$1nosrN
                                                            g$end$6284$1nosrN
                                                            g$field$6291$1nosrN))))))
                                                   (bitwise-ior
                                                     g$field1$6289$1nosrN
                                                     g$field2$6290$1nosrN))))
                                               (g$bitwise-arithmetic-shift-right$6250$1nosrN
                                                 g$field0$6288$1nosrN
                                                 (- g$width$6286$1nosrN
                                                    g$count$6287$1nosrN)))))
                                           (g$bitwise-arithmetic-shift-left$6249$1nosrN
                                             g$field0$6288$1nosrN
                                             g$count$6287$1nosrN))))
                                       (g$bitwise-bit-field$6247$1nosrN
                                         g$n$6282$1nosrN
                                         g$start$6283$1nosrN
                                         g$end$6284$1nosrN))))
                                   (mod g$count$6285$1nosrN
                                        g$width$6286$1nosrN))
                                  g$n$6282$1nosrN))))))
                         (- g$end$6284$1nosrN g$start$6283$1nosrN))))
                     g$ei4$6281$1nosrN)))
                 g$ei3$6280$1nosrN)))
             g$ei2$6279$1nosrN)))
         g$ei1$6278$1nosrN)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6299$1nosrN
     g$fxif$6346$1nosrN
     (case-lambda
       ((g$fx1$6306$1nosrN g$fx2$6307$1nosrN g$fx3$6308$1nosrN)
        (fxior
          (fxand g$fx1$6306$1nosrN g$fx2$6307$1nosrN)
          (fxand (fxnot g$fx1$6306$1nosrN) g$fx3$6308$1nosrN)))))
   (g$fxcopy-bit$6300$1nosrN
     g$fxcopy-bit$6347$1nosrN
     (case-lambda
       ((g$fx1$6309$1nosrN g$fx2$6310$1nosrN g$fx3$6311$1nosrN)
        ((case-lambda
           ((g$mask$6312$1nosrN)
            ((case-lambda
               (()
                (g$fxif$6299$1nosrN
                  g$mask$6312$1nosrN
                  (g$fxarithmetic-shift-left$6303$1nosrN
                    g$fx3$6311$1nosrN
                    g$fx2$6310$1nosrN)
                  g$fx1$6309$1nosrN))))))
         (g$fxarithmetic-shift-left$6303$1nosrN '1 g$fx2$6310$1nosrN)))))
   (g$fxbit-field$6301$1nosrN
     g$fxbit-field$6348$1nosrN
     (case-lambda
       ((g$fx1$6313$1nosrN g$fx2$6314$1nosrN g$fx3$6315$1nosrN)
        ((case-lambda
           ((g$mask$6316$1nosrN)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6304$1nosrN
                  (fxand g$fx1$6313$1nosrN g$mask$6316$1nosrN)
                  g$fx2$6314$1nosrN))))))
         (fxnot
           (g$fxarithmetic-shift-left$6303$1nosrN '-1 g$fx3$6315$1nosrN))))))
   (g$fxcopy-bit-field$6302$1nosrN
     g$fxcopy-bit-field$6349$1nosrN
     (case-lambda
       ((g$fx1$6317$1nosrN
          g$fx2$6318$1nosrN
          g$fx3$6319$1nosrN
          g$fx4$6320$1nosrN)
        ((case-lambda
           ((g$to$6321$1nosrN)
            ((case-lambda
               ((g$start$6322$1nosrN)
                ((case-lambda
                   ((g$end$6323$1nosrN)
                    ((case-lambda
                       ((g$from$6324$1nosrN)
                        ((case-lambda
                           ((g$mask1$6325$1nosrN)
                            ((case-lambda
                               ((g$mask2$6326$1nosrN)
                                ((case-lambda
                                   ((g$mask$6327$1nosrN)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6299$1nosrN
                                          g$mask$6327$1nosrN
                                          (g$fxarithmetic-shift-left$6303$1nosrN
                                            g$from$6324$1nosrN
                                            g$start$6322$1nosrN)
                                          g$to$6321$1nosrN))))))
                                 (fxand
                                   g$mask1$6325$1nosrN
                                   g$mask2$6326$1nosrN))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6303$1nosrN
                                 '-1
                                 g$end$6323$1nosrN)))))
                         (g$fxarithmetic-shift-left$6303$1nosrN
                           '-1
                           g$start$6322$1nosrN))))
                     g$fx4$6320$1nosrN)))
                 g$fx3$6319$1nosrN)))
             g$fx2$6318$1nosrN)))
         g$fx1$6317$1nosrN))))
   (g$fxarithmetic-shift-left$6303$1nosrN
     g$fxarithmetic-shift-left$6350$1nosrN
     (case-lambda
       ((g$fx1$6328$1nosrN g$fx2$6329$1nosrN)
        (fxarithmetic-shift g$fx1$6328$1nosrN g$fx2$6329$1nosrN))))
   (g$fxarithmetic-shift-right$6304$1nosrN
     g$fxarithmetic-shift-right$6351$1nosrN
     (case-lambda
       ((g$fx1$6330$1nosrN g$fx2$6331$1nosrN)
        (fxarithmetic-shift g$fx1$6330$1nosrN (- g$fx2$6331$1nosrN)))))
   (g$fxrotate-bit-field$6305$1nosrN
     g$fxrotate-bit-field$6352$1nosrN
     (case-lambda
       ((g$fx1$6332$1nosrN
          g$fx2$6333$1nosrN
          g$fx3$6334$1nosrN
          g$fx4$6335$1nosrN)
        ((case-lambda
           ((g$n$6336$1nosrN)
            ((case-lambda
               ((g$start$6337$1nosrN)
                ((case-lambda
                   ((g$end$6338$1nosrN)
                    ((case-lambda
                       ((g$count$6339$1nosrN)
                        ((case-lambda
                           ((g$width$6340$1nosrN)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6340$1nosrN)
                                  ((case-lambda
                                     ((g$count$6341$1nosrN)
                                      ((case-lambda
                                         ((g$field0$6342$1nosrN)
                                          ((case-lambda
                                             ((g$field1$6343$1nosrN)
                                              ((case-lambda
                                                 ((g$field2$6344$1nosrN)
                                                  ((case-lambda
                                                     ((g$field$6345$1nosrN)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6302$1nosrN
                                                            g$n$6336$1nosrN
                                                            g$start$6337$1nosrN
                                                            g$end$6338$1nosrN
                                                            g$field$6345$1nosrN))))))
                                                   (fxior
                                                     g$field1$6343$1nosrN
                                                     g$field2$6344$1nosrN))))
                                               (g$fxarithmetic-shift-right$6304$1nosrN
                                                 g$field0$6342$1nosrN
                                                 (- g$width$6340$1nosrN
                                                    g$count$6341$1nosrN)))))
                                           (g$fxarithmetic-shift-left$6303$1nosrN
                                             g$field0$6342$1nosrN
                                             g$count$6341$1nosrN))))
                                       (g$fxbit-field$6301$1nosrN
                                         g$n$6336$1nosrN
                                         g$start$6337$1nosrN
                                         g$end$6338$1nosrN))))
                                   (mod g$count$6339$1nosrN
                                        g$width$6340$1nosrN))
                                  g$n$6336$1nosrN))))))
                         (- g$end$6338$1nosrN g$start$6337$1nosrN))))
                     g$fx4$6335$1nosrN)))
                 g$fx3$6334$1nosrN)))
             g$fx2$6333$1nosrN)))
         g$fx1$6332$1nosrN)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7468$6353$1nosrN
     g$7468$6365$1nosrN
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7471$1nosrN
       '#f
       '#f
       '#()))
   (g$7470$6354$1nosrN g$7470$6366$1nosrN '#f)
   (g$7469$6355$1nosrN
     g$7469$6367$1nosrN
     (make-record-constructor-descriptor
       g$7468$6353$1nosrN
       &implementation-restriction-rcd
       g$7470$6354$1nosrN))
   (g$7467$6356$1nosrN
     g$7467$6368$1nosrN
     (record-predicate g$7468$6353$1nosrN))
   (g$make-no-infinities-violation$6357$1nosrN
     g$make-no-infinities-violation$6369$1nosrN
     (record-constructor g$7469$6355$1nosrN))
   (g$no-infinities-violation?$6358$1nosrN
     g$no-infinities-violation?$6370$1nosrN
     (condition-predicate g$7468$6353$1nosrN))
   (g$7482$6359$1nosrN
     g$7482$6371$1nosrN
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7485$1nosrN
       '#f
       '#f
       '#()))
   (g$7484$6360$1nosrN g$7484$6372$1nosrN '#f)
   (g$7483$6361$1nosrN
     g$7483$6373$1nosrN
     (make-record-constructor-descriptor
       g$7482$6359$1nosrN
       &implementation-restriction-rcd
       g$7484$6360$1nosrN))
   (g$7481$6362$1nosrN
     g$7481$6374$1nosrN
     (record-predicate g$7482$6359$1nosrN))
   (g$make-no-nans-violation$6363$1nosrN
     g$make-no-nans-violation$6375$1nosrN
     (record-constructor g$7483$6361$1nosrN))
   (g$no-nans-violation?$6364$1nosrN
     g$no-nans-violation?$6376$1nosrN
     (condition-predicate g$7482$6359$1nosrN)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7497$6377$1nosrN
     g$7497$6457$1nosrN
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7500$1nosrN
       '#f
       '#f
       '#()))
   (g$7499$6378$1nosrN g$7499$6458$1nosrN '#f)
   (g$7498$6379$1nosrN
     g$7498$6459$1nosrN
     (make-record-constructor-descriptor
       g$7497$6377$1nosrN
       &error-rcd
       g$7499$6378$1nosrN))
   (g$7496$6380$1nosrN
     g$7496$6460$1nosrN
     (record-predicate g$7497$6377$1nosrN))
   (g$make-i/o-error$6381$1nosrN
     g$make-i/o-error$6461$1nosrN
     (record-constructor g$7498$6379$1nosrN))
   (g$i/o-error?$6382$1nosrN
     g$i/o-error?$6462$1nosrN
     (condition-predicate g$7497$6377$1nosrN))
   (g$7511$6383$1nosrN
     g$7511$6463$1nosrN
     (make-record-type-descriptor
       '&i/o-read
       g$7497$6377$1nosrN
       'g$7514$1nosrN
       '#f
       '#f
       '#()))
   (g$7513$6384$1nosrN g$7513$6464$1nosrN '#f)
   (g$7512$6385$1nosrN
     g$7512$6465$1nosrN
     (make-record-constructor-descriptor
       g$7511$6383$1nosrN
       g$7498$6379$1nosrN
       g$7513$6384$1nosrN))
   (g$7510$6386$1nosrN
     g$7510$6466$1nosrN
     (record-predicate g$7511$6383$1nosrN))
   (g$make-i/o-read-error$6387$1nosrN
     g$make-i/o-read-error$6467$1nosrN
     (record-constructor g$7512$6385$1nosrN))
   (g$i/o-read-error?$6388$1nosrN
     g$i/o-read-error?$6468$1nosrN
     (condition-predicate g$7511$6383$1nosrN))
   (g$7525$6389$1nosrN
     g$7525$6469$1nosrN
     (make-record-type-descriptor
       '&i/o-write
       g$7497$6377$1nosrN
       'g$7528$1nosrN
       '#f
       '#f
       '#()))
   (g$7527$6390$1nosrN g$7527$6470$1nosrN '#f)
   (g$7526$6391$1nosrN
     g$7526$6471$1nosrN
     (make-record-constructor-descriptor
       g$7525$6389$1nosrN
       g$7498$6379$1nosrN
       g$7527$6390$1nosrN))
   (g$7524$6392$1nosrN
     g$7524$6472$1nosrN
     (record-predicate g$7525$6389$1nosrN))
   (g$make-i/o-write-error$6393$1nosrN
     g$make-i/o-write-error$6473$1nosrN
     (record-constructor g$7526$6391$1nosrN))
   (g$i/o-write-error?$6394$1nosrN
     g$i/o-write-error?$6474$1nosrN
     (condition-predicate g$7525$6389$1nosrN))
   (g$7540$6395$1nosrN
     g$7540$6475$1nosrN
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7497$6377$1nosrN
       'g$7543$1nosrN
       '#f
       '#f
       '#((immutable position))))
   (g$7542$6396$1nosrN g$7542$6476$1nosrN '#f)
   (g$7541$6397$1nosrN
     g$7541$6477$1nosrN
     (make-record-constructor-descriptor
       g$7540$6395$1nosrN
       g$7498$6379$1nosrN
       g$7542$6396$1nosrN))
   (g$7539$6398$1nosrN
     g$7539$6478$1nosrN
     (record-predicate g$7540$6395$1nosrN))
   (g$make-i/o-invalid-position-error$6399$1nosrN
     g$make-i/o-invalid-position-error$6479$1nosrN
     (record-constructor g$7541$6397$1nosrN))
   (g$7538$6400$1nosrN
     g$7538$6480$1nosrN
     (record-accessor g$7540$6395$1nosrN '0))
   (g$i/o-invalid-position-error?$6401$1nosrN
     g$i/o-invalid-position-error?$6481$1nosrN
     (condition-predicate g$7540$6395$1nosrN))
   (g$i/o-error-position$6402$1nosrN
     g$i/o-error-position$6482$1nosrN
     (condition-accessor g$7540$6395$1nosrN g$7538$6400$1nosrN))
   (g$7557$6403$1nosrN
     g$7557$6483$1nosrN
     (make-record-type-descriptor
       '&i/o-filename
       g$7497$6377$1nosrN
       'g$7560$1nosrN
       '#f
       '#f
       '#((immutable filename))))
   (g$7559$6404$1nosrN g$7559$6484$1nosrN '#f)
   (g$7558$6405$1nosrN
     g$7558$6485$1nosrN
     (make-record-constructor-descriptor
       g$7557$6403$1nosrN
       g$7498$6379$1nosrN
       g$7559$6404$1nosrN))
   (g$7556$6406$1nosrN
     g$7556$6486$1nosrN
     (record-predicate g$7557$6403$1nosrN))
   (g$make-i/o-filename-error$6407$1nosrN
     g$make-i/o-filename-error$6487$1nosrN
     (record-constructor g$7558$6405$1nosrN))
   (g$7555$6408$1nosrN
     g$7555$6488$1nosrN
     (record-accessor g$7557$6403$1nosrN '0))
   (g$i/o-filename-error?$6409$1nosrN
     g$i/o-filename-error?$6489$1nosrN
     (condition-predicate g$7557$6403$1nosrN))
   (g$i/o-error-filename$6410$1nosrN
     g$i/o-error-filename$6490$1nosrN
     (condition-accessor g$7557$6403$1nosrN g$7555$6408$1nosrN))
   (g$7573$6411$1nosrN
     g$7573$6491$1nosrN
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7557$6403$1nosrN
       'g$7576$1nosrN
       '#f
       '#f
       '#()))
   (g$7575$6412$1nosrN g$7575$6492$1nosrN '#f)
   (g$7574$6413$1nosrN
     g$7574$6493$1nosrN
     (make-record-constructor-descriptor
       g$7573$6411$1nosrN
       g$7558$6405$1nosrN
       g$7575$6412$1nosrN))
   (g$7572$6414$1nosrN
     g$7572$6494$1nosrN
     (record-predicate g$7573$6411$1nosrN))
   (g$make-i/o-file-protection-error$6415$1nosrN
     g$make-i/o-file-protection-error$6495$1nosrN
     (record-constructor g$7574$6413$1nosrN))
   (g$i/o-file-protection-error?$6416$1nosrN
     g$i/o-file-protection-error?$6496$1nosrN
     (condition-predicate g$7573$6411$1nosrN))
   (g$7587$6417$1nosrN
     g$7587$6497$1nosrN
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7573$6411$1nosrN
       'g$7590$1nosrN
       '#f
       '#f
       '#()))
   (g$7589$6418$1nosrN g$7589$6498$1nosrN '#f)
   (g$7588$6419$1nosrN
     g$7588$6499$1nosrN
     (make-record-constructor-descriptor
       g$7587$6417$1nosrN
       g$7574$6413$1nosrN
       g$7589$6418$1nosrN))
   (g$7586$6420$1nosrN
     g$7586$6500$1nosrN
     (record-predicate g$7587$6417$1nosrN))
   (g$make-i/o-file-is-read-only-error$6421$1nosrN
     g$make-i/o-file-is-read-only-error$6501$1nosrN
     (record-constructor g$7588$6419$1nosrN))
   (g$i/o-file-is-read-only-error?$6422$1nosrN
     g$i/o-file-is-read-only-error?$6502$1nosrN
     (condition-predicate g$7587$6417$1nosrN))
   (g$7601$6423$1nosrN
     g$7601$6503$1nosrN
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7557$6403$1nosrN
       'g$7604$1nosrN
       '#f
       '#f
       '#()))
   (g$7603$6424$1nosrN g$7603$6504$1nosrN '#f)
   (g$7602$6425$1nosrN
     g$7602$6505$1nosrN
     (make-record-constructor-descriptor
       g$7601$6423$1nosrN
       g$7558$6405$1nosrN
       g$7603$6424$1nosrN))
   (g$7600$6426$1nosrN
     g$7600$6506$1nosrN
     (record-predicate g$7601$6423$1nosrN))
   (g$make-i/o-file-already-exists-error$6427$1nosrN
     g$make-i/o-file-already-exists-error$6507$1nosrN
     (record-constructor g$7602$6425$1nosrN))
   (g$i/o-file-already-exists-error?$6428$1nosrN
     g$i/o-file-already-exists-error?$6508$1nosrN
     (condition-predicate g$7601$6423$1nosrN))
   (g$7615$6429$1nosrN
     g$7615$6509$1nosrN
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7557$6403$1nosrN
       'g$7618$1nosrN
       '#f
       '#f
       '#()))
   (g$7617$6430$1nosrN g$7617$6510$1nosrN '#f)
   (g$7616$6431$1nosrN
     g$7616$6511$1nosrN
     (make-record-constructor-descriptor
       g$7615$6429$1nosrN
       g$7558$6405$1nosrN
       g$7617$6430$1nosrN))
   (g$7614$6432$1nosrN
     g$7614$6512$1nosrN
     (record-predicate g$7615$6429$1nosrN))
   (g$make-i/o-file-does-not-exist-error$6433$1nosrN
     g$make-i/o-file-does-not-exist-error$6513$1nosrN
     (record-constructor g$7616$6431$1nosrN))
   (g$i/o-file-does-not-exist-error?$6434$1nosrN
     g$i/o-file-does-not-exist-error?$6514$1nosrN
     (condition-predicate g$7615$6429$1nosrN))
   (g$7630$6435$1nosrN
     g$7630$6515$1nosrN
     (make-record-type-descriptor
       '&i/o-port
       g$7497$6377$1nosrN
       'g$7633$1nosrN
       '#f
       '#f
       '#((immutable port))))
   (g$7632$6436$1nosrN g$7632$6516$1nosrN '#f)
   (g$7631$6437$1nosrN
     g$7631$6517$1nosrN
     (make-record-constructor-descriptor
       g$7630$6435$1nosrN
       g$7498$6379$1nosrN
       g$7632$6436$1nosrN))
   (g$7629$6438$1nosrN
     g$7629$6518$1nosrN
     (record-predicate g$7630$6435$1nosrN))
   (g$make-i/o-port-error$6439$1nosrN
     g$make-i/o-port-error$6519$1nosrN
     (record-constructor g$7631$6437$1nosrN))
   (g$7628$6440$1nosrN
     g$7628$6520$1nosrN
     (record-accessor g$7630$6435$1nosrN '0))
   (g$i/o-port-error?$6441$1nosrN
     g$i/o-port-error?$6521$1nosrN
     (condition-predicate g$7630$6435$1nosrN))
   (g$i/o-error-port$6442$1nosrN
     g$i/o-error-port$6522$1nosrN
     (condition-accessor g$7630$6435$1nosrN g$7628$6440$1nosrN))
   (g$7646$6443$1nosrN
     g$7646$6523$1nosrN
     (make-record-type-descriptor
       '&i/o-decoding
       g$7630$6435$1nosrN
       'g$7649$1nosrN
       '#f
       '#f
       '#()))
   (g$7648$6444$1nosrN g$7648$6524$1nosrN '#f)
   (g$7647$6445$1nosrN
     g$7647$6525$1nosrN
     (make-record-constructor-descriptor
       g$7646$6443$1nosrN
       g$7631$6437$1nosrN
       g$7648$6444$1nosrN))
   (g$7645$6446$1nosrN
     g$7645$6526$1nosrN
     (record-predicate g$7646$6443$1nosrN))
   (g$make-i/o-decoding-error$6447$1nosrN
     g$make-i/o-decoding-error$6527$1nosrN
     (record-constructor g$7647$6445$1nosrN))
   (g$i/o-decoding-error?$6448$1nosrN
     g$i/o-decoding-error?$6528$1nosrN
     (condition-predicate g$7646$6443$1nosrN))
   (g$7661$6449$1nosrN
     g$7661$6529$1nosrN
     (make-record-type-descriptor
       '&i/o-encoding
       g$7630$6435$1nosrN
       'g$7664$1nosrN
       '#f
       '#f
       '#((immutable char))))
   (g$7663$6450$1nosrN g$7663$6530$1nosrN '#f)
   (g$7662$6451$1nosrN
     g$7662$6531$1nosrN
     (make-record-constructor-descriptor
       g$7661$6449$1nosrN
       g$7631$6437$1nosrN
       g$7663$6450$1nosrN))
   (g$7660$6452$1nosrN
     g$7660$6532$1nosrN
     (record-predicate g$7661$6449$1nosrN))
   (g$make-i/o-encoding-error$6453$1nosrN
     g$make-i/o-encoding-error$6533$1nosrN
     (record-constructor g$7662$6451$1nosrN))
   (g$7659$6454$1nosrN
     g$7659$6534$1nosrN
     (record-accessor g$7661$6449$1nosrN '0))
   (g$i/o-encoding-error?$6455$1nosrN
     g$i/o-encoding-error?$6535$1nosrN
     (condition-predicate g$7661$6449$1nosrN))
   (g$i/o-encoding-error-char$6456$1nosrN
     g$i/o-encoding-error-char$6536$1nosrN
     (condition-accessor g$7661$6449$1nosrN g$7659$6454$1nosrN)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6537$1nosrN
     g$get-output-string$6545$1nosrN
     (case-lambda
       ((g$port$6541$1nosrN)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6541$1nosrN))))
   (g$open-output-string$6538$1nosrN
     g$open-output-string$6546$1nosrN
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6539$1nosrN
     g$open-string-output-port$6547$1nosrN
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6542$1nosrN)
            (values
              g$p$6542$1nosrN
              (case-lambda
                (() (g$get-output-string$6537$1nosrN g$p$6542$1nosrN))))))
         (g$open-output-string$6538$1nosrN)))))
   (g$port?$6540$1nosrN
     g$port?$6548$1nosrN
     (case-lambda
       ((g$obj$6543$1nosrN)
        ((case-lambda
           ((g$t$6544$1nosrN)
            (if g$t$6544$1nosrN
              g$t$6544$1nosrN
              (begin '#f (binary-port? g$obj$6543$1nosrN)))))
         (textual-port? g$obj$6543$1nosrN))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6555$1nosrN
     g$with-input-from-file$6581$1nosrN
     (case-lambda
       ((g$filename$6559$1nosrN g$thunk$6560$1nosrN)
        ((case-lambda
           ((g$current-input-port$6563$1nosrN g$t$6564$1nosrN)
            ((case-lambda
               ((g$swap$6565$1nosrN)
                (dynamic-wind
                  g$swap$6565$1nosrN
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6560$1nosrN)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6565$1nosrN)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6566$1nosrN)
                    (begin
                      (g$current-input-port$6563$1nosrN g$t$6564$1nosrN)
                      (set! g$t$6564$1nosrN g$t$6566$1nosrN))))
                 (g$current-input-port$6563$1nosrN)))))))
         current-input-port
         (open-input-file g$filename$6559$1nosrN)))))
   (g$with-output-to-file$6556$1nosrN
     g$with-output-to-file$6582$1nosrN
     (case-lambda
       ((g$filename$6567$1nosrN g$thunk$6568$1nosrN)
        ((case-lambda
           ((g$current-output-port$6571$1nosrN g$t$6572$1nosrN)
            ((case-lambda
               ((g$swap$6573$1nosrN)
                (dynamic-wind
                  g$swap$6573$1nosrN
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6568$1nosrN)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6573$1nosrN)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6574$1nosrN)
                    (begin
                      (g$current-output-port$6571$1nosrN g$t$6572$1nosrN)
                      (set! g$t$6572$1nosrN g$t$6574$1nosrN))))
                 (g$current-output-port$6571$1nosrN)))))))
         current-output-port
         (open-output-file g$filename$6567$1nosrN)))))
   (g$call-with-input-file$6557$1nosrN
     g$call-with-input-file$6583$1nosrN
     (case-lambda
       ((g$filename$6575$1nosrN g$proc$6576$1nosrN)
        ((case-lambda
           ((g$p$6577$1nosrN)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6576$1nosrN g$p$6577$1nosrN)))
              (case-lambda (() (close-input-port g$p$6577$1nosrN))))))
         (open-input-file g$filename$6575$1nosrN)))))
   (g$call-with-output-file$6558$1nosrN
     g$call-with-output-file$6584$1nosrN
     (case-lambda
       ((g$filename$6578$1nosrN g$proc$6579$1nosrN)
        ((case-lambda
           ((g$p$6580$1nosrN)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6579$1nosrN g$p$6580$1nosrN)))
              (case-lambda (() (close-output-port g$p$6580$1nosrN))))))
         (open-output-file g$filename$6578$1nosrN))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7728$6585$1nosrN
     g$7728$6693$1nosrN
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7730$6586$1nosrN g$7730$6694$1nosrN '#f)
   (g$7729$6587$1nosrN
     g$7729$6695$1nosrN
     (make-record-constructor-descriptor
       g$7728$6585$1nosrN
       '#f
       g$7730$6586$1nosrN))
   (g$enum?$6588$1nosrN
     g$enum?$6696$1nosrN
     (record-predicate g$7728$6585$1nosrN))
   (g$make-enum$6589$1nosrN
     g$make-enum$6697$1nosrN
     (record-constructor g$7729$6587$1nosrN))
   (g$enum-value$6590$1nosrN
     g$enum-value$6698$1nosrN
     (record-accessor g$7728$6585$1nosrN '0))
   (g$enum-info$6591$1nosrN
     g$enum-info$6699$1nosrN
     (record-accessor g$7728$6585$1nosrN '1))
   (g$7741$6592$1nosrN
     g$7741$6700$1nosrN
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7743$6593$1nosrN g$7743$6701$1nosrN '#f)
   (g$7742$6594$1nosrN
     g$7742$6702$1nosrN
     (make-record-constructor-descriptor
       g$7741$6592$1nosrN
       '#f
       g$7743$6593$1nosrN))
   (g$enum-universe?$6595$1nosrN
     g$enum-universe?$6703$1nosrN
     (record-predicate g$7741$6592$1nosrN))
   (g$make-enum-universe$6596$1nosrN
     g$make-enum-universe$6704$1nosrN
     (record-constructor g$7742$6594$1nosrN))
   (g$enum-universe-id$6597$1nosrN
     g$enum-universe-id$6705$1nosrN
     (record-accessor g$7741$6592$1nosrN '0))
   (g$enum-universe-symbols$6598$1nosrN
     g$enum-universe-symbols$6706$1nosrN
     (record-accessor g$7741$6592$1nosrN '1))
   (g$enum-universe-mapping$6599$1nosrN
     g$enum-universe-mapping$6707$1nosrN
     (record-accessor g$7741$6592$1nosrN '2))
   (g$enum-universe-value$6600$1nosrN
     g$enum-universe-value$6708$1nosrN
     (record-accessor g$7741$6592$1nosrN '3))
   (g$enum-type=?$6601$1nosrN
     g$enum-type=?$6709$1nosrN
     (case-lambda
       ((g$enumset1$6622$1nosrN g$enumset2$6623$1nosrN)
        (eq? (g$enum-universe-id$6597$1nosrN
               (g$enum-info$6591$1nosrN g$enumset1$6622$1nosrN))
             (g$enum-universe-id$6597$1nosrN
               (g$enum-info$6591$1nosrN g$enumset2$6623$1nosrN))))))
   (g$get-symbols$6602$1nosrN
     g$get-symbols$6710$1nosrN
     (case-lambda
       ((g$enumset$6624$1nosrN)
        (g$enum-universe-symbols$6598$1nosrN
          (g$enum-info$6591$1nosrN g$enumset$6624$1nosrN)))))
   (g$get-value$6603$1nosrN
     g$get-value$6711$1nosrN
     (case-lambda
       ((g$enumset$6625$1nosrN g$s$6626$1nosrN)
        (g$hashtable-ref$5494$1nosrN
          (g$enum-universe-mapping$6599$1nosrN
            (g$enum-info$6591$1nosrN g$enumset$6625$1nosrN))
          g$s$6626$1nosrN
          '#f))))
   (g$assert-enum$6604$1nosrN
     g$assert-enum$6712$1nosrN
     (case-lambda
       ((g$who$6627$1nosrN g$enumset$6628$1nosrN)
        (if (not (g$enum?$6588$1nosrN g$enumset$6628$1nosrN))
          (assertion-violation
            g$who$6627$1nosrN
            '"not an enumeration"
            g$enumset$6628$1nosrN)
          (void)))))
   (g$make-info$6605$1nosrN
     g$make-info$6713$1nosrN
     (case-lambda
       ((g$symbols$6629$1nosrN)
        ((case-lambda
           ((g$ht$6630$1nosrN)
            ((letrec ((g$f$6631$1nosrN
                        (case-lambda
                          ((g$s$6632$1nosrN g$a$6633$1nosrN g$mask$6634$1nosrN)
                           (if (null? g$s$6632$1nosrN)
                             (values
                               (reverse! g$a$6633$1nosrN)
                               g$ht$6630$1nosrN
                               (- g$mask$6634$1nosrN '1))
                             ((case-lambda
                                ((g$n$6635$1nosrN)
                                 (if (symbol? g$n$6635$1nosrN)
                                   (if (g$hashtable-contains?$5497$1nosrN
                                         g$ht$6630$1nosrN
                                         g$n$6635$1nosrN)
                                     (g$f$6631$1nosrN
                                       (cdr g$s$6632$1nosrN)
                                       g$a$6633$1nosrN
                                       g$mask$6634$1nosrN)
                                     (begin
                                       (g$hashtable-set!$5495$1nosrN
                                         g$ht$6630$1nosrN
                                         g$n$6635$1nosrN
                                         g$mask$6634$1nosrN)
                                       (g$f$6631$1nosrN
                                         (cdr g$s$6632$1nosrN)
                                         (cons g$n$6635$1nosrN g$a$6633$1nosrN)
                                         (g$bitwise-arithmetic-shift-left$6296$1nosrN
                                           g$mask$6634$1nosrN
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6635$1nosrN))))
                              (car g$s$6632$1nosrN)))))))
               g$f$6631$1nosrN)
             g$symbols$6629$1nosrN
             '()
             '1)))
         (g$make-eq-hashtable$5491$1nosrN)))))
   (g$make-name$6606$1nosrN
     g$make-name$6714$1nosrN
     (case-lambda
       ((g$symbols$6636$1nosrN)
        (string->symbol (g$format$6753$1nosrN '"~a" g$symbols$6636$1nosrN)))))
   (g$make-enumeration$6607$1nosrN
     g$make-enumeration$6715$1nosrN
     (case-lambda
       ((g$symbols$6637$1nosrN)
        (call-with-values
          (case-lambda (() (g$make-info$6605$1nosrN g$symbols$6637$1nosrN)))
          (case-lambda
            ((g$s$6641$1nosrN g$mapping$6642$1nosrN g$mask$6643$1nosrN)
             ((case-lambda
                ((g$mask$6644$1nosrN g$mapping$6645$1nosrN g$s$6646$1nosrN)
                 (g$make-enum$6589$1nosrN
                   g$mask$6644$1nosrN
                   (g$make-enum-universe$6596$1nosrN
                     (g$make-name$6606$1nosrN g$s$6646$1nosrN)
                     g$s$6646$1nosrN
                     g$mapping$6645$1nosrN
                     g$mask$6644$1nosrN))))
              g$mask$6643$1nosrN
              g$mapping$6642$1nosrN
              g$s$6641$1nosrN)))))))
   (g$enum-set-universe$6608$1nosrN
     g$enum-set-universe$6716$1nosrN
     (case-lambda
       ((g$enumset$6647$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN 'enum-set-universe g$enumset$6647$1nosrN)
          ((case-lambda
             ((g$ei$6648$1nosrN)
              (g$make-enum$6589$1nosrN
                (g$enum-universe-value$6600$1nosrN g$ei$6648$1nosrN)
                g$ei$6648$1nosrN)))
           (g$enum-info$6591$1nosrN g$enumset$6647$1nosrN))))))
   (g$enum-set-indexer$6609$1nosrN
     g$enum-set-indexer$6717$1nosrN
     (case-lambda
       ((g$enumset$6649$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN 'enum-set-indexer g$enumset$6649$1nosrN)
          (case-lambda
            ((g$symbol$6650$1nosrN)
             (begin
               (if (not (symbol? g$symbol$6650$1nosrN))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6650$1nosrN)
                 (void))
               ((case-lambda
                  ((g$v$6651$1nosrN)
                   (if g$v$6651$1nosrN
                     (- (bitwise-length g$v$6651$1nosrN) '1)
                     '#f)))
                (g$get-value$6603$1nosrN
                  g$enumset$6649$1nosrN
                  g$symbol$6650$1nosrN)))))))))
   (g$enum-set-constructor$6610$1nosrN
     g$enum-set-constructor$6718$1nosrN
     (case-lambda
       ((g$enumset$6652$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN
            'enum-set-constructor
            g$enumset$6652$1nosrN)
          (case-lambda
            ((g$symbols$6653$1nosrN)
             ((letrec ((g$f$6654$1nosrN
                         (case-lambda
                           ((g$v$6655$1nosrN g$s$6656$1nosrN)
                            (if (null? g$s$6656$1nosrN)
                              (g$make-enum$6589$1nosrN
                                g$v$6655$1nosrN
                                (g$enum-info$6591$1nosrN g$enumset$6652$1nosrN))
                              ((case-lambda
                                 ((g$n$6657$1nosrN)
                                  (if (symbol? g$n$6657$1nosrN)
                                    ((case-lambda
                                       ((g$v*$6658$1nosrN)
                                        (if g$v*$6658$1nosrN
                                          (g$f$6654$1nosrN
                                            (bitwise-ior
                                              g$v$6655$1nosrN
                                              g$v*$6658$1nosrN)
                                            (cdr g$s$6656$1nosrN))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6657$1nosrN))))
                                     (g$get-value$6603$1nosrN
                                       g$enumset$6652$1nosrN
                                       g$n$6657$1nosrN))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6657$1nosrN))))
                               (car g$s$6656$1nosrN)))))))
                g$f$6654$1nosrN)
              '0
              g$symbols$6653$1nosrN)))))))
   (g$enum-set->list$6611$1nosrN
     g$enum-set->list$6719$1nosrN
     (case-lambda
       ((g$enumset$6659$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN 'enum-set->list g$enumset$6659$1nosrN)
          ((case-lambda
             ((g$value$6660$1nosrN)
              ((letrec ((g$f$6661$1nosrN
                          (case-lambda
                            ((g$s$6662$1nosrN g$l$6663$1nosrN)
                             (if (null? g$s$6662$1nosrN)
                               (reverse! g$l$6663$1nosrN)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6603$1nosrN
                                         g$enumset$6659$1nosrN
                                         (car g$s$6662$1nosrN))
                                       g$value$6660$1nosrN))
                                 (g$f$6661$1nosrN
                                   (cdr g$s$6662$1nosrN)
                                   g$l$6663$1nosrN)
                                 (g$f$6661$1nosrN
                                   (cdr g$s$6662$1nosrN)
                                   (cons
                                     (car g$s$6662$1nosrN)
                                     g$l$6663$1nosrN))))))))
                 g$f$6661$1nosrN)
               (g$get-symbols$6602$1nosrN g$enumset$6659$1nosrN)
               '())))
           (g$enum-value$6590$1nosrN g$enumset$6659$1nosrN))))))
   (g$enum-set-member?$6612$1nosrN
     g$enum-set-member?$6720$1nosrN
     (case-lambda
       ((g$symbol$6664$1nosrN g$enumset$6665$1nosrN)
        (begin
          (if (not (symbol? g$symbol$6664$1nosrN))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6664$1nosrN)
            (void))
          (g$assert-enum$6604$1nosrN 'enum-set-member? g$enumset$6665$1nosrN)
          ((case-lambda
             ((g$v$6666$1nosrN)
              (if g$v$6666$1nosrN
                (not (zero?
                       (bitwise-and
                         g$v$6666$1nosrN
                         (g$enum-value$6590$1nosrN g$enumset$6665$1nosrN))))
                '#f)))
           (g$get-value$6603$1nosrN
             g$enumset$6665$1nosrN
             g$symbol$6664$1nosrN))))))
   (g$enum-set-subset?$6613$1nosrN
     g$enum-set-subset?$6721$1nosrN
     (case-lambda
       ((g$enumset1$6667$1nosrN g$enumset2$6668$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN 'enum-set-subset? g$enumset1$6667$1nosrN)
          (g$assert-enum$6604$1nosrN 'enum-set-subset? g$enumset2$6668$1nosrN)
          ((case-lambda
             ((g$v1$6669$1nosrN g$v2$6670$1nosrN)
              (if (g$enum-type=?$6601$1nosrN
                    g$enumset1$6667$1nosrN
                    g$enumset2$6668$1nosrN)
                (= (bitwise-and g$v1$6669$1nosrN g$v2$6670$1nosrN)
                   g$v1$6669$1nosrN)
                ((letrec ((g$f$6671$1nosrN
                            (case-lambda
                              ((g$s$6672$1nosrN)
                               (if (null? g$s$6672$1nosrN)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6673$1nosrN g$v2*$6674$1nosrN)
                                     (if g$v2*$6674$1nosrN
                                       ((case-lambda
                                          ((g$has1$6675$1nosrN
                                             g$has2$6676$1nosrN)
                                           (if (if g$has1$6675$1nosrN
                                                 (begin
                                                   '#f
                                                   (not g$has2$6676$1nosrN))
                                                 '#f)
                                             '#f
                                             (g$f$6671$1nosrN
                                               (cdr g$s$6672$1nosrN)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6669$1nosrN
                                                 g$v1*$6673$1nosrN)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6670$1nosrN
                                                 g$v2*$6674$1nosrN))))
                                       '#f)))
                                  (g$get-value$6603$1nosrN
                                    g$enumset1$6667$1nosrN
                                    (car g$s$6672$1nosrN))
                                  (g$get-value$6603$1nosrN
                                    g$enumset2$6668$1nosrN
                                    (car g$s$6672$1nosrN))))))))
                   g$f$6671$1nosrN)
                 (g$get-symbols$6602$1nosrN g$enumset1$6667$1nosrN)))))
           (g$enum-value$6590$1nosrN g$enumset1$6667$1nosrN)
           (g$enum-value$6590$1nosrN g$enumset2$6668$1nosrN))))))
   (g$enum-set=?$6614$1nosrN
     g$enum-set=?$6722$1nosrN
     (case-lambda
       ((g$enumset1$6677$1nosrN g$enumset2$6678$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN 'enum-set=? g$enumset1$6677$1nosrN)
          (g$assert-enum$6604$1nosrN 'enum-set=? g$enumset2$6678$1nosrN)
          (if (g$enum-set-subset?$6613$1nosrN
                g$enumset1$6677$1nosrN
                g$enumset2$6678$1nosrN)
            (begin
              '#f
              (g$enum-set-subset?$6613$1nosrN
                g$enumset2$6678$1nosrN
                g$enumset1$6677$1nosrN))
            '#f)))))
   (g$enum-set-union$6615$1nosrN
     g$enum-set-union$6723$1nosrN
     (case-lambda
       ((g$enumset1$6679$1nosrN g$enumset2$6680$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN 'enum-set-union g$enumset1$6679$1nosrN)
          (g$assert-enum$6604$1nosrN 'enum-set-union g$enumset2$6680$1nosrN)
          (if (g$enum-type=?$6601$1nosrN
                g$enumset1$6679$1nosrN
                g$enumset2$6680$1nosrN)
            (g$make-enum$6589$1nosrN
              (bitwise-ior
                (g$enum-value$6590$1nosrN g$enumset1$6679$1nosrN)
                (g$enum-value$6590$1nosrN g$enumset2$6680$1nosrN))
              (g$enum-info$6591$1nosrN g$enumset1$6679$1nosrN))
            '#f)))))
   (g$enum-set-intersection$6616$1nosrN
     g$enum-set-intersection$6724$1nosrN
     (case-lambda
       ((g$enumset1$6681$1nosrN g$enumset2$6682$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN
            'enum-set-intersection
            g$enumset1$6681$1nosrN)
          (g$assert-enum$6604$1nosrN
            'enum-set-intersection
            g$enumset2$6682$1nosrN)
          (if (g$enum-type=?$6601$1nosrN
                g$enumset1$6681$1nosrN
                g$enumset2$6682$1nosrN)
            (g$make-enum$6589$1nosrN
              (bitwise-and
                (g$enum-value$6590$1nosrN g$enumset1$6681$1nosrN)
                (g$enum-value$6590$1nosrN g$enumset2$6682$1nosrN))
              (g$enum-info$6591$1nosrN g$enumset1$6681$1nosrN))
            '#f)))))
   (g$enum-set-difference$6617$1nosrN
     g$enum-set-difference$6725$1nosrN
     (case-lambda
       ((g$enumset1$6683$1nosrN g$enumset2$6684$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN
            'enum-set-difference
            g$enumset1$6683$1nosrN)
          (g$assert-enum$6604$1nosrN
            'enum-set-difference
            g$enumset2$6684$1nosrN)
          (if (g$enum-type=?$6601$1nosrN
                g$enumset1$6683$1nosrN
                g$enumset2$6684$1nosrN)
            (g$make-enum$6589$1nosrN
              (bitwise-and
                (g$enum-value$6590$1nosrN g$enumset1$6683$1nosrN)
                (bitwise-not (g$enum-value$6590$1nosrN g$enumset2$6684$1nosrN)))
              (g$enum-info$6591$1nosrN g$enumset1$6683$1nosrN))
            '#f)))))
   (g$enum-set-complement$6618$1nosrN
     g$enum-set-complement$6726$1nosrN
     (case-lambda
       ((g$enumset$6685$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN 'enum-set-complement g$enumset$6685$1nosrN)
          (g$make-enum$6589$1nosrN
            (bitwise-not (g$enum-value$6590$1nosrN g$enumset$6685$1nosrN))
            (g$enum-info$6591$1nosrN g$enumset$6685$1nosrN))))))
   (g$enum-set-projection$6619$1nosrN
     g$enum-set-projection$6727$1nosrN
     (case-lambda
       ((g$enumset1$6686$1nosrN g$enumset2$6687$1nosrN)
        (begin
          (g$assert-enum$6604$1nosrN
            'enum-set-projection
            g$enumset1$6686$1nosrN)
          (g$assert-enum$6604$1nosrN
            'enum-set-projection
            g$enumset2$6687$1nosrN)
          ((case-lambda
             ((g$v1$6688$1nosrN)
              ((letrec ((g$f$6689$1nosrN
                          (case-lambda
                            ((g$s$6690$1nosrN g$v$6691$1nosrN)
                             (if (null? g$s$6690$1nosrN)
                               (g$make-enum$6589$1nosrN
                                 g$v$6691$1nosrN
                                 (g$enum-info$6591$1nosrN
                                   g$enumset2$6687$1nosrN))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6688$1nosrN
                                       (g$get-value$6603$1nosrN
                                         g$enumset1$6686$1nosrN
                                         (car g$s$6690$1nosrN))))
                                 (g$f$6689$1nosrN
                                   (cdr g$s$6690$1nosrN)
                                   g$v$6691$1nosrN)
                                 ((case-lambda
                                    ((g$v2$6692$1nosrN)
                                     (if g$v2$6692$1nosrN
                                       (g$f$6689$1nosrN
                                         (cdr g$s$6690$1nosrN)
                                         (bitwise-ior
                                           g$v$6691$1nosrN
                                           g$v2$6692$1nosrN))
                                       (g$f$6689$1nosrN
                                         (cdr g$s$6690$1nosrN)
                                         g$v$6691$1nosrN))))
                                  (g$get-value$6603$1nosrN
                                    g$enumset2$6687$1nosrN
                                    (car g$s$6690$1nosrN)))))))))
                 g$f$6689$1nosrN)
               (g$get-symbols$6602$1nosrN g$enumset1$6686$1nosrN)
               '0)))
           (g$enum-value$6590$1nosrN g$enumset1$6686$1nosrN)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6620$1nosrN g$p$6621$1nosrN)
       (g$fprintf$6752$1nosrN
         g$p$6621$1nosrN
         '"#[enum-set ~a]"
         (g$enum-set->list$6611$1nosrN g$x$6620$1nosrN))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6728$1nosrN
     g$dofmt$6750$1nosrN
     (case-lambda
       ((g$p$6732$1nosrN g$cntl$6733$1nosrN g$args$6734$1nosrN)
        ((case-lambda
           ((g$nmax$6735$1nosrN)
            ((letrec ((g$loop$6736$1nosrN
                        (case-lambda
                          ((g$n$6737$1nosrN g$a$6738$1nosrN)
                           (if (fx<=? g$n$6737$1nosrN g$nmax$6735$1nosrN)
                             ((case-lambda
                                ((g$c$6739$1nosrN)
                                 (if (if (g$char=?$5251$1nosrN
                                           g$c$6739$1nosrN
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6737$1nosrN
                                           g$nmax$6735$1nosrN))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6740$1nosrN)
                                       (if (memv g$t$6740$1nosrN '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6738$1nosrN)
                                             g$p$6732$1nosrN)
                                           (g$loop$6736$1nosrN
                                             (fx+ g$n$6737$1nosrN '2)
                                             (cdr g$a$6738$1nosrN)))
                                         (if (memv g$t$6740$1nosrN '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6738$1nosrN)
                                               g$p$6732$1nosrN)
                                             (g$loop$6736$1nosrN
                                               (fx+ g$n$6737$1nosrN '2)
                                               (cdr g$a$6738$1nosrN)))
                                           (if (memv g$t$6740$1nosrN '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6738$1nosrN)
                                                   '2)
                                                 g$p$6732$1nosrN)
                                               (g$loop$6736$1nosrN
                                                 (fx+ g$n$6737$1nosrN '2)
                                                 (cdr g$a$6738$1nosrN)))
                                             (if (memv g$t$6740$1nosrN '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6738$1nosrN)
                                                     '8)
                                                   g$p$6732$1nosrN)
                                                 (g$loop$6736$1nosrN
                                                   (fx+ g$n$6737$1nosrN '2)
                                                   (cdr g$a$6738$1nosrN)))
                                               (if (memv g$t$6740$1nosrN '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6738$1nosrN)
                                                       '16)
                                                     g$p$6732$1nosrN)
                                                   (g$loop$6736$1nosrN
                                                     (fx+ g$n$6737$1nosrN '2)
                                                     (cdr g$a$6738$1nosrN)))
                                                 (if (memv
                                                       g$t$6740$1nosrN
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6738$1nosrN)
                                                         '10)
                                                       g$p$6732$1nosrN)
                                                     (g$loop$6736$1nosrN
                                                       (fx+ g$n$6737$1nosrN '2)
                                                       (cdr g$a$6738$1nosrN)))
                                                   (if (memv
                                                         g$t$6740$1nosrN
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6732$1nosrN)
                                                       (g$loop$6736$1nosrN
                                                         (fx+ g$n$6737$1nosrN
                                                              '2)
                                                         g$a$6738$1nosrN))
                                                     (begin
                                                       (write-char
                                                         g$c$6739$1nosrN
                                                         g$p$6732$1nosrN)
                                                       (g$loop$6736$1nosrN
                                                         (fx+ g$n$6737$1nosrN
                                                              '1)
                                                         g$a$6738$1nosrN)))))))))))
                                    (string-ref
                                      g$cntl$6733$1nosrN
                                      (fx+ g$n$6737$1nosrN '1)))
                                   (begin
                                     (write-char
                                       g$c$6739$1nosrN
                                       g$p$6732$1nosrN)
                                     (g$loop$6736$1nosrN
                                       (fx+ g$n$6737$1nosrN '1)
                                       g$a$6738$1nosrN)))))
                              (string-ref g$cntl$6733$1nosrN g$n$6737$1nosrN))
                             (void))))))
               g$loop$6736$1nosrN)
             '0
             g$args$6734$1nosrN)))
         (fx- (string-length g$cntl$6733$1nosrN) '1)))))
   (g$printf$6729$1nosrN
     g$printf$6751$1nosrN
     (case-lambda
       ((g$control$6741$1nosrN . g$args$6742$1nosrN)
        (g$dofmt$6728$1nosrN
          (current-output-port)
          g$control$6741$1nosrN
          g$args$6742$1nosrN))))
   (g$fprintf$6730$1nosrN
     g$fprintf$6752$1nosrN
     (case-lambda
       ((g$p$6743$1nosrN g$control$6744$1nosrN . g$args$6745$1nosrN)
        (g$dofmt$6728$1nosrN
          g$p$6743$1nosrN
          g$control$6744$1nosrN
          g$args$6745$1nosrN))))
   (g$format$6731$1nosrN
     g$format$6753$1nosrN
     (case-lambda
       ((g$control$6746$1nosrN . g$args$6747$1nosrN)
        (call-with-values
          g$open-string-output-port$6547$1nosrN
          (case-lambda
            ((g$p$6748$1nosrN g$c$6749$1nosrN)
             (begin
               (g$dofmt$6728$1nosrN
                 g$p$6748$1nosrN
                 g$control$6746$1nosrN
                 g$args$6747$1nosrN)
               (g$c$6749$1nosrN)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6754$1nosrN
     g$make-traced-macro$6757$1nosrN
     (case-lambda
       ((g$name$6755$1nosrN g$x$6756$1nosrN)
        (if (procedure? g$x$6756$1nosrN)
          (make-traced-procedure
            g$name$6755$1nosrN
            g$x$6756$1nosrN
            g$syntax->datum$11408$1nosrN)
          (if (g$variable-transformer?$11231$1nosrN g$x$6756$1nosrN)
            (g$make-variable-transformer$11230$1nosrN
              (make-traced-procedure
                g$name$6755$1nosrN
                (g$variable-transformer-procedure$11232$1nosrN g$x$6756$1nosrN)
                g$syntax->datum$11408$1nosrN))
            g$x$6756$1nosrN))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6758$1nosrN
     g$read-library-source-file$6837$1nosrN
     (case-lambda
       ((g$file-name$6829$1nosrN)
        (g$with-input-from-file$6581$1nosrN
          g$file-name$6829$1nosrN
          read-annotated))))
   (g$make-parameter$6759$1nosrN
     g$make-parameter$6838$1nosrN
     (case-lambda
       ((g$x$6830$1nosrN)
        (g$make-parameter$6759$1nosrN
          g$x$6830$1nosrN
          (case-lambda ((g$x$6831$1nosrN) g$x$6831$1nosrN))))
       ((g$x$6832$1nosrN g$fender$6833$1nosrN)
        (begin
          (if (not (procedure? g$fender$6833$1nosrN))
            (g$assertion-error$11401$1nosrN
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6834$1nosrN)
              (case-lambda
                (() g$x$6834$1nosrN)
                ((g$v$6835$1nosrN)
                 (set! g$x$6834$1nosrN
                   (g$fender$6833$1nosrN g$v$6835$1nosrN))))))
           (g$fender$6833$1nosrN g$x$6832$1nosrN))))))
   (g$file-options-constructor$6827$1nosrN
     g$file-options-constructor$6839$1nosrN
     (g$make-parameter$6759$1nosrN '#f))
   (g$file-options-spec$6828$1nosrN
     g$file-options-spec$6840$1nosrN
     (case-lambda
       ((g$x$6836$1nosrN)
        ((g$file-options-constructor$6827$1nosrN) g$x$6836$1nosrN)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7036$1nosrN
     g$current-primitive-locations$7081$1nosrN
     (g$make-parameter$6838$1nosrN
       (case-lambda ((g$x$7042$1nosrN) '#f))
       (case-lambda
         ((g$p$7043$1nosrN)
          (begin
            (if (not (procedure? g$p$7043$1nosrN))
              (g$assertion-error$11401$1nosrN
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7043$1nosrN)))))
   (g$mutable?$7037$1nosrN
     g$mutable?$7082$1nosrN
     (case-lambda
       ((g$x$7044$1nosrN)
        (letrec* ((g$simple?$7045$1nosrN
                    (case-lambda
                      ((g$x$7046$1nosrN)
                       ((case-lambda
                          ((g$t$7047$1nosrN)
                           (if g$t$7047$1nosrN
                             g$t$7047$1nosrN
                             ((case-lambda
                                ((g$t$7048$1nosrN)
                                 (if g$t$7048$1nosrN
                                   g$t$7048$1nosrN
                                   ((case-lambda
                                      ((g$t$7049$1nosrN)
                                       (if g$t$7049$1nosrN
                                         g$t$7049$1nosrN
                                         ((case-lambda
                                            ((g$t$7050$1nosrN)
                                             (if g$t$7050$1nosrN
                                               g$t$7050$1nosrN
                                               ((case-lambda
                                                  ((g$t$7051$1nosrN)
                                                   (if g$t$7051$1nosrN
                                                     g$t$7051$1nosrN
                                                     ((case-lambda
                                                        ((g$t$7052$1nosrN)
                                                         (if g$t$7052$1nosrN
                                                           g$t$7052$1nosrN
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7046$1nosrN)))))
                                                      (bytevector?
                                                        g$x$7046$1nosrN)))))
                                                (string? g$x$7046$1nosrN)))))
                                          (boolean? g$x$7046$1nosrN)))))
                                    (symbol? g$x$7046$1nosrN)))))
                              (char? g$x$7046$1nosrN)))))
                        (null? g$x$7046$1nosrN))))))
          (not (g$simple?$7045$1nosrN g$x$7044$1nosrN))))))
   (g$rewriter$7038$1nosrN
     g$rewriter$7083$1nosrN
     (case-lambda
       ((g$quote-hack?$7053$1nosrN)
        (letrec* ((g$f$7054$1nosrN
                    (case-lambda
                      ((g$x$7055$1nosrN)
                       (if (pair? g$x$7055$1nosrN)
                         ((case-lambda
                            ((g$t$7056$1nosrN)
                             (if (memv g$t$7056$1nosrN '(quote))
                               (if (if g$quote-hack?$7053$1nosrN
                                     (begin
                                       '#f
                                       (g$mutable?$7037$1nosrN
                                         (g$cadr$5217$1nosrN g$x$7055$1nosrN)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7057$1nosrN)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7057$1nosrN
                                         (g$cadr$5217$1nosrN g$x$7055$1nosrN))
                                       g$g$7057$1nosrN)))
                                  (gensym))
                                 g$x$7055$1nosrN)
                               (if (memv g$t$7056$1nosrN '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$7058$1nosrN)
                                           (cons
                                             (car g$x$7058$1nosrN)
                                             (map g$f$7054$1nosrN
                                                  (cdr g$x$7058$1nosrN)))))
                                        (cdr g$x$7055$1nosrN)))
                                 (if (memv g$t$7056$1nosrN '(lambda))
                                   (g$cons*$5700$1nosrN
                                     'lambda
                                     (g$cadr$5217$1nosrN g$x$7055$1nosrN)
                                     (map g$f$7054$1nosrN
                                          (g$cddr$5219$1nosrN g$x$7055$1nosrN)))
                                   (if (memv g$t$7056$1nosrN '(letrec))
                                     ((case-lambda
                                        ((g$bindings$7059$1nosrN
                                           g$body*$7060$1nosrN)
                                         ((case-lambda
                                            ((g$lhs*$7061$1nosrN
                                               g$rhs*$7062$1nosrN)
                                             (g$cons*$5700$1nosrN
                                               'letrec
                                               (map list
                                                    g$lhs*$7061$1nosrN
                                                    (map g$f$7054$1nosrN
                                                         g$rhs*$7062$1nosrN))
                                               (map g$f$7054$1nosrN
                                                    g$body*$7060$1nosrN))))
                                          (map car g$bindings$7059$1nosrN)
                                          (map g$cadr$5217$1nosrN
                                               g$bindings$7059$1nosrN))))
                                      (g$cadr$5217$1nosrN g$x$7055$1nosrN)
                                      (g$cddr$5219$1nosrN g$x$7055$1nosrN))
                                     (if (memv g$t$7056$1nosrN '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$7063$1nosrN
                                             g$body*$7064$1nosrN)
                                           ((case-lambda
                                              ((g$lhs*$7065$1nosrN
                                                 g$rhs*$7066$1nosrN)
                                               (g$cons*$5700$1nosrN
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$7065$1nosrN
                                                      (map g$f$7054$1nosrN
                                                           g$rhs*$7066$1nosrN))
                                                 (map g$f$7054$1nosrN
                                                      g$body*$7064$1nosrN))))
                                            (map car g$bindings$7063$1nosrN)
                                            (map g$cadr$5217$1nosrN
                                                 g$bindings$7063$1nosrN))))
                                        (g$cadr$5217$1nosrN g$x$7055$1nosrN)
                                        (g$cddr$5219$1nosrN g$x$7055$1nosrN))
                                       (if (memv
                                             g$t$7056$1nosrN
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$7067$1nosrN
                                               g$x$7068$1nosrN)
                                             ((case-lambda
                                                ((g$bindings$7069$1nosrN
                                                   g$body*$7070$1nosrN)
                                                 ((case-lambda
                                                    ((g$lhs*$7071$1nosrN
                                                       g$lhs**$7072$1nosrN
                                                       g$rhs*$7073$1nosrN)
                                                     (g$cons*$5700$1nosrN
                                                       'library-letrec*
                                                       g$name$7067$1nosrN
                                                       (map list
                                                            g$lhs*$7071$1nosrN
                                                            g$lhs**$7072$1nosrN
                                                            (map g$f$7054$1nosrN
                                                                 g$rhs*$7073$1nosrN))
                                                       (map g$f$7054$1nosrN
                                                            g$body*$7070$1nosrN))))
                                                  (map car
                                                       g$bindings$7069$1nosrN)
                                                  (map g$cadr$5217$1nosrN
                                                       g$bindings$7069$1nosrN)
                                                  (map g$caddr$5223$1nosrN
                                                       g$bindings$7069$1nosrN))))
                                              (g$cadr$5217$1nosrN
                                                g$x$7068$1nosrN)
                                              (g$cddr$5219$1nosrN
                                                g$x$7068$1nosrN))))
                                          (g$cadr$5217$1nosrN g$x$7055$1nosrN)
                                          (cdr g$x$7055$1nosrN))
                                         (if (memv g$t$7056$1nosrN '(begin))
                                           (cons
                                             'begin
                                             (map g$f$7054$1nosrN
                                                  (cdr g$x$7055$1nosrN)))
                                           (if (memv g$t$7056$1nosrN '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5217$1nosrN
                                                 g$x$7055$1nosrN)
                                               (g$f$7054$1nosrN
                                                 (g$caddr$5223$1nosrN
                                                   g$x$7055$1nosrN)))
                                             (if (memv
                                                   g$t$7056$1nosrN
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$7074$1nosrN)
                                                   ((case-lambda
                                                      ((g$t$7075$1nosrN)
                                                       (if g$t$7075$1nosrN
                                                         ((case-lambda
                                                            ((g$loc$7076$1nosrN)
                                                             g$loc$7076$1nosrN))
                                                          g$t$7075$1nosrN)
                                                         g$op$7074$1nosrN)))
                                                    ((g$current-primitive-locations$7036$1nosrN)
                                                     g$op$7074$1nosrN))))
                                                (g$cadr$5217$1nosrN
                                                  g$x$7055$1nosrN))
                                               (if (memv
                                                     g$t$7056$1nosrN
                                                     '(define))
                                                 g$x$7055$1nosrN
                                                 (if (list? g$x$7055$1nosrN)
                                                   (map g$f$7054$1nosrN
                                                        g$x$7055$1nosrN)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7055$1nosrN
                                                     (list?
                                                       g$x$7055$1nosrN)))))))))))))))
                          (car g$x$7055$1nosrN))
                         g$x$7055$1nosrN)))))
          g$f$7054$1nosrN))))
   (g$expanded->core$7039$1nosrN
     g$expanded->core$7084$1nosrN
     (case-lambda
       ((g$x$7077$1nosrN) ((g$rewriter$7038$1nosrN '#t) g$x$7077$1nosrN))))
   (g$compile-core-expr$7040$1nosrN
     g$compile-core-expr$7085$1nosrN
     (case-lambda
       ((g$x$7078$1nosrN) ((g$rewriter$7038$1nosrN '#f) g$x$7078$1nosrN))))
   (g$compile-core-expr-to-port$7041$1nosrN
     g$compile-core-expr-to-port$7086$1nosrN
     (case-lambda
       ((g$x$7079$1nosrN g$p$7080$1nosrN)
        (g$pretty-print$7035$1nosrN
          ((g$rewriter$7038$1nosrN '#f) g$x$7079$1nosrN)
          g$p$7080$1nosrN)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7125$1nosrN
     g$make-collection$7329$1nosrN
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7186$1nosrN)
            (letrec* ((g$set-cons$7187$1nosrN
                        (case-lambda
                          ((g$x$7189$1nosrN g$ls$7190$1nosrN)
                           (if (memq g$x$7189$1nosrN g$ls$7190$1nosrN)
                             g$ls$7190$1nosrN
                             (cons g$x$7189$1nosrN g$ls$7190$1nosrN))))))
              (case-lambda
                (() g$set$7186$1nosrN)
                ((g$x$7188$1nosrN)
                 (set! g$set$7186$1nosrN
                   (g$set-cons$7187$1nosrN
                     g$x$7188$1nosrN
                     g$set$7186$1nosrN)))))))
         '()))))
   (g$current-library-collection$7126$1nosrN
     g$current-library-collection$7330$1nosrN
     (g$make-parameter$6838$1nosrN
       (g$make-collection$7125$1nosrN)
       (case-lambda
         ((g$x$7191$1nosrN)
          (begin
            (if (not (procedure? g$x$7191$1nosrN))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7191$1nosrN)
              (void))
            g$x$7191$1nosrN)))))
   (g$8261$7127$1nosrN
     g$8261$7331$1nosrN
     (make-record-type-descriptor
       'library
       '#f
       'g$8264$1nosrN
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8263$7128$1nosrN g$8263$7332$1nosrN '#f)
   (g$8262$7129$1nosrN
     g$8262$7333$1nosrN
     (make-record-constructor-descriptor
       g$8261$7127$1nosrN
       '#f
       g$8263$7128$1nosrN))
   (g$library?$7130$1nosrN
     g$library?$7334$1nosrN
     (record-predicate g$8261$7127$1nosrN))
   (g$make-library$7131$1nosrN
     g$make-library$7335$1nosrN
     (record-constructor g$8262$7129$1nosrN))
   (g$library-id$7132$1nosrN
     g$library-id$7336$1nosrN
     (record-accessor g$8261$7127$1nosrN '0))
   (g$library-name$7133$1nosrN
     g$library-name$7337$1nosrN
     (record-accessor g$8261$7127$1nosrN '1))
   (g$library-version$7134$1nosrN
     g$library-version$7338$1nosrN
     (record-accessor g$8261$7127$1nosrN '2))
   (g$library-imp*$7135$1nosrN
     g$library-imp*$7339$1nosrN
     (record-accessor g$8261$7127$1nosrN '3))
   (g$library-vis*$7136$1nosrN
     g$library-vis*$7340$1nosrN
     (record-accessor g$8261$7127$1nosrN '4))
   (g$library-inv*$7137$1nosrN
     g$library-inv*$7341$1nosrN
     (record-accessor g$8261$7127$1nosrN '5))
   (g$library-subst$7138$1nosrN
     g$library-subst$7342$1nosrN
     (record-accessor g$8261$7127$1nosrN '6))
   (g$library-env$7139$1nosrN
     g$library-env$7343$1nosrN
     (record-accessor g$8261$7127$1nosrN '7))
   (g$library-visit-state$7140$1nosrN
     g$library-visit-state$7344$1nosrN
     (record-accessor g$8261$7127$1nosrN '8))
   (g$library-invoke-state$7141$1nosrN
     g$library-invoke-state$7345$1nosrN
     (record-accessor g$8261$7127$1nosrN '9))
   (g$library-visit-code$7142$1nosrN
     g$library-visit-code$7346$1nosrN
     (record-accessor g$8261$7127$1nosrN '10))
   (g$library-invoke-code$7143$1nosrN
     g$library-invoke-code$7347$1nosrN
     (record-accessor g$8261$7127$1nosrN '11))
   (g$library-visible?$7144$1nosrN
     g$library-visible?$7348$1nosrN
     (record-accessor g$8261$7127$1nosrN '12))
   (g$library-source-file-name$7145$1nosrN
     g$library-source-file-name$7349$1nosrN
     (record-accessor g$8261$7127$1nosrN '13))
   (g$set-library-id!$7146$1nosrN
     g$set-library-id!$7350$1nosrN
     (record-mutator g$8261$7127$1nosrN '0))
   (g$set-library-name!$7147$1nosrN
     g$set-library-name!$7351$1nosrN
     (record-mutator g$8261$7127$1nosrN '1))
   (g$set-library-version!$7148$1nosrN
     g$set-library-version!$7352$1nosrN
     (record-mutator g$8261$7127$1nosrN '2))
   (g$set-library-imp*!$7149$1nosrN
     g$set-library-imp*!$7353$1nosrN
     (record-mutator g$8261$7127$1nosrN '3))
   (g$set-library-vis*!$7150$1nosrN
     g$set-library-vis*!$7354$1nosrN
     (record-mutator g$8261$7127$1nosrN '4))
   (g$set-library-inv*!$7151$1nosrN
     g$set-library-inv*!$7355$1nosrN
     (record-mutator g$8261$7127$1nosrN '5))
   (g$set-library-subst!$7152$1nosrN
     g$set-library-subst!$7356$1nosrN
     (record-mutator g$8261$7127$1nosrN '6))
   (g$set-library-env!$7153$1nosrN
     g$set-library-env!$7357$1nosrN
     (record-mutator g$8261$7127$1nosrN '7))
   (g$set-library-visit-state!$7154$1nosrN
     g$set-library-visit-state!$7358$1nosrN
     (record-mutator g$8261$7127$1nosrN '8))
   (g$set-library-invoke-state!$7155$1nosrN
     g$set-library-invoke-state!$7359$1nosrN
     (record-mutator g$8261$7127$1nosrN '9))
   (g$set-library-visit-code!$7156$1nosrN
     g$set-library-visit-code!$7360$1nosrN
     (record-mutator g$8261$7127$1nosrN '10))
   (g$set-library-invoke-code!$7157$1nosrN
     g$set-library-invoke-code!$7361$1nosrN
     (record-mutator g$8261$7127$1nosrN '11))
   (g$set-library-visible?!$7158$1nosrN
     g$set-library-visible?!$7362$1nosrN
     (record-mutator g$8261$7127$1nosrN '12))
   (g$set-library-source-file-name!$7159$1nosrN
     g$set-library-source-file-name!$7363$1nosrN
     (record-mutator g$8261$7127$1nosrN '13))
   (g$rp$7160$1nosrN
     g$rp$7364$1nosrN
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7192$1nosrN g$p$7193$1nosrN)
          (begin
            (if (not (g$library?$7130$1nosrN g$x$7192$1nosrN))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6753$1nosrN
                '"#<library ~s>"
                (if (null? (g$library-version$7134$1nosrN g$x$7192$1nosrN))
                  (g$library-name$7133$1nosrN g$x$7192$1nosrN)
                  (append
                    (g$library-name$7133$1nosrN g$x$7192$1nosrN)
                    (list (g$library-version$7134$1nosrN g$x$7192$1nosrN)))))
              g$p$7193$1nosrN))))))
   (g$find-dependencies$7161$1nosrN
     g$find-dependencies$7365$1nosrN
     (case-lambda
       ((g$ls$7194$1nosrN)
        (if (null? g$ls$7194$1nosrN)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7162$1nosrN
     g$find-library-by$7366$1nosrN
     (case-lambda
       ((g$pred$7195$1nosrN)
        ((letrec ((g$f$7196$1nosrN
                    (case-lambda
                      ((g$ls$7197$1nosrN)
                       (if (null? g$ls$7197$1nosrN)
                         '#f
                         (if (g$pred$7195$1nosrN (car g$ls$7197$1nosrN))
                           (car g$ls$7197$1nosrN)
                           (g$f$7196$1nosrN (cdr g$ls$7197$1nosrN))))))))
           g$f$7196$1nosrN)
         ((g$current-library-collection$7126$1nosrN))))))
   (g$library-path$7163$1nosrN
     g$library-path$7367$1nosrN
     (g$make-parameter$6838$1nosrN
       '(".")
       (case-lambda
         ((g$x$7198$1nosrN)
          (if (if (list? g$x$7198$1nosrN)
                (begin '#f (g$for-all$5698$1nosrN string? g$x$7198$1nosrN))
                '#f)
            (map (case-lambda ((g$x$7199$1nosrN) g$x$7199$1nosrN))
                 g$x$7198$1nosrN)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7198$1nosrN))))))
   (g$library-extensions$7164$1nosrN
     g$library-extensions$7368$1nosrN
     (g$make-parameter$6838$1nosrN
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7200$1nosrN)
          (if (if (list? g$x$7200$1nosrN)
                (begin '#f (g$for-all$5698$1nosrN string? g$x$7200$1nosrN))
                '#f)
            (map (case-lambda ((g$x$7201$1nosrN) g$x$7201$1nosrN))
                 g$x$7200$1nosrN)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7200$1nosrN))))))
   (g$library-name->file-name$7165$1nosrN
     g$library-name->file-name$7369$1nosrN
     (case-lambda
       ((g$x$7202$1nosrN)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6547$1nosrN)))
          (case-lambda
            ((g$p$7205$1nosrN g$extract$7206$1nosrN)
             ((case-lambda
                ((g$extract$7207$1nosrN g$p$7208$1nosrN)
                 (letrec* ((g$display-hex$7209$1nosrN
                             (case-lambda
                               ((g$n$7217$1nosrN)
                                (if (<= '0 g$n$7217$1nosrN '9)
                                  (display g$n$7217$1nosrN g$p$7208$1nosrN)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7217$1nosrN '10)))
                                    g$p$7208$1nosrN))))))
                   (begin
                     ((letrec ((g$f$7210$1nosrN
                                 (case-lambda
                                   ((g$ls$7211$1nosrN)
                                    (if (not (null? g$ls$7211$1nosrN))
                                      (begin
                                        (display '"/" g$p$7208$1nosrN)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7212$1nosrN)
                                             (if ((case-lambda
                                                    ((g$t$7213$1nosrN)
                                                     (if g$t$7213$1nosrN
                                                       g$t$7213$1nosrN
                                                       ((case-lambda
                                                          ((g$t$7214$1nosrN)
                                                           (if g$t$7214$1nosrN
                                                             g$t$7214$1nosrN
                                                             ((case-lambda
                                                                ((g$t$7215$1nosrN)
                                                                 (if g$t$7215$1nosrN
                                                                   g$t$7215$1nosrN
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7212$1nosrN
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5254$1nosrN
                                                                '#\0
                                                                g$c$7212$1nosrN
                                                                '#\9)))))
                                                        (g$char<=?$5254$1nosrN
                                                          '#\A
                                                          g$c$7212$1nosrN
                                                          '#\Z)))))
                                                  (g$char<=?$5254$1nosrN
                                                    '#\a
                                                    g$c$7212$1nosrN
                                                    '#\z))
                                               (display
                                                 g$c$7212$1nosrN
                                                 g$p$7208$1nosrN)
                                               (begin
                                                 (display '"%" g$p$7208$1nosrN)
                                                 ((case-lambda
                                                    ((g$n$7216$1nosrN)
                                                     (begin
                                                       (g$display-hex$7209$1nosrN
                                                         (g$quotient$6062$1nosrN
                                                           g$n$7216$1nosrN
                                                           '16))
                                                       (g$display-hex$7209$1nosrN
                                                         (g$remainder$6063$1nosrN
                                                           g$n$7216$1nosrN
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7212$1nosrN))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7211$1nosrN))))
                                        (g$f$7210$1nosrN
                                          (cdr g$ls$7211$1nosrN)))
                                      (void))))))
                        g$f$7210$1nosrN)
                      g$x$7202$1nosrN)
                     (g$extract$7207$1nosrN)))))
              g$extract$7206$1nosrN
              g$p$7205$1nosrN)))))))
   (g$file-locator$7166$1nosrN
     g$file-locator$7370$1nosrN
     (g$make-parameter$6838$1nosrN
       (case-lambda
         ((g$x$7218$1nosrN)
          ((case-lambda
             ((g$str$7219$1nosrN)
              ((letrec ((g$f$7220$1nosrN
                          (case-lambda
                            ((g$ls$7221$1nosrN
                               g$exts$7222$1nosrN
                               g$failed-list$7223$1nosrN)
                             (if (null? g$ls$7221$1nosrN)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8366$7224$1nosrN
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8369$1nosrN
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8368$7225$1nosrN '#f)
                                             (g$8367$7226$1nosrN
                                               (make-record-constructor-descriptor
                                                 g$8366$7224$1nosrN
                                                 &condition-rcd
                                                 g$8368$7225$1nosrN))
                                             (g$8365$7227$1nosrN
                                               (record-predicate
                                                 g$8366$7224$1nosrN))
                                             (g$make-library-resolution-condition$7228$1nosrN
                                               (record-constructor
                                                 g$8367$7226$1nosrN))
                                             (g$8363$7229$1nosrN
                                               (record-accessor
                                                 g$8366$7224$1nosrN
                                                 '0))
                                             (g$8364$7230$1nosrN
                                               (record-accessor
                                                 g$8366$7224$1nosrN
                                                 '1))
                                             (g$library-resolution-condition?$7231$1nosrN
                                               (condition-predicate
                                                 g$8366$7224$1nosrN))
                                             (g$condition-library$7232$1nosrN
                                               (condition-accessor
                                                 g$8366$7224$1nosrN
                                                 g$8363$7229$1nosrN))
                                             (g$condition-files$7233$1nosrN
                                               (condition-accessor
                                                 g$8366$7224$1nosrN
                                                 g$8364$7230$1nosrN)))
                                     (raise
                                       (condition
                                         (g$make-error$5972$1nosrN)
                                         (g$make-who-condition$5998$1nosrN
                                           'expander)
                                         (g$make-message-condition$5952$1nosrN
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7228$1nosrN
                                           g$x$7218$1nosrN
                                           (reverse
                                             g$failed-list$7223$1nosrN))))))))
                               (if (null? g$exts$7222$1nosrN)
                                 (g$f$7220$1nosrN
                                   (cdr g$ls$7221$1nosrN)
                                   (g$library-extensions$7164$1nosrN)
                                   g$failed-list$7223$1nosrN)
                                 ((case-lambda
                                    ((g$name$7234$1nosrN)
                                     (if (g$file-exists?$5569$1nosrN
                                           g$name$7234$1nosrN)
                                       g$name$7234$1nosrN
                                       (g$f$7220$1nosrN
                                         g$ls$7221$1nosrN
                                         (cdr g$exts$7222$1nosrN)
                                         (cons
                                           g$name$7234$1nosrN
                                           g$failed-list$7223$1nosrN)))))
                                  (string-append
                                    (car g$ls$7221$1nosrN)
                                    g$str$7219$1nosrN
                                    (car g$exts$7222$1nosrN)))))))))
                 g$f$7220$1nosrN)
               (g$library-path$7163$1nosrN)
               (g$library-extensions$7164$1nosrN)
               '())))
           (g$library-name->file-name$7165$1nosrN g$x$7218$1nosrN))))
       (case-lambda
         ((g$f$7235$1nosrN)
          (if (procedure? g$f$7235$1nosrN)
            g$f$7235$1nosrN
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7235$1nosrN))))))
   (g$serialize-all$7167$1nosrN
     g$serialize-all$7371$1nosrN
     (case-lambda
       ((g$serialize$7236$1nosrN g$compile$7237$1nosrN)
        (letrec* ((g$library-desc$7238$1nosrN
                    (case-lambda
                      ((g$x$7240$1nosrN)
                       (list
                         (g$library-id$7132$1nosrN g$x$7240$1nosrN)
                         (g$library-name$7133$1nosrN g$x$7240$1nosrN))))))
          (for-each
            (case-lambda
              ((g$x$7239$1nosrN)
               (if (g$library-source-file-name$7145$1nosrN g$x$7239$1nosrN)
                 (g$serialize$7236$1nosrN
                   (g$library-source-file-name$7145$1nosrN g$x$7239$1nosrN)
                   (list
                     (g$library-id$7132$1nosrN g$x$7239$1nosrN)
                     (g$library-name$7133$1nosrN g$x$7239$1nosrN)
                     (g$library-version$7134$1nosrN g$x$7239$1nosrN)
                     (map g$library-desc$7238$1nosrN
                          (g$library-imp*$7135$1nosrN g$x$7239$1nosrN))
                     (map g$library-desc$7238$1nosrN
                          (g$library-vis*$7136$1nosrN g$x$7239$1nosrN))
                     (map g$library-desc$7238$1nosrN
                          (g$library-inv*$7137$1nosrN g$x$7239$1nosrN))
                     (g$library-subst$7138$1nosrN g$x$7239$1nosrN)
                     (g$library-env$7139$1nosrN g$x$7239$1nosrN)
                     (g$compile$7237$1nosrN
                       (g$library-visit-code$7142$1nosrN g$x$7239$1nosrN))
                     (g$compile$7237$1nosrN
                       (g$library-invoke-code$7143$1nosrN g$x$7239$1nosrN))
                     (g$library-visible?$7144$1nosrN g$x$7239$1nosrN)))
                 (void))))
            ((g$current-library-collection$7126$1nosrN)))))))
   (g$current-precompiled-library-loader$7168$1nosrN
     g$current-precompiled-library-loader$7372$1nosrN
     (g$make-parameter$6838$1nosrN
       (case-lambda ((g$filename$7241$1nosrN g$sk$7242$1nosrN) '#f))))
   (g$try-load-from-file$7169$1nosrN
     g$try-load-from-file$7373$1nosrN
     (case-lambda
       ((g$filename$7243$1nosrN)
        ((g$current-precompiled-library-loader$7168$1nosrN)
         g$filename$7243$1nosrN
         (case-lambda
           ((g$id$7244$1nosrN
              g$name$7245$1nosrN
              g$ver$7246$1nosrN
              g$imp*$7247$1nosrN
              g$vis*$7248$1nosrN
              g$inv*$7249$1nosrN
              g$exp-subst$7250$1nosrN
              g$exp-env$7251$1nosrN
              g$visit-proc$7252$1nosrN
              g$invoke-proc$7253$1nosrN
              g$visible?$7254$1nosrN)
            ((letrec ((g$f$7255$1nosrN
                        (case-lambda
                          ((g$deps$7256$1nosrN)
                           (if (null? g$deps$7256$1nosrN)
                             (begin
                               (g$install-library$7179$1nosrN
                                 g$id$7244$1nosrN
                                 g$name$7245$1nosrN
                                 g$ver$7246$1nosrN
                                 g$imp*$7247$1nosrN
                                 g$vis*$7248$1nosrN
                                 g$inv*$7249$1nosrN
                                 g$exp-subst$7250$1nosrN
                                 g$exp-env$7251$1nosrN
                                 g$visit-proc$7252$1nosrN
                                 g$invoke-proc$7253$1nosrN
                                 '#f
                                 '#f
                                 g$visible?$7254$1nosrN
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7257$1nosrN)
                                 ((case-lambda
                                    ((g$label$7258$1nosrN g$dname$7259$1nosrN)
                                     ((case-lambda
                                        ((g$l$7260$1nosrN)
                                         (if (if (g$library?$7130$1nosrN
                                                   g$l$7260$1nosrN)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7258$1nosrN
                                                      (g$library-id$7132$1nosrN
                                                        g$l$7260$1nosrN)))
                                               '#f)
                                           (g$f$7255$1nosrN
                                             (cdr g$deps$7256$1nosrN))
                                           (begin
                                             (g$fprintf$6752$1nosrN
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$7245$1nosrN
                                               g$dname$7259$1nosrN
                                               g$filename$7243$1nosrN)
                                             '#f))))
                                      (g$find-library-by-name$7174$1nosrN
                                        g$dname$7259$1nosrN))))
                                  (car g$d$7257$1nosrN)
                                  (g$cadr$5217$1nosrN g$d$7257$1nosrN))))
                              (car g$deps$7256$1nosrN)))))))
               g$f$7255$1nosrN)
             (append g$imp*$7247$1nosrN g$vis*$7248$1nosrN g$inv*$7249$1nosrN)))
           (g$others$7261$1nosrN '#f))))))
   (g$library-loader$7170$1nosrN
     g$library-loader$7374$1nosrN
     (g$make-parameter$6838$1nosrN
       (case-lambda
         ((g$x$7262$1nosrN)
          ((case-lambda
             ((g$file-name$7263$1nosrN)
              (if (not g$file-name$7263$1nosrN)
                (assertion-violation '#f '"cannot file library" g$x$7262$1nosrN)
                ((case-lambda
                   ((g$t$7264$1nosrN)
                    (if g$t$7264$1nosrN
                      g$t$7264$1nosrN
                      (begin
                        '#f
                        ((g$current-library-expander$7171$1nosrN)
                         (g$read-library-source-file$6837$1nosrN
                           g$file-name$7263$1nosrN)
                         g$file-name$7263$1nosrN
                         (case-lambda
                           ((g$name$7265$1nosrN)
                            (if (not (equal?
                                       g$name$7265$1nosrN
                                       g$x$7262$1nosrN))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6547$1nosrN)))
                                  (case-lambda
                                    ((g$p$7268$1nosrN g$e$7269$1nosrN)
                                     ((case-lambda
                                        ((g$e$7270$1nosrN g$p$7271$1nosrN)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7271$1nosrN)
                                           (write
                                             g$x$7262$1nosrN
                                             g$p$7271$1nosrN)
                                           (display
                                             '" in file "
                                             g$p$7271$1nosrN)
                                           (display
                                             g$file-name$7263$1nosrN
                                             g$p$7271$1nosrN)
                                           (display '", found " g$p$7271$1nosrN)
                                           (write
                                             g$name$7265$1nosrN
                                             g$p$7271$1nosrN)
                                           (display '" instead" g$p$7271$1nosrN)
                                           (g$e$7270$1nosrN))))
                                      g$e$7269$1nosrN
                                      g$p$7268$1nosrN)))))
                              (void)))))))))
                 (g$try-load-from-file$7169$1nosrN g$file-name$7263$1nosrN)))))
           ((g$file-locator$7166$1nosrN) g$x$7262$1nosrN))))
       (case-lambda
         ((g$f$7272$1nosrN)
          (if (procedure? g$f$7272$1nosrN)
            g$f$7272$1nosrN
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7272$1nosrN))))))
   (g$current-library-expander$7171$1nosrN
     g$current-library-expander$7375$1nosrN
     (g$make-parameter$6838$1nosrN
       (case-lambda
         ((g$x$7273$1nosrN)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7274$1nosrN)
          (if (procedure? g$f$7274$1nosrN)
            g$f$7274$1nosrN
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7274$1nosrN))))))
   (g$external-pending-libraries$7172$1nosrN
     g$external-pending-libraries$7376$1nosrN
     (g$make-parameter$6838$1nosrN '()))
   (g$find-external-library$7173$1nosrN
     g$find-external-library$7377$1nosrN
     (case-lambda
       ((g$name$7275$1nosrN)
        (begin
          (if (g$member$5694$1nosrN
                g$name$7275$1nosrN
                (g$external-pending-libraries$7172$1nosrN))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7275$1nosrN)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7278$1nosrN
                g$external-pending-libraries$7279$1nosrN)
              ((case-lambda
                 ((g$swap$7280$1nosrN)
                  (dynamic-wind
                    g$swap$7280$1nosrN
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7170$1nosrN) g$name$7275$1nosrN)
                         ((case-lambda
                            ((g$t$7281$1nosrN)
                             (if g$t$7281$1nosrN
                               g$t$7281$1nosrN
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7275$1nosrN)))))
                          (g$find-library-by$7162$1nosrN
                            (case-lambda
                              ((g$x$7282$1nosrN)
                               (equal?
                                 (g$library-name$7133$1nosrN g$x$7282$1nosrN)
                                 g$name$7275$1nosrN))))))))
                    g$swap$7280$1nosrN)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7283$1nosrN)
                      (begin
                        (g$external-pending-libraries$7278$1nosrN
                          g$external-pending-libraries$7279$1nosrN)
                        (set! g$external-pending-libraries$7279$1nosrN
                          g$t$7283$1nosrN))))
                   (g$external-pending-libraries$7278$1nosrN)))))))
           g$external-pending-libraries$7172$1nosrN
           (cons
             g$name$7275$1nosrN
             (g$external-pending-libraries$7172$1nosrN)))))))
   (g$find-library-by-name$7174$1nosrN
     g$find-library-by-name$7378$1nosrN
     (case-lambda
       ((g$name$7284$1nosrN)
        ((case-lambda
           ((g$t$7285$1nosrN)
            (if g$t$7285$1nosrN
              g$t$7285$1nosrN
              (begin
                '#f
                (g$find-external-library$7173$1nosrN g$name$7284$1nosrN)))))
         (g$find-library-by$7162$1nosrN
           (case-lambda
             ((g$x$7286$1nosrN)
              (equal?
                (g$library-name$7133$1nosrN g$x$7286$1nosrN)
                g$name$7284$1nosrN))))))))
   (g$library-exists?$7175$1nosrN
     g$library-exists?$7379$1nosrN
     (case-lambda
       ((g$name$7287$1nosrN)
        (if (g$find-library-by$7162$1nosrN
              (case-lambda
                ((g$x$7288$1nosrN)
                 (equal?
                   (g$library-name$7133$1nosrN g$x$7288$1nosrN)
                   g$name$7287$1nosrN))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7176$1nosrN
     g$find-library-by-spec/die$7380$1nosrN
     (case-lambda
       ((g$spec$7289$1nosrN)
        ((case-lambda
           ((g$id$7290$1nosrN)
            ((case-lambda
               ((g$t$7291$1nosrN)
                (if g$t$7291$1nosrN
                  g$t$7291$1nosrN
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7289$1nosrN)))))
             (g$find-library-by$7162$1nosrN
               (case-lambda
                 ((g$x$7292$1nosrN)
                  (eq? g$id$7290$1nosrN
                       (g$library-id$7132$1nosrN g$x$7292$1nosrN))))))))
         (car g$spec$7289$1nosrN)))))
   (g$label->binding-table$7177$1nosrN
     g$label->binding-table$7381$1nosrN
     (g$make-eq-hashtable$5491$1nosrN))
   (g$install-library-record$7178$1nosrN
     g$install-library-record$7382$1nosrN
     (case-lambda
       ((g$lib$7293$1nosrN)
        (begin
          ((case-lambda
             ((g$exp-env$7294$1nosrN)
              (for-each
                (case-lambda
                  ((g$x$7295$1nosrN)
                   ((case-lambda
                      ((g$label$7296$1nosrN g$binding$7297$1nosrN)
                       ((case-lambda
                          ((g$binding$7298$1nosrN)
                           (g$hashtable-set!$5495$1nosrN
                             g$label->binding-table$7177$1nosrN
                             g$label$7296$1nosrN
                             g$binding$7298$1nosrN)))
                        ((case-lambda
                           ((g$t$7299$1nosrN)
                            (if (memv g$t$7299$1nosrN '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7293$1nosrN
                                  (cdr g$binding$7297$1nosrN)))
                              (if (memv g$t$7299$1nosrN '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7293$1nosrN
                                    (cdr g$binding$7297$1nosrN)))
                                (if (memv g$t$7299$1nosrN '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7293$1nosrN
                                      (cdr g$binding$7297$1nosrN)))
                                  g$binding$7297$1nosrN)))))
                         (car g$binding$7297$1nosrN)))))
                    (car g$x$7295$1nosrN)
                    (cdr g$x$7295$1nosrN))))
                g$exp-env$7294$1nosrN)))
           (g$library-env$7139$1nosrN g$lib$7293$1nosrN))
          ((g$current-library-collection$7126$1nosrN) g$lib$7293$1nosrN)))))
   (g$install-library$7179$1nosrN
     g$install-library$7383$1nosrN
     (case-lambda
       ((g$id$7300$1nosrN
          g$name$7301$1nosrN
          g$ver$7302$1nosrN
          g$imp*$7303$1nosrN
          g$vis*$7304$1nosrN
          g$inv*$7305$1nosrN
          g$exp-subst$7306$1nosrN
          g$exp-env$7307$1nosrN
          g$visit-proc$7308$1nosrN
          g$invoke-proc$7309$1nosrN
          g$visit-code$7310$1nosrN
          g$invoke-code$7311$1nosrN
          g$visible?$7312$1nosrN
          g$source-file-name$7313$1nosrN)
        ((case-lambda
           ((g$imp-lib*$7314$1nosrN
              g$vis-lib*$7315$1nosrN
              g$inv-lib*$7316$1nosrN)
            (begin
              (if (not (if (symbol? g$id$7300$1nosrN)
                         (if (list? g$name$7301$1nosrN)
                           (begin '#f (list? g$ver$7302$1nosrN))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7300$1nosrN
                  g$name$7301$1nosrN
                  g$ver$7302$1nosrN)
                (void))
              (if (g$library-exists?$7175$1nosrN g$name$7301$1nosrN)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7301$1nosrN)
                (void))
              ((case-lambda
                 ((g$lib$7317$1nosrN)
                  (g$install-library-record$7178$1nosrN g$lib$7317$1nosrN)))
               (g$make-library$7131$1nosrN
                 g$id$7300$1nosrN
                 g$name$7301$1nosrN
                 g$ver$7302$1nosrN
                 g$imp-lib*$7314$1nosrN
                 g$vis-lib*$7315$1nosrN
                 g$inv-lib*$7316$1nosrN
                 g$exp-subst$7306$1nosrN
                 g$exp-env$7307$1nosrN
                 g$visit-proc$7308$1nosrN
                 g$invoke-proc$7309$1nosrN
                 g$visit-code$7310$1nosrN
                 g$invoke-code$7311$1nosrN
                 g$visible?$7312$1nosrN
                 g$source-file-name$7313$1nosrN)))))
         (map g$find-library-by-spec/die$7176$1nosrN g$imp*$7303$1nosrN)
         (map g$find-library-by-spec/die$7176$1nosrN g$vis*$7304$1nosrN)
         (map g$find-library-by-spec/die$7176$1nosrN g$inv*$7305$1nosrN)))))
   (g$imported-label->binding$7180$1nosrN
     g$imported-label->binding$7384$1nosrN
     (case-lambda
       ((g$lab$7318$1nosrN)
        (g$hashtable-ref$5494$1nosrN
          g$label->binding-table$7177$1nosrN
          g$lab$7318$1nosrN
          '#f))))
   (g$invoke-library$7181$1nosrN
     g$invoke-library$7385$1nosrN
     (case-lambda
       ((g$lib$7319$1nosrN)
        ((case-lambda
           ((g$invoke$7320$1nosrN)
            (if (procedure? g$invoke$7320$1nosrN)
              (begin
                (g$set-library-invoke-state!$7155$1nosrN
                  g$lib$7319$1nosrN
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7319$1nosrN))))
                (for-each
                  g$invoke-library$7181$1nosrN
                  (g$library-inv*$7137$1nosrN g$lib$7319$1nosrN))
                (g$set-library-invoke-state!$7155$1nosrN
                  g$lib$7319$1nosrN
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7319$1nosrN))))
                (g$invoke$7320$1nosrN)
                (g$set-library-invoke-state!$7155$1nosrN g$lib$7319$1nosrN '#t))
              (void))))
         (g$library-invoke-state$7141$1nosrN g$lib$7319$1nosrN)))))
   (g$visit-library$7182$1nosrN
     g$visit-library$7386$1nosrN
     (case-lambda
       ((g$lib$7321$1nosrN)
        ((case-lambda
           ((g$visit$7322$1nosrN)
            (if (procedure? g$visit$7322$1nosrN)
              (begin
                (g$set-library-visit-state!$7154$1nosrN
                  g$lib$7321$1nosrN
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7321$1nosrN))))
                (for-each
                  g$invoke-library$7181$1nosrN
                  (g$library-vis*$7136$1nosrN g$lib$7321$1nosrN))
                (g$set-library-visit-state!$7154$1nosrN
                  g$lib$7321$1nosrN
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7321$1nosrN))))
                (g$visit$7322$1nosrN)
                (g$set-library-visit-state!$7154$1nosrN g$lib$7321$1nosrN '#t))
              (void))))
         (g$library-visit-state$7140$1nosrN g$lib$7321$1nosrN)))))
   (g$invoke-library-by-spec$7183$1nosrN
     g$invoke-library-by-spec$7387$1nosrN
     (case-lambda
       ((g$spec$7323$1nosrN)
        (g$invoke-library$7181$1nosrN
          (g$find-library-by-spec/die$7176$1nosrN g$spec$7323$1nosrN)))))
   (g$installed-libraries$7184$1nosrN
     g$installed-libraries$7388$1nosrN
     (case-lambda
       ((g$all?$7324$1nosrN)
        ((letrec ((g$f$7325$1nosrN
                    (case-lambda
                      ((g$ls$7326$1nosrN)
                       (if (null? g$ls$7326$1nosrN)
                         '()
                         (if ((case-lambda
                                ((g$t$7327$1nosrN)
                                 (if g$t$7327$1nosrN
                                   g$t$7327$1nosrN
                                   (begin
                                     '#f
                                     (g$library-visible?$7144$1nosrN
                                       (car g$ls$7326$1nosrN))))))
                              g$all?$7324$1nosrN)
                           (cons
                             (car g$ls$7326$1nosrN)
                             (g$f$7325$1nosrN (cdr g$ls$7326$1nosrN)))
                           (g$f$7325$1nosrN (cdr g$ls$7326$1nosrN))))))))
           g$f$7325$1nosrN)
         ((g$current-library-collection$7126$1nosrN))))
       (() (g$installed-libraries$7184$1nosrN '#f))))
   (g$library-spec$7185$1nosrN
     g$library-spec$7389$1nosrN
     (case-lambda
       ((g$x$7328$1nosrN)
        (begin
          (if (not (g$library?$7130$1nosrN g$x$7328$1nosrN))
            (assertion-violation 'library-spec '"not a library" g$x$7328$1nosrN)
            (void))
          (list
            (g$library-id$7132$1nosrN g$x$7328$1nosrN)
            (g$library-name$7133$1nosrN g$x$7328$1nosrN)
            (g$library-version$7134$1nosrN g$x$7328$1nosrN)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7390$1nosrN
     g$build-global-define$7500$1nosrN
     (case-lambda ((g$x$7471$1nosrN) (g$build-void$7467$1nosrN))))
   (g$build-lambda$7439$1nosrN
     g$build-lambda$7501$1nosrN
     (case-lambda
       ((g$ae$7472$1nosrN g$vars$7473$1nosrN g$exp$7474$1nosrN)
        (list 'case-lambda (list g$vars$7473$1nosrN g$exp$7474$1nosrN)))))
   (g$build-case-lambda$7440$1nosrN
     g$build-case-lambda$7502$1nosrN
     (case-lambda
       ((g$ae$7475$1nosrN g$vars*$7476$1nosrN g$exp*$7477$1nosrN)
        (cons 'case-lambda (map list g$vars*$7476$1nosrN g$exp*$7477$1nosrN)))))
   (g$build-let$7441$1nosrN
     g$build-let$7503$1nosrN
     (case-lambda
       ((g$ae$7478$1nosrN
          g$lhs*$7479$1nosrN
          g$rhs*$7480$1nosrN
          g$body$7481$1nosrN)
        (cons
          (g$build-lambda$7439$1nosrN
            g$ae$7478$1nosrN
            g$lhs*$7479$1nosrN
            g$body$7481$1nosrN)
          g$rhs*$7480$1nosrN))))
   (g$build-sequence$7466$1nosrN
     g$build-sequence$7504$1nosrN
     (case-lambda
       ((g$ae$7482$1nosrN g$exps$7483$1nosrN)
        ((letrec ((g$loop$7484$1nosrN
                    (case-lambda
                      ((g$exps$7485$1nosrN)
                       (if (null? (cdr g$exps$7485$1nosrN))
                         (car g$exps$7485$1nosrN)
                         (if (equal?
                               (car g$exps$7485$1nosrN)
                               (g$build-void$7467$1nosrN))
                           (g$loop$7484$1nosrN (cdr g$exps$7485$1nosrN))
                           (cons 'begin g$exps$7485$1nosrN)))))))
           g$loop$7484$1nosrN)
         g$exps$7483$1nosrN))))
   (g$build-void$7467$1nosrN
     g$build-void$7505$1nosrN
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7468$1nosrN
     g$build-letrec$7506$1nosrN
     (case-lambda
       ((g$ae$7486$1nosrN
          g$vars$7487$1nosrN
          g$val-exps$7488$1nosrN
          g$body-exp$7489$1nosrN)
        (if (null? g$vars$7487$1nosrN)
          g$body-exp$7489$1nosrN
          (list
            'letrec
            (map list g$vars$7487$1nosrN g$val-exps$7488$1nosrN)
            g$body-exp$7489$1nosrN)))))
   (g$build-letrec*$7469$1nosrN
     g$build-letrec*$7507$1nosrN
     (case-lambda
       ((g$ae$7490$1nosrN
          g$vars$7491$1nosrN
          g$val-exps$7492$1nosrN
          g$body-exp$7493$1nosrN)
        (if (null? g$vars$7491$1nosrN)
          g$body-exp$7493$1nosrN
          (list
            'letrec*
            (map list g$vars$7491$1nosrN g$val-exps$7492$1nosrN)
            g$body-exp$7493$1nosrN)))))
   (g$build-library-letrec*$7470$1nosrN
     g$build-library-letrec*$7508$1nosrN
     (case-lambda
       ((g$ae$7494$1nosrN
          g$name$7495$1nosrN
          g$vars$7496$1nosrN
          g$locs$7497$1nosrN
          g$val-exps$7498$1nosrN
          g$body-exp$7499$1nosrN)
        (list
          'library-letrec*
          g$name$7495$1nosrN
          (map list
               g$vars$7496$1nosrN
               g$locs$7497$1nosrN
               g$val-exps$7498$1nosrN)
          g$body-exp$7499$1nosrN)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7509$1nosrN
     g$set-cons$11148$1nosrN
     (case-lambda
       ((g$x$7967$1nosrN g$ls$7968$1nosrN)
        (if (memq g$x$7967$1nosrN g$ls$7968$1nosrN)
          g$ls$7968$1nosrN
          (cons g$x$7967$1nosrN g$ls$7968$1nosrN)))))
   (g$set-union$7510$1nosrN
     g$set-union$11149$1nosrN
     (case-lambda
       ((g$ls1$7969$1nosrN g$ls2$7970$1nosrN)
        (if (null? g$ls1$7969$1nosrN)
          g$ls2$7970$1nosrN
          (if (memq (car g$ls1$7969$1nosrN) g$ls2$7970$1nosrN)
            (g$set-union$7510$1nosrN (cdr g$ls1$7969$1nosrN) g$ls2$7970$1nosrN)
            (cons
              (car g$ls1$7969$1nosrN)
              (g$set-union$7510$1nosrN
                (cdr g$ls1$7969$1nosrN)
                g$ls2$7970$1nosrN)))))))
   (g$top-mark*$7512$1nosrN g$top-mark*$11150$1nosrN '(top))
   (g$top-marked?$7513$1nosrN
     g$top-marked?$11151$1nosrN
     (case-lambda ((g$m*$7971$1nosrN) (memq 'top g$m*$7971$1nosrN))))
   (g$gen-lexical$7514$1nosrN
     g$gen-lexical$11152$1nosrN
     (case-lambda
       ((g$sym$7972$1nosrN)
        (if (symbol? g$sym$7972$1nosrN)
          (gensym g$sym$7972$1nosrN)
          (if (g$stx?$7542$1nosrN g$sym$7972$1nosrN)
            (g$gen-lexical$7514$1nosrN
              (g$id->sym$7571$1nosrN g$sym$7972$1nosrN))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7972$1nosrN))))))
   (g$gen-global$7515$1nosrN
     g$gen-global$11153$1nosrN
     (case-lambda
       ((g$x$7973$1nosrN) (g$gen-lexical$7514$1nosrN g$x$7973$1nosrN))))
   (g$gen-label$7516$1nosrN
     g$gen-label$11154$1nosrN
     (case-lambda ((g$_$7974$1nosrN) (gensym))))
   (g$gen-top-level-label$7517$1nosrN
     g$gen-top-level-label$11155$1nosrN
     (case-lambda
       ((g$id$7975$1nosrN g$rib$7976$1nosrN)
        (letrec* ((g$find$7977$1nosrN
                    (case-lambda
                      ((g$sym$7983$1nosrN
                         g$mark*$7984$1nosrN
                         g$sym*$7985$1nosrN
                         g$mark**$7986$1nosrN
                         g$label*$7987$1nosrN)
                       (if (pair? g$sym*$7985$1nosrN)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7983$1nosrN
                                        (car g$sym*$7985$1nosrN))
                                 (begin
                                   '#f
                                   (g$same-marks?$7572$1nosrN
                                     g$mark*$7984$1nosrN
                                     (car g$mark**$7986$1nosrN)))
                                 '#f)
                             (car g$label*$7987$1nosrN)
                             (g$find$7977$1nosrN
                               g$sym$7983$1nosrN
                               g$mark*$7984$1nosrN
                               (cdr g$sym*$7985$1nosrN)
                               (cdr g$mark**$7986$1nosrN)
                               (cdr g$label*$7987$1nosrN))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7978$1nosrN g$mark*$7979$1nosrN)
              ((case-lambda
                 ((g$sym*$7980$1nosrN)
                  ((case-lambda
                     ((g$t$7981$1nosrN)
                      (if g$t$7981$1nosrN
                        ((case-lambda
                           ((g$label$7982$1nosrN)
                            (if (g$imported-label->binding$7384$1nosrN
                                  g$label$7982$1nosrN)
                              (gensym)
                              g$label$7982$1nosrN)))
                         g$t$7981$1nosrN)
                        (gensym))))
                   (if (memq
                         g$sym$7978$1nosrN
                         (g$rib-sym*$7525$1nosrN g$rib$7976$1nosrN))
                     (begin
                       '#f
                       (g$find$7977$1nosrN
                         g$sym$7978$1nosrN
                         g$mark*$7979$1nosrN
                         g$sym*$7980$1nosrN
                         (g$rib-mark**$7526$1nosrN g$rib$7976$1nosrN)
                         (g$rib-label*$7527$1nosrN g$rib$7976$1nosrN)))
                     '#f))))
               (g$rib-sym*$7525$1nosrN g$rib$7976$1nosrN))))
           (g$id->sym$7571$1nosrN g$id$7975$1nosrN)
           (g$stx-mark*$7545$1nosrN g$id$7975$1nosrN))))))
   (g$gen-define-label+loc$7518$1nosrN
     g$gen-define-label+loc$11156$1nosrN
     (case-lambda
       ((g$id$7988$1nosrN g$rib$7989$1nosrN)
        ((case-lambda
           ((g$t$7990$1nosrN)
            (if g$t$7990$1nosrN
              ((case-lambda
                 ((g$env$7991$1nosrN)
                  ((case-lambda
                     ((g$label$7992$1nosrN g$locs$7993$1nosrN)
                      (values
                        g$label$7992$1nosrN
                        ((case-lambda
                           ((g$t$7994$1nosrN)
                            (if g$t$7994$1nosrN
                              (cdr g$t$7994$1nosrN)
                              ((case-lambda
                                 ((g$loc$7995$1nosrN)
                                  (begin
                                    (g$set-interaction-env-locs!$7931$1nosrN
                                      g$env$7991$1nosrN
                                      (cons
                                        (cons
                                          g$label$7992$1nosrN
                                          g$loc$7995$1nosrN)
                                        g$locs$7993$1nosrN))
                                    g$loc$7995$1nosrN)))
                               (g$gen-lexical$7514$1nosrN g$id$7988$1nosrN)))))
                         (assq g$label$7992$1nosrN g$locs$7993$1nosrN)))))
                   (g$gen-top-level-label$7517$1nosrN
                     g$id$7988$1nosrN
                     g$rib$7989$1nosrN)
                   (g$interaction-env-locs$7928$1nosrN g$env$7991$1nosrN))))
               g$t$7990$1nosrN)
              (values (gensym) (g$gen-lexical$7514$1nosrN g$id$7988$1nosrN)))))
         (g$top-level-context$7966$1nosrN)))))
   (g$gen-define-label$7519$1nosrN
     g$gen-define-label$11157$1nosrN
     (case-lambda
       ((g$id$7996$1nosrN g$rib$7997$1nosrN)
        (if (g$top-level-context$7966$1nosrN)
          (g$gen-top-level-label$7517$1nosrN g$id$7996$1nosrN g$rib$7997$1nosrN)
          (gensym)))))
   (g$8664$7520$1nosrN
     g$8664$11158$1nosrN
     (make-record-type-descriptor
       'rib
       '#f
       'g$8667$1nosrN
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8666$7521$1nosrN g$8666$11159$1nosrN '#f)
   (g$8665$7522$1nosrN
     g$8665$11160$1nosrN
     (make-record-constructor-descriptor
       g$8664$7520$1nosrN
       '#f
       g$8666$7521$1nosrN))
   (g$rib?$7523$1nosrN
     g$rib?$11161$1nosrN
     (record-predicate g$8664$7520$1nosrN))
   (g$make-rib$7524$1nosrN
     g$make-rib$11162$1nosrN
     (record-constructor g$8665$7522$1nosrN))
   (g$rib-sym*$7525$1nosrN
     g$rib-sym*$11163$1nosrN
     (record-accessor g$8664$7520$1nosrN '0))
   (g$rib-mark**$7526$1nosrN
     g$rib-mark**$11164$1nosrN
     (record-accessor g$8664$7520$1nosrN '1))
   (g$rib-label*$7527$1nosrN
     g$rib-label*$11165$1nosrN
     (record-accessor g$8664$7520$1nosrN '2))
   (g$rib-sealed/freq$7528$1nosrN
     g$rib-sealed/freq$11166$1nosrN
     (record-accessor g$8664$7520$1nosrN '3))
   (g$set-rib-sym*!$7529$1nosrN
     g$set-rib-sym*!$11167$1nosrN
     (record-mutator g$8664$7520$1nosrN '0))
   (g$set-rib-mark**!$7530$1nosrN
     g$set-rib-mark**!$11168$1nosrN
     (record-mutator g$8664$7520$1nosrN '1))
   (g$set-rib-label*!$7531$1nosrN
     g$set-rib-label*!$11169$1nosrN
     (record-mutator g$8664$7520$1nosrN '2))
   (g$set-rib-sealed/freq!$7532$1nosrN
     g$set-rib-sealed/freq!$11170$1nosrN
     (record-mutator g$8664$7520$1nosrN '3))
   (g$make-empty-rib$7533$1nosrN
     g$make-empty-rib$11171$1nosrN
     (case-lambda (() (g$make-rib$7524$1nosrN '() '() '() '#f))))
   (g$extend-rib!$7534$1nosrN
     g$extend-rib!$11172$1nosrN
     (case-lambda
       ((g$rib$7998$1nosrN g$id$7999$1nosrN g$label$8000$1nosrN)
        (letrec* ((g$find$8001$1nosrN
                    (case-lambda
                      ((g$sym$8007$1nosrN
                         g$mark*$8008$1nosrN
                         g$sym*$8009$1nosrN
                         g$mark**$8010$1nosrN
                         g$label*$8011$1nosrN)
                       (if (pair? g$sym*$8009$1nosrN)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8007$1nosrN
                                        (car g$sym*$8009$1nosrN))
                                 (begin
                                   '#f
                                   (g$same-marks?$7572$1nosrN
                                     g$mark*$8008$1nosrN
                                     (car g$mark**$8010$1nosrN)))
                                 '#f)
                             g$label*$8011$1nosrN
                             (g$find$8001$1nosrN
                               g$sym$8007$1nosrN
                               g$mark*$8008$1nosrN
                               (cdr g$sym*$8009$1nosrN)
                               (cdr g$mark**$8010$1nosrN)
                               (cdr g$label*$8011$1nosrN))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7528$1nosrN g$rib$7998$1nosrN)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7998$1nosrN)
              (void))
            ((case-lambda
               ((g$sym$8002$1nosrN g$mark*$8003$1nosrN)
                ((case-lambda
                   ((g$sym*$8004$1nosrN)
                    ((case-lambda
                       ((g$t$8005$1nosrN)
                        (if g$t$8005$1nosrN
                          ((case-lambda
                             ((g$p$8006$1nosrN)
                              (if (not (eq? g$label$8000$1nosrN
                                            (car g$p$8006$1nosrN)))
                                (if (g$top-level-context$7966$1nosrN)
                                  (set-car! g$p$8006$1nosrN g$label$8000$1nosrN)
                                  (g$syntax-violation$7959$1nosrN
                                    '#f
                                    '"cannot redefine"
                                    g$id$7999$1nosrN))
                                (void))))
                           g$t$8005$1nosrN)
                          (begin
                            (g$set-rib-sym*!$7529$1nosrN
                              g$rib$7998$1nosrN
                              (cons g$sym$8002$1nosrN g$sym*$8004$1nosrN))
                            (g$set-rib-mark**!$7530$1nosrN
                              g$rib$7998$1nosrN
                              (cons
                                g$mark*$8003$1nosrN
                                (g$rib-mark**$7526$1nosrN g$rib$7998$1nosrN)))
                            (g$set-rib-label*!$7531$1nosrN
                              g$rib$7998$1nosrN
                              (cons
                                g$label$8000$1nosrN
                                (g$rib-label*$7527$1nosrN
                                  g$rib$7998$1nosrN)))))))
                     (if (memq
                           g$sym$8002$1nosrN
                           (g$rib-sym*$7525$1nosrN g$rib$7998$1nosrN))
                       (begin
                         '#f
                         (g$find$8001$1nosrN
                           g$sym$8002$1nosrN
                           g$mark*$8003$1nosrN
                           g$sym*$8004$1nosrN
                           (g$rib-mark**$7526$1nosrN g$rib$7998$1nosrN)
                           (g$rib-label*$7527$1nosrN g$rib$7998$1nosrN)))
                       '#f))))
                 (g$rib-sym*$7525$1nosrN g$rib$7998$1nosrN))))
             (g$id->sym$7571$1nosrN g$id$7999$1nosrN)
             (g$stx-mark*$7545$1nosrN g$id$7999$1nosrN)))))))
   (g$make-rib-map$7535$1nosrN
     g$make-rib-map$11173$1nosrN
     (case-lambda
       ((g$sym*$8012$1nosrN)
        ((case-lambda
           ((g$ht$8013$1nosrN)
            ((letrec ((g$f$8014$1nosrN
                        (case-lambda
                          ((g$i$8015$1nosrN g$sym*$8016$1nosrN)
                           (if (null? g$sym*$8016$1nosrN)
                             g$ht$8013$1nosrN
                             (begin
                               (g$hashtable-update!$5498$1nosrN
                                 g$ht$8013$1nosrN
                                 (car g$sym*$8016$1nosrN)
                                 (case-lambda
                                   ((g$x$8017$1nosrN)
                                    (cons g$i$8015$1nosrN g$x$8017$1nosrN)))
                                 '())
                               (g$f$8014$1nosrN
                                 (+ g$i$8015$1nosrN '1)
                                 (cdr g$sym*$8016$1nosrN))))))))
               g$f$8014$1nosrN)
             '0
             g$sym*$8012$1nosrN)))
         (g$make-eq-hashtable$5491$1nosrN)))))
   (g$seal-rib!$7536$1nosrN
     g$seal-rib!$11174$1nosrN
     (case-lambda
       ((g$rib$8018$1nosrN)
        ((case-lambda
           ((g$sym*$8019$1nosrN)
            (if (not (null? g$sym*$8019$1nosrN))
              (begin
                (g$set-rib-sym*!$7529$1nosrN
                  g$rib$8018$1nosrN
                  (list->vector g$sym*$8019$1nosrN))
                (g$set-rib-mark**!$7530$1nosrN
                  g$rib$8018$1nosrN
                  (list->vector (g$rib-mark**$7526$1nosrN g$rib$8018$1nosrN)))
                (g$set-rib-label*!$7531$1nosrN
                  g$rib$8018$1nosrN
                  (list->vector (g$rib-label*$7527$1nosrN g$rib$8018$1nosrN)))
                (g$set-rib-sealed/freq!$7532$1nosrN
                  g$rib$8018$1nosrN
                  (g$make-rib-map$7535$1nosrN g$sym*$8019$1nosrN)))
              (void))))
         (g$rib-sym*$7525$1nosrN g$rib$8018$1nosrN)))))
   (g$unseal-rib!$7537$1nosrN
     g$unseal-rib!$11175$1nosrN
     (case-lambda
       ((g$rib$8020$1nosrN)
        (if (g$rib-sealed/freq$7528$1nosrN g$rib$8020$1nosrN)
          (begin
            (g$set-rib-sealed/freq!$7532$1nosrN g$rib$8020$1nosrN '#f)
            (g$set-rib-sym*!$7529$1nosrN
              g$rib$8020$1nosrN
              (vector->list (g$rib-sym*$7525$1nosrN g$rib$8020$1nosrN)))
            (g$set-rib-mark**!$7530$1nosrN
              g$rib$8020$1nosrN
              (vector->list (g$rib-mark**$7526$1nosrN g$rib$8020$1nosrN)))
            (g$set-rib-label*!$7531$1nosrN
              g$rib$8020$1nosrN
              (vector->list (g$rib-label*$7527$1nosrN g$rib$8020$1nosrN))))
          (void)))))
   (g$make-full-rib$7538$1nosrN
     g$make-full-rib$11176$1nosrN
     (case-lambda
       ((g$id*$8021$1nosrN g$label*$8022$1nosrN)
        ((case-lambda
           ((g$r$8023$1nosrN)
            (begin (g$seal-rib!$7536$1nosrN g$r$8023$1nosrN) g$r$8023$1nosrN)))
         (g$make-rib$7524$1nosrN
           (map g$id->sym$7571$1nosrN g$id*$8021$1nosrN)
           (map g$stx-mark*$7545$1nosrN g$id*$8021$1nosrN)
           g$label*$8022$1nosrN
           '#f)))))
   (g$8690$7539$1nosrN
     g$8690$11177$1nosrN
     (make-record-type-descriptor
       'stx
       '#f
       'g$8693$1nosrN
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8692$7540$1nosrN g$8692$11178$1nosrN '#f)
   (g$8691$7541$1nosrN
     g$8691$11179$1nosrN
     (make-record-constructor-descriptor
       g$8690$7539$1nosrN
       '#f
       g$8692$7540$1nosrN))
   (g$stx?$7542$1nosrN
     g$stx?$11180$1nosrN
     (record-predicate g$8690$7539$1nosrN))
   (g$make-stx$7543$1nosrN
     g$make-stx$11181$1nosrN
     (record-constructor g$8691$7541$1nosrN))
   (g$stx-expr$7544$1nosrN
     g$stx-expr$11182$1nosrN
     (record-accessor g$8690$7539$1nosrN '0))
   (g$stx-mark*$7545$1nosrN
     g$stx-mark*$11183$1nosrN
     (record-accessor g$8690$7539$1nosrN '1))
   (g$stx-subst*$7546$1nosrN
     g$stx-subst*$11184$1nosrN
     (record-accessor g$8690$7539$1nosrN '2))
   (g$stx-ae*$7547$1nosrN
     g$stx-ae*$11185$1nosrN
     (record-accessor g$8690$7539$1nosrN '3))
   (g$set-stx-expr!$7548$1nosrN
     g$set-stx-expr!$11186$1nosrN
     (record-mutator g$8690$7539$1nosrN '0))
   (g$set-stx-mark*!$7549$1nosrN
     g$set-stx-mark*!$11187$1nosrN
     (record-mutator g$8690$7539$1nosrN '1))
   (g$set-stx-subst*!$7550$1nosrN
     g$set-stx-subst*!$11188$1nosrN
     (record-mutator g$8690$7539$1nosrN '2))
   (g$set-stx-ae*!$7551$1nosrN
     g$set-stx-ae*!$11189$1nosrN
     (record-mutator g$8690$7539$1nosrN '3))
   (g$rp$7552$1nosrN
     g$rp$11190$1nosrN
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8024$1nosrN g$p$8025$1nosrN)
          (begin
            (display '"#<syntax " g$p$8025$1nosrN)
            (write (g$stx->datum$7581$1nosrN g$x$8024$1nosrN) g$p$8025$1nosrN)
            ((case-lambda
               ((g$expr$8026$1nosrN)
                (if (annotation? g$expr$8026$1nosrN)
                  ((case-lambda
                     ((g$src$8027$1nosrN)
                      (if (pair? g$src$8027$1nosrN)
                        (begin
                          (display '" [" g$p$8025$1nosrN)
                          (display (cdr g$src$8027$1nosrN) g$p$8025$1nosrN)
                          (display '" of " g$p$8025$1nosrN)
                          (display (car g$src$8027$1nosrN) g$p$8025$1nosrN)
                          (display '"]" g$p$8025$1nosrN))
                        (void))))
                   (annotation-source g$expr$8026$1nosrN))
                  (void))))
             (g$stx-expr$7544$1nosrN g$x$8024$1nosrN))
            (display '">" g$p$8025$1nosrN))))))
   (g$datum->stx$7553$1nosrN
     g$datum->stx$11191$1nosrN
     (case-lambda
       ((g$id$8028$1nosrN g$datum$8029$1nosrN)
        (g$make-stx$7543$1nosrN
          g$datum$8029$1nosrN
          (g$stx-mark*$7545$1nosrN g$id$8028$1nosrN)
          (g$stx-subst*$7546$1nosrN g$id$8028$1nosrN)
          (g$stx-ae*$7547$1nosrN g$id$8028$1nosrN)))))
   (g$gen-mark$7554$1nosrN
     g$gen-mark$11192$1nosrN
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7555$1nosrN g$anti-mark$11193$1nosrN '#f)
   (g$anti-mark?$7556$1nosrN g$anti-mark?$11194$1nosrN not)
   (g$join-wraps$7557$1nosrN
     g$join-wraps$11195$1nosrN
     (case-lambda
       ((g$m1*$8030$1nosrN
          g$s1*$8031$1nosrN
          g$ae1*$8032$1nosrN
          g$e$8033$1nosrN)
        (letrec* ((g$cancel$8034$1nosrN
                    (case-lambda
                      ((g$ls1$8038$1nosrN g$ls2$8039$1nosrN)
                       ((letrec ((g$f$8040$1nosrN
                                   (case-lambda
                                     ((g$x$8041$1nosrN g$ls1$8042$1nosrN)
                                      (if (null? g$ls1$8042$1nosrN)
                                        (cdr g$ls2$8039$1nosrN)
                                        (cons
                                          g$x$8041$1nosrN
                                          (g$f$8040$1nosrN
                                            (car g$ls1$8042$1nosrN)
                                            (cdr g$ls1$8042$1nosrN))))))))
                          g$f$8040$1nosrN)
                        (car g$ls1$8038$1nosrN)
                        (cdr g$ls1$8038$1nosrN))))))
          ((case-lambda
             ((g$m2*$8035$1nosrN g$s2*$8036$1nosrN g$ae2*$8037$1nosrN)
              (if (if (not (null? g$m1*$8030$1nosrN))
                    (if (not (null? g$m2*$8035$1nosrN))
                      (begin
                        '#f
                        (g$anti-mark?$7556$1nosrN (car g$m2*$8035$1nosrN)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8034$1nosrN g$m1*$8030$1nosrN g$m2*$8035$1nosrN)
                  (g$cancel$8034$1nosrN g$s1*$8031$1nosrN g$s2*$8036$1nosrN)
                  (g$cancel$8034$1nosrN g$ae1*$8032$1nosrN g$ae2*$8037$1nosrN))
                (values
                  (append g$m1*$8030$1nosrN g$m2*$8035$1nosrN)
                  (append g$s1*$8031$1nosrN g$s2*$8036$1nosrN)
                  (append g$ae1*$8032$1nosrN g$ae2*$8037$1nosrN)))))
           (g$stx-mark*$7545$1nosrN g$e$8033$1nosrN)
           (g$stx-subst*$7546$1nosrN g$e$8033$1nosrN)
           (g$stx-ae*$7547$1nosrN g$e$8033$1nosrN))))))
   (g$mkstx$7558$1nosrN
     g$mkstx$11196$1nosrN
     (case-lambda
       ((g$e$8043$1nosrN g$m*$8044$1nosrN g$s*$8045$1nosrN g$ae*$8046$1nosrN)
        (if (if (g$stx?$7542$1nosrN g$e$8043$1nosrN)
              (begin '#f (not (g$top-marked?$7513$1nosrN g$m*$8044$1nosrN)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7557$1nosrN
                 g$m*$8044$1nosrN
                 g$s*$8045$1nosrN
                 g$ae*$8046$1nosrN
                 g$e$8043$1nosrN)))
            (case-lambda
              ((g$m*$8050$1nosrN g$s*$8051$1nosrN g$ae*$8052$1nosrN)
               ((case-lambda
                  ((g$ae*$8053$1nosrN g$s*$8054$1nosrN g$m*$8055$1nosrN)
                   (g$make-stx$7543$1nosrN
                     (g$stx-expr$7544$1nosrN g$e$8043$1nosrN)
                     g$m*$8055$1nosrN
                     g$s*$8054$1nosrN
                     g$ae*$8053$1nosrN)))
                g$ae*$8052$1nosrN
                g$s*$8051$1nosrN
                g$m*$8050$1nosrN))))
          (g$make-stx$7543$1nosrN
            g$e$8043$1nosrN
            g$m*$8044$1nosrN
            g$s*$8045$1nosrN
            g$ae*$8046$1nosrN)))))
   (g$add-mark$7559$1nosrN
     g$add-mark$11197$1nosrN
     (case-lambda
       ((g$m$8056$1nosrN g$e$8057$1nosrN g$ae$8058$1nosrN)
        (g$mkstx$7558$1nosrN
          g$e$8057$1nosrN
          (list g$m$8056$1nosrN)
          '(shift)
          (list g$ae$8058$1nosrN)))))
   (g$add-subst$7560$1nosrN
     g$add-subst$11198$1nosrN
     (case-lambda
       ((g$subst$8059$1nosrN g$e$8060$1nosrN)
        (g$mkstx$7558$1nosrN
          g$e$8060$1nosrN
          '()
          (list g$subst$8059$1nosrN)
          '()))))
   (g$syntax-kind?$7561$1nosrN
     g$syntax-kind?$11199$1nosrN
     (case-lambda
       ((g$x$8061$1nosrN g$p?$8062$1nosrN)
        (if (g$stx?$7542$1nosrN g$x$8061$1nosrN)
          (g$syntax-kind?$7561$1nosrN
            (g$stx-expr$7544$1nosrN g$x$8061$1nosrN)
            g$p?$8062$1nosrN)
          (if (annotation? g$x$8061$1nosrN)
            (g$syntax-kind?$7561$1nosrN
              (annotation-expression g$x$8061$1nosrN)
              g$p?$8062$1nosrN)
            (g$p?$8062$1nosrN g$x$8061$1nosrN))))))
   (g$syntax-vector->list$7562$1nosrN
     g$syntax-vector->list$11200$1nosrN
     (case-lambda
       ((g$x$8063$1nosrN)
        (if (g$stx?$7542$1nosrN g$x$8063$1nosrN)
          ((case-lambda
             ((g$ls$8064$1nosrN
                g$m*$8065$1nosrN
                g$s*$8066$1nosrN
                g$ae*$8067$1nosrN)
              (map (case-lambda
                     ((g$x$8068$1nosrN)
                      (g$mkstx$7558$1nosrN
                        g$x$8068$1nosrN
                        g$m*$8065$1nosrN
                        g$s*$8066$1nosrN
                        g$ae*$8067$1nosrN)))
                   g$ls$8064$1nosrN)))
           (g$syntax-vector->list$7562$1nosrN
             (g$stx-expr$7544$1nosrN g$x$8063$1nosrN))
           (g$stx-mark*$7545$1nosrN g$x$8063$1nosrN)
           (g$stx-subst*$7546$1nosrN g$x$8063$1nosrN)
           (g$stx-ae*$7547$1nosrN g$x$8063$1nosrN))
          (if (annotation? g$x$8063$1nosrN)
            (g$syntax-vector->list$7562$1nosrN
              (annotation-expression g$x$8063$1nosrN))
            (if (vector? g$x$8063$1nosrN)
              (vector->list g$x$8063$1nosrN)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8063$1nosrN)))))))
   (g$syntax-pair?$7563$1nosrN
     g$syntax-pair?$11201$1nosrN
     (case-lambda
       ((g$x$8069$1nosrN) (g$syntax-kind?$7561$1nosrN g$x$8069$1nosrN pair?))))
   (g$syntax-vector?$7564$1nosrN
     g$syntax-vector?$11202$1nosrN
     (case-lambda
       ((g$x$8070$1nosrN)
        (g$syntax-kind?$7561$1nosrN g$x$8070$1nosrN vector?))))
   (g$syntax-null?$7565$1nosrN
     g$syntax-null?$11203$1nosrN
     (case-lambda
       ((g$x$8071$1nosrN) (g$syntax-kind?$7561$1nosrN g$x$8071$1nosrN null?))))
   (g$syntax-list?$7566$1nosrN
     g$syntax-list?$11204$1nosrN
     (case-lambda
       ((g$x$8072$1nosrN)
        ((case-lambda
           ((g$t$8073$1nosrN)
            (if g$t$8073$1nosrN
              g$t$8073$1nosrN
              (begin
                '#f
                (if (g$syntax-pair?$7563$1nosrN g$x$8072$1nosrN)
                  (begin
                    '#f
                    (g$syntax-list?$7566$1nosrN
                      (g$syntax-cdr$7568$1nosrN g$x$8072$1nosrN)))
                  '#f)))))
         (g$syntax-null?$7565$1nosrN g$x$8072$1nosrN)))))
   (g$syntax-car$7567$1nosrN
     g$syntax-car$11205$1nosrN
     (case-lambda
       ((g$x$8074$1nosrN)
        (if (g$stx?$7542$1nosrN g$x$8074$1nosrN)
          (g$mkstx$7558$1nosrN
            (g$syntax-car$7567$1nosrN (g$stx-expr$7544$1nosrN g$x$8074$1nosrN))
            (g$stx-mark*$7545$1nosrN g$x$8074$1nosrN)
            (g$stx-subst*$7546$1nosrN g$x$8074$1nosrN)
            (g$stx-ae*$7547$1nosrN g$x$8074$1nosrN))
          (if (annotation? g$x$8074$1nosrN)
            (g$syntax-car$7567$1nosrN (annotation-expression g$x$8074$1nosrN))
            (if (pair? g$x$8074$1nosrN)
              (car g$x$8074$1nosrN)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8074$1nosrN)))))))
   (g$syntax-cdr$7568$1nosrN
     g$syntax-cdr$11206$1nosrN
     (case-lambda
       ((g$x$8075$1nosrN)
        (if (g$stx?$7542$1nosrN g$x$8075$1nosrN)
          (g$mkstx$7558$1nosrN
            (g$syntax-cdr$7568$1nosrN (g$stx-expr$7544$1nosrN g$x$8075$1nosrN))
            (g$stx-mark*$7545$1nosrN g$x$8075$1nosrN)
            (g$stx-subst*$7546$1nosrN g$x$8075$1nosrN)
            (g$stx-ae*$7547$1nosrN g$x$8075$1nosrN))
          (if (annotation? g$x$8075$1nosrN)
            (g$syntax-cdr$7568$1nosrN (annotation-expression g$x$8075$1nosrN))
            (if (pair? g$x$8075$1nosrN)
              (cdr g$x$8075$1nosrN)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8075$1nosrN)))))))
   (g$syntax->list$7569$1nosrN
     g$syntax->list$11207$1nosrN
     (case-lambda
       ((g$x$8076$1nosrN)
        (if (g$syntax-pair?$7563$1nosrN g$x$8076$1nosrN)
          (cons
            (g$syntax-car$7567$1nosrN g$x$8076$1nosrN)
            (g$syntax->list$7569$1nosrN
              (g$syntax-cdr$7568$1nosrN g$x$8076$1nosrN)))
          (if (g$syntax-null?$7565$1nosrN g$x$8076$1nosrN)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8076$1nosrN))))))
   (g$id?$7570$1nosrN
     g$id?$11208$1nosrN
     (case-lambda
       ((g$x$8077$1nosrN)
        (if (g$stx?$7542$1nosrN g$x$8077$1nosrN)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8078$1nosrN)
                (symbol?
                  (if (annotation? g$expr$8078$1nosrN)
                    (annotation-stripped g$expr$8078$1nosrN)
                    g$expr$8078$1nosrN))))
             (g$stx-expr$7544$1nosrN g$x$8077$1nosrN)))
          '#f))))
   (g$id->sym$7571$1nosrN
     g$id->sym$11209$1nosrN
     (case-lambda
       ((g$x$8079$1nosrN)
        (begin
          (if (not (g$stx?$7542$1nosrN g$x$8079$1nosrN))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8079$1nosrN)
            (void))
          ((case-lambda
             ((g$expr$8080$1nosrN)
              ((case-lambda
                 ((g$sym$8081$1nosrN)
                  (if (symbol? g$sym$8081$1nosrN)
                    g$sym$8081$1nosrN
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8079$1nosrN))))
               (if (annotation? g$expr$8080$1nosrN)
                 (annotation-stripped g$expr$8080$1nosrN)
                 g$expr$8080$1nosrN))))
           (g$stx-expr$7544$1nosrN g$x$8079$1nosrN))))))
   (g$same-marks?$7572$1nosrN
     g$same-marks?$11210$1nosrN
     (case-lambda
       ((g$x$8082$1nosrN g$y$8083$1nosrN)
        ((case-lambda
           ((g$t$8084$1nosrN)
            (if g$t$8084$1nosrN
              g$t$8084$1nosrN
              (begin
                '#f
                (if (pair? g$x$8082$1nosrN)
                  (if (pair? g$y$8083$1nosrN)
                    (if (eq? (car g$x$8082$1nosrN) (car g$y$8083$1nosrN))
                      (begin
                        '#f
                        (g$same-marks?$7572$1nosrN
                          (cdr g$x$8082$1nosrN)
                          (cdr g$y$8083$1nosrN)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8082$1nosrN)
           (begin '#f (null? g$y$8083$1nosrN))
           '#f)))))
   (g$bound-id=?$7573$1nosrN
     g$bound-id=?$11211$1nosrN
     (case-lambda
       ((g$x$8085$1nosrN g$y$8086$1nosrN)
        (if (eq? (g$id->sym$7571$1nosrN g$x$8085$1nosrN)
                 (g$id->sym$7571$1nosrN g$y$8086$1nosrN))
          (begin
            '#f
            (g$same-marks?$7572$1nosrN
              (g$stx-mark*$7545$1nosrN g$x$8085$1nosrN)
              (g$stx-mark*$7545$1nosrN g$y$8086$1nosrN)))
          '#f))))
   (g$free-id=?$7574$1nosrN
     g$free-id=?$11212$1nosrN
     (case-lambda
       ((g$i$8087$1nosrN g$j$8088$1nosrN)
        ((case-lambda
           ((g$t0$8089$1nosrN g$t1$8090$1nosrN)
            (if ((case-lambda
                   ((g$t$8091$1nosrN)
                    (if g$t$8091$1nosrN
                      g$t$8091$1nosrN
                      (begin '#f g$t1$8090$1nosrN))))
                 g$t0$8089$1nosrN)
              (eq? g$t0$8089$1nosrN g$t1$8090$1nosrN)
              (eq? (g$id->sym$7571$1nosrN g$i$8087$1nosrN)
                   (g$id->sym$7571$1nosrN g$j$8088$1nosrN)))))
         (g$id->real-label$7584$1nosrN g$i$8087$1nosrN)
         (g$id->real-label$7584$1nosrN g$j$8088$1nosrN)))))
   (g$valid-bound-ids?$7575$1nosrN
     g$valid-bound-ids?$11213$1nosrN
     (case-lambda
       ((g$id*$8092$1nosrN)
        (if (g$for-all$5698$1nosrN g$id?$7570$1nosrN g$id*$8092$1nosrN)
          (begin '#f (g$distinct-bound-ids?$7576$1nosrN g$id*$8092$1nosrN))
          '#f))))
   (g$distinct-bound-ids?$7576$1nosrN
     g$distinct-bound-ids?$11214$1nosrN
     (case-lambda
       ((g$id*$8093$1nosrN)
        ((case-lambda
           ((g$t$8094$1nosrN)
            (if g$t$8094$1nosrN
              g$t$8094$1nosrN
              (begin
                '#f
                (if (not (g$bound-id-member?$7577$1nosrN
                           (car g$id*$8093$1nosrN)
                           (cdr g$id*$8093$1nosrN)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7576$1nosrN (cdr g$id*$8093$1nosrN)))
                  '#f)))))
         (null? g$id*$8093$1nosrN)))))
   (g$bound-id-member?$7577$1nosrN
     g$bound-id-member?$11215$1nosrN
     (case-lambda
       ((g$id$8095$1nosrN g$id*$8096$1nosrN)
        (if (pair? g$id*$8096$1nosrN)
          (begin
            '#f
            ((case-lambda
               ((g$t$8097$1nosrN)
                (if g$t$8097$1nosrN
                  g$t$8097$1nosrN
                  (begin
                    '#f
                    (g$bound-id-member?$7577$1nosrN
                      g$id$8095$1nosrN
                      (cdr g$id*$8096$1nosrN))))))
             (g$bound-id=?$7573$1nosrN
               g$id$8095$1nosrN
               (car g$id*$8096$1nosrN))))
          '#f))))
   (g$self-evaluating?$7578$1nosrN
     g$self-evaluating?$11216$1nosrN
     (case-lambda
       ((g$x$8098$1nosrN)
        ((case-lambda
           ((g$t$8099$1nosrN)
            (if g$t$8099$1nosrN
              g$t$8099$1nosrN
              ((case-lambda
                 ((g$t$8100$1nosrN)
                  (if g$t$8100$1nosrN
                    g$t$8100$1nosrN
                    ((case-lambda
                       ((g$t$8101$1nosrN)
                        (if g$t$8101$1nosrN
                          g$t$8101$1nosrN
                          ((case-lambda
                             ((g$t$8102$1nosrN)
                              (if g$t$8102$1nosrN
                                g$t$8102$1nosrN
                                (begin '#f (bytevector? g$x$8098$1nosrN)))))
                           (boolean? g$x$8098$1nosrN)))))
                     (char? g$x$8098$1nosrN)))))
               (string? g$x$8098$1nosrN)))))
         (number? g$x$8098$1nosrN)))))
   (g$strip-annotations$7579$1nosrN
     g$strip-annotations$11217$1nosrN
     (case-lambda
       ((g$x$8103$1nosrN)
        (if (pair? g$x$8103$1nosrN)
          (cons
            (g$strip-annotations$7579$1nosrN (car g$x$8103$1nosrN))
            (g$strip-annotations$7579$1nosrN (cdr g$x$8103$1nosrN)))
          (if (vector? g$x$8103$1nosrN)
            (vector-map g$strip-annotations$7579$1nosrN g$x$8103$1nosrN)
            (if (annotation? g$x$8103$1nosrN)
              (annotation-stripped g$x$8103$1nosrN)
              g$x$8103$1nosrN))))))
   (g$strip$7580$1nosrN
     g$strip$11218$1nosrN
     (case-lambda
       ((g$x$8104$1nosrN g$m*$8105$1nosrN)
        (if (g$top-marked?$7513$1nosrN g$m*$8105$1nosrN)
          (if ((case-lambda
                 ((g$t$8106$1nosrN)
                  (if g$t$8106$1nosrN
                    g$t$8106$1nosrN
                    ((case-lambda
                       ((g$t$8107$1nosrN)
                        (if g$t$8107$1nosrN
                          g$t$8107$1nosrN
                          (begin
                            '#f
                            (if (vector? g$x$8104$1nosrN)
                              (if (> (vector-length g$x$8104$1nosrN) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8104$1nosrN '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8104$1nosrN)
                       (begin '#f (annotation? (car g$x$8104$1nosrN)))
                       '#f)))))
               (annotation? g$x$8104$1nosrN))
            (g$strip-annotations$7579$1nosrN g$x$8104$1nosrN)
            g$x$8104$1nosrN)
          ((letrec ((g$f$8108$1nosrN
                      (case-lambda
                        ((g$x$8109$1nosrN)
                         (if (g$stx?$7542$1nosrN g$x$8109$1nosrN)
                           (g$strip$7580$1nosrN
                             (g$stx-expr$7544$1nosrN g$x$8109$1nosrN)
                             (g$stx-mark*$7545$1nosrN g$x$8109$1nosrN))
                           (if (annotation? g$x$8109$1nosrN)
                             (annotation-stripped g$x$8109$1nosrN)
                             (if (pair? g$x$8109$1nosrN)
                               ((case-lambda
                                  ((g$a$8110$1nosrN g$d$8111$1nosrN)
                                   (if (if (eq? g$a$8110$1nosrN
                                                (car g$x$8109$1nosrN))
                                         (begin
                                           '#f
                                           (eq? g$d$8111$1nosrN
                                                (cdr g$x$8109$1nosrN)))
                                         '#f)
                                     g$x$8109$1nosrN
                                     (cons g$a$8110$1nosrN g$d$8111$1nosrN))))
                                (g$f$8108$1nosrN (car g$x$8109$1nosrN))
                                (g$f$8108$1nosrN (cdr g$x$8109$1nosrN)))
                               (if (vector? g$x$8109$1nosrN)
                                 ((case-lambda
                                    ((g$old$8112$1nosrN)
                                     ((case-lambda
                                        ((g$new$8113$1nosrN)
                                         (if (g$for-all$5698$1nosrN
                                               eq?
                                               g$old$8112$1nosrN
                                               g$new$8113$1nosrN)
                                           g$x$8109$1nosrN
                                           (list->vector g$new$8113$1nosrN))))
                                      (map g$f$8108$1nosrN g$old$8112$1nosrN))))
                                  (vector->list g$x$8109$1nosrN))
                                 g$x$8109$1nosrN))))))))
             g$f$8108$1nosrN)
           g$x$8104$1nosrN)))))
   (g$stx->datum$7581$1nosrN
     g$stx->datum$11219$1nosrN
     (case-lambda
       ((g$x$8114$1nosrN) (g$strip$7580$1nosrN g$x$8114$1nosrN '()))))
   (g$same-marks*?$7582$1nosrN
     g$same-marks*?$11220$1nosrN
     (case-lambda
       ((g$mark*$8115$1nosrN g$mark**$8116$1nosrN g$si$8117$1nosrN)
        (if (null? g$si$8117$1nosrN)
          '#f
          (if (g$same-marks?$7572$1nosrN
                g$mark*$8115$1nosrN
                (vector-ref g$mark**$8116$1nosrN (car g$si$8117$1nosrN)))
            (car g$si$8117$1nosrN)
            (g$same-marks*?$7582$1nosrN
              g$mark*$8115$1nosrN
              g$mark**$8116$1nosrN
              (cdr g$si$8117$1nosrN)))))))
   (g$id->label$7583$1nosrN
     g$id->label$11221$1nosrN
     (case-lambda
       ((g$id$8118$1nosrN)
        ((case-lambda
           ((g$t$8119$1nosrN)
            (if g$t$8119$1nosrN
              g$t$8119$1nosrN
              (begin
                '#f
                ((case-lambda
                   ((g$t$8120$1nosrN)
                    (if g$t$8120$1nosrN
                      ((case-lambda
                         ((g$env$8121$1nosrN)
                          ((case-lambda
                             ((g$rib$8122$1nosrN)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7518$1nosrN
                                     g$id$8118$1nosrN
                                     g$rib$8122$1nosrN)))
                                (case-lambda
                                  ((g$lab$8125$1nosrN g$loc_$8126$1nosrN)
                                   ((case-lambda
                                      ((g$loc_$8127$1nosrN g$lab$8128$1nosrN)
                                       (begin
                                         (g$extend-rib!$7534$1nosrN
                                           g$rib$8122$1nosrN
                                           g$id$8118$1nosrN
                                           g$lab$8128$1nosrN)
                                         g$lab$8128$1nosrN)))
                                    g$loc_$8126$1nosrN
                                    g$lab$8125$1nosrN))))))
                           (g$interaction-env-rib$7926$1nosrN
                             g$env$8121$1nosrN))))
                       g$t$8120$1nosrN)
                      '#f)))
                 (g$top-level-context$7966$1nosrN))))))
         (g$id->real-label$7584$1nosrN g$id$8118$1nosrN)))))
   (g$id->real-label$7584$1nosrN
     g$id->real-label$11222$1nosrN
     (case-lambda
       ((g$id$8129$1nosrN)
        ((case-lambda
           ((g$sym$8130$1nosrN)
            ((letrec ((g$search$8131$1nosrN
                        (case-lambda
                          ((g$subst*$8132$1nosrN g$mark*$8133$1nosrN)
                           (if (null? g$subst*$8132$1nosrN)
                             '#f
                             (if (eq? (car g$subst*$8132$1nosrN) 'shift)
                               (g$search$8131$1nosrN
                                 (cdr g$subst*$8132$1nosrN)
                                 (cdr g$mark*$8133$1nosrN))
                               ((case-lambda
                                  ((g$rib$8134$1nosrN)
                                   ((case-lambda
                                      ((g$t$8135$1nosrN)
                                       (if g$t$8135$1nosrN
                                         ((case-lambda
                                            ((g$ht$8136$1nosrN)
                                             ((case-lambda
                                                ((g$si$8137$1nosrN)
                                                 ((case-lambda
                                                    ((g$i$8138$1nosrN)
                                                     (if g$i$8138$1nosrN
                                                       (vector-ref
                                                         (g$rib-label*$7527$1nosrN
                                                           g$rib$8134$1nosrN)
                                                         g$i$8138$1nosrN)
                                                       (g$search$8131$1nosrN
                                                         (cdr g$subst*$8132$1nosrN)
                                                         g$mark*$8133$1nosrN))))
                                                  (if g$si$8137$1nosrN
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7582$1nosrN
                                                        g$mark*$8133$1nosrN
                                                        (g$rib-mark**$7526$1nosrN
                                                          g$rib$8134$1nosrN)
                                                        (reverse
                                                          g$si$8137$1nosrN)))
                                                    '#f))))
                                              (g$hashtable-ref$5494$1nosrN
                                                g$ht$8136$1nosrN
                                                g$sym$8130$1nosrN
                                                '#f))))
                                          g$t$8135$1nosrN)
                                         ((letrec ((g$f$8139$1nosrN
                                                     (case-lambda
                                                       ((g$sym*$8140$1nosrN
                                                          g$mark**$8141$1nosrN
                                                          g$label*$8142$1nosrN)
                                                        (if (null?
                                                              g$sym*$8140$1nosrN)
                                                          (g$search$8131$1nosrN
                                                            (cdr g$subst*$8132$1nosrN)
                                                            g$mark*$8133$1nosrN)
                                                          (if (if (eq? (car g$sym*$8140$1nosrN)
                                                                       g$sym$8130$1nosrN)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7572$1nosrN
                                                                    (car g$mark**$8141$1nosrN)
                                                                    g$mark*$8133$1nosrN))
                                                                '#f)
                                                            (car g$label*$8142$1nosrN)
                                                            (g$f$8139$1nosrN
                                                              (cdr g$sym*$8140$1nosrN)
                                                              (cdr g$mark**$8141$1nosrN)
                                                              (cdr g$label*$8142$1nosrN))))))))
                                            g$f$8139$1nosrN)
                                          (g$rib-sym*$7525$1nosrN
                                            g$rib$8134$1nosrN)
                                          (g$rib-mark**$7526$1nosrN
                                            g$rib$8134$1nosrN)
                                          (g$rib-label*$7527$1nosrN
                                            g$rib$8134$1nosrN)))))
                                    (g$rib-sealed/freq$7528$1nosrN
                                      g$rib$8134$1nosrN))))
                                (car g$subst*$8132$1nosrN))))))))
               g$search$8131$1nosrN)
             (g$stx-subst*$7546$1nosrN g$id$8129$1nosrN)
             (g$stx-mark*$7545$1nosrN g$id$8129$1nosrN))))
         (g$id->sym$7571$1nosrN g$id$8129$1nosrN)))))
   (g$label->binding$7585$1nosrN
     g$label->binding$11223$1nosrN
     (case-lambda
       ((g$x$8143$1nosrN g$r$8144$1nosrN)
        ((case-lambda
           ((g$t$8145$1nosrN)
            (if g$t$8145$1nosrN
              ((case-lambda
                 ((g$b$8146$1nosrN)
                  (if (if (pair? g$b$8146$1nosrN)
                        (begin '#f (eq? (car g$b$8146$1nosrN) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7811$1nosrN (cdr g$b$8146$1nosrN)))
                    (if (if (pair? g$b$8146$1nosrN)
                          (begin '#f (eq? (car g$b$8146$1nosrN) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8147$1nosrN g$loc$8148$1nosrN)
                          (cons '$rtd (symbol-value g$loc$8148$1nosrN))))
                       (g$cadr$5217$1nosrN g$b$8146$1nosrN)
                       (g$cddr$5219$1nosrN g$b$8146$1nosrN))
                      g$b$8146$1nosrN))))
               g$t$8145$1nosrN)
              ((case-lambda
                 ((g$t$8149$1nosrN)
                  (if g$t$8149$1nosrN
                    (cdr g$t$8149$1nosrN)
                    ((case-lambda
                       ((g$t$8150$1nosrN)
                        (if g$t$8150$1nosrN
                          ((case-lambda
                             ((g$env$8151$1nosrN)
                              ((case-lambda
                                 ((g$t$8152$1nosrN)
                                  (if g$t$8152$1nosrN
                                    ((case-lambda
                                       ((g$p$8153$1nosrN)
                                        (g$cons*$5700$1nosrN
                                          'lexical
                                          (cdr g$p$8153$1nosrN)
                                          '#f)))
                                     g$t$8152$1nosrN)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$8143$1nosrN
                                 (g$interaction-env-locs$7928$1nosrN
                                   g$env$8151$1nosrN)))))
                           g$t$8150$1nosrN)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7966$1nosrN)))))
               (assq g$x$8143$1nosrN g$r$8144$1nosrN)))))
         (g$imported-label->binding$7384$1nosrN g$x$8143$1nosrN)))))
   (g$make-binding$7586$1nosrN g$make-binding$11224$1nosrN cons)
   (g$binding-type$7587$1nosrN g$binding-type$11225$1nosrN car)
   (g$binding-value$7588$1nosrN g$binding-value$11226$1nosrN cdr)
   (g$raise-unbound-error$7589$1nosrN
     g$raise-unbound-error$11227$1nosrN
     (case-lambda
       ((g$id$8154$1nosrN)
        (g$syntax-violation*$7958$1nosrN
          '#f
          '"unbound identifier"
          g$id$8154$1nosrN
          (g$make-undefined-violation$6034$1nosrN)))))
   (g$syntax-type$7590$1nosrN
     g$syntax-type$11228$1nosrN
     (case-lambda
       ((g$e$8155$1nosrN g$r$8156$1nosrN)
        (if (g$id?$7570$1nosrN g$e$8155$1nosrN)
          ((case-lambda
             ((g$id$8157$1nosrN)
              ((case-lambda
                 ((g$label$8158$1nosrN)
                  ((case-lambda
                     ((g$b$8159$1nosrN)
                      ((case-lambda
                         ((g$type$8160$1nosrN)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$8158$1nosrN)
                                  (g$raise-unbound-error$7589$1nosrN
                                    g$id$8157$1nosrN)
                                  (void))
                                ((case-lambda
                                   ((g$t$8161$1nosrN)
                                    (if (memv
                                          g$t$8161$1nosrN
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$8160$1nosrN
                                        (g$binding-value$7588$1nosrN
                                          g$b$8159$1nosrN)
                                        g$id$8157$1nosrN)
                                      (values 'other '#f '#f))))
                                 g$type$8160$1nosrN)))))))
                       (g$binding-type$7587$1nosrN g$b$8159$1nosrN))))
                   (g$label->binding$7585$1nosrN
                     g$label$8158$1nosrN
                     g$r$8156$1nosrN))))
               (g$id->label$7583$1nosrN g$id$8157$1nosrN))))
           g$e$8155$1nosrN)
          (if (g$syntax-pair?$7563$1nosrN g$e$8155$1nosrN)
            ((case-lambda
               ((g$id$8162$1nosrN)
                (if (g$id?$7570$1nosrN g$id$8162$1nosrN)
                  ((case-lambda
                     ((g$label$8163$1nosrN)
                      ((case-lambda
                         ((g$b$8164$1nosrN)
                          ((case-lambda
                             ((g$type$8165$1nosrN)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$8163$1nosrN)
                                      (g$raise-unbound-error$7589$1nosrN
                                        g$id$8162$1nosrN)
                                      (void))
                                    ((case-lambda
                                       ((g$t$8166$1nosrN)
                                        (if (memv
                                              g$t$8166$1nosrN
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$8165$1nosrN
                                            (g$binding-value$7588$1nosrN
                                              g$b$8164$1nosrN)
                                            g$id$8162$1nosrN)
                                          (values 'call '#f '#f))))
                                     g$type$8165$1nosrN)))))))
                           (g$binding-type$7587$1nosrN g$b$8164$1nosrN))))
                       (g$label->binding$7585$1nosrN
                         g$label$8163$1nosrN
                         g$r$8156$1nosrN))))
                   (g$id->label$7583$1nosrN g$id$8162$1nosrN))
                  (values 'call '#f '#f))))
             (g$syntax-car$7567$1nosrN g$e$8155$1nosrN))
            ((case-lambda
               ((g$d$8167$1nosrN)
                (if (g$self-evaluating?$7578$1nosrN g$d$8167$1nosrN)
                  (values 'constant g$d$8167$1nosrN '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7581$1nosrN g$e$8155$1nosrN)))))))
   (g$sanitize-binding$7598$1nosrN
     g$sanitize-binding$11229$1nosrN
     (case-lambda
       ((g$x$8168$1nosrN g$src$8169$1nosrN)
        (if (procedure? g$x$8168$1nosrN)
          (g$cons*$5700$1nosrN 'local-macro g$x$8168$1nosrN g$src$8169$1nosrN)
          (if (if (pair? g$x$8168$1nosrN)
                (if (eq? (car g$x$8168$1nosrN) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8168$1nosrN)))
                  '#f)
                '#f)
            (g$cons*$5700$1nosrN
              'local-macro!
              (cdr g$x$8168$1nosrN)
              g$src$8169$1nosrN)
            (if (if (pair? g$x$8168$1nosrN)
                  (begin '#f (eq? (car g$x$8168$1nosrN) '$rtd))
                  '#f)
              g$x$8168$1nosrN
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8168$1nosrN)))))))
   (g$make-variable-transformer$7599$1nosrN
     g$make-variable-transformer$11230$1nosrN
     (case-lambda
       ((g$x$8170$1nosrN)
        (if (procedure? g$x$8170$1nosrN)
          (cons 'macro! g$x$8170$1nosrN)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8170$1nosrN)))))
   (g$variable-transformer?$7600$1nosrN
     g$variable-transformer?$11231$1nosrN
     (case-lambda
       ((g$x$8171$1nosrN)
        (if (pair? g$x$8171$1nosrN)
          (if (eq? (car g$x$8171$1nosrN) 'macro!)
            (begin '#f (procedure? (cdr g$x$8171$1nosrN)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7601$1nosrN
     g$variable-transformer-procedure$11232$1nosrN
     (case-lambda
       ((g$x$8172$1nosrN)
        (if (g$variable-transformer?$7600$1nosrN g$x$8172$1nosrN)
          (cdr g$x$8172$1nosrN)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8172$1nosrN)))))
   (g$make-eval-transformer$7602$1nosrN
     g$make-eval-transformer$11233$1nosrN
     (case-lambda
       ((g$x$8173$1nosrN)
        (g$sanitize-binding$7598$1nosrN
          (eval-core (g$expanded->core$7084$1nosrN g$x$8173$1nosrN))
          g$x$8173$1nosrN))))
   (g$parse-define$7788$1nosrN
     g$parse-define$11234$1nosrN
     (case-lambda
       ((g$x$8174$1nosrN)
        ((case-lambda
           ((g$t$8175$1nosrN)
            ((case-lambda
               ((g$ls/false$8176$1nosrN)
                (if (if g$ls/false$8176$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8177$1nosrN
                               g$fmls$8178$1nosrN
                               g$b$8179$1nosrN
                               g$b*$8180$1nosrN)
                             (g$id?$7570$1nosrN g$id$8177$1nosrN)))
                          g$ls/false$8176$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8181$1nosrN
                         g$fmls$8182$1nosrN
                         g$b$8183$1nosrN
                         g$b*$8184$1nosrN)
                       (begin
                         (g$verify-formals$7868$1nosrN
                           g$fmls$8182$1nosrN
                           g$x$8174$1nosrN)
                         (values
                           g$id$8181$1nosrN
                           (cons
                             'defun
                             (cons
                               g$fmls$8182$1nosrN
                               (cons g$b$8183$1nosrN g$b*$8184$1nosrN)))))))
                    g$ls/false$8176$1nosrN)
                  ((case-lambda
                     ((g$t$8185$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8186$1nosrN)
                          (if (if g$ls/false$8186$1nosrN
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8187$1nosrN g$val$8188$1nosrN)
                                       (g$id?$7570$1nosrN g$id$8187$1nosrN)))
                                    g$ls/false$8186$1nosrN))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8189$1nosrN g$val$8190$1nosrN)
                                 (values
                                   g$id$8189$1nosrN
                                   (cons 'expr g$val$8190$1nosrN))))
                              g$ls/false$8186$1nosrN)
                            ((case-lambda
                               ((g$t$8191$1nosrN)
                                ((case-lambda
                                   ((g$ls/false$8192$1nosrN)
                                    (if (if g$ls/false$8192$1nosrN
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8193$1nosrN)
                                                 (g$id?$7570$1nosrN
                                                   g$id$8193$1nosrN)))
                                              g$ls/false$8192$1nosrN))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8194$1nosrN)
                                           (values
                                             g$id$8194$1nosrN
                                             (cons
                                               'expr
                                               (g$bless$7811$1nosrN '(void))))))
                                        g$ls/false$8192$1nosrN)
                                      (g$syntax-violation$7959$1nosrN
                                        '#f
                                        '"invalid syntax"
                                        g$t$8191$1nosrN))))
                                 (g$syntax-dispatch$7848$1nosrN
                                   g$t$8191$1nosrN
                                   '(_ any)))))
                             g$t$8185$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$8185$1nosrN
                         '(_ any any)))))
                   g$t$8175$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8175$1nosrN
               '(_ (any . any) any . each-any)))))
         g$x$8174$1nosrN))))
   (g$parse-define-syntax$7789$1nosrN
     g$parse-define-syntax$11235$1nosrN
     (case-lambda
       ((g$x$8195$1nosrN)
        ((case-lambda
           ((g$t$8196$1nosrN)
            ((case-lambda
               ((g$ls/false$8197$1nosrN)
                (if (if g$ls/false$8197$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8198$1nosrN g$val$8199$1nosrN)
                             (g$id?$7570$1nosrN g$id$8198$1nosrN)))
                          g$ls/false$8197$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8200$1nosrN g$val$8201$1nosrN)
                       (values g$id$8200$1nosrN g$val$8201$1nosrN)))
                    g$ls/false$8197$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8196$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8196$1nosrN '(_ any any)))))
         g$x$8195$1nosrN))))
   (g$scheme-stx-hashtable$7790$1nosrN
     g$scheme-stx-hashtable$11236$1nosrN
     (g$make-eq-hashtable$5491$1nosrN))
   (g$scheme-stx$7791$1nosrN
     g$scheme-stx$11237$1nosrN
     (case-lambda
       ((g$sym$8202$1nosrN)
        ((case-lambda
           ((g$t$8203$1nosrN)
            (if g$t$8203$1nosrN
              g$t$8203$1nosrN
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8204$1nosrN)
                    ((case-lambda
                       ((g$stx$8205$1nosrN)
                        ((case-lambda
                           ((g$stx$8206$1nosrN)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5495$1nosrN
                                    g$scheme-stx-hashtable$7790$1nosrN
                                    g$sym$8202$1nosrN
                                    g$stx$8206$1nosrN)
                                  g$stx$8206$1nosrN))))))
                         ((case-lambda
                            ((g$t$8207$1nosrN)
                             (if g$t$8207$1nosrN
                               ((case-lambda
                                  ((g$x$8208$1nosrN)
                                   ((case-lambda
                                      ((g$name$8209$1nosrN g$label$8210$1nosrN)
                                       (g$add-subst$7560$1nosrN
                                         (g$make-rib$7524$1nosrN
                                           (list g$name$8209$1nosrN)
                                           (list g$top-mark*$7512$1nosrN)
                                           (list g$label$8210$1nosrN)
                                           '#f)
                                         g$stx$8205$1nosrN)))
                                    (car g$x$8208$1nosrN)
                                    (cdr g$x$8208$1nosrN))))
                                g$t$8207$1nosrN)
                               g$stx$8205$1nosrN)))
                          (assq g$sym$8202$1nosrN g$subst$8204$1nosrN)))))
                     (g$make-stx$7543$1nosrN
                       g$sym$8202$1nosrN
                       g$top-mark*$7512$1nosrN
                       '()
                       '()))))
                 (g$library-subst$7342$1nosrN
                   (g$find-library-by-name$7378$1nosrN
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5494$1nosrN
           g$scheme-stx-hashtable$7790$1nosrN
           g$sym$8202$1nosrN
           '#f)))))
   (g$lexical-var$7792$1nosrN g$lexical-var$11238$1nosrN car)
   (g$lexical-mutable?$7793$1nosrN g$lexical-mutable?$11239$1nosrN cdr)
   (g$set-lexical-mutable!$7794$1nosrN
     g$set-lexical-mutable!$11240$1nosrN
     set-cdr!)
   (g$add-lexical$7795$1nosrN
     g$add-lexical$11241$1nosrN
     (case-lambda
       ((g$lab$8211$1nosrN g$lex$8212$1nosrN g$r$8213$1nosrN)
        (cons
          (g$cons*$5700$1nosrN g$lab$8211$1nosrN 'lexical g$lex$8212$1nosrN '#f)
          g$r$8213$1nosrN))))
   (g$add-lexicals$7796$1nosrN
     g$add-lexicals$11242$1nosrN
     (case-lambda
       ((g$lab*$8214$1nosrN g$lex*$8215$1nosrN g$r$8216$1nosrN)
        (if (null? g$lab*$8214$1nosrN)
          g$r$8216$1nosrN
          (g$add-lexicals$7796$1nosrN
            (cdr g$lab*$8214$1nosrN)
            (cdr g$lex*$8215$1nosrN)
            (g$add-lexical$7795$1nosrN
              (car g$lab*$8214$1nosrN)
              (car g$lex*$8215$1nosrN)
              g$r$8216$1nosrN))))))
   (g$letrec-helper$7797$1nosrN
     g$letrec-helper$11243$1nosrN
     (case-lambda
       ((g$e$8217$1nosrN g$r$8218$1nosrN g$mr$8219$1nosrN g$build$8220$1nosrN)
        ((case-lambda
           ((g$t$8221$1nosrN)
            ((case-lambda
               ((g$ls/false$8222$1nosrN)
                (if g$ls/false$8222$1nosrN
                  (apply
                    (case-lambda
                      ((g$lhs*$8223$1nosrN
                         g$rhs*$8224$1nosrN
                         g$b$8225$1nosrN
                         g$b*$8226$1nosrN)
                       (if (not (g$valid-bound-ids?$7575$1nosrN
                                  g$lhs*$8223$1nosrN))
                         (g$invalid-fmls-error$7813$1nosrN
                           g$e$8217$1nosrN
                           g$lhs*$8223$1nosrN)
                         ((case-lambda
                            ((g$lex*$8227$1nosrN g$lab*$8228$1nosrN)
                             ((case-lambda
                                ((g$rib$8229$1nosrN g$r$8230$1nosrN)
                                 ((case-lambda
                                    ((g$body$8231$1nosrN g$rhs*$8232$1nosrN)
                                     (g$build$8220$1nosrN
                                       '#f
                                       g$lex*$8227$1nosrN
                                       g$rhs*$8232$1nosrN
                                       g$body$8231$1nosrN)))
                                  (g$chi-internal$7877$1nosrN
                                    (g$add-subst$7560$1nosrN
                                      g$rib$8229$1nosrN
                                      (cons g$b$8225$1nosrN g$b*$8226$1nosrN))
                                    g$r$8230$1nosrN
                                    g$mr$8219$1nosrN)
                                  (g$chi-expr*$7864$1nosrN
                                    (map (case-lambda
                                           ((g$x$8233$1nosrN)
                                            (g$add-subst$7560$1nosrN
                                              g$rib$8229$1nosrN
                                              g$x$8233$1nosrN)))
                                         g$rhs*$8224$1nosrN)
                                    g$r$8230$1nosrN
                                    g$mr$8219$1nosrN))))
                              (g$make-full-rib$7538$1nosrN
                                g$lhs*$8223$1nosrN
                                g$lab*$8228$1nosrN)
                              (g$add-lexicals$7796$1nosrN
                                g$lab*$8228$1nosrN
                                g$lex*$8227$1nosrN
                                g$r$8218$1nosrN))))
                          (map g$gen-lexical$7514$1nosrN g$lhs*$8223$1nosrN)
                          (map g$gen-label$7516$1nosrN g$lhs*$8223$1nosrN)))))
                    g$ls/false$8222$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8221$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8221$1nosrN
               '(_ #(each (any any)) any . each-any)))))
         g$e$8217$1nosrN))))
   (g$letrec-transformer$7798$1nosrN
     g$letrec-transformer$11244$1nosrN
     (case-lambda
       ((g$e$8234$1nosrN g$r$8235$1nosrN g$mr$8236$1nosrN)
        (g$letrec-helper$7797$1nosrN
          g$e$8234$1nosrN
          g$r$8235$1nosrN
          g$mr$8236$1nosrN
          g$build-letrec$7506$1nosrN))))
   (g$letrec*-transformer$7799$1nosrN
     g$letrec*-transformer$11245$1nosrN
     (case-lambda
       ((g$e$8237$1nosrN g$r$8238$1nosrN g$mr$8239$1nosrN)
        (g$letrec-helper$7797$1nosrN
          g$e$8237$1nosrN
          g$r$8238$1nosrN
          g$mr$8239$1nosrN
          g$build-letrec*$7507$1nosrN))))
   (g$fluid-let-syntax-transformer$7800$1nosrN
     g$fluid-let-syntax-transformer$11246$1nosrN
     (case-lambda
       ((g$e$8240$1nosrN g$r$8241$1nosrN g$mr$8242$1nosrN)
        (letrec* ((g$lookup$8243$1nosrN
                    (case-lambda
                      ((g$x$8253$1nosrN)
                       ((case-lambda
                          ((g$t$8254$1nosrN)
                           (if g$t$8254$1nosrN
                             g$t$8254$1nosrN
                             (begin
                               '#f
                               (g$syntax-violation$7959$1nosrN
                                 '#f
                                 '"unbound identifier"
                                 g$e$8240$1nosrN
                                 g$x$8253$1nosrN)))))
                        (g$id->label$7583$1nosrN g$x$8253$1nosrN))))))
          ((case-lambda
             ((g$t$8244$1nosrN)
              ((case-lambda
                 ((g$ls/false$8245$1nosrN)
                  (if g$ls/false$8245$1nosrN
                    (apply
                      (case-lambda
                        ((g$lhs*$8246$1nosrN
                           g$rhs*$8247$1nosrN
                           g$b$8248$1nosrN
                           g$b*$8249$1nosrN)
                         (if (not (g$valid-bound-ids?$7575$1nosrN
                                    g$lhs*$8246$1nosrN))
                           (g$invalid-fmls-error$7813$1nosrN
                             g$e$8240$1nosrN
                             g$lhs*$8246$1nosrN)
                           ((case-lambda
                              ((g$lab*$8250$1nosrN g$rhs*$8251$1nosrN)
                               (g$chi-internal$7877$1nosrN
                                 (cons g$b$8248$1nosrN g$b*$8249$1nosrN)
                                 (append
                                   (map cons
                                        g$lab*$8250$1nosrN
                                        g$rhs*$8251$1nosrN)
                                   g$r$8241$1nosrN)
                                 (append
                                   (map cons
                                        g$lab*$8250$1nosrN
                                        g$rhs*$8251$1nosrN)
                                   g$mr$8242$1nosrN))))
                            (map g$lookup$8243$1nosrN g$lhs*$8246$1nosrN)
                            (map (case-lambda
                                   ((g$x$8252$1nosrN)
                                    (g$make-eval-transformer$7602$1nosrN
                                      (g$expand-transformer$7893$1nosrN
                                        g$x$8252$1nosrN
                                        g$mr$8242$1nosrN))))
                                 g$rhs*$8247$1nosrN)))))
                      g$ls/false$8245$1nosrN)
                    (g$syntax-violation$7959$1nosrN
                      '#f
                      '"invalid syntax"
                      g$t$8244$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$8244$1nosrN
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8240$1nosrN)))))
   (g$type-descriptor-transformer$7801$1nosrN
     g$type-descriptor-transformer$11247$1nosrN
     (case-lambda
       ((g$e$8255$1nosrN g$r$8256$1nosrN g$mr$8257$1nosrN)
        ((case-lambda
           ((g$t$8258$1nosrN)
            ((case-lambda
               ((g$ls/false$8259$1nosrN)
                (if (if g$ls/false$8259$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8260$1nosrN)
                             (g$id?$7570$1nosrN g$id$8260$1nosrN)))
                          g$ls/false$8259$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8261$1nosrN)
                       ((case-lambda
                          ((g$lab$8262$1nosrN)
                           ((case-lambda
                              ((g$b$8263$1nosrN)
                               ((case-lambda
                                  ((g$type$8264$1nosrN)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8262$1nosrN)
                                           (g$raise-unbound-error$7589$1nosrN
                                             g$id$8261$1nosrN)
                                           (void))
                                         (if (not (if (eq? g$type$8264$1nosrN
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7588$1nosrN
                                                               g$b$8263$1nosrN))))
                                                    '#f))
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"not a record type"
                                             g$e$8255$1nosrN)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7588$1nosrN
                                             g$b$8263$1nosrN))))))))
                                (g$binding-type$7587$1nosrN g$b$8263$1nosrN))))
                            (g$label->binding$7585$1nosrN
                              g$lab$8262$1nosrN
                              g$r$8256$1nosrN))))
                        (g$id->label$7583$1nosrN g$id$8261$1nosrN))))
                    g$ls/false$8259$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8258$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8258$1nosrN '(_ any)))))
         g$e$8255$1nosrN))))
   (g$record-type-descriptor-transformer$7802$1nosrN
     g$record-type-descriptor-transformer$11248$1nosrN
     (case-lambda
       ((g$e$8265$1nosrN g$r$8266$1nosrN g$mr$8267$1nosrN)
        ((case-lambda
           ((g$t$8268$1nosrN)
            ((case-lambda
               ((g$ls/false$8269$1nosrN)
                (if (if g$ls/false$8269$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8270$1nosrN)
                             (g$id?$7570$1nosrN g$id$8270$1nosrN)))
                          g$ls/false$8269$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8271$1nosrN)
                       ((case-lambda
                          ((g$lab$8272$1nosrN)
                           ((case-lambda
                              ((g$b$8273$1nosrN)
                               ((case-lambda
                                  ((g$type$8274$1nosrN)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8272$1nosrN)
                                           (g$raise-unbound-error$7589$1nosrN
                                             g$id$8271$1nosrN)
                                           (void))
                                         (if (not (if (eq? g$type$8274$1nosrN
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7588$1nosrN
                                                          g$b$8273$1nosrN)))
                                                    '#f))
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"not a record type"
                                             g$e$8265$1nosrN)
                                           (void))
                                         (g$chi-expr$7866$1nosrN
                                           (car (g$binding-value$7588$1nosrN
                                                  g$b$8273$1nosrN))
                                           g$r$8266$1nosrN
                                           g$mr$8267$1nosrN)))))))
                                (g$binding-type$7587$1nosrN g$b$8273$1nosrN))))
                            (g$label->binding$7585$1nosrN
                              g$lab$8272$1nosrN
                              g$r$8266$1nosrN))))
                        (g$id->label$7583$1nosrN g$id$8271$1nosrN))))
                    g$ls/false$8269$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8268$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8268$1nosrN '(_ any)))))
         g$e$8265$1nosrN))))
   (g$record-constructor-descriptor-transformer$7803$1nosrN
     g$record-constructor-descriptor-transformer$11249$1nosrN
     (case-lambda
       ((g$e$8275$1nosrN g$r$8276$1nosrN g$mr$8277$1nosrN)
        ((case-lambda
           ((g$t$8278$1nosrN)
            ((case-lambda
               ((g$ls/false$8279$1nosrN)
                (if (if g$ls/false$8279$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8280$1nosrN)
                             (g$id?$7570$1nosrN g$id$8280$1nosrN)))
                          g$ls/false$8279$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8281$1nosrN)
                       ((case-lambda
                          ((g$lab$8282$1nosrN)
                           ((case-lambda
                              ((g$b$8283$1nosrN)
                               ((case-lambda
                                  ((g$type$8284$1nosrN)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8282$1nosrN)
                                           (g$raise-unbound-error$7589$1nosrN
                                             g$id$8281$1nosrN)
                                           (void))
                                         (if (not (if (eq? g$type$8284$1nosrN
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7588$1nosrN
                                                          g$b$8283$1nosrN)))
                                                    '#f))
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid type"
                                             g$e$8275$1nosrN)
                                           (void))
                                         (g$chi-expr$7866$1nosrN
                                           (g$cadr$5217$1nosrN
                                             (g$binding-value$7588$1nosrN
                                               g$b$8283$1nosrN))
                                           g$r$8276$1nosrN
                                           g$mr$8277$1nosrN)))))))
                                (g$binding-type$7587$1nosrN g$b$8283$1nosrN))))
                            (g$label->binding$7585$1nosrN
                              g$lab$8282$1nosrN
                              g$r$8276$1nosrN))))
                        (g$id->label$7583$1nosrN g$id$8281$1nosrN))))
                    g$ls/false$8279$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8278$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8278$1nosrN '(_ any)))))
         g$e$8275$1nosrN))))
   (g$when-macro$7804$1nosrN
     g$when-macro$11250$1nosrN
     (case-lambda
       ((g$e$8285$1nosrN)
        ((case-lambda
           ((g$t$8286$1nosrN)
            ((case-lambda
               ((g$ls/false$8287$1nosrN)
                (if g$ls/false$8287$1nosrN
                  (apply
                    (case-lambda
                      ((g$test$8288$1nosrN g$e$8289$1nosrN g$e*$8290$1nosrN)
                       (g$bless$7811$1nosrN
                         (list
                           'if
                           g$test$8288$1nosrN
                           (cons
                             'begin
                             (cons g$e$8289$1nosrN g$e*$8290$1nosrN))))))
                    g$ls/false$8287$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8286$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8286$1nosrN
               '(_ any any . each-any)))))
         g$e$8285$1nosrN))))
   (g$unless-macro$7805$1nosrN
     g$unless-macro$11251$1nosrN
     (case-lambda
       ((g$e$8291$1nosrN)
        ((case-lambda
           ((g$t$8292$1nosrN)
            ((case-lambda
               ((g$ls/false$8293$1nosrN)
                (if g$ls/false$8293$1nosrN
                  (apply
                    (case-lambda
                      ((g$test$8294$1nosrN g$e$8295$1nosrN g$e*$8296$1nosrN)
                       (g$bless$7811$1nosrN
                         (list
                           'if
                           (list 'not g$test$8294$1nosrN)
                           (cons
                             'begin
                             (cons g$e$8295$1nosrN g$e*$8296$1nosrN))))))
                    g$ls/false$8293$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8292$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8292$1nosrN
               '(_ any any . each-any)))))
         g$e$8291$1nosrN))))
   (g$if-transformer$7806$1nosrN
     g$if-transformer$11252$1nosrN
     (case-lambda
       ((g$e$8297$1nosrN g$r$8298$1nosrN g$mr$8299$1nosrN)
        ((case-lambda
           ((g$t$8300$1nosrN)
            ((case-lambda
               ((g$ls/false$8301$1nosrN)
                (if g$ls/false$8301$1nosrN
                  (apply
                    (case-lambda
                      ((g$e0$8302$1nosrN g$e1$8303$1nosrN g$e2$8304$1nosrN)
                       (list
                         'if
                         (g$chi-expr$7866$1nosrN
                           g$e0$8302$1nosrN
                           g$r$8298$1nosrN
                           g$mr$8299$1nosrN)
                         (g$chi-expr$7866$1nosrN
                           g$e1$8303$1nosrN
                           g$r$8298$1nosrN
                           g$mr$8299$1nosrN)
                         (g$chi-expr$7866$1nosrN
                           g$e2$8304$1nosrN
                           g$r$8298$1nosrN
                           g$mr$8299$1nosrN))))
                    g$ls/false$8301$1nosrN)
                  ((case-lambda
                     ((g$t$8305$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8306$1nosrN)
                          (if g$ls/false$8306$1nosrN
                            (apply
                              (case-lambda
                                ((g$e0$8307$1nosrN g$e1$8308$1nosrN)
                                 (list
                                   'if
                                   (g$chi-expr$7866$1nosrN
                                     g$e0$8307$1nosrN
                                     g$r$8298$1nosrN
                                     g$mr$8299$1nosrN)
                                   (g$chi-expr$7866$1nosrN
                                     g$e1$8308$1nosrN
                                     g$r$8298$1nosrN
                                     g$mr$8299$1nosrN)
                                   (g$build-void$7505$1nosrN))))
                              g$ls/false$8306$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$8305$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$8305$1nosrN
                         '(_ any any)))))
                   g$t$8300$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8300$1nosrN '(_ any any any)))))
         g$e$8297$1nosrN))))
   (g$case-macro$7807$1nosrN
     g$case-macro$11253$1nosrN
     (case-lambda
       ((g$e$8309$1nosrN)
        (letrec* ((g$build-last$8310$1nosrN
                    (case-lambda
                      ((g$cls$8330$1nosrN)
                       ((case-lambda
                          ((g$t$8331$1nosrN)
                           ((case-lambda
                              ((g$ls/false$8332$1nosrN)
                               (if g$ls/false$8332$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$e$8333$1nosrN g$e*$8334$1nosrN)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8333$1nosrN
                                          g$e*$8334$1nosrN))))
                                   g$ls/false$8332$1nosrN)
                                 ((case-lambda
                                    ((g$t$8335$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$8336$1nosrN)
                                         (if g$ls/false$8336$1nosrN
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8311$1nosrN
                                                  g$cls$8330$1nosrN
                                                  '(if #f #f))))
                                             g$ls/false$8336$1nosrN)
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$t$8335$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$8335$1nosrN
                                        '_))))
                                  g$t$8331$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$8331$1nosrN
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8330$1nosrN))))
                  (g$build-one$8311$1nosrN
                    (case-lambda
                      ((g$cls$8323$1nosrN g$k$8324$1nosrN)
                       ((case-lambda
                          ((g$t$8325$1nosrN)
                           ((case-lambda
                              ((g$ls/false$8326$1nosrN)
                               (if g$ls/false$8326$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$d*$8327$1nosrN
                                        g$e$8328$1nosrN
                                        g$e*$8329$1nosrN)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8327$1nosrN))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8328$1nosrN
                                            g$e*$8329$1nosrN))
                                        g$k$8324$1nosrN)))
                                   g$ls/false$8326$1nosrN)
                                 (g$syntax-violation$7959$1nosrN
                                   '#f
                                   '"invalid syntax"
                                   g$t$8325$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$8325$1nosrN
                              '(each-any any . each-any)))))
                        g$cls$8323$1nosrN)))))
          ((case-lambda
             ((g$t$8312$1nosrN)
              ((case-lambda
                 ((g$ls/false$8313$1nosrN)
                  (if g$ls/false$8313$1nosrN
                    (apply
                      (case-lambda
                        ((g$expr$8314$1nosrN)
                         (g$bless$7811$1nosrN
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8314$1nosrN))
                               '((if #f #f)))))))
                      g$ls/false$8313$1nosrN)
                    ((case-lambda
                       ((g$t$8315$1nosrN)
                        ((case-lambda
                           ((g$ls/false$8316$1nosrN)
                            (if g$ls/false$8316$1nosrN
                              (apply
                                (case-lambda
                                  ((g$expr$8317$1nosrN
                                     g$cls$8318$1nosrN
                                     g$cls*$8319$1nosrN)
                                   (g$bless$7811$1nosrN
                                     (list
                                       'let
                                       (list (list 't g$expr$8317$1nosrN))
                                       ((letrec ((g$f$8320$1nosrN
                                                   (case-lambda
                                                     ((g$cls$8321$1nosrN
                                                        g$cls*$8322$1nosrN)
                                                      (if (null?
                                                            g$cls*$8322$1nosrN)
                                                        (g$build-last$8310$1nosrN
                                                          g$cls$8321$1nosrN)
                                                        (g$build-one$8311$1nosrN
                                                          g$cls$8321$1nosrN
                                                          (g$f$8320$1nosrN
                                                            (car g$cls*$8322$1nosrN)
                                                            (cdr g$cls*$8322$1nosrN))))))))
                                          g$f$8320$1nosrN)
                                        g$cls$8318$1nosrN
                                        g$cls*$8319$1nosrN)))))
                                g$ls/false$8316$1nosrN)
                              (g$syntax-violation$7959$1nosrN
                                '#f
                                '"invalid syntax"
                                g$t$8315$1nosrN))))
                         (g$syntax-dispatch$7848$1nosrN
                           g$t$8315$1nosrN
                           '(_ any any . each-any)))))
                     g$t$8312$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN g$t$8312$1nosrN '(_ any)))))
           g$e$8309$1nosrN)))))
   (g$quote-transformer$7808$1nosrN
     g$quote-transformer$11254$1nosrN
     (case-lambda
       ((g$e$8337$1nosrN g$r$8338$1nosrN g$mr$8339$1nosrN)
        ((case-lambda
           ((g$t$8340$1nosrN)
            ((case-lambda
               ((g$ls/false$8341$1nosrN)
                (if g$ls/false$8341$1nosrN
                  (apply
                    (case-lambda
                      ((g$datum$8342$1nosrN)
                       (list
                         'quote
                         (g$stx->datum$7581$1nosrN g$datum$8342$1nosrN))))
                    g$ls/false$8341$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8340$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8340$1nosrN '(_ any)))))
         g$e$8337$1nosrN))))
   (g$case-lambda-transformer$7809$1nosrN
     g$case-lambda-transformer$11255$1nosrN
     (case-lambda
       ((g$e$8343$1nosrN g$r$8344$1nosrN g$mr$8345$1nosrN)
        ((case-lambda
           ((g$t$8346$1nosrN)
            ((case-lambda
               ((g$ls/false$8347$1nosrN)
                (if g$ls/false$8347$1nosrN
                  (apply
                    (case-lambda
                      ((g$fmls*$8348$1nosrN g$b*$8349$1nosrN g$b**$8350$1nosrN)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7870$1nosrN
                              g$e$8343$1nosrN
                              g$fmls*$8348$1nosrN
                              (map cons g$b*$8349$1nosrN g$b**$8350$1nosrN)
                              g$r$8344$1nosrN
                              g$mr$8345$1nosrN)))
                         (case-lambda
                           ((g$fmls*$8353$1nosrN g$body*$8354$1nosrN)
                            ((case-lambda
                               ((g$body*$8355$1nosrN g$fmls*$8356$1nosrN)
                                (g$build-case-lambda$7502$1nosrN
                                  '#f
                                  g$fmls*$8356$1nosrN
                                  g$body*$8355$1nosrN)))
                             g$body*$8354$1nosrN
                             g$fmls*$8353$1nosrN))))))
                    g$ls/false$8347$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8346$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8346$1nosrN
               '(_ . #(each (any any . each-any)))))))
         g$e$8343$1nosrN))))
   (g$lambda-transformer$7810$1nosrN
     g$lambda-transformer$11256$1nosrN
     (case-lambda
       ((g$e$8357$1nosrN g$r$8358$1nosrN g$mr$8359$1nosrN)
        ((case-lambda
           ((g$t$8360$1nosrN)
            ((case-lambda
               ((g$ls/false$8361$1nosrN)
                (if g$ls/false$8361$1nosrN
                  (apply
                    (case-lambda
                      ((g$fmls$8362$1nosrN g$b$8363$1nosrN g$b*$8364$1nosrN)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7869$1nosrN
                              g$e$8357$1nosrN
                              g$fmls$8362$1nosrN
                              (cons g$b$8363$1nosrN g$b*$8364$1nosrN)
                              g$r$8358$1nosrN
                              g$mr$8359$1nosrN)))
                         (case-lambda
                           ((g$fmls$8367$1nosrN g$body$8368$1nosrN)
                            ((case-lambda
                               ((g$body$8369$1nosrN g$fmls$8370$1nosrN)
                                (g$build-lambda$7501$1nosrN
                                  '#f
                                  g$fmls$8370$1nosrN
                                  g$body$8369$1nosrN)))
                             g$body$8368$1nosrN
                             g$fmls$8367$1nosrN))))))
                    g$ls/false$8361$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8360$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8360$1nosrN
               '(_ any any . each-any)))))
         g$e$8357$1nosrN))))
   (g$bless$7811$1nosrN
     g$bless$11257$1nosrN
     (case-lambda
       ((g$x$8371$1nosrN)
        (g$mkstx$7558$1nosrN
          ((letrec ((g$f$8372$1nosrN
                      (case-lambda
                        ((g$x$8373$1nosrN)
                         (if (g$stx?$7542$1nosrN g$x$8373$1nosrN)
                           g$x$8373$1nosrN
                           (if (pair? g$x$8373$1nosrN)
                             (cons
                               (g$f$8372$1nosrN (car g$x$8373$1nosrN))
                               (g$f$8372$1nosrN (cdr g$x$8373$1nosrN)))
                             (if (symbol? g$x$8373$1nosrN)
                               (g$scheme-stx$7791$1nosrN g$x$8373$1nosrN)
                               (if (vector? g$x$8373$1nosrN)
                                 (vector-map g$f$8372$1nosrN g$x$8373$1nosrN)
                                 g$x$8373$1nosrN))))))))
             g$f$8372$1nosrN)
           g$x$8371$1nosrN)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7812$1nosrN
     g$with-syntax-macro$11258$1nosrN
     (case-lambda
       ((g$e$8374$1nosrN)
        ((case-lambda
           ((g$t$8375$1nosrN)
            ((case-lambda
               ((g$ls/false$8376$1nosrN)
                (if g$ls/false$8376$1nosrN
                  (apply
                    (case-lambda
                      ((g$pat*$8377$1nosrN
                         g$expr*$8378$1nosrN
                         g$b$8379$1nosrN
                         g$b*$8380$1nosrN)
                       ((case-lambda
                          ((g$idn*$8381$1nosrN)
                           (begin
                             (g$verify-formals$7868$1nosrN
                               (map car g$idn*$8381$1nosrN)
                               g$e$8374$1nosrN)
                             ((case-lambda
                                ((g$t*$8382$1nosrN)
                                 (g$bless$7811$1nosrN
                                   (list
                                     'let
                                     (map list
                                          g$t*$8382$1nosrN
                                          g$expr*$8378$1nosrN)
                                     ((letrec ((g$f$8383$1nosrN
                                                 (case-lambda
                                                   ((g$pat*$8384$1nosrN
                                                      g$t*$8385$1nosrN)
                                                    (if (null?
                                                          g$pat*$8384$1nosrN)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8379$1nosrN
                                                            g$b*$8380$1nosrN)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8385$1nosrN)
                                                        '()
                                                        (list
                                                          (car g$pat*$8384$1nosrN)
                                                          (g$f$8383$1nosrN
                                                            (cdr g$pat*$8384$1nosrN)
                                                            (cdr g$t*$8385$1nosrN)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8384$1nosrN))
                                                            (car g$t*$8385$1nosrN)))))))))
                                        g$f$8383$1nosrN)
                                      g$pat*$8377$1nosrN
                                      g$t*$8382$1nosrN)))))
                              (g$generate-temporaries$7949$1nosrN
                                g$expr*$8378$1nosrN)))))
                        ((letrec ((g$f$8386$1nosrN
                                    (case-lambda
                                      ((g$pat*$8387$1nosrN)
                                       (if (null? g$pat*$8387$1nosrN)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7847$1nosrN
                                                (car g$pat*$8387$1nosrN)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8390$1nosrN
                                                g$idn*$8391$1nosrN)
                                              ((case-lambda
                                                 ((g$idn*$8392$1nosrN
                                                    g$pat$8393$1nosrN)
                                                  (append
                                                    g$idn*$8392$1nosrN
                                                    (g$f$8386$1nosrN
                                                      (cdr g$pat*$8387$1nosrN)))))
                                               g$idn*$8391$1nosrN
                                               g$pat$8390$1nosrN)))))))))
                           g$f$8386$1nosrN)
                         g$pat*$8377$1nosrN))))
                    g$ls/false$8376$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8375$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8375$1nosrN
               '(_ #(each (any any)) any . each-any)))))
         g$e$8374$1nosrN))))
   (g$invalid-fmls-error$7813$1nosrN
     g$invalid-fmls-error$11259$1nosrN
     (case-lambda
       ((g$stx$8394$1nosrN g$fmls$8395$1nosrN)
        ((case-lambda
           ((g$t$8396$1nosrN)
            ((case-lambda
               ((g$ls/false$8397$1nosrN)
                (if g$ls/false$8397$1nosrN
                  (apply
                    (case-lambda
                      ((g$id*$8398$1nosrN g$last$8399$1nosrN)
                       ((letrec ((g$f$8400$1nosrN
                                   (case-lambda
                                     ((g$id*$8401$1nosrN)
                                      (if (null? g$id*$8401$1nosrN)
                                        (values)
                                        (if (not (g$id?$7570$1nosrN
                                                   (car g$id*$8401$1nosrN)))
                                          (g$syntax-violation$7959$1nosrN
                                            '#f
                                            '"not an identifier"
                                            g$stx$8394$1nosrN
                                            (car g$id*$8401$1nosrN))
                                          (begin
                                            (g$f$8400$1nosrN
                                              (cdr g$id*$8401$1nosrN))
                                            (if (g$bound-id-member?$7577$1nosrN
                                                  (car g$id*$8401$1nosrN)
                                                  (cdr g$id*$8401$1nosrN))
                                              (g$syntax-violation$7959$1nosrN
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8394$1nosrN
                                                (car g$id*$8401$1nosrN))
                                              (void)))))))))
                          g$f$8400$1nosrN)
                        (if (g$id?$7570$1nosrN g$last$8399$1nosrN)
                          (cons g$last$8399$1nosrN g$id*$8398$1nosrN)
                          (if (g$syntax-null?$7565$1nosrN g$last$8399$1nosrN)
                            g$id*$8398$1nosrN
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"not an identifier"
                              g$stx$8394$1nosrN
                              g$last$8399$1nosrN))))))
                    g$ls/false$8397$1nosrN)
                  ((case-lambda
                     ((g$t$8402$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8403$1nosrN)
                          (if g$ls/false$8403$1nosrN
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7959$1nosrN
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8394$1nosrN
                                   g$fmls$8395$1nosrN)))
                              g$ls/false$8403$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$8402$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN g$t$8402$1nosrN '_))))
                   g$t$8396$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8396$1nosrN
               '#(each+ any () any)))))
         g$fmls$8395$1nosrN))))
   (g$let-macro$7814$1nosrN
     g$let-macro$11260$1nosrN
     (case-lambda
       ((g$stx$8404$1nosrN)
        ((case-lambda
           ((g$t$8405$1nosrN)
            ((case-lambda
               ((g$ls/false$8406$1nosrN)
                (if g$ls/false$8406$1nosrN
                  (apply
                    (case-lambda
                      ((g$lhs*$8407$1nosrN
                         g$rhs*$8408$1nosrN
                         g$b$8409$1nosrN
                         g$b*$8410$1nosrN)
                       (if (g$valid-bound-ids?$7575$1nosrN g$lhs*$8407$1nosrN)
                         (g$bless$7811$1nosrN
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8407$1nosrN
                                 (cons g$b$8409$1nosrN g$b*$8410$1nosrN)))
                             g$rhs*$8408$1nosrN))
                         (g$invalid-fmls-error$7813$1nosrN
                           g$stx$8404$1nosrN
                           g$lhs*$8407$1nosrN))))
                    g$ls/false$8406$1nosrN)
                  ((case-lambda
                     ((g$t$8411$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8412$1nosrN)
                          (if (if g$ls/false$8412$1nosrN
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8413$1nosrN
                                         g$lhs*$8414$1nosrN
                                         g$rhs*$8415$1nosrN
                                         g$b$8416$1nosrN
                                         g$b*$8417$1nosrN)
                                       (g$id?$7570$1nosrN g$f$8413$1nosrN)))
                                    g$ls/false$8412$1nosrN))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8418$1nosrN
                                   g$lhs*$8419$1nosrN
                                   g$rhs*$8420$1nosrN
                                   g$b$8421$1nosrN
                                   g$b*$8422$1nosrN)
                                 (if (g$valid-bound-ids?$7575$1nosrN
                                       g$lhs*$8419$1nosrN)
                                   (g$bless$7811$1nosrN
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8418$1nosrN
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8419$1nosrN
                                                 (cons
                                                   g$b$8421$1nosrN
                                                   g$b*$8422$1nosrN)))))
                                         g$f$8418$1nosrN)
                                       g$rhs*$8420$1nosrN))
                                   (g$invalid-fmls-error$7813$1nosrN
                                     g$stx$8404$1nosrN
                                     g$lhs*$8419$1nosrN))))
                              g$ls/false$8412$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$8411$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$8411$1nosrN
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8405$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8405$1nosrN
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8404$1nosrN))))
   (g$let-values-macro$7815$1nosrN
     g$let-values-macro$11261$1nosrN
     (case-lambda
       ((g$stx$8423$1nosrN)
        (letrec* ((g$rename$8424$1nosrN
                    (case-lambda
                      ((g$x$8475$1nosrN g$old*$8476$1nosrN g$new*$8477$1nosrN)
                       (begin
                         (if (not (g$id?$7570$1nosrN g$x$8475$1nosrN))
                           (g$syntax-violation$7959$1nosrN
                             '#f
                             '"not an indentifier"
                             g$stx$8423$1nosrN
                             g$x$8475$1nosrN)
                           (void))
                         (if (g$bound-id-member?$7577$1nosrN
                               g$x$8475$1nosrN
                               g$old*$8476$1nosrN)
                           (g$syntax-violation$7959$1nosrN
                             '#f
                             '"duplicate binding"
                             g$stx$8423$1nosrN
                             g$x$8475$1nosrN)
                           (void))
                         ((case-lambda
                            ((g$y$8478$1nosrN)
                             (values
                               g$y$8478$1nosrN
                               (cons g$x$8475$1nosrN g$old*$8476$1nosrN)
                               (cons g$y$8478$1nosrN g$new*$8477$1nosrN))))
                          (gensym
                            (g$syntax->datum$7962$1nosrN g$x$8475$1nosrN)))))))
                  (g$rename*$8425$1nosrN
                    (case-lambda
                      ((g$x*$8466$1nosrN g$old*$8467$1nosrN g$new*$8468$1nosrN)
                       (if (null? g$x*$8466$1nosrN)
                         (values '() g$old*$8467$1nosrN g$new*$8468$1nosrN)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8424$1nosrN
                                (car g$x*$8466$1nosrN)
                                g$old*$8467$1nosrN
                                g$new*$8468$1nosrN)))
                           (case-lambda
                             ((g$x$8469$1nosrN
                                g$old*$8470$1nosrN
                                g$new*$8471$1nosrN)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8425$1nosrN
                                     (cdr g$x*$8466$1nosrN)
                                     g$old*$8470$1nosrN
                                     g$new*$8471$1nosrN)))
                                (case-lambda
                                  ((g$x*$8472$1nosrN
                                     g$old*$8473$1nosrN
                                     g$new*$8474$1nosrN)
                                   (values
                                     (cons g$x$8469$1nosrN g$x*$8472$1nosrN)
                                     g$old*$8473$1nosrN
                                     g$new*$8474$1nosrN))))))))))))
          ((case-lambda
             ((g$t$8426$1nosrN)
              ((case-lambda
                 ((g$ls/false$8427$1nosrN)
                  (if g$ls/false$8427$1nosrN
                    (apply
                      (case-lambda
                        ((g$b$8428$1nosrN g$b*$8429$1nosrN)
                         (g$cons*$5700$1nosrN
                           (g$bless$7811$1nosrN 'let)
                           '()
                           g$b$8428$1nosrN
                           g$b*$8429$1nosrN)))
                      g$ls/false$8427$1nosrN)
                    ((case-lambda
                       ((g$t$8430$1nosrN)
                        ((case-lambda
                           ((g$ls/false$8431$1nosrN)
                            (if g$ls/false$8431$1nosrN
                              (apply
                                (case-lambda
                                  ((g$lhs*$8432$1nosrN
                                     g$rhs*$8433$1nosrN
                                     g$b$8434$1nosrN
                                     g$b*$8435$1nosrN)
                                   (g$bless$7811$1nosrN
                                     ((letrec ((g$f$8436$1nosrN
                                                 (case-lambda
                                                   ((g$lhs*$8437$1nosrN
                                                      g$rhs*$8438$1nosrN
                                                      g$old*$8439$1nosrN
                                                      g$new*$8440$1nosrN)
                                                    (if (null?
                                                          g$lhs*$8437$1nosrN)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8439$1nosrN
                                                               g$new*$8440$1nosrN)
                                                          (cons
                                                            g$b$8434$1nosrN
                                                            g$b*$8435$1nosrN)))
                                                      ((case-lambda
                                                         ((g$t$8441$1nosrN)
                                                          ((case-lambda
                                                             ((g$ls/false$8442$1nosrN)
                                                              (if g$ls/false$8442$1nosrN
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8443$1nosrN)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8425$1nosrN
                                                                            g$x*$8443$1nosrN
                                                                            g$old*$8439$1nosrN
                                                                            g$new*$8440$1nosrN)))
                                                                       (case-lambda
                                                                         ((g$y*$8447$1nosrN
                                                                            g$old*$8448$1nosrN
                                                                            g$new*$8449$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$new*$8450$1nosrN
                                                                                g$old*$8451$1nosrN
                                                                                g$y*$8452$1nosrN)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8438$1nosrN))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8452$1nosrN
                                                                                  (g$f$8436$1nosrN
                                                                                    (cdr g$lhs*$8437$1nosrN)
                                                                                    (cdr g$rhs*$8438$1nosrN)
                                                                                    g$old*$8451$1nosrN
                                                                                    g$new*$8450$1nosrN)))))
                                                                           g$new*$8449$1nosrN
                                                                           g$old*$8448$1nosrN
                                                                           g$y*$8447$1nosrN))))))
                                                                  g$ls/false$8442$1nosrN)
                                                                ((case-lambda
                                                                   ((g$t$8453$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8454$1nosrN)
                                                                        (if g$ls/false$8454$1nosrN
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8455$1nosrN
                                                                                 g$x$8456$1nosrN)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8424$1nosrN
                                                                                      g$x$8456$1nosrN
                                                                                      g$old*$8439$1nosrN
                                                                                      g$new*$8440$1nosrN)))
                                                                                 (case-lambda
                                                                                   ((g$y$8457$1nosrN
                                                                                      g$old*$8458$1nosrN
                                                                                      g$new*$8459$1nosrN)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8425$1nosrN
                                                                                           g$x*$8455$1nosrN
                                                                                           g$old*$8458$1nosrN
                                                                                           g$new*$8459$1nosrN)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8460$1nosrN
                                                                                           g$old*$8461$1nosrN
                                                                                           g$new*$8462$1nosrN)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8438$1nosrN))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8460$1nosrN
                                                                                               g$y$8457$1nosrN)
                                                                                             (g$f$8436$1nosrN
                                                                                               (cdr g$lhs*$8437$1nosrN)
                                                                                               (cdr g$rhs*$8438$1nosrN)
                                                                                               g$old*$8461$1nosrN
                                                                                               g$new*$8462$1nosrN)))))))))))
                                                                            g$ls/false$8454$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$t$8463$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8464$1nosrN)
                                                                                  (if g$ls/false$8464$1nosrN
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8465$1nosrN)
                                                                                         (g$syntax-violation$7959$1nosrN
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8423$1nosrN
                                                                                           g$others$8465$1nosrN)))
                                                                                      g$ls/false$8464$1nosrN)
                                                                                    (g$syntax-violation$7959$1nosrN
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8463$1nosrN))))
                                                                               (g$syntax-dispatch$7848$1nosrN
                                                                                 g$t$8463$1nosrN
                                                                                 'any))))
                                                                           g$t$8453$1nosrN))))
                                                                     (g$syntax-dispatch$7848$1nosrN
                                                                       g$t$8453$1nosrN
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8441$1nosrN))))
                                                           (g$syntax-dispatch$7848$1nosrN
                                                             g$t$8441$1nosrN
                                                             'each-any))))
                                                       (car g$lhs*$8437$1nosrN)))))))
                                        g$f$8436$1nosrN)
                                      g$lhs*$8432$1nosrN
                                      g$rhs*$8433$1nosrN
                                      '()
                                      '()))))
                                g$ls/false$8431$1nosrN)
                              (g$syntax-violation$7959$1nosrN
                                '#f
                                '"invalid syntax"
                                g$t$8430$1nosrN))))
                         (g$syntax-dispatch$7848$1nosrN
                           g$t$8430$1nosrN
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8426$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$8426$1nosrN
                 '(_ () any . each-any)))))
           g$stx$8423$1nosrN)))))
   (g$let*-values-macro$7816$1nosrN
     g$let*-values-macro$11262$1nosrN
     (case-lambda
       ((g$stx$8479$1nosrN)
        (letrec* ((g$check$8480$1nosrN
                    (case-lambda
                      ((g$x*$8504$1nosrN)
                       (if (not (null? g$x*$8504$1nosrN))
                         ((case-lambda
                            ((g$x$8505$1nosrN)
                             (begin
                               (if (not (g$id?$7570$1nosrN g$x$8505$1nosrN))
                                 (g$syntax-violation$7959$1nosrN
                                   '#f
                                   '"not an identifier"
                                   g$stx$8479$1nosrN
                                   g$x$8505$1nosrN)
                                 (void))
                               (g$check$8480$1nosrN (cdr g$x*$8504$1nosrN))
                               (if (g$bound-id-member?$7577$1nosrN
                                     g$x$8505$1nosrN
                                     (cdr g$x*$8504$1nosrN))
                                 (g$syntax-violation$7959$1nosrN
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8479$1nosrN
                                   g$x$8505$1nosrN)
                                 (void)))))
                          (car g$x*$8504$1nosrN))
                         (void))))))
          ((case-lambda
             ((g$t$8481$1nosrN)
              ((case-lambda
                 ((g$ls/false$8482$1nosrN)
                  (if g$ls/false$8482$1nosrN
                    (apply
                      (case-lambda
                        ((g$b$8483$1nosrN g$b*$8484$1nosrN)
                         (g$cons*$5700$1nosrN
                           (g$bless$7811$1nosrN 'let)
                           '()
                           g$b$8483$1nosrN
                           g$b*$8484$1nosrN)))
                      g$ls/false$8482$1nosrN)
                    ((case-lambda
                       ((g$t$8485$1nosrN)
                        ((case-lambda
                           ((g$ls/false$8486$1nosrN)
                            (if g$ls/false$8486$1nosrN
                              (apply
                                (case-lambda
                                  ((g$lhs*$8487$1nosrN
                                     g$rhs*$8488$1nosrN
                                     g$b$8489$1nosrN
                                     g$b*$8490$1nosrN)
                                   (g$bless$7811$1nosrN
                                     ((letrec ((g$f$8491$1nosrN
                                                 (case-lambda
                                                   ((g$lhs*$8492$1nosrN
                                                      g$rhs*$8493$1nosrN)
                                                    (if (null?
                                                          g$lhs*$8492$1nosrN)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8489$1nosrN
                                                          g$b*$8490$1nosrN))
                                                      ((case-lambda
                                                         ((g$t$8494$1nosrN)
                                                          ((case-lambda
                                                             ((g$ls/false$8495$1nosrN)
                                                              (if g$ls/false$8495$1nosrN
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8496$1nosrN)
                                                                     (begin
                                                                       (g$check$8480$1nosrN
                                                                         g$x*$8496$1nosrN)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8493$1nosrN))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8496$1nosrN
                                                                           (g$f$8491$1nosrN
                                                                             (cdr g$lhs*$8492$1nosrN)
                                                                             (cdr g$rhs*$8493$1nosrN)))))))
                                                                  g$ls/false$8495$1nosrN)
                                                                ((case-lambda
                                                                   ((g$t$8497$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8498$1nosrN)
                                                                        (if g$ls/false$8498$1nosrN
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8499$1nosrN
                                                                                 g$x$8500$1nosrN)
                                                                               (begin
                                                                                 (g$check$8480$1nosrN
                                                                                   (cons
                                                                                     g$x$8500$1nosrN
                                                                                     g$x*$8499$1nosrN))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8493$1nosrN))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8499$1nosrN
                                                                                       g$x$8500$1nosrN)
                                                                                     (g$f$8491$1nosrN
                                                                                       (cdr g$lhs*$8492$1nosrN)
                                                                                       (cdr g$rhs*$8493$1nosrN)))))))
                                                                            g$ls/false$8498$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$t$8501$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8502$1nosrN)
                                                                                  (if g$ls/false$8502$1nosrN
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8503$1nosrN)
                                                                                         (g$syntax-violation$7959$1nosrN
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8479$1nosrN
                                                                                           g$others$8503$1nosrN)))
                                                                                      g$ls/false$8502$1nosrN)
                                                                                    (g$syntax-violation$7959$1nosrN
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8501$1nosrN))))
                                                                               (g$syntax-dispatch$7848$1nosrN
                                                                                 g$t$8501$1nosrN
                                                                                 'any))))
                                                                           g$t$8497$1nosrN))))
                                                                     (g$syntax-dispatch$7848$1nosrN
                                                                       g$t$8497$1nosrN
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8494$1nosrN))))
                                                           (g$syntax-dispatch$7848$1nosrN
                                                             g$t$8494$1nosrN
                                                             'each-any))))
                                                       (car g$lhs*$8492$1nosrN)))))))
                                        g$f$8491$1nosrN)
                                      g$lhs*$8487$1nosrN
                                      g$rhs*$8488$1nosrN))))
                                g$ls/false$8486$1nosrN)
                              (g$syntax-violation$7959$1nosrN
                                '#f
                                '"invalid syntax"
                                g$t$8485$1nosrN))))
                         (g$syntax-dispatch$7848$1nosrN
                           g$t$8485$1nosrN
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8481$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$8481$1nosrN
                 '(_ () any . each-any)))))
           g$stx$8479$1nosrN)))))
   (g$trace-lambda-macro$7817$1nosrN
     g$trace-lambda-macro$11263$1nosrN
     (case-lambda
       ((g$stx$8506$1nosrN)
        ((case-lambda
           ((g$t$8507$1nosrN)
            ((case-lambda
               ((g$ls/false$8508$1nosrN)
                (if g$ls/false$8508$1nosrN
                  (apply
                    (case-lambda
                      ((g$who$8509$1nosrN
                         g$fmls$8510$1nosrN
                         g$b$8511$1nosrN
                         g$b*$8512$1nosrN)
                       (if (g$valid-bound-ids?$7575$1nosrN g$fmls$8510$1nosrN)
                         (g$bless$7811$1nosrN
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8509$1nosrN)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8510$1nosrN
                                 (cons g$b$8511$1nosrN g$b*$8512$1nosrN)))))
                         (g$invalid-fmls-error$7813$1nosrN
                           g$stx$8506$1nosrN
                           g$fmls$8510$1nosrN))))
                    g$ls/false$8508$1nosrN)
                  ((case-lambda
                     ((g$t$8513$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8514$1nosrN)
                          (if g$ls/false$8514$1nosrN
                            (apply
                              (case-lambda
                                ((g$who$8515$1nosrN
                                   g$fmls$8516$1nosrN
                                   g$last$8517$1nosrN
                                   g$b$8518$1nosrN
                                   g$b*$8519$1nosrN)
                                 (if (g$valid-bound-ids?$7575$1nosrN
                                       (cons
                                         g$last$8517$1nosrN
                                         g$fmls$8516$1nosrN))
                                   (g$bless$7811$1nosrN
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8515$1nosrN)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8516$1nosrN
                                             g$last$8517$1nosrN)
                                           (cons
                                             g$b$8518$1nosrN
                                             g$b*$8519$1nosrN)))))
                                   (g$invalid-fmls-error$7813$1nosrN
                                     g$stx$8506$1nosrN
                                     (append
                                       g$fmls$8516$1nosrN
                                       g$last$8517$1nosrN)))))
                              g$ls/false$8514$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$8513$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$8513$1nosrN
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8507$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8507$1nosrN
               '(_ any each-any any . each-any)))))
         g$stx$8506$1nosrN))))
   (g$trace-define-macro$7818$1nosrN
     g$trace-define-macro$11264$1nosrN
     (case-lambda
       ((g$stx$8520$1nosrN)
        ((case-lambda
           ((g$t$8521$1nosrN)
            ((case-lambda
               ((g$ls/false$8522$1nosrN)
                (if g$ls/false$8522$1nosrN
                  (apply
                    (case-lambda
                      ((g$who$8523$1nosrN
                         g$fmls$8524$1nosrN
                         g$b$8525$1nosrN
                         g$b*$8526$1nosrN)
                       (if (g$valid-bound-ids?$7575$1nosrN g$fmls$8524$1nosrN)
                         (g$bless$7811$1nosrN
                           (list
                             'define
                             g$who$8523$1nosrN
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8523$1nosrN)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8524$1nosrN
                                   (cons g$b$8525$1nosrN g$b*$8526$1nosrN))))))
                         (g$invalid-fmls-error$7813$1nosrN
                           g$stx$8520$1nosrN
                           g$fmls$8524$1nosrN))))
                    g$ls/false$8522$1nosrN)
                  ((case-lambda
                     ((g$t$8527$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8528$1nosrN)
                          (if g$ls/false$8528$1nosrN
                            (apply
                              (case-lambda
                                ((g$who$8529$1nosrN
                                   g$fmls$8530$1nosrN
                                   g$last$8531$1nosrN
                                   g$b$8532$1nosrN
                                   g$b*$8533$1nosrN)
                                 (if (g$valid-bound-ids?$7575$1nosrN
                                       (cons
                                         g$last$8531$1nosrN
                                         g$fmls$8530$1nosrN))
                                   (g$bless$7811$1nosrN
                                     (list
                                       'define
                                       g$who$8529$1nosrN
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8529$1nosrN)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8530$1nosrN
                                               g$last$8531$1nosrN)
                                             (cons
                                               g$b$8532$1nosrN
                                               g$b*$8533$1nosrN))))))
                                   (g$invalid-fmls-error$7813$1nosrN
                                     g$stx$8520$1nosrN
                                     (append
                                       g$fmls$8530$1nosrN
                                       g$last$8531$1nosrN)))))
                              g$ls/false$8528$1nosrN)
                            ((case-lambda
                               ((g$t$8534$1nosrN)
                                ((case-lambda
                                   ((g$ls/false$8535$1nosrN)
                                    (if g$ls/false$8535$1nosrN
                                      (apply
                                        (case-lambda
                                          ((g$who$8536$1nosrN
                                             g$expr$8537$1nosrN)
                                           (if (g$id?$7570$1nosrN
                                                 g$who$8536$1nosrN)
                                             (g$bless$7811$1nosrN
                                               (list
                                                 'define
                                                 g$who$8536$1nosrN
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8537$1nosrN))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8536$1nosrN)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7959$1nosrN
                                               '#f
                                               '"invalid name"
                                               g$stx$8520$1nosrN))))
                                        g$ls/false$8535$1nosrN)
                                      (g$syntax-violation$7959$1nosrN
                                        '#f
                                        '"invalid syntax"
                                        g$t$8534$1nosrN))))
                                 (g$syntax-dispatch$7848$1nosrN
                                   g$t$8534$1nosrN
                                   '(_ any any)))))
                             g$t$8527$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$8527$1nosrN
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8521$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8521$1nosrN
               '(_ (any . each-any) any . each-any)))))
         g$stx$8520$1nosrN))))
   (g$trace-define-syntax-macro$7819$1nosrN
     g$trace-define-syntax-macro$11265$1nosrN
     (case-lambda
       ((g$stx$8538$1nosrN)
        ((case-lambda
           ((g$t$8539$1nosrN)
            ((case-lambda
               ((g$ls/false$8540$1nosrN)
                (if g$ls/false$8540$1nosrN
                  (apply
                    (case-lambda
                      ((g$who$8541$1nosrN g$expr$8542$1nosrN)
                       (if (g$id?$7570$1nosrN g$who$8541$1nosrN)
                         (g$bless$7811$1nosrN
                           (list
                             'define-syntax
                             g$who$8541$1nosrN
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8541$1nosrN)
                               g$expr$8542$1nosrN)))
                         (g$syntax-violation$7959$1nosrN
                           '#f
                           '"invalid name"
                           g$stx$8538$1nosrN))))
                    g$ls/false$8540$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8539$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8539$1nosrN '(_ any any)))))
         g$stx$8538$1nosrN))))
   (g$trace-let/rec-syntax$7820$1nosrN
     g$trace-let/rec-syntax$11266$1nosrN
     (case-lambda
       ((g$who$8543$1nosrN)
        (case-lambda
          ((g$stx$8544$1nosrN)
           ((case-lambda
              ((g$t$8545$1nosrN)
               ((case-lambda
                  ((g$ls/false$8546$1nosrN)
                   (if g$ls/false$8546$1nosrN
                     (apply
                       (case-lambda
                         ((g$lhs*$8547$1nosrN
                            g$rhs*$8548$1nosrN
                            g$b$8549$1nosrN
                            g$b*$8550$1nosrN)
                          (if (g$valid-bound-ids?$7575$1nosrN
                                g$lhs*$8547$1nosrN)
                            ((case-lambda
                               ((g$rhs*$8551$1nosrN)
                                (g$bless$7811$1nosrN
                                  (cons
                                    g$who$8543$1nosrN
                                    (cons
                                      (map list
                                           g$lhs*$8547$1nosrN
                                           g$rhs*$8551$1nosrN)
                                      (cons
                                        g$b$8549$1nosrN
                                        g$b*$8550$1nosrN))))))
                             (map (case-lambda
                                    ((g$lhs$8552$1nosrN g$rhs$8553$1nosrN)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8552$1nosrN)
                                       g$rhs$8553$1nosrN)))
                                  g$lhs*$8547$1nosrN
                                  g$rhs*$8548$1nosrN))
                            (g$invalid-fmls-error$7813$1nosrN
                              g$stx$8544$1nosrN
                              g$lhs*$8547$1nosrN))))
                       g$ls/false$8546$1nosrN)
                     (g$syntax-violation$7959$1nosrN
                       '#f
                       '"invalid syntax"
                       g$t$8545$1nosrN))))
                (g$syntax-dispatch$7848$1nosrN
                  g$t$8545$1nosrN
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8544$1nosrN))))))
   (g$trace-let-syntax-macro$7821$1nosrN
     g$trace-let-syntax-macro$11267$1nosrN
     (g$trace-let/rec-syntax$7820$1nosrN 'let-syntax))
   (g$trace-letrec-syntax-macro$7822$1nosrN
     g$trace-letrec-syntax-macro$11268$1nosrN
     (g$trace-let/rec-syntax$7820$1nosrN 'letrec-syntax))
   (g$guard-macro$7823$1nosrN
     g$guard-macro$11269$1nosrN
     (case-lambda
       ((g$x$8554$1nosrN)
        (letrec* ((g$gen-clauses$8555$1nosrN
                    (case-lambda
                      ((g$con$8567$1nosrN
                         g$outerk$8568$1nosrN
                         g$clause*$8569$1nosrN)
                       (letrec* ((g$f$8570$1nosrN
                                   (case-lambda
                                     ((g$x$8598$1nosrN g$k$8599$1nosrN)
                                      ((case-lambda
                                         ((g$t$8600$1nosrN)
                                          ((case-lambda
                                             ((g$ls/false$8601$1nosrN)
                                              (if g$ls/false$8601$1nosrN
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8602$1nosrN
                                                       g$p$8603$1nosrN)
                                                     ((case-lambda
                                                        ((g$t$8604$1nosrN)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8604$1nosrN
                                                               g$e$8602$1nosrN))
                                                           (list
                                                             'if
                                                             g$t$8604$1nosrN
                                                             (list
                                                               g$p$8603$1nosrN
                                                               g$t$8604$1nosrN)
                                                             g$k$8599$1nosrN))))
                                                      (gensym))))
                                                  g$ls/false$8601$1nosrN)
                                                ((case-lambda
                                                   ((g$t$8605$1nosrN)
                                                    ((case-lambda
                                                       ((g$ls/false$8606$1nosrN)
                                                        (if g$ls/false$8606$1nosrN
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8607$1nosrN)
                                                               ((case-lambda
                                                                  ((g$t$8608$1nosrN)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8608$1nosrN
                                                                         g$e$8607$1nosrN))
                                                                     (list
                                                                       'if
                                                                       g$t$8608$1nosrN
                                                                       g$t$8608$1nosrN
                                                                       g$k$8599$1nosrN))))
                                                                (gensym))))
                                                            g$ls/false$8606$1nosrN)
                                                          ((case-lambda
                                                             ((g$t$8609$1nosrN)
                                                              ((case-lambda
                                                                 ((g$ls/false$8610$1nosrN)
                                                                  (if g$ls/false$8610$1nosrN
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8611$1nosrN
                                                                           g$v$8612$1nosrN
                                                                           g$v*$8613$1nosrN)
                                                                         (list
                                                                           'if
                                                                           g$e$8611$1nosrN
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8612$1nosrN
                                                                               g$v*$8613$1nosrN))
                                                                           g$k$8599$1nosrN)))
                                                                      g$ls/false$8610$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$t$8614$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8615$1nosrN)
                                                                            (if g$ls/false$8615$1nosrN
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7959$1nosrN
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8598$1nosrN)))
                                                                                g$ls/false$8615$1nosrN)
                                                                              (g$syntax-violation$7959$1nosrN
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8614$1nosrN))))
                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                           g$t$8614$1nosrN
                                                                           '_))))
                                                                     g$t$8609$1nosrN))))
                                                               (g$syntax-dispatch$7848$1nosrN
                                                                 g$t$8609$1nosrN
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8605$1nosrN))))
                                                     (g$syntax-dispatch$7848$1nosrN
                                                       g$t$8605$1nosrN
                                                       '(any)))))
                                                 g$t$8600$1nosrN))))
                                           (g$syntax-dispatch$7848$1nosrN
                                             g$t$8600$1nosrN
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8598$1nosrN))))
                                 (g$f*$8571$1nosrN
                                   (case-lambda
                                     ((g$x*$8578$1nosrN)
                                      ((case-lambda
                                         ((g$t$8579$1nosrN)
                                          ((case-lambda
                                             ((g$ls/false$8580$1nosrN)
                                              (if g$ls/false$8580$1nosrN
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8567$1nosrN)
                                                       '#t)))
                                                  g$ls/false$8580$1nosrN)
                                                ((case-lambda
                                                   ((g$t$8581$1nosrN)
                                                    ((case-lambda
                                                       ((g$ls/false$8582$1nosrN)
                                                        (if g$ls/false$8582$1nosrN
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8583$1nosrN
                                                                 g$e*$8584$1nosrN)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8583$1nosrN
                                                                     g$e*$8584$1nosrN))
                                                                 '#f)))
                                                            g$ls/false$8582$1nosrN)
                                                          ((case-lambda
                                                             ((g$t$8585$1nosrN)
                                                              ((case-lambda
                                                                 ((g$ls/false$8586$1nosrN)
                                                                  (if g$ls/false$8586$1nosrN
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8587$1nosrN
                                                                           g$cls*$8588$1nosrN)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8571$1nosrN
                                                                                g$cls*$8588$1nosrN)))
                                                                           (case-lambda
                                                                             ((g$e$8591$1nosrN
                                                                                g$g$8592$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$g$8593$1nosrN
                                                                                    g$e$8594$1nosrN)
                                                                                  (values
                                                                                    (g$f$8570$1nosrN
                                                                                      g$cls$8587$1nosrN
                                                                                      g$e$8594$1nosrN)
                                                                                    g$g$8593$1nosrN)))
                                                                               g$g$8592$1nosrN
                                                                               g$e$8591$1nosrN))))))
                                                                      g$ls/false$8586$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$t$8595$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8596$1nosrN)
                                                                            (if g$ls/false$8596$1nosrN
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8597$1nosrN)
                                                                                   (g$syntax-violation$7959$1nosrN
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8597$1nosrN)))
                                                                                g$ls/false$8596$1nosrN)
                                                                              (g$syntax-violation$7959$1nosrN
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8595$1nosrN))))
                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                           g$t$8595$1nosrN
                                                                           'any))))
                                                                     g$t$8585$1nosrN))))
                                                               (g$syntax-dispatch$7848$1nosrN
                                                                 g$t$8585$1nosrN
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8581$1nosrN))))
                                                     (g$syntax-dispatch$7848$1nosrN
                                                       g$t$8581$1nosrN
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8579$1nosrN))))
                                           (g$syntax-dispatch$7848$1nosrN
                                             g$t$8579$1nosrN
                                             '()))))
                                       g$x*$8578$1nosrN)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8571$1nosrN g$clause*$8569$1nosrN)))
                           (case-lambda
                             ((g$code$8574$1nosrN g$raisek$8575$1nosrN)
                              ((case-lambda
                                 ((g$raisek$8576$1nosrN g$code$8577$1nosrN)
                                  (if g$raisek$8576$1nosrN
                                    (list
                                      g$outerk$8568$1nosrN
                                      g$code$8577$1nosrN)
                                    g$code$8577$1nosrN)))
                               g$raisek$8575$1nosrN
                               g$code$8574$1nosrN)))))))))
          ((case-lambda
             ((g$t$8556$1nosrN)
              ((case-lambda
                 ((g$ls/false$8557$1nosrN)
                  (if (if g$ls/false$8557$1nosrN
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8558$1nosrN
                                 g$clause*$8559$1nosrN
                                 g$b$8560$1nosrN
                                 g$b*$8561$1nosrN)
                               (g$id?$7570$1nosrN g$con$8558$1nosrN)))
                            g$ls/false$8557$1nosrN))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8562$1nosrN
                           g$clause*$8563$1nosrN
                           g$b$8564$1nosrN
                           g$b*$8565$1nosrN)
                         ((case-lambda
                            ((g$outerk$8566$1nosrN)
                             (g$bless$7811$1nosrN
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8566$1nosrN)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8562$1nosrN)
                                           (g$gen-clauses$8555$1nosrN
                                             g$con$8562$1nosrN
                                             g$outerk$8566$1nosrN
                                             g$clause*$8563$1nosrN))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8564$1nosrN
                                                 g$b*$8565$1nosrN))))))))))))
                          (gensym))))
                      g$ls/false$8557$1nosrN)
                    (g$syntax-violation$7959$1nosrN
                      '#f
                      '"invalid syntax"
                      g$t$8556$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$8556$1nosrN
                 '(_ (any . each-any) any . each-any)))))
           g$x$8554$1nosrN)))))
   (g$define-enumeration-macro$7824$1nosrN
     g$define-enumeration-macro$11270$1nosrN
     (case-lambda
       ((g$stx$8616$1nosrN)
        (letrec* ((g$set?$8617$1nosrN
                    (case-lambda
                      ((g$x$8630$1nosrN)
                       ((case-lambda
                          ((g$t$8631$1nosrN)
                           (if g$t$8631$1nosrN
                             g$t$8631$1nosrN
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8630$1nosrN)
                                          (cdr g$x$8630$1nosrN)))
                                 (begin
                                   '#f
                                   (g$set?$8617$1nosrN (cdr g$x$8630$1nosrN)))
                                 '#f)))))
                        (null? g$x$8630$1nosrN)))))
                  (g$remove-dups$8618$1nosrN
                    (case-lambda
                      ((g$ls$8629$1nosrN)
                       (if (null? g$ls$8629$1nosrN)
                         '()
                         (cons
                           (car g$ls$8629$1nosrN)
                           (g$remove-dups$8618$1nosrN
                             (g$remq$5705$1nosrN
                               (car g$ls$8629$1nosrN)
                               (cdr g$ls$8629$1nosrN)))))))))
          ((case-lambda
             ((g$t$8619$1nosrN)
              ((case-lambda
                 ((g$ls/false$8620$1nosrN)
                  (if (if g$ls/false$8620$1nosrN
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8621$1nosrN
                                 g$id*$8622$1nosrN
                                 g$maker$8623$1nosrN)
                               (if (g$id?$7570$1nosrN g$name$8621$1nosrN)
                                 (if (g$id?$7570$1nosrN g$maker$8623$1nosrN)
                                   (begin
                                     '#f
                                     (g$for-all$5698$1nosrN
                                       g$id?$7570$1nosrN
                                       g$id*$8622$1nosrN))
                                   '#f)
                                 '#f)))
                            g$ls/false$8620$1nosrN))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8624$1nosrN
                           g$id*$8625$1nosrN
                           g$maker$8626$1nosrN)
                         ((case-lambda
                            ((g$name*$8627$1nosrN g$mk$8628$1nosrN)
                             (g$bless$7811$1nosrN
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8628$1nosrN
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8627$1nosrN))))
                                 (list
                                   'define-syntax
                                   g$name$8624$1nosrN
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8627$1nosrN))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8624$1nosrN)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8626$1nosrN
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8626$1nosrN)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8627$1nosrN))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8626$1nosrN)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8628$1nosrN
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8618$1nosrN
                            (g$syntax->datum$7962$1nosrN g$id*$8625$1nosrN))
                          (gensym))))
                      g$ls/false$8620$1nosrN)
                    (g$syntax-violation$7959$1nosrN
                      '#f
                      '"invalid syntax"
                      g$t$8619$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$8619$1nosrN
                 '(_ any each-any any)))))
           g$stx$8616$1nosrN)))))
   (g$time-macro$7825$1nosrN
     g$time-macro$11271$1nosrN
     (case-lambda
       ((g$stx$8632$1nosrN)
        ((case-lambda
           ((g$t$8633$1nosrN)
            ((case-lambda
               ((g$ls/false$8634$1nosrN)
                (if g$ls/false$8634$1nosrN
                  (apply
                    (case-lambda
                      ((g$expr$8635$1nosrN)
                       ((case-lambda
                          ((g$str$8636$1nosrN)
                           (g$bless$7811$1nosrN
                             (list
                               'time-it
                               g$str$8636$1nosrN
                               (list 'lambda '() g$expr$8635$1nosrN)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6547$1nosrN)))
                          (case-lambda
                            ((g$p$8639$1nosrN g$e$8640$1nosrN)
                             ((case-lambda
                                ((g$e$8641$1nosrN g$p$8642$1nosrN)
                                 (begin
                                   (write
                                     (g$syntax->datum$7962$1nosrN
                                       g$expr$8635$1nosrN)
                                     g$p$8642$1nosrN)
                                   (g$e$8641$1nosrN))))
                              g$e$8640$1nosrN
                              g$p$8639$1nosrN)))))))
                    g$ls/false$8634$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8633$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8633$1nosrN '(_ any)))))
         g$stx$8632$1nosrN))))
   (g$delay-macro$7826$1nosrN
     g$delay-macro$11272$1nosrN
     (case-lambda
       ((g$stx$8643$1nosrN)
        ((case-lambda
           ((g$t$8644$1nosrN)
            ((case-lambda
               ((g$ls/false$8645$1nosrN)
                (if g$ls/false$8645$1nosrN
                  (apply
                    (case-lambda
                      ((g$expr$8646$1nosrN)
                       (g$bless$7811$1nosrN
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8646$1nosrN)))))
                    g$ls/false$8645$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8644$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8644$1nosrN '(_ any)))))
         g$stx$8643$1nosrN))))
   (g$assert-macro$7827$1nosrN
     g$assert-macro$11273$1nosrN
     (case-lambda
       ((g$stx$8647$1nosrN)
        ((case-lambda
           ((g$t$8648$1nosrN)
            ((case-lambda
               ((g$ls/false$8649$1nosrN)
                (if g$ls/false$8649$1nosrN
                  (apply
                    (case-lambda
                      ((g$expr$8650$1nosrN)
                       ((case-lambda
                          ((g$pos$8651$1nosrN)
                           (g$bless$7811$1nosrN
                             (list
                               'unless
                               g$expr$8650$1nosrN
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8650$1nosrN)
                                 (list 'quote g$pos$8651$1nosrN))))))
                        ((case-lambda
                           ((g$t$8652$1nosrN)
                            (if g$t$8652$1nosrN
                              g$t$8652$1nosrN
                              (begin
                                '#f
                                (g$expression-position$7954$1nosrN
                                  g$expr$8650$1nosrN)))))
                         (g$expression-position$7954$1nosrN
                           g$stx$8647$1nosrN)))))
                    g$ls/false$8649$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8648$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8648$1nosrN '(_ any)))))
         g$stx$8647$1nosrN))))
   (g$endianness-macro$7828$1nosrN
     g$endianness-macro$11274$1nosrN
     (case-lambda
       ((g$stx$8653$1nosrN)
        ((case-lambda
           ((g$t$8654$1nosrN)
            ((case-lambda
               ((g$ls/false$8655$1nosrN)
                (if g$ls/false$8655$1nosrN
                  (apply
                    (case-lambda
                      ((g$e$8656$1nosrN)
                       ((case-lambda
                          ((g$t$8657$1nosrN)
                           (if (memv g$t$8657$1nosrN '(little))
                             (g$bless$7811$1nosrN ''little)
                             (if (memv g$t$8657$1nosrN '(big))
                               (g$bless$7811$1nosrN ''big)
                               (g$syntax-violation$7959$1nosrN
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8653$1nosrN)))))
                        (g$syntax->datum$7962$1nosrN g$e$8656$1nosrN))))
                    g$ls/false$8655$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8654$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8654$1nosrN '(_ any)))))
         g$stx$8653$1nosrN))))
   (g$identifier-syntax-macro$7829$1nosrN
     g$identifier-syntax-macro$11275$1nosrN
     (case-lambda
       ((g$stx$8658$1nosrN)
        ((case-lambda
           ((g$t$8659$1nosrN)
            ((case-lambda
               ((g$ls/false$8660$1nosrN)
                (if g$ls/false$8660$1nosrN
                  (apply
                    (case-lambda
                      ((g$expr$8661$1nosrN)
                       (g$bless$7811$1nosrN
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8661$1nosrN))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8661$1nosrN)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8660$1nosrN)
                  ((case-lambda
                     ((g$t$8662$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8663$1nosrN)
                          (if (if g$ls/false$8663$1nosrN
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8664$1nosrN
                                         g$expr1$8665$1nosrN
                                         g$id2$8666$1nosrN
                                         g$expr2$8667$1nosrN
                                         g$expr3$8668$1nosrN)
                                       (if (g$id?$7570$1nosrN g$id1$8664$1nosrN)
                                         (if (g$id?$7570$1nosrN
                                               g$id2$8666$1nosrN)
                                           (begin
                                             '#f
                                             (g$id?$7570$1nosrN
                                               g$expr2$8667$1nosrN))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8663$1nosrN))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8669$1nosrN
                                   g$expr1$8670$1nosrN
                                   g$id2$8671$1nosrN
                                   g$expr2$8672$1nosrN
                                   g$expr3$8673$1nosrN)
                                 (g$bless$7811$1nosrN
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8670$1nosrN))
                                         (list
                                           (list 'set! 'id g$expr2$8672$1nosrN)
                                           (list 'syntax g$expr3$8673$1nosrN))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8670$1nosrN
                                               '(e* ...))))))))))
                              g$ls/false$8663$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$8662$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$8662$1nosrN
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8659$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8659$1nosrN '(_ any)))))
         g$stx$8658$1nosrN))))
   (g$do-macro$7830$1nosrN
     g$do-macro$11276$1nosrN
     (case-lambda
       ((g$stx$8674$1nosrN)
        (letrec* ((g$bind$8675$1nosrN
                    (case-lambda
                      ((g$x$8687$1nosrN)
                       ((case-lambda
                          ((g$t$8688$1nosrN)
                           ((case-lambda
                              ((g$ls/false$8689$1nosrN)
                               (if g$ls/false$8689$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$x$8690$1nosrN g$init$8691$1nosrN)
                                      (list
                                        g$x$8690$1nosrN
                                        g$init$8691$1nosrN
                                        g$x$8690$1nosrN)))
                                   g$ls/false$8689$1nosrN)
                                 ((case-lambda
                                    ((g$t$8692$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$8693$1nosrN)
                                         (if g$ls/false$8693$1nosrN
                                           (apply
                                             (case-lambda
                                               ((g$x$8694$1nosrN
                                                  g$init$8695$1nosrN
                                                  g$step$8696$1nosrN)
                                                (list
                                                  g$x$8694$1nosrN
                                                  g$init$8695$1nosrN
                                                  g$step$8696$1nosrN)))
                                             g$ls/false$8693$1nosrN)
                                           ((case-lambda
                                              ((g$t$8697$1nosrN)
                                               ((case-lambda
                                                  ((g$ls/false$8698$1nosrN)
                                                   (if g$ls/false$8698$1nosrN
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7959$1nosrN
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8674$1nosrN)))
                                                       g$ls/false$8698$1nosrN)
                                                     (g$syntax-violation$7959$1nosrN
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8697$1nosrN))))
                                                (g$syntax-dispatch$7848$1nosrN
                                                  g$t$8697$1nosrN
                                                  '_))))
                                            g$t$8692$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$8692$1nosrN
                                        '(any any any)))))
                                  g$t$8688$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$8688$1nosrN
                              '(any any)))))
                        g$x$8687$1nosrN)))))
          ((case-lambda
             ((g$t$8676$1nosrN)
              ((case-lambda
                 ((g$ls/false$8677$1nosrN)
                  (if g$ls/false$8677$1nosrN
                    (apply
                      (case-lambda
                        ((g$binding*$8678$1nosrN
                           g$test$8679$1nosrN
                           g$expr*$8680$1nosrN
                           g$command*$8681$1nosrN)
                         ((case-lambda
                            ((g$t$8682$1nosrN)
                             ((case-lambda
                                ((g$ls/false$8683$1nosrN)
                                 (if g$ls/false$8683$1nosrN
                                   (apply
                                     (case-lambda
                                       ((g$x*$8684$1nosrN
                                          g$init*$8685$1nosrN
                                          g$step*$8686$1nosrN)
                                        (if (g$valid-bound-ids?$7575$1nosrN
                                              g$x*$8684$1nosrN)
                                          (g$bless$7811$1nosrN
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8684$1nosrN
                                                    (list
                                                      'if
                                                      g$test$8679$1nosrN
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8680$1nosrN))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8681$1nosrN
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8686$1nosrN))))))))
                                              (cons 'loop g$init*$8685$1nosrN)))
                                          (g$syntax-violation$7959$1nosrN
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8674$1nosrN))))
                                     g$ls/false$8683$1nosrN)
                                   (g$syntax-violation$7959$1nosrN
                                     '#f
                                     '"invalid syntax"
                                     g$t$8682$1nosrN))))
                              (g$syntax-dispatch$7848$1nosrN
                                g$t$8682$1nosrN
                                '#(each (any any any))))))
                          (map g$bind$8675$1nosrN g$binding*$8678$1nosrN))))
                      g$ls/false$8677$1nosrN)
                    (g$syntax-violation$7959$1nosrN
                      '#f
                      '"invalid syntax"
                      g$t$8676$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$8676$1nosrN
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8674$1nosrN)))))
   (g$let*-macro$7831$1nosrN
     g$let*-macro$11277$1nosrN
     (case-lambda
       ((g$stx$8699$1nosrN)
        ((case-lambda
           ((g$t$8700$1nosrN)
            ((case-lambda
               ((g$ls/false$8701$1nosrN)
                (if (if g$ls/false$8701$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8702$1nosrN
                               g$rhs*$8703$1nosrN
                               g$b$8704$1nosrN
                               g$b*$8705$1nosrN)
                             (g$for-all$5698$1nosrN
                               g$id?$7570$1nosrN
                               g$lhs*$8702$1nosrN)))
                          g$ls/false$8701$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8706$1nosrN
                         g$rhs*$8707$1nosrN
                         g$b$8708$1nosrN
                         g$b*$8709$1nosrN)
                       (g$bless$7811$1nosrN
                         ((letrec ((g$f$8710$1nosrN
                                     (case-lambda
                                       ((g$x*$8711$1nosrN)
                                        (if (null? g$x*$8711$1nosrN)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8708$1nosrN
                                                g$b*$8709$1nosrN)))
                                          (list
                                            'let
                                            (list (car g$x*$8711$1nosrN))
                                            (g$f$8710$1nosrN
                                              (cdr g$x*$8711$1nosrN))))))))
                            g$f$8710$1nosrN)
                          (map list g$lhs*$8706$1nosrN g$rhs*$8707$1nosrN)))))
                    g$ls/false$8701$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8700$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8700$1nosrN
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8699$1nosrN))))
   (g$or-macro$7832$1nosrN
     g$or-macro$11278$1nosrN
     (case-lambda
       ((g$stx$8712$1nosrN)
        ((case-lambda
           ((g$t$8713$1nosrN)
            ((case-lambda
               ((g$ls/false$8714$1nosrN)
                (if g$ls/false$8714$1nosrN
                  (apply (case-lambda (() '#f)) g$ls/false$8714$1nosrN)
                  ((case-lambda
                     ((g$t$8715$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8716$1nosrN)
                          (if g$ls/false$8716$1nosrN
                            (apply
                              (case-lambda
                                ((g$e$8717$1nosrN g$e*$8718$1nosrN)
                                 (g$bless$7811$1nosrN
                                   ((letrec ((g$f$8719$1nosrN
                                               (case-lambda
                                                 ((g$e$8720$1nosrN
                                                    g$e*$8721$1nosrN)
                                                  (if (null? g$e*$8721$1nosrN)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8720$1nosrN)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8720$1nosrN))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8719$1nosrN
                                                          (car g$e*$8721$1nosrN)
                                                          (cdr g$e*$8721$1nosrN)))))))))
                                      g$f$8719$1nosrN)
                                    g$e$8717$1nosrN
                                    g$e*$8718$1nosrN))))
                              g$ls/false$8716$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$8715$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$8715$1nosrN
                         '(_ any . each-any)))))
                   g$t$8713$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8713$1nosrN '(_)))))
         g$stx$8712$1nosrN))))
   (g$and-macro$7833$1nosrN
     g$and-macro$11279$1nosrN
     (case-lambda
       ((g$stx$8722$1nosrN)
        ((case-lambda
           ((g$t$8723$1nosrN)
            ((case-lambda
               ((g$ls/false$8724$1nosrN)
                (if g$ls/false$8724$1nosrN
                  (apply (case-lambda (() '#t)) g$ls/false$8724$1nosrN)
                  ((case-lambda
                     ((g$t$8725$1nosrN)
                      ((case-lambda
                         ((g$ls/false$8726$1nosrN)
                          (if g$ls/false$8726$1nosrN
                            (apply
                              (case-lambda
                                ((g$e$8727$1nosrN g$e*$8728$1nosrN)
                                 (g$bless$7811$1nosrN
                                   ((letrec ((g$f$8729$1nosrN
                                               (case-lambda
                                                 ((g$e$8730$1nosrN
                                                    g$e*$8731$1nosrN)
                                                  (if (null? g$e*$8731$1nosrN)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8730$1nosrN)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8730$1nosrN
                                                        (cons
                                                          (g$f$8729$1nosrN
                                                            (car g$e*$8731$1nosrN)
                                                            (cdr g$e*$8731$1nosrN))
                                                          '(#f)))))))))
                                      g$f$8729$1nosrN)
                                    g$e$8727$1nosrN
                                    g$e*$8728$1nosrN))))
                              g$ls/false$8726$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$8725$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$8725$1nosrN
                         '(_ any . each-any)))))
                   g$t$8723$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8723$1nosrN '(_)))))
         g$stx$8722$1nosrN))))
   (g$cond-macro$7834$1nosrN
     g$cond-macro$11280$1nosrN
     (case-lambda
       ((g$stx$8732$1nosrN)
        ((case-lambda
           ((g$t$8733$1nosrN)
            ((case-lambda
               ((g$ls/false$8734$1nosrN)
                (if g$ls/false$8734$1nosrN
                  (apply
                    (case-lambda
                      ((g$cls$8735$1nosrN g$cls*$8736$1nosrN)
                       (g$bless$7811$1nosrN
                         ((letrec ((g$f$8737$1nosrN
                                     (case-lambda
                                       ((g$cls$8738$1nosrN g$cls*$8739$1nosrN)
                                        (if (null? g$cls*$8739$1nosrN)
                                          ((case-lambda
                                             ((g$t$8740$1nosrN)
                                              ((case-lambda
                                                 ((g$ls/false$8741$1nosrN)
                                                  (if g$ls/false$8741$1nosrN
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8742$1nosrN
                                                           g$e*$8743$1nosrN)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8742$1nosrN
                                                             g$e*$8743$1nosrN))))
                                                      g$ls/false$8741$1nosrN)
                                                    ((case-lambda
                                                       ((g$t$8744$1nosrN)
                                                        ((case-lambda
                                                           ((g$ls/false$8745$1nosrN)
                                                            (if g$ls/false$8745$1nosrN
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8746$1nosrN
                                                                     g$p$8747$1nosrN)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8746$1nosrN))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8747$1nosrN
                                                                         '(t))))))
                                                                g$ls/false$8745$1nosrN)
                                                              ((case-lambda
                                                                 ((g$t$8748$1nosrN)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8749$1nosrN)
                                                                      (if g$ls/false$8749$1nosrN
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8750$1nosrN)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8750$1nosrN
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8749$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$t$8751$1nosrN)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8752$1nosrN)
                                                                                (if g$ls/false$8752$1nosrN
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8753$1nosrN
                                                                                         g$e*$8754$1nosrN)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8753$1nosrN
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8754$1nosrN))))
                                                                                    g$ls/false$8752$1nosrN)
                                                                                  ((case-lambda
                                                                                     ((g$t$8755$1nosrN)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8756$1nosrN)
                                                                                          (if g$ls/false$8756$1nosrN
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7959$1nosrN
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8732$1nosrN)))
                                                                                              g$ls/false$8756$1nosrN)
                                                                                            (g$syntax-violation$7959$1nosrN
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8755$1nosrN))))
                                                                                       (g$syntax-dispatch$7848$1nosrN
                                                                                         g$t$8755$1nosrN
                                                                                         '_))))
                                                                                   g$t$8751$1nosrN))))
                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                               g$t$8751$1nosrN
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8748$1nosrN))))
                                                                   (g$syntax-dispatch$7848$1nosrN
                                                                     g$t$8748$1nosrN
                                                                     '(any)))))
                                                               g$t$8744$1nosrN))))
                                                         (g$syntax-dispatch$7848$1nosrN
                                                           g$t$8744$1nosrN
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8740$1nosrN))))
                                               (g$syntax-dispatch$7848$1nosrN
                                                 g$t$8740$1nosrN
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8738$1nosrN)
                                          ((case-lambda
                                             ((g$t$8757$1nosrN)
                                              ((case-lambda
                                                 ((g$ls/false$8758$1nosrN)
                                                  (if g$ls/false$8758$1nosrN
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8759$1nosrN
                                                           g$e*$8760$1nosrN)
                                                         (g$syntax-violation$7959$1nosrN
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8732$1nosrN)))
                                                      g$ls/false$8758$1nosrN)
                                                    ((case-lambda
                                                       ((g$t$8761$1nosrN)
                                                        ((case-lambda
                                                           ((g$ls/false$8762$1nosrN)
                                                            (if g$ls/false$8762$1nosrN
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8763$1nosrN
                                                                     g$p$8764$1nosrN)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8763$1nosrN))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8764$1nosrN
                                                                         '(t))
                                                                       (g$f$8737$1nosrN
                                                                         (car g$cls*$8739$1nosrN)
                                                                         (cdr g$cls*$8739$1nosrN))))))
                                                                g$ls/false$8762$1nosrN)
                                                              ((case-lambda
                                                                 ((g$t$8765$1nosrN)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8766$1nosrN)
                                                                      (if g$ls/false$8766$1nosrN
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8767$1nosrN)
                                                                             (list
                                                                               'or
                                                                               g$e$8767$1nosrN
                                                                               (g$f$8737$1nosrN
                                                                                 (car g$cls*$8739$1nosrN)
                                                                                 (cdr g$cls*$8739$1nosrN)))))
                                                                          g$ls/false$8766$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$t$8768$1nosrN)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8769$1nosrN)
                                                                                (if g$ls/false$8769$1nosrN
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8770$1nosrN
                                                                                         g$e*$8771$1nosrN)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8770$1nosrN
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8771$1nosrN)
                                                                                         (g$f$8737$1nosrN
                                                                                           (car g$cls*$8739$1nosrN)
                                                                                           (cdr g$cls*$8739$1nosrN)))))
                                                                                    g$ls/false$8769$1nosrN)
                                                                                  ((case-lambda
                                                                                     ((g$t$8772$1nosrN)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8773$1nosrN)
                                                                                          (if g$ls/false$8773$1nosrN
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7959$1nosrN
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8732$1nosrN)))
                                                                                              g$ls/false$8773$1nosrN)
                                                                                            (g$syntax-violation$7959$1nosrN
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8772$1nosrN))))
                                                                                       (g$syntax-dispatch$7848$1nosrN
                                                                                         g$t$8772$1nosrN
                                                                                         '_))))
                                                                                   g$t$8768$1nosrN))))
                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                               g$t$8768$1nosrN
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8765$1nosrN))))
                                                                   (g$syntax-dispatch$7848$1nosrN
                                                                     g$t$8765$1nosrN
                                                                     '(any)))))
                                                               g$t$8761$1nosrN))))
                                                         (g$syntax-dispatch$7848$1nosrN
                                                           g$t$8761$1nosrN
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8757$1nosrN))))
                                               (g$syntax-dispatch$7848$1nosrN
                                                 g$t$8757$1nosrN
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8738$1nosrN))))))
                            g$f$8737$1nosrN)
                          g$cls$8735$1nosrN
                          g$cls*$8736$1nosrN))))
                    g$ls/false$8734$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8733$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8733$1nosrN
               '(_ any . each-any)))))
         g$stx$8732$1nosrN))))
   (g$do-include$7835$1nosrN
     g$do-include$11281$1nosrN
     (case-lambda
       ((g$stx$8774$1nosrN g$id$8775$1nosrN g$filename$8776$1nosrN)
        ((case-lambda
           ((g$filename$8777$1nosrN)
            (begin
              (if (not (if (string? g$filename$8777$1nosrN)
                         (begin '#f (g$id?$7570$1nosrN g$id$8775$1nosrN))
                         '#f))
                (g$syntax-violation$7959$1nosrN
                  '#f
                  '"invalid syntax"
                  g$stx$8774$1nosrN)
                (void))
              (cons
                (g$bless$7811$1nosrN 'begin)
                (g$with-input-from-file$6581$1nosrN
                  g$filename$8777$1nosrN
                  (case-lambda
                    (()
                     ((letrec ((g$f$8778$1nosrN
                                 (case-lambda
                                   ((g$ls$8779$1nosrN)
                                    ((case-lambda
                                       ((g$x$8780$1nosrN)
                                        (if (eof-object? g$x$8780$1nosrN)
                                          (reverse g$ls$8779$1nosrN)
                                          (g$f$8778$1nosrN
                                            (cons
                                              (g$datum->stx$7553$1nosrN
                                                g$id$8775$1nosrN
                                                g$x$8780$1nosrN)
                                              g$ls$8779$1nosrN)))))
                                     (read-annotated))))))
                        g$f$8778$1nosrN)
                      '()))))))))
         (g$stx->datum$7581$1nosrN g$filename$8776$1nosrN)))))
   (g$include-macro$7836$1nosrN
     g$include-macro$11282$1nosrN
     (case-lambda
       ((g$e$8781$1nosrN)
        ((case-lambda
           ((g$t$8782$1nosrN)
            ((case-lambda
               ((g$ls/false$8783$1nosrN)
                (if g$ls/false$8783$1nosrN
                  (apply
                    (case-lambda
                      ((g$id$8784$1nosrN g$filename$8785$1nosrN)
                       (g$do-include$7835$1nosrN
                         g$e$8781$1nosrN
                         g$id$8784$1nosrN
                         g$filename$8785$1nosrN)))
                    g$ls/false$8783$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8782$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8782$1nosrN '(any any)))))
         g$e$8781$1nosrN))))
   (g$include-into-macro$7837$1nosrN
     g$include-into-macro$11283$1nosrN
     (case-lambda
       ((g$e$8786$1nosrN)
        ((case-lambda
           ((g$t$8787$1nosrN)
            ((case-lambda
               ((g$ls/false$8788$1nosrN)
                (if g$ls/false$8788$1nosrN
                  (apply
                    (case-lambda
                      ((g$id$8789$1nosrN g$filename$8790$1nosrN)
                       (g$do-include$7835$1nosrN
                         g$e$8786$1nosrN
                         g$id$8789$1nosrN
                         g$filename$8790$1nosrN)))
                    g$ls/false$8788$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8787$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$8787$1nosrN '(_ any any)))))
         g$e$8786$1nosrN))))
   (g$syntax-rules-macro$7838$1nosrN
     g$syntax-rules-macro$11284$1nosrN
     (case-lambda
       ((g$e$8791$1nosrN)
        ((case-lambda
           ((g$t$8792$1nosrN)
            ((case-lambda
               ((g$ls/false$8793$1nosrN)
                (if g$ls/false$8793$1nosrN
                  (apply
                    (case-lambda
                      ((g$lits$8794$1nosrN
                         g$pat*$8795$1nosrN
                         g$tmp*$8796$1nosrN)
                       (begin
                         (g$verify-literals$7851$1nosrN
                           g$lits$8794$1nosrN
                           g$e$8791$1nosrN)
                         (g$bless$7811$1nosrN
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8794$1nosrN
                                   (map (case-lambda
                                          ((g$pat$8797$1nosrN g$tmp$8798$1nosrN)
                                           ((case-lambda
                                              ((g$t$8799$1nosrN)
                                               ((case-lambda
                                                  ((g$ls/false$8800$1nosrN)
                                                   (if g$ls/false$8800$1nosrN
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8801$1nosrN)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8801$1nosrN)
                                                            (list
                                                              'syntax
                                                              g$tmp$8798$1nosrN))))
                                                       g$ls/false$8800$1nosrN)
                                                     ((case-lambda
                                                        ((g$t$8802$1nosrN)
                                                         ((case-lambda
                                                            ((g$ls/false$8803$1nosrN)
                                                             (if g$ls/false$8803$1nosrN
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7959$1nosrN
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8791$1nosrN
                                                                      g$pat$8797$1nosrN)))
                                                                 g$ls/false$8803$1nosrN)
                                                               (g$syntax-violation$7959$1nosrN
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8802$1nosrN))))
                                                          (g$syntax-dispatch$7848$1nosrN
                                                            g$t$8802$1nosrN
                                                            '_))))
                                                      g$t$8799$1nosrN))))
                                                (g$syntax-dispatch$7848$1nosrN
                                                  g$t$8799$1nosrN
                                                  '(_ . any)))))
                                            g$pat$8797$1nosrN)))
                                        g$pat*$8795$1nosrN
                                        g$tmp*$8796$1nosrN)))))))))
                    g$ls/false$8793$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$8792$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$8792$1nosrN
               '(_ each-any . #(each (any any)))))))
         g$e$8791$1nosrN))))
   (g$quasiquote-macro$7839$1nosrN
     g$quasiquote-macro$11285$1nosrN
     ((case-lambda
        (()
         (letrec* ((g$datum$8804$1nosrN
                     (case-lambda
                       ((g$x$8935$1nosrN)
                        (list
                          (g$scheme-stx$7791$1nosrN 'quote)
                          (g$mkstx$7558$1nosrN g$x$8935$1nosrN '() '() '())))))
                   (g$quasicons*$8820$1nosrN
                     (case-lambda
                       ((g$x$8931$1nosrN g$y$8932$1nosrN)
                        ((letrec ((g$f$8933$1nosrN
                                    (case-lambda
                                      ((g$x$8934$1nosrN)
                                       (if (null? g$x$8934$1nosrN)
                                         g$y$8932$1nosrN
                                         (g$quasicons$8821$1nosrN
                                           (car g$x$8934$1nosrN)
                                           (g$f$8933$1nosrN
                                             (cdr g$x$8934$1nosrN))))))))
                           g$f$8933$1nosrN)
                         g$x$8931$1nosrN))))
                   (g$quasicons$8821$1nosrN
                     (case-lambda
                       ((g$x$8912$1nosrN g$y$8913$1nosrN)
                        ((case-lambda
                           ((g$t$8914$1nosrN)
                            ((case-lambda
                               ((g$ls/false$8915$1nosrN)
                                (if g$ls/false$8915$1nosrN
                                  (apply
                                    (case-lambda
                                      ((g$dy$8916$1nosrN)
                                       ((case-lambda
                                          ((g$t$8917$1nosrN)
                                           ((case-lambda
                                              ((g$ls/false$8918$1nosrN)
                                               (if g$ls/false$8918$1nosrN
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8919$1nosrN)
                                                      (list
                                                        (g$scheme-stx$7791$1nosrN
                                                          'quote)
                                                        (cons
                                                          g$dx$8919$1nosrN
                                                          g$dy$8916$1nosrN))))
                                                   g$ls/false$8918$1nosrN)
                                                 ((case-lambda
                                                    ((g$t$8920$1nosrN)
                                                     ((case-lambda
                                                        ((g$ls/false$8921$1nosrN)
                                                         (if g$ls/false$8921$1nosrN
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8922$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8923$1nosrN)
                                                                        (if g$ls/false$8923$1nosrN
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7791$1nosrN
                                                                                   'list)
                                                                                 g$x$8912$1nosrN)))
                                                                            g$ls/false$8923$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$t$8924$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8925$1nosrN)
                                                                                  (if g$ls/false$8925$1nosrN
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7791$1nosrN
                                                                                             'cons)
                                                                                           g$x$8912$1nosrN
                                                                                           g$y$8913$1nosrN)))
                                                                                      g$ls/false$8925$1nosrN)
                                                                                    (g$syntax-violation$7959$1nosrN
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8924$1nosrN))))
                                                                               (g$syntax-dispatch$7848$1nosrN
                                                                                 g$t$8924$1nosrN
                                                                                 '_))))
                                                                           g$t$8922$1nosrN))))
                                                                     (g$syntax-dispatch$7848$1nosrN
                                                                       g$t$8922$1nosrN
                                                                       '()))))
                                                                 g$dy$8916$1nosrN)))
                                                             g$ls/false$8921$1nosrN)
                                                           (g$syntax-violation$7959$1nosrN
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8920$1nosrN))))
                                                      (g$syntax-dispatch$7848$1nosrN
                                                        g$t$8920$1nosrN
                                                        '_))))
                                                  g$t$8917$1nosrN))))
                                            (g$syntax-dispatch$7848$1nosrN
                                              g$t$8917$1nosrN
                                              '(#(scheme-id quote) any)))))
                                        g$x$8912$1nosrN)))
                                    g$ls/false$8915$1nosrN)
                                  ((case-lambda
                                     ((g$t$8926$1nosrN)
                                      ((case-lambda
                                         ((g$ls/false$8927$1nosrN)
                                          (if g$ls/false$8927$1nosrN
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8928$1nosrN)
                                                 (g$cons*$5700$1nosrN
                                                   (g$scheme-stx$7791$1nosrN
                                                     'list)
                                                   g$x$8912$1nosrN
                                                   g$stuff$8928$1nosrN)))
                                              g$ls/false$8927$1nosrN)
                                            ((case-lambda
                                               ((g$t$8929$1nosrN)
                                                ((case-lambda
                                                   ((g$ls/false$8930$1nosrN)
                                                    (if g$ls/false$8930$1nosrN
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7791$1nosrN
                                                               'cons)
                                                             g$x$8912$1nosrN
                                                             g$y$8913$1nosrN)))
                                                        g$ls/false$8930$1nosrN)
                                                      (g$syntax-violation$7959$1nosrN
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8929$1nosrN))))
                                                 (g$syntax-dispatch$7848$1nosrN
                                                   g$t$8929$1nosrN
                                                   '_))))
                                             g$t$8926$1nosrN))))
                                       (g$syntax-dispatch$7848$1nosrN
                                         g$t$8926$1nosrN
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8914$1nosrN))))
                             (g$syntax-dispatch$7848$1nosrN
                               g$t$8914$1nosrN
                               '(#(scheme-id quote) any)))))
                         g$y$8913$1nosrN))))
                   (g$quasiappend$8822$1nosrN
                     (case-lambda
                       ((g$x$8899$1nosrN g$y$8900$1nosrN)
                        ((case-lambda
                           ((g$ls$8901$1nosrN)
                            (if (null? g$ls$8901$1nosrN)
                              (list (g$scheme-stx$7791$1nosrN 'quote) '())
                              (if (null? (cdr g$ls$8901$1nosrN))
                                (car g$ls$8901$1nosrN)
                                (g$cons*$5700$1nosrN
                                  (g$scheme-stx$7791$1nosrN 'append)
                                  g$ls$8901$1nosrN)))))
                         ((letrec ((g$f$8902$1nosrN
                                     (case-lambda
                                       ((g$x$8903$1nosrN)
                                        (if (null? g$x$8903$1nosrN)
                                          ((case-lambda
                                             ((g$t$8904$1nosrN)
                                              ((case-lambda
                                                 ((g$ls/false$8905$1nosrN)
                                                  (if g$ls/false$8905$1nosrN
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8905$1nosrN)
                                                    ((case-lambda
                                                       ((g$t$8906$1nosrN)
                                                        ((case-lambda
                                                           ((g$ls/false$8907$1nosrN)
                                                            (if g$ls/false$8907$1nosrN
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8900$1nosrN)))
                                                                g$ls/false$8907$1nosrN)
                                                              (g$syntax-violation$7959$1nosrN
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8906$1nosrN))))
                                                         (g$syntax-dispatch$7848$1nosrN
                                                           g$t$8906$1nosrN
                                                           '_))))
                                                     g$t$8904$1nosrN))))
                                               (g$syntax-dispatch$7848$1nosrN
                                                 g$t$8904$1nosrN
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8900$1nosrN)
                                          ((case-lambda
                                             ((g$t$8908$1nosrN)
                                              ((case-lambda
                                                 ((g$ls/false$8909$1nosrN)
                                                  (if g$ls/false$8909$1nosrN
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8902$1nosrN
                                                           (cdr g$x$8903$1nosrN))))
                                                      g$ls/false$8909$1nosrN)
                                                    ((case-lambda
                                                       ((g$t$8910$1nosrN)
                                                        ((case-lambda
                                                           ((g$ls/false$8911$1nosrN)
                                                            (if g$ls/false$8911$1nosrN
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8903$1nosrN)
                                                                     (g$f$8902$1nosrN
                                                                       (cdr g$x$8903$1nosrN)))))
                                                                g$ls/false$8911$1nosrN)
                                                              (g$syntax-violation$7959$1nosrN
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8910$1nosrN))))
                                                         (g$syntax-dispatch$7848$1nosrN
                                                           g$t$8910$1nosrN
                                                           '_))))
                                                     g$t$8908$1nosrN))))
                                               (g$syntax-dispatch$7848$1nosrN
                                                 g$t$8908$1nosrN
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8903$1nosrN)))))))
                            g$f$8902$1nosrN)
                          g$x$8899$1nosrN)))))
                   (g$quasivector$8823$1nosrN
                     (case-lambda
                       ((g$x$8874$1nosrN)
                        ((case-lambda
                           ((g$pat-x$8875$1nosrN)
                            ((case-lambda
                               ((g$t$8876$1nosrN)
                                ((case-lambda
                                   ((g$ls/false$8877$1nosrN)
                                    (if g$ls/false$8877$1nosrN
                                      (apply
                                        (case-lambda
                                          ((g$x*$8878$1nosrN)
                                           (list
                                             (g$scheme-stx$7791$1nosrN 'quote)
                                             (list->vector g$x*$8878$1nosrN))))
                                        g$ls/false$8877$1nosrN)
                                      ((case-lambda
                                         ((g$t$8879$1nosrN)
                                          ((case-lambda
                                             ((g$ls/false$8880$1nosrN)
                                              (if g$ls/false$8880$1nosrN
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8881$1nosrN
                                                                 (case-lambda
                                                                   ((g$x$8882$1nosrN
                                                                      g$k$8883$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$t$8884$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8885$1nosrN)
                                                                            (if g$ls/false$8885$1nosrN
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8886$1nosrN)
                                                                                   (g$k$8883$1nosrN
                                                                                     (map (case-lambda
                                                                                            ((g$x$8887$1nosrN)
                                                                                             (list
                                                                                               (g$scheme-stx$7791$1nosrN
                                                                                                 'quote)
                                                                                               g$x$8887$1nosrN)))
                                                                                          g$x*$8886$1nosrN))))
                                                                                g$ls/false$8885$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$t$8888$1nosrN)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8889$1nosrN)
                                                                                      (if g$ls/false$8889$1nosrN
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8890$1nosrN)
                                                                                             (g$k$8883$1nosrN
                                                                                               g$x*$8890$1nosrN)))
                                                                                          g$ls/false$8889$1nosrN)
                                                                                        ((case-lambda
                                                                                           ((g$t$8891$1nosrN)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8892$1nosrN)
                                                                                                (if g$ls/false$8892$1nosrN
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8893$1nosrN
                                                                                                         g$y$8894$1nosrN)
                                                                                                       (g$f$8881$1nosrN
                                                                                                         g$y$8894$1nosrN
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8895$1nosrN)
                                                                                                            (g$k$8883$1nosrN
                                                                                                              (cons
                                                                                                                g$x$8893$1nosrN
                                                                                                                g$ls$8895$1nosrN)))))))
                                                                                                    g$ls/false$8892$1nosrN)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8896$1nosrN)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8897$1nosrN)
                                                                                                          (if g$ls/false$8897$1nosrN
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7791$1nosrN
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8875$1nosrN)))
                                                                                                              g$ls/false$8897$1nosrN)
                                                                                                            (g$syntax-violation$7959$1nosrN
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8896$1nosrN))))
                                                                                                       (g$syntax-dispatch$7848$1nosrN
                                                                                                         g$t$8896$1nosrN
                                                                                                         '_))))
                                                                                                   g$t$8891$1nosrN))))
                                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                                               g$t$8891$1nosrN
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8888$1nosrN))))
                                                                                   (g$syntax-dispatch$7848$1nosrN
                                                                                     g$t$8888$1nosrN
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8884$1nosrN))))
                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                           g$t$8884$1nosrN
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8882$1nosrN)))))
                                                        g$f$8881$1nosrN)
                                                      g$x$8874$1nosrN
                                                      (case-lambda
                                                        ((g$ls$8898$1nosrN)
                                                         (g$cons*$5700$1nosrN
                                                           (g$scheme-stx$7791$1nosrN
                                                             'vector)
                                                           g$ls$8898$1nosrN))))))
                                                  g$ls/false$8880$1nosrN)
                                                (g$syntax-violation$7959$1nosrN
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8879$1nosrN))))
                                           (g$syntax-dispatch$7848$1nosrN
                                             g$t$8879$1nosrN
                                             '_))))
                                       g$t$8876$1nosrN))))
                                 (g$syntax-dispatch$7848$1nosrN
                                   g$t$8876$1nosrN
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8875$1nosrN)))
                         g$x$8874$1nosrN))))
                   (g$vquasi$8824$1nosrN
                     (case-lambda
                       ((g$p$8857$1nosrN g$lev$8858$1nosrN)
                        ((case-lambda
                           ((g$t$8859$1nosrN)
                            ((case-lambda
                               ((g$ls/false$8860$1nosrN)
                                (if g$ls/false$8860$1nosrN
                                  (apply
                                    (case-lambda
                                      ((g$p$8861$1nosrN g$q$8862$1nosrN)
                                       ((case-lambda
                                          ((g$t$8863$1nosrN)
                                           ((case-lambda
                                              ((g$ls/false$8864$1nosrN)
                                               (if g$ls/false$8864$1nosrN
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8865$1nosrN)
                                                      (if (= g$lev$8858$1nosrN
                                                             '0)
                                                        (g$quasicons*$8820$1nosrN
                                                          g$p$8865$1nosrN
                                                          (g$vquasi$8824$1nosrN
                                                            g$q$8862$1nosrN
                                                            g$lev$8858$1nosrN))
                                                        (g$quasicons$8821$1nosrN
                                                          (g$quasicons$8821$1nosrN
                                                            (g$datum$8804$1nosrN
                                                              'unquote)
                                                            (g$quasi$8825$1nosrN
                                                              g$p$8865$1nosrN
                                                              (- g$lev$8858$1nosrN
                                                                 '1)))
                                                          (g$vquasi$8824$1nosrN
                                                            g$q$8862$1nosrN
                                                            g$lev$8858$1nosrN)))))
                                                   g$ls/false$8864$1nosrN)
                                                 ((case-lambda
                                                    ((g$t$8866$1nosrN)
                                                     ((case-lambda
                                                        ((g$ls/false$8867$1nosrN)
                                                         (if g$ls/false$8867$1nosrN
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8868$1nosrN)
                                                                (if (= g$lev$8858$1nosrN
                                                                       '0)
                                                                  (g$quasiappend$8822$1nosrN
                                                                    g$p$8868$1nosrN
                                                                    (g$vquasi$8824$1nosrN
                                                                      g$q$8862$1nosrN
                                                                      g$lev$8858$1nosrN))
                                                                  (g$quasicons$8821$1nosrN
                                                                    (g$quasicons$8821$1nosrN
                                                                      (g$datum$8804$1nosrN
                                                                        'unquote-splicing)
                                                                      (g$quasi$8825$1nosrN
                                                                        g$p$8868$1nosrN
                                                                        (- g$lev$8858$1nosrN
                                                                           '1)))
                                                                    (g$vquasi$8824$1nosrN
                                                                      g$q$8862$1nosrN
                                                                      g$lev$8858$1nosrN)))))
                                                             g$ls/false$8867$1nosrN)
                                                           ((case-lambda
                                                              ((g$t$8869$1nosrN)
                                                               ((case-lambda
                                                                  ((g$ls/false$8870$1nosrN)
                                                                   (if g$ls/false$8870$1nosrN
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8871$1nosrN)
                                                                          (g$quasicons$8821$1nosrN
                                                                            (g$quasi$8825$1nosrN
                                                                              g$p$8871$1nosrN
                                                                              g$lev$8858$1nosrN)
                                                                            (g$vquasi$8824$1nosrN
                                                                              g$q$8862$1nosrN
                                                                              g$lev$8858$1nosrN))))
                                                                       g$ls/false$8870$1nosrN)
                                                                     (g$syntax-violation$7959$1nosrN
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8869$1nosrN))))
                                                                (g$syntax-dispatch$7848$1nosrN
                                                                  g$t$8869$1nosrN
                                                                  'any))))
                                                            g$t$8866$1nosrN))))
                                                      (g$syntax-dispatch$7848$1nosrN
                                                        g$t$8866$1nosrN
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8863$1nosrN))))
                                            (g$syntax-dispatch$7848$1nosrN
                                              g$t$8863$1nosrN
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8861$1nosrN)))
                                    g$ls/false$8860$1nosrN)
                                  ((case-lambda
                                     ((g$t$8872$1nosrN)
                                      ((case-lambda
                                         ((g$ls/false$8873$1nosrN)
                                          (if g$ls/false$8873$1nosrN
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7791$1nosrN
                                                     'quote)
                                                   '())))
                                              g$ls/false$8873$1nosrN)
                                            (g$syntax-violation$7959$1nosrN
                                              '#f
                                              '"invalid syntax"
                                              g$t$8872$1nosrN))))
                                       (g$syntax-dispatch$7848$1nosrN
                                         g$t$8872$1nosrN
                                         '()))))
                                   g$t$8859$1nosrN))))
                             (g$syntax-dispatch$7848$1nosrN
                               g$t$8859$1nosrN
                               '(any . any)))))
                         g$p$8857$1nosrN))))
                   (g$quasi$8825$1nosrN
                     (case-lambda
                       ((g$p$8830$1nosrN g$lev$8831$1nosrN)
                        ((case-lambda
                           ((g$t$8832$1nosrN)
                            ((case-lambda
                               ((g$ls/false$8833$1nosrN)
                                (if g$ls/false$8833$1nosrN
                                  (apply
                                    (case-lambda
                                      ((g$p$8834$1nosrN)
                                       (if (= g$lev$8831$1nosrN '0)
                                         g$p$8834$1nosrN
                                         (g$quasicons$8821$1nosrN
                                           (g$datum$8804$1nosrN 'unquote)
                                           (g$quasi$8825$1nosrN
                                             (list g$p$8834$1nosrN)
                                             (- g$lev$8831$1nosrN '1))))))
                                    g$ls/false$8833$1nosrN)
                                  ((case-lambda
                                     ((g$t$8835$1nosrN)
                                      ((case-lambda
                                         ((g$ls/false$8836$1nosrN)
                                          (if g$ls/false$8836$1nosrN
                                            (apply
                                              (case-lambda
                                                ((g$p$8837$1nosrN
                                                   g$q$8838$1nosrN)
                                                 (if (= g$lev$8831$1nosrN '0)
                                                   (g$quasicons*$8820$1nosrN
                                                     g$p$8837$1nosrN
                                                     (g$quasi$8825$1nosrN
                                                       g$q$8838$1nosrN
                                                       g$lev$8831$1nosrN))
                                                   (g$quasicons$8821$1nosrN
                                                     (g$quasicons$8821$1nosrN
                                                       (g$datum$8804$1nosrN
                                                         'unquote)
                                                       (g$quasi$8825$1nosrN
                                                         g$p$8837$1nosrN
                                                         (- g$lev$8831$1nosrN
                                                            '1)))
                                                     (g$quasi$8825$1nosrN
                                                       g$q$8838$1nosrN
                                                       g$lev$8831$1nosrN)))))
                                              g$ls/false$8836$1nosrN)
                                            ((case-lambda
                                               ((g$t$8839$1nosrN)
                                                ((case-lambda
                                                   ((g$ls/false$8840$1nosrN)
                                                    (if g$ls/false$8840$1nosrN
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8841$1nosrN
                                                             g$q$8842$1nosrN)
                                                           (if (= g$lev$8831$1nosrN
                                                                  '0)
                                                             (g$quasiappend$8822$1nosrN
                                                               g$p$8841$1nosrN
                                                               (g$quasi$8825$1nosrN
                                                                 g$q$8842$1nosrN
                                                                 g$lev$8831$1nosrN))
                                                             (g$quasicons$8821$1nosrN
                                                               (g$quasicons$8821$1nosrN
                                                                 (g$datum$8804$1nosrN
                                                                   'unquote-splicing)
                                                                 (g$quasi$8825$1nosrN
                                                                   g$p$8841$1nosrN
                                                                   (- g$lev$8831$1nosrN
                                                                      '1)))
                                                               (g$quasi$8825$1nosrN
                                                                 g$q$8842$1nosrN
                                                                 g$lev$8831$1nosrN)))))
                                                        g$ls/false$8840$1nosrN)
                                                      ((case-lambda
                                                         ((g$t$8843$1nosrN)
                                                          ((case-lambda
                                                             ((g$ls/false$8844$1nosrN)
                                                              (if g$ls/false$8844$1nosrN
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8845$1nosrN)
                                                                     (g$quasicons$8821$1nosrN
                                                                       (g$datum$8804$1nosrN
                                                                         'quasiquote)
                                                                       (g$quasi$8825$1nosrN
                                                                         (list
                                                                           g$p$8845$1nosrN)
                                                                         (+ g$lev$8831$1nosrN
                                                                            '1)))))
                                                                  g$ls/false$8844$1nosrN)
                                                                ((case-lambda
                                                                   ((g$t$8846$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8847$1nosrN)
                                                                        (if g$ls/false$8847$1nosrN
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8848$1nosrN
                                                                                 g$q$8849$1nosrN)
                                                                               (g$quasicons$8821$1nosrN
                                                                                 (g$quasi$8825$1nosrN
                                                                                   g$p$8848$1nosrN
                                                                                   g$lev$8831$1nosrN)
                                                                                 (g$quasi$8825$1nosrN
                                                                                   g$q$8849$1nosrN
                                                                                   g$lev$8831$1nosrN))))
                                                                            g$ls/false$8847$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$t$8850$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8851$1nosrN)
                                                                                  (if (if g$ls/false$8851$1nosrN
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8852$1nosrN)
                                                                                               (not (g$stx?$7542$1nosrN
                                                                                                      g$x$8852$1nosrN))))
                                                                                            g$ls/false$8851$1nosrN))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8853$1nosrN)
                                                                                         (g$quasivector$8823$1nosrN
                                                                                           (g$vquasi$8824$1nosrN
                                                                                             g$x$8853$1nosrN
                                                                                             g$lev$8831$1nosrN))))
                                                                                      g$ls/false$8851$1nosrN)
                                                                                    ((case-lambda
                                                                                       ((g$t$8854$1nosrN)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8855$1nosrN)
                                                                                            (if g$ls/false$8855$1nosrN
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8856$1nosrN)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7791$1nosrN
                                                                                                       'quote)
                                                                                                     g$p$8856$1nosrN)))
                                                                                                g$ls/false$8855$1nosrN)
                                                                                              (g$syntax-violation$7959$1nosrN
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8854$1nosrN))))
                                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                                           g$t$8854$1nosrN
                                                                                           'any))))
                                                                                     g$t$8850$1nosrN))))
                                                                               (g$syntax-dispatch$7848$1nosrN
                                                                                 g$t$8850$1nosrN
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8846$1nosrN))))
                                                                     (g$syntax-dispatch$7848$1nosrN
                                                                       g$t$8846$1nosrN
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8843$1nosrN))))
                                                           (g$syntax-dispatch$7848$1nosrN
                                                             g$t$8843$1nosrN
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8839$1nosrN))))
                                                 (g$syntax-dispatch$7848$1nosrN
                                                   g$t$8839$1nosrN
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8835$1nosrN))))
                                       (g$syntax-dispatch$7848$1nosrN
                                         g$t$8835$1nosrN
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8832$1nosrN))))
                             (g$syntax-dispatch$7848$1nosrN
                               g$t$8832$1nosrN
                               '(#(scheme-id unquote) any)))))
                         g$p$8830$1nosrN)))))
           (case-lambda
             ((g$x$8826$1nosrN)
              ((case-lambda
                 ((g$t$8827$1nosrN)
                  ((case-lambda
                     ((g$ls/false$8828$1nosrN)
                      (if g$ls/false$8828$1nosrN
                        (apply
                          (case-lambda
                            ((g$e$8829$1nosrN)
                             (g$quasi$8825$1nosrN g$e$8829$1nosrN '0)))
                          g$ls/false$8828$1nosrN)
                        (g$syntax-violation$7959$1nosrN
                          '#f
                          '"invalid syntax"
                          g$t$8827$1nosrN))))
                   (g$syntax-dispatch$7848$1nosrN g$t$8827$1nosrN '(_ any)))))
               g$x$8826$1nosrN))))))))
   (g$quasisyntax-macro$7840$1nosrN
     g$quasisyntax-macro$11286$1nosrN
     ((case-lambda
        (()
         (letrec* ((g$quasi$8936$1nosrN
                     (case-lambda
                       ((g$p$8950$1nosrN g$lev$8951$1nosrN)
                        ((case-lambda
                           ((g$t$8952$1nosrN)
                            ((case-lambda
                               ((g$ls/false$8953$1nosrN)
                                (if g$ls/false$8953$1nosrN
                                  (apply
                                    (case-lambda
                                      ((g$p$8954$1nosrN)
                                       (if (= g$lev$8951$1nosrN '0)
                                         ((case-lambda
                                            ((g$g$8955$1nosrN)
                                             (values
                                               (list g$g$8955$1nosrN)
                                               (list g$p$8954$1nosrN)
                                               g$g$8955$1nosrN)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8936$1nosrN
                                                g$p$8954$1nosrN
                                                (- g$lev$8951$1nosrN '1))))
                                           (case-lambda
                                             ((g$lhs*$8959$1nosrN
                                                g$rhs*$8960$1nosrN
                                                g$p$8961$1nosrN)
                                              ((case-lambda
                                                 ((g$p$8962$1nosrN
                                                    g$rhs*$8963$1nosrN
                                                    g$lhs*$8964$1nosrN)
                                                  (values
                                                    g$lhs*$8964$1nosrN
                                                    g$rhs*$8963$1nosrN
                                                    (list
                                                      'unsyntax
                                                      g$p$8962$1nosrN))))
                                               g$p$8961$1nosrN
                                               g$rhs*$8960$1nosrN
                                               g$lhs*$8959$1nosrN)))))))
                                    g$ls/false$8953$1nosrN)
                                  ((case-lambda
                                     ((g$t$8965$1nosrN)
                                      ((case-lambda
                                         ((g$ls/false$8966$1nosrN)
                                          (if (if g$ls/false$8966$1nosrN
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8951$1nosrN
                                                          '0)))
                                                    g$ls/false$8966$1nosrN))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7959$1nosrN
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8950$1nosrN)))
                                              g$ls/false$8966$1nosrN)
                                            ((case-lambda
                                               ((g$t$8967$1nosrN)
                                                ((case-lambda
                                                   ((g$ls/false$8968$1nosrN)
                                                    (if g$ls/false$8968$1nosrN
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8969$1nosrN
                                                             g$q$8970$1nosrN)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8936$1nosrN
                                                                  g$q$8970$1nosrN
                                                                  g$lev$8951$1nosrN)))
                                                             (case-lambda
                                                               ((g$lhs*$8974$1nosrN
                                                                  g$rhs*$8975$1nosrN
                                                                  g$q$8976$1nosrN)
                                                                ((case-lambda
                                                                   ((g$q$8977$1nosrN
                                                                      g$rhs*$8978$1nosrN
                                                                      g$lhs*$8979$1nosrN)
                                                                    (if (= g$lev$8951$1nosrN
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8980$1nosrN)
                                                                          (values
                                                                            (append
                                                                              g$g*$8980$1nosrN
                                                                              g$lhs*$8979$1nosrN)
                                                                            (append
                                                                              g$p*$8969$1nosrN
                                                                              g$rhs*$8978$1nosrN)
                                                                            (append
                                                                              g$g*$8980$1nosrN
                                                                              g$q$8977$1nosrN))))
                                                                       (map (case-lambda
                                                                              ((g$x$8981$1nosrN)
                                                                               (gensym)))
                                                                            g$p*$8969$1nosrN))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8936$1nosrN
                                                                             g$p*$8969$1nosrN
                                                                             (- g$lev$8951$1nosrN
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8985$1nosrN
                                                                             g$rhs2*$8986$1nosrN
                                                                             g$p*$8987$1nosrN)
                                                                           ((case-lambda
                                                                              ((g$p*$8988$1nosrN
                                                                                 g$rhs2*$8989$1nosrN
                                                                                 g$lhs2*$8990$1nosrN)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8990$1nosrN
                                                                                   g$lhs*$8979$1nosrN)
                                                                                 (append
                                                                                   g$rhs2*$8989$1nosrN
                                                                                   g$rhs*$8978$1nosrN)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8988$1nosrN)
                                                                                   g$q$8977$1nosrN))))
                                                                            g$p*$8987$1nosrN
                                                                            g$rhs2*$8986$1nosrN
                                                                            g$lhs2*$8985$1nosrN)))))))
                                                                 g$q$8976$1nosrN
                                                                 g$rhs*$8975$1nosrN
                                                                 g$lhs*$8974$1nosrN))))))
                                                        g$ls/false$8968$1nosrN)
                                                      ((case-lambda
                                                         ((g$t$8991$1nosrN)
                                                          ((case-lambda
                                                             ((g$ls/false$8992$1nosrN)
                                                              (if g$ls/false$8992$1nosrN
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8993$1nosrN
                                                                       g$q$8994$1nosrN)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8936$1nosrN
                                                                            g$q$8994$1nosrN
                                                                            g$lev$8951$1nosrN)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8998$1nosrN
                                                                            g$rhs*$8999$1nosrN
                                                                            g$q$9000$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$q$9001$1nosrN
                                                                                g$rhs*$9002$1nosrN
                                                                                g$lhs*$9003$1nosrN)
                                                                              (if (= g$lev$8951$1nosrN
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9004$1nosrN)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$9005$1nosrN)
                                                                                                (cons
                                                                                                  g$g$9005$1nosrN
                                                                                                  '(...))))
                                                                                             g$g*$9004$1nosrN)
                                                                                        g$lhs*$9003$1nosrN)
                                                                                      (append
                                                                                        g$p*$8993$1nosrN
                                                                                        g$rhs*$9002$1nosrN)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$9006$1nosrN)
                                                                                                  (cons
                                                                                                    g$g$9006$1nosrN
                                                                                                    '(...))))
                                                                                               g$g*$9004$1nosrN))
                                                                                        g$q$9001$1nosrN))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$9007$1nosrN)
                                                                                         (gensym)))
                                                                                      g$p*$8993$1nosrN))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8936$1nosrN
                                                                                       g$p*$8993$1nosrN
                                                                                       (- g$lev$8951$1nosrN
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9011$1nosrN
                                                                                       g$rhs2*$9012$1nosrN
                                                                                       g$p*$9013$1nosrN)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9014$1nosrN
                                                                                           g$rhs2*$9015$1nosrN
                                                                                           g$lhs2*$9016$1nosrN)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9016$1nosrN
                                                                                             g$lhs*$9003$1nosrN)
                                                                                           (append
                                                                                             g$rhs2*$9015$1nosrN
                                                                                             g$rhs*$9002$1nosrN)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9014$1nosrN)
                                                                                             g$q$9001$1nosrN))))
                                                                                      g$p*$9013$1nosrN
                                                                                      g$rhs2*$9012$1nosrN
                                                                                      g$lhs2*$9011$1nosrN)))))))
                                                                           g$q$9000$1nosrN
                                                                           g$rhs*$8999$1nosrN
                                                                           g$lhs*$8998$1nosrN))))))
                                                                  g$ls/false$8992$1nosrN)
                                                                ((case-lambda
                                                                   ((g$t$9017$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9018$1nosrN)
                                                                        (if (if g$ls/false$9018$1nosrN
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8951$1nosrN
                                                                                        '0)))
                                                                                  g$ls/false$9018$1nosrN))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7959$1nosrN
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8950$1nosrN)))
                                                                            g$ls/false$9018$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$t$9019$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9020$1nosrN)
                                                                                  (if g$ls/false$9020$1nosrN
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9021$1nosrN)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8936$1nosrN
                                                                                                g$p$9021$1nosrN
                                                                                                (+ g$lev$8951$1nosrN
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9025$1nosrN
                                                                                                g$rhs*$9026$1nosrN
                                                                                                g$p$9027$1nosrN)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9028$1nosrN
                                                                                                    g$rhs*$9029$1nosrN
                                                                                                    g$lhs*$9030$1nosrN)
                                                                                                  (values
                                                                                                    g$lhs*$9030$1nosrN
                                                                                                    g$rhs*$9029$1nosrN
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9028$1nosrN))))
                                                                                               g$p$9027$1nosrN
                                                                                               g$rhs*$9026$1nosrN
                                                                                               g$lhs*$9025$1nosrN))))))
                                                                                      g$ls/false$9020$1nosrN)
                                                                                    ((case-lambda
                                                                                       ((g$t$9031$1nosrN)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9032$1nosrN)
                                                                                            (if g$ls/false$9032$1nosrN
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9033$1nosrN
                                                                                                     g$q$9034$1nosrN)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8936$1nosrN
                                                                                                          g$p$9033$1nosrN
                                                                                                          g$lev$8951$1nosrN)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9041$1nosrN
                                                                                                          g$rhs*$9042$1nosrN
                                                                                                          g$p$9043$1nosrN)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8936$1nosrN
                                                                                                               g$q$9034$1nosrN
                                                                                                               g$lev$8951$1nosrN)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$9044$1nosrN
                                                                                                               g$rhs2*$9045$1nosrN
                                                                                                               g$q$9046$1nosrN)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$9047$1nosrN
                                                                                                                   g$rhs2*$9048$1nosrN
                                                                                                                   g$lhs2*$9049$1nosrN
                                                                                                                   g$p$9050$1nosrN
                                                                                                                   g$rhs*$9051$1nosrN
                                                                                                                   g$lhs*$9052$1nosrN)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$9049$1nosrN
                                                                                                                     g$lhs*$9052$1nosrN)
                                                                                                                   (append
                                                                                                                     g$rhs2*$9048$1nosrN
                                                                                                                     g$rhs*$9051$1nosrN)
                                                                                                                   (cons
                                                                                                                     g$p$9050$1nosrN
                                                                                                                     g$q$9047$1nosrN))))
                                                                                                              g$q$9046$1nosrN
                                                                                                              g$rhs2*$9045$1nosrN
                                                                                                              g$lhs2*$9044$1nosrN
                                                                                                              g$p$9043$1nosrN
                                                                                                              g$rhs*$9042$1nosrN
                                                                                                              g$lhs*$9041$1nosrN)))))))))
                                                                                                g$ls/false$9032$1nosrN)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9053$1nosrN)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9054$1nosrN)
                                                                                                      (if g$ls/false$9054$1nosrN
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$9055$1nosrN)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8936$1nosrN
                                                                                                                    g$x*$9055$1nosrN
                                                                                                                    g$lev$8951$1nosrN)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$9059$1nosrN
                                                                                                                    g$rhs*$9060$1nosrN
                                                                                                                    g$x*$9061$1nosrN)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$9062$1nosrN
                                                                                                                        g$rhs*$9063$1nosrN
                                                                                                                        g$lhs*$9064$1nosrN)
                                                                                                                      (values
                                                                                                                        g$lhs*$9064$1nosrN
                                                                                                                        g$rhs*$9063$1nosrN
                                                                                                                        (list->vector
                                                                                                                          g$x*$9062$1nosrN))))
                                                                                                                   g$x*$9061$1nosrN
                                                                                                                   g$rhs*$9060$1nosrN
                                                                                                                   g$lhs*$9059$1nosrN))))))
                                                                                                          g$ls/false$9054$1nosrN)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9065$1nosrN)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9066$1nosrN)
                                                                                                                (if g$ls/false$9066$1nosrN
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8950$1nosrN)))
                                                                                                                    g$ls/false$9066$1nosrN)
                                                                                                                  (g$syntax-violation$7959$1nosrN
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9065$1nosrN))))
                                                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                                                               g$t$9065$1nosrN
                                                                                                               '_))))
                                                                                                         g$t$9053$1nosrN))))
                                                                                                   (g$syntax-dispatch$7848$1nosrN
                                                                                                     g$t$9053$1nosrN
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$9031$1nosrN))))
                                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                                           g$t$9031$1nosrN
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9019$1nosrN))))
                                                                               (g$syntax-dispatch$7848$1nosrN
                                                                                 g$t$9019$1nosrN
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9017$1nosrN))))
                                                                     (g$syntax-dispatch$7848$1nosrN
                                                                       g$t$9017$1nosrN
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8991$1nosrN))))
                                                           (g$syntax-dispatch$7848$1nosrN
                                                             g$t$8991$1nosrN
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8967$1nosrN))))
                                                 (g$syntax-dispatch$7848$1nosrN
                                                   g$t$8967$1nosrN
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8965$1nosrN))))
                                       (g$syntax-dispatch$7848$1nosrN
                                         g$t$8965$1nosrN
                                         '#(scheme-id unsyntax)))))
                                   g$t$8952$1nosrN))))
                             (g$syntax-dispatch$7848$1nosrN
                               g$t$8952$1nosrN
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8950$1nosrN)))))
           (case-lambda
             ((g$x$8937$1nosrN)
              ((case-lambda
                 ((g$t$8938$1nosrN)
                  ((case-lambda
                     ((g$ls/false$8939$1nosrN)
                      (if g$ls/false$8939$1nosrN
                        (apply
                          (case-lambda
                            ((g$e$8940$1nosrN)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8936$1nosrN g$e$8940$1nosrN '0)))
                               (case-lambda
                                 ((g$lhs*$8944$1nosrN
                                    g$rhs*$8945$1nosrN
                                    g$v$8946$1nosrN)
                                  ((case-lambda
                                     ((g$v$8947$1nosrN
                                        g$rhs*$8948$1nosrN
                                        g$lhs*$8949$1nosrN)
                                      (g$bless$7811$1nosrN
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8948$1nosrN)
                                          '()
                                          (list
                                            g$lhs*$8949$1nosrN
                                            (list 'syntax g$v$8947$1nosrN))))))
                                   g$v$8946$1nosrN
                                   g$rhs*$8945$1nosrN
                                   g$lhs*$8944$1nosrN))))))
                          g$ls/false$8939$1nosrN)
                        (g$syntax-violation$7959$1nosrN
                          '#f
                          '"invalid syntax"
                          g$t$8938$1nosrN))))
                   (g$syntax-dispatch$7848$1nosrN g$t$8938$1nosrN '(_ any)))))
               g$x$8937$1nosrN))))))))
   (g$define-struct-macro$7841$1nosrN
     g$define-struct-macro$11287$1nosrN
     (case-lambda
       ((g$stx$9067$1nosrN)
        (g$syntax-violation$7959$1nosrN
          '#f
          '"define-struct not supported"
          g$stx$9067$1nosrN))))
   (g$define-record-type-macro$7842$1nosrN
     g$define-record-type-macro$11288$1nosrN
     (case-lambda
       ((g$x$9068$1nosrN)
        (letrec* ((g$id$9069$1nosrN
                    (case-lambda
                      ((g$ctxt$9321$1nosrN . g$str*$9322$1nosrN)
                       (g$datum->syntax$7961$1nosrN
                         g$ctxt$9321$1nosrN
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9323$1nosrN)
                                     (if (symbol? g$x$9323$1nosrN)
                                       (symbol->string g$x$9323$1nosrN)
                                       (if (string? g$x$9323$1nosrN)
                                         g$x$9323$1nosrN
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9322$1nosrN)))))))
                  (g$get-record-name$9070$1nosrN
                    (case-lambda
                      ((g$spec$9312$1nosrN)
                       ((case-lambda
                          ((g$t$9313$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9314$1nosrN)
                               (if g$ls/false$9314$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$foo$9315$1nosrN
                                        g$make-foo$9316$1nosrN
                                        g$foo?$9317$1nosrN)
                                      g$foo$9315$1nosrN))
                                   g$ls/false$9314$1nosrN)
                                 ((case-lambda
                                    ((g$t$9318$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9319$1nosrN)
                                         (if g$ls/false$9319$1nosrN
                                           (apply
                                             (case-lambda
                                               ((g$foo$9320$1nosrN)
                                                g$foo$9320$1nosrN))
                                             g$ls/false$9319$1nosrN)
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$t$9318$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9318$1nosrN
                                        'any))))
                                  g$t$9313$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9313$1nosrN
                              '(any any any)))))
                        g$spec$9312$1nosrN))))
                  (g$get-record-constructor-name$9071$1nosrN
                    (case-lambda
                      ((g$spec$9302$1nosrN)
                       ((case-lambda
                          ((g$t$9303$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9304$1nosrN)
                               (if g$ls/false$9304$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$foo$9305$1nosrN
                                        g$make-foo$9306$1nosrN
                                        g$foo?$9307$1nosrN)
                                      g$make-foo$9306$1nosrN))
                                   g$ls/false$9304$1nosrN)
                                 ((case-lambda
                                    ((g$t$9308$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9309$1nosrN)
                                         (if (if g$ls/false$9309$1nosrN
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9310$1nosrN)
                                                      (g$id?$7570$1nosrN
                                                        g$foo$9310$1nosrN)))
                                                   g$ls/false$9309$1nosrN))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9311$1nosrN)
                                                (g$id$9069$1nosrN
                                                  g$foo$9311$1nosrN
                                                  '"make-"
                                                  (g$stx->datum$7581$1nosrN
                                                    g$foo$9311$1nosrN))))
                                             g$ls/false$9309$1nosrN)
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$t$9308$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9308$1nosrN
                                        'any))))
                                  g$t$9303$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9303$1nosrN
                              '(any any any)))))
                        g$spec$9302$1nosrN))))
                  (g$get-record-predicate-name$9072$1nosrN
                    (case-lambda
                      ((g$spec$9292$1nosrN)
                       ((case-lambda
                          ((g$t$9293$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9294$1nosrN)
                               (if g$ls/false$9294$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$foo$9295$1nosrN
                                        g$make-foo$9296$1nosrN
                                        g$foo?$9297$1nosrN)
                                      g$foo?$9297$1nosrN))
                                   g$ls/false$9294$1nosrN)
                                 ((case-lambda
                                    ((g$t$9298$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9299$1nosrN)
                                         (if (if g$ls/false$9299$1nosrN
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9300$1nosrN)
                                                      (g$id?$7570$1nosrN
                                                        g$foo$9300$1nosrN)))
                                                   g$ls/false$9299$1nosrN))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9301$1nosrN)
                                                (g$id$9069$1nosrN
                                                  g$foo$9301$1nosrN
                                                  (g$stx->datum$7581$1nosrN
                                                    g$foo$9301$1nosrN)
                                                  '"?")))
                                             g$ls/false$9299$1nosrN)
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$t$9298$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9298$1nosrN
                                        'any))))
                                  g$t$9293$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9293$1nosrN
                              '(any any any)))))
                        g$spec$9292$1nosrN))))
                  (g$get-clause$9073$1nosrN
                    (case-lambda
                      ((g$id$9283$1nosrN g$ls$9284$1nosrN)
                       ((case-lambda
                          ((g$t$9285$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9286$1nosrN)
                               (if g$ls/false$9286$1nosrN
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9286$1nosrN)
                                 ((case-lambda
                                    ((g$t$9287$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9288$1nosrN)
                                         (if g$ls/false$9288$1nosrN
                                           (apply
                                             (case-lambda
                                               ((g$x$9289$1nosrN
                                                  g$rest$9290$1nosrN
                                                  g$ls$9291$1nosrN)
                                                (if (g$free-id=?$7574$1nosrN
                                                      (g$bless$7811$1nosrN
                                                        g$id$9283$1nosrN)
                                                      g$x$9289$1nosrN)
                                                  (cons
                                                    g$x$9289$1nosrN
                                                    g$rest$9290$1nosrN)
                                                  (g$get-clause$9073$1nosrN
                                                    g$id$9283$1nosrN
                                                    g$ls$9291$1nosrN))))
                                             g$ls/false$9288$1nosrN)
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$t$9287$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9287$1nosrN
                                        '((any . any) . any)))))
                                  g$t$9285$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9285$1nosrN
                              '()))))
                        g$ls$9284$1nosrN))))
                  (g$foo-rtd-code$9074$1nosrN
                    (case-lambda
                      ((g$name$9242$1nosrN
                         g$clause*$9243$1nosrN
                         g$parent-rtd-code$9244$1nosrN)
                       (letrec* ((g$convert-field-spec*$9245$1nosrN
                                   (case-lambda
                                     ((g$ls$9270$1nosrN)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9271$1nosrN)
                                                ((case-lambda
                                                   ((g$t$9272$1nosrN)
                                                    ((case-lambda
                                                       ((g$ls/false$9273$1nosrN)
                                                        (if g$ls/false$9273$1nosrN
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9274$1nosrN
                                                                 g$rest$9275$1nosrN)
                                                               (list
                                                                 'mutable
                                                                 g$name$9274$1nosrN)))
                                                            g$ls/false$9273$1nosrN)
                                                          ((case-lambda
                                                             ((g$t$9276$1nosrN)
                                                              ((case-lambda
                                                                 ((g$ls/false$9277$1nosrN)
                                                                  (if g$ls/false$9277$1nosrN
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9278$1nosrN
                                                                           g$rest$9279$1nosrN)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9278$1nosrN)))
                                                                      g$ls/false$9277$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$t$9280$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9281$1nosrN)
                                                                            (if g$ls/false$9281$1nosrN
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9282$1nosrN)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9282$1nosrN)))
                                                                                g$ls/false$9281$1nosrN)
                                                                              (g$syntax-violation$7959$1nosrN
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9280$1nosrN))))
                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                           g$t$9280$1nosrN
                                                                           'any))))
                                                                     g$t$9276$1nosrN))))
                                                               (g$syntax-dispatch$7848$1nosrN
                                                                 g$t$9276$1nosrN
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9272$1nosrN))))
                                                     (g$syntax-dispatch$7848$1nosrN
                                                       g$t$9272$1nosrN
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9271$1nosrN)))
                                             g$ls$9270$1nosrN))))))
                         ((case-lambda
                            ((g$uid-code$9246$1nosrN
                               g$sealed?$9247$1nosrN
                               g$opaque?$9248$1nosrN
                               g$fields$9249$1nosrN)
                             (g$bless$7811$1nosrN
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9242$1nosrN)
                                 g$parent-rtd-code$9244$1nosrN
                                 g$uid-code$9246$1nosrN
                                 g$sealed?$9247$1nosrN
                                 g$opaque?$9248$1nosrN
                                 g$fields$9249$1nosrN))))
                          ((case-lambda
                             ((g$t$9250$1nosrN)
                              ((case-lambda
                                 ((g$ls/false$9251$1nosrN)
                                  (if g$ls/false$9251$1nosrN
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9251$1nosrN)
                                    ((case-lambda
                                       ((g$t$9252$1nosrN)
                                        ((case-lambda
                                           ((g$ls/false$9253$1nosrN)
                                            (if g$ls/false$9253$1nosrN
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9254$1nosrN)
                                                   (list
                                                     'quote
                                                     g$uid$9254$1nosrN)))
                                                g$ls/false$9253$1nosrN)
                                              ((case-lambda
                                                 ((g$t$9255$1nosrN)
                                                  ((case-lambda
                                                     ((g$ls/false$9256$1nosrN)
                                                      (if g$ls/false$9256$1nosrN
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9256$1nosrN)
                                                        (g$syntax-violation$7959$1nosrN
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9255$1nosrN))))
                                                   (g$syntax-dispatch$7848$1nosrN
                                                     g$t$9255$1nosrN
                                                     '_))))
                                               g$t$9252$1nosrN))))
                                         (g$syntax-dispatch$7848$1nosrN
                                           g$t$9252$1nosrN
                                           '(_ any)))))
                                     g$t$9250$1nosrN))))
                               (g$syntax-dispatch$7848$1nosrN
                                 g$t$9250$1nosrN
                                 '(_)))))
                           (g$get-clause$9073$1nosrN
                             'nongenerative
                             g$clause*$9243$1nosrN))
                          ((case-lambda
                             ((g$t$9257$1nosrN)
                              ((case-lambda
                                 ((g$ls/false$9258$1nosrN)
                                  (if g$ls/false$9258$1nosrN
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9258$1nosrN)
                                    ((case-lambda
                                       ((g$t$9259$1nosrN)
                                        ((case-lambda
                                           ((g$ls/false$9260$1nosrN)
                                            (if g$ls/false$9260$1nosrN
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9260$1nosrN)
                                              (g$syntax-violation$7959$1nosrN
                                                '#f
                                                '"invalid syntax"
                                                g$t$9259$1nosrN))))
                                         (g$syntax-dispatch$7848$1nosrN
                                           g$t$9259$1nosrN
                                           '_))))
                                     g$t$9257$1nosrN))))
                               (g$syntax-dispatch$7848$1nosrN
                                 g$t$9257$1nosrN
                                 '(_ #(atom #t))))))
                           (g$get-clause$9073$1nosrN
                             'sealed
                             g$clause*$9243$1nosrN))
                          ((case-lambda
                             ((g$t$9261$1nosrN)
                              ((case-lambda
                                 ((g$ls/false$9262$1nosrN)
                                  (if g$ls/false$9262$1nosrN
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9262$1nosrN)
                                    ((case-lambda
                                       ((g$t$9263$1nosrN)
                                        ((case-lambda
                                           ((g$ls/false$9264$1nosrN)
                                            (if g$ls/false$9264$1nosrN
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9264$1nosrN)
                                              (g$syntax-violation$7959$1nosrN
                                                '#f
                                                '"invalid syntax"
                                                g$t$9263$1nosrN))))
                                         (g$syntax-dispatch$7848$1nosrN
                                           g$t$9263$1nosrN
                                           '_))))
                                     g$t$9261$1nosrN))))
                               (g$syntax-dispatch$7848$1nosrN
                                 g$t$9261$1nosrN
                                 '(_ #(atom #t))))))
                           (g$get-clause$9073$1nosrN
                             'opaque
                             g$clause*$9243$1nosrN))
                          ((case-lambda
                             ((g$t$9265$1nosrN)
                              ((case-lambda
                                 ((g$ls/false$9266$1nosrN)
                                  (if g$ls/false$9266$1nosrN
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9267$1nosrN)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9245$1nosrN
                                             g$field-spec*$9267$1nosrN))))
                                      g$ls/false$9266$1nosrN)
                                    ((case-lambda
                                       ((g$t$9268$1nosrN)
                                        ((case-lambda
                                           ((g$ls/false$9269$1nosrN)
                                            (if g$ls/false$9269$1nosrN
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9269$1nosrN)
                                              (g$syntax-violation$7959$1nosrN
                                                '#f
                                                '"invalid syntax"
                                                g$t$9268$1nosrN))))
                                         (g$syntax-dispatch$7848$1nosrN
                                           g$t$9268$1nosrN
                                           '_))))
                                     g$t$9265$1nosrN))))
                               (g$syntax-dispatch$7848$1nosrN
                                 g$t$9265$1nosrN
                                 '(_ . each-any)))))
                           (g$get-clause$9073$1nosrN
                             'fields
                             g$clause*$9243$1nosrN)))))))
                  (g$parent-rtd-code$9075$1nosrN
                    (case-lambda
                      ((g$clause*$9230$1nosrN)
                       ((case-lambda
                          ((g$t$9231$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9232$1nosrN)
                               (if g$ls/false$9232$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$name$9233$1nosrN)
                                      (list
                                        'record-type-descriptor
                                        g$name$9233$1nosrN)))
                                   g$ls/false$9232$1nosrN)
                                 ((case-lambda
                                    ((g$t$9234$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9235$1nosrN)
                                         (if g$ls/false$9235$1nosrN
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9236$1nosrN)
                                                    ((case-lambda
                                                       ((g$ls/false$9237$1nosrN)
                                                        (if g$ls/false$9237$1nosrN
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9238$1nosrN
                                                                 g$rcd$9239$1nosrN)
                                                               g$rtd$9238$1nosrN))
                                                            g$ls/false$9237$1nosrN)
                                                          ((case-lambda
                                                             ((g$t$9240$1nosrN)
                                                              ((case-lambda
                                                                 ((g$ls/false$9241$1nosrN)
                                                                  (if g$ls/false$9241$1nosrN
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9241$1nosrN)
                                                                    (g$syntax-violation$7959$1nosrN
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9240$1nosrN))))
                                                               (g$syntax-dispatch$7848$1nosrN
                                                                 g$t$9240$1nosrN
                                                                 '#(atom #f)))))
                                                           g$t$9236$1nosrN))))
                                                     (g$syntax-dispatch$7848$1nosrN
                                                       g$t$9236$1nosrN
                                                       '(_ any any)))))
                                                 (g$get-clause$9073$1nosrN
                                                   'parent-rtd
                                                   g$clause*$9230$1nosrN))))
                                             g$ls/false$9235$1nosrN)
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$t$9234$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9234$1nosrN
                                        '#(atom #f)))))
                                  g$t$9231$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9231$1nosrN
                              '(_ any)))))
                        (g$get-clause$9073$1nosrN
                          'parent
                          g$clause*$9230$1nosrN)))))
                  (g$parent-rcd-code$9076$1nosrN
                    (case-lambda
                      ((g$clause*$9218$1nosrN)
                       ((case-lambda
                          ((g$t$9219$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9220$1nosrN)
                               (if g$ls/false$9220$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$name$9221$1nosrN)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9221$1nosrN)))
                                   g$ls/false$9220$1nosrN)
                                 ((case-lambda
                                    ((g$t$9222$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9223$1nosrN)
                                         (if g$ls/false$9223$1nosrN
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9224$1nosrN)
                                                    ((case-lambda
                                                       ((g$ls/false$9225$1nosrN)
                                                        (if g$ls/false$9225$1nosrN
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9226$1nosrN
                                                                 g$rcd$9227$1nosrN)
                                                               g$rcd$9227$1nosrN))
                                                            g$ls/false$9225$1nosrN)
                                                          ((case-lambda
                                                             ((g$t$9228$1nosrN)
                                                              ((case-lambda
                                                                 ((g$ls/false$9229$1nosrN)
                                                                  (if g$ls/false$9229$1nosrN
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9229$1nosrN)
                                                                    (g$syntax-violation$7959$1nosrN
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9228$1nosrN))))
                                                               (g$syntax-dispatch$7848$1nosrN
                                                                 g$t$9228$1nosrN
                                                                 '#(atom #f)))))
                                                           g$t$9224$1nosrN))))
                                                     (g$syntax-dispatch$7848$1nosrN
                                                       g$t$9224$1nosrN
                                                       '(_ any any)))))
                                                 (g$get-clause$9073$1nosrN
                                                   'parent-rtd
                                                   g$clause*$9218$1nosrN))))
                                             g$ls/false$9223$1nosrN)
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$t$9222$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9222$1nosrN
                                        '#(atom #f)))))
                                  g$t$9219$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9219$1nosrN
                              '(_ any)))))
                        (g$get-clause$9073$1nosrN
                          'parent
                          g$clause*$9218$1nosrN)))))
                  (g$foo-rcd-code$9077$1nosrN
                    (case-lambda
                      ((g$clause*$9214$1nosrN
                         g$foo-rtd$9215$1nosrN
                         g$protocol$9216$1nosrN
                         g$parent-rcd-code$9217$1nosrN)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9215$1nosrN
                         g$parent-rcd-code$9217$1nosrN
                         g$protocol$9216$1nosrN))))
                  (g$get-protocol-code$9078$1nosrN
                    (case-lambda
                      ((g$clause*$9208$1nosrN)
                       ((case-lambda
                          ((g$t$9209$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9210$1nosrN)
                               (if g$ls/false$9210$1nosrN
                                 (apply
                                   (case-lambda
                                     ((g$expr$9211$1nosrN) g$expr$9211$1nosrN))
                                   g$ls/false$9210$1nosrN)
                                 ((case-lambda
                                    ((g$t$9212$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9213$1nosrN)
                                         (if g$ls/false$9213$1nosrN
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9213$1nosrN)
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$t$9212$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9212$1nosrN
                                        '_))))
                                  g$t$9209$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9209$1nosrN
                              '(_ any)))))
                        (g$get-clause$9073$1nosrN
                          'protocol
                          g$clause*$9208$1nosrN)))))
                  (g$get-fields$9079$1nosrN
                    (case-lambda
                      ((g$clause*$9199$1nosrN)
                       ((case-lambda
                          ((g$t$9200$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9201$1nosrN)
                               (if g$ls/false$9201$1nosrN
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9201$1nosrN)
                                 ((case-lambda
                                    ((g$t$9202$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9203$1nosrN)
                                         (if g$ls/false$9203$1nosrN
                                           (apply
                                             (case-lambda
                                               ((g$f*$9204$1nosrN)
                                                g$f*$9204$1nosrN))
                                             g$ls/false$9203$1nosrN)
                                           ((case-lambda
                                              ((g$t$9205$1nosrN)
                                               ((case-lambda
                                                  ((g$ls/false$9206$1nosrN)
                                                   (if g$ls/false$9206$1nosrN
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9207$1nosrN)
                                                          (g$get-fields$9079$1nosrN
                                                            g$rest$9207$1nosrN)))
                                                       g$ls/false$9206$1nosrN)
                                                     (g$syntax-violation$7959$1nosrN
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9205$1nosrN))))
                                                (g$syntax-dispatch$7848$1nosrN
                                                  g$t$9205$1nosrN
                                                  '(_ . any)))))
                                            g$t$9202$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9202$1nosrN
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9200$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9200$1nosrN
                              '()))))
                        g$clause*$9199$1nosrN))))
                  (g$get-mutator-indices$9080$1nosrN
                    (case-lambda
                      ((g$fields$9187$1nosrN)
                       ((letrec ((g$f$9188$1nosrN
                                   (case-lambda
                                     ((g$fields$9189$1nosrN g$i$9190$1nosrN)
                                      ((case-lambda
                                         ((g$t$9191$1nosrN)
                                          ((case-lambda
                                             ((g$ls/false$9192$1nosrN)
                                              (if g$ls/false$9192$1nosrN
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9192$1nosrN)
                                                ((case-lambda
                                                   ((g$t$9193$1nosrN)
                                                    ((case-lambda
                                                       ((g$ls/false$9194$1nosrN)
                                                        (if g$ls/false$9194$1nosrN
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9195$1nosrN)
                                                               (cons
                                                                 g$i$9190$1nosrN
                                                                 (g$f$9188$1nosrN
                                                                   g$rest$9195$1nosrN
                                                                   (+ g$i$9190$1nosrN
                                                                      '1)))))
                                                            g$ls/false$9194$1nosrN)
                                                          ((case-lambda
                                                             ((g$t$9196$1nosrN)
                                                              ((case-lambda
                                                                 ((g$ls/false$9197$1nosrN)
                                                                  (if g$ls/false$9197$1nosrN
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9198$1nosrN)
                                                                         (g$f$9188$1nosrN
                                                                           g$rest$9198$1nosrN
                                                                           (+ g$i$9190$1nosrN
                                                                              '1))))
                                                                      g$ls/false$9197$1nosrN)
                                                                    (g$syntax-violation$7959$1nosrN
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9196$1nosrN))))
                                                               (g$syntax-dispatch$7848$1nosrN
                                                                 g$t$9196$1nosrN
                                                                 '(_ . any)))))
                                                           g$t$9193$1nosrN))))
                                                     (g$syntax-dispatch$7848$1nosrN
                                                       g$t$9193$1nosrN
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9191$1nosrN))))
                                           (g$syntax-dispatch$7848$1nosrN
                                             g$t$9191$1nosrN
                                             '()))))
                                       g$fields$9189$1nosrN)))))
                          g$f$9188$1nosrN)
                        g$fields$9187$1nosrN
                        '0))))
                  (g$get-mutators$9081$1nosrN
                    (case-lambda
                      ((g$foo$9166$1nosrN g$fields$9167$1nosrN)
                       (letrec* ((g$gen-name$9168$1nosrN
                                   (case-lambda
                                     ((g$x$9186$1nosrN)
                                      (g$datum->syntax$7961$1nosrN
                                        g$foo$9166$1nosrN
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7962$1nosrN
                                                g$foo$9166$1nosrN))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7962$1nosrN
                                                g$x$9186$1nosrN))
                                            '"-set!")))))))
                         ((letrec ((g$f$9169$1nosrN
                                     (case-lambda
                                       ((g$fields$9170$1nosrN)
                                        ((case-lambda
                                           ((g$t$9171$1nosrN)
                                            ((case-lambda
                                               ((g$ls/false$9172$1nosrN)
                                                (if g$ls/false$9172$1nosrN
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9172$1nosrN)
                                                  ((case-lambda
                                                     ((g$t$9173$1nosrN)
                                                      ((case-lambda
                                                         ((g$ls/false$9174$1nosrN)
                                                          (if g$ls/false$9174$1nosrN
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9175$1nosrN
                                                                   g$accessor$9176$1nosrN
                                                                   g$mutator$9177$1nosrN
                                                                   g$rest$9178$1nosrN)
                                                                 (cons
                                                                   g$mutator$9177$1nosrN
                                                                   (g$f$9169$1nosrN
                                                                     g$rest$9178$1nosrN))))
                                                              g$ls/false$9174$1nosrN)
                                                            ((case-lambda
                                                               ((g$t$9179$1nosrN)
                                                                ((case-lambda
                                                                   ((g$ls/false$9180$1nosrN)
                                                                    (if g$ls/false$9180$1nosrN
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9181$1nosrN
                                                                             g$rest$9182$1nosrN)
                                                                           (cons
                                                                             (g$gen-name$9168$1nosrN
                                                                               g$name$9181$1nosrN)
                                                                             (g$f$9169$1nosrN
                                                                               g$rest$9182$1nosrN))))
                                                                        g$ls/false$9180$1nosrN)
                                                                      ((case-lambda
                                                                         ((g$t$9183$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9184$1nosrN)
                                                                              (if g$ls/false$9184$1nosrN
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9185$1nosrN)
                                                                                     (g$f$9169$1nosrN
                                                                                       g$rest$9185$1nosrN)))
                                                                                  g$ls/false$9184$1nosrN)
                                                                                (g$syntax-violation$7959$1nosrN
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9183$1nosrN))))
                                                                           (g$syntax-dispatch$7848$1nosrN
                                                                             g$t$9183$1nosrN
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9179$1nosrN))))
                                                                 (g$syntax-dispatch$7848$1nosrN
                                                                   g$t$9179$1nosrN
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9173$1nosrN))))
                                                       (g$syntax-dispatch$7848$1nosrN
                                                         g$t$9173$1nosrN
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9171$1nosrN))))
                                             (g$syntax-dispatch$7848$1nosrN
                                               g$t$9171$1nosrN
                                               '()))))
                                         g$fields$9170$1nosrN)))))
                            g$f$9169$1nosrN)
                          g$fields$9167$1nosrN)))))
                  (g$get-accessors$9082$1nosrN
                    (case-lambda
                      ((g$foo$9132$1nosrN g$fields$9133$1nosrN)
                       (letrec* ((g$gen-name$9134$1nosrN
                                   (case-lambda
                                     ((g$x$9165$1nosrN)
                                      (g$datum->syntax$7961$1nosrN
                                        g$foo$9132$1nosrN
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7962$1nosrN
                                                g$foo$9132$1nosrN))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7962$1nosrN
                                                g$x$9165$1nosrN)))))))))
                         (map (case-lambda
                                ((g$field$9135$1nosrN)
                                 ((case-lambda
                                    ((g$t$9136$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9137$1nosrN)
                                         (if (if g$ls/false$9137$1nosrN
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$9138$1nosrN
                                                        g$accessor$9139$1nosrN
                                                        g$mutator$9140$1nosrN)
                                                      (g$id?$7570$1nosrN
                                                        g$accessor$9139$1nosrN)))
                                                   g$ls/false$9137$1nosrN))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$9141$1nosrN
                                                  g$accessor$9142$1nosrN
                                                  g$mutator$9143$1nosrN)
                                                g$accessor$9142$1nosrN))
                                             g$ls/false$9137$1nosrN)
                                           ((case-lambda
                                              ((g$t$9144$1nosrN)
                                               ((case-lambda
                                                  ((g$ls/false$9145$1nosrN)
                                                   (if (if g$ls/false$9145$1nosrN
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$9146$1nosrN
                                                                  g$accessor$9147$1nosrN)
                                                                (g$id?$7570$1nosrN
                                                                  g$accessor$9147$1nosrN)))
                                                             g$ls/false$9145$1nosrN))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$9148$1nosrN
                                                            g$accessor$9149$1nosrN)
                                                          g$accessor$9149$1nosrN))
                                                       g$ls/false$9145$1nosrN)
                                                     ((case-lambda
                                                        ((g$t$9150$1nosrN)
                                                         ((case-lambda
                                                            ((g$ls/false$9151$1nosrN)
                                                             (if (if g$ls/false$9151$1nosrN
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$9152$1nosrN)
                                                                          (g$id?$7570$1nosrN
                                                                            g$name$9152$1nosrN)))
                                                                       g$ls/false$9151$1nosrN))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$9153$1nosrN)
                                                                    (g$gen-name$9134$1nosrN
                                                                      g$name$9153$1nosrN)))
                                                                 g$ls/false$9151$1nosrN)
                                                               ((case-lambda
                                                                  ((g$t$9154$1nosrN)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9155$1nosrN)
                                                                       (if (if g$ls/false$9155$1nosrN
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$9156$1nosrN)
                                                                                    (g$id?$7570$1nosrN
                                                                                      g$name$9156$1nosrN)))
                                                                                 g$ls/false$9155$1nosrN))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$9157$1nosrN)
                                                                              (g$gen-name$9134$1nosrN
                                                                                g$name$9157$1nosrN)))
                                                                           g$ls/false$9155$1nosrN)
                                                                         ((case-lambda
                                                                            ((g$t$9158$1nosrN)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9159$1nosrN)
                                                                                 (if (if g$ls/false$9159$1nosrN
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$9160$1nosrN)
                                                                                              (g$id?$7570$1nosrN
                                                                                                g$name$9160$1nosrN)))
                                                                                           g$ls/false$9159$1nosrN))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$9161$1nosrN)
                                                                                        (g$gen-name$9134$1nosrN
                                                                                          g$name$9161$1nosrN)))
                                                                                     g$ls/false$9159$1nosrN)
                                                                                   ((case-lambda
                                                                                      ((g$t$9162$1nosrN)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9163$1nosrN)
                                                                                           (if g$ls/false$9163$1nosrN
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$9164$1nosrN)
                                                                                                  (g$syntax-violation$7959$1nosrN
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$9135$1nosrN)))
                                                                                               g$ls/false$9163$1nosrN)
                                                                                             (g$syntax-violation$7959$1nosrN
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9162$1nosrN))))
                                                                                        (g$syntax-dispatch$7848$1nosrN
                                                                                          g$t$9162$1nosrN
                                                                                          'any))))
                                                                                    g$t$9158$1nosrN))))
                                                                              (g$syntax-dispatch$7848$1nosrN
                                                                                g$t$9158$1nosrN
                                                                                'any))))
                                                                          g$t$9154$1nosrN))))
                                                                    (g$syntax-dispatch$7848$1nosrN
                                                                      g$t$9154$1nosrN
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$9150$1nosrN))))
                                                          (g$syntax-dispatch$7848$1nosrN
                                                            g$t$9150$1nosrN
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$9144$1nosrN))))
                                                (g$syntax-dispatch$7848$1nosrN
                                                  g$t$9144$1nosrN
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$9136$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9136$1nosrN
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$9135$1nosrN)))
                              g$fields$9133$1nosrN)))))
                  (g$enumerate$9083$1nosrN
                    (case-lambda
                      ((g$ls$9128$1nosrN)
                       ((letrec ((g$f$9129$1nosrN
                                   (case-lambda
                                     ((g$ls$9130$1nosrN g$i$9131$1nosrN)
                                      (if (null? g$ls$9130$1nosrN)
                                        '()
                                        (cons
                                          g$i$9131$1nosrN
                                          (g$f$9129$1nosrN
                                            (cdr g$ls$9130$1nosrN)
                                            (+ g$i$9131$1nosrN '1))))))))
                          g$f$9129$1nosrN)
                        g$ls$9128$1nosrN
                        '0))))
                  (g$do-define-record$9084$1nosrN
                    (case-lambda
                      ((g$namespec$9108$1nosrN g$clause*$9109$1nosrN)
                       ((case-lambda
                          ((g$foo$9110$1nosrN)
                           ((case-lambda
                              ((g$foo-rtd$9111$1nosrN)
                               ((case-lambda
                                  ((g$foo-rcd$9112$1nosrN)
                                   ((case-lambda
                                      ((g$protocol$9113$1nosrN)
                                       ((case-lambda
                                          ((g$make-foo$9114$1nosrN)
                                           ((case-lambda
                                              ((g$fields$9115$1nosrN)
                                               ((case-lambda
                                                  ((g$idx*$9116$1nosrN)
                                                   ((case-lambda
                                                      ((g$foo-x*$9117$1nosrN)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9118$1nosrN)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9119$1nosrN)
                                                               ((case-lambda
                                                                  ((g$foo?$9120$1nosrN)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9121$1nosrN)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9122$1nosrN)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9123$1nosrN)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7811$1nosrN
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$9111$1nosrN
                                                                                           g$foo-rtd-code$9121$1nosrN)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$9113$1nosrN
                                                                                             g$protocol-code$9123$1nosrN)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$9112$1nosrN
                                                                                               g$foo-rcd-code$9122$1nosrN)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$9110$1nosrN
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$9111$1nosrN)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$9112$1nosrN)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$9120$1nosrN
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$9111$1nosrN))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$9114$1nosrN
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$9112$1nosrN))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$9124$1nosrN
                                                                                                               g$idx$9125$1nosrN)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$9124$1nosrN
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$9111$1nosrN
                                                                                                                 g$idx$9125$1nosrN))))
                                                                                                          g$foo-x*$9117$1nosrN
                                                                                                          g$idx*$9116$1nosrN)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$9126$1nosrN
                                                                                                               g$idx$9127$1nosrN)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$9126$1nosrN
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$9111$1nosrN
                                                                                                                 g$idx$9127$1nosrN))))
                                                                                                          g$set-foo-x!*$9118$1nosrN
                                                                                                          g$set-foo-idx*$9119$1nosrN)))))))))))))))
                                                                            (g$get-protocol-code$9078$1nosrN
                                                                              g$clause*$9109$1nosrN))))
                                                                        (g$foo-rcd-code$9077$1nosrN
                                                                          g$clause*$9109$1nosrN
                                                                          g$foo-rtd$9111$1nosrN
                                                                          g$protocol$9113$1nosrN
                                                                          (g$parent-rcd-code$9076$1nosrN
                                                                            g$clause*$9109$1nosrN)))))
                                                                    (g$foo-rtd-code$9074$1nosrN
                                                                      g$foo$9110$1nosrN
                                                                      g$clause*$9109$1nosrN
                                                                      (g$parent-rtd-code$9075$1nosrN
                                                                        g$clause*$9109$1nosrN)))))
                                                                (g$get-record-predicate-name$9072$1nosrN
                                                                  g$namespec$9108$1nosrN))))
                                                            (g$get-mutator-indices$9080$1nosrN
                                                              g$fields$9115$1nosrN))))
                                                        (g$get-mutators$9081$1nosrN
                                                          g$foo$9110$1nosrN
                                                          g$fields$9115$1nosrN))))
                                                    (g$get-accessors$9082$1nosrN
                                                      g$foo$9110$1nosrN
                                                      g$fields$9115$1nosrN))))
                                                (g$enumerate$9083$1nosrN
                                                  g$fields$9115$1nosrN))))
                                            (g$get-fields$9079$1nosrN
                                              g$clause*$9109$1nosrN))))
                                        (g$get-record-constructor-name$9071$1nosrN
                                          g$namespec$9108$1nosrN))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9070$1nosrN
                          g$namespec$9108$1nosrN)))))
                  (g$verify-clauses$9085$1nosrN
                    (case-lambda
                      ((g$x$9090$1nosrN g$cls*$9091$1nosrN)
                       (letrec* ((g$valid-kwds$9092$1nosrN
                                   (map g$bless$7811$1nosrN
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$9093$1nosrN
                                   (case-lambda
                                     ((g$x$9105$1nosrN g$ls$9106$1nosrN)
                                      (if (pair? g$ls$9106$1nosrN)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9107$1nosrN)
                                              (if g$t$9107$1nosrN
                                                g$t$9107$1nosrN
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9093$1nosrN
                                                    g$x$9105$1nosrN
                                                    (cdr g$ls$9106$1nosrN))))))
                                           (g$free-id=?$7574$1nosrN
                                             g$x$9105$1nosrN
                                             (car g$ls$9106$1nosrN))))
                                        '#f)))))
                         ((letrec ((g$f$9094$1nosrN
                                     (case-lambda
                                       ((g$cls*$9095$1nosrN g$seen*$9096$1nosrN)
                                        (if (not (null? g$cls*$9095$1nosrN))
                                          ((case-lambda
                                             ((g$t$9097$1nosrN)
                                              ((case-lambda
                                                 ((g$ls/false$9098$1nosrN)
                                                  (if g$ls/false$9098$1nosrN
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9099$1nosrN
                                                           g$rest$9100$1nosrN)
                                                         (if ((case-lambda
                                                                ((g$t$9101$1nosrN)
                                                                 (if g$t$9101$1nosrN
                                                                   g$t$9101$1nosrN
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9093$1nosrN
                                                                            g$kwd$9099$1nosrN
                                                                            g$valid-kwds$9092$1nosrN))))))
                                                              (not (g$id?$7570$1nosrN
                                                                     g$kwd$9099$1nosrN)))
                                                           (g$syntax-violation$7959$1nosrN
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9099$1nosrN)
                                                           (if (g$bound-id-member?$7577$1nosrN
                                                                 g$kwd$9099$1nosrN
                                                                 g$seen*$9096$1nosrN)
                                                             (g$syntax-violation$7959$1nosrN
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9090$1nosrN
                                                               g$kwd$9099$1nosrN)
                                                             (g$f$9094$1nosrN
                                                               (cdr g$cls*$9095$1nosrN)
                                                               (cons
                                                                 g$kwd$9099$1nosrN
                                                                 g$seen*$9096$1nosrN))))))
                                                      g$ls/false$9098$1nosrN)
                                                    ((case-lambda
                                                       ((g$t$9102$1nosrN)
                                                        ((case-lambda
                                                           ((g$ls/false$9103$1nosrN)
                                                            (if g$ls/false$9103$1nosrN
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9104$1nosrN)
                                                                   (g$syntax-violation$7959$1nosrN
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9104$1nosrN)))
                                                                g$ls/false$9103$1nosrN)
                                                              (g$syntax-violation$7959$1nosrN
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9102$1nosrN))))
                                                         (g$syntax-dispatch$7848$1nosrN
                                                           g$t$9102$1nosrN
                                                           'any))))
                                                     g$t$9097$1nosrN))))
                                               (g$syntax-dispatch$7848$1nosrN
                                                 g$t$9097$1nosrN
                                                 '(any . any)))))
                                           (car g$cls*$9095$1nosrN))
                                          (void))))))
                            g$f$9094$1nosrN)
                          g$cls*$9091$1nosrN
                          '()))))))
          ((case-lambda
             ((g$t$9086$1nosrN)
              ((case-lambda
                 ((g$ls/false$9087$1nosrN)
                  (if g$ls/false$9087$1nosrN
                    (apply
                      (case-lambda
                        ((g$namespec$9088$1nosrN g$clause*$9089$1nosrN)
                         (begin
                           (g$verify-clauses$9085$1nosrN
                             g$x$9068$1nosrN
                             g$clause*$9089$1nosrN)
                           (g$do-define-record$9084$1nosrN
                             g$namespec$9088$1nosrN
                             g$clause*$9089$1nosrN))))
                      g$ls/false$9087$1nosrN)
                    (g$syntax-violation$7959$1nosrN
                      '#f
                      '"invalid syntax"
                      g$t$9086$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$9086$1nosrN
                 '(_ any . each-any)))))
           g$x$9068$1nosrN)))))
   (g$define-condition-type-macro$7843$1nosrN
     g$define-condition-type-macro$11289$1nosrN
     (case-lambda
       ((g$x$9324$1nosrN)
        (letrec* ((g$mkname$9325$1nosrN
                    (case-lambda
                      ((g$name$9348$1nosrN g$suffix$9349$1nosrN)
                       (g$datum->syntax$7961$1nosrN
                         g$name$9348$1nosrN
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7962$1nosrN g$name$9348$1nosrN))
                             g$suffix$9349$1nosrN)))))))
          ((case-lambda
             ((g$t$9326$1nosrN)
              ((case-lambda
                 ((g$ls/false$9327$1nosrN)
                  (if (if g$ls/false$9327$1nosrN
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9328$1nosrN
                                 g$name$9329$1nosrN
                                 g$super$9330$1nosrN
                                 g$constructor$9331$1nosrN
                                 g$predicate$9332$1nosrN
                                 g$field*$9333$1nosrN
                                 g$accessor*$9334$1nosrN)
                               (if (g$id?$7570$1nosrN g$name$9329$1nosrN)
                                 (if (g$id?$7570$1nosrN g$super$9330$1nosrN)
                                   (if (g$id?$7570$1nosrN
                                         g$constructor$9331$1nosrN)
                                     (if (g$id?$7570$1nosrN
                                           g$predicate$9332$1nosrN)
                                       (if (g$for-all$5698$1nosrN
                                             g$id?$7570$1nosrN
                                             g$field*$9333$1nosrN)
                                         (begin
                                           '#f
                                           (g$for-all$5698$1nosrN
                                             g$id?$7570$1nosrN
                                             g$accessor*$9334$1nosrN))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9327$1nosrN))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9335$1nosrN
                           g$name$9336$1nosrN
                           g$super$9337$1nosrN
                           g$constructor$9338$1nosrN
                           g$predicate$9339$1nosrN
                           g$field*$9340$1nosrN
                           g$accessor*$9341$1nosrN)
                         ((case-lambda
                            ((g$aux-accessor*$9342$1nosrN)
                             (g$bless$7811$1nosrN
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9336$1nosrN
                                         g$constructor$9338$1nosrN
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9337$1nosrN)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9343$1nosrN
                                                       g$aux$9344$1nosrN)
                                                     (list
                                                       'immutable
                                                       g$field$9343$1nosrN
                                                       g$aux$9344$1nosrN)))
                                                  g$field*$9340$1nosrN
                                                  g$aux-accessor*$9342$1nosrN))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9339$1nosrN
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9336$1nosrN)))
                                     (map (case-lambda
                                            ((g$accessor$9345$1nosrN
                                               g$aux$9346$1nosrN)
                                             (list
                                               'define
                                               g$accessor$9345$1nosrN
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9336$1nosrN)
                                                 g$aux$9346$1nosrN))))
                                          g$accessor*$9341$1nosrN
                                          g$aux-accessor*$9342$1nosrN)))))))
                          (map (case-lambda ((g$x$9347$1nosrN) (gensym)))
                               g$accessor*$9341$1nosrN))))
                      g$ls/false$9327$1nosrN)
                    (g$syntax-violation$7959$1nosrN
                      '#f
                      '"invalid syntax"
                      g$t$9326$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$9326$1nosrN
                 '(any any any any any . #(each (any any)))))))
           g$x$9324$1nosrN)))))
   (g$incorrect-usage-macro$7844$1nosrN
     g$incorrect-usage-macro$11290$1nosrN
     (case-lambda
       ((g$e$9350$1nosrN)
        (g$syntax-violation$7959$1nosrN
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9350$1nosrN))))
   (g$parameterize-macro$7845$1nosrN
     g$parameterize-macro$11291$1nosrN
     (case-lambda
       ((g$e$9351$1nosrN)
        ((case-lambda
           ((g$t$9352$1nosrN)
            ((case-lambda
               ((g$ls/false$9353$1nosrN)
                (if g$ls/false$9353$1nosrN
                  (apply
                    (case-lambda
                      ((g$b$9354$1nosrN g$b*$9355$1nosrN)
                       (g$bless$7811$1nosrN
                         (cons
                           'begin
                           (cons g$b$9354$1nosrN g$b*$9355$1nosrN)))))
                    g$ls/false$9353$1nosrN)
                  ((case-lambda
                     ((g$t$9356$1nosrN)
                      ((case-lambda
                         ((g$ls/false$9357$1nosrN)
                          (if g$ls/false$9357$1nosrN
                            (apply
                              (case-lambda
                                ((g$olhs*$9358$1nosrN
                                   g$orhs*$9359$1nosrN
                                   g$b$9360$1nosrN
                                   g$b*$9361$1nosrN)
                                 ((case-lambda
                                    ((g$lhs*$9362$1nosrN g$rhs*$9363$1nosrN)
                                     (g$bless$7811$1nosrN
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9362$1nosrN
                                             g$rhs*$9363$1nosrN)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9364$1nosrN
                                                               g$rhs$9365$1nosrN)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9364$1nosrN)))
                                                               (list
                                                                 g$lhs$9364$1nosrN
                                                                 g$rhs$9365$1nosrN)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9365$1nosrN
                                                                   '(t))))))
                                                          g$lhs*$9362$1nosrN
                                                          g$rhs*$9363$1nosrN)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9360$1nosrN
                                                         g$b*$9361$1nosrN)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9358$1nosrN
                                           g$orhs*$9359$1nosrN)))))
                                  (g$generate-temporaries$7949$1nosrN
                                    g$olhs*$9358$1nosrN)
                                  (g$generate-temporaries$7949$1nosrN
                                    g$orhs*$9359$1nosrN))))
                              g$ls/false$9357$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$9356$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$9356$1nosrN
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9352$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$9352$1nosrN
               '(_ () any . each-any)))))
         g$e$9351$1nosrN))))
   (g$foreign-call-transformer$7846$1nosrN
     g$foreign-call-transformer$11292$1nosrN
     (case-lambda
       ((g$e$9366$1nosrN g$r$9367$1nosrN g$mr$9368$1nosrN)
        ((case-lambda
           ((g$t$9369$1nosrN)
            ((case-lambda
               ((g$ls/false$9370$1nosrN)
                (if g$ls/false$9370$1nosrN
                  (apply
                    (case-lambda
                      ((g$name$9371$1nosrN g$arg*$9372$1nosrN)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7866$1nosrN
                             g$name$9371$1nosrN
                             g$r$9367$1nosrN
                             g$mr$9368$1nosrN)
                           (g$chi-expr*$7864$1nosrN
                             g$arg*$9372$1nosrN
                             g$r$9367$1nosrN
                             g$mr$9368$1nosrN)))))
                    g$ls/false$9370$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$9369$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$9369$1nosrN
               '(_ any . each-any)))))
         g$e$9366$1nosrN))))
   (g$convert-pattern$7847$1nosrN
     g$convert-pattern$11293$1nosrN
     (case-lambda
       ((g$pattern$9373$1nosrN g$keys$9374$1nosrN)
        (letrec* ((g$cvt*$9375$1nosrN
                    (case-lambda
                      ((g$p*$9455$1nosrN g$n$9456$1nosrN g$ids$9457$1nosrN)
                       (if (null? g$p*$9455$1nosrN)
                         (values '() g$ids$9457$1nosrN)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9375$1nosrN
                                (cdr g$p*$9455$1nosrN)
                                g$n$9456$1nosrN
                                g$ids$9457$1nosrN)))
                           (case-lambda
                             ((g$y$9460$1nosrN g$ids$9461$1nosrN)
                              ((case-lambda
                                 ((g$ids$9462$1nosrN g$y$9463$1nosrN)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9376$1nosrN
                                         (car g$p*$9455$1nosrN)
                                         g$n$9456$1nosrN
                                         g$ids$9462$1nosrN)))
                                    (case-lambda
                                      ((g$x$9466$1nosrN g$ids$9467$1nosrN)
                                       ((case-lambda
                                          ((g$ids$9468$1nosrN g$x$9469$1nosrN)
                                           (values
                                             (cons
                                               g$x$9469$1nosrN
                                               g$y$9463$1nosrN)
                                             g$ids$9468$1nosrN)))
                                        g$ids$9467$1nosrN
                                        g$x$9466$1nosrN))))))
                               g$ids$9461$1nosrN
                               g$y$9460$1nosrN))))))))
                  (g$cvt$9376$1nosrN
                    (case-lambda
                      ((g$p$9377$1nosrN g$n$9378$1nosrN g$ids$9379$1nosrN)
                       ((case-lambda
                          ((g$t$9380$1nosrN)
                           ((case-lambda
                              ((g$ls/false$9381$1nosrN)
                               (if (if g$ls/false$9381$1nosrN
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9382$1nosrN)
                                            (g$id?$7570$1nosrN
                                              g$id$9382$1nosrN)))
                                         g$ls/false$9381$1nosrN))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9383$1nosrN)
                                      (if (g$bound-id-member?$7577$1nosrN
                                            g$p$9377$1nosrN
                                            g$keys$9374$1nosrN)
                                        (values
                                          (vector 'free-id g$p$9377$1nosrN)
                                          g$ids$9379$1nosrN)
                                        (if (g$free-id=?$7574$1nosrN
                                              g$p$9377$1nosrN
                                              (g$scheme-stx$7791$1nosrN '_))
                                          (values '_ g$ids$9379$1nosrN)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9377$1nosrN
                                                g$n$9378$1nosrN)
                                              g$ids$9379$1nosrN))))))
                                   g$ls/false$9381$1nosrN)
                                 ((case-lambda
                                    ((g$t$9384$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$9385$1nosrN)
                                         (if (if g$ls/false$9385$1nosrN
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9386$1nosrN
                                                        g$dots$9387$1nosrN)
                                                      (g$ellipsis?$7849$1nosrN
                                                        g$dots$9387$1nosrN)))
                                                   g$ls/false$9385$1nosrN))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9388$1nosrN
                                                  g$dots$9389$1nosrN)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9376$1nosrN
                                                       g$p$9388$1nosrN
                                                       (+ g$n$9378$1nosrN '1)
                                                       g$ids$9379$1nosrN)))
                                                  (case-lambda
                                                    ((g$p$9392$1nosrN
                                                       g$ids$9393$1nosrN)
                                                     ((case-lambda
                                                        ((g$ids$9394$1nosrN
                                                           g$p$9395$1nosrN)
                                                         (values
                                                           (if (eq? g$p$9395$1nosrN
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9395$1nosrN))
                                                           g$ids$9394$1nosrN)))
                                                      g$ids$9393$1nosrN
                                                      g$p$9392$1nosrN))))))
                                             g$ls/false$9385$1nosrN)
                                           ((case-lambda
                                              ((g$t$9396$1nosrN)
                                               ((case-lambda
                                                  ((g$ls/false$9397$1nosrN)
                                                   (if (if g$ls/false$9397$1nosrN
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9398$1nosrN
                                                                  g$dots$9399$1nosrN
                                                                  g$ys$9400$1nosrN
                                                                  g$z$9401$1nosrN)
                                                                (g$ellipsis?$7849$1nosrN
                                                                  g$dots$9399$1nosrN)))
                                                             g$ls/false$9397$1nosrN))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9402$1nosrN
                                                            g$dots$9403$1nosrN
                                                            g$ys$9404$1nosrN
                                                            g$z$9405$1nosrN)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9376$1nosrN
                                                                 g$z$9405$1nosrN
                                                                 g$n$9378$1nosrN
                                                                 g$ids$9379$1nosrN)))
                                                            (case-lambda
                                                              ((g$z$9408$1nosrN
                                                                 g$ids$9409$1nosrN)
                                                               ((case-lambda
                                                                  ((g$ids$9410$1nosrN
                                                                     g$z$9411$1nosrN)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9375$1nosrN
                                                                          g$ys$9404$1nosrN
                                                                          g$n$9378$1nosrN
                                                                          g$ids$9410$1nosrN)))
                                                                     (case-lambda
                                                                       ((g$ys$9414$1nosrN
                                                                          g$ids$9415$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$ids$9416$1nosrN
                                                                              g$ys$9417$1nosrN)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9376$1nosrN
                                                                                   g$x$9402$1nosrN
                                                                                   (+ g$n$9378$1nosrN
                                                                                      '1)
                                                                                   g$ids$9416$1nosrN)))
                                                                              (case-lambda
                                                                                ((g$x$9420$1nosrN
                                                                                   g$ids$9421$1nosrN)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9422$1nosrN
                                                                                       g$x$9423$1nosrN)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9423$1nosrN
                                                                                         (reverse
                                                                                           g$ys$9417$1nosrN)
                                                                                         g$z$9411$1nosrN)
                                                                                       g$ids$9422$1nosrN)))
                                                                                  g$ids$9421$1nosrN
                                                                                  g$x$9420$1nosrN))))))
                                                                         g$ids$9415$1nosrN
                                                                         g$ys$9414$1nosrN))))))
                                                                g$ids$9409$1nosrN
                                                                g$z$9408$1nosrN))))))
                                                       g$ls/false$9397$1nosrN)
                                                     ((case-lambda
                                                        ((g$t$9424$1nosrN)
                                                         ((case-lambda
                                                            ((g$ls/false$9425$1nosrN)
                                                             (if g$ls/false$9425$1nosrN
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9426$1nosrN
                                                                      g$y$9427$1nosrN)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9376$1nosrN
                                                                           g$y$9427$1nosrN
                                                                           g$n$9378$1nosrN
                                                                           g$ids$9379$1nosrN)))
                                                                      (case-lambda
                                                                        ((g$y$9430$1nosrN
                                                                           g$ids$9431$1nosrN)
                                                                         ((case-lambda
                                                                            ((g$ids$9432$1nosrN
                                                                               g$y$9433$1nosrN)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9376$1nosrN
                                                                                    g$x$9426$1nosrN
                                                                                    g$n$9378$1nosrN
                                                                                    g$ids$9432$1nosrN)))
                                                                               (case-lambda
                                                                                 ((g$x$9436$1nosrN
                                                                                    g$ids$9437$1nosrN)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9438$1nosrN
                                                                                        g$x$9439$1nosrN)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9439$1nosrN
                                                                                          g$y$9433$1nosrN)
                                                                                        g$ids$9438$1nosrN)))
                                                                                   g$ids$9437$1nosrN
                                                                                   g$x$9436$1nosrN))))))
                                                                          g$ids$9431$1nosrN
                                                                          g$y$9430$1nosrN))))))
                                                                 g$ls/false$9425$1nosrN)
                                                               ((case-lambda
                                                                  ((g$t$9440$1nosrN)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9441$1nosrN)
                                                                       (if g$ls/false$9441$1nosrN
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9379$1nosrN)))
                                                                           g$ls/false$9441$1nosrN)
                                                                         ((case-lambda
                                                                            ((g$t$9442$1nosrN)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9443$1nosrN)
                                                                                 (if (if g$ls/false$9443$1nosrN
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9444$1nosrN)
                                                                                              (not (g$stx?$7542$1nosrN
                                                                                                     g$p$9444$1nosrN))))
                                                                                           g$ls/false$9443$1nosrN))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9445$1nosrN)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9376$1nosrN
                                                                                               g$p$9445$1nosrN
                                                                                               g$n$9378$1nosrN
                                                                                               g$ids$9379$1nosrN)))
                                                                                          (case-lambda
                                                                                            ((g$p$9448$1nosrN
                                                                                               g$ids$9449$1nosrN)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9450$1nosrN
                                                                                                   g$p$9451$1nosrN)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9451$1nosrN)
                                                                                                   g$ids$9450$1nosrN)))
                                                                                              g$ids$9449$1nosrN
                                                                                              g$p$9448$1nosrN))))))
                                                                                     g$ls/false$9443$1nosrN)
                                                                                   ((case-lambda
                                                                                      ((g$t$9452$1nosrN)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9453$1nosrN)
                                                                                           (if g$ls/false$9453$1nosrN
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9454$1nosrN)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7581$1nosrN
                                                                                                        g$datum$9454$1nosrN))
                                                                                                    g$ids$9379$1nosrN)))
                                                                                               g$ls/false$9453$1nosrN)
                                                                                             (g$syntax-violation$7959$1nosrN
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9452$1nosrN))))
                                                                                        (g$syntax-dispatch$7848$1nosrN
                                                                                          g$t$9452$1nosrN
                                                                                          'any))))
                                                                                    g$t$9442$1nosrN))))
                                                                              (g$syntax-dispatch$7848$1nosrN
                                                                                g$t$9442$1nosrN
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9440$1nosrN))))
                                                                    (g$syntax-dispatch$7848$1nosrN
                                                                      g$t$9440$1nosrN
                                                                      '()))))
                                                                g$t$9424$1nosrN))))
                                                          (g$syntax-dispatch$7848$1nosrN
                                                            g$t$9424$1nosrN
                                                            '(any . any)))))
                                                      g$t$9396$1nosrN))))
                                                (g$syntax-dispatch$7848$1nosrN
                                                  g$t$9396$1nosrN
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9384$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$9384$1nosrN
                                        '(any any)))))
                                  g$t$9380$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$9380$1nosrN
                              'any))))
                        g$p$9377$1nosrN)))))
          (g$cvt$9376$1nosrN g$pattern$9373$1nosrN '0 '())))))
   (g$syntax-dispatch$7848$1nosrN
     g$syntax-dispatch$11294$1nosrN
     (case-lambda
       ((g$e$9470$1nosrN g$p$9471$1nosrN)
        (letrec* ((g$stx^$9472$1nosrN
                    (case-lambda
                      ((g$e$9580$1nosrN
                         g$m*$9581$1nosrN
                         g$s*$9582$1nosrN
                         g$ae*$9583$1nosrN)
                       (if (if (null? g$m*$9581$1nosrN)
                             (if (null? g$s*$9582$1nosrN)
                               (begin '#f (null? g$ae*$9583$1nosrN))
                               '#f)
                             '#f)
                         g$e$9580$1nosrN
                         (g$mkstx$7558$1nosrN
                           g$e$9580$1nosrN
                           g$m*$9581$1nosrN
                           g$s*$9582$1nosrN
                           g$ae*$9583$1nosrN)))))
                  (g$match-each$9473$1nosrN
                    (case-lambda
                      ((g$e$9564$1nosrN
                         g$p$9565$1nosrN
                         g$m*$9566$1nosrN
                         g$s*$9567$1nosrN
                         g$ae*$9568$1nosrN)
                       (if (pair? g$e$9564$1nosrN)
                         ((case-lambda
                            ((g$first$9569$1nosrN)
                             (if g$first$9569$1nosrN
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9570$1nosrN)
                                     (if g$rest$9570$1nosrN
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9569$1nosrN
                                           g$rest$9570$1nosrN))
                                       '#f)))
                                  (g$match-each$9473$1nosrN
                                    (cdr g$e$9564$1nosrN)
                                    g$p$9565$1nosrN
                                    g$m*$9566$1nosrN
                                    g$s*$9567$1nosrN
                                    g$ae*$9568$1nosrN)))
                               '#f)))
                          (g$match$9479$1nosrN
                            (car g$e$9564$1nosrN)
                            g$p$9565$1nosrN
                            g$m*$9566$1nosrN
                            g$s*$9567$1nosrN
                            g$ae*$9568$1nosrN
                            '()))
                         (if (null? g$e$9564$1nosrN)
                           '()
                           (if (g$stx?$7542$1nosrN g$e$9564$1nosrN)
                             (if (not (g$top-marked?$7513$1nosrN
                                        g$m*$9566$1nosrN))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7557$1nosrN
                                        g$m*$9566$1nosrN
                                        g$s*$9567$1nosrN
                                        g$ae*$9568$1nosrN
                                        g$e$9564$1nosrN)))
                                   (case-lambda
                                     ((g$m*$9574$1nosrN
                                        g$s*$9575$1nosrN
                                        g$ae*$9576$1nosrN)
                                      ((case-lambda
                                         ((g$ae*$9577$1nosrN
                                            g$s*$9578$1nosrN
                                            g$m*$9579$1nosrN)
                                          (g$match-each$9473$1nosrN
                                            (g$stx-expr$7544$1nosrN
                                              g$e$9564$1nosrN)
                                            g$p$9565$1nosrN
                                            g$m*$9579$1nosrN
                                            g$s*$9578$1nosrN
                                            g$ae*$9577$1nosrN)))
                                       g$ae*$9576$1nosrN
                                       g$s*$9575$1nosrN
                                       g$m*$9574$1nosrN)))))
                               '#f)
                             (if (annotation? g$e$9564$1nosrN)
                               (g$match-each$9473$1nosrN
                                 (annotation-expression g$e$9564$1nosrN)
                                 g$p$9565$1nosrN
                                 g$m*$9566$1nosrN
                                 g$s*$9567$1nosrN
                                 g$ae*$9568$1nosrN)
                               '#f)))))))
                  (g$match-each+$9474$1nosrN
                    (case-lambda
                      ((g$e$9532$1nosrN
                         g$x-pat$9533$1nosrN
                         g$y-pat$9534$1nosrN
                         g$z-pat$9535$1nosrN
                         g$m*$9536$1nosrN
                         g$s*$9537$1nosrN
                         g$ae*$9538$1nosrN
                         g$r$9539$1nosrN)
                       ((letrec ((g$f$9540$1nosrN
                                   (case-lambda
                                     ((g$e$9541$1nosrN
                                        g$m*$9542$1nosrN
                                        g$s*$9543$1nosrN
                                        g$ae*$9544$1nosrN)
                                      (if (pair? g$e$9541$1nosrN)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9540$1nosrN
                                               (cdr g$e$9541$1nosrN)
                                               g$m*$9542$1nosrN
                                               g$s*$9543$1nosrN
                                               g$ae*$9544$1nosrN)))
                                          (case-lambda
                                            ((g$xr*$9548$1nosrN
                                               g$y-pat$9549$1nosrN
                                               g$r$9550$1nosrN)
                                             ((case-lambda
                                                ((g$r$9551$1nosrN
                                                   g$y-pat$9552$1nosrN
                                                   g$xr*$9553$1nosrN)
                                                 (if g$r$9551$1nosrN
                                                   (if (null?
                                                         g$y-pat$9552$1nosrN)
                                                     ((case-lambda
                                                        ((g$xr$9554$1nosrN)
                                                         (if g$xr$9554$1nosrN
                                                           (values
                                                             (cons
                                                               g$xr$9554$1nosrN
                                                               g$xr*$9553$1nosrN)
                                                             g$y-pat$9552$1nosrN
                                                             g$r$9551$1nosrN)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9479$1nosrN
                                                        (car g$e$9541$1nosrN)
                                                        g$x-pat$9533$1nosrN
                                                        g$m*$9542$1nosrN
                                                        g$s*$9543$1nosrN
                                                        g$ae*$9544$1nosrN
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9552$1nosrN)
                                                       (g$match$9479$1nosrN
                                                         (car g$e$9541$1nosrN)
                                                         (car g$y-pat$9552$1nosrN)
                                                         g$m*$9542$1nosrN
                                                         g$s*$9543$1nosrN
                                                         g$ae*$9544$1nosrN
                                                         g$r$9551$1nosrN)))
                                                   (values '#f '#f '#f))))
                                              g$r$9550$1nosrN
                                              g$y-pat$9549$1nosrN
                                              g$xr*$9548$1nosrN))))
                                        (if (g$stx?$7542$1nosrN g$e$9541$1nosrN)
                                          (if (g$top-marked?$7513$1nosrN
                                                g$m*$9542$1nosrN)
                                            (values
                                              '()
                                              g$y-pat$9534$1nosrN
                                              (g$match$9479$1nosrN
                                                g$e$9541$1nosrN
                                                g$z-pat$9535$1nosrN
                                                g$m*$9542$1nosrN
                                                g$s*$9543$1nosrN
                                                g$ae*$9544$1nosrN
                                                g$r$9539$1nosrN))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7557$1nosrN
                                                   g$m*$9542$1nosrN
                                                   g$s*$9543$1nosrN
                                                   g$ae*$9544$1nosrN
                                                   g$e$9541$1nosrN)))
                                              (case-lambda
                                                ((g$m*$9558$1nosrN
                                                   g$s*$9559$1nosrN
                                                   g$ae*$9560$1nosrN)
                                                 ((case-lambda
                                                    ((g$ae*$9561$1nosrN
                                                       g$s*$9562$1nosrN
                                                       g$m*$9563$1nosrN)
                                                     (g$f$9540$1nosrN
                                                       (g$stx-expr$7544$1nosrN
                                                         g$e$9541$1nosrN)
                                                       g$m*$9563$1nosrN
                                                       g$s*$9562$1nosrN
                                                       g$ae*$9561$1nosrN)))
                                                  g$ae*$9560$1nosrN
                                                  g$s*$9559$1nosrN
                                                  g$m*$9558$1nosrN)))))
                                          (if (annotation? g$e$9541$1nosrN)
                                            (g$f$9540$1nosrN
                                              (annotation-expression
                                                g$e$9541$1nosrN)
                                              g$m*$9542$1nosrN
                                              g$s*$9543$1nosrN
                                              g$ae*$9544$1nosrN)
                                            (values
                                              '()
                                              g$y-pat$9534$1nosrN
                                              (g$match$9479$1nosrN
                                                g$e$9541$1nosrN
                                                g$z-pat$9535$1nosrN
                                                g$m*$9542$1nosrN
                                                g$s*$9543$1nosrN
                                                g$ae*$9544$1nosrN
                                                g$r$9539$1nosrN)))))))))
                          g$f$9540$1nosrN)
                        g$e$9532$1nosrN
                        g$m*$9536$1nosrN
                        g$s*$9537$1nosrN
                        g$ae*$9538$1nosrN))))
                  (g$match-each-any$9475$1nosrN
                    (case-lambda
                      ((g$e$9518$1nosrN
                         g$m*$9519$1nosrN
                         g$s*$9520$1nosrN
                         g$ae*$9521$1nosrN)
                       (if (pair? g$e$9518$1nosrN)
                         ((case-lambda
                            ((g$l$9522$1nosrN)
                             (if g$l$9522$1nosrN
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9472$1nosrN
                                     (car g$e$9518$1nosrN)
                                     g$m*$9519$1nosrN
                                     g$s*$9520$1nosrN
                                     g$ae*$9521$1nosrN)
                                   g$l$9522$1nosrN))
                               '#f)))
                          (g$match-each-any$9475$1nosrN
                            (cdr g$e$9518$1nosrN)
                            g$m*$9519$1nosrN
                            g$s*$9520$1nosrN
                            g$ae*$9521$1nosrN))
                         (if (null? g$e$9518$1nosrN)
                           '()
                           (if (g$stx?$7542$1nosrN g$e$9518$1nosrN)
                             (if (not (g$top-marked?$7513$1nosrN
                                        g$m*$9519$1nosrN))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7557$1nosrN
                                        g$m*$9519$1nosrN
                                        g$s*$9520$1nosrN
                                        g$ae*$9521$1nosrN
                                        g$e$9518$1nosrN)))
                                   (case-lambda
                                     ((g$m*$9526$1nosrN
                                        g$s*$9527$1nosrN
                                        g$ae*$9528$1nosrN)
                                      ((case-lambda
                                         ((g$ae*$9529$1nosrN
                                            g$s*$9530$1nosrN
                                            g$m*$9531$1nosrN)
                                          (g$match-each-any$9475$1nosrN
                                            (g$stx-expr$7544$1nosrN
                                              g$e$9518$1nosrN)
                                            g$m*$9531$1nosrN
                                            g$s*$9530$1nosrN
                                            g$ae*$9529$1nosrN)))
                                       g$ae*$9528$1nosrN
                                       g$s*$9527$1nosrN
                                       g$m*$9526$1nosrN)))))
                               '#f)
                             (if (annotation? g$e$9518$1nosrN)
                               (g$match-each-any$9475$1nosrN
                                 (annotation-expression g$e$9518$1nosrN)
                                 g$m*$9519$1nosrN
                                 g$s*$9520$1nosrN
                                 g$ae*$9521$1nosrN)
                               '#f)))))))
                  (g$match-empty$9476$1nosrN
                    (case-lambda
                      ((g$p$9515$1nosrN g$r$9516$1nosrN)
                       (if (null? g$p$9515$1nosrN)
                         g$r$9516$1nosrN
                         (if (eq? g$p$9515$1nosrN '_)
                           g$r$9516$1nosrN
                           (if (eq? g$p$9515$1nosrN 'any)
                             (cons '() g$r$9516$1nosrN)
                             (if (pair? g$p$9515$1nosrN)
                               (g$match-empty$9476$1nosrN
                                 (car g$p$9515$1nosrN)
                                 (g$match-empty$9476$1nosrN
                                   (cdr g$p$9515$1nosrN)
                                   g$r$9516$1nosrN))
                               (if (eq? g$p$9515$1nosrN 'each-any)
                                 (cons '() g$r$9516$1nosrN)
                                 ((case-lambda
                                    ((g$t$9517$1nosrN)
                                     (if (memv g$t$9517$1nosrN '(each))
                                       (g$match-empty$9476$1nosrN
                                         (vector-ref g$p$9515$1nosrN '1)
                                         g$r$9516$1nosrN)
                                       (if (memv g$t$9517$1nosrN '(each+))
                                         (g$match-empty$9476$1nosrN
                                           (vector-ref g$p$9515$1nosrN '1)
                                           (g$match-empty$9476$1nosrN
                                             (reverse
                                               (vector-ref g$p$9515$1nosrN '2))
                                             (g$match-empty$9476$1nosrN
                                               (vector-ref g$p$9515$1nosrN '3)
                                               g$r$9516$1nosrN)))
                                         (if (memv
                                               g$t$9517$1nosrN
                                               '(free-id atom))
                                           g$r$9516$1nosrN
                                           (if (memv
                                                 g$t$9517$1nosrN
                                                 '(scheme-id atom))
                                             g$r$9516$1nosrN
                                             (if (memv
                                                   g$t$9517$1nosrN
                                                   '(vector))
                                               (g$match-empty$9476$1nosrN
                                                 (vector-ref g$p$9515$1nosrN '1)
                                                 g$r$9516$1nosrN)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9515$1nosrN))))))))
                                  (vector-ref g$p$9515$1nosrN '0))))))))))
                  (g$combine$9477$1nosrN
                    (case-lambda
                      ((g$r*$9513$1nosrN g$r$9514$1nosrN)
                       (if (null? (car g$r*$9513$1nosrN))
                         g$r$9514$1nosrN
                         (cons
                           (map car g$r*$9513$1nosrN)
                           (g$combine$9477$1nosrN
                             (map cdr g$r*$9513$1nosrN)
                             g$r$9514$1nosrN))))))
                  (g$match*$9478$1nosrN
                    (case-lambda
                      ((g$e$9495$1nosrN
                         g$p$9496$1nosrN
                         g$m*$9497$1nosrN
                         g$s*$9498$1nosrN
                         g$ae*$9499$1nosrN
                         g$r$9500$1nosrN)
                       (if (null? g$p$9496$1nosrN)
                         (if (null? g$e$9495$1nosrN)
                           (begin '#f g$r$9500$1nosrN)
                           '#f)
                         (if (pair? g$p$9496$1nosrN)
                           (if (pair? g$e$9495$1nosrN)
                             (begin
                               '#f
                               (g$match$9479$1nosrN
                                 (car g$e$9495$1nosrN)
                                 (car g$p$9496$1nosrN)
                                 g$m*$9497$1nosrN
                                 g$s*$9498$1nosrN
                                 g$ae*$9499$1nosrN
                                 (g$match$9479$1nosrN
                                   (cdr g$e$9495$1nosrN)
                                   (cdr g$p$9496$1nosrN)
                                   g$m*$9497$1nosrN
                                   g$s*$9498$1nosrN
                                   g$ae*$9499$1nosrN
                                   g$r$9500$1nosrN)))
                             '#f)
                           (if (eq? g$p$9496$1nosrN 'each-any)
                             ((case-lambda
                                ((g$l$9501$1nosrN)
                                 (if g$l$9501$1nosrN
                                   (begin
                                     '#f
                                     (cons g$l$9501$1nosrN g$r$9500$1nosrN))
                                   '#f)))
                              (g$match-each-any$9475$1nosrN
                                g$e$9495$1nosrN
                                g$m*$9497$1nosrN
                                g$s*$9498$1nosrN
                                g$ae*$9499$1nosrN))
                             ((case-lambda
                                ((g$t$9502$1nosrN)
                                 (if (memv g$t$9502$1nosrN '(each))
                                   (if (null? g$e$9495$1nosrN)
                                     (g$match-empty$9476$1nosrN
                                       (vector-ref g$p$9496$1nosrN '1)
                                       g$r$9500$1nosrN)
                                     ((case-lambda
                                        ((g$r*$9503$1nosrN)
                                         (if g$r*$9503$1nosrN
                                           (begin
                                             '#f
                                             (g$combine$9477$1nosrN
                                               g$r*$9503$1nosrN
                                               g$r$9500$1nosrN))
                                           '#f)))
                                      (g$match-each$9473$1nosrN
                                        g$e$9495$1nosrN
                                        (vector-ref g$p$9496$1nosrN '1)
                                        g$m*$9497$1nosrN
                                        g$s*$9498$1nosrN
                                        g$ae*$9499$1nosrN)))
                                   (if (memv g$t$9502$1nosrN '(free-id))
                                     (if (symbol? g$e$9495$1nosrN)
                                       (if (g$top-marked?$7513$1nosrN
                                             g$m*$9497$1nosrN)
                                         (if (g$free-id=?$7574$1nosrN
                                               (g$stx^$9472$1nosrN
                                                 g$e$9495$1nosrN
                                                 g$m*$9497$1nosrN
                                                 g$s*$9498$1nosrN
                                                 g$ae*$9499$1nosrN)
                                               (vector-ref g$p$9496$1nosrN '1))
                                           (begin '#f g$r$9500$1nosrN)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9502$1nosrN '(scheme-id))
                                       (if (symbol? g$e$9495$1nosrN)
                                         (if (g$top-marked?$7513$1nosrN
                                               g$m*$9497$1nosrN)
                                           (if (g$free-id=?$7574$1nosrN
                                                 (g$stx^$9472$1nosrN
                                                   g$e$9495$1nosrN
                                                   g$m*$9497$1nosrN
                                                   g$s*$9498$1nosrN
                                                   g$ae*$9499$1nosrN)
                                                 (g$scheme-stx$7791$1nosrN
                                                   (vector-ref
                                                     g$p$9496$1nosrN
                                                     '1)))
                                             (begin '#f g$r$9500$1nosrN)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9502$1nosrN '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9474$1nosrN
                                                g$e$9495$1nosrN
                                                (vector-ref g$p$9496$1nosrN '1)
                                                (vector-ref g$p$9496$1nosrN '2)
                                                (vector-ref g$p$9496$1nosrN '3)
                                                g$m*$9497$1nosrN
                                                g$s*$9498$1nosrN
                                                g$ae*$9499$1nosrN
                                                g$r$9500$1nosrN)))
                                           (case-lambda
                                             ((g$xr*$9507$1nosrN
                                                g$y-pat$9508$1nosrN
                                                g$r$9509$1nosrN)
                                              ((case-lambda
                                                 ((g$r$9510$1nosrN
                                                    g$y-pat$9511$1nosrN
                                                    g$xr*$9512$1nosrN)
                                                  (if g$r$9510$1nosrN
                                                    (if (null?
                                                          g$y-pat$9511$1nosrN)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9512$1nosrN)
                                                          (g$match-empty$9476$1nosrN
                                                            (vector-ref
                                                              g$p$9496$1nosrN
                                                              '1)
                                                            g$r$9510$1nosrN)
                                                          (g$combine$9477$1nosrN
                                                            g$xr*$9512$1nosrN
                                                            g$r$9510$1nosrN)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9509$1nosrN
                                               g$y-pat$9508$1nosrN
                                               g$xr*$9507$1nosrN))))
                                         (if (memv g$t$9502$1nosrN '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9496$1nosrN '1)
                                                 (g$strip$7580$1nosrN
                                                   g$e$9495$1nosrN
                                                   g$m*$9497$1nosrN))
                                             (begin '#f g$r$9500$1nosrN)
                                             '#f)
                                           (if (memv g$t$9502$1nosrN '(vector))
                                             (if (vector? g$e$9495$1nosrN)
                                               (begin
                                                 '#f
                                                 (g$match$9479$1nosrN
                                                   (vector->list
                                                     g$e$9495$1nosrN)
                                                   (vector-ref
                                                     g$p$9496$1nosrN
                                                     '1)
                                                   g$m*$9497$1nosrN
                                                   g$s*$9498$1nosrN
                                                   g$ae*$9499$1nosrN
                                                   g$r$9500$1nosrN))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9496$1nosrN)))))))))
                              (vector-ref g$p$9496$1nosrN '0))))))))
                  (g$match$9479$1nosrN
                    (case-lambda
                      ((g$e$9480$1nosrN
                         g$p$9481$1nosrN
                         g$m*$9482$1nosrN
                         g$s*$9483$1nosrN
                         g$ae*$9484$1nosrN
                         g$r$9485$1nosrN)
                       (if (not g$r$9485$1nosrN)
                         '#f
                         (if (eq? g$p$9481$1nosrN '_)
                           g$r$9485$1nosrN
                           (if (eq? g$p$9481$1nosrN 'any)
                             (cons
                               (g$stx^$9472$1nosrN
                                 g$e$9480$1nosrN
                                 g$m*$9482$1nosrN
                                 g$s*$9483$1nosrN
                                 g$ae*$9484$1nosrN)
                               g$r$9485$1nosrN)
                             (if (g$stx?$7542$1nosrN g$e$9480$1nosrN)
                               (if (not (g$top-marked?$7513$1nosrN
                                          g$m*$9482$1nosrN))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7557$1nosrN
                                          g$m*$9482$1nosrN
                                          g$s*$9483$1nosrN
                                          g$ae*$9484$1nosrN
                                          g$e$9480$1nosrN)))
                                     (case-lambda
                                       ((g$m*$9489$1nosrN
                                          g$s*$9490$1nosrN
                                          g$ae*$9491$1nosrN)
                                        ((case-lambda
                                           ((g$ae*$9492$1nosrN
                                              g$s*$9493$1nosrN
                                              g$m*$9494$1nosrN)
                                            (g$match$9479$1nosrN
                                              (g$stx-expr$7544$1nosrN
                                                g$e$9480$1nosrN)
                                              g$p$9481$1nosrN
                                              g$m*$9494$1nosrN
                                              g$s*$9493$1nosrN
                                              g$ae*$9492$1nosrN
                                              g$r$9485$1nosrN)))
                                         g$ae*$9491$1nosrN
                                         g$s*$9490$1nosrN
                                         g$m*$9489$1nosrN)))))
                                 '#f)
                               (if (annotation? g$e$9480$1nosrN)
                                 (g$match$9479$1nosrN
                                   (annotation-expression g$e$9480$1nosrN)
                                   g$p$9481$1nosrN
                                   g$m*$9482$1nosrN
                                   g$s*$9483$1nosrN
                                   g$ae*$9484$1nosrN
                                   g$r$9485$1nosrN)
                                 (g$match*$9478$1nosrN
                                   g$e$9480$1nosrN
                                   g$p$9481$1nosrN
                                   g$m*$9482$1nosrN
                                   g$s*$9483$1nosrN
                                   g$ae*$9484$1nosrN
                                   g$r$9485$1nosrN))))))))))
          (g$match$9479$1nosrN
            g$e$9470$1nosrN
            g$p$9471$1nosrN
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7849$1nosrN
     g$ellipsis?$11295$1nosrN
     (case-lambda
       ((g$x$9584$1nosrN)
        (if (g$id?$7570$1nosrN g$x$9584$1nosrN)
          (begin
            '#f
            (g$free-id=?$7574$1nosrN
              g$x$9584$1nosrN
              (g$scheme-stx$7791$1nosrN '...)))
          '#f))))
   (g$underscore?$7850$1nosrN
     g$underscore?$11296$1nosrN
     (case-lambda
       ((g$x$9585$1nosrN)
        (if (g$id?$7570$1nosrN g$x$9585$1nosrN)
          (begin
            '#f
            (g$free-id=?$7574$1nosrN
              g$x$9585$1nosrN
              (g$scheme-stx$7791$1nosrN '_)))
          '#f))))
   (g$verify-literals$7851$1nosrN
     g$verify-literals$11297$1nosrN
     (case-lambda
       ((g$lits$9586$1nosrN g$expr$9587$1nosrN)
        (for-each
          (case-lambda
            ((g$x$9588$1nosrN)
             (if ((case-lambda
                    ((g$t$9589$1nosrN)
                     (if g$t$9589$1nosrN
                       g$t$9589$1nosrN
                       ((case-lambda
                          ((g$t$9590$1nosrN)
                           (if g$t$9590$1nosrN
                             g$t$9590$1nosrN
                             (begin
                               '#f
                               (g$underscore?$7850$1nosrN g$x$9588$1nosrN)))))
                        (g$ellipsis?$7849$1nosrN g$x$9588$1nosrN)))))
                  (not (g$id?$7570$1nosrN g$x$9588$1nosrN)))
               (g$syntax-violation$7959$1nosrN
                 '#f
                 '"invalid literal"
                 g$expr$9587$1nosrN
                 g$x$9588$1nosrN)
               (void))))
          g$lits$9586$1nosrN))))
   (g$syntax-case-transformer$7852$1nosrN
     g$syntax-case-transformer$11298$1nosrN
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9591$1nosrN
                     (case-lambda
                       ((g$pvars$9648$1nosrN
                          g$expr$9649$1nosrN
                          g$y$9650$1nosrN
                          g$r$9651$1nosrN
                          g$mr$9652$1nosrN)
                        ((case-lambda
                           ((g$ids$9653$1nosrN g$levels$9654$1nosrN)
                            ((case-lambda
                               ((g$labels$9655$1nosrN g$new-vars$9656$1nosrN)
                                ((case-lambda
                                   ((g$body$9657$1nosrN)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7501$1nosrN
                                        '#f
                                        g$new-vars$9656$1nosrN
                                        g$body$9657$1nosrN)
                                      g$y$9650$1nosrN)))
                                 (g$chi-expr$7866$1nosrN
                                   (g$add-subst$7560$1nosrN
                                     (g$make-full-rib$7538$1nosrN
                                       g$ids$9653$1nosrN
                                       g$labels$9655$1nosrN)
                                     g$expr$9649$1nosrN)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9658$1nosrN
                                               g$var$9659$1nosrN
                                               g$level$9660$1nosrN)
                                             (cons
                                               g$label$9658$1nosrN
                                               (g$make-binding$7586$1nosrN
                                                 'syntax
                                                 (cons
                                                   g$var$9659$1nosrN
                                                   g$level$9660$1nosrN)))))
                                          g$labels$9655$1nosrN
                                          g$new-vars$9656$1nosrN
                                          (map cdr g$pvars$9648$1nosrN))
                                     g$r$9651$1nosrN)
                                   g$mr$9652$1nosrN))))
                             (map g$gen-label$7516$1nosrN g$ids$9653$1nosrN)
                             (map g$gen-lexical$7514$1nosrN
                                  g$ids$9653$1nosrN))))
                         (map car g$pvars$9648$1nosrN)
                         (map cdr g$pvars$9648$1nosrN)))))
                   (g$invalid-ids-error$9592$1nosrN
                     (case-lambda
                       ((g$id*$9642$1nosrN g$e$9643$1nosrN g$class$9644$1nosrN)
                        ((letrec ((g$find$9645$1nosrN
                                    (case-lambda
                                      ((g$id*$9646$1nosrN g$ok*$9647$1nosrN)
                                       (if (null? g$id*$9646$1nosrN)
                                         (g$syntax-violation$7959$1nosrN
                                           '#f
                                           '"invalid syntax"
                                           g$e$9643$1nosrN)
                                         (if (g$id?$7570$1nosrN
                                               (car g$id*$9646$1nosrN))
                                           (if (g$bound-id-member?$7577$1nosrN
                                                 (car g$id*$9646$1nosrN)
                                                 g$ok*$9647$1nosrN)
                                             (g$syntax-error$7956$1nosrN
                                               (car g$id*$9646$1nosrN)
                                               '"duplicate "
                                               g$class$9644$1nosrN)
                                             (g$find$9645$1nosrN
                                               (cdr g$id*$9646$1nosrN)
                                               (cons
                                                 (car g$id*$9646$1nosrN)
                                                 g$ok*$9647$1nosrN)))
                                           (g$syntax-error$7956$1nosrN
                                             (car g$id*$9646$1nosrN)
                                             '"invalid "
                                             g$class$9644$1nosrN)))))))
                           g$find$9645$1nosrN)
                         g$id*$9642$1nosrN
                         '()))))
                   (g$gen-clause$9593$1nosrN
                     (case-lambda
                       ((g$x$9622$1nosrN
                          g$keys$9623$1nosrN
                          g$clauses$9624$1nosrN
                          g$r$9625$1nosrN
                          g$mr$9626$1nosrN
                          g$pat$9627$1nosrN
                          g$fender$9628$1nosrN
                          g$expr$9629$1nosrN)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7847$1nosrN
                               g$pat$9627$1nosrN
                               g$keys$9623$1nosrN)))
                          (case-lambda
                            ((g$p$9632$1nosrN g$pvars$9633$1nosrN)
                             ((case-lambda
                                ((g$pvars$9634$1nosrN g$p$9635$1nosrN)
                                 (if (not (g$distinct-bound-ids?$7576$1nosrN
                                            (map car g$pvars$9634$1nosrN)))
                                   (g$invalid-ids-error$9592$1nosrN
                                     (map car g$pvars$9634$1nosrN)
                                     g$pat$9627$1nosrN
                                     '"pattern variable")
                                   (if (not (g$for-all$5698$1nosrN
                                              (case-lambda
                                                ((g$x$9636$1nosrN)
                                                 (not (g$ellipsis?$7849$1nosrN
                                                        (car g$x$9636$1nosrN)))))
                                              g$pvars$9634$1nosrN))
                                     (g$syntax-violation$7959$1nosrN
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9627$1nosrN)
                                     ((case-lambda
                                        ((g$y$9637$1nosrN)
                                         ((case-lambda
                                            ((g$test$9638$1nosrN)
                                             ((case-lambda
                                                ((g$conseq$9639$1nosrN)
                                                 ((case-lambda
                                                    ((g$altern$9640$1nosrN)
                                                     (list
                                                       (g$build-lambda$7501$1nosrN
                                                         '#f
                                                         (list g$y$9637$1nosrN)
                                                         (list
                                                           'if
                                                           g$test$9638$1nosrN
                                                           g$conseq$9639$1nosrN
                                                           g$altern$9640$1nosrN))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9622$1nosrN
                                                         (list
                                                           'quote
                                                           g$p$9635$1nosrN)))))
                                                  (g$gen-syntax-case$9594$1nosrN
                                                    g$x$9622$1nosrN
                                                    g$keys$9623$1nosrN
                                                    g$clauses$9624$1nosrN
                                                    g$r$9625$1nosrN
                                                    g$mr$9626$1nosrN))))
                                              (g$build-dispatch-call$9591$1nosrN
                                                g$pvars$9634$1nosrN
                                                g$expr$9629$1nosrN
                                                g$y$9637$1nosrN
                                                g$r$9625$1nosrN
                                                g$mr$9626$1nosrN))))
                                          (if (eq? g$fender$9628$1nosrN '#t)
                                            g$y$9637$1nosrN
                                            ((case-lambda
                                               ((g$call$9641$1nosrN)
                                                (list
                                                  'if
                                                  g$y$9637$1nosrN
                                                  g$call$9641$1nosrN
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9591$1nosrN
                                               g$pvars$9634$1nosrN
                                               g$fender$9628$1nosrN
                                               g$y$9637$1nosrN
                                               g$r$9625$1nosrN
                                               g$mr$9626$1nosrN))))))
                                      (g$gen-lexical$7514$1nosrN 'tmp))))))
                              g$pvars$9633$1nosrN
                              g$p$9632$1nosrN)))))))
                   (g$gen-syntax-case$9594$1nosrN
                     (case-lambda
                       ((g$x$9605$1nosrN
                          g$keys$9606$1nosrN
                          g$clauses$9607$1nosrN
                          g$r$9608$1nosrN
                          g$mr$9609$1nosrN)
                        (if (null? g$clauses$9607$1nosrN)
                          (list '(primitive syntax-error) g$x$9605$1nosrN)
                          ((case-lambda
                             ((g$t$9610$1nosrN)
                              ((case-lambda
                                 ((g$ls/false$9611$1nosrN)
                                  (if g$ls/false$9611$1nosrN
                                    (apply
                                      (case-lambda
                                        ((g$pat$9612$1nosrN g$expr$9613$1nosrN)
                                         (if (if (g$id?$7570$1nosrN
                                                   g$pat$9612$1nosrN)
                                               (if (not (g$bound-id-member?$7577$1nosrN
                                                          g$pat$9612$1nosrN
                                                          g$keys$9606$1nosrN))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7849$1nosrN
                                                          g$pat$9612$1nosrN)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7574$1nosrN
                                                 g$pat$9612$1nosrN
                                                 (g$scheme-stx$7791$1nosrN '_))
                                             (g$chi-expr$7866$1nosrN
                                               g$expr$9613$1nosrN
                                               g$r$9608$1nosrN
                                               g$mr$9609$1nosrN)
                                             ((case-lambda
                                                ((g$lab$9614$1nosrN
                                                   g$lex$9615$1nosrN)
                                                 ((case-lambda
                                                    ((g$body$9616$1nosrN)
                                                     (list
                                                       (g$build-lambda$7501$1nosrN
                                                         '#f
                                                         (list
                                                           g$lex$9615$1nosrN)
                                                         g$body$9616$1nosrN)
                                                       g$x$9605$1nosrN)))
                                                  (g$chi-expr$7866$1nosrN
                                                    (g$add-subst$7560$1nosrN
                                                      (g$make-full-rib$7538$1nosrN
                                                        (list g$pat$9612$1nosrN)
                                                        (list
                                                          g$lab$9614$1nosrN))
                                                      g$expr$9613$1nosrN)
                                                    (cons
                                                      (cons
                                                        g$lab$9614$1nosrN
                                                        (g$make-binding$7586$1nosrN
                                                          'syntax
                                                          (cons
                                                            g$lex$9615$1nosrN
                                                            '0)))
                                                      g$r$9608$1nosrN)
                                                    g$mr$9609$1nosrN))))
                                              (g$gen-label$7516$1nosrN
                                                g$pat$9612$1nosrN)
                                              (g$gen-lexical$7514$1nosrN
                                                g$pat$9612$1nosrN)))
                                           (g$gen-clause$9593$1nosrN
                                             g$x$9605$1nosrN
                                             g$keys$9606$1nosrN
                                             (cdr g$clauses$9607$1nosrN)
                                             g$r$9608$1nosrN
                                             g$mr$9609$1nosrN
                                             g$pat$9612$1nosrN
                                             '#t
                                             g$expr$9613$1nosrN))))
                                      g$ls/false$9611$1nosrN)
                                    ((case-lambda
                                       ((g$t$9617$1nosrN)
                                        ((case-lambda
                                           ((g$ls/false$9618$1nosrN)
                                            (if g$ls/false$9618$1nosrN
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9619$1nosrN
                                                     g$fender$9620$1nosrN
                                                     g$expr$9621$1nosrN)
                                                   (g$gen-clause$9593$1nosrN
                                                     g$x$9605$1nosrN
                                                     g$keys$9606$1nosrN
                                                     (cdr g$clauses$9607$1nosrN)
                                                     g$r$9608$1nosrN
                                                     g$mr$9609$1nosrN
                                                     g$pat$9619$1nosrN
                                                     g$fender$9620$1nosrN
                                                     g$expr$9621$1nosrN)))
                                                g$ls/false$9618$1nosrN)
                                              (g$syntax-violation$7959$1nosrN
                                                '#f
                                                '"invalid syntax"
                                                g$t$9617$1nosrN))))
                                         (g$syntax-dispatch$7848$1nosrN
                                           g$t$9617$1nosrN
                                           '(any any any)))))
                                     g$t$9610$1nosrN))))
                               (g$syntax-dispatch$7848$1nosrN
                                 g$t$9610$1nosrN
                                 '(any any)))))
                           (car g$clauses$9607$1nosrN)))))))
           (case-lambda
             ((g$e$9595$1nosrN g$r$9596$1nosrN g$mr$9597$1nosrN)
              ((case-lambda
                 ((g$t$9598$1nosrN)
                  ((case-lambda
                     ((g$ls/false$9599$1nosrN)
                      (if g$ls/false$9599$1nosrN
                        (apply
                          (case-lambda
                            ((g$expr$9600$1nosrN
                               g$keys$9601$1nosrN
                               g$clauses$9602$1nosrN)
                             (begin
                               (g$verify-literals$7851$1nosrN
                                 g$keys$9601$1nosrN
                                 g$e$9595$1nosrN)
                               ((case-lambda
                                  ((g$x$9603$1nosrN)
                                   ((case-lambda
                                      ((g$body$9604$1nosrN)
                                       (list
                                         (g$build-lambda$7501$1nosrN
                                           '#f
                                           (list g$x$9603$1nosrN)
                                           g$body$9604$1nosrN)
                                         (g$chi-expr$7866$1nosrN
                                           g$expr$9600$1nosrN
                                           g$r$9596$1nosrN
                                           g$mr$9597$1nosrN))))
                                    (g$gen-syntax-case$9594$1nosrN
                                      g$x$9603$1nosrN
                                      g$keys$9601$1nosrN
                                      g$clauses$9602$1nosrN
                                      g$r$9596$1nosrN
                                      g$mr$9597$1nosrN))))
                                (g$gen-lexical$7514$1nosrN 'tmp)))))
                          g$ls/false$9599$1nosrN)
                        (g$syntax-violation$7959$1nosrN
                          '#f
                          '"invalid syntax"
                          g$t$9598$1nosrN))))
                   (g$syntax-dispatch$7848$1nosrN
                     g$t$9598$1nosrN
                     '(_ any each-any . each-any)))))
               g$e$9595$1nosrN))))))))
   (g$ellipsis-map$7853$1nosrN
     g$ellipsis-map$11299$1nosrN
     (case-lambda
       ((g$proc$9661$1nosrN g$ls$9662$1nosrN . g$ls*$9663$1nosrN)
        (letrec* ((g$who$9664$1nosrN '...))
          (begin
            (if (not (list? g$ls$9662$1nosrN))
              (assertion-violation
                g$who$9664$1nosrN
                '"not a list"
                g$ls$9662$1nosrN)
              (void))
            (if (not (null? g$ls*$9663$1nosrN))
              ((case-lambda
                 ((g$n$9665$1nosrN)
                  (for-each
                    (case-lambda
                      ((g$x$9666$1nosrN)
                       (begin
                         (if (not (list? g$x$9666$1nosrN))
                           (assertion-violation
                             g$who$9664$1nosrN
                             '"not a list"
                             g$x$9666$1nosrN)
                           (void))
                         (if (not (= (length g$x$9666$1nosrN) g$n$9665$1nosrN))
                           (assertion-violation
                             g$who$9664$1nosrN
                             '"length mismatch"
                             g$ls$9662$1nosrN
                             g$x$9666$1nosrN)
                           (void)))))
                    g$ls*$9663$1nosrN)))
               (length g$ls$9662$1nosrN))
              (void))
            (apply
              map
              g$proc$9661$1nosrN
              g$ls$9662$1nosrN
              g$ls*$9663$1nosrN))))))
   (g$syntax-transformer$7854$1nosrN
     g$syntax-transformer$11300$1nosrN
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9667$1nosrN
                     (case-lambda
                       ((g$src$9727$1nosrN
                          g$e$9728$1nosrN
                          g$r$9729$1nosrN
                          g$maps$9730$1nosrN
                          g$ellipsis?$9731$1nosrN
                          g$vec?$9732$1nosrN)
                        ((case-lambda
                           ((g$t$9733$1nosrN)
                            ((case-lambda
                               ((g$ls/false$9734$1nosrN)
                                (if (if g$ls/false$9734$1nosrN
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9735$1nosrN)
                                             (g$ellipsis?$9731$1nosrN
                                               g$dots$9735$1nosrN)))
                                          g$ls/false$9734$1nosrN))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9736$1nosrN)
                                       (g$syntax-violation$7959$1nosrN
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9727$1nosrN)))
                                    g$ls/false$9734$1nosrN)
                                  ((case-lambda
                                     ((g$t$9737$1nosrN)
                                      ((case-lambda
                                         ((g$ls/false$9738$1nosrN)
                                          (if (if g$ls/false$9738$1nosrN
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9739$1nosrN)
                                                       (g$id?$7570$1nosrN
                                                         g$id$9739$1nosrN)))
                                                    g$ls/false$9738$1nosrN))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9740$1nosrN)
                                                 ((case-lambda
                                                    ((g$label$9741$1nosrN)
                                                     ((case-lambda
                                                        ((g$b$9742$1nosrN)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7587$1nosrN
                                                                        g$b$9742$1nosrN)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9745$1nosrN)
                                                                        (g$gen-ref$9668$1nosrN
                                                                          g$src$9727$1nosrN
                                                                          (car g$var.lev$9745$1nosrN)
                                                                          (cdr g$var.lev$9745$1nosrN)
                                                                          g$maps$9730$1nosrN)))
                                                                     (g$binding-value$7588$1nosrN
                                                                       g$b$9742$1nosrN))))
                                                                 (case-lambda
                                                                   ((g$var$9746$1nosrN
                                                                      g$maps$9747$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$maps$9748$1nosrN
                                                                          g$var$9749$1nosrN)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9749$1nosrN)
                                                                          g$maps$9748$1nosrN)))
                                                                     g$maps$9747$1nosrN
                                                                     g$var$9746$1nosrN))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9728$1nosrN)
                                                                 g$maps$9730$1nosrN)))))))
                                                      (g$label->binding$7585$1nosrN
                                                        g$label$9741$1nosrN
                                                        g$r$9729$1nosrN))))
                                                  (g$id->label$7583$1nosrN
                                                    g$e$9728$1nosrN))))
                                              g$ls/false$9738$1nosrN)
                                            ((case-lambda
                                               ((g$t$9750$1nosrN)
                                                ((case-lambda
                                                   ((g$ls/false$9751$1nosrN)
                                                    (if (if g$ls/false$9751$1nosrN
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9752$1nosrN
                                                                   g$e$9753$1nosrN)
                                                                 (g$ellipsis?$9731$1nosrN
                                                                   g$dots$9752$1nosrN)))
                                                              g$ls/false$9751$1nosrN))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9754$1nosrN
                                                             g$e$9755$1nosrN)
                                                           (if g$vec?$9732$1nosrN
                                                             (g$syntax-violation$7959$1nosrN
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9727$1nosrN)
                                                             (g$gen-syntax$9667$1nosrN
                                                               g$src$9727$1nosrN
                                                               g$e$9755$1nosrN
                                                               g$r$9729$1nosrN
                                                               g$maps$9730$1nosrN
                                                               (case-lambda
                                                                 ((g$x$9756$1nosrN)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9751$1nosrN)
                                                      ((case-lambda
                                                         ((g$t$9757$1nosrN)
                                                          ((case-lambda
                                                             ((g$ls/false$9758$1nosrN)
                                                              (if (if g$ls/false$9758$1nosrN
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9759$1nosrN
                                                                             g$dots$9760$1nosrN
                                                                             g$y$9761$1nosrN)
                                                                           (g$ellipsis?$9731$1nosrN
                                                                             g$dots$9760$1nosrN)))
                                                                        g$ls/false$9758$1nosrN))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9762$1nosrN
                                                                       g$dots$9763$1nosrN
                                                                       g$y$9764$1nosrN)
                                                                     ((letrec ((g$f$9765$1nosrN
                                                                                 (case-lambda
                                                                                   ((g$y$9766$1nosrN
                                                                                      g$k$9767$1nosrN)
                                                                                    ((case-lambda
                                                                                       ((g$t$9768$1nosrN)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9769$1nosrN)
                                                                                            (if g$ls/false$9769$1nosrN
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9767$1nosrN
                                                                                                     g$maps$9730$1nosrN)))
                                                                                                g$ls/false$9769$1nosrN)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9770$1nosrN)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9771$1nosrN)
                                                                                                      (if (if g$ls/false$9771$1nosrN
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9772$1nosrN
                                                                                                                     g$y$9773$1nosrN)
                                                                                                                   (g$ellipsis?$9731$1nosrN
                                                                                                                     g$dots$9772$1nosrN)))
                                                                                                                g$ls/false$9771$1nosrN))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9774$1nosrN
                                                                                                               g$y$9775$1nosrN)
                                                                                                             (g$f$9765$1nosrN
                                                                                                               g$y$9775$1nosrN
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9776$1nosrN)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9767$1nosrN
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9776$1nosrN))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9779$1nosrN
                                                                                                                         g$maps$9780$1nosrN)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9781$1nosrN
                                                                                                                             g$x$9782$1nosrN)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9781$1nosrN))
                                                                                                                             (g$syntax-violation$7959$1nosrN
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9727$1nosrN)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9670$1nosrN
                                                                                                                                 g$x$9782$1nosrN
                                                                                                                                 (car g$maps$9781$1nosrN))
                                                                                                                               (cdr g$maps$9781$1nosrN)))))
                                                                                                                        g$maps$9780$1nosrN
                                                                                                                        g$x$9779$1nosrN)))))))))
                                                                                                          g$ls/false$9771$1nosrN)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9783$1nosrN)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9784$1nosrN)
                                                                                                                (if g$ls/false$9784$1nosrN
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9667$1nosrN
                                                                                                                              g$src$9727$1nosrN
                                                                                                                              g$y$9766$1nosrN
                                                                                                                              g$r$9729$1nosrN
                                                                                                                              g$maps$9730$1nosrN
                                                                                                                              g$ellipsis?$9731$1nosrN
                                                                                                                              g$vec?$9732$1nosrN)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9787$1nosrN
                                                                                                                              g$maps$9788$1nosrN)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9789$1nosrN
                                                                                                                                  g$y$9790$1nosrN)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9767$1nosrN
                                                                                                                                       g$maps$9789$1nosrN)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9793$1nosrN
                                                                                                                                       g$maps$9794$1nosrN)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9795$1nosrN
                                                                                                                                           g$x$9796$1nosrN)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9669$1nosrN
                                                                                                                                             g$x$9796$1nosrN
                                                                                                                                             g$y$9790$1nosrN)
                                                                                                                                           g$maps$9795$1nosrN)))
                                                                                                                                      g$maps$9794$1nosrN
                                                                                                                                      g$x$9793$1nosrN))))))
                                                                                                                             g$maps$9788$1nosrN
                                                                                                                             g$y$9787$1nosrN))))))
                                                                                                                    g$ls/false$9784$1nosrN)
                                                                                                                  (g$syntax-violation$7959$1nosrN
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9783$1nosrN))))
                                                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                                                               g$t$9783$1nosrN
                                                                                                               '_))))
                                                                                                         g$t$9770$1nosrN))))
                                                                                                   (g$syntax-dispatch$7848$1nosrN
                                                                                                     g$t$9770$1nosrN
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9768$1nosrN))))
                                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                                           g$t$9768$1nosrN
                                                                                           '()))))
                                                                                     g$y$9766$1nosrN)))))
                                                                        g$f$9765$1nosrN)
                                                                      g$y$9764$1nosrN
                                                                      (case-lambda
                                                                        ((g$maps$9797$1nosrN)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9667$1nosrN
                                                                                g$src$9727$1nosrN
                                                                                g$x$9762$1nosrN
                                                                                g$r$9729$1nosrN
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9797$1nosrN)
                                                                                g$ellipsis?$9731$1nosrN
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9800$1nosrN
                                                                                g$maps$9801$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$maps$9802$1nosrN
                                                                                    g$x$9803$1nosrN)
                                                                                  (if (null?
                                                                                        (car g$maps$9802$1nosrN))
                                                                                    (g$syntax-violation$7959$1nosrN
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9727$1nosrN)
                                                                                    (values
                                                                                      (g$gen-map$9671$1nosrN
                                                                                        g$x$9803$1nosrN
                                                                                        (car g$maps$9802$1nosrN))
                                                                                      (cdr g$maps$9802$1nosrN)))))
                                                                               g$maps$9801$1nosrN
                                                                               g$x$9800$1nosrN)))))))))
                                                                  g$ls/false$9758$1nosrN)
                                                                ((case-lambda
                                                                   ((g$t$9804$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9805$1nosrN)
                                                                        (if g$ls/false$9805$1nosrN
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9806$1nosrN
                                                                                 g$y$9807$1nosrN)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9667$1nosrN
                                                                                      g$src$9727$1nosrN
                                                                                      g$x$9806$1nosrN
                                                                                      g$r$9729$1nosrN
                                                                                      g$maps$9730$1nosrN
                                                                                      g$ellipsis?$9731$1nosrN
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9810$1nosrN
                                                                                      g$maps$9811$1nosrN)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9812$1nosrN
                                                                                          g$xnew$9813$1nosrN)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9667$1nosrN
                                                                                               g$src$9727$1nosrN
                                                                                               g$y$9807$1nosrN
                                                                                               g$r$9729$1nosrN
                                                                                               g$maps$9812$1nosrN
                                                                                               g$ellipsis?$9731$1nosrN
                                                                                               g$vec?$9732$1nosrN)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9816$1nosrN
                                                                                               g$maps$9817$1nosrN)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9818$1nosrN
                                                                                                   g$ynew$9819$1nosrN)
                                                                                                 (values
                                                                                                   (g$gen-cons$9672$1nosrN
                                                                                                     g$e$9728$1nosrN
                                                                                                     g$x$9806$1nosrN
                                                                                                     g$y$9807$1nosrN
                                                                                                     g$xnew$9813$1nosrN
                                                                                                     g$ynew$9819$1nosrN)
                                                                                                   g$maps$9818$1nosrN)))
                                                                                              g$maps$9817$1nosrN
                                                                                              g$ynew$9816$1nosrN))))))
                                                                                     g$maps$9811$1nosrN
                                                                                     g$xnew$9810$1nosrN))))))
                                                                            g$ls/false$9805$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$t$9820$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9821$1nosrN)
                                                                                  (if g$ls/false$9821$1nosrN
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9822$1nosrN)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9667$1nosrN
                                                                                                g$src$9727$1nosrN
                                                                                                g$ls$9822$1nosrN
                                                                                                g$r$9729$1nosrN
                                                                                                g$maps$9730$1nosrN
                                                                                                g$ellipsis?$9731$1nosrN
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9825$1nosrN
                                                                                                g$maps$9826$1nosrN)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9827$1nosrN
                                                                                                    g$lsnew$9828$1nosrN)
                                                                                                  (values
                                                                                                    (g$gen-vector$9673$1nosrN
                                                                                                      g$e$9728$1nosrN
                                                                                                      g$ls$9822$1nosrN
                                                                                                      g$lsnew$9828$1nosrN)
                                                                                                    g$maps$9827$1nosrN)))
                                                                                               g$maps$9826$1nosrN
                                                                                               g$lsnew$9825$1nosrN))))))
                                                                                      g$ls/false$9821$1nosrN)
                                                                                    ((case-lambda
                                                                                       ((g$t$9829$1nosrN)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9830$1nosrN)
                                                                                            (if g$ls/false$9830$1nosrN
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9728$1nosrN)
                                                                                                     g$maps$9730$1nosrN)))
                                                                                                g$ls/false$9830$1nosrN)
                                                                                              (g$syntax-violation$7959$1nosrN
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9829$1nosrN))))
                                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                                           g$t$9829$1nosrN
                                                                                           '_))))
                                                                                     g$t$9820$1nosrN))))
                                                                               (g$syntax-dispatch$7848$1nosrN
                                                                                 g$t$9820$1nosrN
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9804$1nosrN))))
                                                                     (g$syntax-dispatch$7848$1nosrN
                                                                       g$t$9804$1nosrN
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9757$1nosrN))))
                                                           (g$syntax-dispatch$7848$1nosrN
                                                             g$t$9757$1nosrN
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9750$1nosrN))))
                                                 (g$syntax-dispatch$7848$1nosrN
                                                   g$t$9750$1nosrN
                                                   '(any any)))))
                                             g$t$9737$1nosrN))))
                                       (g$syntax-dispatch$7848$1nosrN
                                         g$t$9737$1nosrN
                                         'any))))
                                   g$t$9733$1nosrN))))
                             (g$syntax-dispatch$7848$1nosrN
                               g$t$9733$1nosrN
                               'any))))
                         g$e$9728$1nosrN))))
                   (g$gen-ref$9668$1nosrN
                     (case-lambda
                       ((g$src$9714$1nosrN
                          g$var$9715$1nosrN
                          g$level$9716$1nosrN
                          g$maps$9717$1nosrN)
                        (if (= g$level$9716$1nosrN '0)
                          (values g$var$9715$1nosrN g$maps$9717$1nosrN)
                          (if (null? g$maps$9717$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9714$1nosrN)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9668$1nosrN
                                   g$src$9714$1nosrN
                                   g$var$9715$1nosrN
                                   (- g$level$9716$1nosrN '1)
                                   (cdr g$maps$9717$1nosrN))))
                              (case-lambda
                                ((g$outer-var$9720$1nosrN
                                   g$outer-maps$9721$1nosrN)
                                 ((case-lambda
                                    ((g$outer-maps$9722$1nosrN
                                       g$outer-var$9723$1nosrN)
                                     ((case-lambda
                                        ((g$t$9724$1nosrN)
                                         (if g$t$9724$1nosrN
                                           ((case-lambda
                                              ((g$b$9725$1nosrN)
                                               (values
                                                 (cdr g$b$9725$1nosrN)
                                                 g$maps$9717$1nosrN)))
                                            g$t$9724$1nosrN)
                                           ((case-lambda
                                              ((g$inner-var$9726$1nosrN)
                                               (values
                                                 g$inner-var$9726$1nosrN
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9723$1nosrN
                                                       g$inner-var$9726$1nosrN)
                                                     (car g$maps$9717$1nosrN))
                                                   g$outer-maps$9722$1nosrN))))
                                            (g$gen-lexical$7514$1nosrN 'tmp)))))
                                      (assq
                                        g$outer-var$9723$1nosrN
                                        (car g$maps$9717$1nosrN)))))
                                  g$outer-maps$9721$1nosrN
                                  g$outer-var$9720$1nosrN)))))))))
                   (g$gen-append$9669$1nosrN
                     (case-lambda
                       ((g$x$9712$1nosrN g$y$9713$1nosrN)
                        (if (equal? g$y$9713$1nosrN ''())
                          g$x$9712$1nosrN
                          (list 'append g$x$9712$1nosrN g$y$9713$1nosrN)))))
                   (g$gen-mappend$9670$1nosrN
                     (case-lambda
                       ((g$e$9710$1nosrN g$map-env$9711$1nosrN)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9671$1nosrN
                            g$e$9710$1nosrN
                            g$map-env$9711$1nosrN)))))
                   (g$gen-map$9671$1nosrN
                     (case-lambda
                       ((g$e$9701$1nosrN g$map-env$9702$1nosrN)
                        ((case-lambda
                           ((g$formals$9703$1nosrN g$actuals$9704$1nosrN)
                            (if (eq? (car g$e$9701$1nosrN) 'ref)
                              (car g$actuals$9704$1nosrN)
                              (if (g$for-all$5698$1nosrN
                                    (case-lambda
                                      ((g$x$9705$1nosrN)
                                       (if (eq? (car g$x$9705$1nosrN) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5217$1nosrN
                                               g$x$9705$1nosrN)
                                             g$formals$9703$1nosrN))
                                         '#f)))
                                    (cdr g$e$9701$1nosrN))
                                ((case-lambda
                                   ((g$args$9706$1nosrN)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9701$1nosrN))
                                        g$args$9706$1nosrN))))
                                 (map ((case-lambda
                                         ((g$r$9707$1nosrN)
                                          (case-lambda
                                            ((g$x$9708$1nosrN)
                                             (cdr (assq
                                                    (g$cadr$5217$1nosrN
                                                      g$x$9708$1nosrN)
                                                    g$r$9707$1nosrN))))))
                                       (map cons
                                            g$formals$9703$1nosrN
                                            g$actuals$9704$1nosrN))
                                      (cdr g$e$9701$1nosrN)))
                                (g$cons*$5700$1nosrN
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9703$1nosrN
                                    g$e$9701$1nosrN)
                                  g$actuals$9704$1nosrN)))))
                         (map cdr g$map-env$9702$1nosrN)
                         (map (case-lambda
                                ((g$x$9709$1nosrN)
                                 (list 'ref (car g$x$9709$1nosrN))))
                              g$map-env$9702$1nosrN)))))
                   (g$gen-cons$9672$1nosrN
                     (case-lambda
                       ((g$e$9693$1nosrN
                          g$x$9694$1nosrN
                          g$y$9695$1nosrN
                          g$xnew$9696$1nosrN
                          g$ynew$9697$1nosrN)
                        ((case-lambda
                           ((g$t$9698$1nosrN)
                            (if (memv g$t$9698$1nosrN '(quote))
                              (if (eq? (car g$xnew$9696$1nosrN) 'quote)
                                ((case-lambda
                                   ((g$xnew$9699$1nosrN g$ynew$9700$1nosrN)
                                    (if (if (eq? g$xnew$9699$1nosrN
                                                 g$x$9694$1nosrN)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9700$1nosrN
                                                 g$y$9695$1nosrN))
                                          '#f)
                                      (list 'quote g$e$9693$1nosrN)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9699$1nosrN
                                          g$ynew$9700$1nosrN)))))
                                 (g$cadr$5217$1nosrN g$xnew$9696$1nosrN)
                                 (g$cadr$5217$1nosrN g$ynew$9697$1nosrN))
                                (if (null?
                                      (g$cadr$5217$1nosrN g$ynew$9697$1nosrN))
                                  (list 'list g$xnew$9696$1nosrN)
                                  (list
                                    'cons
                                    g$xnew$9696$1nosrN
                                    g$ynew$9697$1nosrN)))
                              (if (memv g$t$9698$1nosrN '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9696$1nosrN
                                    (cdr g$ynew$9697$1nosrN)))
                                (list
                                  'cons
                                  g$xnew$9696$1nosrN
                                  g$ynew$9697$1nosrN)))))
                         (car g$ynew$9697$1nosrN)))))
                   (g$gen-vector$9673$1nosrN
                     (case-lambda
                       ((g$e$9690$1nosrN g$ls$9691$1nosrN g$lsnew$9692$1nosrN)
                        (if (eq? (car g$lsnew$9692$1nosrN) 'quote)
                          (if (eq? (g$cadr$5217$1nosrN g$lsnew$9692$1nosrN)
                                   g$ls$9691$1nosrN)
                            (list 'quote g$e$9690$1nosrN)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5217$1nosrN g$lsnew$9692$1nosrN))))
                          (if (eq? (car g$lsnew$9692$1nosrN) 'list)
                            (cons 'vector (cdr g$lsnew$9692$1nosrN))
                            (list 'list->vector g$lsnew$9692$1nosrN))))))
                   (g$regen$9674$1nosrN
                     (case-lambda
                       ((g$x$9687$1nosrN)
                        ((case-lambda
                           ((g$t$9688$1nosrN)
                            (if (memv g$t$9688$1nosrN '(ref))
                              (g$cadr$5217$1nosrN g$x$9687$1nosrN)
                              (if (memv g$t$9688$1nosrN '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5217$1nosrN g$x$9687$1nosrN))
                                (if (memv g$t$9688$1nosrN '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5217$1nosrN g$x$9687$1nosrN))
                                  (if (memv g$t$9688$1nosrN '(lambda))
                                    (g$build-lambda$7501$1nosrN
                                      '#f
                                      (g$cadr$5217$1nosrN g$x$9687$1nosrN)
                                      (g$regen$9674$1nosrN
                                        (g$caddr$5223$1nosrN g$x$9687$1nosrN)))
                                    (if (memv g$t$9688$1nosrN '(map))
                                      ((case-lambda
                                         ((g$ls$9689$1nosrN)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9689$1nosrN)))
                                       (map g$regen$9674$1nosrN
                                            (cdr g$x$9687$1nosrN)))
                                      (cons
                                        (list 'primitive (car g$x$9687$1nosrN))
                                        (map g$regen$9674$1nosrN
                                             (cdr g$x$9687$1nosrN))))))))))
                         (car g$x$9687$1nosrN))))))
           (case-lambda
             ((g$e$9675$1nosrN g$r$9676$1nosrN g$mr$9677$1nosrN)
              ((case-lambda
                 ((g$t$9678$1nosrN)
                  ((case-lambda
                     ((g$ls/false$9679$1nosrN)
                      (if g$ls/false$9679$1nosrN
                        (apply
                          (case-lambda
                            ((g$x$9680$1nosrN)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9667$1nosrN
                                    g$e$9675$1nosrN
                                    g$x$9680$1nosrN
                                    g$r$9676$1nosrN
                                    '()
                                    g$ellipsis?$7849$1nosrN
                                    '#f)))
                               (case-lambda
                                 ((g$e$9683$1nosrN g$maps$9684$1nosrN)
                                  ((case-lambda
                                     ((g$maps$9685$1nosrN g$e$9686$1nosrN)
                                      (g$regen$9674$1nosrN g$e$9686$1nosrN)))
                                   g$maps$9684$1nosrN
                                   g$e$9683$1nosrN))))))
                          g$ls/false$9679$1nosrN)
                        (g$syntax-violation$7959$1nosrN
                          '#f
                          '"invalid syntax"
                          g$t$9678$1nosrN))))
                   (g$syntax-dispatch$7848$1nosrN g$t$9678$1nosrN '(_ any)))))
               g$e$9675$1nosrN))))))))
   (g$core-macro-transformer$7855$1nosrN
     g$core-macro-transformer$11301$1nosrN
     (case-lambda
       ((g$name$9831$1nosrN)
        ((case-lambda
           ((g$t$9832$1nosrN)
            (if (memv g$t$9832$1nosrN '(quote))
              g$quote-transformer$7808$1nosrN
              (if (memv g$t$9832$1nosrN '(lambda))
                g$lambda-transformer$7810$1nosrN
                (if (memv g$t$9832$1nosrN '(case-lambda))
                  g$case-lambda-transformer$7809$1nosrN
                  (if (memv g$t$9832$1nosrN '(letrec))
                    g$letrec-transformer$7798$1nosrN
                    (if (memv g$t$9832$1nosrN '(letrec*))
                      g$letrec*-transformer$7799$1nosrN
                      (if (memv g$t$9832$1nosrN '(if))
                        g$if-transformer$7806$1nosrN
                        (if (memv g$t$9832$1nosrN '(foreign-call))
                          g$foreign-call-transformer$7846$1nosrN
                          (if (memv g$t$9832$1nosrN '(syntax-case))
                            g$syntax-case-transformer$7852$1nosrN
                            (if (memv g$t$9832$1nosrN '(syntax))
                              g$syntax-transformer$7854$1nosrN
                              (if (memv g$t$9832$1nosrN '(type-descriptor))
                                g$type-descriptor-transformer$7801$1nosrN
                                (if (memv
                                      g$t$9832$1nosrN
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7802$1nosrN
                                  (if (memv
                                        g$t$9832$1nosrN
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7803$1nosrN
                                    (if (memv
                                          g$t$9832$1nosrN
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7800$1nosrN
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9831$1nosrN))))))))))))))))
         g$name$9831$1nosrN))))
   (g$file-options-macro$7856$1nosrN
     g$file-options-macro$11302$1nosrN
     (case-lambda
       ((g$x$9833$1nosrN)
        (letrec* ((g$valid-option?$9834$1nosrN
                    (case-lambda
                      ((g$x$9839$1nosrN)
                       (if (g$id?$7570$1nosrN g$x$9839$1nosrN)
                         (begin
                           '#f
                           (memq
                             (g$id->sym$7571$1nosrN g$x$9839$1nosrN)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9835$1nosrN)
              ((case-lambda
                 ((g$ls/false$9836$1nosrN)
                  (if (if g$ls/false$9836$1nosrN
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9837$1nosrN)
                               (if (g$for-all$5698$1nosrN
                                     g$valid-option?$9834$1nosrN
                                     g$opt*$9837$1nosrN)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6840$1nosrN
                                     (map g$id->sym$7571$1nosrN
                                          g$opt*$9837$1nosrN)))
                                 '#f)))
                            g$ls/false$9836$1nosrN))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9838$1nosrN)
                         (g$bless$7811$1nosrN
                           (list
                             'quote
                             (g$file-options-spec$6840$1nosrN
                               (map g$id->sym$7571$1nosrN
                                    g$opt*$9838$1nosrN))))))
                      g$ls/false$9836$1nosrN)
                    (g$syntax-violation$7959$1nosrN
                      '#f
                      '"invalid syntax"
                      g$t$9835$1nosrN))))
               (g$syntax-dispatch$7848$1nosrN
                 g$t$9835$1nosrN
                 '(_ . each-any)))))
           g$x$9833$1nosrN)))))
   (g$symbol-macro$7857$1nosrN
     g$symbol-macro$11303$1nosrN
     (case-lambda
       ((g$x$9840$1nosrN g$set$9841$1nosrN)
        ((case-lambda
           ((g$t$9842$1nosrN)
            ((case-lambda
               ((g$ls/false$9843$1nosrN)
                (if (if g$ls/false$9843$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9844$1nosrN)
                             (if (g$id?$7570$1nosrN g$name$9844$1nosrN)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7571$1nosrN g$name$9844$1nosrN)
                                   g$set$9841$1nosrN))
                               '#f)))
                          g$ls/false$9843$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9845$1nosrN)
                       (g$bless$7811$1nosrN (list 'quote g$name$9845$1nosrN))))
                    g$ls/false$9843$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$9842$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$9842$1nosrN '(_ any)))))
         g$x$9840$1nosrN))))
   (g$macro-transformer$7858$1nosrN
     g$macro-transformer$11304$1nosrN
     (case-lambda
       ((g$x$9846$1nosrN)
        (if (procedure? g$x$9846$1nosrN)
          g$x$9846$1nosrN
          (if (symbol? g$x$9846$1nosrN)
            ((case-lambda
               ((g$t$9847$1nosrN)
                (if (memv g$t$9847$1nosrN '(define-record-type))
                  g$define-record-type-macro$7842$1nosrN
                  (if (memv g$t$9847$1nosrN '(define-struct))
                    g$define-struct-macro$7841$1nosrN
                    (if (memv g$t$9847$1nosrN '(include))
                      g$include-macro$7836$1nosrN
                      (if (memv g$t$9847$1nosrN '(cond))
                        g$cond-macro$7834$1nosrN
                        (if (memv g$t$9847$1nosrN '(let))
                          g$let-macro$7814$1nosrN
                          (if (memv g$t$9847$1nosrN '(do))
                            g$do-macro$7830$1nosrN
                            (if (memv g$t$9847$1nosrN '(or))
                              g$or-macro$7832$1nosrN
                              (if (memv g$t$9847$1nosrN '(and))
                                g$and-macro$7833$1nosrN
                                (if (memv g$t$9847$1nosrN '(let*))
                                  g$let*-macro$7831$1nosrN
                                  (if (memv g$t$9847$1nosrN '(let-values))
                                    g$let-values-macro$7815$1nosrN
                                    (if (memv g$t$9847$1nosrN '(let*-values))
                                      g$let*-values-macro$7816$1nosrN
                                      (if (memv g$t$9847$1nosrN '(syntax-rules))
                                        g$syntax-rules-macro$7838$1nosrN
                                        (if (memv g$t$9847$1nosrN '(quasiquote))
                                          g$quasiquote-macro$7839$1nosrN
                                          (if (memv
                                                g$t$9847$1nosrN
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7840$1nosrN
                                            (if (memv
                                                  g$t$9847$1nosrN
                                                  '(with-syntax))
                                              g$with-syntax-macro$7812$1nosrN
                                              (if (memv g$t$9847$1nosrN '(when))
                                                g$when-macro$7804$1nosrN
                                                (if (memv
                                                      g$t$9847$1nosrN
                                                      '(unless))
                                                  g$unless-macro$7805$1nosrN
                                                  (if (memv
                                                        g$t$9847$1nosrN
                                                        '(case))
                                                    g$case-macro$7807$1nosrN
                                                    (if (memv
                                                          g$t$9847$1nosrN
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7829$1nosrN
                                                      (if (memv
                                                            g$t$9847$1nosrN
                                                            '(time))
                                                        g$time-macro$7825$1nosrN
                                                        (if (memv
                                                              g$t$9847$1nosrN
                                                              '(delay))
                                                          g$delay-macro$7826$1nosrN
                                                          (if (memv
                                                                g$t$9847$1nosrN
                                                                '(assert))
                                                            g$assert-macro$7827$1nosrN
                                                            (if (memv
                                                                  g$t$9847$1nosrN
                                                                  '(endianness))
                                                              g$endianness-macro$7828$1nosrN
                                                              (if (memv
                                                                    g$t$9847$1nosrN
                                                                    '(guard))
                                                                g$guard-macro$7823$1nosrN
                                                                (if (memv
                                                                      g$t$9847$1nosrN
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7824$1nosrN
                                                                  (if (memv
                                                                        g$t$9847$1nosrN
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7817$1nosrN
                                                                    (if (memv
                                                                          g$t$9847$1nosrN
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7818$1nosrN
                                                                      (if (memv
                                                                            g$t$9847$1nosrN
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7819$1nosrN
                                                                        (if (memv
                                                                              g$t$9847$1nosrN
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7821$1nosrN
                                                                          (if (memv
                                                                                g$t$9847$1nosrN
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7822$1nosrN
                                                                            (if (memv
                                                                                  g$t$9847$1nosrN
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7843$1nosrN
                                                                              (if (memv
                                                                                    g$t$9847$1nosrN
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7845$1nosrN
                                                                                (if (memv
                                                                                      g$t$9847$1nosrN
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7837$1nosrN
                                                                                  (if (memv
                                                                                        g$t$9847$1nosrN
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9848$1nosrN)
                                                                                       (g$symbol-macro$7857$1nosrN
                                                                                         g$x$9848$1nosrN
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9847$1nosrN
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9849$1nosrN)
                                                                                         (g$symbol-macro$7857$1nosrN
                                                                                           g$x$9849$1nosrN
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9847$1nosrN
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9850$1nosrN)
                                                                                           (g$symbol-macro$7857$1nosrN
                                                                                             g$x$9850$1nosrN
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9847$1nosrN
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7856$1nosrN
                                                                                          (if (memv
                                                                                                g$t$9847$1nosrN
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7844$1nosrN
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9846$1nosrN)))))))))))))))))))))))))))))))))))))))))
             g$x$9846$1nosrN)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9846$1nosrN))))))
   (g$local-macro-transformer$7859$1nosrN
     g$local-macro-transformer$11305$1nosrN
     (case-lambda ((g$x$9851$1nosrN) (car g$x$9851$1nosrN))))
   (g$do-macro-call$7860$1nosrN
     g$do-macro-call$11306$1nosrN
     (case-lambda
       ((g$transformer$9852$1nosrN g$expr$9853$1nosrN)
        ((case-lambda
           ((g$out$9854$1nosrN)
            (begin
              ((letrec ((g$f$9855$1nosrN
                          (case-lambda
                            ((g$x$9856$1nosrN)
                             (if (not (g$stx?$7542$1nosrN g$x$9856$1nosrN))
                               (if (pair? g$x$9856$1nosrN)
                                 (begin
                                   (g$f$9855$1nosrN (car g$x$9856$1nosrN))
                                   (g$f$9855$1nosrN (cdr g$x$9856$1nosrN)))
                                 (if (vector? g$x$9856$1nosrN)
                                   (vector-for-each
                                     g$f$9855$1nosrN
                                     g$x$9856$1nosrN)
                                   (if (symbol? g$x$9856$1nosrN)
                                     (g$syntax-violation$7959$1nosrN
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9853$1nosrN
                                       g$x$9856$1nosrN)
                                     (void))))
                               (void))))))
                 g$f$9855$1nosrN)
               g$out$9854$1nosrN)
              (g$add-mark$7559$1nosrN
                (g$gen-mark$7554$1nosrN)
                g$out$9854$1nosrN
                g$expr$9853$1nosrN))))
         (g$transformer$9852$1nosrN
           (g$add-mark$7559$1nosrN
             g$anti-mark$7555$1nosrN
             g$expr$9853$1nosrN
             '#f))))))
   (g$chi-macro$7861$1nosrN
     g$chi-macro$11307$1nosrN
     (case-lambda
       ((g$p$9857$1nosrN g$e$9858$1nosrN)
        (g$do-macro-call$7860$1nosrN
          (g$macro-transformer$7858$1nosrN g$p$9857$1nosrN)
          g$e$9858$1nosrN))))
   (g$chi-local-macro$7862$1nosrN
     g$chi-local-macro$11308$1nosrN
     (case-lambda
       ((g$p$9859$1nosrN g$e$9860$1nosrN)
        (g$do-macro-call$7860$1nosrN
          (g$local-macro-transformer$7859$1nosrN g$p$9859$1nosrN)
          g$e$9860$1nosrN))))
   (g$chi-global-macro$7863$1nosrN
     g$chi-global-macro$11309$1nosrN
     (case-lambda
       ((g$p$9861$1nosrN g$e$9862$1nosrN)
        ((case-lambda
           ((g$lib$9863$1nosrN g$loc$9864$1nosrN)
            (begin
              (g$visit-library$7386$1nosrN g$lib$9863$1nosrN)
              ((case-lambda
                 ((g$x$9865$1nosrN)
                  ((case-lambda
                     ((g$transformer$9866$1nosrN)
                      (g$do-macro-call$7860$1nosrN
                        g$transformer$9866$1nosrN
                        g$e$9862$1nosrN)))
                   (if (procedure? g$x$9865$1nosrN)
                     g$x$9865$1nosrN
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9865$1nosrN)))))
               (symbol-value g$loc$9864$1nosrN)))))
         (car g$p$9861$1nosrN)
         (cdr g$p$9861$1nosrN)))))
   (g$chi-expr*$7864$1nosrN
     g$chi-expr*$11310$1nosrN
     (case-lambda
       ((g$e*$9867$1nosrN g$r$9868$1nosrN g$mr$9869$1nosrN)
        (if (null? g$e*$9867$1nosrN)
          '()
          ((case-lambda
             ((g$e$9870$1nosrN)
              (cons
                g$e$9870$1nosrN
                (g$chi-expr*$7864$1nosrN
                  (cdr g$e*$9867$1nosrN)
                  g$r$9868$1nosrN
                  g$mr$9869$1nosrN))))
           (g$chi-expr$7866$1nosrN
             (car g$e*$9867$1nosrN)
             g$r$9868$1nosrN
             g$mr$9869$1nosrN))))))
   (g$chi-application$7865$1nosrN
     g$chi-application$11311$1nosrN
     (case-lambda
       ((g$e$9871$1nosrN g$r$9872$1nosrN g$mr$9873$1nosrN)
        ((case-lambda
           ((g$t$9874$1nosrN)
            ((case-lambda
               ((g$ls/false$9875$1nosrN)
                (if g$ls/false$9875$1nosrN
                  (apply
                    (case-lambda
                      ((g$rator$9876$1nosrN g$rands$9877$1nosrN)
                       ((case-lambda
                          ((g$rator$9878$1nosrN)
                           (cons
                             g$rator$9878$1nosrN
                             (g$chi-expr*$7864$1nosrN
                               g$rands$9877$1nosrN
                               g$r$9872$1nosrN
                               g$mr$9873$1nosrN))))
                        (g$chi-expr$7866$1nosrN
                          g$rator$9876$1nosrN
                          g$r$9872$1nosrN
                          g$mr$9873$1nosrN))))
                    g$ls/false$9875$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$9874$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$9874$1nosrN
               '(any . each-any)))))
         g$e$9871$1nosrN))))
   (g$chi-expr$7866$1nosrN
     g$chi-expr$11312$1nosrN
     (case-lambda
       ((g$e$9879$1nosrN g$r$9880$1nosrN g$mr$9881$1nosrN)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7590$1nosrN g$e$9879$1nosrN g$r$9880$1nosrN)))
          (case-lambda
            ((g$type$9885$1nosrN g$value$9886$1nosrN g$kwd$9887$1nosrN)
             ((case-lambda
                ((g$kwd$9888$1nosrN g$value$9889$1nosrN g$type$9890$1nosrN)
                 ((case-lambda
                    ((g$t$9891$1nosrN)
                     (if (memv g$t$9891$1nosrN '(core-macro))
                       ((case-lambda
                          ((g$transformer$9892$1nosrN)
                           (g$transformer$9892$1nosrN
                             g$e$9879$1nosrN
                             g$r$9880$1nosrN
                             g$mr$9881$1nosrN)))
                        (g$core-macro-transformer$7855$1nosrN
                          g$value$9889$1nosrN))
                       (if (memv g$t$9891$1nosrN '(global))
                         ((case-lambda
                            ((g$lib$9893$1nosrN)
                             ((case-lambda
                                ((g$loc$9894$1nosrN)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7900$1nosrN)
                                        g$lib$9893$1nosrN)
                                       g$loc$9894$1nosrN))))))
                              (cdr g$value$9889$1nosrN))))
                          (car g$value$9889$1nosrN))
                         (if (memv g$t$9891$1nosrN '(core-prim))
                           ((case-lambda
                              ((g$name$9895$1nosrN)
                               (list 'primitive g$name$9895$1nosrN)))
                            g$value$9889$1nosrN)
                           (if (memv g$t$9891$1nosrN '(call))
                             (g$chi-application$7865$1nosrN
                               g$e$9879$1nosrN
                               g$r$9880$1nosrN
                               g$mr$9881$1nosrN)
                             (if (memv g$t$9891$1nosrN '(lexical))
                               ((case-lambda
                                  ((g$lex$9896$1nosrN) g$lex$9896$1nosrN))
                                (g$lexical-var$7792$1nosrN g$value$9889$1nosrN))
                               (if (memv
                                     g$t$9891$1nosrN
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7866$1nosrN
                                   (g$chi-global-macro$7863$1nosrN
                                     g$value$9889$1nosrN
                                     g$e$9879$1nosrN)
                                   g$r$9880$1nosrN
                                   g$mr$9881$1nosrN)
                                 (if (memv
                                       g$t$9891$1nosrN
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7866$1nosrN
                                     (g$chi-local-macro$7862$1nosrN
                                       g$value$9889$1nosrN
                                       g$e$9879$1nosrN)
                                     g$r$9880$1nosrN
                                     g$mr$9881$1nosrN)
                                   (if (memv g$t$9891$1nosrN '(macro macro!))
                                     (g$chi-expr$7866$1nosrN
                                       (g$chi-macro$7861$1nosrN
                                         g$value$9889$1nosrN
                                         g$e$9879$1nosrN)
                                       g$r$9880$1nosrN
                                       g$mr$9881$1nosrN)
                                     (if (memv g$t$9891$1nosrN '(constant))
                                       ((case-lambda
                                          ((g$datum$9897$1nosrN)
                                           (list 'quote g$datum$9897$1nosrN)))
                                        g$value$9889$1nosrN)
                                       (if (memv g$t$9891$1nosrN '(set!))
                                         (g$chi-set!$7867$1nosrN
                                           g$e$9879$1nosrN
                                           g$r$9880$1nosrN
                                           g$mr$9881$1nosrN)
                                         (if (memv g$t$9891$1nosrN '(begin))
                                           ((case-lambda
                                              ((g$t$9898$1nosrN)
                                               ((case-lambda
                                                  ((g$ls/false$9899$1nosrN)
                                                   (if g$ls/false$9899$1nosrN
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9900$1nosrN
                                                            g$x*$9901$1nosrN)
                                                          (g$build-sequence$7504$1nosrN
                                                            '#f
                                                            (g$chi-expr*$7864$1nosrN
                                                              (cons
                                                                g$x$9900$1nosrN
                                                                g$x*$9901$1nosrN)
                                                              g$r$9880$1nosrN
                                                              g$mr$9881$1nosrN))))
                                                       g$ls/false$9899$1nosrN)
                                                     (g$syntax-violation$7959$1nosrN
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9898$1nosrN))))
                                                (g$syntax-dispatch$7848$1nosrN
                                                  g$t$9898$1nosrN
                                                  '(_ any . each-any)))))
                                            g$e$9879$1nosrN)
                                           (if (memv
                                                 g$t$9891$1nosrN
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9902$1nosrN)
                                                 ((case-lambda
                                                    ((g$ls/false$9903$1nosrN)
                                                     (if (if g$ls/false$9903$1nosrN
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9904$1nosrN
                                                                    g$xrhs*$9905$1nosrN
                                                                    g$xbody$9906$1nosrN
                                                                    g$xbody*$9907$1nosrN)
                                                                  (if (not (g$valid-bound-ids?$7575$1nosrN
                                                                             g$xlhs*$9904$1nosrN))
                                                                    (g$syntax-violation$7959$1nosrN
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9879$1nosrN)
                                                                    (void))))
                                                               g$ls/false$9903$1nosrN))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9908$1nosrN
                                                              g$xrhs*$9909$1nosrN
                                                              g$xbody$9910$1nosrN
                                                              g$xbody*$9911$1nosrN)
                                                            ((case-lambda
                                                               ((g$xlab*$9912$1nosrN)
                                                                ((case-lambda
                                                                   ((g$xrib$9913$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$xb*$9914$1nosrN)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7504$1nosrN
                                                                              '#f
                                                                              (g$chi-expr*$7864$1nosrN
                                                                                (map (case-lambda
                                                                                       ((g$x$9915$1nosrN)
                                                                                        (g$add-subst$7560$1nosrN
                                                                                          g$xrib$9913$1nosrN
                                                                                          g$x$9915$1nosrN)))
                                                                                     (cons
                                                                                       g$xbody$9910$1nosrN
                                                                                       g$xbody*$9911$1nosrN))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9912$1nosrN
                                                                                       g$xb*$9914$1nosrN)
                                                                                  g$r$9880$1nosrN)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9912$1nosrN
                                                                                       g$xb*$9914$1nosrN)
                                                                                  g$mr$9881$1nosrN))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9916$1nosrN)
                                                                             (g$make-eval-transformer$7602$1nosrN
                                                                               (g$expand-transformer$7893$1nosrN
                                                                                 (if (eq? g$type$9890$1nosrN
                                                                                          'let-syntax)
                                                                                   g$x$9916$1nosrN
                                                                                   (g$add-subst$7560$1nosrN
                                                                                     g$xrib$9913$1nosrN
                                                                                     g$x$9916$1nosrN))
                                                                                 g$mr$9881$1nosrN))))
                                                                          g$xrhs*$9909$1nosrN))))
                                                                 (g$make-full-rib$7538$1nosrN
                                                                   g$xlhs*$9908$1nosrN
                                                                   g$xlab*$9912$1nosrN))))
                                                             (map g$gen-label$7516$1nosrN
                                                                  g$xlhs*$9908$1nosrN))))
                                                         g$ls/false$9903$1nosrN)
                                                       (g$syntax-violation$7959$1nosrN
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9902$1nosrN))))
                                                  (g$syntax-dispatch$7848$1nosrN
                                                    g$t$9902$1nosrN
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9879$1nosrN)
                                             (if (memv
                                                   g$t$9891$1nosrN
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7959$1nosrN
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9879$1nosrN)
                                               (if (memv
                                                     g$t$9891$1nosrN
                                                     '(syntax))
                                                 (g$syntax-violation$7959$1nosrN
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9879$1nosrN)
                                                 (if (memv
                                                       g$t$9891$1nosrN
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7959$1nosrN
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9917$1nosrN)
                                                           (if (memv
                                                                 g$t$9917$1nosrN
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9917$1nosrN
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9917$1nosrN
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9917$1nosrN
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9917$1nosrN
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9890$1nosrN)
                                                       '" was found where an expression was expected")
                                                     g$e$9879$1nosrN)
                                                   (if (memv
                                                         g$t$9891$1nosrN
                                                         '(mutable))
                                                     (g$syntax-violation$7959$1nosrN
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9879$1nosrN)
                                                     (g$syntax-violation$7959$1nosrN
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9879$1nosrN)))))))))))))))))))
                  g$type$9890$1nosrN)))
              g$kwd$9887$1nosrN
              g$value$9886$1nosrN
              g$type$9885$1nosrN)))))))
   (g$chi-set!$7867$1nosrN
     g$chi-set!$11313$1nosrN
     (case-lambda
       ((g$e$9918$1nosrN g$r$9919$1nosrN g$mr$9920$1nosrN)
        ((case-lambda
           ((g$t$9921$1nosrN)
            ((case-lambda
               ((g$ls/false$9922$1nosrN)
                (if (if g$ls/false$9922$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9923$1nosrN g$v$9924$1nosrN)
                             (g$id?$7570$1nosrN g$x$9923$1nosrN)))
                          g$ls/false$9922$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9925$1nosrN g$v$9926$1nosrN)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7590$1nosrN
                              g$x$9925$1nosrN
                              g$r$9919$1nosrN)))
                         (case-lambda
                           ((g$type$9930$1nosrN
                              g$value$9931$1nosrN
                              g$kwd$9932$1nosrN)
                            ((case-lambda
                               ((g$kwd$9933$1nosrN
                                  g$value$9934$1nosrN
                                  g$type$9935$1nosrN)
                                ((case-lambda
                                   ((g$t$9936$1nosrN)
                                    (if (memv g$t$9936$1nosrN '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7794$1nosrN
                                          g$value$9934$1nosrN
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7792$1nosrN
                                            g$value$9934$1nosrN)
                                          (g$chi-expr$7866$1nosrN
                                            g$v$9926$1nosrN
                                            g$r$9919$1nosrN
                                            g$mr$9920$1nosrN)))
                                      (if (memv g$t$9936$1nosrN '(core-prim))
                                        (g$syntax-violation$7959$1nosrN
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9918$1nosrN)
                                        (if (memv g$t$9936$1nosrN '(global))
                                          (g$syntax-violation$7959$1nosrN
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9918$1nosrN)
                                          (if (memv
                                                g$t$9936$1nosrN
                                                '(global-macro!))
                                            (g$chi-expr$7866$1nosrN
                                              (g$chi-global-macro$7863$1nosrN
                                                g$value$9934$1nosrN
                                                g$e$9918$1nosrN)
                                              g$r$9919$1nosrN
                                              g$mr$9920$1nosrN)
                                            (if (memv
                                                  g$t$9936$1nosrN
                                                  '(local-macro!))
                                              (g$chi-expr$7866$1nosrN
                                                (g$chi-local-macro$7862$1nosrN
                                                  g$value$9934$1nosrN
                                                  g$e$9918$1nosrN)
                                                g$r$9919$1nosrN
                                                g$mr$9920$1nosrN)
                                              (if (memv
                                                    g$t$9936$1nosrN
                                                    '(mutable))
                                                (g$syntax-violation$7959$1nosrN
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9918$1nosrN)
                                                (g$syntax-violation$7959$1nosrN
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9918$1nosrN)))))))))
                                 g$type$9935$1nosrN)))
                             g$kwd$9932$1nosrN
                             g$value$9931$1nosrN
                             g$type$9930$1nosrN))))))
                    g$ls/false$9922$1nosrN)
                  (g$syntax-violation$7959$1nosrN
                    '#f
                    '"invalid syntax"
                    g$t$9921$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$9921$1nosrN '(_ any any)))))
         g$e$9918$1nosrN))))
   (g$verify-formals$7868$1nosrN
     g$verify-formals$11314$1nosrN
     (case-lambda
       ((g$fmls$9937$1nosrN g$stx$9938$1nosrN)
        ((case-lambda
           ((g$t$9939$1nosrN)
            ((case-lambda
               ((g$ls/false$9940$1nosrN)
                (if g$ls/false$9940$1nosrN
                  (apply
                    (case-lambda
                      ((g$x*$9941$1nosrN)
                       (if (not (g$valid-bound-ids?$7575$1nosrN
                                  g$x*$9941$1nosrN))
                         (g$invalid-fmls-error$7813$1nosrN
                           g$stx$9938$1nosrN
                           g$fmls$9937$1nosrN)
                         (void))))
                    g$ls/false$9940$1nosrN)
                  ((case-lambda
                     ((g$t$9942$1nosrN)
                      ((case-lambda
                         ((g$ls/false$9943$1nosrN)
                          (if g$ls/false$9943$1nosrN
                            (apply
                              (case-lambda
                                ((g$x*$9944$1nosrN g$x$9945$1nosrN)
                                 (if (not (g$valid-bound-ids?$7575$1nosrN
                                            (cons
                                              g$x$9945$1nosrN
                                              g$x*$9944$1nosrN)))
                                   (g$invalid-fmls-error$7813$1nosrN
                                     g$stx$9938$1nosrN
                                     g$fmls$9937$1nosrN)
                                   (void))))
                              g$ls/false$9943$1nosrN)
                            ((case-lambda
                               ((g$t$9946$1nosrN)
                                ((case-lambda
                                   ((g$ls/false$9947$1nosrN)
                                    (if g$ls/false$9947$1nosrN
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9938$1nosrN)))
                                        g$ls/false$9947$1nosrN)
                                      (g$syntax-violation$7959$1nosrN
                                        '#f
                                        '"invalid syntax"
                                        g$t$9946$1nosrN))))
                                 (g$syntax-dispatch$7848$1nosrN
                                   g$t$9946$1nosrN
                                   '_))))
                             g$t$9942$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$9942$1nosrN
                         '#(each+ any () any)))))
                   g$t$9939$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$9939$1nosrN 'each-any))))
         g$fmls$9937$1nosrN))))
   (g$chi-lambda-clause$7869$1nosrN
     g$chi-lambda-clause$11315$1nosrN
     (case-lambda
       ((g$stx$9948$1nosrN
          g$fmls$9949$1nosrN
          g$body*$9950$1nosrN
          g$r$9951$1nosrN
          g$mr$9952$1nosrN)
        ((case-lambda
           ((g$t$9953$1nosrN)
            ((case-lambda
               ((g$ls/false$9954$1nosrN)
                (if g$ls/false$9954$1nosrN
                  (apply
                    (case-lambda
                      ((g$x*$9955$1nosrN)
                       (begin
                         (g$verify-formals$7868$1nosrN
                           g$fmls$9949$1nosrN
                           g$stx$9948$1nosrN)
                         ((case-lambda
                            ((g$lex*$9956$1nosrN g$lab*$9957$1nosrN)
                             (values
                               g$lex*$9956$1nosrN
                               (g$chi-internal$7877$1nosrN
                                 (g$add-subst$7560$1nosrN
                                   (g$make-full-rib$7538$1nosrN
                                     g$x*$9955$1nosrN
                                     g$lab*$9957$1nosrN)
                                   g$body*$9950$1nosrN)
                                 (g$add-lexicals$7796$1nosrN
                                   g$lab*$9957$1nosrN
                                   g$lex*$9956$1nosrN
                                   g$r$9951$1nosrN)
                                 g$mr$9952$1nosrN))))
                          (map g$gen-lexical$7514$1nosrN g$x*$9955$1nosrN)
                          (map g$gen-label$7516$1nosrN g$x*$9955$1nosrN)))))
                    g$ls/false$9954$1nosrN)
                  ((case-lambda
                     ((g$t$9958$1nosrN)
                      ((case-lambda
                         ((g$ls/false$9959$1nosrN)
                          (if g$ls/false$9959$1nosrN
                            (apply
                              (case-lambda
                                ((g$x*$9960$1nosrN g$x$9961$1nosrN)
                                 (begin
                                   (g$verify-formals$7868$1nosrN
                                     g$fmls$9949$1nosrN
                                     g$stx$9948$1nosrN)
                                   ((case-lambda
                                      ((g$lex*$9962$1nosrN
                                         g$lab*$9963$1nosrN
                                         g$lex$9964$1nosrN
                                         g$lab$9965$1nosrN)
                                       (values
                                         (append
                                           g$lex*$9962$1nosrN
                                           g$lex$9964$1nosrN)
                                         (g$chi-internal$7877$1nosrN
                                           (g$add-subst$7560$1nosrN
                                             (g$make-full-rib$7538$1nosrN
                                               (cons
                                                 g$x$9961$1nosrN
                                                 g$x*$9960$1nosrN)
                                               (cons
                                                 g$lab$9965$1nosrN
                                                 g$lab*$9963$1nosrN))
                                             g$body*$9950$1nosrN)
                                           (g$add-lexicals$7796$1nosrN
                                             (cons
                                               g$lab$9965$1nosrN
                                               g$lab*$9963$1nosrN)
                                             (cons
                                               g$lex$9964$1nosrN
                                               g$lex*$9962$1nosrN)
                                             g$r$9951$1nosrN)
                                           g$mr$9952$1nosrN))))
                                    (map g$gen-lexical$7514$1nosrN
                                         g$x*$9960$1nosrN)
                                    (map g$gen-label$7516$1nosrN
                                         g$x*$9960$1nosrN)
                                    (g$gen-lexical$7514$1nosrN g$x$9961$1nosrN)
                                    (g$gen-label$7516$1nosrN
                                      g$x$9961$1nosrN)))))
                              g$ls/false$9959$1nosrN)
                            ((case-lambda
                               ((g$t$9966$1nosrN)
                                ((case-lambda
                                   ((g$ls/false$9967$1nosrN)
                                    (if g$ls/false$9967$1nosrN
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7959$1nosrN
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9949$1nosrN)))
                                        g$ls/false$9967$1nosrN)
                                      (g$syntax-violation$7959$1nosrN
                                        '#f
                                        '"invalid syntax"
                                        g$t$9966$1nosrN))))
                                 (g$syntax-dispatch$7848$1nosrN
                                   g$t$9966$1nosrN
                                   '_))))
                             g$t$9958$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$9958$1nosrN
                         '#(each+ any () any)))))
                   g$t$9953$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$9953$1nosrN 'each-any))))
         g$fmls$9949$1nosrN))))
   (g$chi-lambda-clause*$7870$1nosrN
     g$chi-lambda-clause*$11316$1nosrN
     (case-lambda
       ((g$stx$9968$1nosrN
          g$fmls*$9969$1nosrN
          g$body**$9970$1nosrN
          g$r$9971$1nosrN
          g$mr$9972$1nosrN)
        (if (null? g$fmls*$9969$1nosrN)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7869$1nosrN
                 g$stx$9968$1nosrN
                 (car g$fmls*$9969$1nosrN)
                 (car g$body**$9970$1nosrN)
                 g$r$9971$1nosrN
                 g$mr$9972$1nosrN)))
            (case-lambda
              ((g$a$9975$1nosrN g$b$9976$1nosrN)
               ((case-lambda
                  ((g$b$9977$1nosrN g$a$9978$1nosrN)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7870$1nosrN
                          g$stx$9968$1nosrN
                          (cdr g$fmls*$9969$1nosrN)
                          (cdr g$body**$9970$1nosrN)
                          g$r$9971$1nosrN
                          g$mr$9972$1nosrN)))
                     (case-lambda
                       ((g$a*$9981$1nosrN g$b*$9982$1nosrN)
                        ((case-lambda
                           ((g$b*$9983$1nosrN g$a*$9984$1nosrN)
                            (values
                              (cons g$a$9978$1nosrN g$a*$9984$1nosrN)
                              (cons g$b$9977$1nosrN g$b*$9983$1nosrN))))
                         g$b*$9982$1nosrN
                         g$a*$9981$1nosrN))))))
                g$b$9976$1nosrN
                g$a$9975$1nosrN))))))))
   (g$chi-defun$7871$1nosrN
     g$chi-defun$11317$1nosrN
     (case-lambda
       ((g$x$9985$1nosrN g$r$9986$1nosrN g$mr$9987$1nosrN)
        ((case-lambda
           ((g$fmls$9988$1nosrN g$body*$9989$1nosrN)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7869$1nosrN
                   g$fmls$9988$1nosrN
                   g$fmls$9988$1nosrN
                   g$body*$9989$1nosrN
                   g$r$9986$1nosrN
                   g$mr$9987$1nosrN)))
              (case-lambda
                ((g$fmls$9992$1nosrN g$body$9993$1nosrN)
                 ((case-lambda
                    ((g$body$9994$1nosrN g$fmls$9995$1nosrN)
                     (g$build-lambda$7501$1nosrN
                       '#f
                       g$fmls$9995$1nosrN
                       g$body$9994$1nosrN)))
                  g$body$9993$1nosrN
                  g$fmls$9992$1nosrN))))))
         (car g$x$9985$1nosrN)
         (cdr g$x$9985$1nosrN)))))
   (g$chi-rhs$7872$1nosrN
     g$chi-rhs$11318$1nosrN
     (case-lambda
       ((g$rhs$9996$1nosrN g$r$9997$1nosrN g$mr$9998$1nosrN)
        ((case-lambda
           ((g$t$9999$1nosrN)
            (if (memv g$t$9999$1nosrN '(defun))
              (g$chi-defun$7871$1nosrN
                (cdr g$rhs$9996$1nosrN)
                g$r$9997$1nosrN
                g$mr$9998$1nosrN)
              (if (memv g$t$9999$1nosrN '(expr))
                ((case-lambda
                   ((g$expr$10000$1nosrN)
                    (g$chi-expr$7866$1nosrN
                      g$expr$10000$1nosrN
                      g$r$9997$1nosrN
                      g$mr$9998$1nosrN)))
                 (cdr g$rhs$9996$1nosrN))
                (if (memv g$t$9999$1nosrN '(top-expr))
                  ((case-lambda
                     ((g$expr$10001$1nosrN)
                      (g$build-sequence$7504$1nosrN
                        '#f
                        (list
                          (g$chi-expr$7866$1nosrN
                            g$expr$10001$1nosrN
                            g$r$9997$1nosrN
                            g$mr$9998$1nosrN)
                          (g$build-void$7505$1nosrN)))))
                   (cdr g$rhs$9996$1nosrN))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9996$1nosrN))))))
         (car g$rhs$9996$1nosrN)))))
   (g$expand-interaction-rhs*/init*$7873$1nosrN
     g$expand-interaction-rhs*/init*$11319$1nosrN
     (case-lambda
       ((g$lhs*$10002$1nosrN
          g$rhs*$10003$1nosrN
          g$init*$10004$1nosrN
          g$r$10005$1nosrN
          g$mr$10006$1nosrN)
        ((letrec ((g$f$10007$1nosrN
                    (case-lambda
                      ((g$lhs*$10008$1nosrN g$rhs*$10009$1nosrN)
                       (if (null? g$lhs*$10008$1nosrN)
                         (map (case-lambda
                                ((g$x$10010$1nosrN)
                                 (g$chi-expr$7866$1nosrN
                                   g$x$10010$1nosrN
                                   g$r$10005$1nosrN
                                   g$mr$10006$1nosrN)))
                              g$init*$10004$1nosrN)
                         ((case-lambda
                            ((g$lhs$10011$1nosrN g$rhs$10012$1nosrN)
                             ((case-lambda
                                ((g$t$10013$1nosrN)
                                 (if (memv g$t$10013$1nosrN '(defun))
                                   ((case-lambda
                                      ((g$rhs$10014$1nosrN)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10011$1nosrN
                                           g$rhs$10014$1nosrN)
                                         (g$f$10007$1nosrN
                                           (cdr g$lhs*$10008$1nosrN)
                                           (cdr g$rhs*$10009$1nosrN)))))
                                    (g$chi-defun$7871$1nosrN
                                      (cdr g$rhs$10012$1nosrN)
                                      g$r$10005$1nosrN
                                      g$mr$10006$1nosrN))
                                   (if (memv g$t$10013$1nosrN '(expr))
                                     ((case-lambda
                                        ((g$rhs$10015$1nosrN)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10011$1nosrN
                                             g$rhs$10015$1nosrN)
                                           (g$f$10007$1nosrN
                                             (cdr g$lhs*$10008$1nosrN)
                                             (cdr g$rhs*$10009$1nosrN)))))
                                      (g$chi-expr$7866$1nosrN
                                        (cdr g$rhs$10012$1nosrN)
                                        g$r$10005$1nosrN
                                        g$mr$10006$1nosrN))
                                     (if (memv g$t$10013$1nosrN '(top-expr))
                                       ((case-lambda
                                          ((g$e$10016$1nosrN)
                                           (cons
                                             g$e$10016$1nosrN
                                             (g$f$10007$1nosrN
                                               (cdr g$lhs*$10008$1nosrN)
                                               (cdr g$rhs*$10009$1nosrN)))))
                                        (g$chi-expr$7866$1nosrN
                                          (cdr g$rhs$10012$1nosrN)
                                          g$r$10005$1nosrN
                                          g$mr$10006$1nosrN))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10012$1nosrN))))))
                              (car g$rhs$10012$1nosrN))))
                          (car g$lhs*$10008$1nosrN)
                          (car g$rhs*$10009$1nosrN)))))))
           g$f$10007$1nosrN)
         g$lhs*$10002$1nosrN
         g$rhs*$10003$1nosrN))))
   (g$chi-rhs*$7874$1nosrN
     g$chi-rhs*$11320$1nosrN
     (case-lambda
       ((g$rhs*$10017$1nosrN g$r$10018$1nosrN g$mr$10019$1nosrN)
        ((letrec ((g$f$10020$1nosrN
                    (case-lambda
                      ((g$ls$10021$1nosrN)
                       (if (null? g$ls$10021$1nosrN)
                         '()
                         ((case-lambda
                            ((g$a$10022$1nosrN)
                             (cons
                               g$a$10022$1nosrN
                               (g$f$10020$1nosrN (cdr g$ls$10021$1nosrN)))))
                          (g$chi-rhs$7872$1nosrN
                            (car g$ls$10021$1nosrN)
                            g$r$10018$1nosrN
                            g$mr$10019$1nosrN)))))))
           g$f$10020$1nosrN)
         g$rhs*$10017$1nosrN))))
   (g$find-bound=?$7875$1nosrN
     g$find-bound=?$11321$1nosrN
     (case-lambda
       ((g$x$10023$1nosrN g$lhs*$10024$1nosrN g$rhs*$10025$1nosrN)
        (if (null? g$lhs*$10024$1nosrN)
          '#f
          (if (g$bound-id=?$7573$1nosrN
                g$x$10023$1nosrN
                (car g$lhs*$10024$1nosrN))
            (car g$rhs*$10025$1nosrN)
            (g$find-bound=?$7875$1nosrN
              g$x$10023$1nosrN
              (cdr g$lhs*$10024$1nosrN)
              (cdr g$rhs*$10025$1nosrN)))))))
   (g$find-dups$7876$1nosrN
     g$find-dups$11322$1nosrN
     (case-lambda
       ((g$ls$10026$1nosrN)
        ((letrec ((g$f$10027$1nosrN
                    (case-lambda
                      ((g$ls$10028$1nosrN g$dups$10029$1nosrN)
                       (if (null? g$ls$10028$1nosrN)
                         g$dups$10029$1nosrN
                         ((case-lambda
                            ((g$t$10030$1nosrN)
                             (if g$t$10030$1nosrN
                               ((case-lambda
                                  ((g$x$10031$1nosrN)
                                   (g$f$10027$1nosrN
                                     (cdr g$ls$10028$1nosrN)
                                     (cons
                                       (list
                                         (car g$ls$10028$1nosrN)
                                         g$x$10031$1nosrN)
                                       g$dups$10029$1nosrN))))
                                g$t$10030$1nosrN)
                               (g$f$10027$1nosrN
                                 (cdr g$ls$10028$1nosrN)
                                 g$dups$10029$1nosrN))))
                          (g$find-bound=?$7875$1nosrN
                            (car g$ls$10028$1nosrN)
                            (cdr g$ls$10028$1nosrN)
                            (cdr g$ls$10028$1nosrN))))))))
           g$f$10027$1nosrN)
         g$ls$10026$1nosrN
         '()))))
   (g$chi-internal$7877$1nosrN
     g$chi-internal$11323$1nosrN
     (case-lambda
       ((g$e*$10032$1nosrN g$r$10033$1nosrN g$mr$10034$1nosrN)
        ((case-lambda
           ((g$rib$10035$1nosrN)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7892$1nosrN
                   (map (case-lambda
                          ((g$x$10043$1nosrN)
                           (g$add-subst$7560$1nosrN
                             g$rib$10035$1nosrN
                             g$x$10043$1nosrN)))
                        (g$syntax->list$7569$1nosrN g$e*$10032$1nosrN))
                   g$r$10033$1nosrN
                   g$mr$10034$1nosrN
                   '()
                   '()
                   '()
                   '()
                   g$rib$10035$1nosrN
                   '#f)))
              (case-lambda
                ((g$e*$10044$1nosrN
                   g$r$10045$1nosrN
                   g$mr$10046$1nosrN
                   g$lex*$10047$1nosrN
                   g$rhs*$10048$1nosrN
                   g$mod**$10049$1nosrN
                   g$kwd*$10050$1nosrN)
                 ((case-lambda
                    ((g$kwd*$10051$1nosrN
                       g$mod**$10052$1nosrN
                       g$rhs*$10053$1nosrN
                       g$lex*$10054$1nosrN
                       g$mr$10055$1nosrN
                       g$r$10056$1nosrN
                       g$e*$10057$1nosrN)
                     (begin
                       (if (null? g$e*$10057$1nosrN)
                         (g$syntax-violation$7959$1nosrN
                           '#f
                           '"no expression in body"
                           g$e*$10057$1nosrN)
                         (void))
                       ((case-lambda
                          ((g$init*$10058$1nosrN)
                           ((case-lambda
                              ((g$rhs*$10059$1nosrN)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7507$1nosrN
                                     '#f
                                     (reverse g$lex*$10054$1nosrN)
                                     (reverse g$rhs*$10059$1nosrN)
                                     (g$build-sequence$7504$1nosrN
                                       '#f
                                       g$init*$10058$1nosrN)))))))
                            (g$chi-rhs*$7874$1nosrN
                              g$rhs*$10053$1nosrN
                              g$r$10056$1nosrN
                              g$mr$10055$1nosrN))))
                        (g$chi-expr*$7864$1nosrN
                          (append
                            (apply append (reverse g$mod**$10052$1nosrN))
                            g$e*$10057$1nosrN)
                          g$r$10056$1nosrN
                          g$mr$10055$1nosrN)))))
                  g$kwd*$10050$1nosrN
                  g$mod**$10049$1nosrN
                  g$rhs*$10048$1nosrN
                  g$lex*$10047$1nosrN
                  g$mr$10046$1nosrN
                  g$r$10045$1nosrN
                  g$e*$10044$1nosrN))))))
         (g$make-empty-rib$7533$1nosrN)))))
   (g$parse-module$7878$1nosrN
     g$parse-module$11324$1nosrN
     (case-lambda
       ((g$e$10060$1nosrN)
        ((case-lambda
           ((g$t$10061$1nosrN)
            ((case-lambda
               ((g$ls/false$10062$1nosrN)
                (if g$ls/false$10062$1nosrN
                  (apply
                    (case-lambda
                      ((g$export*$10063$1nosrN g$b*$10064$1nosrN)
                       (begin
                         (if (not (g$for-all$5698$1nosrN
                                    g$id?$7570$1nosrN
                                    g$export*$10063$1nosrN))
                           (g$syntax-violation$7959$1nosrN
                             '#f
                             '"module exports must be identifiers"
                             g$e$10060$1nosrN)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$10063$1nosrN)
                           g$b*$10064$1nosrN))))
                    g$ls/false$10062$1nosrN)
                  ((case-lambda
                     ((g$t$10065$1nosrN)
                      ((case-lambda
                         ((g$ls/false$10066$1nosrN)
                          (if g$ls/false$10066$1nosrN
                            (apply
                              (case-lambda
                                ((g$name$10067$1nosrN
                                   g$export*$10068$1nosrN
                                   g$b*$10069$1nosrN)
                                 (begin
                                   (if (not (g$id?$7570$1nosrN
                                              g$name$10067$1nosrN))
                                     (g$syntax-violation$7959$1nosrN
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10060$1nosrN)
                                     (void))
                                   (if (not (g$for-all$5698$1nosrN
                                              g$id?$7570$1nosrN
                                              g$export*$10068$1nosrN))
                                     (g$syntax-violation$7959$1nosrN
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10060$1nosrN)
                                     (void))
                                   (values
                                     g$name$10067$1nosrN
                                     (list->vector g$export*$10068$1nosrN)
                                     g$b*$10069$1nosrN))))
                              g$ls/false$10066$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$10065$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$10065$1nosrN
                         '(_ any each-any . each-any)))))
                   g$t$10061$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$10061$1nosrN
               '(_ each-any . each-any)))))
         g$e$10060$1nosrN))))
   (g$9060$7879$1nosrN
     g$9060$11325$1nosrN
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9063$1nosrN
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9062$7880$1nosrN g$9062$11326$1nosrN '#f)
   (g$9061$7881$1nosrN
     g$9061$11327$1nosrN
     (make-record-constructor-descriptor
       g$9060$7879$1nosrN
       '#f
       g$9062$7880$1nosrN))
   (g$module-interface?$7882$1nosrN
     g$module-interface?$11328$1nosrN
     (record-predicate g$9060$7879$1nosrN))
   (g$make-module-interface$7883$1nosrN
     g$make-module-interface$11329$1nosrN
     (record-constructor g$9061$7881$1nosrN))
   (g$module-interface-first-mark$7884$1nosrN
     g$module-interface-first-mark$11330$1nosrN
     (record-accessor g$9060$7879$1nosrN '0))
   (g$module-interface-exp-id-vec$7885$1nosrN
     g$module-interface-exp-id-vec$11331$1nosrN
     (record-accessor g$9060$7879$1nosrN '1))
   (g$module-interface-exp-lab-vec$7886$1nosrN
     g$module-interface-exp-lab-vec$11332$1nosrN
     (record-accessor g$9060$7879$1nosrN '2))
   (g$set-module-interface-first-mark!$7887$1nosrN
     g$set-module-interface-first-mark!$11333$1nosrN
     (record-mutator g$9060$7879$1nosrN '0))
   (g$set-module-interface-exp-id-vec!$7888$1nosrN
     g$set-module-interface-exp-id-vec!$11334$1nosrN
     (record-mutator g$9060$7879$1nosrN '1))
   (g$set-module-interface-exp-lab-vec!$7889$1nosrN
     g$set-module-interface-exp-lab-vec!$11335$1nosrN
     (record-mutator g$9060$7879$1nosrN '2))
   (g$module-interface-exp-id*$7890$1nosrN
     g$module-interface-exp-id*$11336$1nosrN
     (case-lambda
       ((g$iface$10070$1nosrN g$id$10071$1nosrN)
        (letrec* ((g$diff-marks$10072$1nosrN
                    (case-lambda
                      ((g$ls$10076$1nosrN g$x$10077$1nosrN)
                       (begin
                         (if (null? g$ls$10076$1nosrN)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10078$1nosrN)
                             (if (eq? g$a$10078$1nosrN g$x$10077$1nosrN)
                               '()
                               (cons
                                 g$a$10078$1nosrN
                                 (g$diff-marks$10072$1nosrN
                                   (cdr g$ls$10076$1nosrN)
                                   g$x$10077$1nosrN)))))
                          (car g$ls$10076$1nosrN)))))))
          ((case-lambda
             ((g$diff$10073$1nosrN g$id-vec$10074$1nosrN)
              (if (null? g$diff$10073$1nosrN)
                g$id-vec$10074$1nosrN
                (vector-map
                  (case-lambda
                    ((g$x$10075$1nosrN)
                     (g$make-stx$7543$1nosrN
                       (g$stx-expr$7544$1nosrN g$x$10075$1nosrN)
                       (append
                         g$diff$10073$1nosrN
                         (g$stx-mark*$7545$1nosrN g$x$10075$1nosrN))
                       '()
                       '())))
                  g$id-vec$10074$1nosrN))))
           (g$diff-marks$10072$1nosrN
             (g$stx-mark*$7545$1nosrN g$id$10071$1nosrN)
             (g$module-interface-first-mark$7884$1nosrN g$iface$10070$1nosrN))
           (g$module-interface-exp-id-vec$7885$1nosrN g$iface$10070$1nosrN))))))
   (g$chi-internal-module$7891$1nosrN
     g$chi-internal-module$11337$1nosrN
     (case-lambda
       ((g$e$10079$1nosrN
          g$r$10080$1nosrN
          g$mr$10081$1nosrN
          g$lex*$10082$1nosrN
          g$rhs*$10083$1nosrN
          g$mod**$10084$1nosrN
          g$kwd*$10085$1nosrN)
        (call-with-values
          (case-lambda (() (g$parse-module$7878$1nosrN g$e$10079$1nosrN)))
          (case-lambda
            ((g$name$10089$1nosrN g$exp-id*$10090$1nosrN g$e*$10091$1nosrN)
             ((case-lambda
                ((g$e*$10092$1nosrN g$exp-id*$10093$1nosrN g$name$10094$1nosrN)
                 ((case-lambda
                    ((g$rib$10095$1nosrN)
                     ((case-lambda
                        ((g$e*$10096$1nosrN)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7892$1nosrN
                                    g$e*$10096$1nosrN
                                    g$r$10080$1nosrN
                                    g$mr$10081$1nosrN
                                    g$lex*$10082$1nosrN
                                    g$rhs*$10083$1nosrN
                                    g$mod**$10084$1nosrN
                                    g$kwd*$10085$1nosrN
                                    g$rib$10095$1nosrN
                                    '#f)))
                               (case-lambda
                                 ((g$e*$10104$1nosrN
                                    g$r$10105$1nosrN
                                    g$mr$10106$1nosrN
                                    g$lex*$10107$1nosrN
                                    g$rhs*$10108$1nosrN
                                    g$mod**$10109$1nosrN
                                    g$kwd*$10110$1nosrN)
                                  ((case-lambda
                                     ((g$kwd*$10111$1nosrN
                                        g$mod**$10112$1nosrN
                                        g$rhs*$10113$1nosrN
                                        g$lex*$10114$1nosrN
                                        g$mr$10115$1nosrN
                                        g$r$10116$1nosrN
                                        g$e*$10117$1nosrN)
                                      ((case-lambda
                                         ((g$exp-lab*$10118$1nosrN
                                            g$mod**$10119$1nosrN)
                                          (if (not g$name$10094$1nosrN)
                                            (values
                                              g$lex*$10114$1nosrN
                                              g$rhs*$10113$1nosrN
                                              g$exp-id*$10093$1nosrN
                                              g$exp-lab*$10118$1nosrN
                                              g$r$10116$1nosrN
                                              g$mr$10115$1nosrN
                                              g$mod**$10119$1nosrN
                                              g$kwd*$10111$1nosrN)
                                            ((case-lambda
                                               ((g$lab$10120$1nosrN
                                                  g$iface$10121$1nosrN)
                                                (values
                                                  g$lex*$10114$1nosrN
                                                  g$rhs*$10113$1nosrN
                                                  (vector g$name$10094$1nosrN)
                                                  (vector g$lab$10120$1nosrN)
                                                  (cons
                                                    (cons
                                                      g$lab$10120$1nosrN
                                                      (cons
                                                        '$module
                                                        g$iface$10121$1nosrN))
                                                    g$r$10116$1nosrN)
                                                  (cons
                                                    (cons
                                                      g$lab$10120$1nosrN
                                                      (cons
                                                        '$module
                                                        g$iface$10121$1nosrN))
                                                    g$mr$10115$1nosrN)
                                                  g$mod**$10119$1nosrN
                                                  g$kwd*$10111$1nosrN)))
                                             (g$gen-label$7516$1nosrN 'module)
                                             (g$make-module-interface$7883$1nosrN
                                               (car (g$stx-mark*$7545$1nosrN
                                                      g$name$10094$1nosrN))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$10122$1nosrN)
                                                    (g$make-stx$7543$1nosrN
                                                      (g$stx-expr$7544$1nosrN
                                                        g$x$10122$1nosrN)
                                                      (g$stx-mark*$7545$1nosrN
                                                        g$x$10122$1nosrN)
                                                      '()
                                                      '())))
                                                 g$exp-id*$10093$1nosrN)
                                               g$exp-lab*$10118$1nosrN)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$10123$1nosrN)
                                            ((case-lambda
                                               ((g$t$10124$1nosrN)
                                                (if g$t$10124$1nosrN
                                                  g$t$10124$1nosrN
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7959$1nosrN
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$10123$1nosrN)))))
                                             (g$id->label$7583$1nosrN
                                               (g$make-stx$7543$1nosrN
                                                 (g$id->sym$7571$1nosrN
                                                   g$x$10123$1nosrN)
                                                 (g$stx-mark*$7545$1nosrN
                                                   g$x$10123$1nosrN)
                                                 (list g$rib$10095$1nosrN)
                                                 '())))))
                                         g$exp-id*$10093$1nosrN)
                                       (cons
                                         g$e*$10117$1nosrN
                                         g$mod**$10112$1nosrN))))
                                   g$kwd*$10110$1nosrN
                                   g$mod**$10109$1nosrN
                                   g$rhs*$10108$1nosrN
                                   g$lex*$10107$1nosrN
                                   g$mr$10106$1nosrN
                                   g$r$10105$1nosrN
                                   g$e*$10104$1nosrN)))))))))
                      (map (case-lambda
                             ((g$x$10125$1nosrN)
                              (g$add-subst$7560$1nosrN
                                g$rib$10095$1nosrN
                                g$x$10125$1nosrN)))
                           (g$syntax->list$7569$1nosrN g$e*$10092$1nosrN)))))
                  (g$make-empty-rib$7533$1nosrN))))
              g$e*$10091$1nosrN
              g$exp-id*$10090$1nosrN
              g$name$10089$1nosrN)))))))
   (g$chi-body*$7892$1nosrN
     g$chi-body*$11338$1nosrN
     (case-lambda
       ((g$e*$10126$1nosrN
          g$r$10127$1nosrN
          g$mr$10128$1nosrN
          g$lex*$10129$1nosrN
          g$rhs*$10130$1nosrN
          g$mod**$10131$1nosrN
          g$kwd*$10132$1nosrN
          g$rib$10133$1nosrN
          g$top?$10134$1nosrN)
        (if (null? g$e*$10126$1nosrN)
          (values
            g$e*$10126$1nosrN
            g$r$10127$1nosrN
            g$mr$10128$1nosrN
            g$lex*$10129$1nosrN
            g$rhs*$10130$1nosrN
            g$mod**$10131$1nosrN
            g$kwd*$10132$1nosrN)
          ((case-lambda
             ((g$e$10135$1nosrN)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7590$1nosrN
                     g$e$10135$1nosrN
                     g$r$10127$1nosrN)))
                (case-lambda
                  ((g$type$10139$1nosrN g$value$10140$1nosrN g$kwd$10141$1nosrN)
                   ((case-lambda
                      ((g$kwd$10142$1nosrN
                         g$value$10143$1nosrN
                         g$type$10144$1nosrN)
                       ((case-lambda
                          ((g$kwd*$10145$1nosrN)
                           ((case-lambda
                              ((g$t$10146$1nosrN)
                               (if (memv g$t$10146$1nosrN '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7788$1nosrN
                                        g$e$10135$1nosrN)))
                                   (case-lambda
                                     ((g$id$10149$1nosrN g$rhs$10150$1nosrN)
                                      ((case-lambda
                                         ((g$rhs$10151$1nosrN g$id$10152$1nosrN)
                                          (begin
                                            (if (g$bound-id-member?$7577$1nosrN
                                                  g$id$10152$1nosrN
                                                  g$kwd*$10145$1nosrN)
                                              (g$syntax-violation$7959$1nosrN
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10135$1nosrN)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7518$1nosrN
                                                   g$id$10152$1nosrN
                                                   g$rib$10133$1nosrN)))
                                              (case-lambda
                                                ((g$lab$10155$1nosrN
                                                   g$lex$10156$1nosrN)
                                                 ((case-lambda
                                                    ((g$lex$10157$1nosrN
                                                       g$lab$10158$1nosrN)
                                                     (begin
                                                       (g$extend-rib!$7534$1nosrN
                                                         g$rib$10133$1nosrN
                                                         g$id$10152$1nosrN
                                                         g$lab$10158$1nosrN)
                                                       (g$chi-body*$7892$1nosrN
                                                         (cdr g$e*$10126$1nosrN)
                                                         (g$add-lexical$7795$1nosrN
                                                           g$lab$10158$1nosrN
                                                           g$lex$10157$1nosrN
                                                           g$r$10127$1nosrN)
                                                         g$mr$10128$1nosrN
                                                         (cons
                                                           g$lex$10157$1nosrN
                                                           g$lex*$10129$1nosrN)
                                                         (cons
                                                           g$rhs$10151$1nosrN
                                                           g$rhs*$10130$1nosrN)
                                                         g$mod**$10131$1nosrN
                                                         g$kwd*$10145$1nosrN
                                                         g$rib$10133$1nosrN
                                                         g$top?$10134$1nosrN))))
                                                  g$lex$10156$1nosrN
                                                  g$lab$10155$1nosrN)))))))
                                       g$rhs$10150$1nosrN
                                       g$id$10149$1nosrN))))
                                 (if (memv g$t$10146$1nosrN '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7789$1nosrN
                                          g$e$10135$1nosrN)))
                                     (case-lambda
                                       ((g$id$10161$1nosrN g$rhs$10162$1nosrN)
                                        ((case-lambda
                                           ((g$rhs$10163$1nosrN
                                              g$id$10164$1nosrN)
                                            (begin
                                              (if (g$bound-id-member?$7577$1nosrN
                                                    g$id$10164$1nosrN
                                                    g$kwd*$10145$1nosrN)
                                                (g$syntax-violation$7959$1nosrN
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10135$1nosrN)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10165$1nosrN
                                                    g$expanded-rhs$10166$1nosrN)
                                                  (begin
                                                    (g$extend-rib!$7534$1nosrN
                                                      g$rib$10133$1nosrN
                                                      g$id$10164$1nosrN
                                                      g$lab$10165$1nosrN)
                                                    ((case-lambda
                                                       ((g$b$10167$1nosrN)
                                                        (g$chi-body*$7892$1nosrN
                                                          (cdr g$e*$10126$1nosrN)
                                                          (cons
                                                            (cons
                                                              g$lab$10165$1nosrN
                                                              g$b$10167$1nosrN)
                                                            g$r$10127$1nosrN)
                                                          (cons
                                                            (cons
                                                              g$lab$10165$1nosrN
                                                              g$b$10167$1nosrN)
                                                            g$mr$10128$1nosrN)
                                                          g$lex*$10129$1nosrN
                                                          g$rhs*$10130$1nosrN
                                                          g$mod**$10131$1nosrN
                                                          g$kwd*$10145$1nosrN
                                                          g$rib$10133$1nosrN
                                                          g$top?$10134$1nosrN)))
                                                     (g$make-eval-transformer$7602$1nosrN
                                                       g$expanded-rhs$10166$1nosrN)))))
                                               (g$gen-define-label$7519$1nosrN
                                                 g$id$10164$1nosrN
                                                 g$rib$10133$1nosrN)
                                               (g$expand-transformer$7893$1nosrN
                                                 g$rhs$10163$1nosrN
                                                 g$mr$10128$1nosrN)))))
                                         g$rhs$10162$1nosrN
                                         g$id$10161$1nosrN))))
                                   (if (memv
                                         g$t$10146$1nosrN
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10168$1nosrN)
                                         ((case-lambda
                                            ((g$ls/false$10169$1nosrN)
                                             (if (if g$ls/false$10169$1nosrN
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10170$1nosrN
                                                            g$xrhs*$10171$1nosrN
                                                            g$xbody*$10172$1nosrN)
                                                          (if (not (g$valid-bound-ids?$7575$1nosrN
                                                                     g$xlhs*$10170$1nosrN))
                                                            (g$syntax-violation$7959$1nosrN
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10135$1nosrN)
                                                            (void))))
                                                       g$ls/false$10169$1nosrN))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10173$1nosrN
                                                      g$xrhs*$10174$1nosrN
                                                      g$xbody*$10175$1nosrN)
                                                    ((case-lambda
                                                       ((g$xlab*$10176$1nosrN)
                                                        ((case-lambda
                                                           ((g$xrib$10177$1nosrN)
                                                            ((case-lambda
                                                               ((g$xb*$10178$1nosrN)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7892$1nosrN
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$10179$1nosrN)
                                                                                (g$add-subst$7560$1nosrN
                                                                                  g$xrib$10177$1nosrN
                                                                                  g$x$10179$1nosrN)))
                                                                             g$xbody*$10175$1nosrN)
                                                                        (cdr g$e*$10126$1nosrN))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10176$1nosrN
                                                                             g$xb*$10178$1nosrN)
                                                                        g$r$10127$1nosrN)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$10176$1nosrN
                                                                             g$xb*$10178$1nosrN)
                                                                        g$mr$10128$1nosrN)
                                                                      g$lex*$10129$1nosrN
                                                                      g$rhs*$10130$1nosrN
                                                                      g$mod**$10131$1nosrN
                                                                      g$kwd*$10145$1nosrN
                                                                      g$rib$10133$1nosrN
                                                                      g$top?$10134$1nosrN))))))
                                                             (map (case-lambda
                                                                    ((g$x$10180$1nosrN)
                                                                     (g$make-eval-transformer$7602$1nosrN
                                                                       (g$expand-transformer$7893$1nosrN
                                                                         (if (eq? g$type$10144$1nosrN
                                                                                  'let-syntax)
                                                                           g$x$10180$1nosrN
                                                                           (g$add-subst$7560$1nosrN
                                                                             g$xrib$10177$1nosrN
                                                                             g$x$10180$1nosrN))
                                                                         g$mr$10128$1nosrN))))
                                                                  g$xrhs*$10174$1nosrN))))
                                                         (g$make-full-rib$7538$1nosrN
                                                           g$xlhs*$10173$1nosrN
                                                           g$xlab*$10176$1nosrN))))
                                                     (map g$gen-label$7516$1nosrN
                                                          g$xlhs*$10173$1nosrN))))
                                                 g$ls/false$10169$1nosrN)
                                               (g$syntax-violation$7959$1nosrN
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10168$1nosrN))))
                                          (g$syntax-dispatch$7848$1nosrN
                                            g$t$10168$1nosrN
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10135$1nosrN)
                                     (if (memv g$t$10146$1nosrN '(begin))
                                       ((case-lambda
                                          ((g$t$10181$1nosrN)
                                           ((case-lambda
                                              ((g$ls/false$10182$1nosrN)
                                               (if g$ls/false$10182$1nosrN
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10183$1nosrN)
                                                      (g$chi-body*$7892$1nosrN
                                                        (append
                                                          g$x*$10183$1nosrN
                                                          (cdr g$e*$10126$1nosrN))
                                                        g$r$10127$1nosrN
                                                        g$mr$10128$1nosrN
                                                        g$lex*$10129$1nosrN
                                                        g$rhs*$10130$1nosrN
                                                        g$mod**$10131$1nosrN
                                                        g$kwd*$10145$1nosrN
                                                        g$rib$10133$1nosrN
                                                        g$top?$10134$1nosrN)))
                                                   g$ls/false$10182$1nosrN)
                                                 (g$syntax-violation$7959$1nosrN
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10181$1nosrN))))
                                            (g$syntax-dispatch$7848$1nosrN
                                              g$t$10181$1nosrN
                                              '(_ . each-any)))))
                                        g$e$10135$1nosrN)
                                       (if (memv
                                             g$t$10146$1nosrN
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7892$1nosrN
                                           (cons
                                             (g$add-subst$7560$1nosrN
                                               g$rib$10133$1nosrN
                                               (g$chi-global-macro$7863$1nosrN
                                                 g$value$10143$1nosrN
                                                 g$e$10135$1nosrN))
                                             (cdr g$e*$10126$1nosrN))
                                           g$r$10127$1nosrN
                                           g$mr$10128$1nosrN
                                           g$lex*$10129$1nosrN
                                           g$rhs*$10130$1nosrN
                                           g$mod**$10131$1nosrN
                                           g$kwd*$10145$1nosrN
                                           g$rib$10133$1nosrN
                                           g$top?$10134$1nosrN)
                                         (if (memv
                                               g$t$10146$1nosrN
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7892$1nosrN
                                             (cons
                                               (g$add-subst$7560$1nosrN
                                                 g$rib$10133$1nosrN
                                                 (g$chi-local-macro$7862$1nosrN
                                                   g$value$10143$1nosrN
                                                   g$e$10135$1nosrN))
                                               (cdr g$e*$10126$1nosrN))
                                             g$r$10127$1nosrN
                                             g$mr$10128$1nosrN
                                             g$lex*$10129$1nosrN
                                             g$rhs*$10130$1nosrN
                                             g$mod**$10131$1nosrN
                                             g$kwd*$10145$1nosrN
                                             g$rib$10133$1nosrN
                                             g$top?$10134$1nosrN)
                                           (if (memv
                                                 g$t$10146$1nosrN
                                                 '(macro macro!))
                                             (g$chi-body*$7892$1nosrN
                                               (cons
                                                 (g$add-subst$7560$1nosrN
                                                   g$rib$10133$1nosrN
                                                   (g$chi-macro$7861$1nosrN
                                                     g$value$10143$1nosrN
                                                     g$e$10135$1nosrN))
                                                 (cdr g$e*$10126$1nosrN))
                                               g$r$10127$1nosrN
                                               g$mr$10128$1nosrN
                                               g$lex*$10129$1nosrN
                                               g$rhs*$10130$1nosrN
                                               g$mod**$10131$1nosrN
                                               g$kwd*$10145$1nosrN
                                               g$rib$10133$1nosrN
                                               g$top?$10134$1nosrN)
                                             (if (memv
                                                   g$t$10146$1nosrN
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7891$1nosrN
                                                      g$e$10135$1nosrN
                                                      g$r$10127$1nosrN
                                                      g$mr$10128$1nosrN
                                                      g$lex*$10129$1nosrN
                                                      g$rhs*$10130$1nosrN
                                                      g$mod**$10131$1nosrN
                                                      g$kwd*$10145$1nosrN)))
                                                 (case-lambda
                                                   ((g$lex*$10192$1nosrN
                                                      g$rhs*$10193$1nosrN
                                                      g$m-exp-id*$10194$1nosrN
                                                      g$m-exp-lab*$10195$1nosrN
                                                      g$r$10196$1nosrN
                                                      g$mr$10197$1nosrN
                                                      g$mod**$10198$1nosrN
                                                      g$kwd*$10199$1nosrN)
                                                    ((case-lambda
                                                       ((g$kwd*$10200$1nosrN
                                                          g$mod**$10201$1nosrN
                                                          g$mr$10202$1nosrN
                                                          g$r$10203$1nosrN
                                                          g$m-exp-lab*$10204$1nosrN
                                                          g$m-exp-id*$10205$1nosrN
                                                          g$rhs*$10206$1nosrN
                                                          g$lex*$10207$1nosrN)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10208$1nosrN
                                                                 g$lab$10209$1nosrN)
                                                               (g$extend-rib!$7534$1nosrN
                                                                 g$rib$10133$1nosrN
                                                                 g$id$10208$1nosrN
                                                                 g$lab$10209$1nosrN)))
                                                            g$m-exp-id*$10205$1nosrN
                                                            g$m-exp-lab*$10204$1nosrN)
                                                          (g$chi-body*$7892$1nosrN
                                                            (cdr g$e*$10126$1nosrN)
                                                            g$r$10203$1nosrN
                                                            g$mr$10202$1nosrN
                                                            g$lex*$10207$1nosrN
                                                            g$rhs*$10206$1nosrN
                                                            g$mod**$10201$1nosrN
                                                            g$kwd*$10200$1nosrN
                                                            g$rib$10133$1nosrN
                                                            g$top?$10134$1nosrN))))
                                                     g$kwd*$10199$1nosrN
                                                     g$mod**$10198$1nosrN
                                                     g$mr$10197$1nosrN
                                                     g$r$10196$1nosrN
                                                     g$m-exp-lab*$10195$1nosrN
                                                     g$m-exp-id*$10194$1nosrN
                                                     g$rhs*$10193$1nosrN
                                                     g$lex*$10192$1nosrN))))
                                               (if (memv
                                                     g$t$10146$1nosrN
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7943$1nosrN
                                                     (g$stx->datum$7581$1nosrN
                                                       g$e$10135$1nosrN))
                                                   (g$chi-body*$7892$1nosrN
                                                     (cdr g$e*$10126$1nosrN)
                                                     g$r$10127$1nosrN
                                                     g$mr$10128$1nosrN
                                                     g$lex*$10129$1nosrN
                                                     g$rhs*$10130$1nosrN
                                                     g$mod**$10131$1nosrN
                                                     g$kwd*$10145$1nosrN
                                                     g$rib$10133$1nosrN
                                                     g$top?$10134$1nosrN))
                                                 (if (memv
                                                       g$t$10146$1nosrN
                                                       '(import))
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10210$1nosrN
                                                                     (case-lambda
                                                                       ((g$e$10252$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$t$10253$1nosrN)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10254$1nosrN)
                                                                                (if (if g$ls/false$10254$1nosrN
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10255$1nosrN)
                                                                                             (g$id?$7570$1nosrN
                                                                                               g$id$10255$1nosrN)))
                                                                                          g$ls/false$10254$1nosrN))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10256$1nosrN)
                                                                                       '#t))
                                                                                    g$ls/false$10254$1nosrN)
                                                                                  ((case-lambda
                                                                                     ((g$t$10257$1nosrN)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10258$1nosrN)
                                                                                          (if g$ls/false$10258$1nosrN
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10259$1nosrN)
                                                                                                 '#f))
                                                                                              g$ls/false$10258$1nosrN)
                                                                                            ((case-lambda
                                                                                               ((g$t$10260$1nosrN)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10261$1nosrN)
                                                                                                    (if g$ls/false$10261$1nosrN
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7959$1nosrN
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10252$1nosrN)))
                                                                                                        g$ls/false$10261$1nosrN)
                                                                                                      (g$syntax-violation$7959$1nosrN
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10260$1nosrN))))
                                                                                                 (g$syntax-dispatch$7848$1nosrN
                                                                                                   g$t$10260$1nosrN
                                                                                                   '_))))
                                                                                             g$t$10257$1nosrN))))
                                                                                       (g$syntax-dispatch$7848$1nosrN
                                                                                         g$t$10257$1nosrN
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10253$1nosrN))))
                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                               g$t$10253$1nosrN
                                                                               '(_ any)))))
                                                                         g$e$10252$1nosrN))))
                                                                   (g$module-import$10211$1nosrN
                                                                     (case-lambda
                                                                       ((g$e$10235$1nosrN
                                                                          g$r$10236$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$t$10237$1nosrN)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10238$1nosrN)
                                                                                (if (if g$ls/false$10238$1nosrN
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10239$1nosrN)
                                                                                             (g$id?$7570$1nosrN
                                                                                               g$id$10239$1nosrN)))
                                                                                          g$ls/false$10238$1nosrN))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10240$1nosrN)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7590$1nosrN
                                                                                              g$id$10240$1nosrN
                                                                                              g$r$10236$1nosrN)))
                                                                                         (case-lambda
                                                                                           ((g$type$10244$1nosrN
                                                                                              g$value$10245$1nosrN
                                                                                              g$kwd$10246$1nosrN)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10247$1nosrN
                                                                                                  g$value$10248$1nosrN
                                                                                                  g$type$10249$1nosrN)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10250$1nosrN)
                                                                                                    (if (memv
                                                                                                          g$t$10250$1nosrN
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10251$1nosrN)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7890$1nosrN
                                                                                                              g$iface$10251$1nosrN
                                                                                                              g$id$10240$1nosrN)
                                                                                                            (g$module-interface-exp-lab-vec$7886$1nosrN
                                                                                                              g$iface$10251$1nosrN))))
                                                                                                       g$value$10248$1nosrN)
                                                                                                      (g$syntax-violation$7959$1nosrN
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10235$1nosrN))))
                                                                                                 g$type$10249$1nosrN)))
                                                                                             g$kwd$10246$1nosrN
                                                                                             g$value$10245$1nosrN
                                                                                             g$type$10244$1nosrN))))))
                                                                                    g$ls/false$10238$1nosrN)
                                                                                  (g$syntax-violation$7959$1nosrN
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10237$1nosrN))))
                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                               g$t$10237$1nosrN
                                                                               '(_ any)))))
                                                                         g$e$10235$1nosrN))))
                                                                   (g$library-import$10212$1nosrN
                                                                     (case-lambda
                                                                       ((g$e$10221$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$t$10222$1nosrN)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10223$1nosrN)
                                                                                (if g$ls/false$10223$1nosrN
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10224$1nosrN
                                                                                         g$imp*$10225$1nosrN)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7897$1nosrN
                                                                                              (g$syntax->datum$7962$1nosrN
                                                                                                g$imp*$10225$1nosrN))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10228$1nosrN
                                                                                              g$subst-labels$10229$1nosrN)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10230$1nosrN
                                                                                                  g$subst-names$10231$1nosrN)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10232$1nosrN)
                                                                                                       (g$datum->stx$7553$1nosrN
                                                                                                         g$ctxt$10224$1nosrN
                                                                                                         g$name$10232$1nosrN)))
                                                                                                    g$subst-names$10231$1nosrN)
                                                                                                  g$subst-labels$10230$1nosrN)))
                                                                                             g$subst-labels$10229$1nosrN
                                                                                             g$subst-names$10228$1nosrN))))))
                                                                                    g$ls/false$10223$1nosrN)
                                                                                  ((case-lambda
                                                                                     ((g$t$10233$1nosrN)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10234$1nosrN)
                                                                                          (if g$ls/false$10234$1nosrN
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7959$1nosrN
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10221$1nosrN)))
                                                                                              g$ls/false$10234$1nosrN)
                                                                                            (g$syntax-violation$7959$1nosrN
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10233$1nosrN))))
                                                                                       (g$syntax-dispatch$7848$1nosrN
                                                                                         g$t$10233$1nosrN
                                                                                         '_))))
                                                                                   g$t$10222$1nosrN))))
                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                               g$t$10222$1nosrN
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10221$1nosrN)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$10210$1nosrN
                                                                      g$e$10135$1nosrN)
                                                                  (g$module-import$10211$1nosrN
                                                                    g$e$10135$1nosrN
                                                                    g$r$10127$1nosrN)
                                                                  (g$library-import$10212$1nosrN
                                                                    g$e$10135$1nosrN))))
                                                             (case-lambda
                                                               ((g$id*$10215$1nosrN
                                                                  g$lab*$10216$1nosrN)
                                                                ((case-lambda
                                                                   ((g$lab*$10217$1nosrN
                                                                      g$id*$10218$1nosrN)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10219$1nosrN
                                                                           g$lab$10220$1nosrN)
                                                                         (g$extend-rib!$7534$1nosrN
                                                                           g$rib$10133$1nosrN
                                                                           g$id$10219$1nosrN
                                                                           g$lab$10220$1nosrN)))
                                                                      g$id*$10218$1nosrN
                                                                      g$lab*$10217$1nosrN)))
                                                                 g$lab*$10216$1nosrN
                                                                 g$id*$10215$1nosrN))))))))
                                                     (g$chi-body*$7892$1nosrN
                                                       (cdr g$e*$10126$1nosrN)
                                                       g$r$10127$1nosrN
                                                       g$mr$10128$1nosrN
                                                       g$lex*$10129$1nosrN
                                                       g$rhs*$10130$1nosrN
                                                       g$mod**$10131$1nosrN
                                                       g$kwd*$10145$1nosrN
                                                       g$rib$10133$1nosrN
                                                       g$top?$10134$1nosrN))
                                                   (if g$top?$10134$1nosrN
                                                     (g$chi-body*$7892$1nosrN
                                                       (cdr g$e*$10126$1nosrN)
                                                       g$r$10127$1nosrN
                                                       g$mr$10128$1nosrN
                                                       (cons
                                                         (g$gen-lexical$7514$1nosrN
                                                           'dummy)
                                                         g$lex*$10129$1nosrN)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$10135$1nosrN)
                                                         g$rhs*$10130$1nosrN)
                                                       g$mod**$10131$1nosrN
                                                       g$kwd*$10145$1nosrN
                                                       g$rib$10133$1nosrN
                                                       g$top?$10134$1nosrN)
                                                     (values
                                                       g$e*$10126$1nosrN
                                                       g$r$10127$1nosrN
                                                       g$mr$10128$1nosrN
                                                       g$lex*$10129$1nosrN
                                                       g$rhs*$10130$1nosrN
                                                       g$mod**$10131$1nosrN
                                                       g$kwd*$10145$1nosrN))))))))))))))
                            g$type$10144$1nosrN)))
                        (if (g$id?$7570$1nosrN g$kwd$10142$1nosrN)
                          (cons g$kwd$10142$1nosrN g$kwd*$10132$1nosrN)
                          g$kwd*$10132$1nosrN))))
                    g$kwd$10141$1nosrN
                    g$value$10140$1nosrN
                    g$type$10139$1nosrN))))))
           (car g$e*$10126$1nosrN))))))
   (g$expand-transformer$7893$1nosrN
     g$expand-transformer$11339$1nosrN
     (case-lambda
       ((g$expr$10262$1nosrN g$r$10263$1nosrN)
        ((case-lambda
           ((g$rtc$10264$1nosrN)
            ((case-lambda
               ((g$expanded-rhs$10265$1nosrN)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10266$1nosrN)
                        (case-lambda
                          ((g$x$10267$1nosrN)
                           (begin
                             (g$invoke-library$7385$1nosrN g$x$10267$1nosrN)
                             (g$mark-visit$10266$1nosrN g$x$10267$1nosrN))))))
                     (g$vis-collector$7901$1nosrN))
                    (g$rtc$10264$1nosrN))
                  g$expanded-rhs$10265$1nosrN)))
             ((case-lambda
                ((g$inv-collector$10272$1nosrN
                   g$vis-collector$10273$1nosrN
                   g$inv-collector$10274$1nosrN
                   g$vis-collector$10275$1nosrN)
                 ((case-lambda
                    ((g$swap$10276$1nosrN)
                     (dynamic-wind
                       g$swap$10276$1nosrN
                       (case-lambda
                         (()
                          (g$chi-expr$7866$1nosrN
                            g$expr$10262$1nosrN
                            g$r$10263$1nosrN
                            g$r$10263$1nosrN)))
                       g$swap$10276$1nosrN)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10277$1nosrN)
                           (begin
                             (g$inv-collector$10272$1nosrN
                               g$inv-collector$10274$1nosrN)
                             (set! g$inv-collector$10274$1nosrN
                               g$t$10277$1nosrN))))
                        (g$inv-collector$10272$1nosrN))
                       ((case-lambda
                          ((g$t$10278$1nosrN)
                           (begin
                             (g$vis-collector$10273$1nosrN
                               g$vis-collector$10275$1nosrN)
                             (set! g$vis-collector$10275$1nosrN
                               g$t$10278$1nosrN))))
                        (g$vis-collector$10273$1nosrN))))))))
              g$inv-collector$7900$1nosrN
              g$vis-collector$7901$1nosrN
              g$rtc$10264$1nosrN
              (case-lambda ((g$x$10279$1nosrN) (values)))))))
         (g$make-collector$7899$1nosrN)))))
   (g$parse-exports$7894$1nosrN
     g$parse-exports$11340$1nosrN
     (case-lambda
       ((g$exp*$10280$1nosrN)
        (letrec* ((g$idsyn?$10281$1nosrN
                    (case-lambda
                      ((g$x$10296$1nosrN)
                       (symbol?
                         (g$syntax->datum$7962$1nosrN g$x$10296$1nosrN))))))
          ((letrec ((g$f$10282$1nosrN
                      (case-lambda
                        ((g$exp*$10283$1nosrN
                           g$int*$10284$1nosrN
                           g$ext*$10285$1nosrN)
                         (if (null? g$exp*$10283$1nosrN)
                           (begin
                             ((case-lambda
                                ((g$id*$10286$1nosrN)
                                 (if (not (g$valid-bound-ids?$7575$1nosrN
                                            g$id*$10286$1nosrN))
                                   (g$syntax-violation$7959$1nosrN
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7876$1nosrN
                                       g$id*$10286$1nosrN))
                                   (void))))
                              (map (case-lambda
                                     ((g$x$10287$1nosrN)
                                      (g$make-stx$7543$1nosrN
                                        g$x$10287$1nosrN
                                        g$top-mark*$7512$1nosrN
                                        '()
                                        '())))
                                   g$ext*$10285$1nosrN))
                             (values
                               (map g$syntax->datum$7962$1nosrN
                                    g$int*$10284$1nosrN)
                               (map g$syntax->datum$7962$1nosrN
                                    g$ext*$10285$1nosrN)))
                           ((case-lambda
                              ((g$t$10288$1nosrN)
                               ((case-lambda
                                  ((g$ls/false$10289$1nosrN)
                                   (if g$ls/false$10289$1nosrN
                                     (apply
                                       (case-lambda
                                         ((g$rename$10290$1nosrN
                                            g$i*$10291$1nosrN
                                            g$e*$10292$1nosrN)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$7962$1nosrN
                                                                g$rename$10290$1nosrN)
                                                              'rename)
                                                       (if (g$for-all$5698$1nosrN
                                                             g$idsyn?$10281$1nosrN
                                                             g$i*$10291$1nosrN)
                                                         (begin
                                                           '#f
                                                           (g$for-all$5698$1nosrN
                                                             g$idsyn?$10281$1nosrN
                                                             g$e*$10292$1nosrN))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$7959$1nosrN
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10283$1nosrN))
                                              (void))
                                            (g$f$10282$1nosrN
                                              (cdr g$exp*$10283$1nosrN)
                                              (append
                                                g$i*$10291$1nosrN
                                                g$int*$10284$1nosrN)
                                              (append
                                                g$e*$10292$1nosrN
                                                g$ext*$10285$1nosrN)))))
                                       g$ls/false$10289$1nosrN)
                                     ((case-lambda
                                        ((g$t$10293$1nosrN)
                                         ((case-lambda
                                            ((g$ls/false$10294$1nosrN)
                                             (if g$ls/false$10294$1nosrN
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10295$1nosrN)
                                                    (begin
                                                      (if (not (g$idsyn?$10281$1nosrN
                                                                 g$ie$10295$1nosrN))
                                                        (g$syntax-violation$7959$1nosrN
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10295$1nosrN)
                                                        (void))
                                                      (g$f$10282$1nosrN
                                                        (cdr g$exp*$10283$1nosrN)
                                                        (cons
                                                          g$ie$10295$1nosrN
                                                          g$int*$10284$1nosrN)
                                                        (cons
                                                          g$ie$10295$1nosrN
                                                          g$ext*$10285$1nosrN)))))
                                                 g$ls/false$10294$1nosrN)
                                               (g$syntax-violation$7959$1nosrN
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10293$1nosrN))))
                                          (g$syntax-dispatch$7848$1nosrN
                                            g$t$10293$1nosrN
                                            'any))))
                                      g$t$10288$1nosrN))))
                                (g$syntax-dispatch$7848$1nosrN
                                  g$t$10288$1nosrN
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10283$1nosrN)))))))
             g$f$10282$1nosrN)
           g$exp*$10280$1nosrN
           '()
           '())))))
   (g$parse-library-name$7895$1nosrN
     g$parse-library-name$11341$1nosrN
     (case-lambda
       ((g$spec$10297$1nosrN)
        (letrec* ((g$parse$10298$1nosrN
                    (case-lambda
                      ((g$x$10305$1nosrN)
                       ((case-lambda
                          ((g$t$10306$1nosrN)
                           ((case-lambda
                              ((g$ls/false$10307$1nosrN)
                               (if (if g$ls/false$10307$1nosrN
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10308$1nosrN)
                                            (g$for-all$5698$1nosrN
                                              (case-lambda
                                                ((g$x$10309$1nosrN)
                                                 ((case-lambda
                                                    ((g$x$10310$1nosrN)
                                                     (if (integer?
                                                           g$x$10310$1nosrN)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10310$1nosrN))
                                                       '#f)))
                                                  (g$syntax->datum$7962$1nosrN
                                                    g$x$10309$1nosrN))))
                                              g$v*$10308$1nosrN)))
                                         g$ls/false$10307$1nosrN))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10311$1nosrN)
                                      (values
                                        '()
                                        (map g$syntax->datum$7962$1nosrN
                                             g$v*$10311$1nosrN))))
                                   g$ls/false$10307$1nosrN)
                                 ((case-lambda
                                    ((g$t$10312$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$10313$1nosrN)
                                         (if (if g$ls/false$10313$1nosrN
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10314$1nosrN
                                                        g$rest$10315$1nosrN)
                                                      (symbol?
                                                        (g$syntax->datum$7962$1nosrN
                                                          g$x$10314$1nosrN))))
                                                   g$ls/false$10313$1nosrN))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10316$1nosrN
                                                  g$rest$10317$1nosrN)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10298$1nosrN
                                                       g$rest$10317$1nosrN)))
                                                  (case-lambda
                                                    ((g$x*$10320$1nosrN
                                                       g$v*$10321$1nosrN)
                                                     ((case-lambda
                                                        ((g$v*$10322$1nosrN
                                                           g$x*$10323$1nosrN)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7962$1nosrN
                                                               g$x$10316$1nosrN)
                                                             g$x*$10323$1nosrN)
                                                           g$v*$10322$1nosrN)))
                                                      g$v*$10321$1nosrN
                                                      g$x*$10320$1nosrN))))))
                                             g$ls/false$10313$1nosrN)
                                           ((case-lambda
                                              ((g$t$10324$1nosrN)
                                               ((case-lambda
                                                  ((g$ls/false$10325$1nosrN)
                                                   (if g$ls/false$10325$1nosrN
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10325$1nosrN)
                                                     ((case-lambda
                                                        ((g$t$10326$1nosrN)
                                                         ((case-lambda
                                                            ((g$ls/false$10327$1nosrN)
                                                             (if g$ls/false$10327$1nosrN
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7959$1nosrN
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10297$1nosrN)))
                                                                 g$ls/false$10327$1nosrN)
                                                               (g$syntax-violation$7959$1nosrN
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10326$1nosrN))))
                                                          (g$syntax-dispatch$7848$1nosrN
                                                            g$t$10326$1nosrN
                                                            '_))))
                                                      g$t$10324$1nosrN))))
                                                (g$syntax-dispatch$7848$1nosrN
                                                  g$t$10324$1nosrN
                                                  '()))))
                                            g$t$10312$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$10312$1nosrN
                                        '(any . any)))))
                                  g$t$10306$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$10306$1nosrN
                              '(each-any)))))
                        g$x$10305$1nosrN)))))
          (call-with-values
            (case-lambda (() (g$parse$10298$1nosrN g$spec$10297$1nosrN)))
            (case-lambda
              ((g$name*$10301$1nosrN g$ver*$10302$1nosrN)
               ((case-lambda
                  ((g$ver*$10303$1nosrN g$name*$10304$1nosrN)
                   (begin
                     (if (null? g$name*$10304$1nosrN)
                       (g$syntax-violation$7959$1nosrN
                         '#f
                         '"empty library name"
                         g$spec$10297$1nosrN)
                       (void))
                     (values g$name*$10304$1nosrN g$ver*$10303$1nosrN))))
                g$ver*$10302$1nosrN
                g$name*$10301$1nosrN))))))))
   (g$parse-library$7896$1nosrN
     g$parse-library$11342$1nosrN
     (case-lambda
       ((g$e$10328$1nosrN)
        ((case-lambda
           ((g$t$10329$1nosrN)
            ((case-lambda
               ((g$ls/false$10330$1nosrN)
                (if (if g$ls/false$10330$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10331$1nosrN
                               g$name*$10332$1nosrN
                               g$export$10333$1nosrN
                               g$exp*$10334$1nosrN
                               g$import$10335$1nosrN
                               g$imp*$10336$1nosrN
                               g$b*$10337$1nosrN)
                             (if (eq? (g$syntax->datum$7962$1nosrN
                                        g$export$10333$1nosrN)
                                      'export)
                               (if (eq? (g$syntax->datum$7962$1nosrN
                                          g$import$10335$1nosrN)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7962$1nosrN
                                          g$library$10331$1nosrN)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10330$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10338$1nosrN
                         g$name*$10339$1nosrN
                         g$export$10340$1nosrN
                         g$exp*$10341$1nosrN
                         g$import$10342$1nosrN
                         g$imp*$10343$1nosrN
                         g$b*$10344$1nosrN)
                       (values
                         g$name*$10339$1nosrN
                         g$exp*$10341$1nosrN
                         g$imp*$10343$1nosrN
                         g$b*$10344$1nosrN)))
                    g$ls/false$10330$1nosrN)
                  ((case-lambda
                     ((g$t$10345$1nosrN)
                      ((case-lambda
                         ((g$ls/false$10346$1nosrN)
                          (if g$ls/false$10346$1nosrN
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7959$1nosrN
                                   '#f
                                   '"malformed library"
                                   g$e$10328$1nosrN)))
                              g$ls/false$10346$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$10345$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN g$t$10345$1nosrN '_))))
                   g$t$10329$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$10329$1nosrN
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10328$1nosrN))))
   (g$parse-import-spec*$7897$1nosrN
     g$parse-import-spec*$11343$1nosrN
     (case-lambda
       ((g$imp*$10347$1nosrN)
        (letrec* ((g$idsyn?$10348$1nosrN
                    (case-lambda
                      ((g$x$10608$1nosrN)
                       (symbol?
                         (g$syntax->datum$7962$1nosrN g$x$10608$1nosrN)))))
                  (g$dup-error$10349$1nosrN
                    (case-lambda
                      ((g$name$10607$1nosrN)
                       (g$syntax-violation$7959$1nosrN
                         'import
                         '"two imports with different bindings"
                         g$name$10607$1nosrN))))
                  (g$merge-substs$10350$1nosrN
                    (case-lambda
                      ((g$s$10598$1nosrN g$subst$10599$1nosrN)
                       (letrec* ((g$insert-to-subst$10600$1nosrN
                                   (case-lambda
                                     ((g$a$10601$1nosrN g$subst$10602$1nosrN)
                                      ((case-lambda
                                         ((g$name$10603$1nosrN
                                            g$label$10604$1nosrN)
                                          ((case-lambda
                                             ((g$t$10605$1nosrN)
                                              (if g$t$10605$1nosrN
                                                ((case-lambda
                                                   ((g$x$10606$1nosrN)
                                                    (if (eq? (cdr g$x$10606$1nosrN)
                                                             g$label$10604$1nosrN)
                                                      g$subst$10602$1nosrN
                                                      (g$dup-error$10349$1nosrN
                                                        g$name$10603$1nosrN))))
                                                 g$t$10605$1nosrN)
                                                (cons
                                                  g$a$10601$1nosrN
                                                  g$subst$10602$1nosrN))))
                                           (assq
                                             g$name$10603$1nosrN
                                             g$subst$10602$1nosrN))))
                                       (car g$a$10601$1nosrN)
                                       (cdr g$a$10601$1nosrN))))))
                         (if (null? g$s$10598$1nosrN)
                           g$subst$10599$1nosrN
                           (g$insert-to-subst$10600$1nosrN
                             (car g$s$10598$1nosrN)
                             (g$merge-substs$10350$1nosrN
                               (cdr g$s$10598$1nosrN)
                               g$subst$10599$1nosrN)))))))
                  (g$exclude*$10351$1nosrN
                    (case-lambda
                      ((g$sym*$10574$1nosrN g$subst$10575$1nosrN)
                       (letrec* ((g$exclude$10576$1nosrN
                                   (case-lambda
                                     ((g$sym$10589$1nosrN g$subst$10590$1nosrN)
                                      (if (null? g$subst$10590$1nosrN)
                                        (g$syntax-violation$7959$1nosrN
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10589$1nosrN)
                                        (if (eq? g$sym$10589$1nosrN
                                                 (g$caar$5216$1nosrN
                                                   g$subst$10590$1nosrN))
                                          (values
                                            (g$cdar$5218$1nosrN
                                              g$subst$10590$1nosrN)
                                            (cdr g$subst$10590$1nosrN))
                                          ((case-lambda
                                             ((g$a$10591$1nosrN)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10576$1nosrN
                                                     g$sym$10589$1nosrN
                                                     (cdr g$subst$10590$1nosrN))))
                                                (case-lambda
                                                  ((g$old$10594$1nosrN
                                                     g$subst$10595$1nosrN)
                                                   ((case-lambda
                                                      ((g$subst$10596$1nosrN
                                                         g$old$10597$1nosrN)
                                                       (values
                                                         g$old$10597$1nosrN
                                                         (cons
                                                           g$a$10591$1nosrN
                                                           g$subst$10596$1nosrN))))
                                                    g$subst$10595$1nosrN
                                                    g$old$10594$1nosrN))))))
                                           (car g$subst$10590$1nosrN))))))))
                         (if (null? g$sym*$10574$1nosrN)
                           (values '() g$subst$10575$1nosrN)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10576$1nosrN
                                  (car g$sym*$10574$1nosrN)
                                  g$subst$10575$1nosrN)))
                             (case-lambda
                               ((g$old$10579$1nosrN g$subst$10580$1nosrN)
                                ((case-lambda
                                   ((g$subst$10581$1nosrN g$old$10582$1nosrN)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10351$1nosrN
                                           (cdr g$sym*$10574$1nosrN)
                                           g$subst$10581$1nosrN)))
                                      (case-lambda
                                        ((g$old*$10585$1nosrN
                                           g$subst$10586$1nosrN)
                                         ((case-lambda
                                            ((g$subst$10587$1nosrN
                                               g$old*$10588$1nosrN)
                                             (values
                                               (cons
                                                 g$old$10582$1nosrN
                                                 g$old*$10588$1nosrN)
                                               g$subst$10587$1nosrN)))
                                          g$subst$10586$1nosrN
                                          g$old*$10585$1nosrN))))))
                                 g$subst$10580$1nosrN
                                 g$old$10579$1nosrN)))))))))
                  (g$find*$10352$1nosrN
                    (case-lambda
                      ((g$sym*$10570$1nosrN g$subst$10571$1nosrN)
                       (map (case-lambda
                              ((g$x$10572$1nosrN)
                               ((case-lambda
                                  ((g$t$10573$1nosrN)
                                   (if g$t$10573$1nosrN
                                     (cdr g$t$10573$1nosrN)
                                     (g$syntax-violation$7959$1nosrN
                                       'import
                                       '"cannot find identifier"
                                       g$x$10572$1nosrN))))
                                (assq g$x$10572$1nosrN g$subst$10571$1nosrN))))
                            g$sym*$10570$1nosrN))))
                  (g$rem*$10353$1nosrN
                    (case-lambda
                      ((g$sym*$10566$1nosrN g$subst$10567$1nosrN)
                       ((letrec ((g$f$10568$1nosrN
                                   (case-lambda
                                     ((g$subst$10569$1nosrN)
                                      (if (null? g$subst$10569$1nosrN)
                                        '()
                                        (if (memq
                                              (g$caar$5216$1nosrN
                                                g$subst$10569$1nosrN)
                                              g$sym*$10566$1nosrN)
                                          (g$f$10568$1nosrN
                                            (cdr g$subst$10569$1nosrN))
                                          (cons
                                            (car g$subst$10569$1nosrN)
                                            (g$f$10568$1nosrN
                                              (cdr g$subst$10569$1nosrN)))))))))
                          g$f$10568$1nosrN)
                        g$subst$10567$1nosrN))))
                  (g$remove-dups$10354$1nosrN
                    (case-lambda
                      ((g$ls$10565$1nosrN)
                       (if (null? g$ls$10565$1nosrN)
                         '()
                         (if (memq
                               (car g$ls$10565$1nosrN)
                               (cdr g$ls$10565$1nosrN))
                           (g$remove-dups$10354$1nosrN (cdr g$ls$10565$1nosrN))
                           (cons
                             (car g$ls$10565$1nosrN)
                             (g$remove-dups$10354$1nosrN
                               (cdr g$ls$10565$1nosrN))))))))
                  (g$parse-library-name$10355$1nosrN
                    (case-lambda
                      ((g$spec$10449$1nosrN)
                       (letrec* ((g$subversion?$10450$1nosrN
                                   (case-lambda
                                     ((g$x$10563$1nosrN)
                                      ((case-lambda
                                         ((g$x$10564$1nosrN)
                                          (if (integer? g$x$10564$1nosrN)
                                            (if (exact? g$x$10564$1nosrN)
                                              (begin
                                                '#f
                                                (>= g$x$10564$1nosrN '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$7962$1nosrN
                                         g$x$10563$1nosrN)))))
                                 (g$subversion-pred$10451$1nosrN
                                   (case-lambda
                                     ((g$x*$10515$1nosrN)
                                      ((case-lambda
                                         ((g$t$10516$1nosrN)
                                          ((case-lambda
                                             ((g$ls/false$10517$1nosrN)
                                              (if (if g$ls/false$10517$1nosrN
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10518$1nosrN)
                                                           (g$subversion?$10450$1nosrN
                                                             g$n$10518$1nosrN)))
                                                        g$ls/false$10517$1nosrN))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10519$1nosrN)
                                                     (case-lambda
                                                       ((g$x$10520$1nosrN)
                                                        (= g$x$10520$1nosrN
                                                           (g$syntax->datum$7962$1nosrN
                                                             g$n$10519$1nosrN))))))
                                                  g$ls/false$10517$1nosrN)
                                                ((case-lambda
                                                   ((g$t$10521$1nosrN)
                                                    ((case-lambda
                                                       ((g$ls/false$10522$1nosrN)
                                                        (if (if g$ls/false$10522$1nosrN
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10523$1nosrN
                                                                       g$sub*$10524$1nosrN)
                                                                     (eq? (g$syntax->datum$7962$1nosrN
                                                                            g$p?$10523$1nosrN)
                                                                          'and)))
                                                                  g$ls/false$10522$1nosrN))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10525$1nosrN
                                                                 g$sub*$10526$1nosrN)
                                                               ((case-lambda
                                                                  ((g$p*$10527$1nosrN)
                                                                   (case-lambda
                                                                     ((g$x$10528$1nosrN)
                                                                      (g$for-all$5698$1nosrN
                                                                        (case-lambda
                                                                          ((g$p$10529$1nosrN)
                                                                           (g$p$10529$1nosrN
                                                                             g$x$10528$1nosrN)))
                                                                        g$p*$10527$1nosrN)))))
                                                                (map g$subversion-pred$10451$1nosrN
                                                                     g$sub*$10526$1nosrN))))
                                                            g$ls/false$10522$1nosrN)
                                                          ((case-lambda
                                                             ((g$t$10530$1nosrN)
                                                              ((case-lambda
                                                                 ((g$ls/false$10531$1nosrN)
                                                                  (if (if g$ls/false$10531$1nosrN
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10532$1nosrN
                                                                                 g$sub*$10533$1nosrN)
                                                                               (eq? (g$syntax->datum$7962$1nosrN
                                                                                      g$p?$10532$1nosrN)
                                                                                    'or)))
                                                                            g$ls/false$10531$1nosrN))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10534$1nosrN
                                                                           g$sub*$10535$1nosrN)
                                                                         ((case-lambda
                                                                            ((g$p*$10536$1nosrN)
                                                                             (case-lambda
                                                                               ((g$x$10537$1nosrN)
                                                                                (g$exists$5699$1nosrN
                                                                                  (case-lambda
                                                                                    ((g$p$10538$1nosrN)
                                                                                     (g$p$10538$1nosrN
                                                                                       g$x$10537$1nosrN)))
                                                                                  g$p*$10536$1nosrN)))))
                                                                          (map g$subversion-pred$10451$1nosrN
                                                                               g$sub*$10535$1nosrN))))
                                                                      g$ls/false$10531$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$t$10539$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10540$1nosrN)
                                                                            (if (if g$ls/false$10540$1nosrN
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10541$1nosrN
                                                                                           g$sub$10542$1nosrN)
                                                                                         (eq? (g$syntax->datum$7962$1nosrN
                                                                                                g$p?$10541$1nosrN)
                                                                                              'not)))
                                                                                      g$ls/false$10540$1nosrN))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10543$1nosrN
                                                                                     g$sub$10544$1nosrN)
                                                                                   ((case-lambda
                                                                                      ((g$p$10545$1nosrN)
                                                                                       (case-lambda
                                                                                         ((g$x$10546$1nosrN)
                                                                                          (not (g$p$10545$1nosrN
                                                                                                 g$x$10546$1nosrN))))))
                                                                                    (g$subversion-pred$10451$1nosrN
                                                                                      g$sub$10544$1nosrN))))
                                                                                g$ls/false$10540$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$t$10547$1nosrN)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10548$1nosrN)
                                                                                      (if (if g$ls/false$10548$1nosrN
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10549$1nosrN
                                                                                                     g$n$10550$1nosrN)
                                                                                                   (if (eq? (g$syntax->datum$7962$1nosrN
                                                                                                              g$p?$10549$1nosrN)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10450$1nosrN
                                                                                                         g$n$10550$1nosrN))
                                                                                                     '#f)))
                                                                                                g$ls/false$10548$1nosrN))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10551$1nosrN
                                                                                               g$n$10552$1nosrN)
                                                                                             (case-lambda
                                                                                               ((g$x$10553$1nosrN)
                                                                                                (<= g$x$10553$1nosrN
                                                                                                    (g$syntax->datum$7962$1nosrN
                                                                                                      g$n$10552$1nosrN))))))
                                                                                          g$ls/false$10548$1nosrN)
                                                                                        ((case-lambda
                                                                                           ((g$t$10554$1nosrN)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10555$1nosrN)
                                                                                                (if (if g$ls/false$10555$1nosrN
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10556$1nosrN
                                                                                                               g$n$10557$1nosrN)
                                                                                                             (if (eq? (g$syntax->datum$7962$1nosrN
                                                                                                                        g$p?$10556$1nosrN)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10450$1nosrN
                                                                                                                   g$n$10557$1nosrN))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10555$1nosrN))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10558$1nosrN
                                                                                                         g$n$10559$1nosrN)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10560$1nosrN)
                                                                                                          (>= g$x$10560$1nosrN
                                                                                                              (g$syntax->datum$7962$1nosrN
                                                                                                                g$n$10559$1nosrN))))))
                                                                                                    g$ls/false$10555$1nosrN)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10561$1nosrN)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10562$1nosrN)
                                                                                                          (if g$ls/false$10562$1nosrN
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7959$1nosrN
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10449$1nosrN
                                                                                                                   g$x*$10515$1nosrN)))
                                                                                                              g$ls/false$10562$1nosrN)
                                                                                                            (g$syntax-violation$7959$1nosrN
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10561$1nosrN))))
                                                                                                       (g$syntax-dispatch$7848$1nosrN
                                                                                                         g$t$10561$1nosrN
                                                                                                         '_))))
                                                                                                   g$t$10554$1nosrN))))
                                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                                               g$t$10554$1nosrN
                                                                                               '(any any)))))
                                                                                         g$t$10547$1nosrN))))
                                                                                   (g$syntax-dispatch$7848$1nosrN
                                                                                     g$t$10547$1nosrN
                                                                                     '(any any)))))
                                                                               g$t$10539$1nosrN))))
                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                           g$t$10539$1nosrN
                                                                           '(any any)))))
                                                                     g$t$10530$1nosrN))))
                                                               (g$syntax-dispatch$7848$1nosrN
                                                                 g$t$10530$1nosrN
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10521$1nosrN))))
                                                     (g$syntax-dispatch$7848$1nosrN
                                                       g$t$10521$1nosrN
                                                       '(any . each-any)))))
                                                 g$t$10516$1nosrN))))
                                           (g$syntax-dispatch$7848$1nosrN
                                             g$t$10516$1nosrN
                                             'any))))
                                       g$x*$10515$1nosrN))))
                                 (g$version-pred$10452$1nosrN
                                   (case-lambda
                                     ((g$x*$10475$1nosrN)
                                      ((case-lambda
                                         ((g$t$10476$1nosrN)
                                          ((case-lambda
                                             ((g$ls/false$10477$1nosrN)
                                              (if g$ls/false$10477$1nosrN
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10478$1nosrN)
                                                        '#t))))
                                                  g$ls/false$10477$1nosrN)
                                                ((case-lambda
                                                   ((g$t$10479$1nosrN)
                                                    ((case-lambda
                                                       ((g$ls/false$10480$1nosrN)
                                                        (if (if g$ls/false$10480$1nosrN
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10481$1nosrN
                                                                       g$ver*$10482$1nosrN)
                                                                     (eq? (g$syntax->datum$7962$1nosrN
                                                                            g$c$10481$1nosrN)
                                                                          'and)))
                                                                  g$ls/false$10480$1nosrN))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10483$1nosrN
                                                                 g$ver*$10484$1nosrN)
                                                               ((case-lambda
                                                                  ((g$p*$10485$1nosrN)
                                                                   (case-lambda
                                                                     ((g$x$10486$1nosrN)
                                                                      (g$for-all$5698$1nosrN
                                                                        (case-lambda
                                                                          ((g$p$10487$1nosrN)
                                                                           (g$p$10487$1nosrN
                                                                             g$x$10486$1nosrN)))
                                                                        g$p*$10485$1nosrN)))))
                                                                (map g$version-pred$10452$1nosrN
                                                                     g$ver*$10484$1nosrN))))
                                                            g$ls/false$10480$1nosrN)
                                                          ((case-lambda
                                                             ((g$t$10488$1nosrN)
                                                              ((case-lambda
                                                                 ((g$ls/false$10489$1nosrN)
                                                                  (if (if g$ls/false$10489$1nosrN
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10490$1nosrN
                                                                                 g$ver*$10491$1nosrN)
                                                                               (eq? (g$syntax->datum$7962$1nosrN
                                                                                      g$c$10490$1nosrN)
                                                                                    'or)))
                                                                            g$ls/false$10489$1nosrN))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10492$1nosrN
                                                                           g$ver*$10493$1nosrN)
                                                                         ((case-lambda
                                                                            ((g$p*$10494$1nosrN)
                                                                             (case-lambda
                                                                               ((g$x$10495$1nosrN)
                                                                                (g$exists$5699$1nosrN
                                                                                  (case-lambda
                                                                                    ((g$p$10496$1nosrN)
                                                                                     (g$p$10496$1nosrN
                                                                                       g$x$10495$1nosrN)))
                                                                                  g$p*$10494$1nosrN)))))
                                                                          (map g$version-pred$10452$1nosrN
                                                                               g$ver*$10493$1nosrN))))
                                                                      g$ls/false$10489$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$t$10497$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10498$1nosrN)
                                                                            (if (if g$ls/false$10498$1nosrN
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10499$1nosrN
                                                                                           g$ver$10500$1nosrN)
                                                                                         (eq? (g$syntax->datum$7962$1nosrN
                                                                                                g$c$10499$1nosrN)
                                                                                              'not)))
                                                                                      g$ls/false$10498$1nosrN))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10501$1nosrN
                                                                                     g$ver$10502$1nosrN)
                                                                                   ((case-lambda
                                                                                      ((g$p$10503$1nosrN)
                                                                                       (case-lambda
                                                                                         ((g$x$10504$1nosrN)
                                                                                          (not (g$p$10503$1nosrN
                                                                                                 g$x$10504$1nosrN))))))
                                                                                    (g$version-pred$10452$1nosrN
                                                                                      g$ver$10502$1nosrN))))
                                                                                g$ls/false$10498$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$t$10505$1nosrN)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10506$1nosrN)
                                                                                      (if g$ls/false$10506$1nosrN
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10507$1nosrN)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10508$1nosrN)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10509$1nosrN)
                                                                                                    ((letrec ((g$f$10510$1nosrN
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10511$1nosrN
                                                                                                                     g$x$10512$1nosrN)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10511$1nosrN)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10512$1nosrN)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10511$1nosrN)
                                                                                                                            (car g$x$10512$1nosrN))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10510$1nosrN
                                                                                                                             (cdr g$p*$10511$1nosrN)
                                                                                                                             (cdr g$x$10512$1nosrN)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10510$1nosrN)
                                                                                                     g$p*$10508$1nosrN
                                                                                                     g$x$10509$1nosrN)))))
                                                                                              (map g$subversion-pred$10451$1nosrN
                                                                                                   g$sub*$10507$1nosrN))))
                                                                                          g$ls/false$10506$1nosrN)
                                                                                        ((case-lambda
                                                                                           ((g$t$10513$1nosrN)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10514$1nosrN)
                                                                                                (if g$ls/false$10514$1nosrN
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7959$1nosrN
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10449$1nosrN
                                                                                                         g$x*$10475$1nosrN)))
                                                                                                    g$ls/false$10514$1nosrN)
                                                                                                  (g$syntax-violation$7959$1nosrN
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10513$1nosrN))))
                                                                                             (g$syntax-dispatch$7848$1nosrN
                                                                                               g$t$10513$1nosrN
                                                                                               '_))))
                                                                                         g$t$10505$1nosrN))))
                                                                                   (g$syntax-dispatch$7848$1nosrN
                                                                                     g$t$10505$1nosrN
                                                                                     'each-any))))
                                                                               g$t$10497$1nosrN))))
                                                                         (g$syntax-dispatch$7848$1nosrN
                                                                           g$t$10497$1nosrN
                                                                           '(any any)))))
                                                                     g$t$10488$1nosrN))))
                                                               (g$syntax-dispatch$7848$1nosrN
                                                                 g$t$10488$1nosrN
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10479$1nosrN))))
                                                     (g$syntax-dispatch$7848$1nosrN
                                                       g$t$10479$1nosrN
                                                       '(any . each-any)))))
                                                 g$t$10476$1nosrN))))
                                           (g$syntax-dispatch$7848$1nosrN
                                             g$t$10476$1nosrN
                                             '()))))
                                       g$x*$10475$1nosrN)))))
                         ((letrec ((g$f$10453$1nosrN
                                     (case-lambda
                                       ((g$x$10454$1nosrN)
                                        ((case-lambda
                                           ((g$t$10455$1nosrN)
                                            ((case-lambda
                                               ((g$ls/false$10456$1nosrN)
                                                (if g$ls/false$10456$1nosrN
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10457$1nosrN)
                                                       (values
                                                         '()
                                                         (g$version-pred$10452$1nosrN
                                                           g$version-spec*$10457$1nosrN))))
                                                    g$ls/false$10456$1nosrN)
                                                  ((case-lambda
                                                     ((g$t$10458$1nosrN)
                                                      ((case-lambda
                                                         ((g$ls/false$10459$1nosrN)
                                                          (if (if g$ls/false$10459$1nosrN
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10460$1nosrN
                                                                         g$x*$10461$1nosrN)
                                                                       (g$idsyn?$10348$1nosrN
                                                                         g$x$10460$1nosrN)))
                                                                    g$ls/false$10459$1nosrN))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10462$1nosrN
                                                                   g$x*$10463$1nosrN)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10453$1nosrN
                                                                        g$x*$10463$1nosrN)))
                                                                   (case-lambda
                                                                     ((g$name$10466$1nosrN
                                                                        g$pred$10467$1nosrN)
                                                                      ((case-lambda
                                                                         ((g$pred$10468$1nosrN
                                                                            g$name$10469$1nosrN)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7962$1nosrN
                                                                                g$x$10462$1nosrN)
                                                                              g$name$10469$1nosrN)
                                                                            g$pred$10468$1nosrN)))
                                                                       g$pred$10467$1nosrN
                                                                       g$name$10466$1nosrN))))))
                                                              g$ls/false$10459$1nosrN)
                                                            ((case-lambda
                                                               ((g$t$10470$1nosrN)
                                                                ((case-lambda
                                                                   ((g$ls/false$10471$1nosrN)
                                                                    (if g$ls/false$10471$1nosrN
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10472$1nosrN)
                                                                                '#t)))))
                                                                        g$ls/false$10471$1nosrN)
                                                                      ((case-lambda
                                                                         ((g$t$10473$1nosrN)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10474$1nosrN)
                                                                              (if g$ls/false$10474$1nosrN
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7959$1nosrN
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10449$1nosrN)))
                                                                                  g$ls/false$10474$1nosrN)
                                                                                (g$syntax-violation$7959$1nosrN
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10473$1nosrN))))
                                                                           (g$syntax-dispatch$7848$1nosrN
                                                                             g$t$10473$1nosrN
                                                                             '_))))
                                                                       g$t$10470$1nosrN))))
                                                                 (g$syntax-dispatch$7848$1nosrN
                                                                   g$t$10470$1nosrN
                                                                   '()))))
                                                             g$t$10458$1nosrN))))
                                                       (g$syntax-dispatch$7848$1nosrN
                                                         g$t$10458$1nosrN
                                                         '(any . any)))))
                                                   g$t$10455$1nosrN))))
                                             (g$syntax-dispatch$7848$1nosrN
                                               g$t$10455$1nosrN
                                               '(each-any)))))
                                         g$x$10454$1nosrN)))))
                            g$f$10453$1nosrN)
                          g$spec$10449$1nosrN)))))
                  (g$import-library$10356$1nosrN
                    (case-lambda
                      ((g$spec*$10441$1nosrN)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10355$1nosrN
                              g$spec*$10441$1nosrN)))
                         (case-lambda
                           ((g$name$10444$1nosrN g$pred$10445$1nosrN)
                            ((case-lambda
                               ((g$pred$10446$1nosrN g$name$10447$1nosrN)
                                (begin
                                  (if (null? g$name$10447$1nosrN)
                                    (g$syntax-violation$7959$1nosrN
                                      'import
                                      '"empty library name"
                                      g$spec*$10441$1nosrN)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10448$1nosrN)
                                      (begin
                                        (if (not g$lib$10448$1nosrN)
                                          (g$syntax-violation$7959$1nosrN
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10447$1nosrN)
                                          (void))
                                        (if (not (g$pred$10446$1nosrN
                                                   (g$library-version$7338$1nosrN
                                                     g$lib$10448$1nosrN)))
                                          (g$syntax-violation$7959$1nosrN
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10441$1nosrN
                                            g$lib$10448$1nosrN)
                                          (void))
                                        ((g$imp-collector$7902$1nosrN)
                                         g$lib$10448$1nosrN)
                                        (g$library-subst$7342$1nosrN
                                          g$lib$10448$1nosrN))))
                                   (g$find-library-by-name$7378$1nosrN
                                     g$name$10447$1nosrN)))))
                             g$pred$10445$1nosrN
                             g$name$10444$1nosrN)))))))
                  (g$get-import$10357$1nosrN
                    (case-lambda
                      ((g$spec$10370$1nosrN)
                       ((case-lambda
                          ((g$t$10371$1nosrN)
                           ((case-lambda
                              ((g$ls/false$10372$1nosrN)
                               (if (if g$ls/false$10372$1nosrN
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10373$1nosrN g$x*$10374$1nosrN)
                                            (not (memq
                                                   (g$syntax->datum$7962$1nosrN
                                                     g$x$10373$1nosrN)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10372$1nosrN))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10375$1nosrN g$x*$10376$1nosrN)
                                      (g$import-library$10356$1nosrN
                                        (cons
                                          g$x$10375$1nosrN
                                          g$x*$10376$1nosrN))))
                                   g$ls/false$10372$1nosrN)
                                 ((case-lambda
                                    ((g$t$10377$1nosrN)
                                     ((case-lambda
                                        ((g$ls/false$10378$1nosrN)
                                         (if (if g$ls/false$10378$1nosrN
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10379$1nosrN
                                                        g$isp$10380$1nosrN
                                                        g$old*$10381$1nosrN
                                                        g$new*$10382$1nosrN)
                                                      (if (eq? (g$syntax->datum$7962$1nosrN
                                                                 g$rename$10379$1nosrN)
                                                               'rename)
                                                        (if (g$for-all$5698$1nosrN
                                                              g$idsyn?$10348$1nosrN
                                                              g$old*$10381$1nosrN)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5698$1nosrN
                                                              g$idsyn?$10348$1nosrN
                                                              g$new*$10382$1nosrN))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10378$1nosrN))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10383$1nosrN
                                                  g$isp$10384$1nosrN
                                                  g$old*$10385$1nosrN
                                                  g$new*$10386$1nosrN)
                                                ((case-lambda
                                                   ((g$subst$10387$1nosrN
                                                      g$old*$10388$1nosrN
                                                      g$new*$10389$1nosrN)
                                                    ((case-lambda
                                                       ((g$old-label*$10390$1nosrN)
                                                        ((case-lambda
                                                           ((g$subst$10391$1nosrN)
                                                            (g$merge-substs$10350$1nosrN
                                                              (map cons
                                                                   g$new*$10389$1nosrN
                                                                   g$old-label*$10390$1nosrN)
                                                              g$subst$10391$1nosrN)))
                                                         (g$rem*$10353$1nosrN
                                                           g$old*$10388$1nosrN
                                                           g$subst$10387$1nosrN))))
                                                     (g$find*$10352$1nosrN
                                                       g$old*$10388$1nosrN
                                                       g$subst$10387$1nosrN))))
                                                 (g$get-import$10357$1nosrN
                                                   g$isp$10384$1nosrN)
                                                 (map g$syntax->datum$7962$1nosrN
                                                      g$old*$10385$1nosrN)
                                                 (map g$syntax->datum$7962$1nosrN
                                                      g$new*$10386$1nosrN))))
                                             g$ls/false$10378$1nosrN)
                                           ((case-lambda
                                              ((g$t$10392$1nosrN)
                                               ((case-lambda
                                                  ((g$ls/false$10393$1nosrN)
                                                   (if (if g$ls/false$10393$1nosrN
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10394$1nosrN
                                                                  g$isp$10395$1nosrN
                                                                  g$sym*$10396$1nosrN)
                                                                (if (eq? (g$syntax->datum$7962$1nosrN
                                                                           g$except$10394$1nosrN)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5698$1nosrN
                                                                      g$idsyn?$10348$1nosrN
                                                                      g$sym*$10396$1nosrN))
                                                                  '#f)))
                                                             g$ls/false$10393$1nosrN))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10397$1nosrN
                                                            g$isp$10398$1nosrN
                                                            g$sym*$10399$1nosrN)
                                                          ((case-lambda
                                                             ((g$subst$10400$1nosrN)
                                                              (g$rem*$10353$1nosrN
                                                                (map g$syntax->datum$7962$1nosrN
                                                                     g$sym*$10399$1nosrN)
                                                                g$subst$10400$1nosrN)))
                                                           (g$get-import$10357$1nosrN
                                                             g$isp$10398$1nosrN))))
                                                       g$ls/false$10393$1nosrN)
                                                     ((case-lambda
                                                        ((g$t$10401$1nosrN)
                                                         ((case-lambda
                                                            ((g$ls/false$10402$1nosrN)
                                                             (if (if g$ls/false$10402$1nosrN
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10403$1nosrN
                                                                            g$isp$10404$1nosrN
                                                                            g$sym*$10405$1nosrN)
                                                                          (if (eq? (g$syntax->datum$7962$1nosrN
                                                                                     g$only$10403$1nosrN)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5698$1nosrN
                                                                                g$idsyn?$10348$1nosrN
                                                                                g$sym*$10405$1nosrN))
                                                                            '#f)))
                                                                       g$ls/false$10402$1nosrN))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10406$1nosrN
                                                                      g$isp$10407$1nosrN
                                                                      g$sym*$10408$1nosrN)
                                                                    ((case-lambda
                                                                       ((g$subst$10409$1nosrN
                                                                          g$sym*$10410$1nosrN)
                                                                        ((case-lambda
                                                                           ((g$sym*$10411$1nosrN)
                                                                            ((case-lambda
                                                                               ((g$lab*$10412$1nosrN)
                                                                                (map cons
                                                                                     g$sym*$10411$1nosrN
                                                                                     g$lab*$10412$1nosrN)))
                                                                             (g$find*$10352$1nosrN
                                                                               g$sym*$10411$1nosrN
                                                                               g$subst$10409$1nosrN))))
                                                                         (g$remove-dups$10354$1nosrN
                                                                           g$sym*$10410$1nosrN))))
                                                                     (g$get-import$10357$1nosrN
                                                                       g$isp$10407$1nosrN)
                                                                     (map g$syntax->datum$7962$1nosrN
                                                                          g$sym*$10408$1nosrN))))
                                                                 g$ls/false$10402$1nosrN)
                                                               ((case-lambda
                                                                  ((g$t$10413$1nosrN)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10414$1nosrN)
                                                                       (if (if g$ls/false$10414$1nosrN
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10415$1nosrN
                                                                                      g$isp$10416$1nosrN
                                                                                      g$p$10417$1nosrN)
                                                                                    (if (eq? (g$syntax->datum$7962$1nosrN
                                                                                               g$prefix$10415$1nosrN)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10348$1nosrN
                                                                                          g$p$10417$1nosrN))
                                                                                      '#f)))
                                                                                 g$ls/false$10414$1nosrN))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10418$1nosrN
                                                                                g$isp$10419$1nosrN
                                                                                g$p$10420$1nosrN)
                                                                              ((case-lambda
                                                                                 ((g$subst$10421$1nosrN
                                                                                    g$prefix$10422$1nosrN)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10423$1nosrN)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10422$1nosrN
                                                                                                (symbol->string
                                                                                                  (car g$x$10423$1nosrN))))
                                                                                            (cdr g$x$10423$1nosrN))))
                                                                                       g$subst$10421$1nosrN)))
                                                                               (g$get-import$10357$1nosrN
                                                                                 g$isp$10419$1nosrN)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7962$1nosrN
                                                                                   g$p$10420$1nosrN)))))
                                                                           g$ls/false$10414$1nosrN)
                                                                         ((case-lambda
                                                                            ((g$t$10424$1nosrN)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10425$1nosrN)
                                                                                 (if (if g$ls/false$10425$1nosrN
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10426$1nosrN
                                                                                                g$spec*$10427$1nosrN)
                                                                                              (eq? (g$syntax->datum$7962$1nosrN
                                                                                                     g$library$10426$1nosrN)
                                                                                                   'library)))
                                                                                           g$ls/false$10425$1nosrN))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10428$1nosrN
                                                                                          g$spec*$10429$1nosrN)
                                                                                        (g$import-library$10356$1nosrN
                                                                                          g$spec*$10429$1nosrN)))
                                                                                     g$ls/false$10425$1nosrN)
                                                                                   ((case-lambda
                                                                                      ((g$t$10430$1nosrN)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10431$1nosrN)
                                                                                           (if (if g$ls/false$10431$1nosrN
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10432$1nosrN
                                                                                                          g$isp$10433$1nosrN
                                                                                                          g$rest$10434$1nosrN)
                                                                                                        (eq? (g$syntax->datum$7962$1nosrN
                                                                                                               g$for$10432$1nosrN)
                                                                                                             'for)))
                                                                                                     g$ls/false$10431$1nosrN))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10435$1nosrN
                                                                                                    g$isp$10436$1nosrN
                                                                                                    g$rest$10437$1nosrN)
                                                                                                  (g$get-import$10357$1nosrN
                                                                                                    g$isp$10436$1nosrN)))
                                                                                               g$ls/false$10431$1nosrN)
                                                                                             ((case-lambda
                                                                                                ((g$t$10438$1nosrN)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10439$1nosrN)
                                                                                                     (if g$ls/false$10439$1nosrN
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10440$1nosrN)
                                                                                                            (g$syntax-violation$7959$1nosrN
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10440$1nosrN)))
                                                                                                         g$ls/false$10439$1nosrN)
                                                                                                       (g$syntax-violation$7959$1nosrN
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10438$1nosrN))))
                                                                                                  (g$syntax-dispatch$7848$1nosrN
                                                                                                    g$t$10438$1nosrN
                                                                                                    'any))))
                                                                                              g$t$10430$1nosrN))))
                                                                                        (g$syntax-dispatch$7848$1nosrN
                                                                                          g$t$10430$1nosrN
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10424$1nosrN))))
                                                                              (g$syntax-dispatch$7848$1nosrN
                                                                                g$t$10424$1nosrN
                                                                                '(any each-any)))))
                                                                          g$t$10413$1nosrN))))
                                                                    (g$syntax-dispatch$7848$1nosrN
                                                                      g$t$10413$1nosrN
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10401$1nosrN))))
                                                          (g$syntax-dispatch$7848$1nosrN
                                                            g$t$10401$1nosrN
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10392$1nosrN))))
                                                (g$syntax-dispatch$7848$1nosrN
                                                  g$t$10392$1nosrN
                                                  '(any any . each-any)))))
                                            g$t$10377$1nosrN))))
                                      (g$syntax-dispatch$7848$1nosrN
                                        g$t$10377$1nosrN
                                        '(any any . #(each (any any)))))))
                                  g$t$10371$1nosrN))))
                            (g$syntax-dispatch$7848$1nosrN
                              g$t$10371$1nosrN
                              '(any . each-any)))))
                        g$spec$10370$1nosrN))))
                  (g$add-imports!$10358$1nosrN
                    (case-lambda
                      ((g$imp$10362$1nosrN g$h$10363$1nosrN)
                       ((case-lambda
                          ((g$subst$10364$1nosrN)
                           (for-each
                             (case-lambda
                               ((g$x$10365$1nosrN)
                                ((case-lambda
                                   ((g$name$10366$1nosrN g$label$10367$1nosrN)
                                    ((case-lambda
                                       ((g$t$10368$1nosrN)
                                        (if g$t$10368$1nosrN
                                          ((case-lambda
                                             ((g$l$10369$1nosrN)
                                              (if (not (eq? g$l$10369$1nosrN
                                                            g$label$10367$1nosrN))
                                                (g$dup-error$10349$1nosrN
                                                  g$name$10366$1nosrN)
                                                (void))))
                                           g$t$10368$1nosrN)
                                          (g$hashtable-set!$5495$1nosrN
                                            g$h$10363$1nosrN
                                            g$name$10366$1nosrN
                                            g$label$10367$1nosrN))))
                                     (g$hashtable-ref$5494$1nosrN
                                       g$h$10363$1nosrN
                                       g$name$10366$1nosrN
                                       '#f))))
                                 (car g$x$10365$1nosrN)
                                 (cdr g$x$10365$1nosrN))))
                             g$subst$10364$1nosrN)))
                        (g$get-import$10357$1nosrN g$imp$10362$1nosrN))))))
          ((letrec ((g$f$10359$1nosrN
                      (case-lambda
                        ((g$imp*$10360$1nosrN g$h$10361$1nosrN)
                         (if (null? g$imp*$10360$1nosrN)
                           (hashtable-entries g$h$10361$1nosrN)
                           (begin
                             (g$add-imports!$10358$1nosrN
                               (car g$imp*$10360$1nosrN)
                               g$h$10361$1nosrN)
                             (g$f$10359$1nosrN
                               (cdr g$imp*$10360$1nosrN)
                               g$h$10361$1nosrN)))))))
             g$f$10359$1nosrN)
           g$imp*$10347$1nosrN
           (g$make-eq-hashtable$5491$1nosrN))))))
   (g$make-top-rib$7898$1nosrN
     g$make-top-rib$11344$1nosrN
     (case-lambda
       ((g$names$10609$1nosrN g$labels$10610$1nosrN)
        ((case-lambda
           ((g$rib$10611$1nosrN)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10612$1nosrN g$label$10613$1nosrN)
                   (begin
                     (if (not (symbol? g$name$10612$1nosrN))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10612$1nosrN)
                       (void))
                     (g$extend-rib!$7534$1nosrN
                       g$rib$10611$1nosrN
                       (g$make-stx$7543$1nosrN
                         g$name$10612$1nosrN
                         g$top-mark*$7512$1nosrN
                         '()
                         '())
                       g$label$10613$1nosrN))))
                g$names$10609$1nosrN
                g$labels$10610$1nosrN)
              g$rib$10611$1nosrN)))
         (g$make-empty-rib$7533$1nosrN)))))
   (g$make-collector$7899$1nosrN
     g$make-collector$11345$1nosrN
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10614$1nosrN)
            (case-lambda
              (() g$ls$10614$1nosrN)
              ((g$x$10615$1nosrN)
               (set! g$ls$10614$1nosrN
                 (g$set-cons$7509$1nosrN
                   g$x$10615$1nosrN
                   g$ls$10614$1nosrN))))))
         '()))))
   (g$inv-collector$7900$1nosrN
     g$inv-collector$11346$1nosrN
     (g$make-parameter$6838$1nosrN
       (case-lambda
         (g$args$10616$1nosrN
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10617$1nosrN)
          (begin
            (if (not (procedure? g$x$10617$1nosrN))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10617$1nosrN)
              (void))
            g$x$10617$1nosrN)))))
   (g$vis-collector$7901$1nosrN
     g$vis-collector$11347$1nosrN
     (g$make-parameter$6838$1nosrN
       (case-lambda
         (g$args$10618$1nosrN
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10619$1nosrN)
          (begin
            (if (not (procedure? g$x$10619$1nosrN))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10619$1nosrN)
              (void))
            g$x$10619$1nosrN)))))
   (g$imp-collector$7902$1nosrN
     g$imp-collector$11348$1nosrN
     (g$make-parameter$6838$1nosrN
       (case-lambda
         (g$args$10620$1nosrN
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10621$1nosrN)
          (begin
            (if (not (procedure? g$x$10621$1nosrN))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10621$1nosrN)
              (void))
            g$x$10621$1nosrN)))))
   (g$chi-library-internal$7903$1nosrN
     g$chi-library-internal$11349$1nosrN
     (case-lambda
       ((g$e*$10622$1nosrN g$rib$10623$1nosrN g$top?$10624$1nosrN)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7892$1nosrN
               g$e*$10622$1nosrN
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10623$1nosrN
               g$top?$10624$1nosrN)))
          (case-lambda
            ((g$e*$10632$1nosrN
               g$r$10633$1nosrN
               g$mr$10634$1nosrN
               g$lex*$10635$1nosrN
               g$rhs*$10636$1nosrN
               g$mod**$10637$1nosrN
               g$_kwd*$10638$1nosrN)
             ((case-lambda
                ((g$_kwd*$10639$1nosrN
                   g$mod**$10640$1nosrN
                   g$rhs*$10641$1nosrN
                   g$lex*$10642$1nosrN
                   g$mr$10643$1nosrN
                   g$r$10644$1nosrN
                   g$e*$10645$1nosrN)
                 (values
                   (append
                     (apply append (reverse g$mod**$10640$1nosrN))
                     g$e*$10645$1nosrN)
                   g$r$10644$1nosrN
                   g$mr$10643$1nosrN
                   (reverse g$lex*$10642$1nosrN)
                   (reverse g$rhs*$10641$1nosrN))))
              g$_kwd*$10638$1nosrN
              g$mod**$10637$1nosrN
              g$rhs*$10636$1nosrN
              g$lex*$10635$1nosrN
              g$mr$10634$1nosrN
              g$r$10633$1nosrN
              g$e*$10632$1nosrN)))))))
   (g$chi-interaction-expr$7904$1nosrN
     g$chi-interaction-expr$11350$1nosrN
     (case-lambda
       ((g$e$10646$1nosrN g$rib$10647$1nosrN g$r$10648$1nosrN)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7892$1nosrN
               (list g$e$10646$1nosrN)
               g$r$10648$1nosrN
               g$r$10648$1nosrN
               '()
               '()
               '()
               '()
               g$rib$10647$1nosrN
               '#t)))
          (case-lambda
            ((g$e*$10656$1nosrN
               g$r$10657$1nosrN
               g$mr$10658$1nosrN
               g$lex*$10659$1nosrN
               g$rhs*$10660$1nosrN
               g$mod**$10661$1nosrN
               g$_kwd*$10662$1nosrN)
             ((case-lambda
                ((g$_kwd*$10663$1nosrN
                   g$mod**$10664$1nosrN
                   g$rhs*$10665$1nosrN
                   g$lex*$10666$1nosrN
                   g$mr$10667$1nosrN
                   g$r$10668$1nosrN
                   g$e*$10669$1nosrN)
                 ((case-lambda
                    ((g$e*$10670$1nosrN)
                     ((case-lambda
                        ((g$e$10671$1nosrN)
                         (values g$e$10671$1nosrN g$r$10668$1nosrN)))
                      (if (null? g$e*$10670$1nosrN)
                        (g$build-void$7505$1nosrN)
                        (if (null? (cdr g$e*$10670$1nosrN))
                          (car g$e*$10670$1nosrN)
                          (g$build-sequence$7504$1nosrN
                            '#f
                            g$e*$10670$1nosrN))))))
                  (g$expand-interaction-rhs*/init*$7873$1nosrN
                    (reverse g$lex*$10666$1nosrN)
                    (reverse g$rhs*$10665$1nosrN)
                    (append
                      (apply append (reverse g$mod**$10664$1nosrN))
                      g$e*$10669$1nosrN)
                    g$r$10668$1nosrN
                    g$mr$10667$1nosrN))))
              g$_kwd*$10662$1nosrN
              g$mod**$10661$1nosrN
              g$rhs*$10660$1nosrN
              g$lex*$10659$1nosrN
              g$mr$10658$1nosrN
              g$r$10657$1nosrN
              g$e*$10656$1nosrN)))))))
   (g$library-body-expander$7905$1nosrN
     g$library-body-expander$11351$1nosrN
     (case-lambda
       ((g$name$10672$1nosrN
          g$exp*$10673$1nosrN
          g$imp*$10674$1nosrN
          g$b*$10675$1nosrN
          g$top?$10676$1nosrN)
        (letrec* ((g$itc$10677$1nosrN (g$make-collector$7899$1nosrN)))
          ((case-lambda
             ((g$imp-collector$10682$1nosrN
                g$top-level-context$10683$1nosrN
                g$imp-collector$10684$1nosrN
                g$top-level-context$10685$1nosrN)
              ((case-lambda
                 ((g$swap$10686$1nosrN)
                  (dynamic-wind
                    g$swap$10686$1nosrN
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-exports$7894$1nosrN g$exp*$10673$1nosrN)))
                         (case-lambda
                           ((g$exp-int*$10689$1nosrN g$exp-ext*$10690$1nosrN)
                            ((case-lambda
                               ((g$exp-ext*$10691$1nosrN
                                  g$exp-int*$10692$1nosrN)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7897$1nosrN
                                       g$imp*$10674$1nosrN)))
                                  (case-lambda
                                    ((g$subst-names$10695$1nosrN
                                       g$subst-labels$10696$1nosrN)
                                     ((case-lambda
                                        ((g$subst-labels$10697$1nosrN
                                           g$subst-names$10698$1nosrN)
                                         ((case-lambda
                                            ((g$rib$10699$1nosrN)
                                             ((case-lambda
                                                ((g$b*$10700$1nosrN
                                                   g$rtc$10701$1nosrN
                                                   g$vtc$10702$1nosrN)
                                                 ((case-lambda
                                                    ((g$inv-collector$10707$1nosrN
                                                       g$vis-collector$10708$1nosrN
                                                       g$inv-collector$10709$1nosrN
                                                       g$vis-collector$10710$1nosrN)
                                                     ((case-lambda
                                                        ((g$swap$10711$1nosrN)
                                                         (dynamic-wind
                                                           g$swap$10711$1nosrN
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7903$1nosrN
                                                                     g$b*$10700$1nosrN
                                                                     g$rib$10699$1nosrN
                                                                     g$top?$10676$1nosrN)))
                                                                (case-lambda
                                                                  ((g$init*$10717$1nosrN
                                                                     g$r$10718$1nosrN
                                                                     g$mr$10719$1nosrN
                                                                     g$lex*$10720$1nosrN
                                                                     g$rhs*$10721$1nosrN)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10722$1nosrN
                                                                         g$lex*$10723$1nosrN
                                                                         g$mr$10724$1nosrN
                                                                         g$r$10725$1nosrN
                                                                         g$init*$10726$1nosrN)
                                                                       (begin
                                                                         (g$seal-rib!$7536$1nosrN
                                                                           g$rib$10699$1nosrN)
                                                                         ((case-lambda
                                                                            ((g$init*$10727$1nosrN)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10728$1nosrN)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7537$1nosrN
                                                                                         g$rib$10699$1nosrN)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10729$1nosrN
                                                                                             g$export-subst$10730$1nosrN)
                                                                                           (letrec* ((g$errstr$10731$1nosrN
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7948$1nosrN
                                                                                                    g$lex*$10723$1nosrN
                                                                                                    g$loc*$10729$1nosrN
                                                                                                    g$r$10725$1nosrN)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10735$1nosrN
                                                                                                    g$global*$10736$1nosrN
                                                                                                    g$macro*$10737$1nosrN)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10738$1nosrN
                                                                                                        g$global*$10739$1nosrN
                                                                                                        g$export-env$10740$1nosrN)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10741$1nosrN)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10742$1nosrN
                                                                                                                   g$label$10743$1nosrN)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10744$1nosrN)
                                                                                                                     (if g$p$10744$1nosrN
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10745$1nosrN)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10746$1nosrN)
                                                                                                                               (if (eq? g$type$10746$1nosrN
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7959$1nosrN
                                                                                                                                   'export
                                                                                                                                   g$errstr$10731$1nosrN
                                                                                                                                   g$name$10742$1nosrN)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10745$1nosrN))))
                                                                                                                        (cdr g$p$10744$1nosrN))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10743$1nosrN
                                                                                                                    g$export-env$10740$1nosrN))))
                                                                                                              (car g$s$10741$1nosrN)
                                                                                                              (cdr g$s$10741$1nosrN))))
                                                                                                          g$export-subst$10730$1nosrN)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10747$1nosrN
                                                                                                              g$invoke-definitions$10748$1nosrN)
                                                                                                            (values
                                                                                                              (g$itc$10677$1nosrN)
                                                                                                              (g$rtc$10701$1nosrN)
                                                                                                              (g$vtc$10702$1nosrN)
                                                                                                              (g$build-sequence$7504$1nosrN
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10748$1nosrN
                                                                                                                  (list
                                                                                                                    g$invoke-body$10747$1nosrN)))
                                                                                                              g$macro*$10738$1nosrN
                                                                                                              g$export-subst$10730$1nosrN
                                                                                                              g$export-env$10740$1nosrN)))
                                                                                                         (g$build-library-letrec*$7508$1nosrN
                                                                                                           '#f
                                                                                                           g$name$10672$1nosrN
                                                                                                           g$lex*$10723$1nosrN
                                                                                                           g$loc*$10729$1nosrN
                                                                                                           g$rhs*$10728$1nosrN
                                                                                                           (if (null?
                                                                                                                 g$init*$10727$1nosrN)
                                                                                                             (g$build-void$7505$1nosrN)
                                                                                                             (g$build-sequence$7504$1nosrN
                                                                                                               '#f
                                                                                                               g$init*$10727$1nosrN)))
                                                                                                         (map g$build-global-define$7500$1nosrN
                                                                                                              (map cdr
                                                                                                                   g$global*$10739$1nosrN))))))
                                                                                                   g$macro*$10737$1nosrN
                                                                                                   g$global*$10736$1nosrN
                                                                                                   g$export-env$10735$1nosrN)))))))
                                                                                        (map g$gen-global$7515$1nosrN
                                                                                             g$lex*$10723$1nosrN)
                                                                                        (g$make-export-subst$7947$1nosrN
                                                                                          g$exp-int*$10692$1nosrN
                                                                                          g$exp-ext*$10691$1nosrN
                                                                                          g$rib$10699$1nosrN))))))))
                                                                              (g$chi-rhs*$7874$1nosrN
                                                                                g$rhs*$10722$1nosrN
                                                                                g$r$10725$1nosrN
                                                                                g$mr$10724$1nosrN))))
                                                                          (g$chi-expr*$7864$1nosrN
                                                                            g$init*$10726$1nosrN
                                                                            g$r$10725$1nosrN
                                                                            g$mr$10724$1nosrN)))))
                                                                    g$rhs*$10721$1nosrN
                                                                    g$lex*$10720$1nosrN
                                                                    g$mr$10719$1nosrN
                                                                    g$r$10718$1nosrN
                                                                    g$init*$10717$1nosrN))))))
                                                           g$swap$10711$1nosrN)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10749$1nosrN)
                                                               (begin
                                                                 (g$inv-collector$10707$1nosrN
                                                                   g$inv-collector$10709$1nosrN)
                                                                 (set! g$inv-collector$10709$1nosrN
                                                                   g$t$10749$1nosrN))))
                                                            (g$inv-collector$10707$1nosrN))
                                                           ((case-lambda
                                                              ((g$t$10750$1nosrN)
                                                               (begin
                                                                 (g$vis-collector$10708$1nosrN
                                                                   g$vis-collector$10710$1nosrN)
                                                                 (set! g$vis-collector$10710$1nosrN
                                                                   g$t$10750$1nosrN))))
                                                            (g$vis-collector$10708$1nosrN))))))))
                                                  g$inv-collector$7900$1nosrN
                                                  g$vis-collector$7901$1nosrN
                                                  g$rtc$10701$1nosrN
                                                  g$vtc$10702$1nosrN)))
                                              (map (case-lambda
                                                     ((g$x$10751$1nosrN)
                                                      (g$make-stx$7543$1nosrN
                                                        g$x$10751$1nosrN
                                                        g$top-mark*$7512$1nosrN
                                                        (list
                                                          g$rib$10699$1nosrN)
                                                        '())))
                                                   g$b*$10675$1nosrN)
                                              (g$make-collector$7899$1nosrN)
                                              (g$make-collector$7899$1nosrN))))
                                          (g$make-top-rib$7898$1nosrN
                                            g$subst-names$10698$1nosrN
                                            g$subst-labels$10697$1nosrN))))
                                      g$subst-labels$10696$1nosrN
                                      g$subst-names$10695$1nosrN))))))
                             g$exp-ext*$10690$1nosrN
                             g$exp-int*$10689$1nosrN))))))
                    g$swap$10686$1nosrN)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10752$1nosrN)
                        (begin
                          (g$imp-collector$10682$1nosrN
                            g$imp-collector$10684$1nosrN)
                          (set! g$imp-collector$10684$1nosrN
                            g$t$10752$1nosrN))))
                     (g$imp-collector$10682$1nosrN))
                    ((case-lambda
                       ((g$t$10753$1nosrN)
                        (begin
                          (g$top-level-context$10683$1nosrN
                            g$top-level-context$10685$1nosrN)
                          (set! g$top-level-context$10685$1nosrN
                            g$t$10753$1nosrN))))
                     (g$top-level-context$10683$1nosrN))))))))
           g$imp-collector$7902$1nosrN
           g$top-level-context$7966$1nosrN
           g$itc$10677$1nosrN
           '#f)))))
   (g$core-library-expander$7906$1nosrN
     g$core-library-expander$11352$1nosrN
     (case-lambda
       ((g$e$10754$1nosrN g$verify-name$10755$1nosrN)
        (call-with-values
          (case-lambda (() (g$parse-library$7896$1nosrN g$e$10754$1nosrN)))
          (case-lambda
            ((g$name*$10760$1nosrN
               g$exp*$10761$1nosrN
               g$imp*$10762$1nosrN
               g$b*$10763$1nosrN)
             ((case-lambda
                ((g$b*$10764$1nosrN
                   g$imp*$10765$1nosrN
                   g$exp*$10766$1nosrN
                   g$name*$10767$1nosrN)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7895$1nosrN g$name*$10767$1nosrN)))
                   (case-lambda
                     ((g$name$10770$1nosrN g$ver$10771$1nosrN)
                      ((case-lambda
                         ((g$ver$10772$1nosrN g$name$10773$1nosrN)
                          (begin
                            (g$verify-name$10755$1nosrN g$name$10773$1nosrN)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7905$1nosrN
                                   g$name$10773$1nosrN
                                   g$exp*$10766$1nosrN
                                   g$imp*$10765$1nosrN
                                   g$b*$10764$1nosrN
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10781$1nosrN
                                   g$invoke-req*$10782$1nosrN
                                   g$visit-req*$10783$1nosrN
                                   g$invoke-code$10784$1nosrN
                                   g$visit-code$10785$1nosrN
                                   g$export-subst$10786$1nosrN
                                   g$export-env$10787$1nosrN)
                                 ((case-lambda
                                    ((g$export-env$10788$1nosrN
                                       g$export-subst$10789$1nosrN
                                       g$visit-code$10790$1nosrN
                                       g$invoke-code$10791$1nosrN
                                       g$visit-req*$10792$1nosrN
                                       g$invoke-req*$10793$1nosrN
                                       g$imp*$10794$1nosrN)
                                     (values
                                       g$name$10773$1nosrN
                                       g$ver$10772$1nosrN
                                       g$imp*$10794$1nosrN
                                       g$invoke-req*$10793$1nosrN
                                       g$visit-req*$10792$1nosrN
                                       g$invoke-code$10791$1nosrN
                                       g$visit-code$10790$1nosrN
                                       g$export-subst$10789$1nosrN
                                       g$export-env$10788$1nosrN)))
                                  g$export-env$10787$1nosrN
                                  g$export-subst$10786$1nosrN
                                  g$visit-code$10785$1nosrN
                                  g$invoke-code$10784$1nosrN
                                  g$visit-req*$10783$1nosrN
                                  g$invoke-req*$10782$1nosrN
                                  g$imp*$10781$1nosrN)))))))
                       g$ver$10771$1nosrN
                       g$name$10770$1nosrN))))))
              g$b*$10763$1nosrN
              g$imp*$10762$1nosrN
              g$exp*$10761$1nosrN
              g$name*$10760$1nosrN)))))))
   (g$parse-top-level-program$7907$1nosrN
     g$parse-top-level-program$11353$1nosrN
     (case-lambda
       ((g$e*$10795$1nosrN)
        ((case-lambda
           ((g$t$10796$1nosrN)
            ((case-lambda
               ((g$ls/false$10797$1nosrN)
                (if (if g$ls/false$10797$1nosrN
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10798$1nosrN
                               g$imp*$10799$1nosrN
                               g$b*$10800$1nosrN)
                             (eq? (g$syntax->datum$7962$1nosrN
                                    g$import$10798$1nosrN)
                                  'import)))
                          g$ls/false$10797$1nosrN))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10801$1nosrN
                         g$imp*$10802$1nosrN
                         g$b*$10803$1nosrN)
                       (values g$imp*$10802$1nosrN g$b*$10803$1nosrN)))
                    g$ls/false$10797$1nosrN)
                  ((case-lambda
                     ((g$t$10804$1nosrN)
                      ((case-lambda
                         ((g$ls/false$10805$1nosrN)
                          (if (if g$ls/false$10805$1nosrN
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10806$1nosrN
                                         g$x$10807$1nosrN
                                         g$y$10808$1nosrN)
                                       (eq? (g$syntax->datum$7962$1nosrN
                                              g$import$10806$1nosrN)
                                            'import)))
                                    g$ls/false$10805$1nosrN))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10809$1nosrN
                                   g$x$10810$1nosrN
                                   g$y$10811$1nosrN)
                                 (g$syntax-violation$7959$1nosrN
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7567$1nosrN
                                     g$e*$10795$1nosrN))))
                              g$ls/false$10805$1nosrN)
                            ((case-lambda
                               ((g$t$10812$1nosrN)
                                ((case-lambda
                                   ((g$ls/false$10813$1nosrN)
                                    (if g$ls/false$10813$1nosrN
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10813$1nosrN)
                                      (g$syntax-violation$7959$1nosrN
                                        '#f
                                        '"invalid syntax"
                                        g$t$10812$1nosrN))))
                                 (g$syntax-dispatch$7848$1nosrN
                                   g$t$10812$1nosrN
                                   '_))))
                             g$t$10804$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN
                         g$t$10804$1nosrN
                         '((any . any) . any)))))
                   g$t$10796$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN
               g$t$10796$1nosrN
               '((any . each-any) . each-any)))))
         g$e*$10795$1nosrN))))
   (g$top-level-expander$7908$1nosrN
     g$top-level-expander$11354$1nosrN
     (case-lambda
       ((g$e*$10814$1nosrN)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7907$1nosrN g$e*$10814$1nosrN)))
          (case-lambda
            ((g$imp*$10817$1nosrN g$b*$10818$1nosrN)
             ((case-lambda
                ((g$b*$10819$1nosrN g$imp*$10820$1nosrN)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7905$1nosrN
                        '()
                        '()
                        g$imp*$10820$1nosrN
                        g$b*$10819$1nosrN
                        '#t)))
                   (case-lambda
                     ((g$imp*$10828$1nosrN
                        g$invoke-req*$10829$1nosrN
                        g$visit-req*$10830$1nosrN
                        g$invoke-code$10831$1nosrN
                        g$visit-code$10832$1nosrN
                        g$export-subst$10833$1nosrN
                        g$export-env$10834$1nosrN)
                      ((case-lambda
                         ((g$export-env$10835$1nosrN
                            g$export-subst$10836$1nosrN
                            g$visit-code$10837$1nosrN
                            g$invoke-code$10838$1nosrN
                            g$visit-req*$10839$1nosrN
                            g$invoke-req*$10840$1nosrN
                            g$imp*$10841$1nosrN)
                          (values
                            g$invoke-req*$10840$1nosrN
                            g$invoke-code$10838$1nosrN)))
                       g$export-env$10834$1nosrN
                       g$export-subst$10833$1nosrN
                       g$visit-code$10832$1nosrN
                       g$invoke-code$10831$1nosrN
                       g$visit-req*$10830$1nosrN
                       g$invoke-req*$10829$1nosrN
                       g$imp*$10828$1nosrN))))))
              g$b*$10818$1nosrN
              g$imp*$10817$1nosrN)))))))
   (g$9097$7909$1nosrN
     g$9097$11355$1nosrN
     (make-record-type-descriptor
       'env
       '#f
       'g$9100$1nosrN
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9099$7910$1nosrN g$9099$11356$1nosrN '#f)
   (g$9098$7911$1nosrN
     g$9098$11357$1nosrN
     (make-record-constructor-descriptor
       g$9097$7909$1nosrN
       '#f
       g$9099$7910$1nosrN))
   (g$env?$7912$1nosrN
     g$env?$11358$1nosrN
     (record-predicate g$9097$7909$1nosrN))
   (g$make-env$7913$1nosrN
     g$make-env$11359$1nosrN
     (record-constructor g$9098$7911$1nosrN))
   (g$env-names$7914$1nosrN
     g$env-names$11360$1nosrN
     (record-accessor g$9097$7909$1nosrN '0))
   (g$env-labels$7915$1nosrN
     g$env-labels$11361$1nosrN
     (record-accessor g$9097$7909$1nosrN '1))
   (g$env-itc$7916$1nosrN
     g$env-itc$11362$1nosrN
     (record-accessor g$9097$7909$1nosrN '2))
   (g$set-env-names!$7917$1nosrN
     g$set-env-names!$11363$1nosrN
     (record-mutator g$9097$7909$1nosrN '0))
   (g$set-env-labels!$7918$1nosrN
     g$set-env-labels!$11364$1nosrN
     (record-mutator g$9097$7909$1nosrN '1))
   (g$set-env-itc!$7919$1nosrN
     g$set-env-itc!$11365$1nosrN
     (record-mutator g$9097$7909$1nosrN '2))
   (g$rp$7920$1nosrN
     g$rp$11366$1nosrN
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10842$1nosrN g$p$10843$1nosrN)
          (display '"#<environment>" g$p$10843$1nosrN)))))
   (g$9116$7921$1nosrN
     g$9116$11367$1nosrN
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9119$1nosrN
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9118$7922$1nosrN g$9118$11368$1nosrN '#f)
   (g$9117$7923$1nosrN
     g$9117$11369$1nosrN
     (make-record-constructor-descriptor
       g$9116$7921$1nosrN
       '#f
       g$9118$7922$1nosrN))
   (g$interaction-env?$7924$1nosrN
     g$interaction-env?$11370$1nosrN
     (record-predicate g$9116$7921$1nosrN))
   (g$make-interaction-env$7925$1nosrN
     g$make-interaction-env$11371$1nosrN
     (record-constructor g$9117$7923$1nosrN))
   (g$interaction-env-rib$7926$1nosrN
     g$interaction-env-rib$11372$1nosrN
     (record-accessor g$9116$7921$1nosrN '0))
   (g$interaction-env-r$7927$1nosrN
     g$interaction-env-r$11373$1nosrN
     (record-accessor g$9116$7921$1nosrN '1))
   (g$interaction-env-locs$7928$1nosrN
     g$interaction-env-locs$11374$1nosrN
     (record-accessor g$9116$7921$1nosrN '2))
   (g$set-interaction-env-rib!$7929$1nosrN
     g$set-interaction-env-rib!$11375$1nosrN
     (record-mutator g$9116$7921$1nosrN '0))
   (g$set-interaction-env-r!$7930$1nosrN
     g$set-interaction-env-r!$11376$1nosrN
     (record-mutator g$9116$7921$1nosrN '1))
   (g$set-interaction-env-locs!$7931$1nosrN
     g$set-interaction-env-locs!$11377$1nosrN
     (record-mutator g$9116$7921$1nosrN '2))
   (g$rp$7932$1nosrN
     g$rp$11378$1nosrN
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10844$1nosrN g$p$10845$1nosrN)
          (display '"#<environment>" g$p$10845$1nosrN)))))
   (g$interaction-environment-symbols$7933$1nosrN
     g$interaction-environment-symbols$11379$1nosrN
     (case-lambda
       (()
        (map (case-lambda ((g$x$10846$1nosrN) g$x$10846$1nosrN))
             (g$rib-sym*$7525$1nosrN
               (g$interaction-env-rib$7926$1nosrN
                 (g$interaction-environment$7965$1nosrN)))))))
   (g$environment-symbols$7934$1nosrN
     g$environment-symbols$11380$1nosrN
     (case-lambda
       ((g$e$10847$1nosrN)
        (vector->list (g$env-names$7914$1nosrN g$e$10847$1nosrN)))))
   (g$environment-bindings$7935$1nosrN
     g$environment-bindings$11381$1nosrN
     (case-lambda
       ((g$e$10848$1nosrN)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$10849$1nosrN g$label$10850$1nosrN)
               (g$parse-binding$7936$1nosrN
                 (cons
                   g$name$10849$1nosrN
                   (g$imported-label->binding$7384$1nosrN
                     g$label$10850$1nosrN)))))
            (g$env-names$7914$1nosrN g$e$10848$1nosrN)
            (g$env-labels$7915$1nosrN g$e$10848$1nosrN))))))
   (g$parse-binding$7936$1nosrN
     g$parse-binding$11382$1nosrN
     (case-lambda
       ((g$b$10851$1nosrN)
        (cons
          (car g$b$10851$1nosrN)
          ((case-lambda
             ((g$t$10852$1nosrN)
              (if (memv g$t$10852$1nosrN '(core-prim global))
                'procedure
                (if (memv g$t$10852$1nosrN '(core-macro macro global-macro))
                  'syntax
                  (if (memv g$t$10852$1nosrN '($core-rtd))
                    'record
                    (if (eq? (car g$b$10851$1nosrN)
                             (g$cadr$5217$1nosrN g$b$10851$1nosrN))
                      'syntax
                      'unknown))))))
           (g$cadr$5217$1nosrN g$b$10851$1nosrN))))))
   (g$environment?$7937$1nosrN
     g$environment?$11383$1nosrN
     (case-lambda
       ((g$x$10853$1nosrN)
        ((case-lambda
           ((g$t$10854$1nosrN)
            (if g$t$10854$1nosrN
              g$t$10854$1nosrN
              (begin '#f (g$interaction-env?$7924$1nosrN g$x$10853$1nosrN)))))
         (g$env?$7912$1nosrN g$x$10853$1nosrN)))))
   (g$environment$7938$1nosrN
     g$environment$11384$1nosrN
     (case-lambda
       (g$imp*$10855$1nosrN
        ((case-lambda
           ((g$itc$10856$1nosrN)
            ((case-lambda
               ((g$imp-collector$10859$1nosrN g$imp-collector$10860$1nosrN)
                ((case-lambda
                   ((g$swap$10861$1nosrN)
                    (dynamic-wind
                      g$swap$10861$1nosrN
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7897$1nosrN
                                g$imp*$10855$1nosrN)))
                           (case-lambda
                             ((g$subst-names$10864$1nosrN
                                g$subst-labels$10865$1nosrN)
                              ((case-lambda
                                 ((g$subst-labels$10866$1nosrN
                                    g$subst-names$10867$1nosrN)
                                  (g$make-env$7913$1nosrN
                                    g$subst-names$10867$1nosrN
                                    g$subst-labels$10866$1nosrN
                                    g$itc$10856$1nosrN)))
                               g$subst-labels$10865$1nosrN
                               g$subst-names$10864$1nosrN))))))
                      g$swap$10861$1nosrN)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10868$1nosrN)
                        (begin
                          (g$imp-collector$10859$1nosrN
                            g$imp-collector$10860$1nosrN)
                          (set! g$imp-collector$10860$1nosrN
                            g$t$10868$1nosrN))))
                     (g$imp-collector$10859$1nosrN)))))))
             g$imp-collector$7902$1nosrN
             g$itc$10856$1nosrN)))
         (g$make-collector$7899$1nosrN)))))
   (g$null-environment$7939$1nosrN
     g$null-environment$11385$1nosrN
     (case-lambda
       ((g$n$10869$1nosrN)
        (begin
          (if (not (eqv? g$n$10869$1nosrN '5))
            (assertion-violation 'null-environment '"not 5" g$n$10869$1nosrN)
            (void))
          (g$environment$7938$1nosrN '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7940$1nosrN
     g$scheme-report-environment$11386$1nosrN
     (case-lambda
       ((g$n$10870$1nosrN)
        (begin
          (if (not (eqv? g$n$10870$1nosrN '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10870$1nosrN)
            (void))
          (g$environment$7938$1nosrN '(psyntax scheme-report-environment-5))))))
   (g$expand$7941$1nosrN
     g$expand$11387$1nosrN
     (case-lambda
       ((g$x$10871$1nosrN g$env$10872$1nosrN)
        (if (g$env?$7912$1nosrN g$env$10872$1nosrN)
          ((case-lambda
             ((g$rib$10873$1nosrN)
              ((case-lambda
                 ((g$x$10874$1nosrN
                    g$itc$10875$1nosrN
                    g$rtc$10876$1nosrN
                    g$vtc$10877$1nosrN)
                  ((case-lambda
                     ((g$x$10878$1nosrN)
                      (begin
                        (g$seal-rib!$7536$1nosrN g$rib$10873$1nosrN)
                        (values g$x$10878$1nosrN (g$rtc$10876$1nosrN)))))
                   ((case-lambda
                      ((g$inv-collector$10885$1nosrN
                         g$vis-collector$10886$1nosrN
                         g$imp-collector$10887$1nosrN
                         g$inv-collector$10888$1nosrN
                         g$vis-collector$10889$1nosrN
                         g$imp-collector$10890$1nosrN)
                       ((case-lambda
                          ((g$swap$10891$1nosrN)
                           (dynamic-wind
                             g$swap$10891$1nosrN
                             (case-lambda
                               (()
                                (g$chi-expr$7866$1nosrN
                                  g$x$10874$1nosrN
                                  '()
                                  '())))
                             g$swap$10891$1nosrN)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10892$1nosrN)
                                 (begin
                                   (g$inv-collector$10885$1nosrN
                                     g$inv-collector$10888$1nosrN)
                                   (set! g$inv-collector$10888$1nosrN
                                     g$t$10892$1nosrN))))
                              (g$inv-collector$10885$1nosrN))
                             ((case-lambda
                                ((g$t$10893$1nosrN)
                                 (begin
                                   (g$vis-collector$10886$1nosrN
                                     g$vis-collector$10889$1nosrN)
                                   (set! g$vis-collector$10889$1nosrN
                                     g$t$10893$1nosrN))))
                              (g$vis-collector$10886$1nosrN))
                             ((case-lambda
                                ((g$t$10894$1nosrN)
                                 (begin
                                   (g$imp-collector$10887$1nosrN
                                     g$imp-collector$10890$1nosrN)
                                   (set! g$imp-collector$10890$1nosrN
                                     g$t$10894$1nosrN))))
                              (g$imp-collector$10887$1nosrN))))))))
                    g$inv-collector$7900$1nosrN
                    g$vis-collector$7901$1nosrN
                    g$imp-collector$7902$1nosrN
                    g$rtc$10876$1nosrN
                    g$vtc$10877$1nosrN
                    g$itc$10875$1nosrN))))
               (g$make-stx$7543$1nosrN
                 g$x$10871$1nosrN
                 g$top-mark*$7512$1nosrN
                 (list g$rib$10873$1nosrN)
                 '())
               (g$env-itc$7916$1nosrN g$env$10872$1nosrN)
               (g$make-collector$7899$1nosrN)
               (g$make-collector$7899$1nosrN))))
           (g$make-top-rib$7898$1nosrN
             (g$env-names$7914$1nosrN g$env$10872$1nosrN)
             (g$env-labels$7915$1nosrN g$env$10872$1nosrN)))
          (if (g$interaction-env?$7924$1nosrN g$env$10872$1nosrN)
            ((case-lambda
               ((g$rib$10895$1nosrN g$r$10896$1nosrN g$rtc$10897$1nosrN)
                ((case-lambda
                   ((g$x$10898$1nosrN)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10909$1nosrN
                               g$inv-collector$10910$1nosrN
                               g$vis-collector$10911$1nosrN
                               g$imp-collector$10912$1nosrN
                               g$top-level-context$10913$1nosrN
                               g$inv-collector$10914$1nosrN
                               g$vis-collector$10915$1nosrN
                               g$imp-collector$10916$1nosrN)
                             ((case-lambda
                                ((g$swap$10917$1nosrN)
                                 (dynamic-wind
                                   g$swap$10917$1nosrN
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7904$1nosrN
                                        g$x$10898$1nosrN
                                        g$rib$10895$1nosrN
                                        g$r$10896$1nosrN)))
                                   g$swap$10917$1nosrN)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10918$1nosrN)
                                       (begin
                                         (g$top-level-context$10909$1nosrN
                                           g$top-level-context$10913$1nosrN)
                                         (set! g$top-level-context$10913$1nosrN
                                           g$t$10918$1nosrN))))
                                    (g$top-level-context$10909$1nosrN))
                                   ((case-lambda
                                      ((g$t$10919$1nosrN)
                                       (begin
                                         (g$inv-collector$10910$1nosrN
                                           g$inv-collector$10914$1nosrN)
                                         (set! g$inv-collector$10914$1nosrN
                                           g$t$10919$1nosrN))))
                                    (g$inv-collector$10910$1nosrN))
                                   ((case-lambda
                                      ((g$t$10920$1nosrN)
                                       (begin
                                         (g$vis-collector$10911$1nosrN
                                           g$vis-collector$10915$1nosrN)
                                         (set! g$vis-collector$10915$1nosrN
                                           g$t$10920$1nosrN))))
                                    (g$vis-collector$10911$1nosrN))
                                   ((case-lambda
                                      ((g$t$10921$1nosrN)
                                       (begin
                                         (g$imp-collector$10912$1nosrN
                                           g$imp-collector$10916$1nosrN)
                                         (set! g$imp-collector$10916$1nosrN
                                           g$t$10921$1nosrN))))
                                    (g$imp-collector$10912$1nosrN))))))))
                          g$top-level-context$7966$1nosrN
                          g$inv-collector$7900$1nosrN
                          g$vis-collector$7901$1nosrN
                          g$imp-collector$7902$1nosrN
                          g$env$10872$1nosrN
                          g$rtc$10897$1nosrN
                          (g$make-collector$7899$1nosrN)
                          (g$make-collector$7899$1nosrN))))
                      (case-lambda
                        ((g$e$10922$1nosrN g$r^$10923$1nosrN)
                         ((case-lambda
                            ((g$r^$10924$1nosrN g$e$10925$1nosrN)
                             (begin
                               (g$set-interaction-env-r!$7930$1nosrN
                                 g$env$10872$1nosrN
                                 g$r^$10924$1nosrN)
                               (values g$e$10925$1nosrN (g$rtc$10897$1nosrN)))))
                          g$r^$10923$1nosrN
                          g$e$10922$1nosrN))))))
                 (g$make-stx$7543$1nosrN
                   g$x$10871$1nosrN
                   g$top-mark*$7512$1nosrN
                   (list g$rib$10895$1nosrN)
                   '()))))
             (g$interaction-env-rib$7926$1nosrN g$env$10872$1nosrN)
             (g$interaction-env-r$7927$1nosrN g$env$10872$1nosrN)
             (g$make-collector$7899$1nosrN))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10872$1nosrN))))))
   (g$eval$7942$1nosrN
     g$eval$11388$1nosrN
     (case-lambda
       ((g$x$10926$1nosrN g$env$10927$1nosrN)
        (begin
          (if (not (g$environment?$7937$1nosrN g$env$10927$1nosrN))
            (error 'eval '"not an environment" g$env$10927$1nosrN)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7941$1nosrN g$x$10926$1nosrN g$env$10927$1nosrN)))
            (case-lambda
              ((g$x$10930$1nosrN g$invoke-req*$10931$1nosrN)
               ((case-lambda
                  ((g$invoke-req*$10932$1nosrN g$x$10933$1nosrN)
                   (begin
                     (for-each
                       g$invoke-library$7385$1nosrN
                       g$invoke-req*$10932$1nosrN)
                     (eval-core
                       (g$expanded->core$7084$1nosrN g$x$10933$1nosrN)))))
                g$invoke-req*$10931$1nosrN
                g$x$10930$1nosrN))))))))
   (g$library-expander$7943$1nosrN
     g$library-expander$11389$1nosrN
     (case-lambda
       ((g$x$10934$1nosrN g$filename$10935$1nosrN g$verify-name$10936$1nosrN)
        (letrec* ((g$build-visit-code$10937$1nosrN
                    (case-lambda
                      ((g$macro*$10980$1nosrN)
                       (if (null? g$macro*$10980$1nosrN)
                         (g$build-void$7505$1nosrN)
                         (g$build-sequence$7504$1nosrN
                           '#f
                           (map (case-lambda
                                  ((g$x$10981$1nosrN)
                                   ((case-lambda
                                      ((g$loc$10982$1nosrN g$src$10983$1nosrN)
                                       (list
                                         'set!
                                         g$loc$10982$1nosrN
                                         g$src$10983$1nosrN)))
                                    (car g$x$10981$1nosrN)
                                    (g$cddr$5219$1nosrN g$x$10981$1nosrN))))
                                g$macro*$10980$1nosrN))))))
                  (g$visit!$10938$1nosrN
                    (case-lambda
                      ((g$macro*$10976$1nosrN)
                       (for-each
                         (case-lambda
                           ((g$x$10977$1nosrN)
                            ((case-lambda
                               ((g$loc$10978$1nosrN g$proc$10979$1nosrN)
                                (set-symbol-value!
                                  g$loc$10978$1nosrN
                                  g$proc$10979$1nosrN)))
                             (car g$x$10977$1nosrN)
                             (g$cadr$5217$1nosrN g$x$10977$1nosrN))))
                         g$macro*$10976$1nosrN)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7906$1nosrN
                 g$x$10934$1nosrN
                 g$verify-name$10936$1nosrN)))
            (case-lambda
              ((g$name$10948$1nosrN
                 g$ver$10949$1nosrN
                 g$imp*$10950$1nosrN
                 g$inv*$10951$1nosrN
                 g$vis*$10952$1nosrN
                 g$invoke-code$10953$1nosrN
                 g$macro*$10954$1nosrN
                 g$export-subst$10955$1nosrN
                 g$export-env$10956$1nosrN)
               ((case-lambda
                  ((g$export-env$10957$1nosrN
                     g$export-subst$10958$1nosrN
                     g$macro*$10959$1nosrN
                     g$invoke-code$10960$1nosrN
                     g$vis*$10961$1nosrN
                     g$inv*$10962$1nosrN
                     g$imp*$10963$1nosrN
                     g$ver$10964$1nosrN
                     g$name$10965$1nosrN)
                   ((case-lambda
                      ((g$id$10966$1nosrN
                         g$name$10967$1nosrN
                         g$ver$10968$1nosrN
                         g$imp*$10969$1nosrN
                         g$vis*$10970$1nosrN
                         g$inv*$10971$1nosrN
                         g$visit-proc$10972$1nosrN
                         g$invoke-proc$10973$1nosrN
                         g$visit-code$10974$1nosrN
                         g$invoke-code$10975$1nosrN)
                       (begin
                         (g$install-library$7383$1nosrN
                           g$id$10966$1nosrN
                           g$name$10967$1nosrN
                           g$ver$10968$1nosrN
                           g$imp*$10969$1nosrN
                           g$vis*$10970$1nosrN
                           g$inv*$10971$1nosrN
                           g$export-subst$10958$1nosrN
                           g$export-env$10957$1nosrN
                           g$visit-proc$10972$1nosrN
                           g$invoke-proc$10973$1nosrN
                           g$visit-code$10974$1nosrN
                           g$invoke-code$10975$1nosrN
                           '#t
                           g$filename$10935$1nosrN)
                         (values
                           g$id$10966$1nosrN
                           g$name$10967$1nosrN
                           g$ver$10968$1nosrN
                           g$imp*$10969$1nosrN
                           g$vis*$10970$1nosrN
                           g$inv*$10971$1nosrN
                           g$invoke-code$10975$1nosrN
                           g$visit-code$10974$1nosrN
                           g$export-subst$10958$1nosrN
                           g$export-env$10957$1nosrN))))
                    (gensym)
                    g$name$10965$1nosrN
                    g$ver$10964$1nosrN
                    (map g$library-spec$7389$1nosrN g$imp*$10963$1nosrN)
                    (map g$library-spec$7389$1nosrN g$vis*$10961$1nosrN)
                    (map g$library-spec$7389$1nosrN g$inv*$10962$1nosrN)
                    (case-lambda
                      (() (g$visit!$10938$1nosrN g$macro*$10959$1nosrN)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7084$1nosrN
                           g$invoke-code$10960$1nosrN))))
                    (g$build-visit-code$10937$1nosrN g$macro*$10959$1nosrN)
                    g$invoke-code$10960$1nosrN)))
                g$export-env$10956$1nosrN
                g$export-subst$10955$1nosrN
                g$macro*$10954$1nosrN
                g$invoke-code$10953$1nosrN
                g$vis*$10952$1nosrN
                g$inv*$10951$1nosrN
                g$imp*$10950$1nosrN
                g$ver$10949$1nosrN
                g$name$10948$1nosrN))))))
       ((g$x$10984$1nosrN g$filename$10985$1nosrN)
        (g$library-expander$7943$1nosrN
          g$x$10984$1nosrN
          g$filename$10985$1nosrN
          (case-lambda ((g$x$10986$1nosrN) (values)))))
       ((g$x$10987$1nosrN)
        (g$library-expander$7943$1nosrN
          g$x$10987$1nosrN
          '#f
          (case-lambda ((g$x$10988$1nosrN) (values)))))))
   (g$boot-library-expand$7944$1nosrN
     g$boot-library-expand$11390$1nosrN
     (case-lambda
       ((g$x$10989$1nosrN)
        (call-with-values
          (case-lambda (() (g$library-expander$7943$1nosrN g$x$10989$1nosrN)))
          (case-lambda
            ((g$id$11000$1nosrN
               g$name$11001$1nosrN
               g$ver$11002$1nosrN
               g$imp*$11003$1nosrN
               g$vis*$11004$1nosrN
               g$inv*$11005$1nosrN
               g$invoke-code$11006$1nosrN
               g$visit-code$11007$1nosrN
               g$export-subst$11008$1nosrN
               g$export-env$11009$1nosrN)
             ((case-lambda
                ((g$export-env$11010$1nosrN
                   g$export-subst$11011$1nosrN
                   g$visit-code$11012$1nosrN
                   g$invoke-code$11013$1nosrN
                   g$inv*$11014$1nosrN
                   g$vis*$11015$1nosrN
                   g$imp*$11016$1nosrN
                   g$ver$11017$1nosrN
                   g$name$11018$1nosrN
                   g$id$11019$1nosrN)
                 (values
                   g$name$11018$1nosrN
                   g$invoke-code$11013$1nosrN
                   g$export-subst$11011$1nosrN
                   g$export-env$11010$1nosrN)))
              g$export-env$11009$1nosrN
              g$export-subst$11008$1nosrN
              g$visit-code$11007$1nosrN
              g$invoke-code$11006$1nosrN
              g$inv*$11005$1nosrN
              g$vis*$11004$1nosrN
              g$imp*$11003$1nosrN
              g$ver$11002$1nosrN
              g$name$11001$1nosrN
              g$id$11000$1nosrN)))))))
   (g$rev-map-append$7945$1nosrN
     g$rev-map-append$11391$1nosrN
     (case-lambda
       ((g$f$11020$1nosrN g$ls$11021$1nosrN g$ac$11022$1nosrN)
        (if (null? g$ls$11021$1nosrN)
          g$ac$11022$1nosrN
          (g$rev-map-append$7945$1nosrN
            g$f$11020$1nosrN
            (cdr g$ls$11021$1nosrN)
            (cons
              (g$f$11020$1nosrN (car g$ls$11021$1nosrN))
              g$ac$11022$1nosrN))))))
   (g$build-exports$7946$1nosrN
     g$build-exports$11392$1nosrN
     (case-lambda
       ((g$lex*+loc*$11023$1nosrN g$init*$11024$1nosrN)
        (g$build-sequence$7504$1nosrN
          '#f
          (cons
            (g$build-void$7505$1nosrN)
            (g$rev-map-append$7945$1nosrN
              (case-lambda
                ((g$x$11025$1nosrN)
                 (list 'set! (cdr g$x$11025$1nosrN) (car g$x$11025$1nosrN))))
              g$lex*+loc*$11023$1nosrN
              g$init*$11024$1nosrN))))))
   (g$make-export-subst$7947$1nosrN
     g$make-export-subst$11393$1nosrN
     (case-lambda
       ((g$int*$11026$1nosrN g$ext*$11027$1nosrN g$rib$11028$1nosrN)
        (map (case-lambda
               ((g$int$11029$1nosrN g$ext$11030$1nosrN)
                ((case-lambda
                   ((g$id$11031$1nosrN)
                    ((case-lambda
                       ((g$label$11032$1nosrN)
                        ((case-lambda
                           (()
                            (begin
                              (if (not g$label$11032$1nosrN)
                                (g$syntax-violation$7959$1nosrN
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$11031$1nosrN)
                                (void))
                              (cons
                                g$ext$11030$1nosrN
                                g$label$11032$1nosrN)))))))
                     (g$id->label$7583$1nosrN g$id$11031$1nosrN))))
                 (g$make-stx$7543$1nosrN
                   g$int$11029$1nosrN
                   g$top-mark*$7512$1nosrN
                   (list g$rib$11028$1nosrN)
                   '()))))
             g$int*$11026$1nosrN
             g$ext*$11027$1nosrN))))
   (g$make-export-env/macros$7948$1nosrN
     g$make-export-env/macros$11394$1nosrN
     (case-lambda
       ((g$lex*$11033$1nosrN g$loc*$11034$1nosrN g$r$11035$1nosrN)
        (letrec* ((g$lookup$11036$1nosrN
                    (case-lambda
                      ((g$x$11051$1nosrN)
                       ((letrec ((g$f$11052$1nosrN
                                   (case-lambda
                                     ((g$x$11053$1nosrN
                                        g$lex*$11054$1nosrN
                                        g$loc*$11055$1nosrN)
                                      (if (pair? g$lex*$11054$1nosrN)
                                        (if (eq? g$x$11053$1nosrN
                                                 (car g$lex*$11054$1nosrN))
                                          (car g$loc*$11055$1nosrN)
                                          (g$f$11052$1nosrN
                                            g$x$11053$1nosrN
                                            (cdr g$lex*$11054$1nosrN)
                                            (cdr g$loc*$11055$1nosrN)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11052$1nosrN)
                        g$x$11051$1nosrN
                        g$lex*$11033$1nosrN
                        g$loc*$11034$1nosrN)))))
          ((letrec ((g$f$11037$1nosrN
                      (case-lambda
                        ((g$r$11038$1nosrN
                           g$env$11039$1nosrN
                           g$global*$11040$1nosrN
                           g$macro*$11041$1nosrN)
                         (if (null? g$r$11038$1nosrN)
                           (values
                             g$env$11039$1nosrN
                             g$global*$11040$1nosrN
                             g$macro*$11041$1nosrN)
                           ((case-lambda
                              ((g$x$11042$1nosrN)
                               ((case-lambda
                                  ((g$label$11043$1nosrN g$b$11044$1nosrN)
                                   ((case-lambda
                                      ((g$t$11045$1nosrN)
                                       (if (memv g$t$11045$1nosrN '(lexical))
                                         ((case-lambda
                                            ((g$v$11046$1nosrN)
                                             ((case-lambda
                                                ((g$loc$11047$1nosrN
                                                   g$type$11048$1nosrN)
                                                 (g$f$11037$1nosrN
                                                   (cdr g$r$11038$1nosrN)
                                                   (cons
                                                     (g$cons*$5700$1nosrN
                                                       g$label$11043$1nosrN
                                                       g$type$11048$1nosrN
                                                       g$loc$11047$1nosrN)
                                                     g$env$11039$1nosrN)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7792$1nosrN
                                                         g$v$11046$1nosrN)
                                                       g$loc$11047$1nosrN)
                                                     g$global*$11040$1nosrN)
                                                   g$macro*$11041$1nosrN)))
                                              (g$lookup$11036$1nosrN
                                                (g$lexical-var$7792$1nosrN
                                                  g$v$11046$1nosrN))
                                              (if (g$lexical-mutable?$7793$1nosrN
                                                    g$v$11046$1nosrN)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7588$1nosrN
                                            g$b$11044$1nosrN))
                                         (if (memv
                                               g$t$11045$1nosrN
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$11049$1nosrN)
                                               (g$f$11037$1nosrN
                                                 (cdr g$r$11038$1nosrN)
                                                 (cons
                                                   (g$cons*$5700$1nosrN
                                                     g$label$11043$1nosrN
                                                     'global-macro
                                                     g$loc$11049$1nosrN)
                                                   g$env$11039$1nosrN)
                                                 g$global*$11040$1nosrN
                                                 (cons
                                                   (cons
                                                     g$loc$11049$1nosrN
                                                     (g$binding-value$7588$1nosrN
                                                       g$b$11044$1nosrN))
                                                   g$macro*$11041$1nosrN))))
                                            (gensym))
                                           (if (memv
                                                 g$t$11045$1nosrN
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$11050$1nosrN)
                                                 (g$f$11037$1nosrN
                                                   (cdr g$r$11038$1nosrN)
                                                   (cons
                                                     (g$cons*$5700$1nosrN
                                                       g$label$11043$1nosrN
                                                       'global-macro!
                                                       g$loc$11050$1nosrN)
                                                     g$env$11039$1nosrN)
                                                   g$global*$11040$1nosrN
                                                   (cons
                                                     (cons
                                                       g$loc$11050$1nosrN
                                                       (g$binding-value$7588$1nosrN
                                                         g$b$11044$1nosrN))
                                                     g$macro*$11041$1nosrN))))
                                              (gensym))
                                             (if (memv
                                                   g$t$11045$1nosrN
                                                   '($rtd $module))
                                               (g$f$11037$1nosrN
                                                 (cdr g$r$11038$1nosrN)
                                                 (cons
                                                   g$x$11042$1nosrN
                                                   g$env$11039$1nosrN)
                                                 g$global*$11040$1nosrN
                                                 g$macro*$11041$1nosrN)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7587$1nosrN
                                                   g$b$11044$1nosrN)
                                                 (g$binding-value$7588$1nosrN
                                                   g$b$11044$1nosrN))))))))
                                    (g$binding-type$7587$1nosrN
                                      g$b$11044$1nosrN))))
                                (car g$x$11042$1nosrN)
                                (cdr g$x$11042$1nosrN))))
                            (car g$r$11038$1nosrN)))))))
             g$f$11037$1nosrN)
           g$r$11035$1nosrN
           '()
           '()
           '())))))
   (g$generate-temporaries$7949$1nosrN
     g$generate-temporaries$11395$1nosrN
     (case-lambda
       ((g$ls$11056$1nosrN)
        ((case-lambda
           ((g$t$11057$1nosrN)
            ((case-lambda
               ((g$ls/false$11058$1nosrN)
                (if g$ls/false$11058$1nosrN
                  (apply
                    (case-lambda
                      ((g$ls$11059$1nosrN)
                       (map (case-lambda
                              ((g$x$11060$1nosrN)
                               (g$make-stx$7543$1nosrN
                                 ((case-lambda
                                    ((g$x$11061$1nosrN)
                                     (if ((case-lambda
                                            ((g$t$11062$1nosrN)
                                             (if g$t$11062$1nosrN
                                               g$t$11062$1nosrN
                                               (begin
                                                 '#f
                                                 (string? g$x$11061$1nosrN)))))
                                          (symbol? g$x$11061$1nosrN))
                                       (gensym g$x$11061$1nosrN)
                                       (gensym 't))))
                                  (g$syntax->datum$7962$1nosrN
                                    g$x$11060$1nosrN))
                                 g$top-mark*$7512$1nosrN
                                 '()
                                 '())))
                            g$ls$11059$1nosrN)))
                    g$ls/false$11058$1nosrN)
                  ((case-lambda
                     ((g$t$11063$1nosrN)
                      ((case-lambda
                         ((g$ls/false$11064$1nosrN)
                          (if g$ls/false$11064$1nosrN
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11064$1nosrN)
                            (g$syntax-violation$7959$1nosrN
                              '#f
                              '"invalid syntax"
                              g$t$11063$1nosrN))))
                       (g$syntax-dispatch$7848$1nosrN g$t$11063$1nosrN '_))))
                   g$t$11057$1nosrN))))
             (g$syntax-dispatch$7848$1nosrN g$t$11057$1nosrN 'each-any))))
         g$ls$11056$1nosrN))))
   (g$free-identifier=?$7950$1nosrN
     g$free-identifier=?$11396$1nosrN
     (case-lambda
       ((g$x$11065$1nosrN g$y$11066$1nosrN)
        (if (g$id?$7570$1nosrN g$x$11065$1nosrN)
          (if (g$id?$7570$1nosrN g$y$11066$1nosrN)
            (g$free-id=?$7574$1nosrN g$x$11065$1nosrN g$y$11066$1nosrN)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11066$1nosrN))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11065$1nosrN)))))
   (g$bound-identifier=?$7951$1nosrN
     g$bound-identifier=?$11397$1nosrN
     (case-lambda
       ((g$x$11067$1nosrN g$y$11068$1nosrN)
        (if (g$id?$7570$1nosrN g$x$11067$1nosrN)
          (if (g$id?$7570$1nosrN g$y$11068$1nosrN)
            (g$bound-id=?$7573$1nosrN g$x$11067$1nosrN g$y$11068$1nosrN)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11068$1nosrN))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11067$1nosrN)))))
   (g$make-source-condition$7952$1nosrN
     g$make-source-condition$11398$1nosrN
     (case-lambda
       ((g$x$11069$1nosrN)
        (letrec* ((g$12008$11070$1nosrN
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12011$1nosrN
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12010$11071$1nosrN '#f)
                  (g$12009$11072$1nosrN
                    (make-record-constructor-descriptor
                      g$12008$11070$1nosrN
                      &condition-rcd
                      g$12010$11071$1nosrN))
                  (g$12007$11073$1nosrN (record-predicate g$12008$11070$1nosrN))
                  (g$make-source-condition$11074$1nosrN
                    (record-constructor g$12009$11072$1nosrN))
                  (g$12005$11075$1nosrN
                    (record-accessor g$12008$11070$1nosrN '0))
                  (g$12006$11076$1nosrN
                    (record-accessor g$12008$11070$1nosrN '1))
                  (g$source-condition?$11077$1nosrN
                    (condition-predicate g$12008$11070$1nosrN))
                  (g$source-filename$11078$1nosrN
                    (condition-accessor
                      g$12008$11070$1nosrN
                      g$12005$11075$1nosrN))
                  (g$source-character$11079$1nosrN
                    (condition-accessor
                      g$12008$11070$1nosrN
                      g$12006$11076$1nosrN)))
          (if (pair? g$x$11069$1nosrN)
            (g$make-source-condition$11074$1nosrN
              (car g$x$11069$1nosrN)
              (cdr g$x$11069$1nosrN))
            (condition))))))
   (g$extract-position-condition$7953$1nosrN
     g$extract-position-condition$11399$1nosrN
     (case-lambda
       ((g$x$11080$1nosrN)
        (g$make-source-condition$7952$1nosrN
          (g$expression-position$7954$1nosrN g$x$11080$1nosrN)))))
   (g$expression-position$7954$1nosrN
     g$expression-position$11400$1nosrN
     (case-lambda
       ((g$x$11081$1nosrN)
        (if (g$stx?$7542$1nosrN g$x$11081$1nosrN)
          (begin
            '#f
            ((case-lambda
               ((g$x$11082$1nosrN)
                (if (annotation? g$x$11082$1nosrN)
                  (begin '#f (annotation-source g$x$11082$1nosrN))
                  '#f)))
             (g$stx-expr$7544$1nosrN g$x$11081$1nosrN)))
          '#f))))
   (g$assertion-error$7955$1nosrN
     g$assertion-error$11401$1nosrN
     (case-lambda
       ((g$expr$11083$1nosrN g$pos$11084$1nosrN)
        (raise
          (condition
            (g$make-assertion-violation$5984$1nosrN)
            (g$make-who-condition$5998$1nosrN 'assert)
            (g$make-message-condition$5952$1nosrN '"assertion failed")
            (g$make-irritants-condition$5990$1nosrN (list g$expr$11083$1nosrN))
            (g$make-source-condition$7952$1nosrN g$pos$11084$1nosrN))))))
   (g$syntax-error$7956$1nosrN
     g$syntax-error$11402$1nosrN
     (case-lambda
       ((g$x$11085$1nosrN . g$args$11086$1nosrN)
        (begin
          (if (not (g$for-all$5698$1nosrN string? g$args$11086$1nosrN))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11086$1nosrN)
            (void))
          (raise
            (condition
              (g$make-message-condition$5952$1nosrN
                (if (null? g$args$11086$1nosrN)
                  '"invalid syntax"
                  (apply string-append g$args$11086$1nosrN)))
              (g$make-syntax-violation$6024$1nosrN
                (g$syntax->datum$7962$1nosrN g$x$11085$1nosrN)
                '#f)
              (g$extract-position-condition$7953$1nosrN g$x$11085$1nosrN)
              (g$extract-trace$7957$1nosrN g$x$11085$1nosrN)))))))
   (g$extract-trace$7957$1nosrN
     g$extract-trace$11403$1nosrN
     (case-lambda
       ((g$x$11087$1nosrN)
        (letrec* ((g$12035$11088$1nosrN
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12038$1nosrN
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12037$11089$1nosrN '#f)
                  (g$12036$11090$1nosrN
                    (make-record-constructor-descriptor
                      g$12035$11088$1nosrN
                      &condition-rcd
                      g$12037$11089$1nosrN))
                  (g$12034$11091$1nosrN (record-predicate g$12035$11088$1nosrN))
                  (g$make-trace$11092$1nosrN
                    (record-constructor g$12036$11090$1nosrN))
                  (g$12033$11093$1nosrN
                    (record-accessor g$12035$11088$1nosrN '0))
                  (g$trace?$11094$1nosrN
                    (condition-predicate g$12035$11088$1nosrN))
                  (g$trace-form$11095$1nosrN
                    (condition-accessor
                      g$12035$11088$1nosrN
                      g$12033$11093$1nosrN)))
          ((letrec ((g$f$11096$1nosrN
                      (case-lambda
                        ((g$x$11097$1nosrN)
                         (if (g$stx?$7542$1nosrN g$x$11097$1nosrN)
                           (apply
                             condition
                             (g$make-trace$11092$1nosrN g$x$11097$1nosrN)
                             (map g$f$11096$1nosrN
                                  (g$stx-ae*$7547$1nosrN g$x$11097$1nosrN)))
                           (if (annotation? g$x$11097$1nosrN)
                             (g$make-trace$11092$1nosrN
                               (g$make-stx$7543$1nosrN
                                 g$x$11097$1nosrN
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11096$1nosrN)
           g$x$11087$1nosrN)))))
   (g$syntax-violation*$7958$1nosrN
     g$syntax-violation*$11404$1nosrN
     (case-lambda
       ((g$who$11098$1nosrN
          g$msg$11099$1nosrN
          g$form$11100$1nosrN
          g$condition-object$11101$1nosrN)
        (begin
          (if (not (string? g$msg$11099$1nosrN))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11099$1nosrN)
            (void))
          ((case-lambda
             ((g$who$11102$1nosrN)
              (raise
                (condition
                  (if g$who$11102$1nosrN
                    (g$make-who-condition$5998$1nosrN g$who$11102$1nosrN)
                    (condition))
                  (g$make-message-condition$5952$1nosrN g$msg$11099$1nosrN)
                  g$condition-object$11101$1nosrN
                  (g$extract-position-condition$7953$1nosrN g$form$11100$1nosrN)
                  (g$extract-trace$7957$1nosrN g$form$11100$1nosrN)))))
           (if ((case-lambda
                  ((g$t$11103$1nosrN)
                   (if g$t$11103$1nosrN
                     g$t$11103$1nosrN
                     (begin '#f (symbol? g$who$11098$1nosrN)))))
                (string? g$who$11098$1nosrN))
             g$who$11098$1nosrN
             (if (not g$who$11098$1nosrN)
               ((case-lambda
                  ((g$t$11104$1nosrN)
                   ((case-lambda
                      ((g$ls/false$11105$1nosrN)
                       (if (if g$ls/false$11105$1nosrN
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11106$1nosrN)
                                    (g$id?$7570$1nosrN g$id$11106$1nosrN)))
                                 g$ls/false$11105$1nosrN))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11107$1nosrN)
                              (g$syntax->datum$7962$1nosrN g$id$11107$1nosrN)))
                           g$ls/false$11105$1nosrN)
                         ((case-lambda
                            ((g$t$11108$1nosrN)
                             ((case-lambda
                                ((g$ls/false$11109$1nosrN)
                                 (if (if g$ls/false$11109$1nosrN
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11110$1nosrN
                                                g$rest$11111$1nosrN)
                                              (g$id?$7570$1nosrN
                                                g$id$11110$1nosrN)))
                                           g$ls/false$11109$1nosrN))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11112$1nosrN g$rest$11113$1nosrN)
                                        (g$syntax->datum$7962$1nosrN
                                          g$id$11112$1nosrN)))
                                     g$ls/false$11109$1nosrN)
                                   ((case-lambda
                                      ((g$t$11114$1nosrN)
                                       ((case-lambda
                                          ((g$ls/false$11115$1nosrN)
                                           (if g$ls/false$11115$1nosrN
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11115$1nosrN)
                                             (g$syntax-violation$7959$1nosrN
                                               '#f
                                               '"invalid syntax"
                                               g$t$11114$1nosrN))))
                                        (g$syntax-dispatch$7848$1nosrN
                                          g$t$11114$1nosrN
                                          '_))))
                                    g$t$11108$1nosrN))))
                              (g$syntax-dispatch$7848$1nosrN
                                g$t$11108$1nosrN
                                '(any . any)))))
                          g$t$11104$1nosrN))))
                    (g$syntax-dispatch$7848$1nosrN g$t$11104$1nosrN 'any))))
                g$form$11100$1nosrN)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11098$1nosrN))))))))
   (g$syntax-violation$7959$1nosrN
     g$syntax-violation$11405$1nosrN
     (case-lambda
       ((g$who$11116$1nosrN g$msg$11117$1nosrN g$form$11118$1nosrN)
        (g$syntax-violation$7959$1nosrN
          g$who$11116$1nosrN
          g$msg$11117$1nosrN
          g$form$11118$1nosrN
          '#f))
       ((g$who$11119$1nosrN
          g$msg$11120$1nosrN
          g$form$11121$1nosrN
          g$subform$11122$1nosrN)
        (g$syntax-violation*$7958$1nosrN
          g$who$11119$1nosrN
          g$msg$11120$1nosrN
          g$form$11121$1nosrN
          (g$make-syntax-violation$6024$1nosrN
            (g$syntax->datum$7962$1nosrN g$form$11121$1nosrN)
            (g$syntax->datum$7962$1nosrN g$subform$11122$1nosrN))))))
   (g$identifier?$7960$1nosrN
     g$identifier?$11406$1nosrN
     (case-lambda ((g$x$11123$1nosrN) (g$id?$7570$1nosrN g$x$11123$1nosrN))))
   (g$datum->syntax$7961$1nosrN
     g$datum->syntax$11407$1nosrN
     (case-lambda
       ((g$id$11124$1nosrN g$datum$11125$1nosrN)
        (if (g$id?$7570$1nosrN g$id$11124$1nosrN)
          (g$datum->stx$7553$1nosrN g$id$11124$1nosrN g$datum$11125$1nosrN)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11124$1nosrN)))))
   (g$syntax->datum$7962$1nosrN
     g$syntax->datum$11408$1nosrN
     (case-lambda
       ((g$x$11126$1nosrN) (g$stx->datum$7581$1nosrN g$x$11126$1nosrN))))
   (g$compile-r6rs-top-level$7963$1nosrN
     g$compile-r6rs-top-level$11409$1nosrN
     (case-lambda
       ((g$x*$11127$1nosrN)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7908$1nosrN g$x*$11127$1nosrN)))
          (case-lambda
            ((g$lib*$11130$1nosrN g$invoke-code$11131$1nosrN)
             ((case-lambda
                ((g$invoke-code$11132$1nosrN g$lib*$11133$1nosrN)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7385$1nosrN
                        g$lib*$11133$1nosrN)
                      (eval-core
                        (g$expanded->core$7084$1nosrN
                          g$invoke-code$11132$1nosrN)))))))
              g$invoke-code$11131$1nosrN
              g$lib*$11130$1nosrN)))))))
   (g$pre-compile-r6rs-top-level$7964$1nosrN
     g$pre-compile-r6rs-top-level$11410$1nosrN
     (case-lambda
       ((g$x*$11134$1nosrN)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7908$1nosrN g$x*$11134$1nosrN)))
          (case-lambda
            ((g$lib*$11137$1nosrN g$invoke-code$11138$1nosrN)
             ((case-lambda
                ((g$invoke-code$11139$1nosrN g$lib*$11140$1nosrN)
                 (begin
                   (for-each g$invoke-library$7385$1nosrN g$lib*$11140$1nosrN)
                   (compile-core
                     (g$expanded->core$7084$1nosrN
                       g$invoke-code$11139$1nosrN)))))
              g$invoke-code$11138$1nosrN
              g$lib*$11137$1nosrN)))))))
   (g$interaction-environment$7965$1nosrN
     g$interaction-environment$11411$1nosrN
     ((case-lambda
        ((g$the-env$11141$1nosrN)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11142$1nosrN)
                (if g$t$11142$1nosrN
                  g$t$11142$1nosrN
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$11143$1nosrN g$rib$11144$1nosrN)
                        (begin
                          ((case-lambda
                             ((g$subst$11145$1nosrN)
                              (begin
                                (g$set-rib-sym*!$7529$1nosrN
                                  g$rib$11144$1nosrN
                                  (map car g$subst$11145$1nosrN))
                                (g$set-rib-mark**!$7530$1nosrN
                                  g$rib$11144$1nosrN
                                  (map (case-lambda
                                         ((g$x$11146$1nosrN)
                                          g$top-mark*$7512$1nosrN))
                                       g$subst$11145$1nosrN))
                                (g$set-rib-label*!$7531$1nosrN
                                  g$rib$11144$1nosrN
                                  (map cdr g$subst$11145$1nosrN)))))
                           (g$library-subst$7342$1nosrN g$lib$11143$1nosrN))
                          ((case-lambda
                             ((g$env$11147$1nosrN)
                              (begin
                                (set! g$the-env$11141$1nosrN g$env$11147$1nosrN)
                                g$env$11147$1nosrN)))
                           (g$make-interaction-env$7925$1nosrN
                             g$rib$11144$1nosrN
                             '()
                             '())))))
                     (g$find-library-by-name$7378$1nosrN '(ironscheme))
                     (g$make-empty-rib$7533$1nosrN))))))
             g$the-env$11141$1nosrN)))))
      '#f))
   (g$top-level-context$7966$1nosrN
     g$top-level-context$11412$1nosrN
     (g$make-parameter$6838$1nosrN '#f)))
  (g$current-library-expander$7375$1nosrN g$library-expander$7943$1nosrN))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7081$1nosrN
      (case-lambda
        ((g$x$11465$1nosrN)
         ((case-lambda
            ((g$t$11466$1nosrN)
             (if g$t$11466$1nosrN (cdr g$t$11466$1nosrN) '#f)))
          (assq
            g$x$11465$1nosrN
            '((ellipsis-map . g$ellipsis-map$11299$1nosrN)
              (ironscheme-build . g$ironscheme-build$11458$1nosrN)
              (syntax-error . g$syntax-error$11402$1nosrN)
              (syntax-dispatch . g$syntax-dispatch$11294$1nosrN)
              (compile-system-libraries
                .
                g$compile-system-libraries$11460$1nosrN)
              (compile->closure . g$compile->closure$11462$1nosrN)
              (compile . g$compile$11461$1nosrN)
              (load . g$load$11457$1nosrN)
              (interaction-environment . g$interaction-environment$11411$1nosrN)
              (string-ci>? . g$string-ci>?$6237$1nosrN)
              (string-ci>=? . g$string-ci>=?$6239$1nosrN)
              (string-ci=? . g$string-ci=?$6235$1nosrN)
              (string-ci<? . g$string-ci<?$6236$1nosrN)
              (string-ci<=? . g$string-ci<=?$6238$1nosrN)
              (char-ci>? . g$char-ci>?$6242$1nosrN)
              (char-ci>=? . g$char-ci>=?$6244$1nosrN)
              (char-ci=? . g$char-ci=?$6240$1nosrN)
              (char-ci<? . g$char-ci<?$6241$1nosrN)
              (char-ci<=? . g$char-ci<=?$6243$1nosrN)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11232$1nosrN)
              (variable-transformer? . g$variable-transformer?$11231$1nosrN)
              (make-variable-transformer
                .
                g$make-variable-transformer$11230$1nosrN)
              (identifier? . g$identifier?$11406$1nosrN)
              (generate-temporaries . g$generate-temporaries$11395$1nosrN)
              (free-identifier=? . g$free-identifier=?$11396$1nosrN)
              (syntax->datum . g$syntax->datum$11408$1nosrN)
              (datum->syntax . g$datum->syntax$11407$1nosrN)
              (bound-identifier=? . g$bound-identifier=?$11397$1nosrN)
              (delete-file . g$delete-file$5570$1nosrN)
              (file-exists? . g$file-exists?$5569$1nosrN)
              (list-sort . g$list-sort$6095$1nosrN)
              (make-eqv-hashtable . g$make-eqv-hashtable$5492$1nosrN)
              (make-eq-hashtable . g$make-eq-hashtable$5491$1nosrN)
              (hashtable-update! . g$hashtable-update!$5498$1nosrN)
              (hashtable-size . g$hashtable-size$5493$1nosrN)
              (hashtable-set! . g$hashtable-set!$5495$1nosrN)
              (hashtable-ref . g$hashtable-ref$5494$1nosrN)
              (hashtable-delete! . g$hashtable-delete!$5496$1nosrN)
              (hashtable-contains? . g$hashtable-contains?$5497$1nosrN)
              (hashtable-clear! . g$hashtable-clear!$5499$1nosrN)
              (call-with-output-file . g$call-with-output-file$6584$1nosrN)
              (call-with-input-file . g$call-with-input-file$6583$1nosrN)
              (with-output-to-file . g$with-output-to-file$6582$1nosrN)
              (with-input-from-file . g$with-input-from-file$6581$1nosrN)
              (port? . g$port?$6548$1nosrN)
              (open-string-output-port . g$open-string-output-port$6547$1nosrN)
              (make-i/o-write-error . g$make-i/o-write-error$6473$1nosrN)
              (make-i/o-read-error . g$make-i/o-read-error$6467$1nosrN)
              (make-i/o-port-error . g$make-i/o-port-error$6519$1nosrN)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6479$1nosrN)
              (make-i/o-filename-error . g$make-i/o-filename-error$6487$1nosrN)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6495$1nosrN)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6501$1nosrN)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6513$1nosrN)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6507$1nosrN)
              (make-i/o-error . g$make-i/o-error$6461$1nosrN)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6533$1nosrN)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6527$1nosrN)
              (i/o-write-error? . g$i/o-write-error?$6474$1nosrN)
              (i/o-read-error? . g$i/o-read-error?$6468$1nosrN)
              (i/o-port-error? . g$i/o-port-error?$6521$1nosrN)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6481$1nosrN)
              (i/o-error-position . g$i/o-error-position$6482$1nosrN)
              (i/o-filename-error? . g$i/o-filename-error?$6489$1nosrN)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6496$1nosrN)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6502$1nosrN)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6514$1nosrN)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6508$1nosrN)
              (i/o-error? . g$i/o-error?$6462$1nosrN)
              (i/o-error-port . g$i/o-error-port$6522$1nosrN)
              (i/o-error-filename . g$i/o-error-filename$6490$1nosrN)
              (i/o-encoding-error? . g$i/o-encoding-error?$6535$1nosrN)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6536$1nosrN)
              (i/o-decoding-error? . g$i/o-decoding-error?$6528$1nosrN)
              (scheme-report-environment
                .
                g$scheme-report-environment$11386$1nosrN)
              (quotient . g$quotient$6062$1nosrN)
              (null-environment . g$null-environment$11385$1nosrN)
              (remainder . g$remainder$6063$1nosrN)
              (modulo . g$modulo$6064$1nosrN)
              (force . g$force$6066$1nosrN)
              (command-line . g$command-line$11454$1nosrN)
              (remove . g$remove$5703$1nosrN)
              (remv . g$remv$5704$1nosrN)
              (remp . g$remp$5689$1nosrN)
              (remq . g$remq$5705$1nosrN)
              (partition . g$partition$5688$1nosrN)
              (memp . g$memp$5695$1nosrN)
              (member . g$member$5694$1nosrN)
              (exists . g$exists$5699$1nosrN)
              (for-all . g$for-all$5698$1nosrN)
              (fold-right . g$fold-right$5702$1nosrN)
              (fold-left . g$fold-left$5701$1nosrN)
              (find . g$find$5687$1nosrN)
              (filter . g$filter$5690$1nosrN)
              (cons* . g$cons*$5700$1nosrN)
              (assv . g$assv$5691$1nosrN)
              (assp . g$assp$5693$1nosrN)
              (assoc . g$assoc$5692$1nosrN)
              (eval . g$eval$11388$1nosrN)
              (environment . g$environment$11384$1nosrN)
              (make-enumeration . g$make-enumeration$6715$1nosrN)
              (enum-set=? . g$enum-set=?$6722$1nosrN)
              (enum-set-universe . g$enum-set-universe$6716$1nosrN)
              (enum-set-union . g$enum-set-union$6723$1nosrN)
              (enum-set-subset? . g$enum-set-subset?$6721$1nosrN)
              (enum-set-projection . g$enum-set-projection$6727$1nosrN)
              (enum-set-member? . g$enum-set-member?$6720$1nosrN)
              (enum-set-intersection . g$enum-set-intersection$6724$1nosrN)
              (enum-set-indexer . g$enum-set-indexer$6717$1nosrN)
              (enum-set-difference . g$enum-set-difference$6725$1nosrN)
              (enum-set-constructor . g$enum-set-constructor$6718$1nosrN)
              (enum-set-complement . g$enum-set-complement$6726$1nosrN)
              (enum-set->list . g$enum-set->list$6719$1nosrN)
              (who-condition? . g$who-condition?$6000$1nosrN)
              (warning? . g$warning?$5961$1nosrN)
              (violation? . g$violation?$5979$1nosrN)
              (undefined-violation? . g$undefined-violation?$6035$1nosrN)
              (syntax-violation? . g$syntax-violation?$6027$1nosrN)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$6029$1nosrN)
              (syntax-violation-form . g$syntax-violation-form$6028$1nosrN)
              (syntax-violation . g$syntax-violation$11405$1nosrN)
              (serious-condition? . g$serious-condition?$5967$1nosrN)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6007$1nosrN)
              (message-condition? . g$message-condition?$5954$1nosrN)
              (make-who-condition . g$make-who-condition$5998$1nosrN)
              (make-warning . g$make-warning$5960$1nosrN)
              (make-violation . g$make-violation$5978$1nosrN)
              (make-undefined-violation
                .
                g$make-undefined-violation$6034$1nosrN)
              (make-syntax-violation . g$make-syntax-violation$6024$1nosrN)
              (make-serious-condition . g$make-serious-condition$5966$1nosrN)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6006$1nosrN)
              (make-message-condition . g$make-message-condition$5952$1nosrN)
              (make-lexical-violation . g$make-lexical-violation$6018$1nosrN)
              (make-irritants-condition
                .
                g$make-irritants-condition$5990$1nosrN)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6012$1nosrN)
              (make-error . g$make-error$5972$1nosrN)
              (make-assertion-violation
                .
                g$make-assertion-violation$5984$1nosrN)
              (lexical-violation? . g$lexical-violation?$6019$1nosrN)
              (irritants-condition? . g$irritants-condition?$5992$1nosrN)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6013$1nosrN)
              (error? . g$error?$5973$1nosrN)
              (condition-who . g$condition-who$6001$1nosrN)
              (condition-message . g$condition-message$5955$1nosrN)
              (condition-irritants . g$condition-irritants$5993$1nosrN)
              (assertion-violation? . g$assertion-violation?$5985$1nosrN)
              (native-endianness . g$native-endianness$5817$1nosrN)
              (bytevector-u64-set! . g$bytevector-u64-set!$5838$1nosrN)
              (bytevector-u64-ref . g$bytevector-u64-ref$5834$1nosrN)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5840$1nosrN)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5836$1nosrN)
              (bytevector-u32-set! . g$bytevector-u32-set!$5830$1nosrN)
              (bytevector-u32-ref . g$bytevector-u32-ref$5826$1nosrN)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5832$1nosrN)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5828$1nosrN)
              (bytevector-u16-set! . g$bytevector-u16-set!$5822$1nosrN)
              (bytevector-u16-ref . g$bytevector-u16-ref$5818$1nosrN)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5824$1nosrN)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5820$1nosrN)
              (bytevector-s64-set! . g$bytevector-s64-set!$5839$1nosrN)
              (bytevector-s64-ref . g$bytevector-s64-ref$5835$1nosrN)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5841$1nosrN)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5837$1nosrN)
              (bytevector-s32-set! . g$bytevector-s32-set!$5831$1nosrN)
              (bytevector-s32-ref . g$bytevector-s32-ref$5827$1nosrN)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5833$1nosrN)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5829$1nosrN)
              (bytevector-s16-set! . g$bytevector-s16-set!$5823$1nosrN)
              (bytevector-s16-ref . g$bytevector-s16-ref$5819$1nosrN)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5825$1nosrN)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5821$1nosrN)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5844$1nosrN)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5842$1nosrN)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5845$1nosrN)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5843$1nosrN)
              (no-nans-violation? . g$no-nans-violation?$6376$1nosrN)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6370$1nosrN)
              (make-no-nans-violation . g$make-no-nans-violation$6375$1nosrN)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6369$1nosrN)
              (fxrotate-bit-field . g$fxrotate-bit-field$6352$1nosrN)
              (fxif . g$fxif$6346$1nosrN)
              (fxcopy-bit-field . g$fxcopy-bit-field$6349$1nosrN)
              (fxcopy-bit . g$fxcopy-bit$6347$1nosrN)
              (fxbit-field . g$fxbit-field$6348$1nosrN)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6351$1nosrN)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6350$1nosrN)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$6298$1nosrN)
              (bitwise-if . g$bitwise-if$6292$1nosrN)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6295$1nosrN)
              (bitwise-copy-bit . g$bitwise-copy-bit$6293$1nosrN)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6297$1nosrN)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6296$1nosrN)
              (symbol=? . g$symbol=?$5249$1nosrN)
              (string>? . g$string>?$5246$1nosrN)
              (string>=? . g$string>=?$5248$1nosrN)
              (string=? . g$string=?$5244$1nosrN)
              (string<? . g$string<?$5245$1nosrN)
              (string<=? . g$string<=?$5247$1nosrN)
              (rationalize . g$rationalize$5256$1nosrN)
              (char>? . g$char>?$5253$1nosrN)
              (char>=? . g$char>=?$5255$1nosrN)
              (char=? . g$char=?$5251$1nosrN)
              (char<? . g$char<?$5252$1nosrN)
              (char<=? . g$char<=?$5254$1nosrN)
              (cddddr . g$cddddr$5243$1nosrN)
              (cdddar . g$cdddar$5242$1nosrN)
              (cddadr . g$cddadr$5241$1nosrN)
              (cddaar . g$cddaar$5240$1nosrN)
              (cdaddr . g$cdaddr$5239$1nosrN)
              (cdadar . g$cdadar$5238$1nosrN)
              (cdaadr . g$cdaadr$5237$1nosrN)
              (cdaaar . g$cdaaar$5236$1nosrN)
              (cadddr . g$cadddr$5235$1nosrN)
              (caddar . g$caddar$5234$1nosrN)
              (cadadr . g$cadadr$5233$1nosrN)
              (cadaar . g$cadaar$5232$1nosrN)
              (caaddr . g$caaddr$5231$1nosrN)
              (caadar . g$caadar$5230$1nosrN)
              (caaadr . g$caaadr$5229$1nosrN)
              (caaaar . g$caaaar$5228$1nosrN)
              (cdddr . g$cdddr$5227$1nosrN)
              (cddar . g$cddar$5226$1nosrN)
              (cdadr . g$cdadr$5225$1nosrN)
              (cdaar . g$cdaar$5224$1nosrN)
              (caddr . g$caddr$5223$1nosrN)
              (cadar . g$cadar$5222$1nosrN)
              (caadr . g$caadr$5221$1nosrN)
              (caaar . g$caaar$5220$1nosrN)
              (cddr . g$cddr$5219$1nosrN)
              (cdar . g$cdar$5218$1nosrN)
              (cadr . g$cadr$5217$1nosrN)
              (caar . g$caar$5216$1nosrN)
              (boolean=? . g$boolean=?$5250$1nosrN)
              (enum-set? . g$enum?$6696$1nosrN)
              (make-promise . g$make-promise$6065$1nosrN)
              (load/args . g$load/args$11456$1nosrN)
              (printf . g$printf$6751$1nosrN)
              (fprintf . g$fprintf$6752$1nosrN)
              (format . g$format$6753$1nosrN)
              (trace-printer . g$trace-printer$11453$1nosrN)
              (make-traced-macro . g$make-traced-macro$6757$1nosrN)
              (assertion-error . g$assertion-error$11401$1nosrN)
              (make-parameter . g$make-parameter$6838$1nosrN)
              (environment-bindings . g$environment-bindings$11381$1nosrN)
              (environment-symbols . g$environment-symbols$11380$1nosrN)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11379$1nosrN)
              (library-path . g$library-path$7367$1nosrN)
              (library-extensions . g$library-extensions$7368$1nosrN)
              (installed-libraries . g$installed-libraries$7388$1nosrN)
              (expand . g$expand$11387$1nosrN)))))))
    (g$install-library$7383$1nosrN
      'g$12760$1nosrN
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12697$1nosrN)
        (cosh . g$12696$1nosrN)
        (sinh . g$12695$1nosrN)
        (make-guid . g$12694$1nosrN)
        (unspecified? . g$12693$1nosrN)
        (make-trace . g$12692$1nosrN)
        (make-list . g$12691$1nosrN)
        (last-pair . g$12690$1nosrN)
        (load-r5rs . g$12689$1nosrN)
        (license . g$12688$1nosrN)
        (stacktrace . g$12687$1nosrN)
        (ironscheme-build . g$12107$1nosrN)
        (set-symbol-value! . g$12673$1nosrN)
        (symbol-value . g$12672$1nosrN)
        (ungensym . g$12671$1nosrN)
        (gensym . g$12670$1nosrN)
        (void . g$12669$1nosrN)
        (compile-system-libraries . g$12109$1nosrN)
        (compile->closure . g$12111$1nosrN)
        (compile . g$12110$1nosrN)
        (load . g$12106$1nosrN)
        (interaction-environment . g$9167$1nosrN)
        (string-upcase . g$12665$1nosrN)
        (string-titlecase . g$12664$1nosrN)
        (string-normalize-nfkd . g$12663$1nosrN)
        (string-normalize-nfkc . g$12662$1nosrN)
        (string-normalize-nfd . g$12661$1nosrN)
        (string-normalize-nfc . g$12660$1nosrN)
        (string-foldcase . g$12659$1nosrN)
        (string-downcase . g$12658$1nosrN)
        (string-ci>? . g$7234$1nosrN)
        (string-ci>=? . g$7236$1nosrN)
        (string-ci=? . g$7232$1nosrN)
        (string-ci<? . g$7233$1nosrN)
        (string-ci<=? . g$7235$1nosrN)
        (char-whitespace? . g$12657$1nosrN)
        (char-upper-case? . g$12656$1nosrN)
        (char-title-case? . g$12655$1nosrN)
        (char-numeric? . g$12654$1nosrN)
        (char-lower-case? . g$12653$1nosrN)
        (char-general-category . g$12652$1nosrN)
        (char-upcase . g$12651$1nosrN)
        (char-titlecase . g$12650$1nosrN)
        (char-foldcase . g$12649$1nosrN)
        (char-downcase . g$12648$1nosrN)
        (char-ci>? . g$7285$1nosrN)
        (char-ci>=? . g$7287$1nosrN)
        (char-ci=? . g$7283$1nosrN)
        (char-ci<? . g$7284$1nosrN)
        (char-ci<=? . g$7286$1nosrN)
        (char-alphabetic? . g$12647$1nosrN)
        (variable-transformer-procedure . g$8766$1nosrN)
        (variable-transformer? . g$8765$1nosrN)
        (make-variable-transformer . g$8764$1nosrN)
        (identifier? . g$9162$1nosrN)
        (generate-temporaries . g$9151$1nosrN)
        (free-identifier=? . g$9152$1nosrN)
        (syntax->datum . g$9164$1nosrN)
        (datum->syntax . g$9163$1nosrN)
        (bound-identifier=? . g$9153$1nosrN)
        (record-type-descriptor? . g$12646$1nosrN)
        (record-predicate . g$12645$1nosrN)
        (record-mutator . g$12644$1nosrN)
        (record-constructor . g$12643$1nosrN)
        (record-accessor . g$12642$1nosrN)
        (make-record-type-descriptor . g$12641$1nosrN)
        (make-record-constructor-descriptor . g$12640$1nosrN)
        (record? . g$12639$1nosrN)
        (record-type-uid . g$12638$1nosrN)
        (record-type-sealed? . g$12637$1nosrN)
        (record-type-parent . g$12636$1nosrN)
        (record-type-opaque? . g$12635$1nosrN)
        (record-type-name . g$12634$1nosrN)
        (record-type-generative? . g$12633$1nosrN)
        (record-type-field-names . g$12632$1nosrN)
        (record-rtd . g$12631$1nosrN)
        (record-field-mutable? . g$12630$1nosrN)
        (delete-file . g$6595$1nosrN)
        (file-exists? . g$6594$1nosrN)
        (vector-sort! . g$12629$1nosrN)
        (vector-sort . g$12628$1nosrN)
        (list-sort . g$7108$1nosrN)
        (symbol-hash . g$12627$1nosrN)
        (string-ci-hash . g$12626$1nosrN)
        (string-hash . g$12625$1nosrN)
        (equal-hash . g$12624$1nosrN)
        (hashtable-equivalence-function . g$12623$1nosrN)
        (make-hashtable . g$12622$1nosrN)
        (hashtable-hash-function . g$12621$1nosrN)
        (make-eqv-hashtable . g$6562$1nosrN)
        (make-eq-hashtable . g$6561$1nosrN)
        (hashtable? . g$12620$1nosrN)
        (hashtable-update! . g$6568$1nosrN)
        (hashtable-size . g$6563$1nosrN)
        (hashtable-set! . g$6565$1nosrN)
        (hashtable-ref . g$6564$1nosrN)
        (hashtable-mutable? . g$12619$1nosrN)
        (hashtable-keys . g$12618$1nosrN)
        (hashtable-entries . g$12617$1nosrN)
        (hashtable-delete! . g$6566$1nosrN)
        (hashtable-copy . g$12616$1nosrN)
        (hashtable-contains? . g$6567$1nosrN)
        (hashtable-clear! . g$6569$1nosrN)
        (call-with-output-file . g$7704$1nosrN)
        (call-with-input-file . g$7703$1nosrN)
        (write-char . g$12615$1nosrN)
        (write . g$12614$1nosrN)
        (with-output-to-file . g$7702$1nosrN)
        (with-input-from-file . g$7701$1nosrN)
        (read-char . g$12613$1nosrN)
        (read . g$12612$1nosrN)
        (peek-char . g$12611$1nosrN)
        (open-output-file . g$12610$1nosrN)
        (open-input-file . g$12609$1nosrN)
        (newline . g$12608$1nosrN)
        (display . g$12607$1nosrN)
        (close-output-port . g$12606$1nosrN)
        (close-input-port . g$12605$1nosrN)
        (eof-object? . g$12604$1nosrN)
        (eof-object . g$12603$1nosrN)
        (current-error-port . g$12602$1nosrN)
        (current-output-port . g$12601$1nosrN)
        (current-input-port . g$12600$1nosrN)
        (output-port? . g$12599$1nosrN)
        (input-port? . g$12598$1nosrN)
        (utf-8-codec . g$12597$1nosrN)
        (utf-16-codec . g$12596$1nosrN)
        (transcoder-error-handling-mode . g$12595$1nosrN)
        (transcoder-eol-style . g$12594$1nosrN)
        (transcoder-codec . g$12593$1nosrN)
        (transcoded-port . g$12592$1nosrN)
        (textual-port? . g$12591$1nosrN)
        (string->bytevector . g$12590$1nosrN)
        (standard-output-port . g$12589$1nosrN)
        (standard-input-port . g$12588$1nosrN)
        (standard-error-port . g$12587$1nosrN)
        (set-port-position! . g$12586$1nosrN)
        (put-u8 . g$12585$1nosrN)
        (put-string . g$12584$1nosrN)
        (put-datum . g$12583$1nosrN)
        (put-char . g$12582$1nosrN)
        (put-bytevector . g$12581$1nosrN)
        (port? . g$7680$1nosrN)
        (port-transcoder . g$12580$1nosrN)
        (port-position . g$12579$1nosrN)
        (port-has-set-port-position!? . g$12578$1nosrN)
        (port-has-port-position? . g$12577$1nosrN)
        (port-eof? . g$12576$1nosrN)
        (output-port-buffer-mode . g$12575$1nosrN)
        (open-string-output-port . g$7679$1nosrN)
        (open-string-input-port . g$12574$1nosrN)
        (open-file-output-port . g$12573$1nosrN)
        (open-file-input/output-port . g$12572$1nosrN)
        (open-file-input-port . g$12571$1nosrN)
        (open-bytevector-output-port . g$12570$1nosrN)
        (open-bytevector-input-port . g$12569$1nosrN)
        (native-transcoder . g$12568$1nosrN)
        (native-eol-style . g$12567$1nosrN)
        (make-transcoder . g$12566$1nosrN)
        (latin-1-codec . g$12565$1nosrN)
        (make-i/o-write-error . g$7536$1nosrN)
        (make-i/o-read-error . g$7522$1nosrN)
        (make-i/o-port-error . g$7641$1nosrN)
        (make-i/o-invalid-position-error . g$7551$1nosrN)
        (make-i/o-filename-error . g$7568$1nosrN)
        (make-i/o-file-protection-error . g$7584$1nosrN)
        (make-i/o-file-is-read-only-error . g$7598$1nosrN)
        (make-i/o-file-does-not-exist-error . g$7626$1nosrN)
        (make-i/o-file-already-exists-error . g$7612$1nosrN)
        (make-i/o-error . g$7508$1nosrN)
        (make-i/o-encoding-error . g$7672$1nosrN)
        (make-i/o-decoding-error . g$7657$1nosrN)
        (make-custom-textual-output-port . g$12564$1nosrN)
        (make-custom-textual-input/output-port . g$12563$1nosrN)
        (make-custom-textual-input-port . g$12562$1nosrN)
        (make-custom-binary-output-port . g$12561$1nosrN)
        (make-custom-binary-input/output-port . g$12560$1nosrN)
        (make-custom-binary-input-port . g$12559$1nosrN)
        (make-bytevector . g$12558$1nosrN)
        (lookahead-u8 . g$12557$1nosrN)
        (lookahead-char . g$12556$1nosrN)
        (i/o-write-error? . g$7537$1nosrN)
        (i/o-read-error? . g$7523$1nosrN)
        (i/o-port-error? . g$7643$1nosrN)
        (i/o-invalid-position-error? . g$7553$1nosrN)
        (i/o-error-position . g$7554$1nosrN)
        (i/o-filename-error? . g$7570$1nosrN)
        (i/o-file-protection-error? . g$7585$1nosrN)
        (i/o-file-is-read-only-error? . g$7599$1nosrN)
        (i/o-file-does-not-exist-error? . g$7627$1nosrN)
        (i/o-file-already-exists-error? . g$7613$1nosrN)
        (i/o-error? . g$7509$1nosrN)
        (i/o-error-port . g$7644$1nosrN)
        (i/o-error-filename . g$7571$1nosrN)
        (i/o-encoding-error? . g$7674$1nosrN)
        (i/o-encoding-error-char . g$7675$1nosrN)
        (i/o-decoding-error? . g$7658$1nosrN)
        (get-u8 . g$12555$1nosrN)
        (get-string-n! . g$12554$1nosrN)
        (get-string-n . g$12553$1nosrN)
        (get-string-all . g$12552$1nosrN)
        (get-line . g$12551$1nosrN)
        (get-datum . g$12550$1nosrN)
        (get-char . g$12549$1nosrN)
        (get-bytevector-some . g$12548$1nosrN)
        (get-bytevector-n! . g$12547$1nosrN)
        (get-bytevector-n . g$12546$1nosrN)
        (get-bytevector-all . g$12545$1nosrN)
        (flush-output-port . g$12544$1nosrN)
        (close-port . g$12543$1nosrN)
        (call-with-string-output-port . g$12542$1nosrN)
        (call-with-port . g$12541$1nosrN)
        (call-with-bytevector-output-port . g$12540$1nosrN)
        (bytevector->string . g$12539$1nosrN)
        (buffer-mode? . g$12538$1nosrN)
        (binary-port? . g$12537$1nosrN)
        (scheme-report-environment . g$9142$1nosrN)
        (quotient . g$7088$1nosrN)
        (null-environment . g$9141$1nosrN)
        (remainder . g$7089$1nosrN)
        (modulo . g$7090$1nosrN)
        (inexact->exact . g$12536$1nosrN)
        (force . g$7092$1nosrN)
        (exact->inexact . g$12535$1nosrN)
        (exit . g$12534$1nosrN)
        (command-line . g$12103$1nosrN)
        (string-fill! . g$12533$1nosrN)
        (string-set! . g$12532$1nosrN)
        (set-cdr! . g$12531$1nosrN)
        (set-car! . g$12530$1nosrN)
        (remove . g$6675$1nosrN)
        (remv . g$6676$1nosrN)
        (remp . g$6661$1nosrN)
        (remq . g$6677$1nosrN)
        (partition . g$6660$1nosrN)
        (memv . g$12529$1nosrN)
        (memq . g$12528$1nosrN)
        (memp . g$6667$1nosrN)
        (member . g$6666$1nosrN)
        (exists . g$6671$1nosrN)
        (for-all . g$6670$1nosrN)
        (fold-right . g$6674$1nosrN)
        (fold-left . g$6673$1nosrN)
        (find . g$6659$1nosrN)
        (filter . g$6662$1nosrN)
        (cons* . g$6672$1nosrN)
        (assv . g$6663$1nosrN)
        (assq . g$12527$1nosrN)
        (assp . g$6665$1nosrN)
        (assoc . g$6664$1nosrN)
        (with-exception-handler . g$12526$1nosrN)
        (raise-continuable . g$12525$1nosrN)
        (raise . g$12524$1nosrN)
        (eval . g$9144$1nosrN)
        (environment . g$9140$1nosrN)
        (make-enumeration . g$7762$1nosrN)
        (enum-set=? . g$7769$1nosrN)
        (enum-set-universe . g$7763$1nosrN)
        (enum-set-union . g$7770$1nosrN)
        (enum-set-subset? . g$7768$1nosrN)
        (enum-set-projection . g$7774$1nosrN)
        (enum-set-member? . g$7767$1nosrN)
        (enum-set-intersection . g$7771$1nosrN)
        (enum-set-indexer . g$7764$1nosrN)
        (enum-set-difference . g$7772$1nosrN)
        (enum-set-constructor . g$7765$1nosrN)
        (enum-set-complement . g$7773$1nosrN)
        (enum-set->list . g$7766$1nosrN)
        (who-condition? . g$6999$1nosrN)
        (warning? . g$6910$1nosrN)
        (violation? . g$6952$1nosrN)
        (undefined-violation? . g$7076$1nosrN)
        (syntax-violation? . g$7060$1nosrN)
        (syntax-violation-subform . g$7062$1nosrN)
        (syntax-violation-form . g$7061$1nosrN)
        (syntax-violation . g$9161$1nosrN)
        (simple-conditions . g$12523$1nosrN)
        (serious-condition? . g$6924$1nosrN)
        (non-continuable-violation? . g$7014$1nosrN)
        (message-condition? . g$6895$1nosrN)
        (make-who-condition . g$6997$1nosrN)
        (make-warning . g$6909$1nosrN)
        (make-violation . g$6951$1nosrN)
        (make-undefined-violation . g$7075$1nosrN)
        (make-syntax-violation . g$7057$1nosrN)
        (make-serious-condition . g$6923$1nosrN)
        (make-non-continuable-violation . g$7013$1nosrN)
        (make-message-condition . g$6893$1nosrN)
        (make-lexical-violation . g$7041$1nosrN)
        (make-irritants-condition . g$6980$1nosrN)
        (make-implementation-restriction-violation . g$7027$1nosrN)
        (make-error . g$6937$1nosrN)
        (make-assertion-violation . g$6965$1nosrN)
        (lexical-violation? . g$7042$1nosrN)
        (irritants-condition? . g$6982$1nosrN)
        (implementation-restriction-violation? . g$7028$1nosrN)
        (error? . g$6938$1nosrN)
        (condition-who . g$7000$1nosrN)
        (condition-predicate . g$12522$1nosrN)
        (condition-message . g$6896$1nosrN)
        (condition-irritants . g$6983$1nosrN)
        (condition-accessor . g$12521$1nosrN)
        (condition . g$12520$1nosrN)
        (assertion-violation? . g$6966$1nosrN)
        (condition? . g$12519$1nosrN)
        (utf32->string . g$12518$1nosrN)
        (utf16->string . g$12517$1nosrN)
        (utf8->string . g$12516$1nosrN)
        (uint-list->bytevector . g$12515$1nosrN)
        (u8-list->bytevector . g$12514$1nosrN)
        (string->utf8 . g$12513$1nosrN)
        (string->utf32 . g$12512$1nosrN)
        (string->utf16 . g$12511$1nosrN)
        (sint-list->bytevector . g$12510$1nosrN)
        (native-endianness . g$6751$1nosrN)
        (bytevector? . g$12509$1nosrN)
        (bytevector=? . g$12508$1nosrN)
        (bytevector-uint-set! . g$12507$1nosrN)
        (bytevector-uint-ref . g$12506$1nosrN)
        (bytevector-u8-set! . g$12505$1nosrN)
        (bytevector-u8-ref . g$12504$1nosrN)
        (bytevector-u64-set! . g$6772$1nosrN)
        (bytevector-u64-ref . g$6768$1nosrN)
        (bytevector-u64-native-set! . g$6774$1nosrN)
        (bytevector-u64-native-ref . g$6770$1nosrN)
        (bytevector-u32-set! . g$6764$1nosrN)
        (bytevector-u32-ref . g$6760$1nosrN)
        (bytevector-u32-native-set! . g$6766$1nosrN)
        (bytevector-u32-native-ref . g$6762$1nosrN)
        (bytevector-u16-set! . g$6756$1nosrN)
        (bytevector-u16-ref . g$6752$1nosrN)
        (bytevector-u16-native-set! . g$6758$1nosrN)
        (bytevector-u16-native-ref . g$6754$1nosrN)
        (bytevector-sint-set! . g$12503$1nosrN)
        (bytevector-sint-ref . g$12502$1nosrN)
        (bytevector-s8-set! . g$12501$1nosrN)
        (bytevector-s8-ref . g$12500$1nosrN)
        (bytevector-s64-set! . g$6773$1nosrN)
        (bytevector-s64-ref . g$6769$1nosrN)
        (bytevector-s64-native-set! . g$6775$1nosrN)
        (bytevector-s64-native-ref . g$6771$1nosrN)
        (bytevector-s32-set! . g$6765$1nosrN)
        (bytevector-s32-ref . g$6761$1nosrN)
        (bytevector-s32-native-set! . g$6767$1nosrN)
        (bytevector-s32-native-ref . g$6763$1nosrN)
        (bytevector-s16-set! . g$6757$1nosrN)
        (bytevector-s16-ref . g$6753$1nosrN)
        (bytevector-s16-native-set! . g$6759$1nosrN)
        (bytevector-s16-native-ref . g$6755$1nosrN)
        (bytevector-length . g$12499$1nosrN)
        (bytevector-ieee-single-set! . g$12498$1nosrN)
        (bytevector-ieee-single-ref . g$12497$1nosrN)
        (bytevector-ieee-single-native-set! . g$6778$1nosrN)
        (bytevector-ieee-single-native-ref . g$6776$1nosrN)
        (bytevector-ieee-double-set! . g$12496$1nosrN)
        (bytevector-ieee-double-ref . g$12495$1nosrN)
        (bytevector-ieee-double-native-set! . g$6779$1nosrN)
        (bytevector-ieee-double-native-ref . g$6777$1nosrN)
        (bytevector-fill! . g$12494$1nosrN)
        (bytevector-copy! . g$12493$1nosrN)
        (bytevector-copy . g$12492$1nosrN)
        (bytevector->uint-list . g$12491$1nosrN)
        (bytevector->u8-list . g$12490$1nosrN)
        (bytevector->sint-list . g$12489$1nosrN)
        (no-nans-violation? . g$7494$1nosrN)
        (no-infinities-violation? . g$7480$1nosrN)
        (make-no-nans-violation . g$7493$1nosrN)
        (make-no-infinities-violation . g$7479$1nosrN)
        (real->flonum . g$12488$1nosrN)
        (flzero? . g$12487$1nosrN)
        (fltruncate . g$12486$1nosrN)
        (fltan . g$12485$1nosrN)
        (flsqrt . g$12484$1nosrN)
        (flsin . g$12483$1nosrN)
        (flround . g$12482$1nosrN)
        (flpositive? . g$12481$1nosrN)
        (flonum? . g$12480$1nosrN)
        (flodd? . g$12479$1nosrN)
        (flnumerator . g$12478$1nosrN)
        (flnegative? . g$12477$1nosrN)
        (flnan? . g$12476$1nosrN)
        (flmod0 . g$12475$1nosrN)
        (flmod . g$12474$1nosrN)
        (flmin . g$12473$1nosrN)
        (flmax . g$12472$1nosrN)
        (fllog . g$12471$1nosrN)
        (flinteger? . g$12470$1nosrN)
        (flinfinite? . g$12469$1nosrN)
        (flfloor . g$12468$1nosrN)
        (flfinite? . g$12467$1nosrN)
        (flexpt . g$12466$1nosrN)
        (flexp . g$12465$1nosrN)
        (fleven? . g$12464$1nosrN)
        (fldiv0-and-mod0 . g$12463$1nosrN)
        (fldiv0 . g$12462$1nosrN)
        (fldiv-and-mod . g$12461$1nosrN)
        (fldiv . g$12460$1nosrN)
        (fldenominator . g$12459$1nosrN)
        (flcos . g$12458$1nosrN)
        (flceiling . g$12457$1nosrN)
        (flatan . g$12456$1nosrN)
        (flasin . g$12455$1nosrN)
        (flacos . g$12454$1nosrN)
        (flabs . g$12453$1nosrN)
        (fl>? . g$12452$1nosrN)
        (fl>=? . g$12451$1nosrN)
        (fl=? . g$12450$1nosrN)
        (fl<? . g$12449$1nosrN)
        (fl<=? . g$12448$1nosrN)
        (fl/ . g$12447$1nosrN)
        (fl- . g$12446$1nosrN)
        (fl+ . g$12445$1nosrN)
        (fl* . g$12444$1nosrN)
        (fixnum->flonum . g$12443$1nosrN)
        (fxzero? . g$12442$1nosrN)
        (fxxor . g$12441$1nosrN)
        (fxrotate-bit-field . g$7425$1nosrN)
        (fxreverse-bit-field . g$12440$1nosrN)
        (fxpositive? . g$12439$1nosrN)
        (fxodd? . g$12438$1nosrN)
        (fxnot . g$12437$1nosrN)
        (fxnegative? . g$12436$1nosrN)
        (fxmod0 . g$12435$1nosrN)
        (fxmod . g$12434$1nosrN)
        (fxmin . g$12433$1nosrN)
        (fxmax . g$12432$1nosrN)
        (fxlength . g$12431$1nosrN)
        (fxior . g$12430$1nosrN)
        (fxif . g$7419$1nosrN)
        (fxfirst-bit-set . g$12429$1nosrN)
        (fxeven? . g$12428$1nosrN)
        (fxdiv0-and-mod0 . g$12427$1nosrN)
        (fxdiv0 . g$12426$1nosrN)
        (fxdiv-and-mod . g$12425$1nosrN)
        (fxdiv . g$12424$1nosrN)
        (fxcopy-bit-field . g$7422$1nosrN)
        (fxcopy-bit . g$7420$1nosrN)
        (fxbit-set? . g$12423$1nosrN)
        (fxbit-field . g$7421$1nosrN)
        (fxbit-count . g$12422$1nosrN)
        (fxarithmetic-shift-right . g$7424$1nosrN)
        (fxarithmetic-shift-left . g$7423$1nosrN)
        (fxarithmetic-shift . g$12421$1nosrN)
        (fxand . g$12420$1nosrN)
        (fx>? . g$12419$1nosrN)
        (fx>=? . g$12418$1nosrN)
        (fx=? . g$12417$1nosrN)
        (fx<? . g$12416$1nosrN)
        (fx<=? . g$12415$1nosrN)
        (fx-/carry . g$12414$1nosrN)
        (fx- . g$12413$1nosrN)
        (fx+/carry . g$12412$1nosrN)
        (fx+ . g$12411$1nosrN)
        (fx*/carry . g$12410$1nosrN)
        (fx* . g$12409$1nosrN)
        (greatest-fixnum . g$12408$1nosrN)
        (least-fixnum . g$12407$1nosrN)
        (fixnum-width . g$12406$1nosrN)
        (fixnum? . g$12405$1nosrN)
        (bitwise-rotate-bit-field . g$7377$1nosrN)
        (bitwise-reverse-bit-field . g$12404$1nosrN)
        (bitwise-length . g$12403$1nosrN)
        (bitwise-if . g$7371$1nosrN)
        (bitwise-first-bit-set . g$12402$1nosrN)
        (bitwise-copy-bit-field . g$7374$1nosrN)
        (bitwise-copy-bit . g$7372$1nosrN)
        (bitwise-bit-set? . g$12401$1nosrN)
        (bitwise-bit-field . g$12400$1nosrN)
        (bitwise-bit-count . g$12399$1nosrN)
        (bitwise-xor . g$12398$1nosrN)
        (bitwise-ior . g$12397$1nosrN)
        (bitwise-and . g$12396$1nosrN)
        (bitwise-not . g$12395$1nosrN)
        (bitwise-arithmetic-shift-right . g$7376$1nosrN)
        (bitwise-arithmetic-shift-left . g$7375$1nosrN)
        (bitwise-arithmetic-shift . g$12394$1nosrN)
        (zero? . g$12393$1nosrN)
        (vector? . g$12392$1nosrN)
        (vector-set! . g$12391$1nosrN)
        (vector-ref . g$12390$1nosrN)
        (vector-map . g$12389$1nosrN)
        (vector-length . g$12388$1nosrN)
        (vector-for-each . g$12387$1nosrN)
        (vector-fill! . g$12386$1nosrN)
        (vector->list . g$12385$1nosrN)
        (vector . g$12384$1nosrN)
        (values . g$12383$1nosrN)
        (truncate . g$12382$1nosrN)
        (tan . g$12381$1nosrN)
        (symbol? . g$12380$1nosrN)
        (symbol=? . g$6060$1nosrN)
        (symbol->string . g$12379$1nosrN)
        (substring . g$12378$1nosrN)
        (string? . g$12377$1nosrN)
        (string>? . g$6057$1nosrN)
        (string>=? . g$6059$1nosrN)
        (string=? . g$6055$1nosrN)
        (string<? . g$6056$1nosrN)
        (string<=? . g$6058$1nosrN)
        (string-ref . g$12376$1nosrN)
        (string-length . g$12375$1nosrN)
        (string-for-each . g$12374$1nosrN)
        (string-copy . g$12373$1nosrN)
        (string-append . g$12372$1nosrN)
        (string->symbol . g$12371$1nosrN)
        (string->number . g$12370$1nosrN)
        (string->list . g$12369$1nosrN)
        (string . g$12368$1nosrN)
        (sqrt . g$12367$1nosrN)
        (sin . g$12366$1nosrN)
        (round . g$12365$1nosrN)
        (reverse . g$12364$1nosrN)
        (real? . g$12363$1nosrN)
        (real-valued? . g$12362$1nosrN)
        (real-part . g$12361$1nosrN)
        (rationalize . g$6113$1nosrN)
        (rational? . g$12360$1nosrN)
        (rational-valued? . g$12359$1nosrN)
        (procedure? . g$12358$1nosrN)
        (positive? . g$12357$1nosrN)
        (pair? . g$12356$1nosrN)
        (odd? . g$12355$1nosrN)
        (numerator . g$12354$1nosrN)
        (number? . g$12353$1nosrN)
        (number->string . g$12352$1nosrN)
        (null? . g$12351$1nosrN)
        (not . g$12350$1nosrN)
        (negative? . g$12349$1nosrN)
        (nan? . g$12348$1nosrN)
        (min . g$12347$1nosrN)
        (max . g$12346$1nosrN)
        (map . g$12345$1nosrN)
        (make-vector . g$12344$1nosrN)
        (make-string . g$12343$1nosrN)
        (make-rectangular . g$12342$1nosrN)
        (make-polar . g$12341$1nosrN)
        (magnitude . g$12340$1nosrN)
        (log . g$12339$1nosrN)
        (list? . g$12338$1nosrN)
        (list-tail . g$12337$1nosrN)
        (list-ref . g$12336$1nosrN)
        (list->vector . g$12335$1nosrN)
        (list->string . g$12334$1nosrN)
        (list . g$12333$1nosrN)
        (length . g$12332$1nosrN)
        (lcm . g$12331$1nosrN)
        (integer? . g$12330$1nosrN)
        (integer-valued? . g$12329$1nosrN)
        (integer->char . g$12328$1nosrN)
        (infinite? . g$12327$1nosrN)
        (inexact? . g$12326$1nosrN)
        (inexact . g$12325$1nosrN)
        (imag-part . g$12324$1nosrN)
        (gcd . g$12323$1nosrN)
        (for-each . g$12322$1nosrN)
        (floor . g$12321$1nosrN)
        (finite? . g$12320$1nosrN)
        (expt . g$12319$1nosrN)
        (exp . g$12318$1nosrN)
        (exact? . g$12317$1nosrN)
        (exact-integer-sqrt . g$12316$1nosrN)
        (exact . g$12315$1nosrN)
        (even? . g$12314$1nosrN)
        (error . g$12313$1nosrN)
        (eqv? . g$12312$1nosrN)
        (equal? . g$12311$1nosrN)
        (eq? . g$12310$1nosrN)
        (dynamic-wind . g$12309$1nosrN)
        (div0-and-mod0 . g$12308$1nosrN)
        (mod0 . g$12307$1nosrN)
        (div0 . g$12306$1nosrN)
        (div-and-mod . g$12305$1nosrN)
        (mod . g$12304$1nosrN)
        (div . g$12303$1nosrN)
        (denominator . g$12302$1nosrN)
        (cos . g$12301$1nosrN)
        (cons . g$12300$1nosrN)
        (complex? . g$12299$1nosrN)
        (char? . g$12298$1nosrN)
        (char>? . g$6110$1nosrN)
        (char>=? . g$6112$1nosrN)
        (char=? . g$6108$1nosrN)
        (char<? . g$6109$1nosrN)
        (char<=? . g$6111$1nosrN)
        (char->integer . g$12297$1nosrN)
        (ceiling . g$12296$1nosrN)
        (call-with-values . g$12295$1nosrN)
        (call/cc . g$12294$1nosrN)
        (call-with-current-continuation . g$12293$1nosrN)
        (cddddr . g$6008$1nosrN)
        (cdddar . g$6007$1nosrN)
        (cddadr . g$6006$1nosrN)
        (cddaar . g$6005$1nosrN)
        (cdaddr . g$6004$1nosrN)
        (cdadar . g$6003$1nosrN)
        (cdaadr . g$6002$1nosrN)
        (cdaaar . g$6001$1nosrN)
        (cadddr . g$6000$1nosrN)
        (caddar . g$5999$1nosrN)
        (cadadr . g$5998$1nosrN)
        (cadaar . g$5997$1nosrN)
        (caaddr . g$5996$1nosrN)
        (caadar . g$5995$1nosrN)
        (caaadr . g$5994$1nosrN)
        (caaaar . g$5993$1nosrN)
        (cdddr . g$5992$1nosrN)
        (cddar . g$5991$1nosrN)
        (cdadr . g$5990$1nosrN)
        (cdaar . g$5989$1nosrN)
        (caddr . g$5988$1nosrN)
        (cadar . g$5987$1nosrN)
        (caadr . g$5986$1nosrN)
        (caaar . g$5985$1nosrN)
        (cddr . g$5984$1nosrN)
        (cdar . g$5983$1nosrN)
        (cadr . g$5982$1nosrN)
        (caar . g$5981$1nosrN)
        (cdr . g$12292$1nosrN)
        (car . g$12291$1nosrN)
        (boolean? . g$12290$1nosrN)
        (boolean=? . g$6061$1nosrN)
        (atan . g$12289$1nosrN)
        (assertion-violation . g$12288$1nosrN)
        (asin . g$12287$1nosrN)
        (apply . g$12286$1nosrN)
        (append . g$12285$1nosrN)
        (angle . g$12284$1nosrN)
        (acos . g$12283$1nosrN)
        (abs . g$12282$1nosrN)
        (/ . g$12281$1nosrN)
        (* . g$12280$1nosrN)
        (- . g$12279$1nosrN)
        (+ . g$12278$1nosrN)
        (>= . g$12277$1nosrN)
        (> . g$12276$1nosrN)
        (= . g$12275$1nosrN)
        (<= . g$12274$1nosrN)
        (< . g$12273$1nosrN)
        (deserialize-port . g$12268$1nosrN)
        (serialize-port . g$12267$1nosrN)
        (enum-set? . g$7737$1nosrN)
        (make-promise . g$7091$1nosrN)
        (load/args . g$12105$1nosrN)
        (printf . g$7847$1nosrN)
        (fprintf . g$7848$1nosrN)
        (format . g$7849$1nosrN)
        (get-arity . g$12266$1nosrN)
        (gc-collect . g$12265$1nosrN)
        (clr-type? . g$12264$1nosrN)
        (get-clr-type . g$12263$1nosrN)
        (vector-append . g$12261$1nosrN)
        (vector-filter . g$12260$1nosrN)
        (vector-reverse! . g$12259$1nosrN)
        (vector-contains? . g$12258$1nosrN)
        (vector-index-of . g$12257$1nosrN)
        (vector-copy . g$12256$1nosrN)
        (vector-binary-search . g$12255$1nosrN)
        (get-output-string . g$12254$1nosrN)
        (open-output-string . g$12253$1nosrN)
        (open-input-string . g$12252$1nosrN)
        (string-ci-compare . g$12251$1nosrN)
        (string-compare . g$12250$1nosrN)
        (string-format . g$12249$1nosrN)
        (trace-printer . g$12102$1nosrN)
        (make-traced-procedure . g$12248$1nosrN)
        (make-traced-macro . g$7869$1nosrN)
        (pmap . g$12247$1nosrN)
        (time-it . g$12246$1nosrN)
        (make-parameter . g$7874$1nosrN)
        (library-locator . g$12245$1nosrN)
        (get-library-paths . g$12244$1nosrN)
        (environment-bindings . g$9137$1nosrN)
        (environment-symbols . g$9136$1nosrN)
        (interaction-environment-symbols . g$9135$1nosrN)
        (library-path . g$8304$1nosrN)
        (library-extensions . g$8305$1nosrN)
        (installed-libraries . g$8325$1nosrN)
        (expand . g$9143$1nosrN)
        (&no-nans . g$12243$1nosrN)
        (&no-infinities . g$12242$1nosrN)
        (&i/o-encoding . g$12241$1nosrN)
        (&i/o-decoding . g$12240$1nosrN)
        (&i/o-port . g$12239$1nosrN)
        (&i/o-file-does-not-exist . g$12238$1nosrN)
        (&i/o-file-already-exists . g$12237$1nosrN)
        (&i/o-file-is-read-only . g$12236$1nosrN)
        (&i/o-file-protection . g$12235$1nosrN)
        (&i/o-filename . g$12234$1nosrN)
        (&i/o-invalid-position . g$12233$1nosrN)
        (&i/o-write . g$12232$1nosrN)
        (&i/o-read . g$12231$1nosrN)
        (&i/o . g$12230$1nosrN)
        (&non-continuable . g$12229$1nosrN)
        (&undefined . g$12228$1nosrN)
        (&syntax . g$12227$1nosrN)
        (&lexical . g$12226$1nosrN)
        (&implementation-restriction . g$12225$1nosrN)
        (&who . g$12223$1nosrN)
        (&irritants . g$12222$1nosrN)
        (&assertion . g$12221$1nosrN)
        (&violation . g$12220$1nosrN)
        (&error . g$12219$1nosrN)
        (&serious . g$12218$1nosrN)
        (&warning . g$12217$1nosrN)
        (&message . g$12216$1nosrN)
        (&condition . g$12215$1nosrN)
        (define-condition-type . g$12214$1nosrN)
        (define-enumeration . g$12213$1nosrN)
        (define-record-type . g$12212$1nosrN)
        (parent-rtd . g$12211$1nosrN)
        (nongenerative . g$12210$1nosrN)
        (opaque . g$12209$1nosrN)
        (sealed . g$12208$1nosrN)
        (protocol . g$12207$1nosrN)
        (parent . g$12206$1nosrN)
        (immutable . g$12205$1nosrN)
        (mutable . g$12204$1nosrN)
        (fields . g$12203$1nosrN)
        (error-handling-mode . g$12202$1nosrN)
        (file-options . g$12201$1nosrN)
        (buffer-mode . g$12200$1nosrN)
        (eol-style . g$12199$1nosrN)
        (guard . g$12198$1nosrN)
        (trace-letrec-syntax . g$12197$1nosrN)
        (trace-let-syntax . g$12196$1nosrN)
        (trace-define-syntax . g$12195$1nosrN)
        (trace-define . g$12194$1nosrN)
        (trace-lambda . g$12193$1nosrN)
        (unsyntax-splicing . g$12192$1nosrN)
        (unsyntax . g$12191$1nosrN)
        (unquote-splicing . g$12190$1nosrN)
        (unquote . g$12189$1nosrN)
        (_ . g$12188$1nosrN)
        (else . g$12187$1nosrN)
        (=> . g$12186$1nosrN)
        (... . g$12185$1nosrN)
        (assert . g$12184$1nosrN)
        (endianness . g$12183$1nosrN)
        (delay . g$12182$1nosrN)
        (time . g$12181$1nosrN)
        (or . g$12180$1nosrN)
        (and . g$12179$1nosrN)
        (do . g$12178$1nosrN)
        (cond . g$12177$1nosrN)
        (let* . g$12176$1nosrN)
        (let . g$12175$1nosrN)
        (identifier-syntax . g$12174$1nosrN)
        (with-syntax . g$12173$1nosrN)
        (quasisyntax . g$12172$1nosrN)
        (quasiquote . g$12171$1nosrN)
        (syntax-rules . g$12170$1nosrN)
        (include-into . g$12169$1nosrN)
        (include . g$12168$1nosrN)
        (let-values . g$12166$1nosrN)
        (let*-values . g$12165$1nosrN)
        (record-constructor-descriptor . g$12164$1nosrN)
        (record-type-descriptor . g$12163$1nosrN)
        (fluid-let-syntax . g$12162$1nosrN)
        (case . g$12161$1nosrN)
        (parameterize . g$12160$1nosrN)
        (unless . g$12159$1nosrN)
        (when . g$12158$1nosrN)
        (if . g$12157$1nosrN)
        (letrec* . g$12156$1nosrN)
        (letrec . g$12155$1nosrN)
        (case-lambda . g$12153$1nosrN)
        (lambda . g$12152$1nosrN)
        (syntax . g$12151$1nosrN)
        (syntax-case . g$12150$1nosrN)
        (quote . g$12149$1nosrN)
        (letrec-syntax . g$12147$1nosrN)
        (let-syntax . g$12146$1nosrN)
        (set! . g$12145$1nosrN)
        (import . g$12144$1nosrN)
        (library . g$12143$1nosrN)
        (begin . g$12142$1nosrN)
        (module . g$12141$1nosrN)
        (define-syntax . g$12140$1nosrN)
        (define . g$12139$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12761$1nosrN
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12244$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7383$1nosrN
      'g$12762$1nosrN
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12702$1nosrN)
        (annotation-source . g$12701$1nosrN)
        (annotation-expression . g$12700$1nosrN)
        (annotation? . g$12699$1nosrN)
        (read-annotated . g$12698$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7383$1nosrN
      'g$12763$1nosrN
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12668$1nosrN)
        (serialize-library . g$12667$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7383$1nosrN
      'g$12764$1nosrN
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8766$1nosrN)
        (variable-transformer? . g$8765$1nosrN)
        (eqv-hash . g$12271$1nosrN)
        (eq-hash . g$12270$1nosrN)
        (reverse! . g$12269$1nosrN)
        (format . g$7849$1nosrN)
        (get-command-line . g$12262$1nosrN)
        (make-traced-procedure . g$12248$1nosrN)
        (assertion-error . g$9157$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7383$1nosrN
      'g$12765$1nosrN
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12272$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12766$1nosrN
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12686$1nosrN)
        (clr-field-set!-internal . g$12685$1nosrN)
        (clr-field-get-internal . g$12684$1nosrN)
        (clr-cast-internal . g$12683$1nosrN)
        (clr-call-internal . g$12682$1nosrN)
        (clr-new-internal . g$12681$1nosrN)
        (clr-new-array-internal . g$12680$1nosrN)
        (clr-is-internal . g$12679$1nosrN)
        (clr-reference-internal . g$12678$1nosrN)
        (clr-using-internal . g$12677$1nosrN)
        (clr-clear-usings-internal . g$12676$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12767$1nosrN
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12190$1nosrN)
        (unquote . g$12189$1nosrN)
        (else . g$12187$1nosrN)
        (=> . g$12186$1nosrN)
        (delay . g$12182$1nosrN)
        (or . g$12180$1nosrN)
        (and . g$12179$1nosrN)
        (do . g$12178$1nosrN)
        (cond . g$12177$1nosrN)
        (let* . g$12176$1nosrN)
        (let . g$12175$1nosrN)
        (quasiquote . g$12171$1nosrN)
        (syntax-rules . g$12170$1nosrN)
        (case . g$12161$1nosrN)
        (if . g$12157$1nosrN)
        (letrec . g$12155$1nosrN)
        (lambda . g$12152$1nosrN)
        (quote . g$12149$1nosrN)
        (letrec-syntax . g$12147$1nosrN)
        (let-syntax . g$12146$1nosrN)
        (set! . g$12145$1nosrN)
        (begin . g$12142$1nosrN)
        (define-syntax . g$12140$1nosrN)
        (define . g$12139$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7383$1nosrN
      'g$12768$1nosrN
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$9167$1nosrN)
        (char-ready? . g$12666$1nosrN)
        (string-ci>? . g$7234$1nosrN)
        (string-ci>=? . g$7236$1nosrN)
        (string-ci=? . g$7232$1nosrN)
        (string-ci<? . g$7233$1nosrN)
        (string-ci<=? . g$7235$1nosrN)
        (char-whitespace? . g$12657$1nosrN)
        (char-upper-case? . g$12656$1nosrN)
        (char-numeric? . g$12654$1nosrN)
        (char-lower-case? . g$12653$1nosrN)
        (char-upcase . g$12651$1nosrN)
        (char-downcase . g$12648$1nosrN)
        (char-ci>? . g$7285$1nosrN)
        (char-ci>=? . g$7287$1nosrN)
        (char-ci=? . g$7283$1nosrN)
        (char-ci<? . g$7284$1nosrN)
        (char-ci<=? . g$7286$1nosrN)
        (char-alphabetic? . g$12647$1nosrN)
        (call-with-output-file . g$7704$1nosrN)
        (call-with-input-file . g$7703$1nosrN)
        (write-char . g$12615$1nosrN)
        (write . g$12614$1nosrN)
        (with-output-to-file . g$7702$1nosrN)
        (with-input-from-file . g$7701$1nosrN)
        (read-char . g$12613$1nosrN)
        (read . g$12612$1nosrN)
        (peek-char . g$12611$1nosrN)
        (open-output-file . g$12610$1nosrN)
        (open-input-file . g$12609$1nosrN)
        (newline . g$12608$1nosrN)
        (display . g$12607$1nosrN)
        (close-output-port . g$12606$1nosrN)
        (close-input-port . g$12605$1nosrN)
        (eof-object? . g$12604$1nosrN)
        (eof-object . g$12603$1nosrN)
        (current-error-port . g$12602$1nosrN)
        (current-output-port . g$12601$1nosrN)
        (current-input-port . g$12600$1nosrN)
        (output-port? . g$12599$1nosrN)
        (input-port? . g$12598$1nosrN)
        (scheme-report-environment . g$9142$1nosrN)
        (quotient . g$7088$1nosrN)
        (null-environment . g$9141$1nosrN)
        (remainder . g$7089$1nosrN)
        (modulo . g$7090$1nosrN)
        (inexact->exact . g$12536$1nosrN)
        (force . g$7092$1nosrN)
        (exact->inexact . g$12535$1nosrN)
        (string-fill! . g$12533$1nosrN)
        (string-set! . g$12532$1nosrN)
        (set-cdr! . g$12531$1nosrN)
        (set-car! . g$12530$1nosrN)
        (memv . g$12529$1nosrN)
        (memq . g$12528$1nosrN)
        (member . g$6666$1nosrN)
        (assv . g$6663$1nosrN)
        (assq . g$12527$1nosrN)
        (assoc . g$6664$1nosrN)
        (eval . g$9144$1nosrN)
        (zero? . g$12393$1nosrN)
        (vector? . g$12392$1nosrN)
        (vector-set! . g$12391$1nosrN)
        (vector-ref . g$12390$1nosrN)
        (vector-length . g$12388$1nosrN)
        (vector-fill! . g$12386$1nosrN)
        (vector->list . g$12385$1nosrN)
        (vector . g$12384$1nosrN)
        (values . g$12383$1nosrN)
        (truncate . g$12382$1nosrN)
        (tan . g$12381$1nosrN)
        (symbol? . g$12380$1nosrN)
        (symbol->string . g$12379$1nosrN)
        (substring . g$12378$1nosrN)
        (string? . g$12377$1nosrN)
        (string>? . g$6057$1nosrN)
        (string>=? . g$6059$1nosrN)
        (string=? . g$6055$1nosrN)
        (string<? . g$6056$1nosrN)
        (string<=? . g$6058$1nosrN)
        (string-ref . g$12376$1nosrN)
        (string-length . g$12375$1nosrN)
        (string-copy . g$12373$1nosrN)
        (string-append . g$12372$1nosrN)
        (string->symbol . g$12371$1nosrN)
        (string->number . g$12370$1nosrN)
        (string->list . g$12369$1nosrN)
        (string . g$12368$1nosrN)
        (sqrt . g$12367$1nosrN)
        (sin . g$12366$1nosrN)
        (round . g$12365$1nosrN)
        (reverse . g$12364$1nosrN)
        (real? . g$12363$1nosrN)
        (real-part . g$12361$1nosrN)
        (rationalize . g$6113$1nosrN)
        (rational? . g$12360$1nosrN)
        (procedure? . g$12358$1nosrN)
        (positive? . g$12357$1nosrN)
        (pair? . g$12356$1nosrN)
        (odd? . g$12355$1nosrN)
        (numerator . g$12354$1nosrN)
        (number? . g$12353$1nosrN)
        (number->string . g$12352$1nosrN)
        (null? . g$12351$1nosrN)
        (not . g$12350$1nosrN)
        (negative? . g$12349$1nosrN)
        (min . g$12347$1nosrN)
        (max . g$12346$1nosrN)
        (map . g$12345$1nosrN)
        (make-vector . g$12344$1nosrN)
        (make-string . g$12343$1nosrN)
        (make-rectangular . g$12342$1nosrN)
        (make-polar . g$12341$1nosrN)
        (magnitude . g$12340$1nosrN)
        (log . g$12339$1nosrN)
        (list? . g$12338$1nosrN)
        (list-tail . g$12337$1nosrN)
        (list-ref . g$12336$1nosrN)
        (list->vector . g$12335$1nosrN)
        (list->string . g$12334$1nosrN)
        (list . g$12333$1nosrN)
        (length . g$12332$1nosrN)
        (lcm . g$12331$1nosrN)
        (integer? . g$12330$1nosrN)
        (integer->char . g$12328$1nosrN)
        (inexact? . g$12326$1nosrN)
        (imag-part . g$12324$1nosrN)
        (gcd . g$12323$1nosrN)
        (for-each . g$12322$1nosrN)
        (floor . g$12321$1nosrN)
        (expt . g$12319$1nosrN)
        (exp . g$12318$1nosrN)
        (exact? . g$12317$1nosrN)
        (even? . g$12314$1nosrN)
        (eqv? . g$12312$1nosrN)
        (equal? . g$12311$1nosrN)
        (eq? . g$12310$1nosrN)
        (dynamic-wind . g$12309$1nosrN)
        (denominator . g$12302$1nosrN)
        (cos . g$12301$1nosrN)
        (cons . g$12300$1nosrN)
        (complex? . g$12299$1nosrN)
        (char? . g$12298$1nosrN)
        (char>? . g$6110$1nosrN)
        (char>=? . g$6112$1nosrN)
        (char=? . g$6108$1nosrN)
        (char<? . g$6109$1nosrN)
        (char<=? . g$6111$1nosrN)
        (char->integer . g$12297$1nosrN)
        (ceiling . g$12296$1nosrN)
        (call-with-values . g$12295$1nosrN)
        (call-with-current-continuation . g$12293$1nosrN)
        (cddddr . g$6008$1nosrN)
        (cdddar . g$6007$1nosrN)
        (cddadr . g$6006$1nosrN)
        (cddaar . g$6005$1nosrN)
        (cdaddr . g$6004$1nosrN)
        (cdadar . g$6003$1nosrN)
        (cdaadr . g$6002$1nosrN)
        (cdaaar . g$6001$1nosrN)
        (cadddr . g$6000$1nosrN)
        (caddar . g$5999$1nosrN)
        (cadadr . g$5998$1nosrN)
        (cadaar . g$5997$1nosrN)
        (caaddr . g$5996$1nosrN)
        (caadar . g$5995$1nosrN)
        (caaadr . g$5994$1nosrN)
        (caaaar . g$5993$1nosrN)
        (cdddr . g$5992$1nosrN)
        (cddar . g$5991$1nosrN)
        (cdadr . g$5990$1nosrN)
        (cdaar . g$5989$1nosrN)
        (caddr . g$5988$1nosrN)
        (cadar . g$5987$1nosrN)
        (caadr . g$5986$1nosrN)
        (caaar . g$5985$1nosrN)
        (cddr . g$5984$1nosrN)
        (cdar . g$5983$1nosrN)
        (cadr . g$5982$1nosrN)
        (caar . g$5981$1nosrN)
        (cdr . g$12292$1nosrN)
        (car . g$12291$1nosrN)
        (boolean? . g$12290$1nosrN)
        (atan . g$12289$1nosrN)
        (asin . g$12287$1nosrN)
        (apply . g$12286$1nosrN)
        (append . g$12285$1nosrN)
        (angle . g$12284$1nosrN)
        (acos . g$12283$1nosrN)
        (abs . g$12282$1nosrN)
        (/ . g$12281$1nosrN)
        (* . g$12280$1nosrN)
        (- . g$12279$1nosrN)
        (+ . g$12278$1nosrN)
        (>= . g$12277$1nosrN)
        (> . g$12276$1nosrN)
        (= . g$12275$1nosrN)
        (<= . g$12274$1nosrN)
        (< . g$12273$1nosrN)
        (unquote-splicing . g$12190$1nosrN)
        (unquote . g$12189$1nosrN)
        (else . g$12187$1nosrN)
        (=> . g$12186$1nosrN)
        (... . g$12185$1nosrN)
        (delay . g$12182$1nosrN)
        (or . g$12180$1nosrN)
        (and . g$12179$1nosrN)
        (do . g$12178$1nosrN)
        (cond . g$12177$1nosrN)
        (let* . g$12176$1nosrN)
        (let . g$12175$1nosrN)
        (quasiquote . g$12171$1nosrN)
        (syntax-rules . g$12170$1nosrN)
        (case . g$12161$1nosrN)
        (if . g$12157$1nosrN)
        (letrec . g$12155$1nosrN)
        (lambda . g$12152$1nosrN)
        (quote . g$12149$1nosrN)
        (letrec-syntax . g$12147$1nosrN)
        (let-syntax . g$12146$1nosrN)
        (set! . g$12145$1nosrN)
        (begin . g$12142$1nosrN)
        (define-syntax . g$12140$1nosrN)
        (define . g$12139$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7383$1nosrN
      'g$12769$1nosrN
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12665$1nosrN)
        (string-titlecase . g$12664$1nosrN)
        (string-normalize-nfkd . g$12663$1nosrN)
        (string-normalize-nfkc . g$12662$1nosrN)
        (string-normalize-nfd . g$12661$1nosrN)
        (string-normalize-nfc . g$12660$1nosrN)
        (string-foldcase . g$12659$1nosrN)
        (string-downcase . g$12658$1nosrN)
        (string-ci>? . g$7234$1nosrN)
        (string-ci>=? . g$7236$1nosrN)
        (string-ci=? . g$7232$1nosrN)
        (string-ci<? . g$7233$1nosrN)
        (string-ci<=? . g$7235$1nosrN)
        (char-whitespace? . g$12657$1nosrN)
        (char-upper-case? . g$12656$1nosrN)
        (char-title-case? . g$12655$1nosrN)
        (char-numeric? . g$12654$1nosrN)
        (char-lower-case? . g$12653$1nosrN)
        (char-general-category . g$12652$1nosrN)
        (char-upcase . g$12651$1nosrN)
        (char-titlecase . g$12650$1nosrN)
        (char-foldcase . g$12649$1nosrN)
        (char-downcase . g$12648$1nosrN)
        (char-ci>? . g$7285$1nosrN)
        (char-ci>=? . g$7287$1nosrN)
        (char-ci=? . g$7283$1nosrN)
        (char-ci<? . g$7284$1nosrN)
        (char-ci<=? . g$7286$1nosrN)
        (char-alphabetic? . g$12647$1nosrN)
        (make-variable-transformer . g$8764$1nosrN)
        (identifier? . g$9162$1nosrN)
        (generate-temporaries . g$9151$1nosrN)
        (free-identifier=? . g$9152$1nosrN)
        (syntax->datum . g$9164$1nosrN)
        (datum->syntax . g$9163$1nosrN)
        (bound-identifier=? . g$9153$1nosrN)
        (record-type-descriptor? . g$12646$1nosrN)
        (record-predicate . g$12645$1nosrN)
        (record-mutator . g$12644$1nosrN)
        (record-constructor . g$12643$1nosrN)
        (record-accessor . g$12642$1nosrN)
        (make-record-type-descriptor . g$12641$1nosrN)
        (make-record-constructor-descriptor . g$12640$1nosrN)
        (record? . g$12639$1nosrN)
        (record-type-uid . g$12638$1nosrN)
        (record-type-sealed? . g$12637$1nosrN)
        (record-type-parent . g$12636$1nosrN)
        (record-type-opaque? . g$12635$1nosrN)
        (record-type-name . g$12634$1nosrN)
        (record-type-generative? . g$12633$1nosrN)
        (record-type-field-names . g$12632$1nosrN)
        (record-rtd . g$12631$1nosrN)
        (record-field-mutable? . g$12630$1nosrN)
        (delete-file . g$6595$1nosrN)
        (file-exists? . g$6594$1nosrN)
        (vector-sort! . g$12629$1nosrN)
        (vector-sort . g$12628$1nosrN)
        (list-sort . g$7108$1nosrN)
        (symbol-hash . g$12627$1nosrN)
        (string-ci-hash . g$12626$1nosrN)
        (string-hash . g$12625$1nosrN)
        (equal-hash . g$12624$1nosrN)
        (hashtable-equivalence-function . g$12623$1nosrN)
        (make-hashtable . g$12622$1nosrN)
        (hashtable-hash-function . g$12621$1nosrN)
        (make-eqv-hashtable . g$6562$1nosrN)
        (make-eq-hashtable . g$6561$1nosrN)
        (hashtable? . g$12620$1nosrN)
        (hashtable-update! . g$6568$1nosrN)
        (hashtable-size . g$6563$1nosrN)
        (hashtable-set! . g$6565$1nosrN)
        (hashtable-ref . g$6564$1nosrN)
        (hashtable-mutable? . g$12619$1nosrN)
        (hashtable-keys . g$12618$1nosrN)
        (hashtable-entries . g$12617$1nosrN)
        (hashtable-delete! . g$6566$1nosrN)
        (hashtable-copy . g$12616$1nosrN)
        (hashtable-contains? . g$6567$1nosrN)
        (hashtable-clear! . g$6569$1nosrN)
        (call-with-output-file . g$7704$1nosrN)
        (call-with-input-file . g$7703$1nosrN)
        (write-char . g$12615$1nosrN)
        (write . g$12614$1nosrN)
        (with-output-to-file . g$7702$1nosrN)
        (with-input-from-file . g$7701$1nosrN)
        (read-char . g$12613$1nosrN)
        (read . g$12612$1nosrN)
        (peek-char . g$12611$1nosrN)
        (open-output-file . g$12610$1nosrN)
        (open-input-file . g$12609$1nosrN)
        (newline . g$12608$1nosrN)
        (display . g$12607$1nosrN)
        (close-output-port . g$12606$1nosrN)
        (close-input-port . g$12605$1nosrN)
        (eof-object? . g$12604$1nosrN)
        (eof-object . g$12603$1nosrN)
        (current-error-port . g$12602$1nosrN)
        (current-output-port . g$12601$1nosrN)
        (current-input-port . g$12600$1nosrN)
        (output-port? . g$12599$1nosrN)
        (input-port? . g$12598$1nosrN)
        (utf-8-codec . g$12597$1nosrN)
        (utf-16-codec . g$12596$1nosrN)
        (transcoder-error-handling-mode . g$12595$1nosrN)
        (transcoder-eol-style . g$12594$1nosrN)
        (transcoder-codec . g$12593$1nosrN)
        (transcoded-port . g$12592$1nosrN)
        (textual-port? . g$12591$1nosrN)
        (string->bytevector . g$12590$1nosrN)
        (standard-output-port . g$12589$1nosrN)
        (standard-input-port . g$12588$1nosrN)
        (standard-error-port . g$12587$1nosrN)
        (set-port-position! . g$12586$1nosrN)
        (put-u8 . g$12585$1nosrN)
        (put-string . g$12584$1nosrN)
        (put-datum . g$12583$1nosrN)
        (put-char . g$12582$1nosrN)
        (put-bytevector . g$12581$1nosrN)
        (port? . g$7680$1nosrN)
        (port-transcoder . g$12580$1nosrN)
        (port-position . g$12579$1nosrN)
        (port-has-set-port-position!? . g$12578$1nosrN)
        (port-has-port-position? . g$12577$1nosrN)
        (port-eof? . g$12576$1nosrN)
        (output-port-buffer-mode . g$12575$1nosrN)
        (open-string-output-port . g$7679$1nosrN)
        (open-string-input-port . g$12574$1nosrN)
        (open-file-output-port . g$12573$1nosrN)
        (open-file-input/output-port . g$12572$1nosrN)
        (open-file-input-port . g$12571$1nosrN)
        (open-bytevector-output-port . g$12570$1nosrN)
        (open-bytevector-input-port . g$12569$1nosrN)
        (native-transcoder . g$12568$1nosrN)
        (native-eol-style . g$12567$1nosrN)
        (make-transcoder . g$12566$1nosrN)
        (latin-1-codec . g$12565$1nosrN)
        (make-i/o-write-error . g$7536$1nosrN)
        (make-i/o-read-error . g$7522$1nosrN)
        (make-i/o-port-error . g$7641$1nosrN)
        (make-i/o-invalid-position-error . g$7551$1nosrN)
        (make-i/o-filename-error . g$7568$1nosrN)
        (make-i/o-file-protection-error . g$7584$1nosrN)
        (make-i/o-file-is-read-only-error . g$7598$1nosrN)
        (make-i/o-file-does-not-exist-error . g$7626$1nosrN)
        (make-i/o-file-already-exists-error . g$7612$1nosrN)
        (make-i/o-error . g$7508$1nosrN)
        (make-i/o-encoding-error . g$7672$1nosrN)
        (make-i/o-decoding-error . g$7657$1nosrN)
        (make-custom-textual-output-port . g$12564$1nosrN)
        (make-custom-textual-input/output-port . g$12563$1nosrN)
        (make-custom-textual-input-port . g$12562$1nosrN)
        (make-custom-binary-output-port . g$12561$1nosrN)
        (make-custom-binary-input/output-port . g$12560$1nosrN)
        (make-custom-binary-input-port . g$12559$1nosrN)
        (make-bytevector . g$12558$1nosrN)
        (lookahead-u8 . g$12557$1nosrN)
        (lookahead-char . g$12556$1nosrN)
        (i/o-write-error? . g$7537$1nosrN)
        (i/o-read-error? . g$7523$1nosrN)
        (i/o-port-error? . g$7643$1nosrN)
        (i/o-invalid-position-error? . g$7553$1nosrN)
        (i/o-error-position . g$7554$1nosrN)
        (i/o-filename-error? . g$7570$1nosrN)
        (i/o-file-protection-error? . g$7585$1nosrN)
        (i/o-file-is-read-only-error? . g$7599$1nosrN)
        (i/o-file-does-not-exist-error? . g$7627$1nosrN)
        (i/o-file-already-exists-error? . g$7613$1nosrN)
        (i/o-error? . g$7509$1nosrN)
        (i/o-error-port . g$7644$1nosrN)
        (i/o-error-filename . g$7571$1nosrN)
        (i/o-encoding-error? . g$7674$1nosrN)
        (i/o-encoding-error-char . g$7675$1nosrN)
        (i/o-decoding-error? . g$7658$1nosrN)
        (get-u8 . g$12555$1nosrN)
        (get-string-n! . g$12554$1nosrN)
        (get-string-n . g$12553$1nosrN)
        (get-string-all . g$12552$1nosrN)
        (get-line . g$12551$1nosrN)
        (get-datum . g$12550$1nosrN)
        (get-char . g$12549$1nosrN)
        (get-bytevector-some . g$12548$1nosrN)
        (get-bytevector-n! . g$12547$1nosrN)
        (get-bytevector-n . g$12546$1nosrN)
        (get-bytevector-all . g$12545$1nosrN)
        (flush-output-port . g$12544$1nosrN)
        (close-port . g$12543$1nosrN)
        (call-with-string-output-port . g$12542$1nosrN)
        (call-with-port . g$12541$1nosrN)
        (call-with-bytevector-output-port . g$12540$1nosrN)
        (bytevector->string . g$12539$1nosrN)
        (buffer-mode? . g$12538$1nosrN)
        (binary-port? . g$12537$1nosrN)
        (exit . g$12534$1nosrN)
        (command-line . g$12103$1nosrN)
        (remove . g$6675$1nosrN)
        (remv . g$6676$1nosrN)
        (remp . g$6661$1nosrN)
        (remq . g$6677$1nosrN)
        (partition . g$6660$1nosrN)
        (memv . g$12529$1nosrN)
        (memq . g$12528$1nosrN)
        (memp . g$6667$1nosrN)
        (member . g$6666$1nosrN)
        (exists . g$6671$1nosrN)
        (for-all . g$6670$1nosrN)
        (fold-right . g$6674$1nosrN)
        (fold-left . g$6673$1nosrN)
        (find . g$6659$1nosrN)
        (filter . g$6662$1nosrN)
        (cons* . g$6672$1nosrN)
        (assv . g$6663$1nosrN)
        (assq . g$12527$1nosrN)
        (assp . g$6665$1nosrN)
        (assoc . g$6664$1nosrN)
        (with-exception-handler . g$12526$1nosrN)
        (raise-continuable . g$12525$1nosrN)
        (raise . g$12524$1nosrN)
        (make-enumeration . g$7762$1nosrN)
        (enum-set=? . g$7769$1nosrN)
        (enum-set-universe . g$7763$1nosrN)
        (enum-set-union . g$7770$1nosrN)
        (enum-set-subset? . g$7768$1nosrN)
        (enum-set-projection . g$7774$1nosrN)
        (enum-set-member? . g$7767$1nosrN)
        (enum-set-intersection . g$7771$1nosrN)
        (enum-set-indexer . g$7764$1nosrN)
        (enum-set-difference . g$7772$1nosrN)
        (enum-set-constructor . g$7765$1nosrN)
        (enum-set-complement . g$7773$1nosrN)
        (enum-set->list . g$7766$1nosrN)
        (who-condition? . g$6999$1nosrN)
        (warning? . g$6910$1nosrN)
        (violation? . g$6952$1nosrN)
        (undefined-violation? . g$7076$1nosrN)
        (syntax-violation? . g$7060$1nosrN)
        (syntax-violation-subform . g$7062$1nosrN)
        (syntax-violation-form . g$7061$1nosrN)
        (syntax-violation . g$9161$1nosrN)
        (simple-conditions . g$12523$1nosrN)
        (serious-condition? . g$6924$1nosrN)
        (non-continuable-violation? . g$7014$1nosrN)
        (message-condition? . g$6895$1nosrN)
        (make-who-condition . g$6997$1nosrN)
        (make-warning . g$6909$1nosrN)
        (make-violation . g$6951$1nosrN)
        (make-undefined-violation . g$7075$1nosrN)
        (make-syntax-violation . g$7057$1nosrN)
        (make-serious-condition . g$6923$1nosrN)
        (make-non-continuable-violation . g$7013$1nosrN)
        (make-message-condition . g$6893$1nosrN)
        (make-lexical-violation . g$7041$1nosrN)
        (make-irritants-condition . g$6980$1nosrN)
        (make-implementation-restriction-violation . g$7027$1nosrN)
        (make-error . g$6937$1nosrN)
        (make-assertion-violation . g$6965$1nosrN)
        (lexical-violation? . g$7042$1nosrN)
        (irritants-condition? . g$6982$1nosrN)
        (implementation-restriction-violation? . g$7028$1nosrN)
        (error? . g$6938$1nosrN)
        (condition-who . g$7000$1nosrN)
        (condition-predicate . g$12522$1nosrN)
        (condition-message . g$6896$1nosrN)
        (condition-irritants . g$6983$1nosrN)
        (condition-accessor . g$12521$1nosrN)
        (condition . g$12520$1nosrN)
        (assertion-violation? . g$6966$1nosrN)
        (condition? . g$12519$1nosrN)
        (utf32->string . g$12518$1nosrN)
        (utf16->string . g$12517$1nosrN)
        (utf8->string . g$12516$1nosrN)
        (uint-list->bytevector . g$12515$1nosrN)
        (u8-list->bytevector . g$12514$1nosrN)
        (string->utf8 . g$12513$1nosrN)
        (string->utf32 . g$12512$1nosrN)
        (string->utf16 . g$12511$1nosrN)
        (sint-list->bytevector . g$12510$1nosrN)
        (native-endianness . g$6751$1nosrN)
        (bytevector? . g$12509$1nosrN)
        (bytevector=? . g$12508$1nosrN)
        (bytevector-uint-set! . g$12507$1nosrN)
        (bytevector-uint-ref . g$12506$1nosrN)
        (bytevector-u8-set! . g$12505$1nosrN)
        (bytevector-u8-ref . g$12504$1nosrN)
        (bytevector-u64-set! . g$6772$1nosrN)
        (bytevector-u64-ref . g$6768$1nosrN)
        (bytevector-u64-native-set! . g$6774$1nosrN)
        (bytevector-u64-native-ref . g$6770$1nosrN)
        (bytevector-u32-set! . g$6764$1nosrN)
        (bytevector-u32-ref . g$6760$1nosrN)
        (bytevector-u32-native-set! . g$6766$1nosrN)
        (bytevector-u32-native-ref . g$6762$1nosrN)
        (bytevector-u16-set! . g$6756$1nosrN)
        (bytevector-u16-ref . g$6752$1nosrN)
        (bytevector-u16-native-set! . g$6758$1nosrN)
        (bytevector-u16-native-ref . g$6754$1nosrN)
        (bytevector-sint-set! . g$12503$1nosrN)
        (bytevector-sint-ref . g$12502$1nosrN)
        (bytevector-s8-set! . g$12501$1nosrN)
        (bytevector-s8-ref . g$12500$1nosrN)
        (bytevector-s64-set! . g$6773$1nosrN)
        (bytevector-s64-ref . g$6769$1nosrN)
        (bytevector-s64-native-set! . g$6775$1nosrN)
        (bytevector-s64-native-ref . g$6771$1nosrN)
        (bytevector-s32-set! . g$6765$1nosrN)
        (bytevector-s32-ref . g$6761$1nosrN)
        (bytevector-s32-native-set! . g$6767$1nosrN)
        (bytevector-s32-native-ref . g$6763$1nosrN)
        (bytevector-s16-set! . g$6757$1nosrN)
        (bytevector-s16-ref . g$6753$1nosrN)
        (bytevector-s16-native-set! . g$6759$1nosrN)
        (bytevector-s16-native-ref . g$6755$1nosrN)
        (bytevector-length . g$12499$1nosrN)
        (bytevector-ieee-single-set! . g$12498$1nosrN)
        (bytevector-ieee-single-ref . g$12497$1nosrN)
        (bytevector-ieee-single-native-set! . g$6778$1nosrN)
        (bytevector-ieee-single-native-ref . g$6776$1nosrN)
        (bytevector-ieee-double-set! . g$12496$1nosrN)
        (bytevector-ieee-double-ref . g$12495$1nosrN)
        (bytevector-ieee-double-native-set! . g$6779$1nosrN)
        (bytevector-ieee-double-native-ref . g$6777$1nosrN)
        (bytevector-fill! . g$12494$1nosrN)
        (bytevector-copy! . g$12493$1nosrN)
        (bytevector-copy . g$12492$1nosrN)
        (bytevector->uint-list . g$12491$1nosrN)
        (bytevector->u8-list . g$12490$1nosrN)
        (bytevector->sint-list . g$12489$1nosrN)
        (no-nans-violation? . g$7494$1nosrN)
        (no-infinities-violation? . g$7480$1nosrN)
        (make-no-nans-violation . g$7493$1nosrN)
        (make-no-infinities-violation . g$7479$1nosrN)
        (real->flonum . g$12488$1nosrN)
        (flzero? . g$12487$1nosrN)
        (fltruncate . g$12486$1nosrN)
        (fltan . g$12485$1nosrN)
        (flsqrt . g$12484$1nosrN)
        (flsin . g$12483$1nosrN)
        (flround . g$12482$1nosrN)
        (flpositive? . g$12481$1nosrN)
        (flonum? . g$12480$1nosrN)
        (flodd? . g$12479$1nosrN)
        (flnumerator . g$12478$1nosrN)
        (flnegative? . g$12477$1nosrN)
        (flnan? . g$12476$1nosrN)
        (flmod0 . g$12475$1nosrN)
        (flmod . g$12474$1nosrN)
        (flmin . g$12473$1nosrN)
        (flmax . g$12472$1nosrN)
        (fllog . g$12471$1nosrN)
        (flinteger? . g$12470$1nosrN)
        (flinfinite? . g$12469$1nosrN)
        (flfloor . g$12468$1nosrN)
        (flfinite? . g$12467$1nosrN)
        (flexpt . g$12466$1nosrN)
        (flexp . g$12465$1nosrN)
        (fleven? . g$12464$1nosrN)
        (fldiv0-and-mod0 . g$12463$1nosrN)
        (fldiv0 . g$12462$1nosrN)
        (fldiv-and-mod . g$12461$1nosrN)
        (fldiv . g$12460$1nosrN)
        (fldenominator . g$12459$1nosrN)
        (flcos . g$12458$1nosrN)
        (flceiling . g$12457$1nosrN)
        (flatan . g$12456$1nosrN)
        (flasin . g$12455$1nosrN)
        (flacos . g$12454$1nosrN)
        (flabs . g$12453$1nosrN)
        (fl>? . g$12452$1nosrN)
        (fl>=? . g$12451$1nosrN)
        (fl=? . g$12450$1nosrN)
        (fl<? . g$12449$1nosrN)
        (fl<=? . g$12448$1nosrN)
        (fl/ . g$12447$1nosrN)
        (fl- . g$12446$1nosrN)
        (fl+ . g$12445$1nosrN)
        (fl* . g$12444$1nosrN)
        (fixnum->flonum . g$12443$1nosrN)
        (fxzero? . g$12442$1nosrN)
        (fxxor . g$12441$1nosrN)
        (fxrotate-bit-field . g$7425$1nosrN)
        (fxreverse-bit-field . g$12440$1nosrN)
        (fxpositive? . g$12439$1nosrN)
        (fxodd? . g$12438$1nosrN)
        (fxnot . g$12437$1nosrN)
        (fxnegative? . g$12436$1nosrN)
        (fxmod0 . g$12435$1nosrN)
        (fxmod . g$12434$1nosrN)
        (fxmin . g$12433$1nosrN)
        (fxmax . g$12432$1nosrN)
        (fxlength . g$12431$1nosrN)
        (fxior . g$12430$1nosrN)
        (fxif . g$7419$1nosrN)
        (fxfirst-bit-set . g$12429$1nosrN)
        (fxeven? . g$12428$1nosrN)
        (fxdiv0-and-mod0 . g$12427$1nosrN)
        (fxdiv0 . g$12426$1nosrN)
        (fxdiv-and-mod . g$12425$1nosrN)
        (fxdiv . g$12424$1nosrN)
        (fxcopy-bit-field . g$7422$1nosrN)
        (fxcopy-bit . g$7420$1nosrN)
        (fxbit-set? . g$12423$1nosrN)
        (fxbit-field . g$7421$1nosrN)
        (fxbit-count . g$12422$1nosrN)
        (fxarithmetic-shift-right . g$7424$1nosrN)
        (fxarithmetic-shift-left . g$7423$1nosrN)
        (fxarithmetic-shift . g$12421$1nosrN)
        (fxand . g$12420$1nosrN)
        (fx>? . g$12419$1nosrN)
        (fx>=? . g$12418$1nosrN)
        (fx=? . g$12417$1nosrN)
        (fx<? . g$12416$1nosrN)
        (fx<=? . g$12415$1nosrN)
        (fx-/carry . g$12414$1nosrN)
        (fx- . g$12413$1nosrN)
        (fx+/carry . g$12412$1nosrN)
        (fx+ . g$12411$1nosrN)
        (fx*/carry . g$12410$1nosrN)
        (fx* . g$12409$1nosrN)
        (greatest-fixnum . g$12408$1nosrN)
        (least-fixnum . g$12407$1nosrN)
        (fixnum-width . g$12406$1nosrN)
        (fixnum? . g$12405$1nosrN)
        (bitwise-rotate-bit-field . g$7377$1nosrN)
        (bitwise-reverse-bit-field . g$12404$1nosrN)
        (bitwise-length . g$12403$1nosrN)
        (bitwise-if . g$7371$1nosrN)
        (bitwise-first-bit-set . g$12402$1nosrN)
        (bitwise-copy-bit-field . g$7374$1nosrN)
        (bitwise-copy-bit . g$7372$1nosrN)
        (bitwise-bit-set? . g$12401$1nosrN)
        (bitwise-bit-field . g$12400$1nosrN)
        (bitwise-bit-count . g$12399$1nosrN)
        (bitwise-xor . g$12398$1nosrN)
        (bitwise-ior . g$12397$1nosrN)
        (bitwise-and . g$12396$1nosrN)
        (bitwise-not . g$12395$1nosrN)
        (bitwise-arithmetic-shift-right . g$7376$1nosrN)
        (bitwise-arithmetic-shift-left . g$7375$1nosrN)
        (bitwise-arithmetic-shift . g$12394$1nosrN)
        (zero? . g$12393$1nosrN)
        (vector? . g$12392$1nosrN)
        (vector-set! . g$12391$1nosrN)
        (vector-ref . g$12390$1nosrN)
        (vector-map . g$12389$1nosrN)
        (vector-length . g$12388$1nosrN)
        (vector-for-each . g$12387$1nosrN)
        (vector-fill! . g$12386$1nosrN)
        (vector->list . g$12385$1nosrN)
        (vector . g$12384$1nosrN)
        (values . g$12383$1nosrN)
        (truncate . g$12382$1nosrN)
        (tan . g$12381$1nosrN)
        (symbol? . g$12380$1nosrN)
        (symbol=? . g$6060$1nosrN)
        (symbol->string . g$12379$1nosrN)
        (substring . g$12378$1nosrN)
        (string? . g$12377$1nosrN)
        (string>? . g$6057$1nosrN)
        (string>=? . g$6059$1nosrN)
        (string=? . g$6055$1nosrN)
        (string<? . g$6056$1nosrN)
        (string<=? . g$6058$1nosrN)
        (string-ref . g$12376$1nosrN)
        (string-length . g$12375$1nosrN)
        (string-for-each . g$12374$1nosrN)
        (string-copy . g$12373$1nosrN)
        (string-append . g$12372$1nosrN)
        (string->symbol . g$12371$1nosrN)
        (string->number . g$12370$1nosrN)
        (string->list . g$12369$1nosrN)
        (string . g$12368$1nosrN)
        (sqrt . g$12367$1nosrN)
        (sin . g$12366$1nosrN)
        (round . g$12365$1nosrN)
        (reverse . g$12364$1nosrN)
        (real? . g$12363$1nosrN)
        (real-valued? . g$12362$1nosrN)
        (real-part . g$12361$1nosrN)
        (rationalize . g$6113$1nosrN)
        (rational? . g$12360$1nosrN)
        (rational-valued? . g$12359$1nosrN)
        (procedure? . g$12358$1nosrN)
        (positive? . g$12357$1nosrN)
        (pair? . g$12356$1nosrN)
        (odd? . g$12355$1nosrN)
        (numerator . g$12354$1nosrN)
        (number? . g$12353$1nosrN)
        (number->string . g$12352$1nosrN)
        (null? . g$12351$1nosrN)
        (not . g$12350$1nosrN)
        (negative? . g$12349$1nosrN)
        (nan? . g$12348$1nosrN)
        (min . g$12347$1nosrN)
        (max . g$12346$1nosrN)
        (map . g$12345$1nosrN)
        (make-vector . g$12344$1nosrN)
        (make-string . g$12343$1nosrN)
        (make-rectangular . g$12342$1nosrN)
        (make-polar . g$12341$1nosrN)
        (magnitude . g$12340$1nosrN)
        (log . g$12339$1nosrN)
        (list? . g$12338$1nosrN)
        (list-tail . g$12337$1nosrN)
        (list-ref . g$12336$1nosrN)
        (list->vector . g$12335$1nosrN)
        (list->string . g$12334$1nosrN)
        (list . g$12333$1nosrN)
        (length . g$12332$1nosrN)
        (lcm . g$12331$1nosrN)
        (integer? . g$12330$1nosrN)
        (integer-valued? . g$12329$1nosrN)
        (integer->char . g$12328$1nosrN)
        (infinite? . g$12327$1nosrN)
        (inexact? . g$12326$1nosrN)
        (inexact . g$12325$1nosrN)
        (imag-part . g$12324$1nosrN)
        (gcd . g$12323$1nosrN)
        (for-each . g$12322$1nosrN)
        (floor . g$12321$1nosrN)
        (finite? . g$12320$1nosrN)
        (expt . g$12319$1nosrN)
        (exp . g$12318$1nosrN)
        (exact? . g$12317$1nosrN)
        (exact-integer-sqrt . g$12316$1nosrN)
        (exact . g$12315$1nosrN)
        (even? . g$12314$1nosrN)
        (error . g$12313$1nosrN)
        (eqv? . g$12312$1nosrN)
        (equal? . g$12311$1nosrN)
        (eq? . g$12310$1nosrN)
        (dynamic-wind . g$12309$1nosrN)
        (div0-and-mod0 . g$12308$1nosrN)
        (mod0 . g$12307$1nosrN)
        (div0 . g$12306$1nosrN)
        (div-and-mod . g$12305$1nosrN)
        (mod . g$12304$1nosrN)
        (div . g$12303$1nosrN)
        (denominator . g$12302$1nosrN)
        (cos . g$12301$1nosrN)
        (cons . g$12300$1nosrN)
        (complex? . g$12299$1nosrN)
        (char? . g$12298$1nosrN)
        (char>? . g$6110$1nosrN)
        (char>=? . g$6112$1nosrN)
        (char=? . g$6108$1nosrN)
        (char<? . g$6109$1nosrN)
        (char<=? . g$6111$1nosrN)
        (char->integer . g$12297$1nosrN)
        (ceiling . g$12296$1nosrN)
        (call-with-values . g$12295$1nosrN)
        (call/cc . g$12294$1nosrN)
        (call-with-current-continuation . g$12293$1nosrN)
        (cddddr . g$6008$1nosrN)
        (cdddar . g$6007$1nosrN)
        (cddadr . g$6006$1nosrN)
        (cddaar . g$6005$1nosrN)
        (cdaddr . g$6004$1nosrN)
        (cdadar . g$6003$1nosrN)
        (cdaadr . g$6002$1nosrN)
        (cdaaar . g$6001$1nosrN)
        (cadddr . g$6000$1nosrN)
        (caddar . g$5999$1nosrN)
        (cadadr . g$5998$1nosrN)
        (cadaar . g$5997$1nosrN)
        (caaddr . g$5996$1nosrN)
        (caadar . g$5995$1nosrN)
        (caaadr . g$5994$1nosrN)
        (caaaar . g$5993$1nosrN)
        (cdddr . g$5992$1nosrN)
        (cddar . g$5991$1nosrN)
        (cdadr . g$5990$1nosrN)
        (cdaar . g$5989$1nosrN)
        (caddr . g$5988$1nosrN)
        (cadar . g$5987$1nosrN)
        (caadr . g$5986$1nosrN)
        (caaar . g$5985$1nosrN)
        (cddr . g$5984$1nosrN)
        (cdar . g$5983$1nosrN)
        (cadr . g$5982$1nosrN)
        (caar . g$5981$1nosrN)
        (cdr . g$12292$1nosrN)
        (car . g$12291$1nosrN)
        (boolean? . g$12290$1nosrN)
        (boolean=? . g$6061$1nosrN)
        (atan . g$12289$1nosrN)
        (assertion-violation . g$12288$1nosrN)
        (asin . g$12287$1nosrN)
        (apply . g$12286$1nosrN)
        (append . g$12285$1nosrN)
        (angle . g$12284$1nosrN)
        (acos . g$12283$1nosrN)
        (abs . g$12282$1nosrN)
        (/ . g$12281$1nosrN)
        (* . g$12280$1nosrN)
        (- . g$12279$1nosrN)
        (+ . g$12278$1nosrN)
        (>= . g$12277$1nosrN)
        (> . g$12276$1nosrN)
        (= . g$12275$1nosrN)
        (<= . g$12274$1nosrN)
        (< . g$12273$1nosrN)
        (&no-nans . g$12243$1nosrN)
        (&no-infinities . g$12242$1nosrN)
        (&i/o-encoding . g$12241$1nosrN)
        (&i/o-decoding . g$12240$1nosrN)
        (&i/o-port . g$12239$1nosrN)
        (&i/o-file-does-not-exist . g$12238$1nosrN)
        (&i/o-file-already-exists . g$12237$1nosrN)
        (&i/o-file-is-read-only . g$12236$1nosrN)
        (&i/o-file-protection . g$12235$1nosrN)
        (&i/o-filename . g$12234$1nosrN)
        (&i/o-invalid-position . g$12233$1nosrN)
        (&i/o-write . g$12232$1nosrN)
        (&i/o-read . g$12231$1nosrN)
        (&i/o . g$12230$1nosrN)
        (&non-continuable . g$12229$1nosrN)
        (&undefined . g$12228$1nosrN)
        (&syntax . g$12227$1nosrN)
        (&lexical . g$12226$1nosrN)
        (&implementation-restriction . g$12225$1nosrN)
        (&who . g$12223$1nosrN)
        (&irritants . g$12222$1nosrN)
        (&assertion . g$12221$1nosrN)
        (&violation . g$12220$1nosrN)
        (&error . g$12219$1nosrN)
        (&serious . g$12218$1nosrN)
        (&warning . g$12217$1nosrN)
        (&message . g$12216$1nosrN)
        (&condition . g$12215$1nosrN)
        (define-condition-type . g$12214$1nosrN)
        (define-enumeration . g$12213$1nosrN)
        (define-record-type . g$12212$1nosrN)
        (parent-rtd . g$12211$1nosrN)
        (nongenerative . g$12210$1nosrN)
        (opaque . g$12209$1nosrN)
        (sealed . g$12208$1nosrN)
        (protocol . g$12207$1nosrN)
        (parent . g$12206$1nosrN)
        (immutable . g$12205$1nosrN)
        (mutable . g$12204$1nosrN)
        (fields . g$12203$1nosrN)
        (error-handling-mode . g$12202$1nosrN)
        (file-options . g$12201$1nosrN)
        (buffer-mode . g$12200$1nosrN)
        (eol-style . g$12199$1nosrN)
        (guard . g$12198$1nosrN)
        (unsyntax-splicing . g$12192$1nosrN)
        (unsyntax . g$12191$1nosrN)
        (unquote-splicing . g$12190$1nosrN)
        (unquote . g$12189$1nosrN)
        (_ . g$12188$1nosrN)
        (else . g$12187$1nosrN)
        (=> . g$12186$1nosrN)
        (... . g$12185$1nosrN)
        (assert . g$12184$1nosrN)
        (endianness . g$12183$1nosrN)
        (or . g$12180$1nosrN)
        (and . g$12179$1nosrN)
        (do . g$12178$1nosrN)
        (cond . g$12177$1nosrN)
        (let* . g$12176$1nosrN)
        (let . g$12175$1nosrN)
        (identifier-syntax . g$12174$1nosrN)
        (with-syntax . g$12173$1nosrN)
        (quasisyntax . g$12172$1nosrN)
        (quasiquote . g$12171$1nosrN)
        (syntax-rules . g$12170$1nosrN)
        (let-values . g$12166$1nosrN)
        (let*-values . g$12165$1nosrN)
        (record-constructor-descriptor . g$12164$1nosrN)
        (record-type-descriptor . g$12163$1nosrN)
        (case . g$12161$1nosrN)
        (unless . g$12159$1nosrN)
        (when . g$12158$1nosrN)
        (if . g$12157$1nosrN)
        (letrec* . g$12156$1nosrN)
        (letrec . g$12155$1nosrN)
        (case-lambda . g$12153$1nosrN)
        (lambda . g$12152$1nosrN)
        (syntax . g$12151$1nosrN)
        (syntax-case . g$12150$1nosrN)
        (quote . g$12149$1nosrN)
        (letrec-syntax . g$12147$1nosrN)
        (let-syntax . g$12146$1nosrN)
        (set! . g$12145$1nosrN)
        (import . g$12144$1nosrN)
        (library . g$12143$1nosrN)
        (begin . g$12142$1nosrN)
        (define-syntax . g$12140$1nosrN)
        (define . g$12139$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12770$1nosrN
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$9167$1nosrN)
        (scheme-report-environment . g$9142$1nosrN)
        (quotient . g$7088$1nosrN)
        (null-environment . g$9141$1nosrN)
        (remainder . g$7089$1nosrN)
        (modulo . g$7090$1nosrN)
        (inexact->exact . g$12536$1nosrN)
        (force . g$7092$1nosrN)
        (exact->inexact . g$12535$1nosrN)
        (delay . g$12182$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12771$1nosrN
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12178$1nosrN)
        (unless . g$12159$1nosrN)
        (when . g$12158$1nosrN)
        (case-lambda . g$12153$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12772$1nosrN
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9144$1nosrN) (environment . g$9140$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12773$1nosrN
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12531$1nosrN) (set-car! . g$12530$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12774$1nosrN
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12533$1nosrN) (string-set! . g$12532$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12775$1nosrN
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12534$1nosrN) (command-line . g$12103$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12776$1nosrN
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8764$1nosrN)
        (identifier? . g$9162$1nosrN)
        (generate-temporaries . g$9151$1nosrN)
        (free-identifier=? . g$9152$1nosrN)
        (syntax->datum . g$9164$1nosrN)
        (datum->syntax . g$9163$1nosrN)
        (bound-identifier=? . g$9153$1nosrN)
        (syntax-violation . g$9161$1nosrN)
        (unsyntax-splicing . g$12192$1nosrN)
        (unsyntax . g$12191$1nosrN)
        (_ . g$12188$1nosrN)
        (... . g$12185$1nosrN)
        (with-syntax . g$12173$1nosrN)
        (quasisyntax . g$12172$1nosrN)
        (syntax . g$12151$1nosrN)
        (syntax-case . g$12150$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12777$1nosrN
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6595$1nosrN)
        (file-exists? . g$6594$1nosrN)
        (make-i/o-write-error . g$7536$1nosrN)
        (make-i/o-read-error . g$7522$1nosrN)
        (make-i/o-port-error . g$7641$1nosrN)
        (make-i/o-invalid-position-error . g$7551$1nosrN)
        (make-i/o-filename-error . g$7568$1nosrN)
        (make-i/o-file-protection-error . g$7584$1nosrN)
        (make-i/o-file-is-read-only-error . g$7598$1nosrN)
        (make-i/o-file-does-not-exist-error . g$7626$1nosrN)
        (make-i/o-file-already-exists-error . g$7612$1nosrN)
        (make-i/o-error . g$7508$1nosrN)
        (i/o-write-error? . g$7537$1nosrN)
        (i/o-read-error? . g$7523$1nosrN)
        (i/o-port-error? . g$7643$1nosrN)
        (i/o-invalid-position-error? . g$7553$1nosrN)
        (i/o-error-position . g$7554$1nosrN)
        (i/o-filename-error? . g$7570$1nosrN)
        (i/o-file-protection-error? . g$7585$1nosrN)
        (i/o-file-is-read-only-error? . g$7599$1nosrN)
        (i/o-file-does-not-exist-error? . g$7627$1nosrN)
        (i/o-file-already-exists-error? . g$7613$1nosrN)
        (i/o-error? . g$7509$1nosrN)
        (i/o-error-port . g$7644$1nosrN)
        (i/o-error-filename . g$7571$1nosrN)
        (&i/o-port . g$12239$1nosrN)
        (&i/o-file-does-not-exist . g$12238$1nosrN)
        (&i/o-file-already-exists . g$12237$1nosrN)
        (&i/o-file-is-read-only . g$12236$1nosrN)
        (&i/o-file-protection . g$12235$1nosrN)
        (&i/o-filename . g$12234$1nosrN)
        (&i/o-invalid-position . g$12233$1nosrN)
        (&i/o-write . g$12232$1nosrN)
        (&i/o-read . g$12231$1nosrN)
        (&i/o . g$12230$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12778$1nosrN
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12629$1nosrN)
        (vector-sort . g$12628$1nosrN)
        (list-sort . g$7108$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12779$1nosrN
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12393$1nosrN)
        (vector? . g$12392$1nosrN)
        (vector-set! . g$12391$1nosrN)
        (vector-ref . g$12390$1nosrN)
        (vector-map . g$12389$1nosrN)
        (vector-length . g$12388$1nosrN)
        (vector-for-each . g$12387$1nosrN)
        (vector-fill! . g$12386$1nosrN)
        (vector->list . g$12385$1nosrN)
        (vector . g$12384$1nosrN)
        (values . g$12383$1nosrN)
        (truncate . g$12382$1nosrN)
        (tan . g$12381$1nosrN)
        (symbol? . g$12380$1nosrN)
        (symbol=? . g$6060$1nosrN)
        (symbol->string . g$12379$1nosrN)
        (substring . g$12378$1nosrN)
        (string? . g$12377$1nosrN)
        (string>? . g$6057$1nosrN)
        (string>=? . g$6059$1nosrN)
        (string=? . g$6055$1nosrN)
        (string<? . g$6056$1nosrN)
        (string<=? . g$6058$1nosrN)
        (string-ref . g$12376$1nosrN)
        (string-length . g$12375$1nosrN)
        (string-for-each . g$12374$1nosrN)
        (string-copy . g$12373$1nosrN)
        (string-append . g$12372$1nosrN)
        (string->symbol . g$12371$1nosrN)
        (string->number . g$12370$1nosrN)
        (string->list . g$12369$1nosrN)
        (string . g$12368$1nosrN)
        (sqrt . g$12367$1nosrN)
        (sin . g$12366$1nosrN)
        (round . g$12365$1nosrN)
        (reverse . g$12364$1nosrN)
        (real? . g$12363$1nosrN)
        (real-valued? . g$12362$1nosrN)
        (real-part . g$12361$1nosrN)
        (rationalize . g$6113$1nosrN)
        (rational? . g$12360$1nosrN)
        (rational-valued? . g$12359$1nosrN)
        (procedure? . g$12358$1nosrN)
        (positive? . g$12357$1nosrN)
        (pair? . g$12356$1nosrN)
        (odd? . g$12355$1nosrN)
        (numerator . g$12354$1nosrN)
        (number? . g$12353$1nosrN)
        (number->string . g$12352$1nosrN)
        (null? . g$12351$1nosrN)
        (not . g$12350$1nosrN)
        (negative? . g$12349$1nosrN)
        (nan? . g$12348$1nosrN)
        (min . g$12347$1nosrN)
        (max . g$12346$1nosrN)
        (map . g$12345$1nosrN)
        (make-vector . g$12344$1nosrN)
        (make-string . g$12343$1nosrN)
        (make-rectangular . g$12342$1nosrN)
        (make-polar . g$12341$1nosrN)
        (magnitude . g$12340$1nosrN)
        (log . g$12339$1nosrN)
        (list? . g$12338$1nosrN)
        (list-tail . g$12337$1nosrN)
        (list-ref . g$12336$1nosrN)
        (list->vector . g$12335$1nosrN)
        (list->string . g$12334$1nosrN)
        (list . g$12333$1nosrN)
        (length . g$12332$1nosrN)
        (lcm . g$12331$1nosrN)
        (integer? . g$12330$1nosrN)
        (integer-valued? . g$12329$1nosrN)
        (integer->char . g$12328$1nosrN)
        (infinite? . g$12327$1nosrN)
        (inexact? . g$12326$1nosrN)
        (inexact . g$12325$1nosrN)
        (imag-part . g$12324$1nosrN)
        (gcd . g$12323$1nosrN)
        (for-each . g$12322$1nosrN)
        (floor . g$12321$1nosrN)
        (finite? . g$12320$1nosrN)
        (expt . g$12319$1nosrN)
        (exp . g$12318$1nosrN)
        (exact? . g$12317$1nosrN)
        (exact-integer-sqrt . g$12316$1nosrN)
        (exact . g$12315$1nosrN)
        (even? . g$12314$1nosrN)
        (error . g$12313$1nosrN)
        (eqv? . g$12312$1nosrN)
        (equal? . g$12311$1nosrN)
        (eq? . g$12310$1nosrN)
        (dynamic-wind . g$12309$1nosrN)
        (div0-and-mod0 . g$12308$1nosrN)
        (mod0 . g$12307$1nosrN)
        (div0 . g$12306$1nosrN)
        (div-and-mod . g$12305$1nosrN)
        (mod . g$12304$1nosrN)
        (div . g$12303$1nosrN)
        (denominator . g$12302$1nosrN)
        (cos . g$12301$1nosrN)
        (cons . g$12300$1nosrN)
        (complex? . g$12299$1nosrN)
        (char? . g$12298$1nosrN)
        (char>? . g$6110$1nosrN)
        (char>=? . g$6112$1nosrN)
        (char=? . g$6108$1nosrN)
        (char<? . g$6109$1nosrN)
        (char<=? . g$6111$1nosrN)
        (char->integer . g$12297$1nosrN)
        (ceiling . g$12296$1nosrN)
        (call-with-values . g$12295$1nosrN)
        (call/cc . g$12294$1nosrN)
        (call-with-current-continuation . g$12293$1nosrN)
        (cddddr . g$6008$1nosrN)
        (cdddar . g$6007$1nosrN)
        (cddadr . g$6006$1nosrN)
        (cddaar . g$6005$1nosrN)
        (cdaddr . g$6004$1nosrN)
        (cdadar . g$6003$1nosrN)
        (cdaadr . g$6002$1nosrN)
        (cdaaar . g$6001$1nosrN)
        (cadddr . g$6000$1nosrN)
        (caddar . g$5999$1nosrN)
        (cadadr . g$5998$1nosrN)
        (cadaar . g$5997$1nosrN)
        (caaddr . g$5996$1nosrN)
        (caadar . g$5995$1nosrN)
        (caaadr . g$5994$1nosrN)
        (caaaar . g$5993$1nosrN)
        (cdddr . g$5992$1nosrN)
        (cddar . g$5991$1nosrN)
        (cdadr . g$5990$1nosrN)
        (cdaar . g$5989$1nosrN)
        (caddr . g$5988$1nosrN)
        (cadar . g$5987$1nosrN)
        (caadr . g$5986$1nosrN)
        (caaar . g$5985$1nosrN)
        (cddr . g$5984$1nosrN)
        (cdar . g$5983$1nosrN)
        (cadr . g$5982$1nosrN)
        (caar . g$5981$1nosrN)
        (cdr . g$12292$1nosrN)
        (car . g$12291$1nosrN)
        (boolean? . g$12290$1nosrN)
        (boolean=? . g$6061$1nosrN)
        (atan . g$12289$1nosrN)
        (assertion-violation . g$12288$1nosrN)
        (asin . g$12287$1nosrN)
        (apply . g$12286$1nosrN)
        (append . g$12285$1nosrN)
        (angle . g$12284$1nosrN)
        (acos . g$12283$1nosrN)
        (abs . g$12282$1nosrN)
        (/ . g$12281$1nosrN)
        (* . g$12280$1nosrN)
        (- . g$12279$1nosrN)
        (+ . g$12278$1nosrN)
        (>= . g$12277$1nosrN)
        (> . g$12276$1nosrN)
        (= . g$12275$1nosrN)
        (<= . g$12274$1nosrN)
        (< . g$12273$1nosrN)
        (unquote-splicing . g$12190$1nosrN)
        (unquote . g$12189$1nosrN)
        (_ . g$12188$1nosrN)
        (else . g$12187$1nosrN)
        (=> . g$12186$1nosrN)
        (... . g$12185$1nosrN)
        (assert . g$12184$1nosrN)
        (or . g$12180$1nosrN)
        (and . g$12179$1nosrN)
        (cond . g$12177$1nosrN)
        (let* . g$12176$1nosrN)
        (let . g$12175$1nosrN)
        (identifier-syntax . g$12174$1nosrN)
        (quasiquote . g$12171$1nosrN)
        (syntax-rules . g$12170$1nosrN)
        (let-values . g$12166$1nosrN)
        (let*-values . g$12165$1nosrN)
        (case . g$12161$1nosrN)
        (if . g$12157$1nosrN)
        (letrec* . g$12156$1nosrN)
        (letrec . g$12155$1nosrN)
        (lambda . g$12152$1nosrN)
        (quote . g$12149$1nosrN)
        (letrec-syntax . g$12147$1nosrN)
        (let-syntax . g$12146$1nosrN)
        (set! . g$12145$1nosrN)
        (begin . g$12142$1nosrN)
        (define-syntax . g$12140$1nosrN)
        (define . g$12139$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12780$1nosrN
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6675$1nosrN)
        (remv . g$6676$1nosrN)
        (remp . g$6661$1nosrN)
        (remq . g$6677$1nosrN)
        (partition . g$6660$1nosrN)
        (memv . g$12529$1nosrN)
        (memq . g$12528$1nosrN)
        (memp . g$6667$1nosrN)
        (member . g$6666$1nosrN)
        (exists . g$6671$1nosrN)
        (for-all . g$6670$1nosrN)
        (fold-right . g$6674$1nosrN)
        (fold-left . g$6673$1nosrN)
        (find . g$6659$1nosrN)
        (filter . g$6662$1nosrN)
        (cons* . g$6672$1nosrN)
        (assv . g$6663$1nosrN)
        (assq . g$12527$1nosrN)
        (assp . g$6665$1nosrN)
        (assoc . g$6664$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12781$1nosrN
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7704$1nosrN)
        (call-with-input-file . g$7703$1nosrN)
        (write-char . g$12615$1nosrN)
        (write . g$12614$1nosrN)
        (with-output-to-file . g$7702$1nosrN)
        (with-input-from-file . g$7701$1nosrN)
        (read-char . g$12613$1nosrN)
        (read . g$12612$1nosrN)
        (peek-char . g$12611$1nosrN)
        (open-output-file . g$12610$1nosrN)
        (open-input-file . g$12609$1nosrN)
        (newline . g$12608$1nosrN)
        (display . g$12607$1nosrN)
        (close-output-port . g$12606$1nosrN)
        (close-input-port . g$12605$1nosrN)
        (eof-object? . g$12604$1nosrN)
        (eof-object . g$12603$1nosrN)
        (current-error-port . g$12602$1nosrN)
        (current-output-port . g$12601$1nosrN)
        (current-input-port . g$12600$1nosrN)
        (output-port? . g$12599$1nosrN)
        (input-port? . g$12598$1nosrN)
        (make-i/o-write-error . g$7536$1nosrN)
        (make-i/o-read-error . g$7522$1nosrN)
        (make-i/o-port-error . g$7641$1nosrN)
        (make-i/o-invalid-position-error . g$7551$1nosrN)
        (make-i/o-filename-error . g$7568$1nosrN)
        (make-i/o-file-protection-error . g$7584$1nosrN)
        (make-i/o-file-is-read-only-error . g$7598$1nosrN)
        (make-i/o-file-does-not-exist-error . g$7626$1nosrN)
        (make-i/o-file-already-exists-error . g$7612$1nosrN)
        (make-i/o-error . g$7508$1nosrN)
        (i/o-write-error? . g$7537$1nosrN)
        (i/o-read-error? . g$7523$1nosrN)
        (i/o-port-error? . g$7643$1nosrN)
        (i/o-invalid-position-error? . g$7553$1nosrN)
        (i/o-error-position . g$7554$1nosrN)
        (i/o-filename-error? . g$7570$1nosrN)
        (i/o-file-protection-error? . g$7585$1nosrN)
        (i/o-file-is-read-only-error? . g$7599$1nosrN)
        (i/o-file-does-not-exist-error? . g$7627$1nosrN)
        (i/o-file-already-exists-error? . g$7613$1nosrN)
        (i/o-error? . g$7509$1nosrN)
        (i/o-error-port . g$7644$1nosrN)
        (i/o-error-filename . g$7571$1nosrN)
        (&i/o-port . g$12239$1nosrN)
        (&i/o-file-does-not-exist . g$12238$1nosrN)
        (&i/o-file-already-exists . g$12237$1nosrN)
        (&i/o-file-is-read-only . g$12236$1nosrN)
        (&i/o-file-protection . g$12235$1nosrN)
        (&i/o-filename . g$12234$1nosrN)
        (&i/o-invalid-position . g$12233$1nosrN)
        (&i/o-write . g$12232$1nosrN)
        (&i/o-read . g$12231$1nosrN)
        (&i/o . g$12230$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12782$1nosrN
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12558$1nosrN)
        (utf32->string . g$12518$1nosrN)
        (utf16->string . g$12517$1nosrN)
        (utf8->string . g$12516$1nosrN)
        (uint-list->bytevector . g$12515$1nosrN)
        (u8-list->bytevector . g$12514$1nosrN)
        (string->utf8 . g$12513$1nosrN)
        (string->utf32 . g$12512$1nosrN)
        (string->utf16 . g$12511$1nosrN)
        (sint-list->bytevector . g$12510$1nosrN)
        (native-endianness . g$6751$1nosrN)
        (bytevector? . g$12509$1nosrN)
        (bytevector=? . g$12508$1nosrN)
        (bytevector-uint-set! . g$12507$1nosrN)
        (bytevector-uint-ref . g$12506$1nosrN)
        (bytevector-u8-set! . g$12505$1nosrN)
        (bytevector-u8-ref . g$12504$1nosrN)
        (bytevector-u64-set! . g$6772$1nosrN)
        (bytevector-u64-ref . g$6768$1nosrN)
        (bytevector-u64-native-set! . g$6774$1nosrN)
        (bytevector-u64-native-ref . g$6770$1nosrN)
        (bytevector-u32-set! . g$6764$1nosrN)
        (bytevector-u32-ref . g$6760$1nosrN)
        (bytevector-u32-native-set! . g$6766$1nosrN)
        (bytevector-u32-native-ref . g$6762$1nosrN)
        (bytevector-u16-set! . g$6756$1nosrN)
        (bytevector-u16-ref . g$6752$1nosrN)
        (bytevector-u16-native-set! . g$6758$1nosrN)
        (bytevector-u16-native-ref . g$6754$1nosrN)
        (bytevector-sint-set! . g$12503$1nosrN)
        (bytevector-sint-ref . g$12502$1nosrN)
        (bytevector-s8-set! . g$12501$1nosrN)
        (bytevector-s8-ref . g$12500$1nosrN)
        (bytevector-s64-set! . g$6773$1nosrN)
        (bytevector-s64-ref . g$6769$1nosrN)
        (bytevector-s64-native-set! . g$6775$1nosrN)
        (bytevector-s64-native-ref . g$6771$1nosrN)
        (bytevector-s32-set! . g$6765$1nosrN)
        (bytevector-s32-ref . g$6761$1nosrN)
        (bytevector-s32-native-set! . g$6767$1nosrN)
        (bytevector-s32-native-ref . g$6763$1nosrN)
        (bytevector-s16-set! . g$6757$1nosrN)
        (bytevector-s16-ref . g$6753$1nosrN)
        (bytevector-s16-native-set! . g$6759$1nosrN)
        (bytevector-s16-native-ref . g$6755$1nosrN)
        (bytevector-length . g$12499$1nosrN)
        (bytevector-ieee-single-set! . g$12498$1nosrN)
        (bytevector-ieee-single-ref . g$12497$1nosrN)
        (bytevector-ieee-single-native-set! . g$6778$1nosrN)
        (bytevector-ieee-single-native-ref . g$6776$1nosrN)
        (bytevector-ieee-double-set! . g$12496$1nosrN)
        (bytevector-ieee-double-ref . g$12495$1nosrN)
        (bytevector-ieee-double-native-set! . g$6779$1nosrN)
        (bytevector-ieee-double-native-ref . g$6777$1nosrN)
        (bytevector-fill! . g$12494$1nosrN)
        (bytevector-copy! . g$12493$1nosrN)
        (bytevector-copy . g$12492$1nosrN)
        (bytevector->uint-list . g$12491$1nosrN)
        (bytevector->u8-list . g$12490$1nosrN)
        (bytevector->sint-list . g$12489$1nosrN)
        (endianness . g$12183$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12783$1nosrN
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12665$1nosrN)
        (string-titlecase . g$12664$1nosrN)
        (string-normalize-nfkd . g$12663$1nosrN)
        (string-normalize-nfkc . g$12662$1nosrN)
        (string-normalize-nfd . g$12661$1nosrN)
        (string-normalize-nfc . g$12660$1nosrN)
        (string-foldcase . g$12659$1nosrN)
        (string-downcase . g$12658$1nosrN)
        (string-ci>? . g$7234$1nosrN)
        (string-ci>=? . g$7236$1nosrN)
        (string-ci=? . g$7232$1nosrN)
        (string-ci<? . g$7233$1nosrN)
        (string-ci<=? . g$7235$1nosrN)
        (char-whitespace? . g$12657$1nosrN)
        (char-upper-case? . g$12656$1nosrN)
        (char-title-case? . g$12655$1nosrN)
        (char-numeric? . g$12654$1nosrN)
        (char-lower-case? . g$12653$1nosrN)
        (char-general-category . g$12652$1nosrN)
        (char-upcase . g$12651$1nosrN)
        (char-titlecase . g$12650$1nosrN)
        (char-foldcase . g$12649$1nosrN)
        (char-downcase . g$12648$1nosrN)
        (char-ci>? . g$7285$1nosrN)
        (char-ci>=? . g$7287$1nosrN)
        (char-ci=? . g$7283$1nosrN)
        (char-ci<? . g$7284$1nosrN)
        (char-ci<=? . g$7286$1nosrN)
        (char-alphabetic? . g$12647$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12784$1nosrN
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12526$1nosrN)
        (raise-continuable . g$12525$1nosrN)
        (raise . g$12524$1nosrN)
        (guard . g$12198$1nosrN)
        (else . g$12187$1nosrN)
        (=> . g$12186$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12785$1nosrN
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7377$1nosrN)
        (bitwise-reverse-bit-field . g$12404$1nosrN)
        (bitwise-length . g$12403$1nosrN)
        (bitwise-if . g$7371$1nosrN)
        (bitwise-first-bit-set . g$12402$1nosrN)
        (bitwise-copy-bit-field . g$7374$1nosrN)
        (bitwise-copy-bit . g$7372$1nosrN)
        (bitwise-bit-set? . g$12401$1nosrN)
        (bitwise-bit-field . g$12400$1nosrN)
        (bitwise-bit-count . g$12399$1nosrN)
        (bitwise-xor . g$12398$1nosrN)
        (bitwise-ior . g$12397$1nosrN)
        (bitwise-and . g$12396$1nosrN)
        (bitwise-not . g$12395$1nosrN)
        (bitwise-arithmetic-shift-right . g$7376$1nosrN)
        (bitwise-arithmetic-shift-left . g$7375$1nosrN)
        (bitwise-arithmetic-shift . g$12394$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12786$1nosrN
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12442$1nosrN)
        (fxxor . g$12441$1nosrN)
        (fxrotate-bit-field . g$7425$1nosrN)
        (fxreverse-bit-field . g$12440$1nosrN)
        (fxpositive? . g$12439$1nosrN)
        (fxodd? . g$12438$1nosrN)
        (fxnot . g$12437$1nosrN)
        (fxnegative? . g$12436$1nosrN)
        (fxmod0 . g$12435$1nosrN)
        (fxmod . g$12434$1nosrN)
        (fxmin . g$12433$1nosrN)
        (fxmax . g$12432$1nosrN)
        (fxlength . g$12431$1nosrN)
        (fxior . g$12430$1nosrN)
        (fxif . g$7419$1nosrN)
        (fxfirst-bit-set . g$12429$1nosrN)
        (fxeven? . g$12428$1nosrN)
        (fxdiv0-and-mod0 . g$12427$1nosrN)
        (fxdiv0 . g$12426$1nosrN)
        (fxdiv-and-mod . g$12425$1nosrN)
        (fxdiv . g$12424$1nosrN)
        (fxcopy-bit-field . g$7422$1nosrN)
        (fxcopy-bit . g$7420$1nosrN)
        (fxbit-set? . g$12423$1nosrN)
        (fxbit-field . g$7421$1nosrN)
        (fxbit-count . g$12422$1nosrN)
        (fxarithmetic-shift-right . g$7424$1nosrN)
        (fxarithmetic-shift-left . g$7423$1nosrN)
        (fxarithmetic-shift . g$12421$1nosrN)
        (fxand . g$12420$1nosrN)
        (fx>? . g$12419$1nosrN)
        (fx>=? . g$12418$1nosrN)
        (fx=? . g$12417$1nosrN)
        (fx<? . g$12416$1nosrN)
        (fx<=? . g$12415$1nosrN)
        (fx-/carry . g$12414$1nosrN)
        (fx- . g$12413$1nosrN)
        (fx+/carry . g$12412$1nosrN)
        (fx+ . g$12411$1nosrN)
        (fx*/carry . g$12410$1nosrN)
        (fx* . g$12409$1nosrN)
        (greatest-fixnum . g$12408$1nosrN)
        (least-fixnum . g$12407$1nosrN)
        (fixnum-width . g$12406$1nosrN)
        (fixnum? . g$12405$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12787$1nosrN
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7494$1nosrN)
        (no-infinities-violation? . g$7480$1nosrN)
        (make-no-nans-violation . g$7493$1nosrN)
        (make-no-infinities-violation . g$7479$1nosrN)
        (real->flonum . g$12488$1nosrN)
        (flzero? . g$12487$1nosrN)
        (fltruncate . g$12486$1nosrN)
        (fltan . g$12485$1nosrN)
        (flsqrt . g$12484$1nosrN)
        (flsin . g$12483$1nosrN)
        (flround . g$12482$1nosrN)
        (flpositive? . g$12481$1nosrN)
        (flonum? . g$12480$1nosrN)
        (flodd? . g$12479$1nosrN)
        (flnumerator . g$12478$1nosrN)
        (flnegative? . g$12477$1nosrN)
        (flnan? . g$12476$1nosrN)
        (flmod0 . g$12475$1nosrN)
        (flmod . g$12474$1nosrN)
        (flmin . g$12473$1nosrN)
        (flmax . g$12472$1nosrN)
        (fllog . g$12471$1nosrN)
        (flinteger? . g$12470$1nosrN)
        (flinfinite? . g$12469$1nosrN)
        (flfloor . g$12468$1nosrN)
        (flfinite? . g$12467$1nosrN)
        (flexpt . g$12466$1nosrN)
        (flexp . g$12465$1nosrN)
        (fleven? . g$12464$1nosrN)
        (fldiv0-and-mod0 . g$12463$1nosrN)
        (fldiv0 . g$12462$1nosrN)
        (fldiv-and-mod . g$12461$1nosrN)
        (fldiv . g$12460$1nosrN)
        (fldenominator . g$12459$1nosrN)
        (flcos . g$12458$1nosrN)
        (flceiling . g$12457$1nosrN)
        (flatan . g$12456$1nosrN)
        (flasin . g$12455$1nosrN)
        (flacos . g$12454$1nosrN)
        (flabs . g$12453$1nosrN)
        (fl>? . g$12452$1nosrN)
        (fl>=? . g$12451$1nosrN)
        (fl=? . g$12450$1nosrN)
        (fl<? . g$12449$1nosrN)
        (fl<=? . g$12448$1nosrN)
        (fl/ . g$12447$1nosrN)
        (fl- . g$12446$1nosrN)
        (fl+ . g$12445$1nosrN)
        (fl* . g$12444$1nosrN)
        (fixnum->flonum . g$12443$1nosrN)
        (&no-nans . g$12243$1nosrN)
        (&no-infinities . g$12242$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12788$1nosrN
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12627$1nosrN)
        (string-ci-hash . g$12626$1nosrN)
        (string-hash . g$12625$1nosrN)
        (equal-hash . g$12624$1nosrN)
        (hashtable-equivalence-function . g$12623$1nosrN)
        (make-hashtable . g$12622$1nosrN)
        (hashtable-hash-function . g$12621$1nosrN)
        (make-eqv-hashtable . g$6562$1nosrN)
        (make-eq-hashtable . g$6561$1nosrN)
        (hashtable? . g$12620$1nosrN)
        (hashtable-update! . g$6568$1nosrN)
        (hashtable-size . g$6563$1nosrN)
        (hashtable-set! . g$6565$1nosrN)
        (hashtable-ref . g$6564$1nosrN)
        (hashtable-mutable? . g$12619$1nosrN)
        (hashtable-keys . g$12618$1nosrN)
        (hashtable-entries . g$12617$1nosrN)
        (hashtable-delete! . g$6566$1nosrN)
        (hashtable-copy . g$12616$1nosrN)
        (hashtable-contains? . g$6567$1nosrN)
        (hashtable-clear! . g$6569$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12789$1nosrN
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12604$1nosrN)
        (eof-object . g$12603$1nosrN)
        (current-error-port . g$12602$1nosrN)
        (current-output-port . g$12601$1nosrN)
        (current-input-port . g$12600$1nosrN)
        (output-port? . g$12599$1nosrN)
        (input-port? . g$12598$1nosrN)
        (utf-8-codec . g$12597$1nosrN)
        (utf-16-codec . g$12596$1nosrN)
        (transcoder-error-handling-mode . g$12595$1nosrN)
        (transcoder-eol-style . g$12594$1nosrN)
        (transcoder-codec . g$12593$1nosrN)
        (transcoded-port . g$12592$1nosrN)
        (textual-port? . g$12591$1nosrN)
        (string->bytevector . g$12590$1nosrN)
        (standard-output-port . g$12589$1nosrN)
        (standard-input-port . g$12588$1nosrN)
        (standard-error-port . g$12587$1nosrN)
        (set-port-position! . g$12586$1nosrN)
        (put-u8 . g$12585$1nosrN)
        (put-string . g$12584$1nosrN)
        (put-datum . g$12583$1nosrN)
        (put-char . g$12582$1nosrN)
        (put-bytevector . g$12581$1nosrN)
        (port? . g$7680$1nosrN)
        (port-transcoder . g$12580$1nosrN)
        (port-position . g$12579$1nosrN)
        (port-has-set-port-position!? . g$12578$1nosrN)
        (port-has-port-position? . g$12577$1nosrN)
        (port-eof? . g$12576$1nosrN)
        (output-port-buffer-mode . g$12575$1nosrN)
        (open-string-output-port . g$7679$1nosrN)
        (open-string-input-port . g$12574$1nosrN)
        (open-file-output-port . g$12573$1nosrN)
        (open-file-input/output-port . g$12572$1nosrN)
        (open-file-input-port . g$12571$1nosrN)
        (open-bytevector-output-port . g$12570$1nosrN)
        (open-bytevector-input-port . g$12569$1nosrN)
        (native-transcoder . g$12568$1nosrN)
        (native-eol-style . g$12567$1nosrN)
        (make-transcoder . g$12566$1nosrN)
        (latin-1-codec . g$12565$1nosrN)
        (make-i/o-write-error . g$7536$1nosrN)
        (make-i/o-read-error . g$7522$1nosrN)
        (make-i/o-port-error . g$7641$1nosrN)
        (make-i/o-invalid-position-error . g$7551$1nosrN)
        (make-i/o-filename-error . g$7568$1nosrN)
        (make-i/o-file-protection-error . g$7584$1nosrN)
        (make-i/o-file-is-read-only-error . g$7598$1nosrN)
        (make-i/o-file-does-not-exist-error . g$7626$1nosrN)
        (make-i/o-file-already-exists-error . g$7612$1nosrN)
        (make-i/o-error . g$7508$1nosrN)
        (make-i/o-encoding-error . g$7672$1nosrN)
        (make-i/o-decoding-error . g$7657$1nosrN)
        (make-custom-textual-output-port . g$12564$1nosrN)
        (make-custom-textual-input/output-port . g$12563$1nosrN)
        (make-custom-textual-input-port . g$12562$1nosrN)
        (make-custom-binary-output-port . g$12561$1nosrN)
        (make-custom-binary-input/output-port . g$12560$1nosrN)
        (make-custom-binary-input-port . g$12559$1nosrN)
        (lookahead-u8 . g$12557$1nosrN)
        (lookahead-char . g$12556$1nosrN)
        (i/o-write-error? . g$7537$1nosrN)
        (i/o-read-error? . g$7523$1nosrN)
        (i/o-port-error? . g$7643$1nosrN)
        (i/o-invalid-position-error? . g$7553$1nosrN)
        (i/o-error-position . g$7554$1nosrN)
        (i/o-filename-error? . g$7570$1nosrN)
        (i/o-file-protection-error? . g$7585$1nosrN)
        (i/o-file-is-read-only-error? . g$7599$1nosrN)
        (i/o-file-does-not-exist-error? . g$7627$1nosrN)
        (i/o-file-already-exists-error? . g$7613$1nosrN)
        (i/o-error? . g$7509$1nosrN)
        (i/o-error-port . g$7644$1nosrN)
        (i/o-error-filename . g$7571$1nosrN)
        (i/o-encoding-error? . g$7674$1nosrN)
        (i/o-encoding-error-char . g$7675$1nosrN)
        (i/o-decoding-error? . g$7658$1nosrN)
        (get-u8 . g$12555$1nosrN)
        (get-string-n! . g$12554$1nosrN)
        (get-string-n . g$12553$1nosrN)
        (get-string-all . g$12552$1nosrN)
        (get-line . g$12551$1nosrN)
        (get-datum . g$12550$1nosrN)
        (get-char . g$12549$1nosrN)
        (get-bytevector-some . g$12548$1nosrN)
        (get-bytevector-n! . g$12547$1nosrN)
        (get-bytevector-n . g$12546$1nosrN)
        (get-bytevector-all . g$12545$1nosrN)
        (flush-output-port . g$12544$1nosrN)
        (close-port . g$12543$1nosrN)
        (call-with-string-output-port . g$12542$1nosrN)
        (call-with-port . g$12541$1nosrN)
        (call-with-bytevector-output-port . g$12540$1nosrN)
        (bytevector->string . g$12539$1nosrN)
        (buffer-mode? . g$12538$1nosrN)
        (binary-port? . g$12537$1nosrN)
        (&i/o-encoding . g$12241$1nosrN)
        (&i/o-decoding . g$12240$1nosrN)
        (&i/o-port . g$12239$1nosrN)
        (&i/o-file-does-not-exist . g$12238$1nosrN)
        (&i/o-file-already-exists . g$12237$1nosrN)
        (&i/o-file-is-read-only . g$12236$1nosrN)
        (&i/o-file-protection . g$12235$1nosrN)
        (&i/o-filename . g$12234$1nosrN)
        (&i/o-invalid-position . g$12233$1nosrN)
        (&i/o-write . g$12232$1nosrN)
        (&i/o-read . g$12231$1nosrN)
        (&i/o . g$12230$1nosrN)
        (error-handling-mode . g$12202$1nosrN)
        (file-options . g$12201$1nosrN)
        (buffer-mode . g$12200$1nosrN)
        (eol-style . g$12199$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12790$1nosrN
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7762$1nosrN)
        (enum-set=? . g$7769$1nosrN)
        (enum-set-universe . g$7763$1nosrN)
        (enum-set-union . g$7770$1nosrN)
        (enum-set-subset? . g$7768$1nosrN)
        (enum-set-projection . g$7774$1nosrN)
        (enum-set-member? . g$7767$1nosrN)
        (enum-set-intersection . g$7771$1nosrN)
        (enum-set-indexer . g$7764$1nosrN)
        (enum-set-difference . g$7772$1nosrN)
        (enum-set-constructor . g$7765$1nosrN)
        (enum-set-complement . g$7773$1nosrN)
        (enum-set->list . g$7766$1nosrN)
        (define-enumeration . g$12213$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12791$1nosrN
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6999$1nosrN)
        (warning? . g$6910$1nosrN)
        (violation? . g$6952$1nosrN)
        (undefined-violation? . g$7076$1nosrN)
        (syntax-violation? . g$7060$1nosrN)
        (syntax-violation-subform . g$7062$1nosrN)
        (syntax-violation-form . g$7061$1nosrN)
        (syntax-violation . g$9161$1nosrN)
        (simple-conditions . g$12523$1nosrN)
        (serious-condition? . g$6924$1nosrN)
        (non-continuable-violation? . g$7014$1nosrN)
        (message-condition? . g$6895$1nosrN)
        (make-who-condition . g$6997$1nosrN)
        (make-warning . g$6909$1nosrN)
        (make-violation . g$6951$1nosrN)
        (make-undefined-violation . g$7075$1nosrN)
        (make-syntax-violation . g$7057$1nosrN)
        (make-serious-condition . g$6923$1nosrN)
        (make-non-continuable-violation . g$7013$1nosrN)
        (make-message-condition . g$6893$1nosrN)
        (make-lexical-violation . g$7041$1nosrN)
        (make-irritants-condition . g$6980$1nosrN)
        (make-implementation-restriction-violation . g$7027$1nosrN)
        (make-error . g$6937$1nosrN)
        (make-assertion-violation . g$6965$1nosrN)
        (lexical-violation? . g$7042$1nosrN)
        (irritants-condition? . g$6982$1nosrN)
        (implementation-restriction-violation? . g$7028$1nosrN)
        (error? . g$6938$1nosrN)
        (condition-who . g$7000$1nosrN)
        (condition-predicate . g$12522$1nosrN)
        (condition-message . g$6896$1nosrN)
        (condition-irritants . g$6983$1nosrN)
        (condition-accessor . g$12521$1nosrN)
        (condition . g$12520$1nosrN)
        (assertion-violation? . g$6966$1nosrN)
        (condition? . g$12519$1nosrN)
        (&non-continuable . g$12229$1nosrN)
        (&undefined . g$12228$1nosrN)
        (&syntax . g$12227$1nosrN)
        (&lexical . g$12226$1nosrN)
        (&implementation-restriction . g$12225$1nosrN)
        (&who . g$12223$1nosrN)
        (&irritants . g$12222$1nosrN)
        (&assertion . g$12221$1nosrN)
        (&violation . g$12220$1nosrN)
        (&error . g$12219$1nosrN)
        (&serious . g$12218$1nosrN)
        (&warning . g$12217$1nosrN)
        (&message . g$12216$1nosrN)
        (&condition . g$12215$1nosrN)
        (define-condition-type . g$12214$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12792$1nosrN
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12639$1nosrN)
        (record-type-uid . g$12638$1nosrN)
        (record-type-sealed? . g$12637$1nosrN)
        (record-type-parent . g$12636$1nosrN)
        (record-type-opaque? . g$12635$1nosrN)
        (record-type-name . g$12634$1nosrN)
        (record-type-generative? . g$12633$1nosrN)
        (record-type-field-names . g$12632$1nosrN)
        (record-rtd . g$12631$1nosrN)
        (record-field-mutable? . g$12630$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12793$1nosrN
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12646$1nosrN)
        (record-predicate . g$12645$1nosrN)
        (record-mutator . g$12644$1nosrN)
        (record-constructor . g$12643$1nosrN)
        (record-accessor . g$12642$1nosrN)
        (make-record-type-descriptor . g$12641$1nosrN)
        (make-record-constructor-descriptor . g$12640$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12794$1nosrN
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12212$1nosrN)
        (parent-rtd . g$12211$1nosrN)
        (nongenerative . g$12210$1nosrN)
        (opaque . g$12209$1nosrN)
        (sealed . g$12208$1nosrN)
        (protocol . g$12207$1nosrN)
        (parent . g$12206$1nosrN)
        (immutable . g$12205$1nosrN)
        (mutable . g$12204$1nosrN)
        (fields . g$12203$1nosrN)
        (record-constructor-descriptor . g$12164$1nosrN)
        (record-type-descriptor . g$12163$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7383$1nosrN
      'g$12795$1nosrN
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9034$1nosrN)
        (&no-nans-rcd . g$12759$1nosrN)
        (&no-nans-rtd . g$12758$1nosrN)
        (&no-infinities-rcd . g$12757$1nosrN)
        (&no-infinities-rtd . g$12756$1nosrN)
        (&i/o-encoding-rcd . g$12755$1nosrN)
        (&i/o-encoding-rtd . g$12754$1nosrN)
        (&i/o-decoding-rcd . g$12753$1nosrN)
        (&i/o-decoding-rtd . g$12752$1nosrN)
        (&i/o-port-rcd . g$12751$1nosrN)
        (&i/o-port-rtd . g$12750$1nosrN)
        (&i/o-file-does-not-exist-rcd . g$12749$1nosrN)
        (&i/o-file-does-not-exist-rtd . g$12748$1nosrN)
        (&i/o-file-already-exists-rcd . g$12747$1nosrN)
        (&i/o-file-already-exists-rtd . g$12746$1nosrN)
        (&i/o-file-is-read-only-rcd . g$12745$1nosrN)
        (&i/o-file-is-read-only-rtd . g$12744$1nosrN)
        (&i/o-file-protection-rcd . g$12743$1nosrN)
        (&i/o-file-protection-rtd . g$12742$1nosrN)
        (&i/o-filename-rcd . g$12741$1nosrN)
        (&i/o-filename-rtd . g$12740$1nosrN)
        (&i/o-invalid-position-rcd . g$12739$1nosrN)
        (&i/o-invalid-position-rtd . g$12738$1nosrN)
        (&i/o-write-rcd . g$12737$1nosrN)
        (&i/o-write-rtd . g$12736$1nosrN)
        (&i/o-read-rcd . g$12735$1nosrN)
        (&i/o-read-rtd . g$12734$1nosrN)
        (&i/o-rcd . g$12733$1nosrN)
        (&i/o-rtd . g$12732$1nosrN)
        (&undefined-rcd . g$12731$1nosrN)
        (&undefined-rtd . g$12730$1nosrN)
        (&syntax-rcd . g$12729$1nosrN)
        (&syntax-rtd . g$12728$1nosrN)
        (&lexical-rcd . g$12727$1nosrN)
        (&lexical-rtd . g$12726$1nosrN)
        (&implementation-restriction-rcd . g$12725$1nosrN)
        (&implementation-restriction-rtd . g$12724$1nosrN)
        (&non-continuable-rcd . g$12723$1nosrN)
        (&non-continuable-rtd . g$12722$1nosrN)
        (&who-rcd . g$12721$1nosrN)
        (&who-rtd . g$12720$1nosrN)
        (&irritants-rcd . g$12719$1nosrN)
        (&irritants-rtd . g$12718$1nosrN)
        (&assertion-rcd . g$12717$1nosrN)
        (&assertion-rtd . g$12716$1nosrN)
        (&violation-rcd . g$12715$1nosrN)
        (&violation-rtd . g$12714$1nosrN)
        (&error-rcd . g$12713$1nosrN)
        (&error-rtd . g$12712$1nosrN)
        (&serious-rcd . g$12711$1nosrN)
        (&serious-rtd . g$12710$1nosrN)
        (&warning-rcd . g$12709$1nosrN)
        (&warning-rtd . g$12708$1nosrN)
        (&message-rcd . g$12707$1nosrN)
        (&message-rtd . g$12706$1nosrN)
        (&condition-rcd . g$12705$1nosrN)
        (&condition-rtd . g$12704$1nosrN)
        (library-letrec* . g$12703$1nosrN)
        (annotation-stripped . g$12702$1nosrN)
        (annotation-source . g$12701$1nosrN)
        (annotation-expression . g$12700$1nosrN)
        (annotation? . g$12699$1nosrN)
        (read-annotated . g$12698$1nosrN)
        (tanh . g$12697$1nosrN)
        (cosh . g$12696$1nosrN)
        (sinh . g$12695$1nosrN)
        (make-guid . g$12694$1nosrN)
        (unspecified? . g$12693$1nosrN)
        (make-trace . g$12692$1nosrN)
        (make-list . g$12691$1nosrN)
        (last-pair . g$12690$1nosrN)
        (load-r5rs . g$12689$1nosrN)
        (license . g$12688$1nosrN)
        (stacktrace . g$12687$1nosrN)
        (ironscheme-build . g$12107$1nosrN)
        (define-clr-class-internal . g$12686$1nosrN)
        (clr-field-set!-internal . g$12685$1nosrN)
        (clr-field-get-internal . g$12684$1nosrN)
        (clr-cast-internal . g$12683$1nosrN)
        (clr-call-internal . g$12682$1nosrN)
        (clr-new-internal . g$12681$1nosrN)
        (clr-new-array-internal . g$12680$1nosrN)
        (clr-is-internal . g$12679$1nosrN)
        (clr-reference-internal . g$12678$1nosrN)
        (clr-using-internal . g$12677$1nosrN)
        (clr-clear-usings-internal . g$12676$1nosrN)
        (syntax-error . g$9158$1nosrN)
        (syntax-dispatch . g$9029$1nosrN)
        (compile-core . g$12675$1nosrN)
        (eval-core . g$12674$1nosrN)
        (set-symbol-value! . g$12673$1nosrN)
        (symbol-value . g$12672$1nosrN)
        (ungensym . g$12671$1nosrN)
        (gensym . g$12670$1nosrN)
        (void . g$12669$1nosrN)
        (load-serialized-library . g$12668$1nosrN)
        (serialize-library . g$12667$1nosrN)
        (compile-system-libraries . g$12109$1nosrN)
        (compile->closure . g$12111$1nosrN)
        (compile . g$12110$1nosrN)
        (load . g$12106$1nosrN)
        (interaction-environment . g$9167$1nosrN)
        (char-ready? . g$12666$1nosrN)
        (string-upcase . g$12665$1nosrN)
        (string-titlecase . g$12664$1nosrN)
        (string-normalize-nfkd . g$12663$1nosrN)
        (string-normalize-nfkc . g$12662$1nosrN)
        (string-normalize-nfd . g$12661$1nosrN)
        (string-normalize-nfc . g$12660$1nosrN)
        (string-foldcase . g$12659$1nosrN)
        (string-downcase . g$12658$1nosrN)
        (string-ci>? . g$7234$1nosrN)
        (string-ci>=? . g$7236$1nosrN)
        (string-ci=? . g$7232$1nosrN)
        (string-ci<? . g$7233$1nosrN)
        (string-ci<=? . g$7235$1nosrN)
        (char-whitespace? . g$12657$1nosrN)
        (char-upper-case? . g$12656$1nosrN)
        (char-title-case? . g$12655$1nosrN)
        (char-numeric? . g$12654$1nosrN)
        (char-lower-case? . g$12653$1nosrN)
        (char-general-category . g$12652$1nosrN)
        (char-upcase . g$12651$1nosrN)
        (char-titlecase . g$12650$1nosrN)
        (char-foldcase . g$12649$1nosrN)
        (char-downcase . g$12648$1nosrN)
        (char-ci>? . g$7285$1nosrN)
        (char-ci>=? . g$7287$1nosrN)
        (char-ci=? . g$7283$1nosrN)
        (char-ci<? . g$7284$1nosrN)
        (char-ci<=? . g$7286$1nosrN)
        (char-alphabetic? . g$12647$1nosrN)
        (variable-transformer-procedure . g$8766$1nosrN)
        (variable-transformer? . g$8765$1nosrN)
        (make-variable-transformer . g$8764$1nosrN)
        (identifier? . g$9162$1nosrN)
        (generate-temporaries . g$9151$1nosrN)
        (free-identifier=? . g$9152$1nosrN)
        (syntax->datum . g$9164$1nosrN)
        (datum->syntax . g$9163$1nosrN)
        (bound-identifier=? . g$9153$1nosrN)
        (record-type-descriptor? . g$12646$1nosrN)
        (record-predicate . g$12645$1nosrN)
        (record-mutator . g$12644$1nosrN)
        (record-constructor . g$12643$1nosrN)
        (record-accessor . g$12642$1nosrN)
        (make-record-type-descriptor . g$12641$1nosrN)
        (make-record-constructor-descriptor . g$12640$1nosrN)
        (record? . g$12639$1nosrN)
        (record-type-uid . g$12638$1nosrN)
        (record-type-sealed? . g$12637$1nosrN)
        (record-type-parent . g$12636$1nosrN)
        (record-type-opaque? . g$12635$1nosrN)
        (record-type-name . g$12634$1nosrN)
        (record-type-generative? . g$12633$1nosrN)
        (record-type-field-names . g$12632$1nosrN)
        (record-rtd . g$12631$1nosrN)
        (record-field-mutable? . g$12630$1nosrN)
        (delete-file . g$6595$1nosrN)
        (file-exists? . g$6594$1nosrN)
        (vector-sort! . g$12629$1nosrN)
        (vector-sort . g$12628$1nosrN)
        (list-sort . g$7108$1nosrN)
        (symbol-hash . g$12627$1nosrN)
        (string-ci-hash . g$12626$1nosrN)
        (string-hash . g$12625$1nosrN)
        (equal-hash . g$12624$1nosrN)
        (hashtable-equivalence-function . g$12623$1nosrN)
        (make-hashtable . g$12622$1nosrN)
        (hashtable-hash-function . g$12621$1nosrN)
        (make-eqv-hashtable . g$6562$1nosrN)
        (make-eq-hashtable . g$6561$1nosrN)
        (hashtable? . g$12620$1nosrN)
        (hashtable-update! . g$6568$1nosrN)
        (hashtable-size . g$6563$1nosrN)
        (hashtable-set! . g$6565$1nosrN)
        (hashtable-ref . g$6564$1nosrN)
        (hashtable-mutable? . g$12619$1nosrN)
        (hashtable-keys . g$12618$1nosrN)
        (hashtable-entries . g$12617$1nosrN)
        (hashtable-delete! . g$6566$1nosrN)
        (hashtable-copy . g$12616$1nosrN)
        (hashtable-contains? . g$6567$1nosrN)
        (hashtable-clear! . g$6569$1nosrN)
        (call-with-output-file . g$7704$1nosrN)
        (call-with-input-file . g$7703$1nosrN)
        (write-char . g$12615$1nosrN)
        (write . g$12614$1nosrN)
        (with-output-to-file . g$7702$1nosrN)
        (with-input-from-file . g$7701$1nosrN)
        (read-char . g$12613$1nosrN)
        (read . g$12612$1nosrN)
        (peek-char . g$12611$1nosrN)
        (open-output-file . g$12610$1nosrN)
        (open-input-file . g$12609$1nosrN)
        (newline . g$12608$1nosrN)
        (display . g$12607$1nosrN)
        (close-output-port . g$12606$1nosrN)
        (close-input-port . g$12605$1nosrN)
        (eof-object? . g$12604$1nosrN)
        (eof-object . g$12603$1nosrN)
        (current-error-port . g$12602$1nosrN)
        (current-output-port . g$12601$1nosrN)
        (current-input-port . g$12600$1nosrN)
        (output-port? . g$12599$1nosrN)
        (input-port? . g$12598$1nosrN)
        (utf-8-codec . g$12597$1nosrN)
        (utf-16-codec . g$12596$1nosrN)
        (transcoder-error-handling-mode . g$12595$1nosrN)
        (transcoder-eol-style . g$12594$1nosrN)
        (transcoder-codec . g$12593$1nosrN)
        (transcoded-port . g$12592$1nosrN)
        (textual-port? . g$12591$1nosrN)
        (string->bytevector . g$12590$1nosrN)
        (standard-output-port . g$12589$1nosrN)
        (standard-input-port . g$12588$1nosrN)
        (standard-error-port . g$12587$1nosrN)
        (set-port-position! . g$12586$1nosrN)
        (put-u8 . g$12585$1nosrN)
        (put-string . g$12584$1nosrN)
        (put-datum . g$12583$1nosrN)
        (put-char . g$12582$1nosrN)
        (put-bytevector . g$12581$1nosrN)
        (port? . g$7680$1nosrN)
        (port-transcoder . g$12580$1nosrN)
        (port-position . g$12579$1nosrN)
        (port-has-set-port-position!? . g$12578$1nosrN)
        (port-has-port-position? . g$12577$1nosrN)
        (port-eof? . g$12576$1nosrN)
        (output-port-buffer-mode . g$12575$1nosrN)
        (open-string-output-port . g$7679$1nosrN)
        (open-string-input-port . g$12574$1nosrN)
        (open-file-output-port . g$12573$1nosrN)
        (open-file-input/output-port . g$12572$1nosrN)
        (open-file-input-port . g$12571$1nosrN)
        (open-bytevector-output-port . g$12570$1nosrN)
        (open-bytevector-input-port . g$12569$1nosrN)
        (native-transcoder . g$12568$1nosrN)
        (native-eol-style . g$12567$1nosrN)
        (make-transcoder . g$12566$1nosrN)
        (latin-1-codec . g$12565$1nosrN)
        (make-i/o-write-error . g$7536$1nosrN)
        (make-i/o-read-error . g$7522$1nosrN)
        (make-i/o-port-error . g$7641$1nosrN)
        (make-i/o-invalid-position-error . g$7551$1nosrN)
        (make-i/o-filename-error . g$7568$1nosrN)
        (make-i/o-file-protection-error . g$7584$1nosrN)
        (make-i/o-file-is-read-only-error . g$7598$1nosrN)
        (make-i/o-file-does-not-exist-error . g$7626$1nosrN)
        (make-i/o-file-already-exists-error . g$7612$1nosrN)
        (make-i/o-error . g$7508$1nosrN)
        (make-i/o-encoding-error . g$7672$1nosrN)
        (make-i/o-decoding-error . g$7657$1nosrN)
        (make-custom-textual-output-port . g$12564$1nosrN)
        (make-custom-textual-input/output-port . g$12563$1nosrN)
        (make-custom-textual-input-port . g$12562$1nosrN)
        (make-custom-binary-output-port . g$12561$1nosrN)
        (make-custom-binary-input/output-port . g$12560$1nosrN)
        (make-custom-binary-input-port . g$12559$1nosrN)
        (make-bytevector . g$12558$1nosrN)
        (lookahead-u8 . g$12557$1nosrN)
        (lookahead-char . g$12556$1nosrN)
        (i/o-write-error? . g$7537$1nosrN)
        (i/o-read-error? . g$7523$1nosrN)
        (i/o-port-error? . g$7643$1nosrN)
        (i/o-invalid-position-error? . g$7553$1nosrN)
        (i/o-error-position . g$7554$1nosrN)
        (i/o-filename-error? . g$7570$1nosrN)
        (i/o-file-protection-error? . g$7585$1nosrN)
        (i/o-file-is-read-only-error? . g$7599$1nosrN)
        (i/o-file-does-not-exist-error? . g$7627$1nosrN)
        (i/o-file-already-exists-error? . g$7613$1nosrN)
        (i/o-error? . g$7509$1nosrN)
        (i/o-error-port . g$7644$1nosrN)
        (i/o-error-filename . g$7571$1nosrN)
        (i/o-encoding-error? . g$7674$1nosrN)
        (i/o-encoding-error-char . g$7675$1nosrN)
        (i/o-decoding-error? . g$7658$1nosrN)
        (get-u8 . g$12555$1nosrN)
        (get-string-n! . g$12554$1nosrN)
        (get-string-n . g$12553$1nosrN)
        (get-string-all . g$12552$1nosrN)
        (get-line . g$12551$1nosrN)
        (get-datum . g$12550$1nosrN)
        (get-char . g$12549$1nosrN)
        (get-bytevector-some . g$12548$1nosrN)
        (get-bytevector-n! . g$12547$1nosrN)
        (get-bytevector-n . g$12546$1nosrN)
        (get-bytevector-all . g$12545$1nosrN)
        (flush-output-port . g$12544$1nosrN)
        (close-port . g$12543$1nosrN)
        (call-with-string-output-port . g$12542$1nosrN)
        (call-with-port . g$12541$1nosrN)
        (call-with-bytevector-output-port . g$12540$1nosrN)
        (bytevector->string . g$12539$1nosrN)
        (buffer-mode? . g$12538$1nosrN)
        (binary-port? . g$12537$1nosrN)
        (scheme-report-environment . g$9142$1nosrN)
        (quotient . g$7088$1nosrN)
        (null-environment . g$9141$1nosrN)
        (remainder . g$7089$1nosrN)
        (modulo . g$7090$1nosrN)
        (inexact->exact . g$12536$1nosrN)
        (force . g$7092$1nosrN)
        (exact->inexact . g$12535$1nosrN)
        (exit . g$12534$1nosrN)
        (command-line . g$12103$1nosrN)
        (string-fill! . g$12533$1nosrN)
        (string-set! . g$12532$1nosrN)
        (set-cdr! . g$12531$1nosrN)
        (set-car! . g$12530$1nosrN)
        (remove . g$6675$1nosrN)
        (remv . g$6676$1nosrN)
        (remp . g$6661$1nosrN)
        (remq . g$6677$1nosrN)
        (partition . g$6660$1nosrN)
        (memv . g$12529$1nosrN)
        (memq . g$12528$1nosrN)
        (memp . g$6667$1nosrN)
        (member . g$6666$1nosrN)
        (exists . g$6671$1nosrN)
        (for-all . g$6670$1nosrN)
        (fold-right . g$6674$1nosrN)
        (fold-left . g$6673$1nosrN)
        (find . g$6659$1nosrN)
        (filter . g$6662$1nosrN)
        (cons* . g$6672$1nosrN)
        (assv . g$6663$1nosrN)
        (assq . g$12527$1nosrN)
        (assp . g$6665$1nosrN)
        (assoc . g$6664$1nosrN)
        (with-exception-handler . g$12526$1nosrN)
        (raise-continuable . g$12525$1nosrN)
        (raise . g$12524$1nosrN)
        (eval . g$9144$1nosrN)
        (environment . g$9140$1nosrN)
        (make-enumeration . g$7762$1nosrN)
        (enum-set=? . g$7769$1nosrN)
        (enum-set-universe . g$7763$1nosrN)
        (enum-set-union . g$7770$1nosrN)
        (enum-set-subset? . g$7768$1nosrN)
        (enum-set-projection . g$7774$1nosrN)
        (enum-set-member? . g$7767$1nosrN)
        (enum-set-intersection . g$7771$1nosrN)
        (enum-set-indexer . g$7764$1nosrN)
        (enum-set-difference . g$7772$1nosrN)
        (enum-set-constructor . g$7765$1nosrN)
        (enum-set-complement . g$7773$1nosrN)
        (enum-set->list . g$7766$1nosrN)
        (who-condition? . g$6999$1nosrN)
        (warning? . g$6910$1nosrN)
        (violation? . g$6952$1nosrN)
        (undefined-violation? . g$7076$1nosrN)
        (syntax-violation? . g$7060$1nosrN)
        (syntax-violation-subform . g$7062$1nosrN)
        (syntax-violation-form . g$7061$1nosrN)
        (syntax-violation . g$9161$1nosrN)
        (simple-conditions . g$12523$1nosrN)
        (serious-condition? . g$6924$1nosrN)
        (non-continuable-violation? . g$7014$1nosrN)
        (message-condition? . g$6895$1nosrN)
        (make-who-condition . g$6997$1nosrN)
        (make-warning . g$6909$1nosrN)
        (make-violation . g$6951$1nosrN)
        (make-undefined-violation . g$7075$1nosrN)
        (make-syntax-violation . g$7057$1nosrN)
        (make-serious-condition . g$6923$1nosrN)
        (make-non-continuable-violation . g$7013$1nosrN)
        (make-message-condition . g$6893$1nosrN)
        (make-lexical-violation . g$7041$1nosrN)
        (make-irritants-condition . g$6980$1nosrN)
        (make-implementation-restriction-violation . g$7027$1nosrN)
        (make-error . g$6937$1nosrN)
        (make-assertion-violation . g$6965$1nosrN)
        (lexical-violation? . g$7042$1nosrN)
        (irritants-condition? . g$6982$1nosrN)
        (implementation-restriction-violation? . g$7028$1nosrN)
        (error? . g$6938$1nosrN)
        (condition-who . g$7000$1nosrN)
        (condition-predicate . g$12522$1nosrN)
        (condition-message . g$6896$1nosrN)
        (condition-irritants . g$6983$1nosrN)
        (condition-accessor . g$12521$1nosrN)
        (condition . g$12520$1nosrN)
        (assertion-violation? . g$6966$1nosrN)
        (condition? . g$12519$1nosrN)
        (utf32->string . g$12518$1nosrN)
        (utf16->string . g$12517$1nosrN)
        (utf8->string . g$12516$1nosrN)
        (uint-list->bytevector . g$12515$1nosrN)
        (u8-list->bytevector . g$12514$1nosrN)
        (string->utf8 . g$12513$1nosrN)
        (string->utf32 . g$12512$1nosrN)
        (string->utf16 . g$12511$1nosrN)
        (sint-list->bytevector . g$12510$1nosrN)
        (native-endianness . g$6751$1nosrN)
        (bytevector? . g$12509$1nosrN)
        (bytevector=? . g$12508$1nosrN)
        (bytevector-uint-set! . g$12507$1nosrN)
        (bytevector-uint-ref . g$12506$1nosrN)
        (bytevector-u8-set! . g$12505$1nosrN)
        (bytevector-u8-ref . g$12504$1nosrN)
        (bytevector-u64-set! . g$6772$1nosrN)
        (bytevector-u64-ref . g$6768$1nosrN)
        (bytevector-u64-native-set! . g$6774$1nosrN)
        (bytevector-u64-native-ref . g$6770$1nosrN)
        (bytevector-u32-set! . g$6764$1nosrN)
        (bytevector-u32-ref . g$6760$1nosrN)
        (bytevector-u32-native-set! . g$6766$1nosrN)
        (bytevector-u32-native-ref . g$6762$1nosrN)
        (bytevector-u16-set! . g$6756$1nosrN)
        (bytevector-u16-ref . g$6752$1nosrN)
        (bytevector-u16-native-set! . g$6758$1nosrN)
        (bytevector-u16-native-ref . g$6754$1nosrN)
        (bytevector-sint-set! . g$12503$1nosrN)
        (bytevector-sint-ref . g$12502$1nosrN)
        (bytevector-s8-set! . g$12501$1nosrN)
        (bytevector-s8-ref . g$12500$1nosrN)
        (bytevector-s64-set! . g$6773$1nosrN)
        (bytevector-s64-ref . g$6769$1nosrN)
        (bytevector-s64-native-set! . g$6775$1nosrN)
        (bytevector-s64-native-ref . g$6771$1nosrN)
        (bytevector-s32-set! . g$6765$1nosrN)
        (bytevector-s32-ref . g$6761$1nosrN)
        (bytevector-s32-native-set! . g$6767$1nosrN)
        (bytevector-s32-native-ref . g$6763$1nosrN)
        (bytevector-s16-set! . g$6757$1nosrN)
        (bytevector-s16-ref . g$6753$1nosrN)
        (bytevector-s16-native-set! . g$6759$1nosrN)
        (bytevector-s16-native-ref . g$6755$1nosrN)
        (bytevector-length . g$12499$1nosrN)
        (bytevector-ieee-single-set! . g$12498$1nosrN)
        (bytevector-ieee-single-ref . g$12497$1nosrN)
        (bytevector-ieee-single-native-set! . g$6778$1nosrN)
        (bytevector-ieee-single-native-ref . g$6776$1nosrN)
        (bytevector-ieee-double-set! . g$12496$1nosrN)
        (bytevector-ieee-double-ref . g$12495$1nosrN)
        (bytevector-ieee-double-native-set! . g$6779$1nosrN)
        (bytevector-ieee-double-native-ref . g$6777$1nosrN)
        (bytevector-fill! . g$12494$1nosrN)
        (bytevector-copy! . g$12493$1nosrN)
        (bytevector-copy . g$12492$1nosrN)
        (bytevector->uint-list . g$12491$1nosrN)
        (bytevector->u8-list . g$12490$1nosrN)
        (bytevector->sint-list . g$12489$1nosrN)
        (no-nans-violation? . g$7494$1nosrN)
        (no-infinities-violation? . g$7480$1nosrN)
        (make-no-nans-violation . g$7493$1nosrN)
        (make-no-infinities-violation . g$7479$1nosrN)
        (real->flonum . g$12488$1nosrN)
        (flzero? . g$12487$1nosrN)
        (fltruncate . g$12486$1nosrN)
        (fltan . g$12485$1nosrN)
        (flsqrt . g$12484$1nosrN)
        (flsin . g$12483$1nosrN)
        (flround . g$12482$1nosrN)
        (flpositive? . g$12481$1nosrN)
        (flonum? . g$12480$1nosrN)
        (flodd? . g$12479$1nosrN)
        (flnumerator . g$12478$1nosrN)
        (flnegative? . g$12477$1nosrN)
        (flnan? . g$12476$1nosrN)
        (flmod0 . g$12475$1nosrN)
        (flmod . g$12474$1nosrN)
        (flmin . g$12473$1nosrN)
        (flmax . g$12472$1nosrN)
        (fllog . g$12471$1nosrN)
        (flinteger? . g$12470$1nosrN)
        (flinfinite? . g$12469$1nosrN)
        (flfloor . g$12468$1nosrN)
        (flfinite? . g$12467$1nosrN)
        (flexpt . g$12466$1nosrN)
        (flexp . g$12465$1nosrN)
        (fleven? . g$12464$1nosrN)
        (fldiv0-and-mod0 . g$12463$1nosrN)
        (fldiv0 . g$12462$1nosrN)
        (fldiv-and-mod . g$12461$1nosrN)
        (fldiv . g$12460$1nosrN)
        (fldenominator . g$12459$1nosrN)
        (flcos . g$12458$1nosrN)
        (flceiling . g$12457$1nosrN)
        (flatan . g$12456$1nosrN)
        (flasin . g$12455$1nosrN)
        (flacos . g$12454$1nosrN)
        (flabs . g$12453$1nosrN)
        (fl>? . g$12452$1nosrN)
        (fl>=? . g$12451$1nosrN)
        (fl=? . g$12450$1nosrN)
        (fl<? . g$12449$1nosrN)
        (fl<=? . g$12448$1nosrN)
        (fl/ . g$12447$1nosrN)
        (fl- . g$12446$1nosrN)
        (fl+ . g$12445$1nosrN)
        (fl* . g$12444$1nosrN)
        (fixnum->flonum . g$12443$1nosrN)
        (fxzero? . g$12442$1nosrN)
        (fxxor . g$12441$1nosrN)
        (fxrotate-bit-field . g$7425$1nosrN)
        (fxreverse-bit-field . g$12440$1nosrN)
        (fxpositive? . g$12439$1nosrN)
        (fxodd? . g$12438$1nosrN)
        (fxnot . g$12437$1nosrN)
        (fxnegative? . g$12436$1nosrN)
        (fxmod0 . g$12435$1nosrN)
        (fxmod . g$12434$1nosrN)
        (fxmin . g$12433$1nosrN)
        (fxmax . g$12432$1nosrN)
        (fxlength . g$12431$1nosrN)
        (fxior . g$12430$1nosrN)
        (fxif . g$7419$1nosrN)
        (fxfirst-bit-set . g$12429$1nosrN)
        (fxeven? . g$12428$1nosrN)
        (fxdiv0-and-mod0 . g$12427$1nosrN)
        (fxdiv0 . g$12426$1nosrN)
        (fxdiv-and-mod . g$12425$1nosrN)
        (fxdiv . g$12424$1nosrN)
        (fxcopy-bit-field . g$7422$1nosrN)
        (fxcopy-bit . g$7420$1nosrN)
        (fxbit-set? . g$12423$1nosrN)
        (fxbit-field . g$7421$1nosrN)
        (fxbit-count . g$12422$1nosrN)
        (fxarithmetic-shift-right . g$7424$1nosrN)
        (fxarithmetic-shift-left . g$7423$1nosrN)
        (fxarithmetic-shift . g$12421$1nosrN)
        (fxand . g$12420$1nosrN)
        (fx>? . g$12419$1nosrN)
        (fx>=? . g$12418$1nosrN)
        (fx=? . g$12417$1nosrN)
        (fx<? . g$12416$1nosrN)
        (fx<=? . g$12415$1nosrN)
        (fx-/carry . g$12414$1nosrN)
        (fx- . g$12413$1nosrN)
        (fx+/carry . g$12412$1nosrN)
        (fx+ . g$12411$1nosrN)
        (fx*/carry . g$12410$1nosrN)
        (fx* . g$12409$1nosrN)
        (greatest-fixnum . g$12408$1nosrN)
        (least-fixnum . g$12407$1nosrN)
        (fixnum-width . g$12406$1nosrN)
        (fixnum? . g$12405$1nosrN)
        (bitwise-rotate-bit-field . g$7377$1nosrN)
        (bitwise-reverse-bit-field . g$12404$1nosrN)
        (bitwise-length . g$12403$1nosrN)
        (bitwise-if . g$7371$1nosrN)
        (bitwise-first-bit-set . g$12402$1nosrN)
        (bitwise-copy-bit-field . g$7374$1nosrN)
        (bitwise-copy-bit . g$7372$1nosrN)
        (bitwise-bit-set? . g$12401$1nosrN)
        (bitwise-bit-field . g$12400$1nosrN)
        (bitwise-bit-count . g$12399$1nosrN)
        (bitwise-xor . g$12398$1nosrN)
        (bitwise-ior . g$12397$1nosrN)
        (bitwise-and . g$12396$1nosrN)
        (bitwise-not . g$12395$1nosrN)
        (bitwise-arithmetic-shift-right . g$7376$1nosrN)
        (bitwise-arithmetic-shift-left . g$7375$1nosrN)
        (bitwise-arithmetic-shift . g$12394$1nosrN)
        (zero? . g$12393$1nosrN)
        (vector? . g$12392$1nosrN)
        (vector-set! . g$12391$1nosrN)
        (vector-ref . g$12390$1nosrN)
        (vector-map . g$12389$1nosrN)
        (vector-length . g$12388$1nosrN)
        (vector-for-each . g$12387$1nosrN)
        (vector-fill! . g$12386$1nosrN)
        (vector->list . g$12385$1nosrN)
        (vector . g$12384$1nosrN)
        (values . g$12383$1nosrN)
        (truncate . g$12382$1nosrN)
        (tan . g$12381$1nosrN)
        (symbol? . g$12380$1nosrN)
        (symbol=? . g$6060$1nosrN)
        (symbol->string . g$12379$1nosrN)
        (substring . g$12378$1nosrN)
        (string? . g$12377$1nosrN)
        (string>? . g$6057$1nosrN)
        (string>=? . g$6059$1nosrN)
        (string=? . g$6055$1nosrN)
        (string<? . g$6056$1nosrN)
        (string<=? . g$6058$1nosrN)
        (string-ref . g$12376$1nosrN)
        (string-length . g$12375$1nosrN)
        (string-for-each . g$12374$1nosrN)
        (string-copy . g$12373$1nosrN)
        (string-append . g$12372$1nosrN)
        (string->symbol . g$12371$1nosrN)
        (string->number . g$12370$1nosrN)
        (string->list . g$12369$1nosrN)
        (string . g$12368$1nosrN)
        (sqrt . g$12367$1nosrN)
        (sin . g$12366$1nosrN)
        (round . g$12365$1nosrN)
        (reverse . g$12364$1nosrN)
        (real? . g$12363$1nosrN)
        (real-valued? . g$12362$1nosrN)
        (real-part . g$12361$1nosrN)
        (rationalize . g$6113$1nosrN)
        (rational? . g$12360$1nosrN)
        (rational-valued? . g$12359$1nosrN)
        (procedure? . g$12358$1nosrN)
        (positive? . g$12357$1nosrN)
        (pair? . g$12356$1nosrN)
        (odd? . g$12355$1nosrN)
        (numerator . g$12354$1nosrN)
        (number? . g$12353$1nosrN)
        (number->string . g$12352$1nosrN)
        (null? . g$12351$1nosrN)
        (not . g$12350$1nosrN)
        (negative? . g$12349$1nosrN)
        (nan? . g$12348$1nosrN)
        (min . g$12347$1nosrN)
        (max . g$12346$1nosrN)
        (map . g$12345$1nosrN)
        (make-vector . g$12344$1nosrN)
        (make-string . g$12343$1nosrN)
        (make-rectangular . g$12342$1nosrN)
        (make-polar . g$12341$1nosrN)
        (magnitude . g$12340$1nosrN)
        (log . g$12339$1nosrN)
        (list? . g$12338$1nosrN)
        (list-tail . g$12337$1nosrN)
        (list-ref . g$12336$1nosrN)
        (list->vector . g$12335$1nosrN)
        (list->string . g$12334$1nosrN)
        (list . g$12333$1nosrN)
        (length . g$12332$1nosrN)
        (lcm . g$12331$1nosrN)
        (integer? . g$12330$1nosrN)
        (integer-valued? . g$12329$1nosrN)
        (integer->char . g$12328$1nosrN)
        (infinite? . g$12327$1nosrN)
        (inexact? . g$12326$1nosrN)
        (inexact . g$12325$1nosrN)
        (imag-part . g$12324$1nosrN)
        (gcd . g$12323$1nosrN)
        (for-each . g$12322$1nosrN)
        (floor . g$12321$1nosrN)
        (finite? . g$12320$1nosrN)
        (expt . g$12319$1nosrN)
        (exp . g$12318$1nosrN)
        (exact? . g$12317$1nosrN)
        (exact-integer-sqrt . g$12316$1nosrN)
        (exact . g$12315$1nosrN)
        (even? . g$12314$1nosrN)
        (error . g$12313$1nosrN)
        (eqv? . g$12312$1nosrN)
        (equal? . g$12311$1nosrN)
        (eq? . g$12310$1nosrN)
        (dynamic-wind . g$12309$1nosrN)
        (div0-and-mod0 . g$12308$1nosrN)
        (mod0 . g$12307$1nosrN)
        (div0 . g$12306$1nosrN)
        (div-and-mod . g$12305$1nosrN)
        (mod . g$12304$1nosrN)
        (div . g$12303$1nosrN)
        (denominator . g$12302$1nosrN)
        (cos . g$12301$1nosrN)
        (cons . g$12300$1nosrN)
        (complex? . g$12299$1nosrN)
        (char? . g$12298$1nosrN)
        (char>? . g$6110$1nosrN)
        (char>=? . g$6112$1nosrN)
        (char=? . g$6108$1nosrN)
        (char<? . g$6109$1nosrN)
        (char<=? . g$6111$1nosrN)
        (char->integer . g$12297$1nosrN)
        (ceiling . g$12296$1nosrN)
        (call-with-values . g$12295$1nosrN)
        (call/cc . g$12294$1nosrN)
        (call-with-current-continuation . g$12293$1nosrN)
        (cddddr . g$6008$1nosrN)
        (cdddar . g$6007$1nosrN)
        (cddadr . g$6006$1nosrN)
        (cddaar . g$6005$1nosrN)
        (cdaddr . g$6004$1nosrN)
        (cdadar . g$6003$1nosrN)
        (cdaadr . g$6002$1nosrN)
        (cdaaar . g$6001$1nosrN)
        (cadddr . g$6000$1nosrN)
        (caddar . g$5999$1nosrN)
        (cadadr . g$5998$1nosrN)
        (cadaar . g$5997$1nosrN)
        (caaddr . g$5996$1nosrN)
        (caadar . g$5995$1nosrN)
        (caaadr . g$5994$1nosrN)
        (caaaar . g$5993$1nosrN)
        (cdddr . g$5992$1nosrN)
        (cddar . g$5991$1nosrN)
        (cdadr . g$5990$1nosrN)
        (cdaar . g$5989$1nosrN)
        (caddr . g$5988$1nosrN)
        (cadar . g$5987$1nosrN)
        (caadr . g$5986$1nosrN)
        (caaar . g$5985$1nosrN)
        (cddr . g$5984$1nosrN)
        (cdar . g$5983$1nosrN)
        (cadr . g$5982$1nosrN)
        (caar . g$5981$1nosrN)
        (cdr . g$12292$1nosrN)
        (car . g$12291$1nosrN)
        (boolean? . g$12290$1nosrN)
        (boolean=? . g$6061$1nosrN)
        (atan . g$12289$1nosrN)
        (assertion-violation . g$12288$1nosrN)
        (asin . g$12287$1nosrN)
        (apply . g$12286$1nosrN)
        (append . g$12285$1nosrN)
        (angle . g$12284$1nosrN)
        (acos . g$12283$1nosrN)
        (abs . g$12282$1nosrN)
        (/ . g$12281$1nosrN)
        (* . g$12280$1nosrN)
        (- . g$12279$1nosrN)
        (+ . g$12278$1nosrN)
        (>= . g$12277$1nosrN)
        (> . g$12276$1nosrN)
        (= . g$12275$1nosrN)
        (<= . g$12274$1nosrN)
        (< . g$12273$1nosrN)
        (make-record-printer . g$12272$1nosrN)
        (eqv-hash . g$12271$1nosrN)
        (eq-hash . g$12270$1nosrN)
        (reverse! . g$12269$1nosrN)
        (deserialize-port . g$12268$1nosrN)
        (serialize-port . g$12267$1nosrN)
        (enum-set? . g$7737$1nosrN)
        (make-promise . g$7091$1nosrN)
        (load/args . g$12105$1nosrN)
        (printf . g$7847$1nosrN)
        (fprintf . g$7848$1nosrN)
        (format . g$7849$1nosrN)
        (get-arity . g$12266$1nosrN)
        (gc-collect . g$12265$1nosrN)
        (clr-type? . g$12264$1nosrN)
        (get-clr-type . g$12263$1nosrN)
        (get-command-line . g$12262$1nosrN)
        (vector-append . g$12261$1nosrN)
        (vector-filter . g$12260$1nosrN)
        (vector-reverse! . g$12259$1nosrN)
        (vector-contains? . g$12258$1nosrN)
        (vector-index-of . g$12257$1nosrN)
        (vector-copy . g$12256$1nosrN)
        (vector-binary-search . g$12255$1nosrN)
        (get-output-string . g$12254$1nosrN)
        (open-output-string . g$12253$1nosrN)
        (open-input-string . g$12252$1nosrN)
        (string-ci-compare . g$12251$1nosrN)
        (string-compare . g$12250$1nosrN)
        (string-format . g$12249$1nosrN)
        (trace-printer . g$12102$1nosrN)
        (make-traced-procedure . g$12248$1nosrN)
        (make-traced-macro . g$7869$1nosrN)
        (assertion-error . g$9157$1nosrN)
        (pmap . g$12247$1nosrN)
        (time-it . g$12246$1nosrN)
        (make-parameter . g$7874$1nosrN)
        (library-locator . g$12245$1nosrN)
        (get-library-paths . g$12244$1nosrN)
        (environment-bindings . g$9137$1nosrN)
        (environment-symbols . g$9136$1nosrN)
        (interaction-environment-symbols . g$9135$1nosrN)
        (library-path . g$8304$1nosrN)
        (library-extensions . g$8305$1nosrN)
        (installed-libraries . g$8325$1nosrN)
        (expand . g$9143$1nosrN)
        (&no-nans . g$12243$1nosrN)
        (&no-infinities . g$12242$1nosrN)
        (&i/o-encoding . g$12241$1nosrN)
        (&i/o-decoding . g$12240$1nosrN)
        (&i/o-port . g$12239$1nosrN)
        (&i/o-file-does-not-exist . g$12238$1nosrN)
        (&i/o-file-already-exists . g$12237$1nosrN)
        (&i/o-file-is-read-only . g$12236$1nosrN)
        (&i/o-file-protection . g$12235$1nosrN)
        (&i/o-filename . g$12234$1nosrN)
        (&i/o-invalid-position . g$12233$1nosrN)
        (&i/o-write . g$12232$1nosrN)
        (&i/o-read . g$12231$1nosrN)
        (&i/o . g$12230$1nosrN)
        (&non-continuable . g$12229$1nosrN)
        (&undefined . g$12228$1nosrN)
        (&syntax . g$12227$1nosrN)
        (&lexical . g$12226$1nosrN)
        (&implementation-restriction . g$12225$1nosrN)
        (&non . g$12224$1nosrN)
        (&who . g$12223$1nosrN)
        (&irritants . g$12222$1nosrN)
        (&assertion . g$12221$1nosrN)
        (&violation . g$12220$1nosrN)
        (&error . g$12219$1nosrN)
        (&serious . g$12218$1nosrN)
        (&warning . g$12217$1nosrN)
        (&message . g$12216$1nosrN)
        (&condition . g$12215$1nosrN)
        (define-condition-type . g$12214$1nosrN)
        (define-enumeration . g$12213$1nosrN)
        (define-record-type . g$12212$1nosrN)
        (parent-rtd . g$12211$1nosrN)
        (nongenerative . g$12210$1nosrN)
        (opaque . g$12209$1nosrN)
        (sealed . g$12208$1nosrN)
        (protocol . g$12207$1nosrN)
        (parent . g$12206$1nosrN)
        (immutable . g$12205$1nosrN)
        (mutable . g$12204$1nosrN)
        (fields . g$12203$1nosrN)
        (error-handling-mode . g$12202$1nosrN)
        (file-options . g$12201$1nosrN)
        (buffer-mode . g$12200$1nosrN)
        (eol-style . g$12199$1nosrN)
        (guard . g$12198$1nosrN)
        (trace-letrec-syntax . g$12197$1nosrN)
        (trace-let-syntax . g$12196$1nosrN)
        (trace-define-syntax . g$12195$1nosrN)
        (trace-define . g$12194$1nosrN)
        (trace-lambda . g$12193$1nosrN)
        (unsyntax-splicing . g$12192$1nosrN)
        (unsyntax . g$12191$1nosrN)
        (unquote-splicing . g$12190$1nosrN)
        (unquote . g$12189$1nosrN)
        (_ . g$12188$1nosrN)
        (else . g$12187$1nosrN)
        (=> . g$12186$1nosrN)
        (... . g$12185$1nosrN)
        (assert . g$12184$1nosrN)
        (endianness . g$12183$1nosrN)
        (delay . g$12182$1nosrN)
        (time . g$12181$1nosrN)
        (or . g$12180$1nosrN)
        (and . g$12179$1nosrN)
        (do . g$12178$1nosrN)
        (cond . g$12177$1nosrN)
        (let* . g$12176$1nosrN)
        (let . g$12175$1nosrN)
        (identifier-syntax . g$12174$1nosrN)
        (with-syntax . g$12173$1nosrN)
        (quasisyntax . g$12172$1nosrN)
        (quasiquote . g$12171$1nosrN)
        (syntax-rules . g$12170$1nosrN)
        (include-into . g$12169$1nosrN)
        (include . g$12168$1nosrN)
        (define-struct . g$12167$1nosrN)
        (let-values . g$12166$1nosrN)
        (let*-values . g$12165$1nosrN)
        (record-constructor-descriptor . g$12164$1nosrN)
        (record-type-descriptor . g$12163$1nosrN)
        (fluid-let-syntax . g$12162$1nosrN)
        (case . g$12161$1nosrN)
        (parameterize . g$12160$1nosrN)
        (unless . g$12159$1nosrN)
        (when . g$12158$1nosrN)
        (if . g$12157$1nosrN)
        (letrec* . g$12156$1nosrN)
        (letrec . g$12155$1nosrN)
        (type-descriptor . g$12154$1nosrN)
        (case-lambda . g$12153$1nosrN)
        (lambda . g$12152$1nosrN)
        (syntax . g$12151$1nosrN)
        (syntax-case . g$12150$1nosrN)
        (quote . g$12149$1nosrN)
        (foreign-call . g$12148$1nosrN)
        (letrec-syntax . g$12147$1nosrN)
        (let-syntax . g$12146$1nosrN)
        (set! . g$12145$1nosrN)
        (import . g$12144$1nosrN)
        (library . g$12143$1nosrN)
        (begin . g$12142$1nosrN)
        (module . g$12141$1nosrN)
        (define-syntax . g$12140$1nosrN)
        (define . g$12139$1nosrN))
      '((g$9034$1nosrN core-prim . ellipsis-map)
        (g$12759$1nosrN core-prim . &no-nans-rcd)
        (g$12758$1nosrN core-prim . &no-nans-rtd)
        (g$12757$1nosrN core-prim . &no-infinities-rcd)
        (g$12756$1nosrN core-prim . &no-infinities-rtd)
        (g$12755$1nosrN core-prim . &i/o-encoding-rcd)
        (g$12754$1nosrN core-prim . &i/o-encoding-rtd)
        (g$12753$1nosrN core-prim . &i/o-decoding-rcd)
        (g$12752$1nosrN core-prim . &i/o-decoding-rtd)
        (g$12751$1nosrN core-prim . &i/o-port-rcd)
        (g$12750$1nosrN core-prim . &i/o-port-rtd)
        (g$12749$1nosrN core-prim . &i/o-file-does-not-exist-rcd)
        (g$12748$1nosrN core-prim . &i/o-file-does-not-exist-rtd)
        (g$12747$1nosrN core-prim . &i/o-file-already-exists-rcd)
        (g$12746$1nosrN core-prim . &i/o-file-already-exists-rtd)
        (g$12745$1nosrN core-prim . &i/o-file-is-read-only-rcd)
        (g$12744$1nosrN core-prim . &i/o-file-is-read-only-rtd)
        (g$12743$1nosrN core-prim . &i/o-file-protection-rcd)
        (g$12742$1nosrN core-prim . &i/o-file-protection-rtd)
        (g$12741$1nosrN core-prim . &i/o-filename-rcd)
        (g$12740$1nosrN core-prim . &i/o-filename-rtd)
        (g$12739$1nosrN core-prim . &i/o-invalid-position-rcd)
        (g$12738$1nosrN core-prim . &i/o-invalid-position-rtd)
        (g$12737$1nosrN core-prim . &i/o-write-rcd)
        (g$12736$1nosrN core-prim . &i/o-write-rtd)
        (g$12735$1nosrN core-prim . &i/o-read-rcd)
        (g$12734$1nosrN core-prim . &i/o-read-rtd)
        (g$12733$1nosrN core-prim . &i/o-rcd)
        (g$12732$1nosrN core-prim . &i/o-rtd)
        (g$12731$1nosrN core-prim . &undefined-rcd)
        (g$12730$1nosrN core-prim . &undefined-rtd)
        (g$12729$1nosrN core-prim . &syntax-rcd)
        (g$12728$1nosrN core-prim . &syntax-rtd)
        (g$12727$1nosrN core-prim . &lexical-rcd)
        (g$12726$1nosrN core-prim . &lexical-rtd)
        (g$12725$1nosrN core-prim . &implementation-restriction-rcd)
        (g$12724$1nosrN core-prim . &implementation-restriction-rtd)
        (g$12723$1nosrN core-prim . &non-continuable-rcd)
        (g$12722$1nosrN core-prim . &non-continuable-rtd)
        (g$12721$1nosrN core-prim . &who-rcd)
        (g$12720$1nosrN core-prim . &who-rtd)
        (g$12719$1nosrN core-prim . &irritants-rcd)
        (g$12718$1nosrN core-prim . &irritants-rtd)
        (g$12717$1nosrN core-prim . &assertion-rcd)
        (g$12716$1nosrN core-prim . &assertion-rtd)
        (g$12715$1nosrN core-prim . &violation-rcd)
        (g$12714$1nosrN core-prim . &violation-rtd)
        (g$12713$1nosrN core-prim . &error-rcd)
        (g$12712$1nosrN core-prim . &error-rtd)
        (g$12711$1nosrN core-prim . &serious-rcd)
        (g$12710$1nosrN core-prim . &serious-rtd)
        (g$12709$1nosrN core-prim . &warning-rcd)
        (g$12708$1nosrN core-prim . &warning-rtd)
        (g$12707$1nosrN core-prim . &message-rcd)
        (g$12706$1nosrN core-prim . &message-rtd)
        (g$12705$1nosrN core-prim . &condition-rcd)
        (g$12704$1nosrN core-prim . &condition-rtd)
        (g$12703$1nosrN core-prim . library-letrec*)
        (g$12702$1nosrN core-prim . annotation-stripped)
        (g$12701$1nosrN core-prim . annotation-source)
        (g$12700$1nosrN core-prim . annotation-expression)
        (g$12699$1nosrN core-prim . annotation?)
        (g$12698$1nosrN core-prim . read-annotated)
        (g$12697$1nosrN core-prim . tanh)
        (g$12696$1nosrN core-prim . cosh)
        (g$12695$1nosrN core-prim . sinh)
        (g$12694$1nosrN core-prim . make-guid)
        (g$12693$1nosrN core-prim . unspecified?)
        (g$12692$1nosrN core-prim . make-trace)
        (g$12691$1nosrN core-prim . make-list)
        (g$12690$1nosrN core-prim . last-pair)
        (g$12689$1nosrN core-prim . load-r5rs)
        (g$12688$1nosrN core-prim . license)
        (g$12687$1nosrN core-prim . stacktrace)
        (g$12107$1nosrN core-prim . ironscheme-build)
        (g$12686$1nosrN core-prim . define-clr-class-internal)
        (g$12685$1nosrN core-prim . clr-field-set!-internal)
        (g$12684$1nosrN core-prim . clr-field-get-internal)
        (g$12683$1nosrN core-prim . clr-cast-internal)
        (g$12682$1nosrN core-prim . clr-call-internal)
        (g$12681$1nosrN core-prim . clr-new-internal)
        (g$12680$1nosrN core-prim . clr-new-array-internal)
        (g$12679$1nosrN core-prim . clr-is-internal)
        (g$12678$1nosrN core-prim . clr-reference-internal)
        (g$12677$1nosrN core-prim . clr-using-internal)
        (g$12676$1nosrN core-prim . clr-clear-usings-internal)
        (g$9158$1nosrN core-prim . syntax-error)
        (g$9029$1nosrN core-prim . syntax-dispatch)
        (g$12675$1nosrN core-prim . compile-core)
        (g$12674$1nosrN core-prim . eval-core)
        (g$12673$1nosrN core-prim . set-symbol-value!)
        (g$12672$1nosrN core-prim . symbol-value)
        (g$12671$1nosrN core-prim . ungensym)
        (g$12670$1nosrN core-prim . gensym)
        (g$12669$1nosrN core-prim . void)
        (g$12668$1nosrN core-prim . load-serialized-library)
        (g$12667$1nosrN core-prim . serialize-library)
        (g$12109$1nosrN core-prim . compile-system-libraries)
        (g$12111$1nosrN core-prim . compile->closure)
        (g$12110$1nosrN core-prim . compile)
        (g$12106$1nosrN core-prim . load)
        (g$9167$1nosrN core-prim . interaction-environment)
        (g$12666$1nosrN core-prim . char-ready?)
        (g$12665$1nosrN core-prim . string-upcase)
        (g$12664$1nosrN core-prim . string-titlecase)
        (g$12663$1nosrN core-prim . string-normalize-nfkd)
        (g$12662$1nosrN core-prim . string-normalize-nfkc)
        (g$12661$1nosrN core-prim . string-normalize-nfd)
        (g$12660$1nosrN core-prim . string-normalize-nfc)
        (g$12659$1nosrN core-prim . string-foldcase)
        (g$12658$1nosrN core-prim . string-downcase)
        (g$7234$1nosrN core-prim . string-ci>?)
        (g$7236$1nosrN core-prim . string-ci>=?)
        (g$7232$1nosrN core-prim . string-ci=?)
        (g$7233$1nosrN core-prim . string-ci<?)
        (g$7235$1nosrN core-prim . string-ci<=?)
        (g$12657$1nosrN core-prim . char-whitespace?)
        (g$12656$1nosrN core-prim . char-upper-case?)
        (g$12655$1nosrN core-prim . char-title-case?)
        (g$12654$1nosrN core-prim . char-numeric?)
        (g$12653$1nosrN core-prim . char-lower-case?)
        (g$12652$1nosrN core-prim . char-general-category)
        (g$12651$1nosrN core-prim . char-upcase)
        (g$12650$1nosrN core-prim . char-titlecase)
        (g$12649$1nosrN core-prim . char-foldcase)
        (g$12648$1nosrN core-prim . char-downcase)
        (g$7285$1nosrN core-prim . char-ci>?)
        (g$7287$1nosrN core-prim . char-ci>=?)
        (g$7283$1nosrN core-prim . char-ci=?)
        (g$7284$1nosrN core-prim . char-ci<?)
        (g$7286$1nosrN core-prim . char-ci<=?)
        (g$12647$1nosrN core-prim . char-alphabetic?)
        (g$8766$1nosrN core-prim . variable-transformer-procedure)
        (g$8765$1nosrN core-prim . variable-transformer?)
        (g$8764$1nosrN core-prim . make-variable-transformer)
        (g$9162$1nosrN core-prim . identifier?)
        (g$9151$1nosrN core-prim . generate-temporaries)
        (g$9152$1nosrN core-prim . free-identifier=?)
        (g$9164$1nosrN core-prim . syntax->datum)
        (g$9163$1nosrN core-prim . datum->syntax)
        (g$9153$1nosrN core-prim . bound-identifier=?)
        (g$12646$1nosrN core-prim . record-type-descriptor?)
        (g$12645$1nosrN core-prim . record-predicate)
        (g$12644$1nosrN core-prim . record-mutator)
        (g$12643$1nosrN core-prim . record-constructor)
        (g$12642$1nosrN core-prim . record-accessor)
        (g$12641$1nosrN core-prim . make-record-type-descriptor)
        (g$12640$1nosrN core-prim . make-record-constructor-descriptor)
        (g$12639$1nosrN core-prim . record?)
        (g$12638$1nosrN core-prim . record-type-uid)
        (g$12637$1nosrN core-prim . record-type-sealed?)
        (g$12636$1nosrN core-prim . record-type-parent)
        (g$12635$1nosrN core-prim . record-type-opaque?)
        (g$12634$1nosrN core-prim . record-type-name)
        (g$12633$1nosrN core-prim . record-type-generative?)
        (g$12632$1nosrN core-prim . record-type-field-names)
        (g$12631$1nosrN core-prim . record-rtd)
        (g$12630$1nosrN core-prim . record-field-mutable?)
        (g$6595$1nosrN core-prim . delete-file)
        (g$6594$1nosrN core-prim . file-exists?)
        (g$12629$1nosrN core-prim . vector-sort!)
        (g$12628$1nosrN core-prim . vector-sort)
        (g$7108$1nosrN core-prim . list-sort)
        (g$12627$1nosrN core-prim . symbol-hash)
        (g$12626$1nosrN core-prim . string-ci-hash)
        (g$12625$1nosrN core-prim . string-hash)
        (g$12624$1nosrN core-prim . equal-hash)
        (g$12623$1nosrN core-prim . hashtable-equivalence-function)
        (g$12622$1nosrN core-prim . make-hashtable)
        (g$12621$1nosrN core-prim . hashtable-hash-function)
        (g$6562$1nosrN core-prim . make-eqv-hashtable)
        (g$6561$1nosrN core-prim . make-eq-hashtable)
        (g$12620$1nosrN core-prim . hashtable?)
        (g$6568$1nosrN core-prim . hashtable-update!)
        (g$6563$1nosrN core-prim . hashtable-size)
        (g$6565$1nosrN core-prim . hashtable-set!)
        (g$6564$1nosrN core-prim . hashtable-ref)
        (g$12619$1nosrN core-prim . hashtable-mutable?)
        (g$12618$1nosrN core-prim . hashtable-keys)
        (g$12617$1nosrN core-prim . hashtable-entries)
        (g$6566$1nosrN core-prim . hashtable-delete!)
        (g$12616$1nosrN core-prim . hashtable-copy)
        (g$6567$1nosrN core-prim . hashtable-contains?)
        (g$6569$1nosrN core-prim . hashtable-clear!)
        (g$7704$1nosrN core-prim . call-with-output-file)
        (g$7703$1nosrN core-prim . call-with-input-file)
        (g$12615$1nosrN core-prim . write-char)
        (g$12614$1nosrN core-prim . write)
        (g$7702$1nosrN core-prim . with-output-to-file)
        (g$7701$1nosrN core-prim . with-input-from-file)
        (g$12613$1nosrN core-prim . read-char)
        (g$12612$1nosrN core-prim . read)
        (g$12611$1nosrN core-prim . peek-char)
        (g$12610$1nosrN core-prim . open-output-file)
        (g$12609$1nosrN core-prim . open-input-file)
        (g$12608$1nosrN core-prim . newline)
        (g$12607$1nosrN core-prim . display)
        (g$12606$1nosrN core-prim . close-output-port)
        (g$12605$1nosrN core-prim . close-input-port)
        (g$12604$1nosrN core-prim . eof-object?)
        (g$12603$1nosrN core-prim . eof-object)
        (g$12602$1nosrN core-prim . current-error-port)
        (g$12601$1nosrN core-prim . current-output-port)
        (g$12600$1nosrN core-prim . current-input-port)
        (g$12599$1nosrN core-prim . output-port?)
        (g$12598$1nosrN core-prim . input-port?)
        (g$12597$1nosrN core-prim . utf-8-codec)
        (g$12596$1nosrN core-prim . utf-16-codec)
        (g$12595$1nosrN core-prim . transcoder-error-handling-mode)
        (g$12594$1nosrN core-prim . transcoder-eol-style)
        (g$12593$1nosrN core-prim . transcoder-codec)
        (g$12592$1nosrN core-prim . transcoded-port)
        (g$12591$1nosrN core-prim . textual-port?)
        (g$12590$1nosrN core-prim . string->bytevector)
        (g$12589$1nosrN core-prim . standard-output-port)
        (g$12588$1nosrN core-prim . standard-input-port)
        (g$12587$1nosrN core-prim . standard-error-port)
        (g$12586$1nosrN core-prim . set-port-position!)
        (g$12585$1nosrN core-prim . put-u8)
        (g$12584$1nosrN core-prim . put-string)
        (g$12583$1nosrN core-prim . put-datum)
        (g$12582$1nosrN core-prim . put-char)
        (g$12581$1nosrN core-prim . put-bytevector)
        (g$7680$1nosrN core-prim . port?)
        (g$12580$1nosrN core-prim . port-transcoder)
        (g$12579$1nosrN core-prim . port-position)
        (g$12578$1nosrN core-prim . port-has-set-port-position!?)
        (g$12577$1nosrN core-prim . port-has-port-position?)
        (g$12576$1nosrN core-prim . port-eof?)
        (g$12575$1nosrN core-prim . output-port-buffer-mode)
        (g$7679$1nosrN core-prim . open-string-output-port)
        (g$12574$1nosrN core-prim . open-string-input-port)
        (g$12573$1nosrN core-prim . open-file-output-port)
        (g$12572$1nosrN core-prim . open-file-input/output-port)
        (g$12571$1nosrN core-prim . open-file-input-port)
        (g$12570$1nosrN core-prim . open-bytevector-output-port)
        (g$12569$1nosrN core-prim . open-bytevector-input-port)
        (g$12568$1nosrN core-prim . native-transcoder)
        (g$12567$1nosrN core-prim . native-eol-style)
        (g$12566$1nosrN core-prim . make-transcoder)
        (g$12565$1nosrN core-prim . latin-1-codec)
        (g$7536$1nosrN core-prim . make-i/o-write-error)
        (g$7522$1nosrN core-prim . make-i/o-read-error)
        (g$7641$1nosrN core-prim . make-i/o-port-error)
        (g$7551$1nosrN core-prim . make-i/o-invalid-position-error)
        (g$7568$1nosrN core-prim . make-i/o-filename-error)
        (g$7584$1nosrN core-prim . make-i/o-file-protection-error)
        (g$7598$1nosrN core-prim . make-i/o-file-is-read-only-error)
        (g$7626$1nosrN core-prim . make-i/o-file-does-not-exist-error)
        (g$7612$1nosrN core-prim . make-i/o-file-already-exists-error)
        (g$7508$1nosrN core-prim . make-i/o-error)
        (g$7672$1nosrN core-prim . make-i/o-encoding-error)
        (g$7657$1nosrN core-prim . make-i/o-decoding-error)
        (g$12564$1nosrN core-prim . make-custom-textual-output-port)
        (g$12563$1nosrN core-prim . make-custom-textual-input/output-port)
        (g$12562$1nosrN core-prim . make-custom-textual-input-port)
        (g$12561$1nosrN core-prim . make-custom-binary-output-port)
        (g$12560$1nosrN core-prim . make-custom-binary-input/output-port)
        (g$12559$1nosrN core-prim . make-custom-binary-input-port)
        (g$12558$1nosrN core-prim . make-bytevector)
        (g$12557$1nosrN core-prim . lookahead-u8)
        (g$12556$1nosrN core-prim . lookahead-char)
        (g$7537$1nosrN core-prim . i/o-write-error?)
        (g$7523$1nosrN core-prim . i/o-read-error?)
        (g$7643$1nosrN core-prim . i/o-port-error?)
        (g$7553$1nosrN core-prim . i/o-invalid-position-error?)
        (g$7554$1nosrN core-prim . i/o-error-position)
        (g$7570$1nosrN core-prim . i/o-filename-error?)
        (g$7585$1nosrN core-prim . i/o-file-protection-error?)
        (g$7599$1nosrN core-prim . i/o-file-is-read-only-error?)
        (g$7627$1nosrN core-prim . i/o-file-does-not-exist-error?)
        (g$7613$1nosrN core-prim . i/o-file-already-exists-error?)
        (g$7509$1nosrN core-prim . i/o-error?)
        (g$7644$1nosrN core-prim . i/o-error-port)
        (g$7571$1nosrN core-prim . i/o-error-filename)
        (g$7674$1nosrN core-prim . i/o-encoding-error?)
        (g$7675$1nosrN core-prim . i/o-encoding-error-char)
        (g$7658$1nosrN core-prim . i/o-decoding-error?)
        (g$12555$1nosrN core-prim . get-u8)
        (g$12554$1nosrN core-prim . get-string-n!)
        (g$12553$1nosrN core-prim . get-string-n)
        (g$12552$1nosrN core-prim . get-string-all)
        (g$12551$1nosrN core-prim . get-line)
        (g$12550$1nosrN core-prim . get-datum)
        (g$12549$1nosrN core-prim . get-char)
        (g$12548$1nosrN core-prim . get-bytevector-some)
        (g$12547$1nosrN core-prim . get-bytevector-n!)
        (g$12546$1nosrN core-prim . get-bytevector-n)
        (g$12545$1nosrN core-prim . get-bytevector-all)
        (g$12544$1nosrN core-prim . flush-output-port)
        (g$12543$1nosrN core-prim . close-port)
        (g$12542$1nosrN core-prim . call-with-string-output-port)
        (g$12541$1nosrN core-prim . call-with-port)
        (g$12540$1nosrN core-prim . call-with-bytevector-output-port)
        (g$12539$1nosrN core-prim . bytevector->string)
        (g$12538$1nosrN core-prim . buffer-mode?)
        (g$12537$1nosrN core-prim . binary-port?)
        (g$9142$1nosrN core-prim . scheme-report-environment)
        (g$7088$1nosrN core-prim . quotient)
        (g$9141$1nosrN core-prim . null-environment)
        (g$7089$1nosrN core-prim . remainder)
        (g$7090$1nosrN core-prim . modulo)
        (g$12536$1nosrN core-prim . inexact->exact)
        (g$7092$1nosrN core-prim . force)
        (g$12535$1nosrN core-prim . exact->inexact)
        (g$12534$1nosrN core-prim . exit)
        (g$12103$1nosrN core-prim . command-line)
        (g$12533$1nosrN core-prim . string-fill!)
        (g$12532$1nosrN core-prim . string-set!)
        (g$12531$1nosrN core-prim . set-cdr!)
        (g$12530$1nosrN core-prim . set-car!)
        (g$6675$1nosrN core-prim . remove)
        (g$6676$1nosrN core-prim . remv)
        (g$6661$1nosrN core-prim . remp)
        (g$6677$1nosrN core-prim . remq)
        (g$6660$1nosrN core-prim . partition)
        (g$12529$1nosrN core-prim . memv)
        (g$12528$1nosrN core-prim . memq)
        (g$6667$1nosrN core-prim . memp)
        (g$6666$1nosrN core-prim . member)
        (g$6671$1nosrN core-prim . exists)
        (g$6670$1nosrN core-prim . for-all)
        (g$6674$1nosrN core-prim . fold-right)
        (g$6673$1nosrN core-prim . fold-left)
        (g$6659$1nosrN core-prim . find)
        (g$6662$1nosrN core-prim . filter)
        (g$6672$1nosrN core-prim . cons*)
        (g$6663$1nosrN core-prim . assv)
        (g$12527$1nosrN core-prim . assq)
        (g$6665$1nosrN core-prim . assp)
        (g$6664$1nosrN core-prim . assoc)
        (g$12526$1nosrN core-prim . with-exception-handler)
        (g$12525$1nosrN core-prim . raise-continuable)
        (g$12524$1nosrN core-prim . raise)
        (g$9144$1nosrN core-prim . eval)
        (g$9140$1nosrN core-prim . environment)
        (g$7762$1nosrN core-prim . make-enumeration)
        (g$7769$1nosrN core-prim . enum-set=?)
        (g$7763$1nosrN core-prim . enum-set-universe)
        (g$7770$1nosrN core-prim . enum-set-union)
        (g$7768$1nosrN core-prim . enum-set-subset?)
        (g$7774$1nosrN core-prim . enum-set-projection)
        (g$7767$1nosrN core-prim . enum-set-member?)
        (g$7771$1nosrN core-prim . enum-set-intersection)
        (g$7764$1nosrN core-prim . enum-set-indexer)
        (g$7772$1nosrN core-prim . enum-set-difference)
        (g$7765$1nosrN core-prim . enum-set-constructor)
        (g$7773$1nosrN core-prim . enum-set-complement)
        (g$7766$1nosrN core-prim . enum-set->list)
        (g$6999$1nosrN core-prim . who-condition?)
        (g$6910$1nosrN core-prim . warning?)
        (g$6952$1nosrN core-prim . violation?)
        (g$7076$1nosrN core-prim . undefined-violation?)
        (g$7060$1nosrN core-prim . syntax-violation?)
        (g$7062$1nosrN core-prim . syntax-violation-subform)
        (g$7061$1nosrN core-prim . syntax-violation-form)
        (g$9161$1nosrN core-prim . syntax-violation)
        (g$12523$1nosrN core-prim . simple-conditions)
        (g$6924$1nosrN core-prim . serious-condition?)
        (g$7014$1nosrN core-prim . non-continuable-violation?)
        (g$6895$1nosrN core-prim . message-condition?)
        (g$6997$1nosrN core-prim . make-who-condition)
        (g$6909$1nosrN core-prim . make-warning)
        (g$6951$1nosrN core-prim . make-violation)
        (g$7075$1nosrN core-prim . make-undefined-violation)
        (g$7057$1nosrN core-prim . make-syntax-violation)
        (g$6923$1nosrN core-prim . make-serious-condition)
        (g$7013$1nosrN core-prim . make-non-continuable-violation)
        (g$6893$1nosrN core-prim . make-message-condition)
        (g$7041$1nosrN core-prim . make-lexical-violation)
        (g$6980$1nosrN core-prim . make-irritants-condition)
        (g$7027$1nosrN core-prim . make-implementation-restriction-violation)
        (g$6937$1nosrN core-prim . make-error)
        (g$6965$1nosrN core-prim . make-assertion-violation)
        (g$7042$1nosrN core-prim . lexical-violation?)
        (g$6982$1nosrN core-prim . irritants-condition?)
        (g$7028$1nosrN core-prim . implementation-restriction-violation?)
        (g$6938$1nosrN core-prim . error?)
        (g$7000$1nosrN core-prim . condition-who)
        (g$12522$1nosrN core-prim . condition-predicate)
        (g$6896$1nosrN core-prim . condition-message)
        (g$6983$1nosrN core-prim . condition-irritants)
        (g$12521$1nosrN core-prim . condition-accessor)
        (g$12520$1nosrN core-prim . condition)
        (g$6966$1nosrN core-prim . assertion-violation?)
        (g$12519$1nosrN core-prim . condition?)
        (g$12518$1nosrN core-prim . utf32->string)
        (g$12517$1nosrN core-prim . utf16->string)
        (g$12516$1nosrN core-prim . utf8->string)
        (g$12515$1nosrN core-prim . uint-list->bytevector)
        (g$12514$1nosrN core-prim . u8-list->bytevector)
        (g$12513$1nosrN core-prim . string->utf8)
        (g$12512$1nosrN core-prim . string->utf32)
        (g$12511$1nosrN core-prim . string->utf16)
        (g$12510$1nosrN core-prim . sint-list->bytevector)
        (g$6751$1nosrN core-prim . native-endianness)
        (g$12509$1nosrN core-prim . bytevector?)
        (g$12508$1nosrN core-prim . bytevector=?)
        (g$12507$1nosrN core-prim . bytevector-uint-set!)
        (g$12506$1nosrN core-prim . bytevector-uint-ref)
        (g$12505$1nosrN core-prim . bytevector-u8-set!)
        (g$12504$1nosrN core-prim . bytevector-u8-ref)
        (g$6772$1nosrN core-prim . bytevector-u64-set!)
        (g$6768$1nosrN core-prim . bytevector-u64-ref)
        (g$6774$1nosrN core-prim . bytevector-u64-native-set!)
        (g$6770$1nosrN core-prim . bytevector-u64-native-ref)
        (g$6764$1nosrN core-prim . bytevector-u32-set!)
        (g$6760$1nosrN core-prim . bytevector-u32-ref)
        (g$6766$1nosrN core-prim . bytevector-u32-native-set!)
        (g$6762$1nosrN core-prim . bytevector-u32-native-ref)
        (g$6756$1nosrN core-prim . bytevector-u16-set!)
        (g$6752$1nosrN core-prim . bytevector-u16-ref)
        (g$6758$1nosrN core-prim . bytevector-u16-native-set!)
        (g$6754$1nosrN core-prim . bytevector-u16-native-ref)
        (g$12503$1nosrN core-prim . bytevector-sint-set!)
        (g$12502$1nosrN core-prim . bytevector-sint-ref)
        (g$12501$1nosrN core-prim . bytevector-s8-set!)
        (g$12500$1nosrN core-prim . bytevector-s8-ref)
        (g$6773$1nosrN core-prim . bytevector-s64-set!)
        (g$6769$1nosrN core-prim . bytevector-s64-ref)
        (g$6775$1nosrN core-prim . bytevector-s64-native-set!)
        (g$6771$1nosrN core-prim . bytevector-s64-native-ref)
        (g$6765$1nosrN core-prim . bytevector-s32-set!)
        (g$6761$1nosrN core-prim . bytevector-s32-ref)
        (g$6767$1nosrN core-prim . bytevector-s32-native-set!)
        (g$6763$1nosrN core-prim . bytevector-s32-native-ref)
        (g$6757$1nosrN core-prim . bytevector-s16-set!)
        (g$6753$1nosrN core-prim . bytevector-s16-ref)
        (g$6759$1nosrN core-prim . bytevector-s16-native-set!)
        (g$6755$1nosrN core-prim . bytevector-s16-native-ref)
        (g$12499$1nosrN core-prim . bytevector-length)
        (g$12498$1nosrN core-prim . bytevector-ieee-single-set!)
        (g$12497$1nosrN core-prim . bytevector-ieee-single-ref)
        (g$6778$1nosrN core-prim . bytevector-ieee-single-native-set!)
        (g$6776$1nosrN core-prim . bytevector-ieee-single-native-ref)
        (g$12496$1nosrN core-prim . bytevector-ieee-double-set!)
        (g$12495$1nosrN core-prim . bytevector-ieee-double-ref)
        (g$6779$1nosrN core-prim . bytevector-ieee-double-native-set!)
        (g$6777$1nosrN core-prim . bytevector-ieee-double-native-ref)
        (g$12494$1nosrN core-prim . bytevector-fill!)
        (g$12493$1nosrN core-prim . bytevector-copy!)
        (g$12492$1nosrN core-prim . bytevector-copy)
        (g$12491$1nosrN core-prim . bytevector->uint-list)
        (g$12490$1nosrN core-prim . bytevector->u8-list)
        (g$12489$1nosrN core-prim . bytevector->sint-list)
        (g$7494$1nosrN core-prim . no-nans-violation?)
        (g$7480$1nosrN core-prim . no-infinities-violation?)
        (g$7493$1nosrN core-prim . make-no-nans-violation)
        (g$7479$1nosrN core-prim . make-no-infinities-violation)
        (g$12488$1nosrN core-prim . real->flonum)
        (g$12487$1nosrN core-prim . flzero?)
        (g$12486$1nosrN core-prim . fltruncate)
        (g$12485$1nosrN core-prim . fltan)
        (g$12484$1nosrN core-prim . flsqrt)
        (g$12483$1nosrN core-prim . flsin)
        (g$12482$1nosrN core-prim . flround)
        (g$12481$1nosrN core-prim . flpositive?)
        (g$12480$1nosrN core-prim . flonum?)
        (g$12479$1nosrN core-prim . flodd?)
        (g$12478$1nosrN core-prim . flnumerator)
        (g$12477$1nosrN core-prim . flnegative?)
        (g$12476$1nosrN core-prim . flnan?)
        (g$12475$1nosrN core-prim . flmod0)
        (g$12474$1nosrN core-prim . flmod)
        (g$12473$1nosrN core-prim . flmin)
        (g$12472$1nosrN core-prim . flmax)
        (g$12471$1nosrN core-prim . fllog)
        (g$12470$1nosrN core-prim . flinteger?)
        (g$12469$1nosrN core-prim . flinfinite?)
        (g$12468$1nosrN core-prim . flfloor)
        (g$12467$1nosrN core-prim . flfinite?)
        (g$12466$1nosrN core-prim . flexpt)
        (g$12465$1nosrN core-prim . flexp)
        (g$12464$1nosrN core-prim . fleven?)
        (g$12463$1nosrN core-prim . fldiv0-and-mod0)
        (g$12462$1nosrN core-prim . fldiv0)
        (g$12461$1nosrN core-prim . fldiv-and-mod)
        (g$12460$1nosrN core-prim . fldiv)
        (g$12459$1nosrN core-prim . fldenominator)
        (g$12458$1nosrN core-prim . flcos)
        (g$12457$1nosrN core-prim . flceiling)
        (g$12456$1nosrN core-prim . flatan)
        (g$12455$1nosrN core-prim . flasin)
        (g$12454$1nosrN core-prim . flacos)
        (g$12453$1nosrN core-prim . flabs)
        (g$12452$1nosrN core-prim . fl>?)
        (g$12451$1nosrN core-prim . fl>=?)
        (g$12450$1nosrN core-prim . fl=?)
        (g$12449$1nosrN core-prim . fl<?)
        (g$12448$1nosrN core-prim . fl<=?)
        (g$12447$1nosrN core-prim . fl/)
        (g$12446$1nosrN core-prim . fl-)
        (g$12445$1nosrN core-prim . fl+)
        (g$12444$1nosrN core-prim . fl*)
        (g$12443$1nosrN core-prim . fixnum->flonum)
        (g$12442$1nosrN core-prim . fxzero?)
        (g$12441$1nosrN core-prim . fxxor)
        (g$7425$1nosrN core-prim . fxrotate-bit-field)
        (g$12440$1nosrN core-prim . fxreverse-bit-field)
        (g$12439$1nosrN core-prim . fxpositive?)
        (g$12438$1nosrN core-prim . fxodd?)
        (g$12437$1nosrN core-prim . fxnot)
        (g$12436$1nosrN core-prim . fxnegative?)
        (g$12435$1nosrN core-prim . fxmod0)
        (g$12434$1nosrN core-prim . fxmod)
        (g$12433$1nosrN core-prim . fxmin)
        (g$12432$1nosrN core-prim . fxmax)
        (g$12431$1nosrN core-prim . fxlength)
        (g$12430$1nosrN core-prim . fxior)
        (g$7419$1nosrN core-prim . fxif)
        (g$12429$1nosrN core-prim . fxfirst-bit-set)
        (g$12428$1nosrN core-prim . fxeven?)
        (g$12427$1nosrN core-prim . fxdiv0-and-mod0)
        (g$12426$1nosrN core-prim . fxdiv0)
        (g$12425$1nosrN core-prim . fxdiv-and-mod)
        (g$12424$1nosrN core-prim . fxdiv)
        (g$7422$1nosrN core-prim . fxcopy-bit-field)
        (g$7420$1nosrN core-prim . fxcopy-bit)
        (g$12423$1nosrN core-prim . fxbit-set?)
        (g$7421$1nosrN core-prim . fxbit-field)
        (g$12422$1nosrN core-prim . fxbit-count)
        (g$7424$1nosrN core-prim . fxarithmetic-shift-right)
        (g$7423$1nosrN core-prim . fxarithmetic-shift-left)
        (g$12421$1nosrN core-prim . fxarithmetic-shift)
        (g$12420$1nosrN core-prim . fxand)
        (g$12419$1nosrN core-prim . fx>?)
        (g$12418$1nosrN core-prim . fx>=?)
        (g$12417$1nosrN core-prim . fx=?)
        (g$12416$1nosrN core-prim . fx<?)
        (g$12415$1nosrN core-prim . fx<=?)
        (g$12414$1nosrN core-prim . fx-/carry)
        (g$12413$1nosrN core-prim . fx-)
        (g$12412$1nosrN core-prim . fx+/carry)
        (g$12411$1nosrN core-prim . fx+)
        (g$12410$1nosrN core-prim . fx*/carry)
        (g$12409$1nosrN core-prim . fx*)
        (g$12408$1nosrN core-prim . greatest-fixnum)
        (g$12407$1nosrN core-prim . least-fixnum)
        (g$12406$1nosrN core-prim . fixnum-width)
        (g$12405$1nosrN core-prim . fixnum?)
        (g$7377$1nosrN core-prim . bitwise-rotate-bit-field)
        (g$12404$1nosrN core-prim . bitwise-reverse-bit-field)
        (g$12403$1nosrN core-prim . bitwise-length)
        (g$7371$1nosrN core-prim . bitwise-if)
        (g$12402$1nosrN core-prim . bitwise-first-bit-set)
        (g$7374$1nosrN core-prim . bitwise-copy-bit-field)
        (g$7372$1nosrN core-prim . bitwise-copy-bit)
        (g$12401$1nosrN core-prim . bitwise-bit-set?)
        (g$12400$1nosrN core-prim . bitwise-bit-field)
        (g$12399$1nosrN core-prim . bitwise-bit-count)
        (g$12398$1nosrN core-prim . bitwise-xor)
        (g$12397$1nosrN core-prim . bitwise-ior)
        (g$12396$1nosrN core-prim . bitwise-and)
        (g$12395$1nosrN core-prim . bitwise-not)
        (g$7376$1nosrN core-prim . bitwise-arithmetic-shift-right)
        (g$7375$1nosrN core-prim . bitwise-arithmetic-shift-left)
        (g$12394$1nosrN core-prim . bitwise-arithmetic-shift)
        (g$12393$1nosrN core-prim . zero?)
        (g$12392$1nosrN core-prim . vector?)
        (g$12391$1nosrN core-prim . vector-set!)
        (g$12390$1nosrN core-prim . vector-ref)
        (g$12389$1nosrN core-prim . vector-map)
        (g$12388$1nosrN core-prim . vector-length)
        (g$12387$1nosrN core-prim . vector-for-each)
        (g$12386$1nosrN core-prim . vector-fill!)
        (g$12385$1nosrN core-prim . vector->list)
        (g$12384$1nosrN core-prim . vector)
        (g$12383$1nosrN core-prim . values)
        (g$12382$1nosrN core-prim . truncate)
        (g$12381$1nosrN core-prim . tan)
        (g$12380$1nosrN core-prim . symbol?)
        (g$6060$1nosrN core-prim . symbol=?)
        (g$12379$1nosrN core-prim . symbol->string)
        (g$12378$1nosrN core-prim . substring)
        (g$12377$1nosrN core-prim . string?)
        (g$6057$1nosrN core-prim . string>?)
        (g$6059$1nosrN core-prim . string>=?)
        (g$6055$1nosrN core-prim . string=?)
        (g$6056$1nosrN core-prim . string<?)
        (g$6058$1nosrN core-prim . string<=?)
        (g$12376$1nosrN core-prim . string-ref)
        (g$12375$1nosrN core-prim . string-length)
        (g$12374$1nosrN core-prim . string-for-each)
        (g$12373$1nosrN core-prim . string-copy)
        (g$12372$1nosrN core-prim . string-append)
        (g$12371$1nosrN core-prim . string->symbol)
        (g$12370$1nosrN core-prim . string->number)
        (g$12369$1nosrN core-prim . string->list)
        (g$12368$1nosrN core-prim . string)
        (g$12367$1nosrN core-prim . sqrt)
        (g$12366$1nosrN core-prim . sin)
        (g$12365$1nosrN core-prim . round)
        (g$12364$1nosrN core-prim . reverse)
        (g$12363$1nosrN core-prim . real?)
        (g$12362$1nosrN core-prim . real-valued?)
        (g$12361$1nosrN core-prim . real-part)
        (g$6113$1nosrN core-prim . rationalize)
        (g$12360$1nosrN core-prim . rational?)
        (g$12359$1nosrN core-prim . rational-valued?)
        (g$12358$1nosrN core-prim . procedure?)
        (g$12357$1nosrN core-prim . positive?)
        (g$12356$1nosrN core-prim . pair?)
        (g$12355$1nosrN core-prim . odd?)
        (g$12354$1nosrN core-prim . numerator)
        (g$12353$1nosrN core-prim . number?)
        (g$12352$1nosrN core-prim . number->string)
        (g$12351$1nosrN core-prim . null?)
        (g$12350$1nosrN core-prim . not)
        (g$12349$1nosrN core-prim . negative?)
        (g$12348$1nosrN core-prim . nan?)
        (g$12347$1nosrN core-prim . min)
        (g$12346$1nosrN core-prim . max)
        (g$12345$1nosrN core-prim . map)
        (g$12344$1nosrN core-prim . make-vector)
        (g$12343$1nosrN core-prim . make-string)
        (g$12342$1nosrN core-prim . make-rectangular)
        (g$12341$1nosrN core-prim . make-polar)
        (g$12340$1nosrN core-prim . magnitude)
        (g$12339$1nosrN core-prim . log)
        (g$12338$1nosrN core-prim . list?)
        (g$12337$1nosrN core-prim . list-tail)
        (g$12336$1nosrN core-prim . list-ref)
        (g$12335$1nosrN core-prim . list->vector)
        (g$12334$1nosrN core-prim . list->string)
        (g$12333$1nosrN core-prim . list)
        (g$12332$1nosrN core-prim . length)
        (g$12331$1nosrN core-prim . lcm)
        (g$12330$1nosrN core-prim . integer?)
        (g$12329$1nosrN core-prim . integer-valued?)
        (g$12328$1nosrN core-prim . integer->char)
        (g$12327$1nosrN core-prim . infinite?)
        (g$12326$1nosrN core-prim . inexact?)
        (g$12325$1nosrN core-prim . inexact)
        (g$12324$1nosrN core-prim . imag-part)
        (g$12323$1nosrN core-prim . gcd)
        (g$12322$1nosrN core-prim . for-each)
        (g$12321$1nosrN core-prim . floor)
        (g$12320$1nosrN core-prim . finite?)
        (g$12319$1nosrN core-prim . expt)
        (g$12318$1nosrN core-prim . exp)
        (g$12317$1nosrN core-prim . exact?)
        (g$12316$1nosrN core-prim . exact-integer-sqrt)
        (g$12315$1nosrN core-prim . exact)
        (g$12314$1nosrN core-prim . even?)
        (g$12313$1nosrN core-prim . error)
        (g$12312$1nosrN core-prim . eqv?)
        (g$12311$1nosrN core-prim . equal?)
        (g$12310$1nosrN core-prim . eq?)
        (g$12309$1nosrN core-prim . dynamic-wind)
        (g$12308$1nosrN core-prim . div0-and-mod0)
        (g$12307$1nosrN core-prim . mod0)
        (g$12306$1nosrN core-prim . div0)
        (g$12305$1nosrN core-prim . div-and-mod)
        (g$12304$1nosrN core-prim . mod)
        (g$12303$1nosrN core-prim . div)
        (g$12302$1nosrN core-prim . denominator)
        (g$12301$1nosrN core-prim . cos)
        (g$12300$1nosrN core-prim . cons)
        (g$12299$1nosrN core-prim . complex?)
        (g$12298$1nosrN core-prim . char?)
        (g$6110$1nosrN core-prim . char>?)
        (g$6112$1nosrN core-prim . char>=?)
        (g$6108$1nosrN core-prim . char=?)
        (g$6109$1nosrN core-prim . char<?)
        (g$6111$1nosrN core-prim . char<=?)
        (g$12297$1nosrN core-prim . char->integer)
        (g$12296$1nosrN core-prim . ceiling)
        (g$12295$1nosrN core-prim . call-with-values)
        (g$12294$1nosrN core-prim . call/cc)
        (g$12293$1nosrN core-prim . call-with-current-continuation)
        (g$6008$1nosrN core-prim . cddddr)
        (g$6007$1nosrN core-prim . cdddar)
        (g$6006$1nosrN core-prim . cddadr)
        (g$6005$1nosrN core-prim . cddaar)
        (g$6004$1nosrN core-prim . cdaddr)
        (g$6003$1nosrN core-prim . cdadar)
        (g$6002$1nosrN core-prim . cdaadr)
        (g$6001$1nosrN core-prim . cdaaar)
        (g$6000$1nosrN core-prim . cadddr)
        (g$5999$1nosrN core-prim . caddar)
        (g$5998$1nosrN core-prim . cadadr)
        (g$5997$1nosrN core-prim . cadaar)
        (g$5996$1nosrN core-prim . caaddr)
        (g$5995$1nosrN core-prim . caadar)
        (g$5994$1nosrN core-prim . caaadr)
        (g$5993$1nosrN core-prim . caaaar)
        (g$5992$1nosrN core-prim . cdddr)
        (g$5991$1nosrN core-prim . cddar)
        (g$5990$1nosrN core-prim . cdadr)
        (g$5989$1nosrN core-prim . cdaar)
        (g$5988$1nosrN core-prim . caddr)
        (g$5987$1nosrN core-prim . cadar)
        (g$5986$1nosrN core-prim . caadr)
        (g$5985$1nosrN core-prim . caaar)
        (g$5984$1nosrN core-prim . cddr)
        (g$5983$1nosrN core-prim . cdar)
        (g$5982$1nosrN core-prim . cadr)
        (g$5981$1nosrN core-prim . caar)
        (g$12292$1nosrN core-prim . cdr)
        (g$12291$1nosrN core-prim . car)
        (g$12290$1nosrN core-prim . boolean?)
        (g$6061$1nosrN core-prim . boolean=?)
        (g$12289$1nosrN core-prim . atan)
        (g$12288$1nosrN core-prim . assertion-violation)
        (g$12287$1nosrN core-prim . asin)
        (g$12286$1nosrN core-prim . apply)
        (g$12285$1nosrN core-prim . append)
        (g$12284$1nosrN core-prim . angle)
        (g$12283$1nosrN core-prim . acos)
        (g$12282$1nosrN core-prim . abs)
        (g$12281$1nosrN core-prim . /)
        (g$12280$1nosrN core-prim . *)
        (g$12279$1nosrN core-prim . -)
        (g$12278$1nosrN core-prim . +)
        (g$12277$1nosrN core-prim . >=)
        (g$12276$1nosrN core-prim . >)
        (g$12275$1nosrN core-prim . =)
        (g$12274$1nosrN core-prim . <=)
        (g$12273$1nosrN core-prim . <)
        (g$12272$1nosrN core-prim . make-record-printer)
        (g$12271$1nosrN core-prim . eqv-hash)
        (g$12270$1nosrN core-prim . eq-hash)
        (g$12269$1nosrN core-prim . reverse!)
        (g$12268$1nosrN core-prim . deserialize-port)
        (g$12267$1nosrN core-prim . serialize-port)
        (g$7737$1nosrN core-prim . enum-set?)
        (g$7091$1nosrN core-prim . make-promise)
        (g$12105$1nosrN core-prim . load/args)
        (g$7847$1nosrN core-prim . printf)
        (g$7848$1nosrN core-prim . fprintf)
        (g$7849$1nosrN core-prim . format)
        (g$12266$1nosrN core-prim . get-arity)
        (g$12265$1nosrN core-prim . gc-collect)
        (g$12264$1nosrN core-prim . clr-type?)
        (g$12263$1nosrN core-prim . get-clr-type)
        (g$12262$1nosrN core-prim . get-command-line)
        (g$12261$1nosrN core-prim . vector-append)
        (g$12260$1nosrN core-prim . vector-filter)
        (g$12259$1nosrN core-prim . vector-reverse!)
        (g$12258$1nosrN core-prim . vector-contains?)
        (g$12257$1nosrN core-prim . vector-index-of)
        (g$12256$1nosrN core-prim . vector-copy)
        (g$12255$1nosrN core-prim . vector-binary-search)
        (g$12254$1nosrN core-prim . get-output-string)
        (g$12253$1nosrN core-prim . open-output-string)
        (g$12252$1nosrN core-prim . open-input-string)
        (g$12251$1nosrN core-prim . string-ci-compare)
        (g$12250$1nosrN core-prim . string-compare)
        (g$12249$1nosrN core-prim . string-format)
        (g$12102$1nosrN core-prim . trace-printer)
        (g$12248$1nosrN core-prim . make-traced-procedure)
        (g$7869$1nosrN core-prim . make-traced-macro)
        (g$9157$1nosrN core-prim . assertion-error)
        (g$12247$1nosrN core-prim . pmap)
        (g$12246$1nosrN core-prim . time-it)
        (g$7874$1nosrN core-prim . make-parameter)
        (g$12245$1nosrN core-prim . library-locator)
        (g$12244$1nosrN core-prim . get-library-paths)
        (g$9137$1nosrN core-prim . environment-bindings)
        (g$9136$1nosrN core-prim . environment-symbols)
        (g$9135$1nosrN core-prim . interaction-environment-symbols)
        (g$8304$1nosrN core-prim . library-path)
        (g$8305$1nosrN core-prim . library-extensions)
        (g$8325$1nosrN core-prim . installed-libraries)
        (g$9143$1nosrN core-prim . expand)
        (g$12243$1nosrN $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12242$1nosrN $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12241$1nosrN $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12240$1nosrN $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12239$1nosrN $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12238$1nosrN
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12237$1nosrN
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12236$1nosrN
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12235$1nosrN
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12234$1nosrN $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12233$1nosrN
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12232$1nosrN $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12231$1nosrN $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12230$1nosrN $core-rtd &i/o-rtd &i/o-rcd)
        (g$12229$1nosrN $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12228$1nosrN $core-rtd &undefined-rtd &undefined-rcd)
        (g$12227$1nosrN $core-rtd &syntax-rtd &syntax-rcd)
        (g$12226$1nosrN $core-rtd &lexical-rtd &lexical-rcd)
        (g$12225$1nosrN
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12224$1nosrN $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12223$1nosrN $core-rtd &who-rtd &who-rcd)
        (g$12222$1nosrN $core-rtd &irritants-rtd &irritants-rcd)
        (g$12221$1nosrN $core-rtd &assertion-rtd &assertion-rcd)
        (g$12220$1nosrN $core-rtd &violation-rtd &violation-rcd)
        (g$12219$1nosrN $core-rtd &error-rtd &error-rcd)
        (g$12218$1nosrN $core-rtd &serious-rtd &serious-rcd)
        (g$12217$1nosrN $core-rtd &warning-rtd &warning-rcd)
        (g$12216$1nosrN $core-rtd &message-rtd &message-rcd)
        (g$12215$1nosrN $core-rtd &condition-rtd &condition-rcd)
        (g$12214$1nosrN macro . define-condition-type)
        (g$12213$1nosrN macro . define-enumeration)
        (g$12212$1nosrN macro . define-record-type)
        (g$12211$1nosrN macro . parent-rtd)
        (g$12210$1nosrN macro . nongenerative)
        (g$12209$1nosrN macro . opaque)
        (g$12208$1nosrN macro . sealed)
        (g$12207$1nosrN macro . protocol)
        (g$12206$1nosrN macro . parent)
        (g$12205$1nosrN macro . immutable)
        (g$12204$1nosrN macro . mutable)
        (g$12203$1nosrN macro . fields)
        (g$12202$1nosrN macro . error-handling-mode)
        (g$12201$1nosrN macro . file-options)
        (g$12200$1nosrN macro . buffer-mode)
        (g$12199$1nosrN macro . eol-style)
        (g$12198$1nosrN macro . guard)
        (g$12197$1nosrN macro . trace-letrec-syntax)
        (g$12196$1nosrN macro . trace-let-syntax)
        (g$12195$1nosrN macro . trace-define-syntax)
        (g$12194$1nosrN macro . trace-define)
        (g$12193$1nosrN macro . trace-lambda)
        (g$12192$1nosrN macro . unsyntax-splicing)
        (g$12191$1nosrN macro . unsyntax)
        (g$12190$1nosrN macro . unquote-splicing)
        (g$12189$1nosrN macro . unquote)
        (g$12188$1nosrN macro . _)
        (g$12187$1nosrN macro . else)
        (g$12186$1nosrN macro . =>)
        (g$12185$1nosrN macro . ...)
        (g$12184$1nosrN macro . assert)
        (g$12183$1nosrN macro . endianness)
        (g$12182$1nosrN macro . delay)
        (g$12181$1nosrN macro . time)
        (g$12180$1nosrN macro . or)
        (g$12179$1nosrN macro . and)
        (g$12178$1nosrN macro . do)
        (g$12177$1nosrN macro . cond)
        (g$12176$1nosrN macro . let*)
        (g$12175$1nosrN macro . let)
        (g$12174$1nosrN macro . identifier-syntax)
        (g$12173$1nosrN macro . with-syntax)
        (g$12172$1nosrN macro . quasisyntax)
        (g$12171$1nosrN macro . quasiquote)
        (g$12170$1nosrN macro . syntax-rules)
        (g$12169$1nosrN macro . include-into)
        (g$12168$1nosrN macro . include)
        (g$12167$1nosrN macro . define-struct)
        (g$12166$1nosrN macro . let-values)
        (g$12165$1nosrN macro . let*-values)
        (g$12164$1nosrN core-macro . record-constructor-descriptor)
        (g$12163$1nosrN core-macro . record-type-descriptor)
        (g$12162$1nosrN core-macro . fluid-let-syntax)
        (g$12161$1nosrN macro . case)
        (g$12160$1nosrN macro . parameterize)
        (g$12159$1nosrN macro . unless)
        (g$12158$1nosrN macro . when)
        (g$12157$1nosrN core-macro . if)
        (g$12156$1nosrN core-macro . letrec*)
        (g$12155$1nosrN core-macro . letrec)
        (g$12154$1nosrN core-macro . type-descriptor)
        (g$12153$1nosrN core-macro . case-lambda)
        (g$12152$1nosrN core-macro . lambda)
        (g$12151$1nosrN core-macro . syntax)
        (g$12150$1nosrN core-macro . syntax-case)
        (g$12149$1nosrN core-macro . quote)
        (g$12148$1nosrN core-macro . foreign-call)
        (g$12147$1nosrN letrec-syntax)
        (g$12146$1nosrN let-syntax)
        (g$12145$1nosrN set!)
        (g$12144$1nosrN import)
        (g$12143$1nosrN library)
        (g$12142$1nosrN begin)
        (g$12141$1nosrN module)
        (g$12140$1nosrN define-syntax)
        (g$12139$1nosrN define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7383$1nosrN
      'g$12796$1nosrN
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12675$1nosrN)
        (eval-core . g$12674$1nosrN)
        (set-symbol-value! . g$12673$1nosrN)
        (symbol-value . g$12672$1nosrN)
        (gensym . g$12670$1nosrN)
        (void . g$12669$1nosrN))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11413$1nosrN
     g$trace-printer$11453$1nosrN
     (g$make-parameter$6838$1nosrN write))
   (g$command-line$11414$1nosrN
     g$command-line$11454$1nosrN
     (g$make-parameter$6838$1nosrN (get-command-line)))
   (g$local-library-path$11415$1nosrN
     g$local-library-path$11455$1nosrN
     (case-lambda
       ((g$filename$11426$1nosrN)
        (cons
          (g$get-directory-name$5584$1nosrN g$filename$11426$1nosrN)
          (g$library-path$7367$1nosrN)))))
   (g$load/args$11416$1nosrN
     g$load/args$11456$1nosrN
     (case-lambda
       ((g$filename$11427$1nosrN . g$args$11428$1nosrN)
        (begin
          (apply
            g$load-r6rs-top-level$11423$1nosrN
            g$filename$11427$1nosrN
            'load
            g$args$11428$1nosrN)
          (void)))))
   (g$load$11417$1nosrN
     g$load$11457$1nosrN
     (case-lambda
       ((g$filename$11429$1nosrN)
        (begin
          (apply
            g$load-r6rs-top-level$11423$1nosrN
            g$filename$11429$1nosrN
            'load
            (cdr (g$command-line$11414$1nosrN)))
          (void)))))
   (g$ironscheme-build$11418$1nosrN
     g$ironscheme-build$11458$1nosrN
     (case-lambda (() (g$load$11417$1nosrN '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11419$1nosrN
     g$eval-top-level$11459$1nosrN
     (case-lambda
       ((g$x$11430$1nosrN)
        (g$eval$11388$1nosrN
          g$x$11430$1nosrN
          (g$interaction-environment$11411$1nosrN)))))
   (g$compile-system-libraries$11420$1nosrN
     g$compile-system-libraries$11460$1nosrN
     (case-lambda
       (()
        (g$eval-top-level$11419$1nosrN
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11421$1nosrN
     g$compile$11461$1nosrN
     (case-lambda
       ((g$filename$11431$1nosrN)
        (g$load-r6rs-top-level$11423$1nosrN g$filename$11431$1nosrN 'compile))))
   (g$compile->closure$11422$1nosrN
     g$compile->closure$11462$1nosrN
     (case-lambda
       ((g$filename$11432$1nosrN)
        (g$load-r6rs-top-level$11423$1nosrN g$filename$11432$1nosrN 'closure))))
   (g$load-r6rs-top-level$11423$1nosrN
     g$load-r6rs-top-level$11463$1nosrN
     (case-lambda
       ((g$filename$11433$1nosrN g$how$11434$1nosrN . g$args$11435$1nosrN)
        ((case-lambda
           ((g$library-path$11438$1nosrN g$library-path$11439$1nosrN)
            ((case-lambda
               ((g$swap$11440$1nosrN)
                (dynamic-wind
                  g$swap$11440$1nosrN
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11441$1nosrN)
                         ((case-lambda
                            ((g$t$11442$1nosrN)
                             (if (memv g$t$11442$1nosrN '(closure))
                               (g$pre-compile-r6rs-top-level$11410$1nosrN
                                 g$x*$11441$1nosrN)
                               (if (memv g$t$11442$1nosrN '(load))
                                 ((case-lambda
                                    ((g$command-line$11445$1nosrN
                                       g$command-line$11446$1nosrN)
                                     ((case-lambda
                                        ((g$swap$11447$1nosrN)
                                         (dynamic-wind
                                           g$swap$11447$1nosrN
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11409$1nosrN
                                                 g$x*$11441$1nosrN))))
                                           g$swap$11447$1nosrN)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11448$1nosrN)
                                             (begin
                                               (g$command-line$11445$1nosrN
                                                 g$command-line$11446$1nosrN)
                                               (set! g$command-line$11446$1nosrN
                                                 g$t$11448$1nosrN))))
                                          (g$command-line$11445$1nosrN)))))))
                                  g$command-line$11414$1nosrN
                                  (cons
                                    g$filename$11433$1nosrN
                                    (map (case-lambda
                                           ((g$x$11449$1nosrN)
                                            (g$format$6753$1nosrN
                                              '"~a"
                                              g$x$11449$1nosrN)))
                                         g$args$11435$1nosrN)))
                                 (if (memv g$t$11442$1nosrN '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11409$1nosrN
                                       g$x*$11441$1nosrN)
                                     (g$serialize-all$7371$1nosrN
                                       serialize-library
                                       g$compile-core-expr$7085$1nosrN))
                                   (if '#f '#f (void)))))))
                          g$how$11434$1nosrN)))
                      (g$with-input-from-file$6581$1nosrN
                        g$filename$11433$1nosrN
                        (case-lambda
                          (()
                           ((letrec ((g$f$11450$1nosrN
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11451$1nosrN)
                                              (if (eof-object? g$x$11451$1nosrN)
                                                '()
                                                (cons
                                                  g$x$11451$1nosrN
                                                  (g$f$11450$1nosrN)))))
                                           (read-annotated))))))
                              g$f$11450$1nosrN))))))))
                  g$swap$11440$1nosrN)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11452$1nosrN)
                    (begin
                      (g$library-path$11438$1nosrN g$library-path$11439$1nosrN)
                      (set! g$library-path$11439$1nosrN g$t$11452$1nosrN))))
                 (g$library-path$11438$1nosrN)))))))
         g$library-path$7367$1nosrN
         (g$local-library-path$11415$1nosrN g$filename$11433$1nosrN)))))
   (g$fo$11424$1nosrN
     g$fo$11464$1nosrN
     (g$make-enumeration$6715$1nosrN '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7372$1nosrN
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11425$1nosrN)
         (if (g$serious-condition?$5967$1nosrN g$ex$11425$1nosrN)
           (raise g$ex$11425$1nosrN)
           (begin (display g$ex$11425$1nosrN) (newline))))))
    (set-symbol-value! 'load g$load$11417$1nosrN)
    (set-symbol-value! 'compile g$compile$11421$1nosrN)
    (set-symbol-value! 'compile->closure g$compile->closure$11422$1nosrN)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11419$1nosrN)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11379$1nosrN)
    (set-symbol-value! 'expanded2core g$expanded->core$7084$1nosrN)
    (set-symbol-value! 'trace-printer g$trace-printer$11413$1nosrN)
    (g$file-options-constructor$6839$1nosrN
      (g$enum-set-constructor$6718$1nosrN g$fo$11424$1nosrN))
    (g$library-path$7367$1nosrN (get-library-paths))))

